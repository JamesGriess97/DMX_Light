

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 01 00:30:28 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	intentry,global,class=CODE,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,delta=2
   108                           	dabs	1,0xCA0,32
   109                           	dabs	1,0xC20,80
   110                           	dabs	1,0xBA0,80
   111                           	dabs	1,0xB20,80
   112                           	dabs	1,0xAA0,80
   113                           	dabs	1,0xA20,80
   114                           	dabs	1,0x9A0,80
   115                           	dabs	1,0x96F,1
   116                           	dabs	1,0x25EF,0,_dmxData
   117                           	dabs	1,0x7E,2
   118  0000                     
   119                           ; Version 2.05
   120                           ; Generated 20/12/2018 GMT
   121                           ; 
   122                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC16F18446 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  008C                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  010F                     	;# 
   208  0110                     	;# 
   209  0111                     	;# 
   210  0112                     	;# 
   211  0113                     	;# 
   212  0114                     	;# 
   213  0115                     	;# 
   214  0116                     	;# 
   215  0117                     	;# 
   216  0118                     	;# 
   217  0119                     	;# 
   218  0119                     	;# 
   219  0119                     	;# 
   220  011A                     	;# 
   221  011A                     	;# 
   222  011A                     	;# 
   223  011B                     	;# 
   224  011B                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011C                     	;# 
   229  011C                     	;# 
   230  011C                     	;# 
   231  011D                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  011E                     	;# 
   235  011E                     	;# 
   236  011E                     	;# 
   237  011F                     	;# 
   238  011F                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  018E                     	;# 
   245  018F                     	;# 
   246  0190                     	;# 
   247  0191                     	;# 
   248  0192                     	;# 
   249  0196                     	;# 
   250  0197                     	;# 
   251  0198                     	;# 
   252  0199                     	;# 
   253  019A                     	;# 
   254  019B                     	;# 
   255  019C                     	;# 
   256  020C                     	;# 
   257  020D                     	;# 
   258  020E                     	;# 
   259  020E                     	;# 
   260  020F                     	;# 
   261  020F                     	;# 
   262  0210                     	;# 
   263  0210                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0216                     	;# 
   273  0216                     	;# 
   274  0217                     	;# 
   275  0217                     	;# 
   276  0218                     	;# 
   277  0219                     	;# 
   278  021A                     	;# 
   279  021A                     	;# 
   280  021B                     	;# 
   281  021B                     	;# 
   282  021C                     	;# 
   283  021C                     	;# 
   284  021D                     	;# 
   285  021D                     	;# 
   286  021E                     	;# 
   287  021F                     	;# 
   288  028C                     	;# 
   289  028C                     	;# 
   290  028D                     	;# 
   291  028D                     	;# 
   292  028E                     	;# 
   293  028F                     	;# 
   294  0290                     	;# 
   295  0291                     	;# 
   296  0292                     	;# 
   297  0292                     	;# 
   298  0293                     	;# 
   299  0293                     	;# 
   300  0294                     	;# 
   301  0295                     	;# 
   302  0296                     	;# 
   303  0297                     	;# 
   304  0298                     	;# 
   305  0298                     	;# 
   306  0299                     	;# 
   307  0299                     	;# 
   308  029A                     	;# 
   309  029B                     	;# 
   310  029C                     	;# 
   311  029D                     	;# 
   312  029F                     	;# 
   313  030C                     	;# 
   314  030C                     	;# 
   315  030D                     	;# 
   316  030E                     	;# 
   317  030F                     	;# 
   318  0310                     	;# 
   319  0310                     	;# 
   320  0311                     	;# 
   321  0312                     	;# 
   322  0313                     	;# 
   323  0314                     	;# 
   324  0314                     	;# 
   325  0315                     	;# 
   326  0316                     	;# 
   327  0317                     	;# 
   328  0318                     	;# 
   329  0318                     	;# 
   330  0319                     	;# 
   331  031A                     	;# 
   332  031B                     	;# 
   333  038C                     	;# 
   334  038C                     	;# 
   335  038D                     	;# 
   336  038E                     	;# 
   337  0390                     	;# 
   338  0390                     	;# 
   339  0391                     	;# 
   340  0392                     	;# 
   341  048C                     	;# 
   342  048C                     	;# 
   343  048D                     	;# 
   344  048E                     	;# 
   345  048F                     	;# 
   346  048F                     	;# 
   347  0490                     	;# 
   348  0491                     	;# 
   349  0492                     	;# 
   350  0492                     	;# 
   351  0493                     	;# 
   352  0494                     	;# 
   353  0495                     	;# 
   354  0495                     	;# 
   355  0496                     	;# 
   356  0497                     	;# 
   357  0498                     	;# 
   358  0499                     	;# 
   359  049A                     	;# 
   360  049B                     	;# 
   361  049C                     	;# 
   362  049D                     	;# 
   363  058C                     	;# 
   364  058C                     	;# 
   365  058D                     	;# 
   366  058E                     	;# 
   367  058F                     	;# 
   368  058F                     	;# 
   369  0590                     	;# 
   370  0591                     	;# 
   371  0592                     	;# 
   372  0593                     	;# 
   373  059C                     	;# 
   374  059C                     	;# 
   375  059D                     	;# 
   376  059D                     	;# 
   377  059E                     	;# 
   378  059F                     	;# 
   379  060C                     	;# 
   380  060C                     	;# 
   381  060D                     	;# 
   382  060D                     	;# 
   383  060E                     	;# 
   384  060F                     	;# 
   385  0610                     	;# 
   386  0611                     	;# 
   387  0612                     	;# 
   388  0613                     	;# 
   389  0614                     	;# 
   390  0616                     	;# 
   391  0616                     	;# 
   392  0617                     	;# 
   393  0617                     	;# 
   394  0618                     	;# 
   395  0619                     	;# 
   396  061A                     	;# 
   397  061B                     	;# 
   398  061C                     	;# 
   399  061D                     	;# 
   400  061E                     	;# 
   401  070C                     	;# 
   402  070D                     	;# 
   403  070E                     	;# 
   404  070F                     	;# 
   405  0710                     	;# 
   406  0711                     	;# 
   407  0712                     	;# 
   408  0713                     	;# 
   409  0714                     	;# 
   410  0716                     	;# 
   411  0717                     	;# 
   412  0718                     	;# 
   413  0719                     	;# 
   414  071A                     	;# 
   415  071B                     	;# 
   416  071C                     	;# 
   417  071D                     	;# 
   418  071E                     	;# 
   419  0796                     	;# 
   420  0797                     	;# 
   421  0798                     	;# 
   422  0799                     	;# 
   423  079A                     	;# 
   424  079B                     	;# 
   425  079C                     	;# 
   426  079D                     	;# 
   427  080C                     	;# 
   428  080D                     	;# 
   429  080E                     	;# 
   430  080F                     	;# 
   431  0810                     	;# 
   432  0811                     	;# 
   433  0812                     	;# 
   434  0813                     	;# 
   435  0814                     	;# 
   436  081A                     	;# 
   437  081A                     	;# 
   438  081B                     	;# 
   439  081C                     	;# 
   440  081C                     	;# 
   441  081D                     	;# 
   442  081E                     	;# 
   443  081F                     	;# 
   444  088C                     	;# 
   445  088D                     	;# 
   446  088E                     	;# 
   447  088F                     	;# 
   448  0890                     	;# 
   449  0891                     	;# 
   450  0892                     	;# 
   451  0893                     	;# 
   452  0895                     	;# 
   453  0896                     	;# 
   454  0897                     	;# 
   455  0898                     	;# 
   456  0899                     	;# 
   457  089A                     	;# 
   458  089B                     	;# 
   459  090C                     	;# 
   460  090E                     	;# 
   461  090F                     	;# 
   462  091F                     	;# 
   463  098F                     	;# 
   464  098F                     	;# 
   465  0990                     	;# 
   466  0991                     	;# 
   467  0992                     	;# 
   468  0993                     	;# 
   469  0994                     	;# 
   470  0995                     	;# 
   471  0996                     	;# 
   472  0997                     	;# 
   473  1E0F                     	;# 
   474  1E10                     	;# 
   475  1E11                     	;# 
   476  1E12                     	;# 
   477  1E13                     	;# 
   478  1E14                     	;# 
   479  1E15                     	;# 
   480  1E16                     	;# 
   481  1E17                     	;# 
   482  1E18                     	;# 
   483  1E19                     	;# 
   484  1E1A                     	;# 
   485  1E1B                     	;# 
   486  1E1C                     	;# 
   487  1E1D                     	;# 
   488  1E1E                     	;# 
   489  1E1F                     	;# 
   490  1E20                     	;# 
   491  1E21                     	;# 
   492  1E22                     	;# 
   493  1E23                     	;# 
   494  1E24                     	;# 
   495  1E25                     	;# 
   496  1E26                     	;# 
   497  1E27                     	;# 
   498  1E28                     	;# 
   499  1E29                     	;# 
   500  1E2A                     	;# 
   501  1E2B                     	;# 
   502  1E2C                     	;# 
   503  1E2D                     	;# 
   504  1E2E                     	;# 
   505  1E2F                     	;# 
   506  1E30                     	;# 
   507  1E31                     	;# 
   508  1E32                     	;# 
   509  1E33                     	;# 
   510  1E34                     	;# 
   511  1E35                     	;# 
   512  1E36                     	;# 
   513  1E37                     	;# 
   514  1E8F                     	;# 
   515  1E90                     	;# 
   516  1E91                     	;# 
   517  1E92                     	;# 
   518  1E93                     	;# 
   519  1E94                     	;# 
   520  1E95                     	;# 
   521  1E96                     	;# 
   522  1E97                     	;# 
   523  1E9C                     	;# 
   524  1E9D                     	;# 
   525  1E9E                     	;# 
   526  1EA1                     	;# 
   527  1EA2                     	;# 
   528  1EA3                     	;# 
   529  1EA4                     	;# 
   530  1EA9                     	;# 
   531  1EAA                     	;# 
   532  1EB1                     	;# 
   533  1EB2                     	;# 
   534  1EB8                     	;# 
   535  1EB9                     	;# 
   536  1EBA                     	;# 
   537  1EBB                     	;# 
   538  1EBC                     	;# 
   539  1EBD                     	;# 
   540  1EBE                     	;# 
   541  1EC3                     	;# 
   542  1EC5                     	;# 
   543  1EC6                     	;# 
   544  1EC7                     	;# 
   545  1EC8                     	;# 
   546  1EC9                     	;# 
   547  1ECA                     	;# 
   548  1ECB                     	;# 
   549  1ECB                     	;# 
   550  1ECB                     	;# 
   551  1ECC                     	;# 
   552  1ECC                     	;# 
   553  1ECC                     	;# 
   554  1F10                     	;# 
   555  1F11                     	;# 
   556  1F12                     	;# 
   557  1F14                     	;# 
   558  1F15                     	;# 
   559  1F1C                     	;# 
   560  1F1D                     	;# 
   561  1F1E                     	;# 
   562  1F1F                     	;# 
   563  1F20                     	;# 
   564  1F21                     	;# 
   565  1F22                     	;# 
   566  1F23                     	;# 
   567  1F24                     	;# 
   568  1F25                     	;# 
   569  1F26                     	;# 
   570  1F27                     	;# 
   571  1F38                     	;# 
   572  1F39                     	;# 
   573  1F3A                     	;# 
   574  1F3B                     	;# 
   575  1F3C                     	;# 
   576  1F3D                     	;# 
   577  1F3E                     	;# 
   578  1F3F                     	;# 
   579  1F43                     	;# 
   580  1F44                     	;# 
   581  1F45                     	;# 
   582  1F46                     	;# 
   583  1F47                     	;# 
   584  1F48                     	;# 
   585  1F49                     	;# 
   586  1F4A                     	;# 
   587  1F4E                     	;# 
   588  1F4F                     	;# 
   589  1F50                     	;# 
   590  1F51                     	;# 
   591  1F52                     	;# 
   592  1F53                     	;# 
   593  1F54                     	;# 
   594  1F55                     	;# 
   595  1FE4                     	;# 
   596  1FE5                     	;# 
   597  1FE6                     	;# 
   598  1FE7                     	;# 
   599  1FE8                     	;# 
   600  1FE8                     	;# 
   601  1FE9                     	;# 
   602  1FEA                     	;# 
   603  1FEB                     	;# 
   604  1FED                     	;# 
   605  1FEE                     	;# 
   606  1FEF                     	;# 
   607  0000                     	;# 
   608  0001                     	;# 
   609  0002                     	;# 
   610  0003                     	;# 
   611  0004                     	;# 
   612  0005                     	;# 
   613  0006                     	;# 
   614  0007                     	;# 
   615  0008                     	;# 
   616  0009                     	;# 
   617  000A                     	;# 
   618  000B                     	;# 
   619  000C                     	;# 
   620  000D                     	;# 
   621  000E                     	;# 
   622  0012                     	;# 
   623  0013                     	;# 
   624  0014                     	;# 
   625  0018                     	;# 
   626  0019                     	;# 
   627  001A                     	;# 
   628  008C                     	;# 
   629  008C                     	;# 
   630  008D                     	;# 
   631  008E                     	;# 
   632  008E                     	;# 
   633  008F                     	;# 
   634  0090                     	;# 
   635  0090                     	;# 
   636  0091                     	;# 
   637  0092                     	;# 
   638  0092                     	;# 
   639  0093                     	;# 
   640  0094                     	;# 
   641  0094                     	;# 
   642  0095                     	;# 
   643  0096                     	;# 
   644  0096                     	;# 
   645  0097                     	;# 
   646  0098                     	;# 
   647  0099                     	;# 
   648  009A                     	;# 
   649  009B                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009D                     	;# 
   654  009E                     	;# 
   655  009F                     	;# 
   656  010C                     	;# 
   657  010C                     	;# 
   658  010D                     	;# 
   659  010E                     	;# 
   660  010F                     	;# 
   661  010F                     	;# 
   662  0110                     	;# 
   663  0111                     	;# 
   664  0112                     	;# 
   665  0113                     	;# 
   666  0114                     	;# 
   667  0115                     	;# 
   668  0116                     	;# 
   669  0117                     	;# 
   670  0118                     	;# 
   671  0119                     	;# 
   672  0119                     	;# 
   673  0119                     	;# 
   674  011A                     	;# 
   675  011A                     	;# 
   676  011A                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011B                     	;# 
   682  011C                     	;# 
   683  011C                     	;# 
   684  011C                     	;# 
   685  011D                     	;# 
   686  011D                     	;# 
   687  011D                     	;# 
   688  011E                     	;# 
   689  011E                     	;# 
   690  011E                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  011F                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  018E                     	;# 
   699  018F                     	;# 
   700  0190                     	;# 
   701  0191                     	;# 
   702  0192                     	;# 
   703  0196                     	;# 
   704  0197                     	;# 
   705  0198                     	;# 
   706  0199                     	;# 
   707  019A                     	;# 
   708  019B                     	;# 
   709  019C                     	;# 
   710  020C                     	;# 
   711  020D                     	;# 
   712  020E                     	;# 
   713  020E                     	;# 
   714  020F                     	;# 
   715  020F                     	;# 
   716  0210                     	;# 
   717  0210                     	;# 
   718  0211                     	;# 
   719  0211                     	;# 
   720  0212                     	;# 
   721  0213                     	;# 
   722  0214                     	;# 
   723  0214                     	;# 
   724  0215                     	;# 
   725  0215                     	;# 
   726  0216                     	;# 
   727  0216                     	;# 
   728  0217                     	;# 
   729  0217                     	;# 
   730  0218                     	;# 
   731  0219                     	;# 
   732  021A                     	;# 
   733  021A                     	;# 
   734  021B                     	;# 
   735  021B                     	;# 
   736  021C                     	;# 
   737  021C                     	;# 
   738  021D                     	;# 
   739  021D                     	;# 
   740  021E                     	;# 
   741  021F                     	;# 
   742  028C                     	;# 
   743  028C                     	;# 
   744  028D                     	;# 
   745  028D                     	;# 
   746  028E                     	;# 
   747  028F                     	;# 
   748  0290                     	;# 
   749  0291                     	;# 
   750  0292                     	;# 
   751  0292                     	;# 
   752  0293                     	;# 
   753  0293                     	;# 
   754  0294                     	;# 
   755  0295                     	;# 
   756  0296                     	;# 
   757  0297                     	;# 
   758  0298                     	;# 
   759  0298                     	;# 
   760  0299                     	;# 
   761  0299                     	;# 
   762  029A                     	;# 
   763  029B                     	;# 
   764  029C                     	;# 
   765  029D                     	;# 
   766  029F                     	;# 
   767  030C                     	;# 
   768  030C                     	;# 
   769  030D                     	;# 
   770  030E                     	;# 
   771  030F                     	;# 
   772  0310                     	;# 
   773  0310                     	;# 
   774  0311                     	;# 
   775  0312                     	;# 
   776  0313                     	;# 
   777  0314                     	;# 
   778  0314                     	;# 
   779  0315                     	;# 
   780  0316                     	;# 
   781  0317                     	;# 
   782  0318                     	;# 
   783  0318                     	;# 
   784  0319                     	;# 
   785  031A                     	;# 
   786  031B                     	;# 
   787  038C                     	;# 
   788  038C                     	;# 
   789  038D                     	;# 
   790  038E                     	;# 
   791  0390                     	;# 
   792  0390                     	;# 
   793  0391                     	;# 
   794  0392                     	;# 
   795  048C                     	;# 
   796  048C                     	;# 
   797  048D                     	;# 
   798  048E                     	;# 
   799  048F                     	;# 
   800  048F                     	;# 
   801  0490                     	;# 
   802  0491                     	;# 
   803  0492                     	;# 
   804  0492                     	;# 
   805  0493                     	;# 
   806  0494                     	;# 
   807  0495                     	;# 
   808  0495                     	;# 
   809  0496                     	;# 
   810  0497                     	;# 
   811  0498                     	;# 
   812  0499                     	;# 
   813  049A                     	;# 
   814  049B                     	;# 
   815  049C                     	;# 
   816  049D                     	;# 
   817  058C                     	;# 
   818  058C                     	;# 
   819  058D                     	;# 
   820  058E                     	;# 
   821  058F                     	;# 
   822  058F                     	;# 
   823  0590                     	;# 
   824  0591                     	;# 
   825  0592                     	;# 
   826  0593                     	;# 
   827  059C                     	;# 
   828  059C                     	;# 
   829  059D                     	;# 
   830  059D                     	;# 
   831  059E                     	;# 
   832  059F                     	;# 
   833  060C                     	;# 
   834  060C                     	;# 
   835  060D                     	;# 
   836  060D                     	;# 
   837  060E                     	;# 
   838  060F                     	;# 
   839  0610                     	;# 
   840  0611                     	;# 
   841  0612                     	;# 
   842  0613                     	;# 
   843  0614                     	;# 
   844  0616                     	;# 
   845  0616                     	;# 
   846  0617                     	;# 
   847  0617                     	;# 
   848  0618                     	;# 
   849  0619                     	;# 
   850  061A                     	;# 
   851  061B                     	;# 
   852  061C                     	;# 
   853  061D                     	;# 
   854  061E                     	;# 
   855  070C                     	;# 
   856  070D                     	;# 
   857  070E                     	;# 
   858  070F                     	;# 
   859  0710                     	;# 
   860  0711                     	;# 
   861  0712                     	;# 
   862  0713                     	;# 
   863  0714                     	;# 
   864  0716                     	;# 
   865  0717                     	;# 
   866  0718                     	;# 
   867  0719                     	;# 
   868  071A                     	;# 
   869  071B                     	;# 
   870  071C                     	;# 
   871  071D                     	;# 
   872  071E                     	;# 
   873  0796                     	;# 
   874  0797                     	;# 
   875  0798                     	;# 
   876  0799                     	;# 
   877  079A                     	;# 
   878  079B                     	;# 
   879  079C                     	;# 
   880  079D                     	;# 
   881  080C                     	;# 
   882  080D                     	;# 
   883  080E                     	;# 
   884  080F                     	;# 
   885  0810                     	;# 
   886  0811                     	;# 
   887  0812                     	;# 
   888  0813                     	;# 
   889  0814                     	;# 
   890  081A                     	;# 
   891  081A                     	;# 
   892  081B                     	;# 
   893  081C                     	;# 
   894  081C                     	;# 
   895  081D                     	;# 
   896  081E                     	;# 
   897  081F                     	;# 
   898  088C                     	;# 
   899  088D                     	;# 
   900  088E                     	;# 
   901  088F                     	;# 
   902  0890                     	;# 
   903  0891                     	;# 
   904  0892                     	;# 
   905  0893                     	;# 
   906  0895                     	;# 
   907  0896                     	;# 
   908  0897                     	;# 
   909  0898                     	;# 
   910  0899                     	;# 
   911  089A                     	;# 
   912  089B                     	;# 
   913  090C                     	;# 
   914  090E                     	;# 
   915  090F                     	;# 
   916  091F                     	;# 
   917  098F                     	;# 
   918  098F                     	;# 
   919  0990                     	;# 
   920  0991                     	;# 
   921  0992                     	;# 
   922  0993                     	;# 
   923  0994                     	;# 
   924  0995                     	;# 
   925  0996                     	;# 
   926  0997                     	;# 
   927  1E0F                     	;# 
   928  1E10                     	;# 
   929  1E11                     	;# 
   930  1E12                     	;# 
   931  1E13                     	;# 
   932  1E14                     	;# 
   933  1E15                     	;# 
   934  1E16                     	;# 
   935  1E17                     	;# 
   936  1E18                     	;# 
   937  1E19                     	;# 
   938  1E1A                     	;# 
   939  1E1B                     	;# 
   940  1E1C                     	;# 
   941  1E1D                     	;# 
   942  1E1E                     	;# 
   943  1E1F                     	;# 
   944  1E20                     	;# 
   945  1E21                     	;# 
   946  1E22                     	;# 
   947  1E23                     	;# 
   948  1E24                     	;# 
   949  1E25                     	;# 
   950  1E26                     	;# 
   951  1E27                     	;# 
   952  1E28                     	;# 
   953  1E29                     	;# 
   954  1E2A                     	;# 
   955  1E2B                     	;# 
   956  1E2C                     	;# 
   957  1E2D                     	;# 
   958  1E2E                     	;# 
   959  1E2F                     	;# 
   960  1E30                     	;# 
   961  1E31                     	;# 
   962  1E32                     	;# 
   963  1E33                     	;# 
   964  1E34                     	;# 
   965  1E35                     	;# 
   966  1E36                     	;# 
   967  1E37                     	;# 
   968  1E8F                     	;# 
   969  1E90                     	;# 
   970  1E91                     	;# 
   971  1E92                     	;# 
   972  1E93                     	;# 
   973  1E94                     	;# 
   974  1E95                     	;# 
   975  1E96                     	;# 
   976  1E97                     	;# 
   977  1E9C                     	;# 
   978  1E9D                     	;# 
   979  1E9E                     	;# 
   980  1EA1                     	;# 
   981  1EA2                     	;# 
   982  1EA3                     	;# 
   983  1EA4                     	;# 
   984  1EA9                     	;# 
   985  1EAA                     	;# 
   986  1EB1                     	;# 
   987  1EB2                     	;# 
   988  1EB8                     	;# 
   989  1EB9                     	;# 
   990  1EBA                     	;# 
   991  1EBB                     	;# 
   992  1EBC                     	;# 
   993  1EBD                     	;# 
   994  1EBE                     	;# 
   995  1EC3                     	;# 
   996  1EC5                     	;# 
   997  1EC6                     	;# 
   998  1EC7                     	;# 
   999  1EC8                     	;# 
  1000  1EC9                     	;# 
  1001  1ECA                     	;# 
  1002  1ECB                     	;# 
  1003  1ECB                     	;# 
  1004  1ECB                     	;# 
  1005  1ECC                     	;# 
  1006  1ECC                     	;# 
  1007  1ECC                     	;# 
  1008  1F10                     	;# 
  1009  1F11                     	;# 
  1010  1F12                     	;# 
  1011  1F14                     	;# 
  1012  1F15                     	;# 
  1013  1F1C                     	;# 
  1014  1F1D                     	;# 
  1015  1F1E                     	;# 
  1016  1F1F                     	;# 
  1017  1F20                     	;# 
  1018  1F21                     	;# 
  1019  1F22                     	;# 
  1020  1F23                     	;# 
  1021  1F24                     	;# 
  1022  1F25                     	;# 
  1023  1F26                     	;# 
  1024  1F27                     	;# 
  1025  1F38                     	;# 
  1026  1F39                     	;# 
  1027  1F3A                     	;# 
  1028  1F3B                     	;# 
  1029  1F3C                     	;# 
  1030  1F3D                     	;# 
  1031  1F3E                     	;# 
  1032  1F3F                     	;# 
  1033  1F43                     	;# 
  1034  1F44                     	;# 
  1035  1F45                     	;# 
  1036  1F46                     	;# 
  1037  1F47                     	;# 
  1038  1F48                     	;# 
  1039  1F49                     	;# 
  1040  1F4A                     	;# 
  1041  1F4E                     	;# 
  1042  1F4F                     	;# 
  1043  1F50                     	;# 
  1044  1F51                     	;# 
  1045  1F52                     	;# 
  1046  1F53                     	;# 
  1047  1F54                     	;# 
  1048  1F55                     	;# 
  1049  1FE4                     	;# 
  1050  1FE5                     	;# 
  1051  1FE6                     	;# 
  1052  1FE7                     	;# 
  1053  1FE8                     	;# 
  1054  1FE8                     	;# 
  1055  1FE9                     	;# 
  1056  1FEA                     	;# 
  1057  1FEB                     	;# 
  1058  1FED                     	;# 
  1059  1FEE                     	;# 
  1060  1FEF                     	;# 
  1061  0000                     	;# 
  1062  0001                     	;# 
  1063  0002                     	;# 
  1064  0003                     	;# 
  1065  0004                     	;# 
  1066  0005                     	;# 
  1067  0006                     	;# 
  1068  0007                     	;# 
  1069  0008                     	;# 
  1070  0009                     	;# 
  1071  000A                     	;# 
  1072  000B                     	;# 
  1073  000C                     	;# 
  1074  000D                     	;# 
  1075  000E                     	;# 
  1076  0012                     	;# 
  1077  0013                     	;# 
  1078  0014                     	;# 
  1079  0018                     	;# 
  1080  0019                     	;# 
  1081  001A                     	;# 
  1082  008C                     	;# 
  1083  008C                     	;# 
  1084  008D                     	;# 
  1085  008E                     	;# 
  1086  008E                     	;# 
  1087  008F                     	;# 
  1088  0090                     	;# 
  1089  0090                     	;# 
  1090  0091                     	;# 
  1091  0092                     	;# 
  1092  0092                     	;# 
  1093  0093                     	;# 
  1094  0094                     	;# 
  1095  0094                     	;# 
  1096  0095                     	;# 
  1097  0096                     	;# 
  1098  0096                     	;# 
  1099  0097                     	;# 
  1100  0098                     	;# 
  1101  0099                     	;# 
  1102  009A                     	;# 
  1103  009B                     	;# 
  1104  009B                     	;# 
  1105  009C                     	;# 
  1106  009D                     	;# 
  1107  009D                     	;# 
  1108  009E                     	;# 
  1109  009F                     	;# 
  1110  010C                     	;# 
  1111  010C                     	;# 
  1112  010D                     	;# 
  1113  010E                     	;# 
  1114  010F                     	;# 
  1115  010F                     	;# 
  1116  0110                     	;# 
  1117  0111                     	;# 
  1118  0112                     	;# 
  1119  0113                     	;# 
  1120  0114                     	;# 
  1121  0115                     	;# 
  1122  0116                     	;# 
  1123  0117                     	;# 
  1124  0118                     	;# 
  1125  0119                     	;# 
  1126  0119                     	;# 
  1127  0119                     	;# 
  1128  011A                     	;# 
  1129  011A                     	;# 
  1130  011A                     	;# 
  1131  011B                     	;# 
  1132  011B                     	;# 
  1133  011B                     	;# 
  1134  011B                     	;# 
  1135  011B                     	;# 
  1136  011C                     	;# 
  1137  011C                     	;# 
  1138  011C                     	;# 
  1139  011D                     	;# 
  1140  011D                     	;# 
  1141  011D                     	;# 
  1142  011E                     	;# 
  1143  011E                     	;# 
  1144  011E                     	;# 
  1145  011F                     	;# 
  1146  011F                     	;# 
  1147  011F                     	;# 
  1148  011F                     	;# 
  1149  011F                     	;# 
  1150  018C                     	;# 
  1151  018D                     	;# 
  1152  018E                     	;# 
  1153  018F                     	;# 
  1154  0190                     	;# 
  1155  0191                     	;# 
  1156  0192                     	;# 
  1157  0196                     	;# 
  1158  0197                     	;# 
  1159  0198                     	;# 
  1160  0199                     	;# 
  1161  019A                     	;# 
  1162  019B                     	;# 
  1163  019C                     	;# 
  1164  020C                     	;# 
  1165  020D                     	;# 
  1166  020E                     	;# 
  1167  020E                     	;# 
  1168  020F                     	;# 
  1169  020F                     	;# 
  1170  0210                     	;# 
  1171  0210                     	;# 
  1172  0211                     	;# 
  1173  0211                     	;# 
  1174  0212                     	;# 
  1175  0213                     	;# 
  1176  0214                     	;# 
  1177  0214                     	;# 
  1178  0215                     	;# 
  1179  0215                     	;# 
  1180  0216                     	;# 
  1181  0216                     	;# 
  1182  0217                     	;# 
  1183  0217                     	;# 
  1184  0218                     	;# 
  1185  0219                     	;# 
  1186  021A                     	;# 
  1187  021A                     	;# 
  1188  021B                     	;# 
  1189  021B                     	;# 
  1190  021C                     	;# 
  1191  021C                     	;# 
  1192  021D                     	;# 
  1193  021D                     	;# 
  1194  021E                     	;# 
  1195  021F                     	;# 
  1196  028C                     	;# 
  1197  028C                     	;# 
  1198  028D                     	;# 
  1199  028D                     	;# 
  1200  028E                     	;# 
  1201  028F                     	;# 
  1202  0290                     	;# 
  1203  0291                     	;# 
  1204  0292                     	;# 
  1205  0292                     	;# 
  1206  0293                     	;# 
  1207  0293                     	;# 
  1208  0294                     	;# 
  1209  0295                     	;# 
  1210  0296                     	;# 
  1211  0297                     	;# 
  1212  0298                     	;# 
  1213  0298                     	;# 
  1214  0299                     	;# 
  1215  0299                     	;# 
  1216  029A                     	;# 
  1217  029B                     	;# 
  1218  029C                     	;# 
  1219  029D                     	;# 
  1220  029F                     	;# 
  1221  030C                     	;# 
  1222  030C                     	;# 
  1223  030D                     	;# 
  1224  030E                     	;# 
  1225  030F                     	;# 
  1226  0310                     	;# 
  1227  0310                     	;# 
  1228  0311                     	;# 
  1229  0312                     	;# 
  1230  0313                     	;# 
  1231  0314                     	;# 
  1232  0314                     	;# 
  1233  0315                     	;# 
  1234  0316                     	;# 
  1235  0317                     	;# 
  1236  0318                     	;# 
  1237  0318                     	;# 
  1238  0319                     	;# 
  1239  031A                     	;# 
  1240  031B                     	;# 
  1241  038C                     	;# 
  1242  038C                     	;# 
  1243  038D                     	;# 
  1244  038E                     	;# 
  1245  0390                     	;# 
  1246  0390                     	;# 
  1247  0391                     	;# 
  1248  0392                     	;# 
  1249  048C                     	;# 
  1250  048C                     	;# 
  1251  048D                     	;# 
  1252  048E                     	;# 
  1253  048F                     	;# 
  1254  048F                     	;# 
  1255  0490                     	;# 
  1256  0491                     	;# 
  1257  0492                     	;# 
  1258  0492                     	;# 
  1259  0493                     	;# 
  1260  0494                     	;# 
  1261  0495                     	;# 
  1262  0495                     	;# 
  1263  0496                     	;# 
  1264  0497                     	;# 
  1265  0498                     	;# 
  1266  0499                     	;# 
  1267  049A                     	;# 
  1268  049B                     	;# 
  1269  049C                     	;# 
  1270  049D                     	;# 
  1271  058C                     	;# 
  1272  058C                     	;# 
  1273  058D                     	;# 
  1274  058E                     	;# 
  1275  058F                     	;# 
  1276  058F                     	;# 
  1277  0590                     	;# 
  1278  0591                     	;# 
  1279  0592                     	;# 
  1280  0593                     	;# 
  1281  059C                     	;# 
  1282  059C                     	;# 
  1283  059D                     	;# 
  1284  059D                     	;# 
  1285  059E                     	;# 
  1286  059F                     	;# 
  1287  060C                     	;# 
  1288  060C                     	;# 
  1289  060D                     	;# 
  1290  060D                     	;# 
  1291  060E                     	;# 
  1292  060F                     	;# 
  1293  0610                     	;# 
  1294  0611                     	;# 
  1295  0612                     	;# 
  1296  0613                     	;# 
  1297  0614                     	;# 
  1298  0616                     	;# 
  1299  0616                     	;# 
  1300  0617                     	;# 
  1301  0617                     	;# 
  1302  0618                     	;# 
  1303  0619                     	;# 
  1304  061A                     	;# 
  1305  061B                     	;# 
  1306  061C                     	;# 
  1307  061D                     	;# 
  1308  061E                     	;# 
  1309  070C                     	;# 
  1310  070D                     	;# 
  1311  070E                     	;# 
  1312  070F                     	;# 
  1313  0710                     	;# 
  1314  0711                     	;# 
  1315  0712                     	;# 
  1316  0713                     	;# 
  1317  0714                     	;# 
  1318  0716                     	;# 
  1319  0717                     	;# 
  1320  0718                     	;# 
  1321  0719                     	;# 
  1322  071A                     	;# 
  1323  071B                     	;# 
  1324  071C                     	;# 
  1325  071D                     	;# 
  1326  071E                     	;# 
  1327  0796                     	;# 
  1328  0797                     	;# 
  1329  0798                     	;# 
  1330  0799                     	;# 
  1331  079A                     	;# 
  1332  079B                     	;# 
  1333  079C                     	;# 
  1334  079D                     	;# 
  1335  080C                     	;# 
  1336  080D                     	;# 
  1337  080E                     	;# 
  1338  080F                     	;# 
  1339  0810                     	;# 
  1340  0811                     	;# 
  1341  0812                     	;# 
  1342  0813                     	;# 
  1343  0814                     	;# 
  1344  081A                     	;# 
  1345  081A                     	;# 
  1346  081B                     	;# 
  1347  081C                     	;# 
  1348  081C                     	;# 
  1349  081D                     	;# 
  1350  081E                     	;# 
  1351  081F                     	;# 
  1352  088C                     	;# 
  1353  088D                     	;# 
  1354  088E                     	;# 
  1355  088F                     	;# 
  1356  0890                     	;# 
  1357  0891                     	;# 
  1358  0892                     	;# 
  1359  0893                     	;# 
  1360  0895                     	;# 
  1361  0896                     	;# 
  1362  0897                     	;# 
  1363  0898                     	;# 
  1364  0899                     	;# 
  1365  089A                     	;# 
  1366  089B                     	;# 
  1367  090C                     	;# 
  1368  090E                     	;# 
  1369  090F                     	;# 
  1370  091F                     	;# 
  1371  098F                     	;# 
  1372  098F                     	;# 
  1373  0990                     	;# 
  1374  0991                     	;# 
  1375  0992                     	;# 
  1376  0993                     	;# 
  1377  0994                     	;# 
  1378  0995                     	;# 
  1379  0996                     	;# 
  1380  0997                     	;# 
  1381  1E0F                     	;# 
  1382  1E10                     	;# 
  1383  1E11                     	;# 
  1384  1E12                     	;# 
  1385  1E13                     	;# 
  1386  1E14                     	;# 
  1387  1E15                     	;# 
  1388  1E16                     	;# 
  1389  1E17                     	;# 
  1390  1E18                     	;# 
  1391  1E19                     	;# 
  1392  1E1A                     	;# 
  1393  1E1B                     	;# 
  1394  1E1C                     	;# 
  1395  1E1D                     	;# 
  1396  1E1E                     	;# 
  1397  1E1F                     	;# 
  1398  1E20                     	;# 
  1399  1E21                     	;# 
  1400  1E22                     	;# 
  1401  1E23                     	;# 
  1402  1E24                     	;# 
  1403  1E25                     	;# 
  1404  1E26                     	;# 
  1405  1E27                     	;# 
  1406  1E28                     	;# 
  1407  1E29                     	;# 
  1408  1E2A                     	;# 
  1409  1E2B                     	;# 
  1410  1E2C                     	;# 
  1411  1E2D                     	;# 
  1412  1E2E                     	;# 
  1413  1E2F                     	;# 
  1414  1E30                     	;# 
  1415  1E31                     	;# 
  1416  1E32                     	;# 
  1417  1E33                     	;# 
  1418  1E34                     	;# 
  1419  1E35                     	;# 
  1420  1E36                     	;# 
  1421  1E37                     	;# 
  1422  1E8F                     	;# 
  1423  1E90                     	;# 
  1424  1E91                     	;# 
  1425  1E92                     	;# 
  1426  1E93                     	;# 
  1427  1E94                     	;# 
  1428  1E95                     	;# 
  1429  1E96                     	;# 
  1430  1E97                     	;# 
  1431  1E9C                     	;# 
  1432  1E9D                     	;# 
  1433  1E9E                     	;# 
  1434  1EA1                     	;# 
  1435  1EA2                     	;# 
  1436  1EA3                     	;# 
  1437  1EA4                     	;# 
  1438  1EA9                     	;# 
  1439  1EAA                     	;# 
  1440  1EB1                     	;# 
  1441  1EB2                     	;# 
  1442  1EB8                     	;# 
  1443  1EB9                     	;# 
  1444  1EBA                     	;# 
  1445  1EBB                     	;# 
  1446  1EBC                     	;# 
  1447  1EBD                     	;# 
  1448  1EBE                     	;# 
  1449  1EC3                     	;# 
  1450  1EC5                     	;# 
  1451  1EC6                     	;# 
  1452  1EC7                     	;# 
  1453  1EC8                     	;# 
  1454  1EC9                     	;# 
  1455  1ECA                     	;# 
  1456  1ECB                     	;# 
  1457  1ECB                     	;# 
  1458  1ECB                     	;# 
  1459  1ECC                     	;# 
  1460  1ECC                     	;# 
  1461  1ECC                     	;# 
  1462  1F10                     	;# 
  1463  1F11                     	;# 
  1464  1F12                     	;# 
  1465  1F14                     	;# 
  1466  1F15                     	;# 
  1467  1F1C                     	;# 
  1468  1F1D                     	;# 
  1469  1F1E                     	;# 
  1470  1F1F                     	;# 
  1471  1F20                     	;# 
  1472  1F21                     	;# 
  1473  1F22                     	;# 
  1474  1F23                     	;# 
  1475  1F24                     	;# 
  1476  1F25                     	;# 
  1477  1F26                     	;# 
  1478  1F27                     	;# 
  1479  1F38                     	;# 
  1480  1F39                     	;# 
  1481  1F3A                     	;# 
  1482  1F3B                     	;# 
  1483  1F3C                     	;# 
  1484  1F3D                     	;# 
  1485  1F3E                     	;# 
  1486  1F3F                     	;# 
  1487  1F43                     	;# 
  1488  1F44                     	;# 
  1489  1F45                     	;# 
  1490  1F46                     	;# 
  1491  1F47                     	;# 
  1492  1F48                     	;# 
  1493  1F49                     	;# 
  1494  1F4A                     	;# 
  1495  1F4E                     	;# 
  1496  1F4F                     	;# 
  1497  1F50                     	;# 
  1498  1F51                     	;# 
  1499  1F52                     	;# 
  1500  1F53                     	;# 
  1501  1F54                     	;# 
  1502  1F55                     	;# 
  1503  1FE4                     	;# 
  1504  1FE5                     	;# 
  1505  1FE6                     	;# 
  1506  1FE7                     	;# 
  1507  1FE8                     	;# 
  1508  1FE8                     	;# 
  1509  1FE9                     	;# 
  1510  1FEA                     	;# 
  1511  1FEB                     	;# 
  1512  1FED                     	;# 
  1513  1FEE                     	;# 
  1514  1FEF                     	;# 
  1515  0000                     	;# 
  1516  0001                     	;# 
  1517  0002                     	;# 
  1518  0003                     	;# 
  1519  0004                     	;# 
  1520  0005                     	;# 
  1521  0006                     	;# 
  1522  0007                     	;# 
  1523  0008                     	;# 
  1524  0009                     	;# 
  1525  000A                     	;# 
  1526  000B                     	;# 
  1527  000C                     	;# 
  1528  000D                     	;# 
  1529  000E                     	;# 
  1530  0012                     	;# 
  1531  0013                     	;# 
  1532  0014                     	;# 
  1533  0018                     	;# 
  1534  0019                     	;# 
  1535  001A                     	;# 
  1536  008C                     	;# 
  1537  008C                     	;# 
  1538  008D                     	;# 
  1539  008E                     	;# 
  1540  008E                     	;# 
  1541  008F                     	;# 
  1542  0090                     	;# 
  1543  0090                     	;# 
  1544  0091                     	;# 
  1545  0092                     	;# 
  1546  0092                     	;# 
  1547  0093                     	;# 
  1548  0094                     	;# 
  1549  0094                     	;# 
  1550  0095                     	;# 
  1551  0096                     	;# 
  1552  0096                     	;# 
  1553  0097                     	;# 
  1554  0098                     	;# 
  1555  0099                     	;# 
  1556  009A                     	;# 
  1557  009B                     	;# 
  1558  009B                     	;# 
  1559  009C                     	;# 
  1560  009D                     	;# 
  1561  009D                     	;# 
  1562  009E                     	;# 
  1563  009F                     	;# 
  1564  010C                     	;# 
  1565  010C                     	;# 
  1566  010D                     	;# 
  1567  010E                     	;# 
  1568  010F                     	;# 
  1569  010F                     	;# 
  1570  0110                     	;# 
  1571  0111                     	;# 
  1572  0112                     	;# 
  1573  0113                     	;# 
  1574  0114                     	;# 
  1575  0115                     	;# 
  1576  0116                     	;# 
  1577  0117                     	;# 
  1578  0118                     	;# 
  1579  0119                     	;# 
  1580  0119                     	;# 
  1581  0119                     	;# 
  1582  011A                     	;# 
  1583  011A                     	;# 
  1584  011A                     	;# 
  1585  011B                     	;# 
  1586  011B                     	;# 
  1587  011B                     	;# 
  1588  011B                     	;# 
  1589  011B                     	;# 
  1590  011C                     	;# 
  1591  011C                     	;# 
  1592  011C                     	;# 
  1593  011D                     	;# 
  1594  011D                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  011E                     	;# 
  1598  011E                     	;# 
  1599  011F                     	;# 
  1600  011F                     	;# 
  1601  011F                     	;# 
  1602  011F                     	;# 
  1603  011F                     	;# 
  1604  018C                     	;# 
  1605  018D                     	;# 
  1606  018E                     	;# 
  1607  018F                     	;# 
  1608  0190                     	;# 
  1609  0191                     	;# 
  1610  0192                     	;# 
  1611  0196                     	;# 
  1612  0197                     	;# 
  1613  0198                     	;# 
  1614  0199                     	;# 
  1615  019A                     	;# 
  1616  019B                     	;# 
  1617  019C                     	;# 
  1618  020C                     	;# 
  1619  020D                     	;# 
  1620  020E                     	;# 
  1621  020E                     	;# 
  1622  020F                     	;# 
  1623  020F                     	;# 
  1624  0210                     	;# 
  1625  0210                     	;# 
  1626  0211                     	;# 
  1627  0211                     	;# 
  1628  0212                     	;# 
  1629  0213                     	;# 
  1630  0214                     	;# 
  1631  0214                     	;# 
  1632  0215                     	;# 
  1633  0215                     	;# 
  1634  0216                     	;# 
  1635  0216                     	;# 
  1636  0217                     	;# 
  1637  0217                     	;# 
  1638  0218                     	;# 
  1639  0219                     	;# 
  1640  021A                     	;# 
  1641  021A                     	;# 
  1642  021B                     	;# 
  1643  021B                     	;# 
  1644  021C                     	;# 
  1645  021C                     	;# 
  1646  021D                     	;# 
  1647  021D                     	;# 
  1648  021E                     	;# 
  1649  021F                     	;# 
  1650  028C                     	;# 
  1651  028C                     	;# 
  1652  028D                     	;# 
  1653  028D                     	;# 
  1654  028E                     	;# 
  1655  028F                     	;# 
  1656  0290                     	;# 
  1657  0291                     	;# 
  1658  0292                     	;# 
  1659  0292                     	;# 
  1660  0293                     	;# 
  1661  0293                     	;# 
  1662  0294                     	;# 
  1663  0295                     	;# 
  1664  0296                     	;# 
  1665  0297                     	;# 
  1666  0298                     	;# 
  1667  0298                     	;# 
  1668  0299                     	;# 
  1669  0299                     	;# 
  1670  029A                     	;# 
  1671  029B                     	;# 
  1672  029C                     	;# 
  1673  029D                     	;# 
  1674  029F                     	;# 
  1675  030C                     	;# 
  1676  030C                     	;# 
  1677  030D                     	;# 
  1678  030E                     	;# 
  1679  030F                     	;# 
  1680  0310                     	;# 
  1681  0310                     	;# 
  1682  0311                     	;# 
  1683  0312                     	;# 
  1684  0313                     	;# 
  1685  0314                     	;# 
  1686  0314                     	;# 
  1687  0315                     	;# 
  1688  0316                     	;# 
  1689  0317                     	;# 
  1690  0318                     	;# 
  1691  0318                     	;# 
  1692  0319                     	;# 
  1693  031A                     	;# 
  1694  031B                     	;# 
  1695  038C                     	;# 
  1696  038C                     	;# 
  1697  038D                     	;# 
  1698  038E                     	;# 
  1699  0390                     	;# 
  1700  0390                     	;# 
  1701  0391                     	;# 
  1702  0392                     	;# 
  1703  048C                     	;# 
  1704  048C                     	;# 
  1705  048D                     	;# 
  1706  048E                     	;# 
  1707  048F                     	;# 
  1708  048F                     	;# 
  1709  0490                     	;# 
  1710  0491                     	;# 
  1711  0492                     	;# 
  1712  0492                     	;# 
  1713  0493                     	;# 
  1714  0494                     	;# 
  1715  0495                     	;# 
  1716  0495                     	;# 
  1717  0496                     	;# 
  1718  0497                     	;# 
  1719  0498                     	;# 
  1720  0499                     	;# 
  1721  049A                     	;# 
  1722  049B                     	;# 
  1723  049C                     	;# 
  1724  049D                     	;# 
  1725  058C                     	;# 
  1726  058C                     	;# 
  1727  058D                     	;# 
  1728  058E                     	;# 
  1729  058F                     	;# 
  1730  058F                     	;# 
  1731  0590                     	;# 
  1732  0591                     	;# 
  1733  0592                     	;# 
  1734  0593                     	;# 
  1735  059C                     	;# 
  1736  059C                     	;# 
  1737  059D                     	;# 
  1738  059D                     	;# 
  1739  059E                     	;# 
  1740  059F                     	;# 
  1741  060C                     	;# 
  1742  060C                     	;# 
  1743  060D                     	;# 
  1744  060D                     	;# 
  1745  060E                     	;# 
  1746  060F                     	;# 
  1747  0610                     	;# 
  1748  0611                     	;# 
  1749  0612                     	;# 
  1750  0613                     	;# 
  1751  0614                     	;# 
  1752  0616                     	;# 
  1753  0616                     	;# 
  1754  0617                     	;# 
  1755  0617                     	;# 
  1756  0618                     	;# 
  1757  0619                     	;# 
  1758  061A                     	;# 
  1759  061B                     	;# 
  1760  061C                     	;# 
  1761  061D                     	;# 
  1762  061E                     	;# 
  1763  070C                     	;# 
  1764  070D                     	;# 
  1765  070E                     	;# 
  1766  070F                     	;# 
  1767  0710                     	;# 
  1768  0711                     	;# 
  1769  0712                     	;# 
  1770  0713                     	;# 
  1771  0714                     	;# 
  1772  0716                     	;# 
  1773  0717                     	;# 
  1774  0718                     	;# 
  1775  0719                     	;# 
  1776  071A                     	;# 
  1777  071B                     	;# 
  1778  071C                     	;# 
  1779  071D                     	;# 
  1780  071E                     	;# 
  1781  0796                     	;# 
  1782  0797                     	;# 
  1783  0798                     	;# 
  1784  0799                     	;# 
  1785  079A                     	;# 
  1786  079B                     	;# 
  1787  079C                     	;# 
  1788  079D                     	;# 
  1789  080C                     	;# 
  1790  080D                     	;# 
  1791  080E                     	;# 
  1792  080F                     	;# 
  1793  0810                     	;# 
  1794  0811                     	;# 
  1795  0812                     	;# 
  1796  0813                     	;# 
  1797  0814                     	;# 
  1798  081A                     	;# 
  1799  081A                     	;# 
  1800  081B                     	;# 
  1801  081C                     	;# 
  1802  081C                     	;# 
  1803  081D                     	;# 
  1804  081E                     	;# 
  1805  081F                     	;# 
  1806  088C                     	;# 
  1807  088D                     	;# 
  1808  088E                     	;# 
  1809  088F                     	;# 
  1810  0890                     	;# 
  1811  0891                     	;# 
  1812  0892                     	;# 
  1813  0893                     	;# 
  1814  0895                     	;# 
  1815  0896                     	;# 
  1816  0897                     	;# 
  1817  0898                     	;# 
  1818  0899                     	;# 
  1819  089A                     	;# 
  1820  089B                     	;# 
  1821  090C                     	;# 
  1822  090E                     	;# 
  1823  090F                     	;# 
  1824  091F                     	;# 
  1825  098F                     	;# 
  1826  098F                     	;# 
  1827  0990                     	;# 
  1828  0991                     	;# 
  1829  0992                     	;# 
  1830  0993                     	;# 
  1831  0994                     	;# 
  1832  0995                     	;# 
  1833  0996                     	;# 
  1834  0997                     	;# 
  1835  1E0F                     	;# 
  1836  1E10                     	;# 
  1837  1E11                     	;# 
  1838  1E12                     	;# 
  1839  1E13                     	;# 
  1840  1E14                     	;# 
  1841  1E15                     	;# 
  1842  1E16                     	;# 
  1843  1E17                     	;# 
  1844  1E18                     	;# 
  1845  1E19                     	;# 
  1846  1E1A                     	;# 
  1847  1E1B                     	;# 
  1848  1E1C                     	;# 
  1849  1E1D                     	;# 
  1850  1E1E                     	;# 
  1851  1E1F                     	;# 
  1852  1E20                     	;# 
  1853  1E21                     	;# 
  1854  1E22                     	;# 
  1855  1E23                     	;# 
  1856  1E24                     	;# 
  1857  1E25                     	;# 
  1858  1E26                     	;# 
  1859  1E27                     	;# 
  1860  1E28                     	;# 
  1861  1E29                     	;# 
  1862  1E2A                     	;# 
  1863  1E2B                     	;# 
  1864  1E2C                     	;# 
  1865  1E2D                     	;# 
  1866  1E2E                     	;# 
  1867  1E2F                     	;# 
  1868  1E30                     	;# 
  1869  1E31                     	;# 
  1870  1E32                     	;# 
  1871  1E33                     	;# 
  1872  1E34                     	;# 
  1873  1E35                     	;# 
  1874  1E36                     	;# 
  1875  1E37                     	;# 
  1876  1E8F                     	;# 
  1877  1E90                     	;# 
  1878  1E91                     	;# 
  1879  1E92                     	;# 
  1880  1E93                     	;# 
  1881  1E94                     	;# 
  1882  1E95                     	;# 
  1883  1E96                     	;# 
  1884  1E97                     	;# 
  1885  1E9C                     	;# 
  1886  1E9D                     	;# 
  1887  1E9E                     	;# 
  1888  1EA1                     	;# 
  1889  1EA2                     	;# 
  1890  1EA3                     	;# 
  1891  1EA4                     	;# 
  1892  1EA9                     	;# 
  1893  1EAA                     	;# 
  1894  1EB1                     	;# 
  1895  1EB2                     	;# 
  1896  1EB8                     	;# 
  1897  1EB9                     	;# 
  1898  1EBA                     	;# 
  1899  1EBB                     	;# 
  1900  1EBC                     	;# 
  1901  1EBD                     	;# 
  1902  1EBE                     	;# 
  1903  1EC3                     	;# 
  1904  1EC5                     	;# 
  1905  1EC6                     	;# 
  1906  1EC7                     	;# 
  1907  1EC8                     	;# 
  1908  1EC9                     	;# 
  1909  1ECA                     	;# 
  1910  1ECB                     	;# 
  1911  1ECB                     	;# 
  1912  1ECB                     	;# 
  1913  1ECC                     	;# 
  1914  1ECC                     	;# 
  1915  1ECC                     	;# 
  1916  1F10                     	;# 
  1917  1F11                     	;# 
  1918  1F12                     	;# 
  1919  1F14                     	;# 
  1920  1F15                     	;# 
  1921  1F1C                     	;# 
  1922  1F1D                     	;# 
  1923  1F1E                     	;# 
  1924  1F1F                     	;# 
  1925  1F20                     	;# 
  1926  1F21                     	;# 
  1927  1F22                     	;# 
  1928  1F23                     	;# 
  1929  1F24                     	;# 
  1930  1F25                     	;# 
  1931  1F26                     	;# 
  1932  1F27                     	;# 
  1933  1F38                     	;# 
  1934  1F39                     	;# 
  1935  1F3A                     	;# 
  1936  1F3B                     	;# 
  1937  1F3C                     	;# 
  1938  1F3D                     	;# 
  1939  1F3E                     	;# 
  1940  1F3F                     	;# 
  1941  1F43                     	;# 
  1942  1F44                     	;# 
  1943  1F45                     	;# 
  1944  1F46                     	;# 
  1945  1F47                     	;# 
  1946  1F48                     	;# 
  1947  1F49                     	;# 
  1948  1F4A                     	;# 
  1949  1F4E                     	;# 
  1950  1F4F                     	;# 
  1951  1F50                     	;# 
  1952  1F51                     	;# 
  1953  1F52                     	;# 
  1954  1F53                     	;# 
  1955  1F54                     	;# 
  1956  1F55                     	;# 
  1957  1FE4                     	;# 
  1958  1FE5                     	;# 
  1959  1FE6                     	;# 
  1960  1FE7                     	;# 
  1961  1FE8                     	;# 
  1962  1FE8                     	;# 
  1963  1FE9                     	;# 
  1964  1FEA                     	;# 
  1965  1FEB                     	;# 
  1966  1FED                     	;# 
  1967  1FEE                     	;# 
  1968  1FEF                     	;# 
  1969  0000                     	;# 
  1970  0001                     	;# 
  1971  0002                     	;# 
  1972  0003                     	;# 
  1973  0004                     	;# 
  1974  0005                     	;# 
  1975  0006                     	;# 
  1976  0007                     	;# 
  1977  0008                     	;# 
  1978  0009                     	;# 
  1979  000A                     	;# 
  1980  000B                     	;# 
  1981  000C                     	;# 
  1982  000D                     	;# 
  1983  000E                     	;# 
  1984  0012                     	;# 
  1985  0013                     	;# 
  1986  0014                     	;# 
  1987  0018                     	;# 
  1988  0019                     	;# 
  1989  001A                     	;# 
  1990  008C                     	;# 
  1991  008C                     	;# 
  1992  008D                     	;# 
  1993  008E                     	;# 
  1994  008E                     	;# 
  1995  008F                     	;# 
  1996  0090                     	;# 
  1997  0090                     	;# 
  1998  0091                     	;# 
  1999  0092                     	;# 
  2000  0092                     	;# 
  2001  0093                     	;# 
  2002  0094                     	;# 
  2003  0094                     	;# 
  2004  0095                     	;# 
  2005  0096                     	;# 
  2006  0096                     	;# 
  2007  0097                     	;# 
  2008  0098                     	;# 
  2009  0099                     	;# 
  2010  009A                     	;# 
  2011  009B                     	;# 
  2012  009B                     	;# 
  2013  009C                     	;# 
  2014  009D                     	;# 
  2015  009D                     	;# 
  2016  009E                     	;# 
  2017  009F                     	;# 
  2018  010C                     	;# 
  2019  010C                     	;# 
  2020  010D                     	;# 
  2021  010E                     	;# 
  2022  010F                     	;# 
  2023  010F                     	;# 
  2024  0110                     	;# 
  2025  0111                     	;# 
  2026  0112                     	;# 
  2027  0113                     	;# 
  2028  0114                     	;# 
  2029  0115                     	;# 
  2030  0116                     	;# 
  2031  0117                     	;# 
  2032  0118                     	;# 
  2033  0119                     	;# 
  2034  0119                     	;# 
  2035  0119                     	;# 
  2036  011A                     	;# 
  2037  011A                     	;# 
  2038  011A                     	;# 
  2039  011B                     	;# 
  2040  011B                     	;# 
  2041  011B                     	;# 
  2042  011B                     	;# 
  2043  011B                     	;# 
  2044  011C                     	;# 
  2045  011C                     	;# 
  2046  011C                     	;# 
  2047  011D                     	;# 
  2048  011D                     	;# 
  2049  011D                     	;# 
  2050  011E                     	;# 
  2051  011E                     	;# 
  2052  011E                     	;# 
  2053  011F                     	;# 
  2054  011F                     	;# 
  2055  011F                     	;# 
  2056  011F                     	;# 
  2057  011F                     	;# 
  2058  018C                     	;# 
  2059  018D                     	;# 
  2060  018E                     	;# 
  2061  018F                     	;# 
  2062  0190                     	;# 
  2063  0191                     	;# 
  2064  0192                     	;# 
  2065  0196                     	;# 
  2066  0197                     	;# 
  2067  0198                     	;# 
  2068  0199                     	;# 
  2069  019A                     	;# 
  2070  019B                     	;# 
  2071  019C                     	;# 
  2072  020C                     	;# 
  2073  020D                     	;# 
  2074  020E                     	;# 
  2075  020E                     	;# 
  2076  020F                     	;# 
  2077  020F                     	;# 
  2078  0210                     	;# 
  2079  0210                     	;# 
  2080  0211                     	;# 
  2081  0211                     	;# 
  2082  0212                     	;# 
  2083  0213                     	;# 
  2084  0214                     	;# 
  2085  0214                     	;# 
  2086  0215                     	;# 
  2087  0215                     	;# 
  2088  0216                     	;# 
  2089  0216                     	;# 
  2090  0217                     	;# 
  2091  0217                     	;# 
  2092  0218                     	;# 
  2093  0219                     	;# 
  2094  021A                     	;# 
  2095  021A                     	;# 
  2096  021B                     	;# 
  2097  021B                     	;# 
  2098  021C                     	;# 
  2099  021C                     	;# 
  2100  021D                     	;# 
  2101  021D                     	;# 
  2102  021E                     	;# 
  2103  021F                     	;# 
  2104  028C                     	;# 
  2105  028C                     	;# 
  2106  028D                     	;# 
  2107  028D                     	;# 
  2108  028E                     	;# 
  2109  028F                     	;# 
  2110  0290                     	;# 
  2111  0291                     	;# 
  2112  0292                     	;# 
  2113  0292                     	;# 
  2114  0293                     	;# 
  2115  0293                     	;# 
  2116  0294                     	;# 
  2117  0295                     	;# 
  2118  0296                     	;# 
  2119  0297                     	;# 
  2120  0298                     	;# 
  2121  0298                     	;# 
  2122  0299                     	;# 
  2123  0299                     	;# 
  2124  029A                     	;# 
  2125  029B                     	;# 
  2126  029C                     	;# 
  2127  029D                     	;# 
  2128  029F                     	;# 
  2129  030C                     	;# 
  2130  030C                     	;# 
  2131  030D                     	;# 
  2132  030E                     	;# 
  2133  030F                     	;# 
  2134  0310                     	;# 
  2135  0310                     	;# 
  2136  0311                     	;# 
  2137  0312                     	;# 
  2138  0313                     	;# 
  2139  0314                     	;# 
  2140  0314                     	;# 
  2141  0315                     	;# 
  2142  0316                     	;# 
  2143  0317                     	;# 
  2144  0318                     	;# 
  2145  0318                     	;# 
  2146  0319                     	;# 
  2147  031A                     	;# 
  2148  031B                     	;# 
  2149  038C                     	;# 
  2150  038C                     	;# 
  2151  038D                     	;# 
  2152  038E                     	;# 
  2153  0390                     	;# 
  2154  0390                     	;# 
  2155  0391                     	;# 
  2156  0392                     	;# 
  2157  048C                     	;# 
  2158  048C                     	;# 
  2159  048D                     	;# 
  2160  048E                     	;# 
  2161  048F                     	;# 
  2162  048F                     	;# 
  2163  0490                     	;# 
  2164  0491                     	;# 
  2165  0492                     	;# 
  2166  0492                     	;# 
  2167  0493                     	;# 
  2168  0494                     	;# 
  2169  0495                     	;# 
  2170  0495                     	;# 
  2171  0496                     	;# 
  2172  0497                     	;# 
  2173  0498                     	;# 
  2174  0499                     	;# 
  2175  049A                     	;# 
  2176  049B                     	;# 
  2177  049C                     	;# 
  2178  049D                     	;# 
  2179  058C                     	;# 
  2180  058C                     	;# 
  2181  058D                     	;# 
  2182  058E                     	;# 
  2183  058F                     	;# 
  2184  058F                     	;# 
  2185  0590                     	;# 
  2186  0591                     	;# 
  2187  0592                     	;# 
  2188  0593                     	;# 
  2189  059C                     	;# 
  2190  059C                     	;# 
  2191  059D                     	;# 
  2192  059D                     	;# 
  2193  059E                     	;# 
  2194  059F                     	;# 
  2195  060C                     	;# 
  2196  060C                     	;# 
  2197  060D                     	;# 
  2198  060D                     	;# 
  2199  060E                     	;# 
  2200  060F                     	;# 
  2201  0610                     	;# 
  2202  0611                     	;# 
  2203  0612                     	;# 
  2204  0613                     	;# 
  2205  0614                     	;# 
  2206  0616                     	;# 
  2207  0616                     	;# 
  2208  0617                     	;# 
  2209  0617                     	;# 
  2210  0618                     	;# 
  2211  0619                     	;# 
  2212  061A                     	;# 
  2213  061B                     	;# 
  2214  061C                     	;# 
  2215  061D                     	;# 
  2216  061E                     	;# 
  2217  070C                     	;# 
  2218  070D                     	;# 
  2219  070E                     	;# 
  2220  070F                     	;# 
  2221  0710                     	;# 
  2222  0711                     	;# 
  2223  0712                     	;# 
  2224  0713                     	;# 
  2225  0714                     	;# 
  2226  0716                     	;# 
  2227  0717                     	;# 
  2228  0718                     	;# 
  2229  0719                     	;# 
  2230  071A                     	;# 
  2231  071B                     	;# 
  2232  071C                     	;# 
  2233  071D                     	;# 
  2234  071E                     	;# 
  2235  0796                     	;# 
  2236  0797                     	;# 
  2237  0798                     	;# 
  2238  0799                     	;# 
  2239  079A                     	;# 
  2240  079B                     	;# 
  2241  079C                     	;# 
  2242  079D                     	;# 
  2243  080C                     	;# 
  2244  080D                     	;# 
  2245  080E                     	;# 
  2246  080F                     	;# 
  2247  0810                     	;# 
  2248  0811                     	;# 
  2249  0812                     	;# 
  2250  0813                     	;# 
  2251  0814                     	;# 
  2252  081A                     	;# 
  2253  081A                     	;# 
  2254  081B                     	;# 
  2255  081C                     	;# 
  2256  081C                     	;# 
  2257  081D                     	;# 
  2258  081E                     	;# 
  2259  081F                     	;# 
  2260  088C                     	;# 
  2261  088D                     	;# 
  2262  088E                     	;# 
  2263  088F                     	;# 
  2264  0890                     	;# 
  2265  0891                     	;# 
  2266  0892                     	;# 
  2267  0893                     	;# 
  2268  0895                     	;# 
  2269  0896                     	;# 
  2270  0897                     	;# 
  2271  0898                     	;# 
  2272  0899                     	;# 
  2273  089A                     	;# 
  2274  089B                     	;# 
  2275  090C                     	;# 
  2276  090E                     	;# 
  2277  090F                     	;# 
  2278  091F                     	;# 
  2279  098F                     	;# 
  2280  098F                     	;# 
  2281  0990                     	;# 
  2282  0991                     	;# 
  2283  0992                     	;# 
  2284  0993                     	;# 
  2285  0994                     	;# 
  2286  0995                     	;# 
  2287  0996                     	;# 
  2288  0997                     	;# 
  2289  1E0F                     	;# 
  2290  1E10                     	;# 
  2291  1E11                     	;# 
  2292  1E12                     	;# 
  2293  1E13                     	;# 
  2294  1E14                     	;# 
  2295  1E15                     	;# 
  2296  1E16                     	;# 
  2297  1E17                     	;# 
  2298  1E18                     	;# 
  2299  1E19                     	;# 
  2300  1E1A                     	;# 
  2301  1E1B                     	;# 
  2302  1E1C                     	;# 
  2303  1E1D                     	;# 
  2304  1E1E                     	;# 
  2305  1E1F                     	;# 
  2306  1E20                     	;# 
  2307  1E21                     	;# 
  2308  1E22                     	;# 
  2309  1E23                     	;# 
  2310  1E24                     	;# 
  2311  1E25                     	;# 
  2312  1E26                     	;# 
  2313  1E27                     	;# 
  2314  1E28                     	;# 
  2315  1E29                     	;# 
  2316  1E2A                     	;# 
  2317  1E2B                     	;# 
  2318  1E2C                     	;# 
  2319  1E2D                     	;# 
  2320  1E2E                     	;# 
  2321  1E2F                     	;# 
  2322  1E30                     	;# 
  2323  1E31                     	;# 
  2324  1E32                     	;# 
  2325  1E33                     	;# 
  2326  1E34                     	;# 
  2327  1E35                     	;# 
  2328  1E36                     	;# 
  2329  1E37                     	;# 
  2330  1E8F                     	;# 
  2331  1E90                     	;# 
  2332  1E91                     	;# 
  2333  1E92                     	;# 
  2334  1E93                     	;# 
  2335  1E94                     	;# 
  2336  1E95                     	;# 
  2337  1E96                     	;# 
  2338  1E97                     	;# 
  2339  1E9C                     	;# 
  2340  1E9D                     	;# 
  2341  1E9E                     	;# 
  2342  1EA1                     	;# 
  2343  1EA2                     	;# 
  2344  1EA3                     	;# 
  2345  1EA4                     	;# 
  2346  1EA9                     	;# 
  2347  1EAA                     	;# 
  2348  1EB1                     	;# 
  2349  1EB2                     	;# 
  2350  1EB8                     	;# 
  2351  1EB9                     	;# 
  2352  1EBA                     	;# 
  2353  1EBB                     	;# 
  2354  1EBC                     	;# 
  2355  1EBD                     	;# 
  2356  1EBE                     	;# 
  2357  1EC3                     	;# 
  2358  1EC5                     	;# 
  2359  1EC6                     	;# 
  2360  1EC7                     	;# 
  2361  1EC8                     	;# 
  2362  1EC9                     	;# 
  2363  1ECA                     	;# 
  2364  1ECB                     	;# 
  2365  1ECB                     	;# 
  2366  1ECB                     	;# 
  2367  1ECC                     	;# 
  2368  1ECC                     	;# 
  2369  1ECC                     	;# 
  2370  1F10                     	;# 
  2371  1F11                     	;# 
  2372  1F12                     	;# 
  2373  1F14                     	;# 
  2374  1F15                     	;# 
  2375  1F1C                     	;# 
  2376  1F1D                     	;# 
  2377  1F1E                     	;# 
  2378  1F1F                     	;# 
  2379  1F20                     	;# 
  2380  1F21                     	;# 
  2381  1F22                     	;# 
  2382  1F23                     	;# 
  2383  1F24                     	;# 
  2384  1F25                     	;# 
  2385  1F26                     	;# 
  2386  1F27                     	;# 
  2387  1F38                     	;# 
  2388  1F39                     	;# 
  2389  1F3A                     	;# 
  2390  1F3B                     	;# 
  2391  1F3C                     	;# 
  2392  1F3D                     	;# 
  2393  1F3E                     	;# 
  2394  1F3F                     	;# 
  2395  1F43                     	;# 
  2396  1F44                     	;# 
  2397  1F45                     	;# 
  2398  1F46                     	;# 
  2399  1F47                     	;# 
  2400  1F48                     	;# 
  2401  1F49                     	;# 
  2402  1F4A                     	;# 
  2403  1F4E                     	;# 
  2404  1F4F                     	;# 
  2405  1F50                     	;# 
  2406  1F51                     	;# 
  2407  1F52                     	;# 
  2408  1F53                     	;# 
  2409  1F54                     	;# 
  2410  1F55                     	;# 
  2411  1FE4                     	;# 
  2412  1FE5                     	;# 
  2413  1FE6                     	;# 
  2414  1FE7                     	;# 
  2415  1FE8                     	;# 
  2416  1FE8                     	;# 
  2417  1FE9                     	;# 
  2418  1FEA                     	;# 
  2419  1FEB                     	;# 
  2420  1FED                     	;# 
  2421  1FEE                     	;# 
  2422  1FEF                     	;# 
  2423  0000                     	;# 
  2424  0001                     	;# 
  2425  0002                     	;# 
  2426  0003                     	;# 
  2427  0004                     	;# 
  2428  0005                     	;# 
  2429  0006                     	;# 
  2430  0007                     	;# 
  2431  0008                     	;# 
  2432  0009                     	;# 
  2433  000A                     	;# 
  2434  000B                     	;# 
  2435  000C                     	;# 
  2436  000D                     	;# 
  2437  000E                     	;# 
  2438  0012                     	;# 
  2439  0013                     	;# 
  2440  0014                     	;# 
  2441  0018                     	;# 
  2442  0019                     	;# 
  2443  001A                     	;# 
  2444  008C                     	;# 
  2445  008C                     	;# 
  2446  008D                     	;# 
  2447  008E                     	;# 
  2448  008E                     	;# 
  2449  008F                     	;# 
  2450  0090                     	;# 
  2451  0090                     	;# 
  2452  0091                     	;# 
  2453  0092                     	;# 
  2454  0092                     	;# 
  2455  0093                     	;# 
  2456  0094                     	;# 
  2457  0094                     	;# 
  2458  0095                     	;# 
  2459  0096                     	;# 
  2460  0096                     	;# 
  2461  0097                     	;# 
  2462  0098                     	;# 
  2463  0099                     	;# 
  2464  009A                     	;# 
  2465  009B                     	;# 
  2466  009B                     	;# 
  2467  009C                     	;# 
  2468  009D                     	;# 
  2469  009D                     	;# 
  2470  009E                     	;# 
  2471  009F                     	;# 
  2472  010C                     	;# 
  2473  010C                     	;# 
  2474  010D                     	;# 
  2475  010E                     	;# 
  2476  010F                     	;# 
  2477  010F                     	;# 
  2478  0110                     	;# 
  2479  0111                     	;# 
  2480  0112                     	;# 
  2481  0113                     	;# 
  2482  0114                     	;# 
  2483  0115                     	;# 
  2484  0116                     	;# 
  2485  0117                     	;# 
  2486  0118                     	;# 
  2487  0119                     	;# 
  2488  0119                     	;# 
  2489  0119                     	;# 
  2490  011A                     	;# 
  2491  011A                     	;# 
  2492  011A                     	;# 
  2493  011B                     	;# 
  2494  011B                     	;# 
  2495  011B                     	;# 
  2496  011B                     	;# 
  2497  011B                     	;# 
  2498  011C                     	;# 
  2499  011C                     	;# 
  2500  011C                     	;# 
  2501  011D                     	;# 
  2502  011D                     	;# 
  2503  011D                     	;# 
  2504  011E                     	;# 
  2505  011E                     	;# 
  2506  011E                     	;# 
  2507  011F                     	;# 
  2508  011F                     	;# 
  2509  011F                     	;# 
  2510  011F                     	;# 
  2511  011F                     	;# 
  2512  018C                     	;# 
  2513  018D                     	;# 
  2514  018E                     	;# 
  2515  018F                     	;# 
  2516  0190                     	;# 
  2517  0191                     	;# 
  2518  0192                     	;# 
  2519  0196                     	;# 
  2520  0197                     	;# 
  2521  0198                     	;# 
  2522  0199                     	;# 
  2523  019A                     	;# 
  2524  019B                     	;# 
  2525  019C                     	;# 
  2526  020C                     	;# 
  2527  020D                     	;# 
  2528  020E                     	;# 
  2529  020E                     	;# 
  2530  020F                     	;# 
  2531  020F                     	;# 
  2532  0210                     	;# 
  2533  0210                     	;# 
  2534  0211                     	;# 
  2535  0211                     	;# 
  2536  0212                     	;# 
  2537  0213                     	;# 
  2538  0214                     	;# 
  2539  0214                     	;# 
  2540  0215                     	;# 
  2541  0215                     	;# 
  2542  0216                     	;# 
  2543  0216                     	;# 
  2544  0217                     	;# 
  2545  0217                     	;# 
  2546  0218                     	;# 
  2547  0219                     	;# 
  2548  021A                     	;# 
  2549  021A                     	;# 
  2550  021B                     	;# 
  2551  021B                     	;# 
  2552  021C                     	;# 
  2553  021C                     	;# 
  2554  021D                     	;# 
  2555  021D                     	;# 
  2556  021E                     	;# 
  2557  021F                     	;# 
  2558  028C                     	;# 
  2559  028C                     	;# 
  2560  028D                     	;# 
  2561  028D                     	;# 
  2562  028E                     	;# 
  2563  028F                     	;# 
  2564  0290                     	;# 
  2565  0291                     	;# 
  2566  0292                     	;# 
  2567  0292                     	;# 
  2568  0293                     	;# 
  2569  0293                     	;# 
  2570  0294                     	;# 
  2571  0295                     	;# 
  2572  0296                     	;# 
  2573  0297                     	;# 
  2574  0298                     	;# 
  2575  0298                     	;# 
  2576  0299                     	;# 
  2577  0299                     	;# 
  2578  029A                     	;# 
  2579  029B                     	;# 
  2580  029C                     	;# 
  2581  029D                     	;# 
  2582  029F                     	;# 
  2583  030C                     	;# 
  2584  030C                     	;# 
  2585  030D                     	;# 
  2586  030E                     	;# 
  2587  030F                     	;# 
  2588  0310                     	;# 
  2589  0310                     	;# 
  2590  0311                     	;# 
  2591  0312                     	;# 
  2592  0313                     	;# 
  2593  0314                     	;# 
  2594  0314                     	;# 
  2595  0315                     	;# 
  2596  0316                     	;# 
  2597  0317                     	;# 
  2598  0318                     	;# 
  2599  0318                     	;# 
  2600  0319                     	;# 
  2601  031A                     	;# 
  2602  031B                     	;# 
  2603  038C                     	;# 
  2604  038C                     	;# 
  2605  038D                     	;# 
  2606  038E                     	;# 
  2607  0390                     	;# 
  2608  0390                     	;# 
  2609  0391                     	;# 
  2610  0392                     	;# 
  2611  048C                     	;# 
  2612  048C                     	;# 
  2613  048D                     	;# 
  2614  048E                     	;# 
  2615  048F                     	;# 
  2616  048F                     	;# 
  2617  0490                     	;# 
  2618  0491                     	;# 
  2619  0492                     	;# 
  2620  0492                     	;# 
  2621  0493                     	;# 
  2622  0494                     	;# 
  2623  0495                     	;# 
  2624  0495                     	;# 
  2625  0496                     	;# 
  2626  0497                     	;# 
  2627  0498                     	;# 
  2628  0499                     	;# 
  2629  049A                     	;# 
  2630  049B                     	;# 
  2631  049C                     	;# 
  2632  049D                     	;# 
  2633  058C                     	;# 
  2634  058C                     	;# 
  2635  058D                     	;# 
  2636  058E                     	;# 
  2637  058F                     	;# 
  2638  058F                     	;# 
  2639  0590                     	;# 
  2640  0591                     	;# 
  2641  0592                     	;# 
  2642  0593                     	;# 
  2643  059C                     	;# 
  2644  059C                     	;# 
  2645  059D                     	;# 
  2646  059D                     	;# 
  2647  059E                     	;# 
  2648  059F                     	;# 
  2649  060C                     	;# 
  2650  060C                     	;# 
  2651  060D                     	;# 
  2652  060D                     	;# 
  2653  060E                     	;# 
  2654  060F                     	;# 
  2655  0610                     	;# 
  2656  0611                     	;# 
  2657  0612                     	;# 
  2658  0613                     	;# 
  2659  0614                     	;# 
  2660  0616                     	;# 
  2661  0616                     	;# 
  2662  0617                     	;# 
  2663  0617                     	;# 
  2664  0618                     	;# 
  2665  0619                     	;# 
  2666  061A                     	;# 
  2667  061B                     	;# 
  2668  061C                     	;# 
  2669  061D                     	;# 
  2670  061E                     	;# 
  2671  070C                     	;# 
  2672  070D                     	;# 
  2673  070E                     	;# 
  2674  070F                     	;# 
  2675  0710                     	;# 
  2676  0711                     	;# 
  2677  0712                     	;# 
  2678  0713                     	;# 
  2679  0714                     	;# 
  2680  0716                     	;# 
  2681  0717                     	;# 
  2682  0718                     	;# 
  2683  0719                     	;# 
  2684  071A                     	;# 
  2685  071B                     	;# 
  2686  071C                     	;# 
  2687  071D                     	;# 
  2688  071E                     	;# 
  2689  0796                     	;# 
  2690  0797                     	;# 
  2691  0798                     	;# 
  2692  0799                     	;# 
  2693  079A                     	;# 
  2694  079B                     	;# 
  2695  079C                     	;# 
  2696  079D                     	;# 
  2697  080C                     	;# 
  2698  080D                     	;# 
  2699  080E                     	;# 
  2700  080F                     	;# 
  2701  0810                     	;# 
  2702  0811                     	;# 
  2703  0812                     	;# 
  2704  0813                     	;# 
  2705  0814                     	;# 
  2706  081A                     	;# 
  2707  081A                     	;# 
  2708  081B                     	;# 
  2709  081C                     	;# 
  2710  081C                     	;# 
  2711  081D                     	;# 
  2712  081E                     	;# 
  2713  081F                     	;# 
  2714  088C                     	;# 
  2715  088D                     	;# 
  2716  088E                     	;# 
  2717  088F                     	;# 
  2718  0890                     	;# 
  2719  0891                     	;# 
  2720  0892                     	;# 
  2721  0893                     	;# 
  2722  0895                     	;# 
  2723  0896                     	;# 
  2724  0897                     	;# 
  2725  0898                     	;# 
  2726  0899                     	;# 
  2727  089A                     	;# 
  2728  089B                     	;# 
  2729  090C                     	;# 
  2730  090E                     	;# 
  2731  090F                     	;# 
  2732  091F                     	;# 
  2733  098F                     	;# 
  2734  098F                     	;# 
  2735  0990                     	;# 
  2736  0991                     	;# 
  2737  0992                     	;# 
  2738  0993                     	;# 
  2739  0994                     	;# 
  2740  0995                     	;# 
  2741  0996                     	;# 
  2742  0997                     	;# 
  2743  1E0F                     	;# 
  2744  1E10                     	;# 
  2745  1E11                     	;# 
  2746  1E12                     	;# 
  2747  1E13                     	;# 
  2748  1E14                     	;# 
  2749  1E15                     	;# 
  2750  1E16                     	;# 
  2751  1E17                     	;# 
  2752  1E18                     	;# 
  2753  1E19                     	;# 
  2754  1E1A                     	;# 
  2755  1E1B                     	;# 
  2756  1E1C                     	;# 
  2757  1E1D                     	;# 
  2758  1E1E                     	;# 
  2759  1E1F                     	;# 
  2760  1E20                     	;# 
  2761  1E21                     	;# 
  2762  1E22                     	;# 
  2763  1E23                     	;# 
  2764  1E24                     	;# 
  2765  1E25                     	;# 
  2766  1E26                     	;# 
  2767  1E27                     	;# 
  2768  1E28                     	;# 
  2769  1E29                     	;# 
  2770  1E2A                     	;# 
  2771  1E2B                     	;# 
  2772  1E2C                     	;# 
  2773  1E2D                     	;# 
  2774  1E2E                     	;# 
  2775  1E2F                     	;# 
  2776  1E30                     	;# 
  2777  1E31                     	;# 
  2778  1E32                     	;# 
  2779  1E33                     	;# 
  2780  1E34                     	;# 
  2781  1E35                     	;# 
  2782  1E36                     	;# 
  2783  1E37                     	;# 
  2784  1E8F                     	;# 
  2785  1E90                     	;# 
  2786  1E91                     	;# 
  2787  1E92                     	;# 
  2788  1E93                     	;# 
  2789  1E94                     	;# 
  2790  1E95                     	;# 
  2791  1E96                     	;# 
  2792  1E97                     	;# 
  2793  1E9C                     	;# 
  2794  1E9D                     	;# 
  2795  1E9E                     	;# 
  2796  1EA1                     	;# 
  2797  1EA2                     	;# 
  2798  1EA3                     	;# 
  2799  1EA4                     	;# 
  2800  1EA9                     	;# 
  2801  1EAA                     	;# 
  2802  1EB1                     	;# 
  2803  1EB2                     	;# 
  2804  1EB8                     	;# 
  2805  1EB9                     	;# 
  2806  1EBA                     	;# 
  2807  1EBB                     	;# 
  2808  1EBC                     	;# 
  2809  1EBD                     	;# 
  2810  1EBE                     	;# 
  2811  1EC3                     	;# 
  2812  1EC5                     	;# 
  2813  1EC6                     	;# 
  2814  1EC7                     	;# 
  2815  1EC8                     	;# 
  2816  1EC9                     	;# 
  2817  1ECA                     	;# 
  2818  1ECB                     	;# 
  2819  1ECB                     	;# 
  2820  1ECB                     	;# 
  2821  1ECC                     	;# 
  2822  1ECC                     	;# 
  2823  1ECC                     	;# 
  2824  1F10                     	;# 
  2825  1F11                     	;# 
  2826  1F12                     	;# 
  2827  1F14                     	;# 
  2828  1F15                     	;# 
  2829  1F1C                     	;# 
  2830  1F1D                     	;# 
  2831  1F1E                     	;# 
  2832  1F1F                     	;# 
  2833  1F20                     	;# 
  2834  1F21                     	;# 
  2835  1F22                     	;# 
  2836  1F23                     	;# 
  2837  1F24                     	;# 
  2838  1F25                     	;# 
  2839  1F26                     	;# 
  2840  1F27                     	;# 
  2841  1F38                     	;# 
  2842  1F39                     	;# 
  2843  1F3A                     	;# 
  2844  1F3B                     	;# 
  2845  1F3C                     	;# 
  2846  1F3D                     	;# 
  2847  1F3E                     	;# 
  2848  1F3F                     	;# 
  2849  1F43                     	;# 
  2850  1F44                     	;# 
  2851  1F45                     	;# 
  2852  1F46                     	;# 
  2853  1F47                     	;# 
  2854  1F48                     	;# 
  2855  1F49                     	;# 
  2856  1F4A                     	;# 
  2857  1F4E                     	;# 
  2858  1F4F                     	;# 
  2859  1F50                     	;# 
  2860  1F51                     	;# 
  2861  1F52                     	;# 
  2862  1F53                     	;# 
  2863  1F54                     	;# 
  2864  1F55                     	;# 
  2865  1FE4                     	;# 
  2866  1FE5                     	;# 
  2867  1FE6                     	;# 
  2868  1FE7                     	;# 
  2869  1FE8                     	;# 
  2870  1FE8                     	;# 
  2871  1FE9                     	;# 
  2872  1FEA                     	;# 
  2873  1FEB                     	;# 
  2874  1FED                     	;# 
  2875  1FEE                     	;# 
  2876  1FEF                     	;# 
  2877  0000                     	;# 
  2878  0001                     	;# 
  2879  0002                     	;# 
  2880  0003                     	;# 
  2881  0004                     	;# 
  2882  0005                     	;# 
  2883  0006                     	;# 
  2884  0007                     	;# 
  2885  0008                     	;# 
  2886  0009                     	;# 
  2887  000A                     	;# 
  2888  000B                     	;# 
  2889  000C                     	;# 
  2890  000D                     	;# 
  2891  000E                     	;# 
  2892  0012                     	;# 
  2893  0013                     	;# 
  2894  0014                     	;# 
  2895  0018                     	;# 
  2896  0019                     	;# 
  2897  001A                     	;# 
  2898  008C                     	;# 
  2899  008C                     	;# 
  2900  008D                     	;# 
  2901  008E                     	;# 
  2902  008E                     	;# 
  2903  008F                     	;# 
  2904  0090                     	;# 
  2905  0090                     	;# 
  2906  0091                     	;# 
  2907  0092                     	;# 
  2908  0092                     	;# 
  2909  0093                     	;# 
  2910  0094                     	;# 
  2911  0094                     	;# 
  2912  0095                     	;# 
  2913  0096                     	;# 
  2914  0096                     	;# 
  2915  0097                     	;# 
  2916  0098                     	;# 
  2917  0099                     	;# 
  2918  009A                     	;# 
  2919  009B                     	;# 
  2920  009B                     	;# 
  2921  009C                     	;# 
  2922  009D                     	;# 
  2923  009D                     	;# 
  2924  009E                     	;# 
  2925  009F                     	;# 
  2926  010C                     	;# 
  2927  010C                     	;# 
  2928  010D                     	;# 
  2929  010E                     	;# 
  2930  010F                     	;# 
  2931  010F                     	;# 
  2932  0110                     	;# 
  2933  0111                     	;# 
  2934  0112                     	;# 
  2935  0113                     	;# 
  2936  0114                     	;# 
  2937  0115                     	;# 
  2938  0116                     	;# 
  2939  0117                     	;# 
  2940  0118                     	;# 
  2941  0119                     	;# 
  2942  0119                     	;# 
  2943  0119                     	;# 
  2944  011A                     	;# 
  2945  011A                     	;# 
  2946  011A                     	;# 
  2947  011B                     	;# 
  2948  011B                     	;# 
  2949  011B                     	;# 
  2950  011B                     	;# 
  2951  011B                     	;# 
  2952  011C                     	;# 
  2953  011C                     	;# 
  2954  011C                     	;# 
  2955  011D                     	;# 
  2956  011D                     	;# 
  2957  011D                     	;# 
  2958  011E                     	;# 
  2959  011E                     	;# 
  2960  011E                     	;# 
  2961  011F                     	;# 
  2962  011F                     	;# 
  2963  011F                     	;# 
  2964  011F                     	;# 
  2965  011F                     	;# 
  2966  018C                     	;# 
  2967  018D                     	;# 
  2968  018E                     	;# 
  2969  018F                     	;# 
  2970  0190                     	;# 
  2971  0191                     	;# 
  2972  0192                     	;# 
  2973  0196                     	;# 
  2974  0197                     	;# 
  2975  0198                     	;# 
  2976  0199                     	;# 
  2977  019A                     	;# 
  2978  019B                     	;# 
  2979  019C                     	;# 
  2980  020C                     	;# 
  2981  020D                     	;# 
  2982  020E                     	;# 
  2983  020E                     	;# 
  2984  020F                     	;# 
  2985  020F                     	;# 
  2986  0210                     	;# 
  2987  0210                     	;# 
  2988  0211                     	;# 
  2989  0211                     	;# 
  2990  0212                     	;# 
  2991  0213                     	;# 
  2992  0214                     	;# 
  2993  0214                     	;# 
  2994  0215                     	;# 
  2995  0215                     	;# 
  2996  0216                     	;# 
  2997  0216                     	;# 
  2998  0217                     	;# 
  2999  0217                     	;# 
  3000  0218                     	;# 
  3001  0219                     	;# 
  3002  021A                     	;# 
  3003  021A                     	;# 
  3004  021B                     	;# 
  3005  021B                     	;# 
  3006  021C                     	;# 
  3007  021C                     	;# 
  3008  021D                     	;# 
  3009  021D                     	;# 
  3010  021E                     	;# 
  3011  021F                     	;# 
  3012  028C                     	;# 
  3013  028C                     	;# 
  3014  028D                     	;# 
  3015  028D                     	;# 
  3016  028E                     	;# 
  3017  028F                     	;# 
  3018  0290                     	;# 
  3019  0291                     	;# 
  3020  0292                     	;# 
  3021  0292                     	;# 
  3022  0293                     	;# 
  3023  0293                     	;# 
  3024  0294                     	;# 
  3025  0295                     	;# 
  3026  0296                     	;# 
  3027  0297                     	;# 
  3028  0298                     	;# 
  3029  0298                     	;# 
  3030  0299                     	;# 
  3031  0299                     	;# 
  3032  029A                     	;# 
  3033  029B                     	;# 
  3034  029C                     	;# 
  3035  029D                     	;# 
  3036  029F                     	;# 
  3037  030C                     	;# 
  3038  030C                     	;# 
  3039  030D                     	;# 
  3040  030E                     	;# 
  3041  030F                     	;# 
  3042  0310                     	;# 
  3043  0310                     	;# 
  3044  0311                     	;# 
  3045  0312                     	;# 
  3046  0313                     	;# 
  3047  0314                     	;# 
  3048  0314                     	;# 
  3049  0315                     	;# 
  3050  0316                     	;# 
  3051  0317                     	;# 
  3052  0318                     	;# 
  3053  0318                     	;# 
  3054  0319                     	;# 
  3055  031A                     	;# 
  3056  031B                     	;# 
  3057  038C                     	;# 
  3058  038C                     	;# 
  3059  038D                     	;# 
  3060  038E                     	;# 
  3061  0390                     	;# 
  3062  0390                     	;# 
  3063  0391                     	;# 
  3064  0392                     	;# 
  3065  048C                     	;# 
  3066  048C                     	;# 
  3067  048D                     	;# 
  3068  048E                     	;# 
  3069  048F                     	;# 
  3070  048F                     	;# 
  3071  0490                     	;# 
  3072  0491                     	;# 
  3073  0492                     	;# 
  3074  0492                     	;# 
  3075  0493                     	;# 
  3076  0494                     	;# 
  3077  0495                     	;# 
  3078  0495                     	;# 
  3079  0496                     	;# 
  3080  0497                     	;# 
  3081  0498                     	;# 
  3082  0499                     	;# 
  3083  049A                     	;# 
  3084  049B                     	;# 
  3085  049C                     	;# 
  3086  049D                     	;# 
  3087  058C                     	;# 
  3088  058C                     	;# 
  3089  058D                     	;# 
  3090  058E                     	;# 
  3091  058F                     	;# 
  3092  058F                     	;# 
  3093  0590                     	;# 
  3094  0591                     	;# 
  3095  0592                     	;# 
  3096  0593                     	;# 
  3097  059C                     	;# 
  3098  059C                     	;# 
  3099  059D                     	;# 
  3100  059D                     	;# 
  3101  059E                     	;# 
  3102  059F                     	;# 
  3103  060C                     	;# 
  3104  060C                     	;# 
  3105  060D                     	;# 
  3106  060D                     	;# 
  3107  060E                     	;# 
  3108  060F                     	;# 
  3109  0610                     	;# 
  3110  0611                     	;# 
  3111  0612                     	;# 
  3112  0613                     	;# 
  3113  0614                     	;# 
  3114  0616                     	;# 
  3115  0616                     	;# 
  3116  0617                     	;# 
  3117  0617                     	;# 
  3118  0618                     	;# 
  3119  0619                     	;# 
  3120  061A                     	;# 
  3121  061B                     	;# 
  3122  061C                     	;# 
  3123  061D                     	;# 
  3124  061E                     	;# 
  3125  070C                     	;# 
  3126  070D                     	;# 
  3127  070E                     	;# 
  3128  070F                     	;# 
  3129  0710                     	;# 
  3130  0711                     	;# 
  3131  0712                     	;# 
  3132  0713                     	;# 
  3133  0714                     	;# 
  3134  0716                     	;# 
  3135  0717                     	;# 
  3136  0718                     	;# 
  3137  0719                     	;# 
  3138  071A                     	;# 
  3139  071B                     	;# 
  3140  071C                     	;# 
  3141  071D                     	;# 
  3142  071E                     	;# 
  3143  0796                     	;# 
  3144  0797                     	;# 
  3145  0798                     	;# 
  3146  0799                     	;# 
  3147  079A                     	;# 
  3148  079B                     	;# 
  3149  079C                     	;# 
  3150  079D                     	;# 
  3151  080C                     	;# 
  3152  080D                     	;# 
  3153  080E                     	;# 
  3154  080F                     	;# 
  3155  0810                     	;# 
  3156  0811                     	;# 
  3157  0812                     	;# 
  3158  0813                     	;# 
  3159  0814                     	;# 
  3160  081A                     	;# 
  3161  081A                     	;# 
  3162  081B                     	;# 
  3163  081C                     	;# 
  3164  081C                     	;# 
  3165  081D                     	;# 
  3166  081E                     	;# 
  3167  081F                     	;# 
  3168  088C                     	;# 
  3169  088D                     	;# 
  3170  088E                     	;# 
  3171  088F                     	;# 
  3172  0890                     	;# 
  3173  0891                     	;# 
  3174  0892                     	;# 
  3175  0893                     	;# 
  3176  0895                     	;# 
  3177  0896                     	;# 
  3178  0897                     	;# 
  3179  0898                     	;# 
  3180  0899                     	;# 
  3181  089A                     	;# 
  3182  089B                     	;# 
  3183  090C                     	;# 
  3184  090E                     	;# 
  3185  090F                     	;# 
  3186  091F                     	;# 
  3187  098F                     	;# 
  3188  098F                     	;# 
  3189  0990                     	;# 
  3190  0991                     	;# 
  3191  0992                     	;# 
  3192  0993                     	;# 
  3193  0994                     	;# 
  3194  0995                     	;# 
  3195  0996                     	;# 
  3196  0997                     	;# 
  3197  1E0F                     	;# 
  3198  1E10                     	;# 
  3199  1E11                     	;# 
  3200  1E12                     	;# 
  3201  1E13                     	;# 
  3202  1E14                     	;# 
  3203  1E15                     	;# 
  3204  1E16                     	;# 
  3205  1E17                     	;# 
  3206  1E18                     	;# 
  3207  1E19                     	;# 
  3208  1E1A                     	;# 
  3209  1E1B                     	;# 
  3210  1E1C                     	;# 
  3211  1E1D                     	;# 
  3212  1E1E                     	;# 
  3213  1E1F                     	;# 
  3214  1E20                     	;# 
  3215  1E21                     	;# 
  3216  1E22                     	;# 
  3217  1E23                     	;# 
  3218  1E24                     	;# 
  3219  1E25                     	;# 
  3220  1E26                     	;# 
  3221  1E27                     	;# 
  3222  1E28                     	;# 
  3223  1E29                     	;# 
  3224  1E2A                     	;# 
  3225  1E2B                     	;# 
  3226  1E2C                     	;# 
  3227  1E2D                     	;# 
  3228  1E2E                     	;# 
  3229  1E2F                     	;# 
  3230  1E30                     	;# 
  3231  1E31                     	;# 
  3232  1E32                     	;# 
  3233  1E33                     	;# 
  3234  1E34                     	;# 
  3235  1E35                     	;# 
  3236  1E36                     	;# 
  3237  1E37                     	;# 
  3238  1E8F                     	;# 
  3239  1E90                     	;# 
  3240  1E91                     	;# 
  3241  1E92                     	;# 
  3242  1E93                     	;# 
  3243  1E94                     	;# 
  3244  1E95                     	;# 
  3245  1E96                     	;# 
  3246  1E97                     	;# 
  3247  1E9C                     	;# 
  3248  1E9D                     	;# 
  3249  1E9E                     	;# 
  3250  1EA1                     	;# 
  3251  1EA2                     	;# 
  3252  1EA3                     	;# 
  3253  1EA4                     	;# 
  3254  1EA9                     	;# 
  3255  1EAA                     	;# 
  3256  1EB1                     	;# 
  3257  1EB2                     	;# 
  3258  1EB8                     	;# 
  3259  1EB9                     	;# 
  3260  1EBA                     	;# 
  3261  1EBB                     	;# 
  3262  1EBC                     	;# 
  3263  1EBD                     	;# 
  3264  1EBE                     	;# 
  3265  1EC3                     	;# 
  3266  1EC5                     	;# 
  3267  1EC6                     	;# 
  3268  1EC7                     	;# 
  3269  1EC8                     	;# 
  3270  1EC9                     	;# 
  3271  1ECA                     	;# 
  3272  1ECB                     	;# 
  3273  1ECB                     	;# 
  3274  1ECB                     	;# 
  3275  1ECC                     	;# 
  3276  1ECC                     	;# 
  3277  1ECC                     	;# 
  3278  1F10                     	;# 
  3279  1F11                     	;# 
  3280  1F12                     	;# 
  3281  1F14                     	;# 
  3282  1F15                     	;# 
  3283  1F1C                     	;# 
  3284  1F1D                     	;# 
  3285  1F1E                     	;# 
  3286  1F1F                     	;# 
  3287  1F20                     	;# 
  3288  1F21                     	;# 
  3289  1F22                     	;# 
  3290  1F23                     	;# 
  3291  1F24                     	;# 
  3292  1F25                     	;# 
  3293  1F26                     	;# 
  3294  1F27                     	;# 
  3295  1F38                     	;# 
  3296  1F39                     	;# 
  3297  1F3A                     	;# 
  3298  1F3B                     	;# 
  3299  1F3C                     	;# 
  3300  1F3D                     	;# 
  3301  1F3E                     	;# 
  3302  1F3F                     	;# 
  3303  1F43                     	;# 
  3304  1F44                     	;# 
  3305  1F45                     	;# 
  3306  1F46                     	;# 
  3307  1F47                     	;# 
  3308  1F48                     	;# 
  3309  1F49                     	;# 
  3310  1F4A                     	;# 
  3311  1F4E                     	;# 
  3312  1F4F                     	;# 
  3313  1F50                     	;# 
  3314  1F51                     	;# 
  3315  1F52                     	;# 
  3316  1F53                     	;# 
  3317  1F54                     	;# 
  3318  1F55                     	;# 
  3319  1FE4                     	;# 
  3320  1FE5                     	;# 
  3321  1FE6                     	;# 
  3322  1FE7                     	;# 
  3323  1FE8                     	;# 
  3324  1FE8                     	;# 
  3325  1FE9                     	;# 
  3326  1FEA                     	;# 
  3327  1FEB                     	;# 
  3328  1FED                     	;# 
  3329  1FEE                     	;# 
  3330  1FEF                     	;# 
  3331  0000                     	;# 
  3332  0001                     	;# 
  3333  0002                     	;# 
  3334  0003                     	;# 
  3335  0004                     	;# 
  3336  0005                     	;# 
  3337  0006                     	;# 
  3338  0007                     	;# 
  3339  0008                     	;# 
  3340  0009                     	;# 
  3341  000A                     	;# 
  3342  000B                     	;# 
  3343  000C                     	;# 
  3344  000D                     	;# 
  3345  000E                     	;# 
  3346  0012                     	;# 
  3347  0013                     	;# 
  3348  0014                     	;# 
  3349  0018                     	;# 
  3350  0019                     	;# 
  3351  001A                     	;# 
  3352  008C                     	;# 
  3353  008C                     	;# 
  3354  008D                     	;# 
  3355  008E                     	;# 
  3356  008E                     	;# 
  3357  008F                     	;# 
  3358  0090                     	;# 
  3359  0090                     	;# 
  3360  0091                     	;# 
  3361  0092                     	;# 
  3362  0092                     	;# 
  3363  0093                     	;# 
  3364  0094                     	;# 
  3365  0094                     	;# 
  3366  0095                     	;# 
  3367  0096                     	;# 
  3368  0096                     	;# 
  3369  0097                     	;# 
  3370  0098                     	;# 
  3371  0099                     	;# 
  3372  009A                     	;# 
  3373  009B                     	;# 
  3374  009B                     	;# 
  3375  009C                     	;# 
  3376  009D                     	;# 
  3377  009D                     	;# 
  3378  009E                     	;# 
  3379  009F                     	;# 
  3380  010C                     	;# 
  3381  010C                     	;# 
  3382  010D                     	;# 
  3383  010E                     	;# 
  3384  010F                     	;# 
  3385  010F                     	;# 
  3386  0110                     	;# 
  3387  0111                     	;# 
  3388  0112                     	;# 
  3389  0113                     	;# 
  3390  0114                     	;# 
  3391  0115                     	;# 
  3392  0116                     	;# 
  3393  0117                     	;# 
  3394  0118                     	;# 
  3395  0119                     	;# 
  3396  0119                     	;# 
  3397  0119                     	;# 
  3398  011A                     	;# 
  3399  011A                     	;# 
  3400  011A                     	;# 
  3401  011B                     	;# 
  3402  011B                     	;# 
  3403  011B                     	;# 
  3404  011B                     	;# 
  3405  011B                     	;# 
  3406  011C                     	;# 
  3407  011C                     	;# 
  3408  011C                     	;# 
  3409  011D                     	;# 
  3410  011D                     	;# 
  3411  011D                     	;# 
  3412  011E                     	;# 
  3413  011E                     	;# 
  3414  011E                     	;# 
  3415  011F                     	;# 
  3416  011F                     	;# 
  3417  011F                     	;# 
  3418  011F                     	;# 
  3419  011F                     	;# 
  3420  018C                     	;# 
  3421  018D                     	;# 
  3422  018E                     	;# 
  3423  018F                     	;# 
  3424  0190                     	;# 
  3425  0191                     	;# 
  3426  0192                     	;# 
  3427  0196                     	;# 
  3428  0197                     	;# 
  3429  0198                     	;# 
  3430  0199                     	;# 
  3431  019A                     	;# 
  3432  019B                     	;# 
  3433  019C                     	;# 
  3434  020C                     	;# 
  3435  020D                     	;# 
  3436  020E                     	;# 
  3437  020E                     	;# 
  3438  020F                     	;# 
  3439  020F                     	;# 
  3440  0210                     	;# 
  3441  0210                     	;# 
  3442  0211                     	;# 
  3443  0211                     	;# 
  3444  0212                     	;# 
  3445  0213                     	;# 
  3446  0214                     	;# 
  3447  0214                     	;# 
  3448  0215                     	;# 
  3449  0215                     	;# 
  3450  0216                     	;# 
  3451  0216                     	;# 
  3452  0217                     	;# 
  3453  0217                     	;# 
  3454  0218                     	;# 
  3455  0219                     	;# 
  3456  021A                     	;# 
  3457  021A                     	;# 
  3458  021B                     	;# 
  3459  021B                     	;# 
  3460  021C                     	;# 
  3461  021C                     	;# 
  3462  021D                     	;# 
  3463  021D                     	;# 
  3464  021E                     	;# 
  3465  021F                     	;# 
  3466  028C                     	;# 
  3467  028C                     	;# 
  3468  028D                     	;# 
  3469  028D                     	;# 
  3470  028E                     	;# 
  3471  028F                     	;# 
  3472  0290                     	;# 
  3473  0291                     	;# 
  3474  0292                     	;# 
  3475  0292                     	;# 
  3476  0293                     	;# 
  3477  0293                     	;# 
  3478  0294                     	;# 
  3479  0295                     	;# 
  3480  0296                     	;# 
  3481  0297                     	;# 
  3482  0298                     	;# 
  3483  0298                     	;# 
  3484  0299                     	;# 
  3485  0299                     	;# 
  3486  029A                     	;# 
  3487  029B                     	;# 
  3488  029C                     	;# 
  3489  029D                     	;# 
  3490  029F                     	;# 
  3491  030C                     	;# 
  3492  030C                     	;# 
  3493  030D                     	;# 
  3494  030E                     	;# 
  3495  030F                     	;# 
  3496  0310                     	;# 
  3497  0310                     	;# 
  3498  0311                     	;# 
  3499  0312                     	;# 
  3500  0313                     	;# 
  3501  0314                     	;# 
  3502  0314                     	;# 
  3503  0315                     	;# 
  3504  0316                     	;# 
  3505  0317                     	;# 
  3506  0318                     	;# 
  3507  0318                     	;# 
  3508  0319                     	;# 
  3509  031A                     	;# 
  3510  031B                     	;# 
  3511  038C                     	;# 
  3512  038C                     	;# 
  3513  038D                     	;# 
  3514  038E                     	;# 
  3515  0390                     	;# 
  3516  0390                     	;# 
  3517  0391                     	;# 
  3518  0392                     	;# 
  3519  048C                     	;# 
  3520  048C                     	;# 
  3521  048D                     	;# 
  3522  048E                     	;# 
  3523  048F                     	;# 
  3524  048F                     	;# 
  3525  0490                     	;# 
  3526  0491                     	;# 
  3527  0492                     	;# 
  3528  0492                     	;# 
  3529  0493                     	;# 
  3530  0494                     	;# 
  3531  0495                     	;# 
  3532  0495                     	;# 
  3533  0496                     	;# 
  3534  0497                     	;# 
  3535  0498                     	;# 
  3536  0499                     	;# 
  3537  049A                     	;# 
  3538  049B                     	;# 
  3539  049C                     	;# 
  3540  049D                     	;# 
  3541  058C                     	;# 
  3542  058C                     	;# 
  3543  058D                     	;# 
  3544  058E                     	;# 
  3545  058F                     	;# 
  3546  058F                     	;# 
  3547  0590                     	;# 
  3548  0591                     	;# 
  3549  0592                     	;# 
  3550  0593                     	;# 
  3551  059C                     	;# 
  3552  059C                     	;# 
  3553  059D                     	;# 
  3554  059D                     	;# 
  3555  059E                     	;# 
  3556  059F                     	;# 
  3557  060C                     	;# 
  3558  060C                     	;# 
  3559  060D                     	;# 
  3560  060D                     	;# 
  3561  060E                     	;# 
  3562  060F                     	;# 
  3563  0610                     	;# 
  3564  0611                     	;# 
  3565  0612                     	;# 
  3566  0613                     	;# 
  3567  0614                     	;# 
  3568  0616                     	;# 
  3569  0616                     	;# 
  3570  0617                     	;# 
  3571  0617                     	;# 
  3572  0618                     	;# 
  3573  0619                     	;# 
  3574  061A                     	;# 
  3575  061B                     	;# 
  3576  061C                     	;# 
  3577  061D                     	;# 
  3578  061E                     	;# 
  3579  070C                     	;# 
  3580  070D                     	;# 
  3581  070E                     	;# 
  3582  070F                     	;# 
  3583  0710                     	;# 
  3584  0711                     	;# 
  3585  0712                     	;# 
  3586  0713                     	;# 
  3587  0714                     	;# 
  3588  0716                     	;# 
  3589  0717                     	;# 
  3590  0718                     	;# 
  3591  0719                     	;# 
  3592  071A                     	;# 
  3593  071B                     	;# 
  3594  071C                     	;# 
  3595  071D                     	;# 
  3596  071E                     	;# 
  3597  0796                     	;# 
  3598  0797                     	;# 
  3599  0798                     	;# 
  3600  0799                     	;# 
  3601  079A                     	;# 
  3602  079B                     	;# 
  3603  079C                     	;# 
  3604  079D                     	;# 
  3605  080C                     	;# 
  3606  080D                     	;# 
  3607  080E                     	;# 
  3608  080F                     	;# 
  3609  0810                     	;# 
  3610  0811                     	;# 
  3611  0812                     	;# 
  3612  0813                     	;# 
  3613  0814                     	;# 
  3614  081A                     	;# 
  3615  081A                     	;# 
  3616  081B                     	;# 
  3617  081C                     	;# 
  3618  081C                     	;# 
  3619  081D                     	;# 
  3620  081E                     	;# 
  3621  081F                     	;# 
  3622  088C                     	;# 
  3623  088D                     	;# 
  3624  088E                     	;# 
  3625  088F                     	;# 
  3626  0890                     	;# 
  3627  0891                     	;# 
  3628  0892                     	;# 
  3629  0893                     	;# 
  3630  0895                     	;# 
  3631  0896                     	;# 
  3632  0897                     	;# 
  3633  0898                     	;# 
  3634  0899                     	;# 
  3635  089A                     	;# 
  3636  089B                     	;# 
  3637  090C                     	;# 
  3638  090E                     	;# 
  3639  090F                     	;# 
  3640  091F                     	;# 
  3641  098F                     	;# 
  3642  098F                     	;# 
  3643  0990                     	;# 
  3644  0991                     	;# 
  3645  0992                     	;# 
  3646  0993                     	;# 
  3647  0994                     	;# 
  3648  0995                     	;# 
  3649  0996                     	;# 
  3650  0997                     	;# 
  3651  1E0F                     	;# 
  3652  1E10                     	;# 
  3653  1E11                     	;# 
  3654  1E12                     	;# 
  3655  1E13                     	;# 
  3656  1E14                     	;# 
  3657  1E15                     	;# 
  3658  1E16                     	;# 
  3659  1E17                     	;# 
  3660  1E18                     	;# 
  3661  1E19                     	;# 
  3662  1E1A                     	;# 
  3663  1E1B                     	;# 
  3664  1E1C                     	;# 
  3665  1E1D                     	;# 
  3666  1E1E                     	;# 
  3667  1E1F                     	;# 
  3668  1E20                     	;# 
  3669  1E21                     	;# 
  3670  1E22                     	;# 
  3671  1E23                     	;# 
  3672  1E24                     	;# 
  3673  1E25                     	;# 
  3674  1E26                     	;# 
  3675  1E27                     	;# 
  3676  1E28                     	;# 
  3677  1E29                     	;# 
  3678  1E2A                     	;# 
  3679  1E2B                     	;# 
  3680  1E2C                     	;# 
  3681  1E2D                     	;# 
  3682  1E2E                     	;# 
  3683  1E2F                     	;# 
  3684  1E30                     	;# 
  3685  1E31                     	;# 
  3686  1E32                     	;# 
  3687  1E33                     	;# 
  3688  1E34                     	;# 
  3689  1E35                     	;# 
  3690  1E36                     	;# 
  3691  1E37                     	;# 
  3692  1E8F                     	;# 
  3693  1E90                     	;# 
  3694  1E91                     	;# 
  3695  1E92                     	;# 
  3696  1E93                     	;# 
  3697  1E94                     	;# 
  3698  1E95                     	;# 
  3699  1E96                     	;# 
  3700  1E97                     	;# 
  3701  1E9C                     	;# 
  3702  1E9D                     	;# 
  3703  1E9E                     	;# 
  3704  1EA1                     	;# 
  3705  1EA2                     	;# 
  3706  1EA3                     	;# 
  3707  1EA4                     	;# 
  3708  1EA9                     	;# 
  3709  1EAA                     	;# 
  3710  1EB1                     	;# 
  3711  1EB2                     	;# 
  3712  1EB8                     	;# 
  3713  1EB9                     	;# 
  3714  1EBA                     	;# 
  3715  1EBB                     	;# 
  3716  1EBC                     	;# 
  3717  1EBD                     	;# 
  3718  1EBE                     	;# 
  3719  1EC3                     	;# 
  3720  1EC5                     	;# 
  3721  1EC6                     	;# 
  3722  1EC7                     	;# 
  3723  1EC8                     	;# 
  3724  1EC9                     	;# 
  3725  1ECA                     	;# 
  3726  1ECB                     	;# 
  3727  1ECB                     	;# 
  3728  1ECB                     	;# 
  3729  1ECC                     	;# 
  3730  1ECC                     	;# 
  3731  1ECC                     	;# 
  3732  1F10                     	;# 
  3733  1F11                     	;# 
  3734  1F12                     	;# 
  3735  1F14                     	;# 
  3736  1F15                     	;# 
  3737  1F1C                     	;# 
  3738  1F1D                     	;# 
  3739  1F1E                     	;# 
  3740  1F1F                     	;# 
  3741  1F20                     	;# 
  3742  1F21                     	;# 
  3743  1F22                     	;# 
  3744  1F23                     	;# 
  3745  1F24                     	;# 
  3746  1F25                     	;# 
  3747  1F26                     	;# 
  3748  1F27                     	;# 
  3749  1F38                     	;# 
  3750  1F39                     	;# 
  3751  1F3A                     	;# 
  3752  1F3B                     	;# 
  3753  1F3C                     	;# 
  3754  1F3D                     	;# 
  3755  1F3E                     	;# 
  3756  1F3F                     	;# 
  3757  1F43                     	;# 
  3758  1F44                     	;# 
  3759  1F45                     	;# 
  3760  1F46                     	;# 
  3761  1F47                     	;# 
  3762  1F48                     	;# 
  3763  1F49                     	;# 
  3764  1F4A                     	;# 
  3765  1F4E                     	;# 
  3766  1F4F                     	;# 
  3767  1F50                     	;# 
  3768  1F51                     	;# 
  3769  1F52                     	;# 
  3770  1F53                     	;# 
  3771  1F54                     	;# 
  3772  1F55                     	;# 
  3773  1FE4                     	;# 
  3774  1FE5                     	;# 
  3775  1FE6                     	;# 
  3776  1FE7                     	;# 
  3777  1FE8                     	;# 
  3778  1FE8                     	;# 
  3779  1FE9                     	;# 
  3780  1FEA                     	;# 
  3781  1FEB                     	;# 
  3782  1FED                     	;# 
  3783  1FEE                     	;# 
  3784  1FEF                     	;# 
  3785  0000                     	;# 
  3786  0001                     	;# 
  3787  0002                     	;# 
  3788  0003                     	;# 
  3789  0004                     	;# 
  3790  0005                     	;# 
  3791  0006                     	;# 
  3792  0007                     	;# 
  3793  0008                     	;# 
  3794  0009                     	;# 
  3795  000A                     	;# 
  3796  000B                     	;# 
  3797  000C                     	;# 
  3798  000D                     	;# 
  3799  000E                     	;# 
  3800  0012                     	;# 
  3801  0013                     	;# 
  3802  0014                     	;# 
  3803  0018                     	;# 
  3804  0019                     	;# 
  3805  001A                     	;# 
  3806  008C                     	;# 
  3807  008C                     	;# 
  3808  008D                     	;# 
  3809  008E                     	;# 
  3810  008E                     	;# 
  3811  008F                     	;# 
  3812  0090                     	;# 
  3813  0090                     	;# 
  3814  0091                     	;# 
  3815  0092                     	;# 
  3816  0092                     	;# 
  3817  0093                     	;# 
  3818  0094                     	;# 
  3819  0094                     	;# 
  3820  0095                     	;# 
  3821  0096                     	;# 
  3822  0096                     	;# 
  3823  0097                     	;# 
  3824  0098                     	;# 
  3825  0099                     	;# 
  3826  009A                     	;# 
  3827  009B                     	;# 
  3828  009B                     	;# 
  3829  009C                     	;# 
  3830  009D                     	;# 
  3831  009D                     	;# 
  3832  009E                     	;# 
  3833  009F                     	;# 
  3834  010C                     	;# 
  3835  010C                     	;# 
  3836  010D                     	;# 
  3837  010E                     	;# 
  3838  010F                     	;# 
  3839  010F                     	;# 
  3840  0110                     	;# 
  3841  0111                     	;# 
  3842  0112                     	;# 
  3843  0113                     	;# 
  3844  0114                     	;# 
  3845  0115                     	;# 
  3846  0116                     	;# 
  3847  0117                     	;# 
  3848  0118                     	;# 
  3849  0119                     	;# 
  3850  0119                     	;# 
  3851  0119                     	;# 
  3852  011A                     	;# 
  3853  011A                     	;# 
  3854  011A                     	;# 
  3855  011B                     	;# 
  3856  011B                     	;# 
  3857  011B                     	;# 
  3858  011B                     	;# 
  3859  011B                     	;# 
  3860  011C                     	;# 
  3861  011C                     	;# 
  3862  011C                     	;# 
  3863  011D                     	;# 
  3864  011D                     	;# 
  3865  011D                     	;# 
  3866  011E                     	;# 
  3867  011E                     	;# 
  3868  011E                     	;# 
  3869  011F                     	;# 
  3870  011F                     	;# 
  3871  011F                     	;# 
  3872  011F                     	;# 
  3873  011F                     	;# 
  3874  018C                     	;# 
  3875  018D                     	;# 
  3876  018E                     	;# 
  3877  018F                     	;# 
  3878  0190                     	;# 
  3879  0191                     	;# 
  3880  0192                     	;# 
  3881  0196                     	;# 
  3882  0197                     	;# 
  3883  0198                     	;# 
  3884  0199                     	;# 
  3885  019A                     	;# 
  3886  019B                     	;# 
  3887  019C                     	;# 
  3888  020C                     	;# 
  3889  020D                     	;# 
  3890  020E                     	;# 
  3891  020E                     	;# 
  3892  020F                     	;# 
  3893  020F                     	;# 
  3894  0210                     	;# 
  3895  0210                     	;# 
  3896  0211                     	;# 
  3897  0211                     	;# 
  3898  0212                     	;# 
  3899  0213                     	;# 
  3900  0214                     	;# 
  3901  0214                     	;# 
  3902  0215                     	;# 
  3903  0215                     	;# 
  3904  0216                     	;# 
  3905  0216                     	;# 
  3906  0217                     	;# 
  3907  0217                     	;# 
  3908  0218                     	;# 
  3909  0219                     	;# 
  3910  021A                     	;# 
  3911  021A                     	;# 
  3912  021B                     	;# 
  3913  021B                     	;# 
  3914  021C                     	;# 
  3915  021C                     	;# 
  3916  021D                     	;# 
  3917  021D                     	;# 
  3918  021E                     	;# 
  3919  021F                     	;# 
  3920  028C                     	;# 
  3921  028C                     	;# 
  3922  028D                     	;# 
  3923  028D                     	;# 
  3924  028E                     	;# 
  3925  028F                     	;# 
  3926  0290                     	;# 
  3927  0291                     	;# 
  3928  0292                     	;# 
  3929  0292                     	;# 
  3930  0293                     	;# 
  3931  0293                     	;# 
  3932  0294                     	;# 
  3933  0295                     	;# 
  3934  0296                     	;# 
  3935  0297                     	;# 
  3936  0298                     	;# 
  3937  0298                     	;# 
  3938  0299                     	;# 
  3939  0299                     	;# 
  3940  029A                     	;# 
  3941  029B                     	;# 
  3942  029C                     	;# 
  3943  029D                     	;# 
  3944  029F                     	;# 
  3945  030C                     	;# 
  3946  030C                     	;# 
  3947  030D                     	;# 
  3948  030E                     	;# 
  3949  030F                     	;# 
  3950  0310                     	;# 
  3951  0310                     	;# 
  3952  0311                     	;# 
  3953  0312                     	;# 
  3954  0313                     	;# 
  3955  0314                     	;# 
  3956  0314                     	;# 
  3957  0315                     	;# 
  3958  0316                     	;# 
  3959  0317                     	;# 
  3960  0318                     	;# 
  3961  0318                     	;# 
  3962  0319                     	;# 
  3963  031A                     	;# 
  3964  031B                     	;# 
  3965  038C                     	;# 
  3966  038C                     	;# 
  3967  038D                     	;# 
  3968  038E                     	;# 
  3969  0390                     	;# 
  3970  0390                     	;# 
  3971  0391                     	;# 
  3972  0392                     	;# 
  3973  048C                     	;# 
  3974  048C                     	;# 
  3975  048D                     	;# 
  3976  048E                     	;# 
  3977  048F                     	;# 
  3978  048F                     	;# 
  3979  0490                     	;# 
  3980  0491                     	;# 
  3981  0492                     	;# 
  3982  0492                     	;# 
  3983  0493                     	;# 
  3984  0494                     	;# 
  3985  0495                     	;# 
  3986  0495                     	;# 
  3987  0496                     	;# 
  3988  0497                     	;# 
  3989  0498                     	;# 
  3990  0499                     	;# 
  3991  049A                     	;# 
  3992  049B                     	;# 
  3993  049C                     	;# 
  3994  049D                     	;# 
  3995  058C                     	;# 
  3996  058C                     	;# 
  3997  058D                     	;# 
  3998  058E                     	;# 
  3999  058F                     	;# 
  4000  058F                     	;# 
  4001  0590                     	;# 
  4002  0591                     	;# 
  4003  0592                     	;# 
  4004  0593                     	;# 
  4005  059C                     	;# 
  4006  059C                     	;# 
  4007  059D                     	;# 
  4008  059D                     	;# 
  4009  059E                     	;# 
  4010  059F                     	;# 
  4011  060C                     	;# 
  4012  060C                     	;# 
  4013  060D                     	;# 
  4014  060D                     	;# 
  4015  060E                     	;# 
  4016  060F                     	;# 
  4017  0610                     	;# 
  4018  0611                     	;# 
  4019  0612                     	;# 
  4020  0613                     	;# 
  4021  0614                     	;# 
  4022  0616                     	;# 
  4023  0616                     	;# 
  4024  0617                     	;# 
  4025  0617                     	;# 
  4026  0618                     	;# 
  4027  0619                     	;# 
  4028  061A                     	;# 
  4029  061B                     	;# 
  4030  061C                     	;# 
  4031  061D                     	;# 
  4032  061E                     	;# 
  4033  070C                     	;# 
  4034  070D                     	;# 
  4035  070E                     	;# 
  4036  070F                     	;# 
  4037  0710                     	;# 
  4038  0711                     	;# 
  4039  0712                     	;# 
  4040  0713                     	;# 
  4041  0714                     	;# 
  4042  0716                     	;# 
  4043  0717                     	;# 
  4044  0718                     	;# 
  4045  0719                     	;# 
  4046  071A                     	;# 
  4047  071B                     	;# 
  4048  071C                     	;# 
  4049  071D                     	;# 
  4050  071E                     	;# 
  4051  0796                     	;# 
  4052  0797                     	;# 
  4053  0798                     	;# 
  4054  0799                     	;# 
  4055  079A                     	;# 
  4056  079B                     	;# 
  4057  079C                     	;# 
  4058  079D                     	;# 
  4059  080C                     	;# 
  4060  080D                     	;# 
  4061  080E                     	;# 
  4062  080F                     	;# 
  4063  0810                     	;# 
  4064  0811                     	;# 
  4065  0812                     	;# 
  4066  0813                     	;# 
  4067  0814                     	;# 
  4068  081A                     	;# 
  4069  081A                     	;# 
  4070  081B                     	;# 
  4071  081C                     	;# 
  4072  081C                     	;# 
  4073  081D                     	;# 
  4074  081E                     	;# 
  4075  081F                     	;# 
  4076  088C                     	;# 
  4077  088D                     	;# 
  4078  088E                     	;# 
  4079  088F                     	;# 
  4080  0890                     	;# 
  4081  0891                     	;# 
  4082  0892                     	;# 
  4083  0893                     	;# 
  4084  0895                     	;# 
  4085  0896                     	;# 
  4086  0897                     	;# 
  4087  0898                     	;# 
  4088  0899                     	;# 
  4089  089A                     	;# 
  4090  089B                     	;# 
  4091  090C                     	;# 
  4092  090E                     	;# 
  4093  090F                     	;# 
  4094  091F                     	;# 
  4095  098F                     	;# 
  4096  098F                     	;# 
  4097  0990                     	;# 
  4098  0991                     	;# 
  4099  0992                     	;# 
  4100  0993                     	;# 
  4101  0994                     	;# 
  4102  0995                     	;# 
  4103  0996                     	;# 
  4104  0997                     	;# 
  4105  1E0F                     	;# 
  4106  1E10                     	;# 
  4107  1E11                     	;# 
  4108  1E12                     	;# 
  4109  1E13                     	;# 
  4110  1E14                     	;# 
  4111  1E15                     	;# 
  4112  1E16                     	;# 
  4113  1E17                     	;# 
  4114  1E18                     	;# 
  4115  1E19                     	;# 
  4116  1E1A                     	;# 
  4117  1E1B                     	;# 
  4118  1E1C                     	;# 
  4119  1E1D                     	;# 
  4120  1E1E                     	;# 
  4121  1E1F                     	;# 
  4122  1E20                     	;# 
  4123  1E21                     	;# 
  4124  1E22                     	;# 
  4125  1E23                     	;# 
  4126  1E24                     	;# 
  4127  1E25                     	;# 
  4128  1E26                     	;# 
  4129  1E27                     	;# 
  4130  1E28                     	;# 
  4131  1E29                     	;# 
  4132  1E2A                     	;# 
  4133  1E2B                     	;# 
  4134  1E2C                     	;# 
  4135  1E2D                     	;# 
  4136  1E2E                     	;# 
  4137  1E2F                     	;# 
  4138  1E30                     	;# 
  4139  1E31                     	;# 
  4140  1E32                     	;# 
  4141  1E33                     	;# 
  4142  1E34                     	;# 
  4143  1E35                     	;# 
  4144  1E36                     	;# 
  4145  1E37                     	;# 
  4146  1E8F                     	;# 
  4147  1E90                     	;# 
  4148  1E91                     	;# 
  4149  1E92                     	;# 
  4150  1E93                     	;# 
  4151  1E94                     	;# 
  4152  1E95                     	;# 
  4153  1E96                     	;# 
  4154  1E97                     	;# 
  4155  1E9C                     	;# 
  4156  1E9D                     	;# 
  4157  1E9E                     	;# 
  4158  1EA1                     	;# 
  4159  1EA2                     	;# 
  4160  1EA3                     	;# 
  4161  1EA4                     	;# 
  4162  1EA9                     	;# 
  4163  1EAA                     	;# 
  4164  1EB1                     	;# 
  4165  1EB2                     	;# 
  4166  1EB8                     	;# 
  4167  1EB9                     	;# 
  4168  1EBA                     	;# 
  4169  1EBB                     	;# 
  4170  1EBC                     	;# 
  4171  1EBD                     	;# 
  4172  1EBE                     	;# 
  4173  1EC3                     	;# 
  4174  1EC5                     	;# 
  4175  1EC6                     	;# 
  4176  1EC7                     	;# 
  4177  1EC8                     	;# 
  4178  1EC9                     	;# 
  4179  1ECA                     	;# 
  4180  1ECB                     	;# 
  4181  1ECB                     	;# 
  4182  1ECB                     	;# 
  4183  1ECC                     	;# 
  4184  1ECC                     	;# 
  4185  1ECC                     	;# 
  4186  1F10                     	;# 
  4187  1F11                     	;# 
  4188  1F12                     	;# 
  4189  1F14                     	;# 
  4190  1F15                     	;# 
  4191  1F1C                     	;# 
  4192  1F1D                     	;# 
  4193  1F1E                     	;# 
  4194  1F1F                     	;# 
  4195  1F20                     	;# 
  4196  1F21                     	;# 
  4197  1F22                     	;# 
  4198  1F23                     	;# 
  4199  1F24                     	;# 
  4200  1F25                     	;# 
  4201  1F26                     	;# 
  4202  1F27                     	;# 
  4203  1F38                     	;# 
  4204  1F39                     	;# 
  4205  1F3A                     	;# 
  4206  1F3B                     	;# 
  4207  1F3C                     	;# 
  4208  1F3D                     	;# 
  4209  1F3E                     	;# 
  4210  1F3F                     	;# 
  4211  1F43                     	;# 
  4212  1F44                     	;# 
  4213  1F45                     	;# 
  4214  1F46                     	;# 
  4215  1F47                     	;# 
  4216  1F48                     	;# 
  4217  1F49                     	;# 
  4218  1F4A                     	;# 
  4219  1F4E                     	;# 
  4220  1F4F                     	;# 
  4221  1F50                     	;# 
  4222  1F51                     	;# 
  4223  1F52                     	;# 
  4224  1F53                     	;# 
  4225  1F54                     	;# 
  4226  1F55                     	;# 
  4227  1FE4                     	;# 
  4228  1FE5                     	;# 
  4229  1FE6                     	;# 
  4230  1FE7                     	;# 
  4231  1FE8                     	;# 
  4232  1FE8                     	;# 
  4233  1FE9                     	;# 
  4234  1FEA                     	;# 
  4235  1FEB                     	;# 
  4236  1FED                     	;# 
  4237  1FEE                     	;# 
  4238  1FEF                     	;# 
  4239  0000                     	;# 
  4240  0001                     	;# 
  4241  0002                     	;# 
  4242  0003                     	;# 
  4243  0004                     	;# 
  4244  0005                     	;# 
  4245  0006                     	;# 
  4246  0007                     	;# 
  4247  0008                     	;# 
  4248  0009                     	;# 
  4249  000A                     	;# 
  4250  000B                     	;# 
  4251  000C                     	;# 
  4252  000D                     	;# 
  4253  000E                     	;# 
  4254  0012                     	;# 
  4255  0013                     	;# 
  4256  0014                     	;# 
  4257  0018                     	;# 
  4258  0019                     	;# 
  4259  001A                     	;# 
  4260  008C                     	;# 
  4261  008C                     	;# 
  4262  008D                     	;# 
  4263  008E                     	;# 
  4264  008E                     	;# 
  4265  008F                     	;# 
  4266  0090                     	;# 
  4267  0090                     	;# 
  4268  0091                     	;# 
  4269  0092                     	;# 
  4270  0092                     	;# 
  4271  0093                     	;# 
  4272  0094                     	;# 
  4273  0094                     	;# 
  4274  0095                     	;# 
  4275  0096                     	;# 
  4276  0096                     	;# 
  4277  0097                     	;# 
  4278  0098                     	;# 
  4279  0099                     	;# 
  4280  009A                     	;# 
  4281  009B                     	;# 
  4282  009B                     	;# 
  4283  009C                     	;# 
  4284  009D                     	;# 
  4285  009D                     	;# 
  4286  009E                     	;# 
  4287  009F                     	;# 
  4288  010C                     	;# 
  4289  010C                     	;# 
  4290  010D                     	;# 
  4291  010E                     	;# 
  4292  010F                     	;# 
  4293  010F                     	;# 
  4294  0110                     	;# 
  4295  0111                     	;# 
  4296  0112                     	;# 
  4297  0113                     	;# 
  4298  0114                     	;# 
  4299  0115                     	;# 
  4300  0116                     	;# 
  4301  0117                     	;# 
  4302  0118                     	;# 
  4303  0119                     	;# 
  4304  0119                     	;# 
  4305  0119                     	;# 
  4306  011A                     	;# 
  4307  011A                     	;# 
  4308  011A                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011C                     	;# 
  4315  011C                     	;# 
  4316  011C                     	;# 
  4317  011D                     	;# 
  4318  011D                     	;# 
  4319  011D                     	;# 
  4320  011E                     	;# 
  4321  011E                     	;# 
  4322  011E                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  018C                     	;# 
  4329  018D                     	;# 
  4330  018E                     	;# 
  4331  018F                     	;# 
  4332  0190                     	;# 
  4333  0191                     	;# 
  4334  0192                     	;# 
  4335  0196                     	;# 
  4336  0197                     	;# 
  4337  0198                     	;# 
  4338  0199                     	;# 
  4339  019A                     	;# 
  4340  019B                     	;# 
  4341  019C                     	;# 
  4342  020C                     	;# 
  4343  020D                     	;# 
  4344  020E                     	;# 
  4345  020E                     	;# 
  4346  020F                     	;# 
  4347  020F                     	;# 
  4348  0210                     	;# 
  4349  0210                     	;# 
  4350  0211                     	;# 
  4351  0211                     	;# 
  4352  0212                     	;# 
  4353  0213                     	;# 
  4354  0214                     	;# 
  4355  0214                     	;# 
  4356  0215                     	;# 
  4357  0215                     	;# 
  4358  0216                     	;# 
  4359  0216                     	;# 
  4360  0217                     	;# 
  4361  0217                     	;# 
  4362  0218                     	;# 
  4363  0219                     	;# 
  4364  021A                     	;# 
  4365  021A                     	;# 
  4366  021B                     	;# 
  4367  021B                     	;# 
  4368  021C                     	;# 
  4369  021C                     	;# 
  4370  021D                     	;# 
  4371  021D                     	;# 
  4372  021E                     	;# 
  4373  021F                     	;# 
  4374  028C                     	;# 
  4375  028C                     	;# 
  4376  028D                     	;# 
  4377  028D                     	;# 
  4378  028E                     	;# 
  4379  028F                     	;# 
  4380  0290                     	;# 
  4381  0291                     	;# 
  4382  0292                     	;# 
  4383  0292                     	;# 
  4384  0293                     	;# 
  4385  0293                     	;# 
  4386  0294                     	;# 
  4387  0295                     	;# 
  4388  0296                     	;# 
  4389  0297                     	;# 
  4390  0298                     	;# 
  4391  0298                     	;# 
  4392  0299                     	;# 
  4393  0299                     	;# 
  4394  029A                     	;# 
  4395  029B                     	;# 
  4396  029C                     	;# 
  4397  029D                     	;# 
  4398  029F                     	;# 
  4399  030C                     	;# 
  4400  030C                     	;# 
  4401  030D                     	;# 
  4402  030E                     	;# 
  4403  030F                     	;# 
  4404  0310                     	;# 
  4405  0310                     	;# 
  4406  0311                     	;# 
  4407  0312                     	;# 
  4408  0313                     	;# 
  4409  0314                     	;# 
  4410  0314                     	;# 
  4411  0315                     	;# 
  4412  0316                     	;# 
  4413  0317                     	;# 
  4414  0318                     	;# 
  4415  0318                     	;# 
  4416  0319                     	;# 
  4417  031A                     	;# 
  4418  031B                     	;# 
  4419  038C                     	;# 
  4420  038C                     	;# 
  4421  038D                     	;# 
  4422  038E                     	;# 
  4423  0390                     	;# 
  4424  0390                     	;# 
  4425  0391                     	;# 
  4426  0392                     	;# 
  4427  048C                     	;# 
  4428  048C                     	;# 
  4429  048D                     	;# 
  4430  048E                     	;# 
  4431  048F                     	;# 
  4432  048F                     	;# 
  4433  0490                     	;# 
  4434  0491                     	;# 
  4435  0492                     	;# 
  4436  0492                     	;# 
  4437  0493                     	;# 
  4438  0494                     	;# 
  4439  0495                     	;# 
  4440  0495                     	;# 
  4441  0496                     	;# 
  4442  0497                     	;# 
  4443  0498                     	;# 
  4444  0499                     	;# 
  4445  049A                     	;# 
  4446  049B                     	;# 
  4447  049C                     	;# 
  4448  049D                     	;# 
  4449  058C                     	;# 
  4450  058C                     	;# 
  4451  058D                     	;# 
  4452  058E                     	;# 
  4453  058F                     	;# 
  4454  058F                     	;# 
  4455  0590                     	;# 
  4456  0591                     	;# 
  4457  0592                     	;# 
  4458  0593                     	;# 
  4459  059C                     	;# 
  4460  059C                     	;# 
  4461  059D                     	;# 
  4462  059D                     	;# 
  4463  059E                     	;# 
  4464  059F                     	;# 
  4465  060C                     	;# 
  4466  060C                     	;# 
  4467  060D                     	;# 
  4468  060D                     	;# 
  4469  060E                     	;# 
  4470  060F                     	;# 
  4471  0610                     	;# 
  4472  0611                     	;# 
  4473  0612                     	;# 
  4474  0613                     	;# 
  4475  0614                     	;# 
  4476  0616                     	;# 
  4477  0616                     	;# 
  4478  0617                     	;# 
  4479  0617                     	;# 
  4480  0618                     	;# 
  4481  0619                     	;# 
  4482  061A                     	;# 
  4483  061B                     	;# 
  4484  061C                     	;# 
  4485  061D                     	;# 
  4486  061E                     	;# 
  4487  070C                     	;# 
  4488  070D                     	;# 
  4489  070E                     	;# 
  4490  070F                     	;# 
  4491  0710                     	;# 
  4492  0711                     	;# 
  4493  0712                     	;# 
  4494  0713                     	;# 
  4495  0714                     	;# 
  4496  0716                     	;# 
  4497  0717                     	;# 
  4498  0718                     	;# 
  4499  0719                     	;# 
  4500  071A                     	;# 
  4501  071B                     	;# 
  4502  071C                     	;# 
  4503  071D                     	;# 
  4504  071E                     	;# 
  4505  0796                     	;# 
  4506  0797                     	;# 
  4507  0798                     	;# 
  4508  0799                     	;# 
  4509  079A                     	;# 
  4510  079B                     	;# 
  4511  079C                     	;# 
  4512  079D                     	;# 
  4513  080C                     	;# 
  4514  080D                     	;# 
  4515  080E                     	;# 
  4516  080F                     	;# 
  4517  0810                     	;# 
  4518  0811                     	;# 
  4519  0812                     	;# 
  4520  0813                     	;# 
  4521  0814                     	;# 
  4522  081A                     	;# 
  4523  081A                     	;# 
  4524  081B                     	;# 
  4525  081C                     	;# 
  4526  081C                     	;# 
  4527  081D                     	;# 
  4528  081E                     	;# 
  4529  081F                     	;# 
  4530  088C                     	;# 
  4531  088D                     	;# 
  4532  088E                     	;# 
  4533  088F                     	;# 
  4534  0890                     	;# 
  4535  0891                     	;# 
  4536  0892                     	;# 
  4537  0893                     	;# 
  4538  0895                     	;# 
  4539  0896                     	;# 
  4540  0897                     	;# 
  4541  0898                     	;# 
  4542  0899                     	;# 
  4543  089A                     	;# 
  4544  089B                     	;# 
  4545  090C                     	;# 
  4546  090E                     	;# 
  4547  090F                     	;# 
  4548  091F                     	;# 
  4549  098F                     	;# 
  4550  098F                     	;# 
  4551  0990                     	;# 
  4552  0991                     	;# 
  4553  0992                     	;# 
  4554  0993                     	;# 
  4555  0994                     	;# 
  4556  0995                     	;# 
  4557  0996                     	;# 
  4558  0997                     	;# 
  4559  1E0F                     	;# 
  4560  1E10                     	;# 
  4561  1E11                     	;# 
  4562  1E12                     	;# 
  4563  1E13                     	;# 
  4564  1E14                     	;# 
  4565  1E15                     	;# 
  4566  1E16                     	;# 
  4567  1E17                     	;# 
  4568  1E18                     	;# 
  4569  1E19                     	;# 
  4570  1E1A                     	;# 
  4571  1E1B                     	;# 
  4572  1E1C                     	;# 
  4573  1E1D                     	;# 
  4574  1E1E                     	;# 
  4575  1E1F                     	;# 
  4576  1E20                     	;# 
  4577  1E21                     	;# 
  4578  1E22                     	;# 
  4579  1E23                     	;# 
  4580  1E24                     	;# 
  4581  1E25                     	;# 
  4582  1E26                     	;# 
  4583  1E27                     	;# 
  4584  1E28                     	;# 
  4585  1E29                     	;# 
  4586  1E2A                     	;# 
  4587  1E2B                     	;# 
  4588  1E2C                     	;# 
  4589  1E2D                     	;# 
  4590  1E2E                     	;# 
  4591  1E2F                     	;# 
  4592  1E30                     	;# 
  4593  1E31                     	;# 
  4594  1E32                     	;# 
  4595  1E33                     	;# 
  4596  1E34                     	;# 
  4597  1E35                     	;# 
  4598  1E36                     	;# 
  4599  1E37                     	;# 
  4600  1E8F                     	;# 
  4601  1E90                     	;# 
  4602  1E91                     	;# 
  4603  1E92                     	;# 
  4604  1E93                     	;# 
  4605  1E94                     	;# 
  4606  1E95                     	;# 
  4607  1E96                     	;# 
  4608  1E97                     	;# 
  4609  1E9C                     	;# 
  4610  1E9D                     	;# 
  4611  1E9E                     	;# 
  4612  1EA1                     	;# 
  4613  1EA2                     	;# 
  4614  1EA3                     	;# 
  4615  1EA4                     	;# 
  4616  1EA9                     	;# 
  4617  1EAA                     	;# 
  4618  1EB1                     	;# 
  4619  1EB2                     	;# 
  4620  1EB8                     	;# 
  4621  1EB9                     	;# 
  4622  1EBA                     	;# 
  4623  1EBB                     	;# 
  4624  1EBC                     	;# 
  4625  1EBD                     	;# 
  4626  1EBE                     	;# 
  4627  1EC3                     	;# 
  4628  1EC5                     	;# 
  4629  1EC6                     	;# 
  4630  1EC7                     	;# 
  4631  1EC8                     	;# 
  4632  1EC9                     	;# 
  4633  1ECA                     	;# 
  4634  1ECB                     	;# 
  4635  1ECB                     	;# 
  4636  1ECB                     	;# 
  4637  1ECC                     	;# 
  4638  1ECC                     	;# 
  4639  1ECC                     	;# 
  4640  1F10                     	;# 
  4641  1F11                     	;# 
  4642  1F12                     	;# 
  4643  1F14                     	;# 
  4644  1F15                     	;# 
  4645  1F1C                     	;# 
  4646  1F1D                     	;# 
  4647  1F1E                     	;# 
  4648  1F1F                     	;# 
  4649  1F20                     	;# 
  4650  1F21                     	;# 
  4651  1F22                     	;# 
  4652  1F23                     	;# 
  4653  1F24                     	;# 
  4654  1F25                     	;# 
  4655  1F26                     	;# 
  4656  1F27                     	;# 
  4657  1F38                     	;# 
  4658  1F39                     	;# 
  4659  1F3A                     	;# 
  4660  1F3B                     	;# 
  4661  1F3C                     	;# 
  4662  1F3D                     	;# 
  4663  1F3E                     	;# 
  4664  1F3F                     	;# 
  4665  1F43                     	;# 
  4666  1F44                     	;# 
  4667  1F45                     	;# 
  4668  1F46                     	;# 
  4669  1F47                     	;# 
  4670  1F48                     	;# 
  4671  1F49                     	;# 
  4672  1F4A                     	;# 
  4673  1F4E                     	;# 
  4674  1F4F                     	;# 
  4675  1F50                     	;# 
  4676  1F51                     	;# 
  4677  1F52                     	;# 
  4678  1F53                     	;# 
  4679  1F54                     	;# 
  4680  1F55                     	;# 
  4681  1FE4                     	;# 
  4682  1FE5                     	;# 
  4683  1FE6                     	;# 
  4684  1FE7                     	;# 
  4685  1FE8                     	;# 
  4686  1FE8                     	;# 
  4687  1FE9                     	;# 
  4688  1FEA                     	;# 
  4689  1FEB                     	;# 
  4690  1FED                     	;# 
  4691  1FEE                     	;# 
  4692  1FEF                     	;# 
  4693  0000                     	;# 
  4694  0001                     	;# 
  4695  0002                     	;# 
  4696  0003                     	;# 
  4697  0004                     	;# 
  4698  0005                     	;# 
  4699  0006                     	;# 
  4700  0007                     	;# 
  4701  0008                     	;# 
  4702  0009                     	;# 
  4703  000A                     	;# 
  4704  000B                     	;# 
  4705  000C                     	;# 
  4706  000D                     	;# 
  4707  000E                     	;# 
  4708  0012                     	;# 
  4709  0013                     	;# 
  4710  0014                     	;# 
  4711  0018                     	;# 
  4712  0019                     	;# 
  4713  001A                     	;# 
  4714  008C                     	;# 
  4715  008C                     	;# 
  4716  008D                     	;# 
  4717  008E                     	;# 
  4718  008E                     	;# 
  4719  008F                     	;# 
  4720  0090                     	;# 
  4721  0090                     	;# 
  4722  0091                     	;# 
  4723  0092                     	;# 
  4724  0092                     	;# 
  4725  0093                     	;# 
  4726  0094                     	;# 
  4727  0094                     	;# 
  4728  0095                     	;# 
  4729  0096                     	;# 
  4730  0096                     	;# 
  4731  0097                     	;# 
  4732  0098                     	;# 
  4733  0099                     	;# 
  4734  009A                     	;# 
  4735  009B                     	;# 
  4736  009B                     	;# 
  4737  009C                     	;# 
  4738  009D                     	;# 
  4739  009D                     	;# 
  4740  009E                     	;# 
  4741  009F                     	;# 
  4742  010C                     	;# 
  4743  010C                     	;# 
  4744  010D                     	;# 
  4745  010E                     	;# 
  4746  010F                     	;# 
  4747  010F                     	;# 
  4748  0110                     	;# 
  4749  0111                     	;# 
  4750  0112                     	;# 
  4751  0113                     	;# 
  4752  0114                     	;# 
  4753  0115                     	;# 
  4754  0116                     	;# 
  4755  0117                     	;# 
  4756  0118                     	;# 
  4757  0119                     	;# 
  4758  0119                     	;# 
  4759  0119                     	;# 
  4760  011A                     	;# 
  4761  011A                     	;# 
  4762  011A                     	;# 
  4763  011B                     	;# 
  4764  011B                     	;# 
  4765  011B                     	;# 
  4766  011B                     	;# 
  4767  011B                     	;# 
  4768  011C                     	;# 
  4769  011C                     	;# 
  4770  011C                     	;# 
  4771  011D                     	;# 
  4772  011D                     	;# 
  4773  011D                     	;# 
  4774  011E                     	;# 
  4775  011E                     	;# 
  4776  011E                     	;# 
  4777  011F                     	;# 
  4778  011F                     	;# 
  4779  011F                     	;# 
  4780  011F                     	;# 
  4781  011F                     	;# 
  4782  018C                     	;# 
  4783  018D                     	;# 
  4784  018E                     	;# 
  4785  018F                     	;# 
  4786  0190                     	;# 
  4787  0191                     	;# 
  4788  0192                     	;# 
  4789  0196                     	;# 
  4790  0197                     	;# 
  4791  0198                     	;# 
  4792  0199                     	;# 
  4793  019A                     	;# 
  4794  019B                     	;# 
  4795  019C                     	;# 
  4796  020C                     	;# 
  4797  020D                     	;# 
  4798  020E                     	;# 
  4799  020E                     	;# 
  4800  020F                     	;# 
  4801  020F                     	;# 
  4802  0210                     	;# 
  4803  0210                     	;# 
  4804  0211                     	;# 
  4805  0211                     	;# 
  4806  0212                     	;# 
  4807  0213                     	;# 
  4808  0214                     	;# 
  4809  0214                     	;# 
  4810  0215                     	;# 
  4811  0215                     	;# 
  4812  0216                     	;# 
  4813  0216                     	;# 
  4814  0217                     	;# 
  4815  0217                     	;# 
  4816  0218                     	;# 
  4817  0219                     	;# 
  4818  021A                     	;# 
  4819  021A                     	;# 
  4820  021B                     	;# 
  4821  021B                     	;# 
  4822  021C                     	;# 
  4823  021C                     	;# 
  4824  021D                     	;# 
  4825  021D                     	;# 
  4826  021E                     	;# 
  4827  021F                     	;# 
  4828  028C                     	;# 
  4829  028C                     	;# 
  4830  028D                     	;# 
  4831  028D                     	;# 
  4832  028E                     	;# 
  4833  028F                     	;# 
  4834  0290                     	;# 
  4835  0291                     	;# 
  4836  0292                     	;# 
  4837  0292                     	;# 
  4838  0293                     	;# 
  4839  0293                     	;# 
  4840  0294                     	;# 
  4841  0295                     	;# 
  4842  0296                     	;# 
  4843  0297                     	;# 
  4844  0298                     	;# 
  4845  0298                     	;# 
  4846  0299                     	;# 
  4847  0299                     	;# 
  4848  029A                     	;# 
  4849  029B                     	;# 
  4850  029C                     	;# 
  4851  029D                     	;# 
  4852  029F                     	;# 
  4853  030C                     	;# 
  4854  030C                     	;# 
  4855  030D                     	;# 
  4856  030E                     	;# 
  4857  030F                     	;# 
  4858  0310                     	;# 
  4859  0310                     	;# 
  4860  0311                     	;# 
  4861  0312                     	;# 
  4862  0313                     	;# 
  4863  0314                     	;# 
  4864  0314                     	;# 
  4865  0315                     	;# 
  4866  0316                     	;# 
  4867  0317                     	;# 
  4868  0318                     	;# 
  4869  0318                     	;# 
  4870  0319                     	;# 
  4871  031A                     	;# 
  4872  031B                     	;# 
  4873  038C                     	;# 
  4874  038C                     	;# 
  4875  038D                     	;# 
  4876  038E                     	;# 
  4877  0390                     	;# 
  4878  0390                     	;# 
  4879  0391                     	;# 
  4880  0392                     	;# 
  4881  048C                     	;# 
  4882  048C                     	;# 
  4883  048D                     	;# 
  4884  048E                     	;# 
  4885  048F                     	;# 
  4886  048F                     	;# 
  4887  0490                     	;# 
  4888  0491                     	;# 
  4889  0492                     	;# 
  4890  0492                     	;# 
  4891  0493                     	;# 
  4892  0494                     	;# 
  4893  0495                     	;# 
  4894  0495                     	;# 
  4895  0496                     	;# 
  4896  0497                     	;# 
  4897  0498                     	;# 
  4898  0499                     	;# 
  4899  049A                     	;# 
  4900  049B                     	;# 
  4901  049C                     	;# 
  4902  049D                     	;# 
  4903  058C                     	;# 
  4904  058C                     	;# 
  4905  058D                     	;# 
  4906  058E                     	;# 
  4907  058F                     	;# 
  4908  058F                     	;# 
  4909  0590                     	;# 
  4910  0591                     	;# 
  4911  0592                     	;# 
  4912  0593                     	;# 
  4913  059C                     	;# 
  4914  059C                     	;# 
  4915  059D                     	;# 
  4916  059D                     	;# 
  4917  059E                     	;# 
  4918  059F                     	;# 
  4919  060C                     	;# 
  4920  060C                     	;# 
  4921  060D                     	;# 
  4922  060D                     	;# 
  4923  060E                     	;# 
  4924  060F                     	;# 
  4925  0610                     	;# 
  4926  0611                     	;# 
  4927  0612                     	;# 
  4928  0613                     	;# 
  4929  0614                     	;# 
  4930  0616                     	;# 
  4931  0616                     	;# 
  4932  0617                     	;# 
  4933  0617                     	;# 
  4934  0618                     	;# 
  4935  0619                     	;# 
  4936  061A                     	;# 
  4937  061B                     	;# 
  4938  061C                     	;# 
  4939  061D                     	;# 
  4940  061E                     	;# 
  4941  070C                     	;# 
  4942  070D                     	;# 
  4943  070E                     	;# 
  4944  070F                     	;# 
  4945  0710                     	;# 
  4946  0711                     	;# 
  4947  0712                     	;# 
  4948  0713                     	;# 
  4949  0714                     	;# 
  4950  0716                     	;# 
  4951  0717                     	;# 
  4952  0718                     	;# 
  4953  0719                     	;# 
  4954  071A                     	;# 
  4955  071B                     	;# 
  4956  071C                     	;# 
  4957  071D                     	;# 
  4958  071E                     	;# 
  4959  0796                     	;# 
  4960  0797                     	;# 
  4961  0798                     	;# 
  4962  0799                     	;# 
  4963  079A                     	;# 
  4964  079B                     	;# 
  4965  079C                     	;# 
  4966  079D                     	;# 
  4967  080C                     	;# 
  4968  080D                     	;# 
  4969  080E                     	;# 
  4970  080F                     	;# 
  4971  0810                     	;# 
  4972  0811                     	;# 
  4973  0812                     	;# 
  4974  0813                     	;# 
  4975  0814                     	;# 
  4976  081A                     	;# 
  4977  081A                     	;# 
  4978  081B                     	;# 
  4979  081C                     	;# 
  4980  081C                     	;# 
  4981  081D                     	;# 
  4982  081E                     	;# 
  4983  081F                     	;# 
  4984  088C                     	;# 
  4985  088D                     	;# 
  4986  088E                     	;# 
  4987  088F                     	;# 
  4988  0890                     	;# 
  4989  0891                     	;# 
  4990  0892                     	;# 
  4991  0893                     	;# 
  4992  0895                     	;# 
  4993  0896                     	;# 
  4994  0897                     	;# 
  4995  0898                     	;# 
  4996  0899                     	;# 
  4997  089A                     	;# 
  4998  089B                     	;# 
  4999  090C                     	;# 
  5000  090E                     	;# 
  5001  090F                     	;# 
  5002  091F                     	;# 
  5003  098F                     	;# 
  5004  098F                     	;# 
  5005  0990                     	;# 
  5006  0991                     	;# 
  5007  0992                     	;# 
  5008  0993                     	;# 
  5009  0994                     	;# 
  5010  0995                     	;# 
  5011  0996                     	;# 
  5012  0997                     	;# 
  5013  1E0F                     	;# 
  5014  1E10                     	;# 
  5015  1E11                     	;# 
  5016  1E12                     	;# 
  5017  1E13                     	;# 
  5018  1E14                     	;# 
  5019  1E15                     	;# 
  5020  1E16                     	;# 
  5021  1E17                     	;# 
  5022  1E18                     	;# 
  5023  1E19                     	;# 
  5024  1E1A                     	;# 
  5025  1E1B                     	;# 
  5026  1E1C                     	;# 
  5027  1E1D                     	;# 
  5028  1E1E                     	;# 
  5029  1E1F                     	;# 
  5030  1E20                     	;# 
  5031  1E21                     	;# 
  5032  1E22                     	;# 
  5033  1E23                     	;# 
  5034  1E24                     	;# 
  5035  1E25                     	;# 
  5036  1E26                     	;# 
  5037  1E27                     	;# 
  5038  1E28                     	;# 
  5039  1E29                     	;# 
  5040  1E2A                     	;# 
  5041  1E2B                     	;# 
  5042  1E2C                     	;# 
  5043  1E2D                     	;# 
  5044  1E2E                     	;# 
  5045  1E2F                     	;# 
  5046  1E30                     	;# 
  5047  1E31                     	;# 
  5048  1E32                     	;# 
  5049  1E33                     	;# 
  5050  1E34                     	;# 
  5051  1E35                     	;# 
  5052  1E36                     	;# 
  5053  1E37                     	;# 
  5054  1E8F                     	;# 
  5055  1E90                     	;# 
  5056  1E91                     	;# 
  5057  1E92                     	;# 
  5058  1E93                     	;# 
  5059  1E94                     	;# 
  5060  1E95                     	;# 
  5061  1E96                     	;# 
  5062  1E97                     	;# 
  5063  1E9C                     	;# 
  5064  1E9D                     	;# 
  5065  1E9E                     	;# 
  5066  1EA1                     	;# 
  5067  1EA2                     	;# 
  5068  1EA3                     	;# 
  5069  1EA4                     	;# 
  5070  1EA9                     	;# 
  5071  1EAA                     	;# 
  5072  1EB1                     	;# 
  5073  1EB2                     	;# 
  5074  1EB8                     	;# 
  5075  1EB9                     	;# 
  5076  1EBA                     	;# 
  5077  1EBB                     	;# 
  5078  1EBC                     	;# 
  5079  1EBD                     	;# 
  5080  1EBE                     	;# 
  5081  1EC3                     	;# 
  5082  1EC5                     	;# 
  5083  1EC6                     	;# 
  5084  1EC7                     	;# 
  5085  1EC8                     	;# 
  5086  1EC9                     	;# 
  5087  1ECA                     	;# 
  5088  1ECB                     	;# 
  5089  1ECB                     	;# 
  5090  1ECB                     	;# 
  5091  1ECC                     	;# 
  5092  1ECC                     	;# 
  5093  1ECC                     	;# 
  5094  1F10                     	;# 
  5095  1F11                     	;# 
  5096  1F12                     	;# 
  5097  1F14                     	;# 
  5098  1F15                     	;# 
  5099  1F1C                     	;# 
  5100  1F1D                     	;# 
  5101  1F1E                     	;# 
  5102  1F1F                     	;# 
  5103  1F20                     	;# 
  5104  1F21                     	;# 
  5105  1F22                     	;# 
  5106  1F23                     	;# 
  5107  1F24                     	;# 
  5108  1F25                     	;# 
  5109  1F26                     	;# 
  5110  1F27                     	;# 
  5111  1F38                     	;# 
  5112  1F39                     	;# 
  5113  1F3A                     	;# 
  5114  1F3B                     	;# 
  5115  1F3C                     	;# 
  5116  1F3D                     	;# 
  5117  1F3E                     	;# 
  5118  1F3F                     	;# 
  5119  1F43                     	;# 
  5120  1F44                     	;# 
  5121  1F45                     	;# 
  5122  1F46                     	;# 
  5123  1F47                     	;# 
  5124  1F48                     	;# 
  5125  1F49                     	;# 
  5126  1F4A                     	;# 
  5127  1F4E                     	;# 
  5128  1F4F                     	;# 
  5129  1F50                     	;# 
  5130  1F51                     	;# 
  5131  1F52                     	;# 
  5132  1F53                     	;# 
  5133  1F54                     	;# 
  5134  1F55                     	;# 
  5135  1FE4                     	;# 
  5136  1FE5                     	;# 
  5137  1FE6                     	;# 
  5138  1FE7                     	;# 
  5139  1FE8                     	;# 
  5140  1FE8                     	;# 
  5141  1FE9                     	;# 
  5142  1FEA                     	;# 
  5143  1FEB                     	;# 
  5144  1FED                     	;# 
  5145  1FEE                     	;# 
  5146  1FEF                     	;# 
  5147  0000                     	;# 
  5148  0001                     	;# 
  5149  0002                     	;# 
  5150  0003                     	;# 
  5151  0004                     	;# 
  5152  0005                     	;# 
  5153  0006                     	;# 
  5154  0007                     	;# 
  5155  0008                     	;# 
  5156  0009                     	;# 
  5157  000A                     	;# 
  5158  000B                     	;# 
  5159  000C                     	;# 
  5160  000D                     	;# 
  5161  000E                     	;# 
  5162  0012                     	;# 
  5163  0013                     	;# 
  5164  0014                     	;# 
  5165  0018                     	;# 
  5166  0019                     	;# 
  5167  001A                     	;# 
  5168  008C                     	;# 
  5169  008C                     	;# 
  5170  008D                     	;# 
  5171  008E                     	;# 
  5172  008E                     	;# 
  5173  008F                     	;# 
  5174  0090                     	;# 
  5175  0090                     	;# 
  5176  0091                     	;# 
  5177  0092                     	;# 
  5178  0092                     	;# 
  5179  0093                     	;# 
  5180  0094                     	;# 
  5181  0094                     	;# 
  5182  0095                     	;# 
  5183  0096                     	;# 
  5184  0096                     	;# 
  5185  0097                     	;# 
  5186  0098                     	;# 
  5187  0099                     	;# 
  5188  009A                     	;# 
  5189  009B                     	;# 
  5190  009B                     	;# 
  5191  009C                     	;# 
  5192  009D                     	;# 
  5193  009D                     	;# 
  5194  009E                     	;# 
  5195  009F                     	;# 
  5196  010C                     	;# 
  5197  010C                     	;# 
  5198  010D                     	;# 
  5199  010E                     	;# 
  5200  010F                     	;# 
  5201  010F                     	;# 
  5202  0110                     	;# 
  5203  0111                     	;# 
  5204  0112                     	;# 
  5205  0113                     	;# 
  5206  0114                     	;# 
  5207  0115                     	;# 
  5208  0116                     	;# 
  5209  0117                     	;# 
  5210  0118                     	;# 
  5211  0119                     	;# 
  5212  0119                     	;# 
  5213  0119                     	;# 
  5214  011A                     	;# 
  5215  011A                     	;# 
  5216  011A                     	;# 
  5217  011B                     	;# 
  5218  011B                     	;# 
  5219  011B                     	;# 
  5220  011B                     	;# 
  5221  011B                     	;# 
  5222  011C                     	;# 
  5223  011C                     	;# 
  5224  011C                     	;# 
  5225  011D                     	;# 
  5226  011D                     	;# 
  5227  011D                     	;# 
  5228  011E                     	;# 
  5229  011E                     	;# 
  5230  011E                     	;# 
  5231  011F                     	;# 
  5232  011F                     	;# 
  5233  011F                     	;# 
  5234  011F                     	;# 
  5235  011F                     	;# 
  5236  018C                     	;# 
  5237  018D                     	;# 
  5238  018E                     	;# 
  5239  018F                     	;# 
  5240  0190                     	;# 
  5241  0191                     	;# 
  5242  0192                     	;# 
  5243  0196                     	;# 
  5244  0197                     	;# 
  5245  0198                     	;# 
  5246  0199                     	;# 
  5247  019A                     	;# 
  5248  019B                     	;# 
  5249  019C                     	;# 
  5250  020C                     	;# 
  5251  020D                     	;# 
  5252  020E                     	;# 
  5253  020E                     	;# 
  5254  020F                     	;# 
  5255  020F                     	;# 
  5256  0210                     	;# 
  5257  0210                     	;# 
  5258  0211                     	;# 
  5259  0211                     	;# 
  5260  0212                     	;# 
  5261  0213                     	;# 
  5262  0214                     	;# 
  5263  0214                     	;# 
  5264  0215                     	;# 
  5265  0215                     	;# 
  5266  0216                     	;# 
  5267  0216                     	;# 
  5268  0217                     	;# 
  5269  0217                     	;# 
  5270  0218                     	;# 
  5271  0219                     	;# 
  5272  021A                     	;# 
  5273  021A                     	;# 
  5274  021B                     	;# 
  5275  021B                     	;# 
  5276  021C                     	;# 
  5277  021C                     	;# 
  5278  021D                     	;# 
  5279  021D                     	;# 
  5280  021E                     	;# 
  5281  021F                     	;# 
  5282  028C                     	;# 
  5283  028C                     	;# 
  5284  028D                     	;# 
  5285  028D                     	;# 
  5286  028E                     	;# 
  5287  028F                     	;# 
  5288  0290                     	;# 
  5289  0291                     	;# 
  5290  0292                     	;# 
  5291  0292                     	;# 
  5292  0293                     	;# 
  5293  0293                     	;# 
  5294  0294                     	;# 
  5295  0295                     	;# 
  5296  0296                     	;# 
  5297  0297                     	;# 
  5298  0298                     	;# 
  5299  0298                     	;# 
  5300  0299                     	;# 
  5301  0299                     	;# 
  5302  029A                     	;# 
  5303  029B                     	;# 
  5304  029C                     	;# 
  5305  029D                     	;# 
  5306  029F                     	;# 
  5307  030C                     	;# 
  5308  030C                     	;# 
  5309  030D                     	;# 
  5310  030E                     	;# 
  5311  030F                     	;# 
  5312  0310                     	;# 
  5313  0310                     	;# 
  5314  0311                     	;# 
  5315  0312                     	;# 
  5316  0313                     	;# 
  5317  0314                     	;# 
  5318  0314                     	;# 
  5319  0315                     	;# 
  5320  0316                     	;# 
  5321  0317                     	;# 
  5322  0318                     	;# 
  5323  0318                     	;# 
  5324  0319                     	;# 
  5325  031A                     	;# 
  5326  031B                     	;# 
  5327  038C                     	;# 
  5328  038C                     	;# 
  5329  038D                     	;# 
  5330  038E                     	;# 
  5331  0390                     	;# 
  5332  0390                     	;# 
  5333  0391                     	;# 
  5334  0392                     	;# 
  5335  048C                     	;# 
  5336  048C                     	;# 
  5337  048D                     	;# 
  5338  048E                     	;# 
  5339  048F                     	;# 
  5340  048F                     	;# 
  5341  0490                     	;# 
  5342  0491                     	;# 
  5343  0492                     	;# 
  5344  0492                     	;# 
  5345  0493                     	;# 
  5346  0494                     	;# 
  5347  0495                     	;# 
  5348  0495                     	;# 
  5349  0496                     	;# 
  5350  0497                     	;# 
  5351  0498                     	;# 
  5352  0499                     	;# 
  5353  049A                     	;# 
  5354  049B                     	;# 
  5355  049C                     	;# 
  5356  049D                     	;# 
  5357  058C                     	;# 
  5358  058C                     	;# 
  5359  058D                     	;# 
  5360  058E                     	;# 
  5361  058F                     	;# 
  5362  058F                     	;# 
  5363  0590                     	;# 
  5364  0591                     	;# 
  5365  0592                     	;# 
  5366  0593                     	;# 
  5367  059C                     	;# 
  5368  059C                     	;# 
  5369  059D                     	;# 
  5370  059D                     	;# 
  5371  059E                     	;# 
  5372  059F                     	;# 
  5373  060C                     	;# 
  5374  060C                     	;# 
  5375  060D                     	;# 
  5376  060D                     	;# 
  5377  060E                     	;# 
  5378  060F                     	;# 
  5379  0610                     	;# 
  5380  0611                     	;# 
  5381  0612                     	;# 
  5382  0613                     	;# 
  5383  0614                     	;# 
  5384  0616                     	;# 
  5385  0616                     	;# 
  5386  0617                     	;# 
  5387  0617                     	;# 
  5388  0618                     	;# 
  5389  0619                     	;# 
  5390  061A                     	;# 
  5391  061B                     	;# 
  5392  061C                     	;# 
  5393  061D                     	;# 
  5394  061E                     	;# 
  5395  070C                     	;# 
  5396  070D                     	;# 
  5397  070E                     	;# 
  5398  070F                     	;# 
  5399  0710                     	;# 
  5400  0711                     	;# 
  5401  0712                     	;# 
  5402  0713                     	;# 
  5403  0714                     	;# 
  5404  0716                     	;# 
  5405  0717                     	;# 
  5406  0718                     	;# 
  5407  0719                     	;# 
  5408  071A                     	;# 
  5409  071B                     	;# 
  5410  071C                     	;# 
  5411  071D                     	;# 
  5412  071E                     	;# 
  5413  0796                     	;# 
  5414  0797                     	;# 
  5415  0798                     	;# 
  5416  0799                     	;# 
  5417  079A                     	;# 
  5418  079B                     	;# 
  5419  079C                     	;# 
  5420  079D                     	;# 
  5421  080C                     	;# 
  5422  080D                     	;# 
  5423  080E                     	;# 
  5424  080F                     	;# 
  5425  0810                     	;# 
  5426  0811                     	;# 
  5427  0812                     	;# 
  5428  0813                     	;# 
  5429  0814                     	;# 
  5430  081A                     	;# 
  5431  081A                     	;# 
  5432  081B                     	;# 
  5433  081C                     	;# 
  5434  081C                     	;# 
  5435  081D                     	;# 
  5436  081E                     	;# 
  5437  081F                     	;# 
  5438  088C                     	;# 
  5439  088D                     	;# 
  5440  088E                     	;# 
  5441  088F                     	;# 
  5442  0890                     	;# 
  5443  0891                     	;# 
  5444  0892                     	;# 
  5445  0893                     	;# 
  5446  0895                     	;# 
  5447  0896                     	;# 
  5448  0897                     	;# 
  5449  0898                     	;# 
  5450  0899                     	;# 
  5451  089A                     	;# 
  5452  089B                     	;# 
  5453  090C                     	;# 
  5454  090E                     	;# 
  5455  090F                     	;# 
  5456  091F                     	;# 
  5457  098F                     	;# 
  5458  098F                     	;# 
  5459  0990                     	;# 
  5460  0991                     	;# 
  5461  0992                     	;# 
  5462  0993                     	;# 
  5463  0994                     	;# 
  5464  0995                     	;# 
  5465  0996                     	;# 
  5466  0997                     	;# 
  5467  1E0F                     	;# 
  5468  1E10                     	;# 
  5469  1E11                     	;# 
  5470  1E12                     	;# 
  5471  1E13                     	;# 
  5472  1E14                     	;# 
  5473  1E15                     	;# 
  5474  1E16                     	;# 
  5475  1E17                     	;# 
  5476  1E18                     	;# 
  5477  1E19                     	;# 
  5478  1E1A                     	;# 
  5479  1E1B                     	;# 
  5480  1E1C                     	;# 
  5481  1E1D                     	;# 
  5482  1E1E                     	;# 
  5483  1E1F                     	;# 
  5484  1E20                     	;# 
  5485  1E21                     	;# 
  5486  1E22                     	;# 
  5487  1E23                     	;# 
  5488  1E24                     	;# 
  5489  1E25                     	;# 
  5490  1E26                     	;# 
  5491  1E27                     	;# 
  5492  1E28                     	;# 
  5493  1E29                     	;# 
  5494  1E2A                     	;# 
  5495  1E2B                     	;# 
  5496  1E2C                     	;# 
  5497  1E2D                     	;# 
  5498  1E2E                     	;# 
  5499  1E2F                     	;# 
  5500  1E30                     	;# 
  5501  1E31                     	;# 
  5502  1E32                     	;# 
  5503  1E33                     	;# 
  5504  1E34                     	;# 
  5505  1E35                     	;# 
  5506  1E36                     	;# 
  5507  1E37                     	;# 
  5508  1E8F                     	;# 
  5509  1E90                     	;# 
  5510  1E91                     	;# 
  5511  1E92                     	;# 
  5512  1E93                     	;# 
  5513  1E94                     	;# 
  5514  1E95                     	;# 
  5515  1E96                     	;# 
  5516  1E97                     	;# 
  5517  1E9C                     	;# 
  5518  1E9D                     	;# 
  5519  1E9E                     	;# 
  5520  1EA1                     	;# 
  5521  1EA2                     	;# 
  5522  1EA3                     	;# 
  5523  1EA4                     	;# 
  5524  1EA9                     	;# 
  5525  1EAA                     	;# 
  5526  1EB1                     	;# 
  5527  1EB2                     	;# 
  5528  1EB8                     	;# 
  5529  1EB9                     	;# 
  5530  1EBA                     	;# 
  5531  1EBB                     	;# 
  5532  1EBC                     	;# 
  5533  1EBD                     	;# 
  5534  1EBE                     	;# 
  5535  1EC3                     	;# 
  5536  1EC5                     	;# 
  5537  1EC6                     	;# 
  5538  1EC7                     	;# 
  5539  1EC8                     	;# 
  5540  1EC9                     	;# 
  5541  1ECA                     	;# 
  5542  1ECB                     	;# 
  5543  1ECB                     	;# 
  5544  1ECB                     	;# 
  5545  1ECC                     	;# 
  5546  1ECC                     	;# 
  5547  1ECC                     	;# 
  5548  1F10                     	;# 
  5549  1F11                     	;# 
  5550  1F12                     	;# 
  5551  1F14                     	;# 
  5552  1F15                     	;# 
  5553  1F1C                     	;# 
  5554  1F1D                     	;# 
  5555  1F1E                     	;# 
  5556  1F1F                     	;# 
  5557  1F20                     	;# 
  5558  1F21                     	;# 
  5559  1F22                     	;# 
  5560  1F23                     	;# 
  5561  1F24                     	;# 
  5562  1F25                     	;# 
  5563  1F26                     	;# 
  5564  1F27                     	;# 
  5565  1F38                     	;# 
  5566  1F39                     	;# 
  5567  1F3A                     	;# 
  5568  1F3B                     	;# 
  5569  1F3C                     	;# 
  5570  1F3D                     	;# 
  5571  1F3E                     	;# 
  5572  1F3F                     	;# 
  5573  1F43                     	;# 
  5574  1F44                     	;# 
  5575  1F45                     	;# 
  5576  1F46                     	;# 
  5577  1F47                     	;# 
  5578  1F48                     	;# 
  5579  1F49                     	;# 
  5580  1F4A                     	;# 
  5581  1F4E                     	;# 
  5582  1F4F                     	;# 
  5583  1F50                     	;# 
  5584  1F51                     	;# 
  5585  1F52                     	;# 
  5586  1F53                     	;# 
  5587  1F54                     	;# 
  5588  1F55                     	;# 
  5589  1FE4                     	;# 
  5590  1FE5                     	;# 
  5591  1FE6                     	;# 
  5592  1FE7                     	;# 
  5593  1FE8                     	;# 
  5594  1FE8                     	;# 
  5595  1FE9                     	;# 
  5596  1FEA                     	;# 
  5597  1FEB                     	;# 
  5598  1FED                     	;# 
  5599  1FEE                     	;# 
  5600  1FEF                     	;# 
  5601  0000                     	;# 
  5602  0001                     	;# 
  5603  0002                     	;# 
  5604  0003                     	;# 
  5605  0004                     	;# 
  5606  0005                     	;# 
  5607  0006                     	;# 
  5608  0007                     	;# 
  5609  0008                     	;# 
  5610  0009                     	;# 
  5611  000A                     	;# 
  5612  000B                     	;# 
  5613  000C                     	;# 
  5614  000D                     	;# 
  5615  000E                     	;# 
  5616  0012                     	;# 
  5617  0013                     	;# 
  5618  0014                     	;# 
  5619  0018                     	;# 
  5620  0019                     	;# 
  5621  001A                     	;# 
  5622  008C                     	;# 
  5623  008C                     	;# 
  5624  008D                     	;# 
  5625  008E                     	;# 
  5626  008E                     	;# 
  5627  008F                     	;# 
  5628  0090                     	;# 
  5629  0090                     	;# 
  5630  0091                     	;# 
  5631  0092                     	;# 
  5632  0092                     	;# 
  5633  0093                     	;# 
  5634  0094                     	;# 
  5635  0094                     	;# 
  5636  0095                     	;# 
  5637  0096                     	;# 
  5638  0096                     	;# 
  5639  0097                     	;# 
  5640  0098                     	;# 
  5641  0099                     	;# 
  5642  009A                     	;# 
  5643  009B                     	;# 
  5644  009B                     	;# 
  5645  009C                     	;# 
  5646  009D                     	;# 
  5647  009D                     	;# 
  5648  009E                     	;# 
  5649  009F                     	;# 
  5650  010C                     	;# 
  5651  010C                     	;# 
  5652  010D                     	;# 
  5653  010E                     	;# 
  5654  010F                     	;# 
  5655  010F                     	;# 
  5656  0110                     	;# 
  5657  0111                     	;# 
  5658  0112                     	;# 
  5659  0113                     	;# 
  5660  0114                     	;# 
  5661  0115                     	;# 
  5662  0116                     	;# 
  5663  0117                     	;# 
  5664  0118                     	;# 
  5665  0119                     	;# 
  5666  0119                     	;# 
  5667  0119                     	;# 
  5668  011A                     	;# 
  5669  011A                     	;# 
  5670  011A                     	;# 
  5671  011B                     	;# 
  5672  011B                     	;# 
  5673  011B                     	;# 
  5674  011B                     	;# 
  5675  011B                     	;# 
  5676  011C                     	;# 
  5677  011C                     	;# 
  5678  011C                     	;# 
  5679  011D                     	;# 
  5680  011D                     	;# 
  5681  011D                     	;# 
  5682  011E                     	;# 
  5683  011E                     	;# 
  5684  011E                     	;# 
  5685  011F                     	;# 
  5686  011F                     	;# 
  5687  011F                     	;# 
  5688  011F                     	;# 
  5689  011F                     	;# 
  5690  018C                     	;# 
  5691  018D                     	;# 
  5692  018E                     	;# 
  5693  018F                     	;# 
  5694  0190                     	;# 
  5695  0191                     	;# 
  5696  0192                     	;# 
  5697  0196                     	;# 
  5698  0197                     	;# 
  5699  0198                     	;# 
  5700  0199                     	;# 
  5701  019A                     	;# 
  5702  019B                     	;# 
  5703  019C                     	;# 
  5704  020C                     	;# 
  5705  020D                     	;# 
  5706  020E                     	;# 
  5707  020E                     	;# 
  5708  020F                     	;# 
  5709  020F                     	;# 
  5710  0210                     	;# 
  5711  0210                     	;# 
  5712  0211                     	;# 
  5713  0211                     	;# 
  5714  0212                     	;# 
  5715  0213                     	;# 
  5716  0214                     	;# 
  5717  0214                     	;# 
  5718  0215                     	;# 
  5719  0215                     	;# 
  5720  0216                     	;# 
  5721  0216                     	;# 
  5722  0217                     	;# 
  5723  0217                     	;# 
  5724  0218                     	;# 
  5725  0219                     	;# 
  5726  021A                     	;# 
  5727  021A                     	;# 
  5728  021B                     	;# 
  5729  021B                     	;# 
  5730  021C                     	;# 
  5731  021C                     	;# 
  5732  021D                     	;# 
  5733  021D                     	;# 
  5734  021E                     	;# 
  5735  021F                     	;# 
  5736  028C                     	;# 
  5737  028C                     	;# 
  5738  028D                     	;# 
  5739  028D                     	;# 
  5740  028E                     	;# 
  5741  028F                     	;# 
  5742  0290                     	;# 
  5743  0291                     	;# 
  5744  0292                     	;# 
  5745  0292                     	;# 
  5746  0293                     	;# 
  5747  0293                     	;# 
  5748  0294                     	;# 
  5749  0295                     	;# 
  5750  0296                     	;# 
  5751  0297                     	;# 
  5752  0298                     	;# 
  5753  0298                     	;# 
  5754  0299                     	;# 
  5755  0299                     	;# 
  5756  029A                     	;# 
  5757  029B                     	;# 
  5758  029C                     	;# 
  5759  029D                     	;# 
  5760  029F                     	;# 
  5761  030C                     	;# 
  5762  030C                     	;# 
  5763  030D                     	;# 
  5764  030E                     	;# 
  5765  030F                     	;# 
  5766  0310                     	;# 
  5767  0310                     	;# 
  5768  0311                     	;# 
  5769  0312                     	;# 
  5770  0313                     	;# 
  5771  0314                     	;# 
  5772  0314                     	;# 
  5773  0315                     	;# 
  5774  0316                     	;# 
  5775  0317                     	;# 
  5776  0318                     	;# 
  5777  0318                     	;# 
  5778  0319                     	;# 
  5779  031A                     	;# 
  5780  031B                     	;# 
  5781  038C                     	;# 
  5782  038C                     	;# 
  5783  038D                     	;# 
  5784  038E                     	;# 
  5785  0390                     	;# 
  5786  0390                     	;# 
  5787  0391                     	;# 
  5788  0392                     	;# 
  5789  048C                     	;# 
  5790  048C                     	;# 
  5791  048D                     	;# 
  5792  048E                     	;# 
  5793  048F                     	;# 
  5794  048F                     	;# 
  5795  0490                     	;# 
  5796  0491                     	;# 
  5797  0492                     	;# 
  5798  0492                     	;# 
  5799  0493                     	;# 
  5800  0494                     	;# 
  5801  0495                     	;# 
  5802  0495                     	;# 
  5803  0496                     	;# 
  5804  0497                     	;# 
  5805  0498                     	;# 
  5806  0499                     	;# 
  5807  049A                     	;# 
  5808  049B                     	;# 
  5809  049C                     	;# 
  5810  049D                     	;# 
  5811  058C                     	;# 
  5812  058C                     	;# 
  5813  058D                     	;# 
  5814  058E                     	;# 
  5815  058F                     	;# 
  5816  058F                     	;# 
  5817  0590                     	;# 
  5818  0591                     	;# 
  5819  0592                     	;# 
  5820  0593                     	;# 
  5821  059C                     	;# 
  5822  059C                     	;# 
  5823  059D                     	;# 
  5824  059D                     	;# 
  5825  059E                     	;# 
  5826  059F                     	;# 
  5827  060C                     	;# 
  5828  060C                     	;# 
  5829  060D                     	;# 
  5830  060D                     	;# 
  5831  060E                     	;# 
  5832  060F                     	;# 
  5833  0610                     	;# 
  5834  0611                     	;# 
  5835  0612                     	;# 
  5836  0613                     	;# 
  5837  0614                     	;# 
  5838  0616                     	;# 
  5839  0616                     	;# 
  5840  0617                     	;# 
  5841  0617                     	;# 
  5842  0618                     	;# 
  5843  0619                     	;# 
  5844  061A                     	;# 
  5845  061B                     	;# 
  5846  061C                     	;# 
  5847  061D                     	;# 
  5848  061E                     	;# 
  5849  070C                     	;# 
  5850  070D                     	;# 
  5851  070E                     	;# 
  5852  070F                     	;# 
  5853  0710                     	;# 
  5854  0711                     	;# 
  5855  0712                     	;# 
  5856  0713                     	;# 
  5857  0714                     	;# 
  5858  0716                     	;# 
  5859  0717                     	;# 
  5860  0718                     	;# 
  5861  0719                     	;# 
  5862  071A                     	;# 
  5863  071B                     	;# 
  5864  071C                     	;# 
  5865  071D                     	;# 
  5866  071E                     	;# 
  5867  0796                     	;# 
  5868  0797                     	;# 
  5869  0798                     	;# 
  5870  0799                     	;# 
  5871  079A                     	;# 
  5872  079B                     	;# 
  5873  079C                     	;# 
  5874  079D                     	;# 
  5875  080C                     	;# 
  5876  080D                     	;# 
  5877  080E                     	;# 
  5878  080F                     	;# 
  5879  0810                     	;# 
  5880  0811                     	;# 
  5881  0812                     	;# 
  5882  0813                     	;# 
  5883  0814                     	;# 
  5884  081A                     	;# 
  5885  081A                     	;# 
  5886  081B                     	;# 
  5887  081C                     	;# 
  5888  081C                     	;# 
  5889  081D                     	;# 
  5890  081E                     	;# 
  5891  081F                     	;# 
  5892  088C                     	;# 
  5893  088D                     	;# 
  5894  088E                     	;# 
  5895  088F                     	;# 
  5896  0890                     	;# 
  5897  0891                     	;# 
  5898  0892                     	;# 
  5899  0893                     	;# 
  5900  0895                     	;# 
  5901  0896                     	;# 
  5902  0897                     	;# 
  5903  0898                     	;# 
  5904  0899                     	;# 
  5905  089A                     	;# 
  5906  089B                     	;# 
  5907  090C                     	;# 
  5908  090E                     	;# 
  5909  090F                     	;# 
  5910  091F                     	;# 
  5911  098F                     	;# 
  5912  098F                     	;# 
  5913  0990                     	;# 
  5914  0991                     	;# 
  5915  0992                     	;# 
  5916  0993                     	;# 
  5917  0994                     	;# 
  5918  0995                     	;# 
  5919  0996                     	;# 
  5920  0997                     	;# 
  5921  1E0F                     	;# 
  5922  1E10                     	;# 
  5923  1E11                     	;# 
  5924  1E12                     	;# 
  5925  1E13                     	;# 
  5926  1E14                     	;# 
  5927  1E15                     	;# 
  5928  1E16                     	;# 
  5929  1E17                     	;# 
  5930  1E18                     	;# 
  5931  1E19                     	;# 
  5932  1E1A                     	;# 
  5933  1E1B                     	;# 
  5934  1E1C                     	;# 
  5935  1E1D                     	;# 
  5936  1E1E                     	;# 
  5937  1E1F                     	;# 
  5938  1E20                     	;# 
  5939  1E21                     	;# 
  5940  1E22                     	;# 
  5941  1E23                     	;# 
  5942  1E24                     	;# 
  5943  1E25                     	;# 
  5944  1E26                     	;# 
  5945  1E27                     	;# 
  5946  1E28                     	;# 
  5947  1E29                     	;# 
  5948  1E2A                     	;# 
  5949  1E2B                     	;# 
  5950  1E2C                     	;# 
  5951  1E2D                     	;# 
  5952  1E2E                     	;# 
  5953  1E2F                     	;# 
  5954  1E30                     	;# 
  5955  1E31                     	;# 
  5956  1E32                     	;# 
  5957  1E33                     	;# 
  5958  1E34                     	;# 
  5959  1E35                     	;# 
  5960  1E36                     	;# 
  5961  1E37                     	;# 
  5962  1E8F                     	;# 
  5963  1E90                     	;# 
  5964  1E91                     	;# 
  5965  1E92                     	;# 
  5966  1E93                     	;# 
  5967  1E94                     	;# 
  5968  1E95                     	;# 
  5969  1E96                     	;# 
  5970  1E97                     	;# 
  5971  1E9C                     	;# 
  5972  1E9D                     	;# 
  5973  1E9E                     	;# 
  5974  1EA1                     	;# 
  5975  1EA2                     	;# 
  5976  1EA3                     	;# 
  5977  1EA4                     	;# 
  5978  1EA9                     	;# 
  5979  1EAA                     	;# 
  5980  1EB1                     	;# 
  5981  1EB2                     	;# 
  5982  1EB8                     	;# 
  5983  1EB9                     	;# 
  5984  1EBA                     	;# 
  5985  1EBB                     	;# 
  5986  1EBC                     	;# 
  5987  1EBD                     	;# 
  5988  1EBE                     	;# 
  5989  1EC3                     	;# 
  5990  1EC5                     	;# 
  5991  1EC6                     	;# 
  5992  1EC7                     	;# 
  5993  1EC8                     	;# 
  5994  1EC9                     	;# 
  5995  1ECA                     	;# 
  5996  1ECB                     	;# 
  5997  1ECB                     	;# 
  5998  1ECB                     	;# 
  5999  1ECC                     	;# 
  6000  1ECC                     	;# 
  6001  1ECC                     	;# 
  6002  1F10                     	;# 
  6003  1F11                     	;# 
  6004  1F12                     	;# 
  6005  1F14                     	;# 
  6006  1F15                     	;# 
  6007  1F1C                     	;# 
  6008  1F1D                     	;# 
  6009  1F1E                     	;# 
  6010  1F1F                     	;# 
  6011  1F20                     	;# 
  6012  1F21                     	;# 
  6013  1F22                     	;# 
  6014  1F23                     	;# 
  6015  1F24                     	;# 
  6016  1F25                     	;# 
  6017  1F26                     	;# 
  6018  1F27                     	;# 
  6019  1F38                     	;# 
  6020  1F39                     	;# 
  6021  1F3A                     	;# 
  6022  1F3B                     	;# 
  6023  1F3C                     	;# 
  6024  1F3D                     	;# 
  6025  1F3E                     	;# 
  6026  1F3F                     	;# 
  6027  1F43                     	;# 
  6028  1F44                     	;# 
  6029  1F45                     	;# 
  6030  1F46                     	;# 
  6031  1F47                     	;# 
  6032  1F48                     	;# 
  6033  1F49                     	;# 
  6034  1F4A                     	;# 
  6035  1F4E                     	;# 
  6036  1F4F                     	;# 
  6037  1F50                     	;# 
  6038  1F51                     	;# 
  6039  1F52                     	;# 
  6040  1F53                     	;# 
  6041  1F54                     	;# 
  6042  1F55                     	;# 
  6043  1FE4                     	;# 
  6044  1FE5                     	;# 
  6045  1FE6                     	;# 
  6046  1FE7                     	;# 
  6047  1FE8                     	;# 
  6048  1FE8                     	;# 
  6049  1FE9                     	;# 
  6050  1FEA                     	;# 
  6051  1FEB                     	;# 
  6052  1FED                     	;# 
  6053  1FEE                     	;# 
  6054  1FEF                     	;# 
  6055  0000                     	;# 
  6056  0001                     	;# 
  6057  0002                     	;# 
  6058  0003                     	;# 
  6059  0004                     	;# 
  6060  0005                     	;# 
  6061  0006                     	;# 
  6062  0007                     	;# 
  6063  0008                     	;# 
  6064  0009                     	;# 
  6065  000A                     	;# 
  6066  000B                     	;# 
  6067  000C                     	;# 
  6068  000D                     	;# 
  6069  000E                     	;# 
  6070  0012                     	;# 
  6071  0013                     	;# 
  6072  0014                     	;# 
  6073  0018                     	;# 
  6074  0019                     	;# 
  6075  001A                     	;# 
  6076  008C                     	;# 
  6077  008C                     	;# 
  6078  008D                     	;# 
  6079  008E                     	;# 
  6080  008E                     	;# 
  6081  008F                     	;# 
  6082  0090                     	;# 
  6083  0090                     	;# 
  6084  0091                     	;# 
  6085  0092                     	;# 
  6086  0092                     	;# 
  6087  0093                     	;# 
  6088  0094                     	;# 
  6089  0094                     	;# 
  6090  0095                     	;# 
  6091  0096                     	;# 
  6092  0096                     	;# 
  6093  0097                     	;# 
  6094  0098                     	;# 
  6095  0099                     	;# 
  6096  009A                     	;# 
  6097  009B                     	;# 
  6098  009B                     	;# 
  6099  009C                     	;# 
  6100  009D                     	;# 
  6101  009D                     	;# 
  6102  009E                     	;# 
  6103  009F                     	;# 
  6104  010C                     	;# 
  6105  010C                     	;# 
  6106  010D                     	;# 
  6107  010E                     	;# 
  6108  010F                     	;# 
  6109  010F                     	;# 
  6110  0110                     	;# 
  6111  0111                     	;# 
  6112  0112                     	;# 
  6113  0113                     	;# 
  6114  0114                     	;# 
  6115  0115                     	;# 
  6116  0116                     	;# 
  6117  0117                     	;# 
  6118  0118                     	;# 
  6119  0119                     	;# 
  6120  0119                     	;# 
  6121  0119                     	;# 
  6122  011A                     	;# 
  6123  011A                     	;# 
  6124  011A                     	;# 
  6125  011B                     	;# 
  6126  011B                     	;# 
  6127  011B                     	;# 
  6128  011B                     	;# 
  6129  011B                     	;# 
  6130  011C                     	;# 
  6131  011C                     	;# 
  6132  011C                     	;# 
  6133  011D                     	;# 
  6134  011D                     	;# 
  6135  011D                     	;# 
  6136  011E                     	;# 
  6137  011E                     	;# 
  6138  011E                     	;# 
  6139  011F                     	;# 
  6140  011F                     	;# 
  6141  011F                     	;# 
  6142  011F                     	;# 
  6143  011F                     	;# 
  6144  018C                     	;# 
  6145  018D                     	;# 
  6146  018E                     	;# 
  6147  018F                     	;# 
  6148  0190                     	;# 
  6149  0191                     	;# 
  6150  0192                     	;# 
  6151  0196                     	;# 
  6152  0197                     	;# 
  6153  0198                     	;# 
  6154  0199                     	;# 
  6155  019A                     	;# 
  6156  019B                     	;# 
  6157  019C                     	;# 
  6158  020C                     	;# 
  6159  020D                     	;# 
  6160  020E                     	;# 
  6161  020E                     	;# 
  6162  020F                     	;# 
  6163  020F                     	;# 
  6164  0210                     	;# 
  6165  0210                     	;# 
  6166  0211                     	;# 
  6167  0211                     	;# 
  6168  0212                     	;# 
  6169  0213                     	;# 
  6170  0214                     	;# 
  6171  0214                     	;# 
  6172  0215                     	;# 
  6173  0215                     	;# 
  6174  0216                     	;# 
  6175  0216                     	;# 
  6176  0217                     	;# 
  6177  0217                     	;# 
  6178  0218                     	;# 
  6179  0219                     	;# 
  6180  021A                     	;# 
  6181  021A                     	;# 
  6182  021B                     	;# 
  6183  021B                     	;# 
  6184  021C                     	;# 
  6185  021C                     	;# 
  6186  021D                     	;# 
  6187  021D                     	;# 
  6188  021E                     	;# 
  6189  021F                     	;# 
  6190  028C                     	;# 
  6191  028C                     	;# 
  6192  028D                     	;# 
  6193  028D                     	;# 
  6194  028E                     	;# 
  6195  028F                     	;# 
  6196  0290                     	;# 
  6197  0291                     	;# 
  6198  0292                     	;# 
  6199  0292                     	;# 
  6200  0293                     	;# 
  6201  0293                     	;# 
  6202  0294                     	;# 
  6203  0295                     	;# 
  6204  0296                     	;# 
  6205  0297                     	;# 
  6206  0298                     	;# 
  6207  0298                     	;# 
  6208  0299                     	;# 
  6209  0299                     	;# 
  6210  029A                     	;# 
  6211  029B                     	;# 
  6212  029C                     	;# 
  6213  029D                     	;# 
  6214  029F                     	;# 
  6215  030C                     	;# 
  6216  030C                     	;# 
  6217  030D                     	;# 
  6218  030E                     	;# 
  6219  030F                     	;# 
  6220  0310                     	;# 
  6221  0310                     	;# 
  6222  0311                     	;# 
  6223  0312                     	;# 
  6224  0313                     	;# 
  6225  0314                     	;# 
  6226  0314                     	;# 
  6227  0315                     	;# 
  6228  0316                     	;# 
  6229  0317                     	;# 
  6230  0318                     	;# 
  6231  0318                     	;# 
  6232  0319                     	;# 
  6233  031A                     	;# 
  6234  031B                     	;# 
  6235  038C                     	;# 
  6236  038C                     	;# 
  6237  038D                     	;# 
  6238  038E                     	;# 
  6239  0390                     	;# 
  6240  0390                     	;# 
  6241  0391                     	;# 
  6242  0392                     	;# 
  6243  048C                     	;# 
  6244  048C                     	;# 
  6245  048D                     	;# 
  6246  048E                     	;# 
  6247  048F                     	;# 
  6248  048F                     	;# 
  6249  0490                     	;# 
  6250  0491                     	;# 
  6251  0492                     	;# 
  6252  0492                     	;# 
  6253  0493                     	;# 
  6254  0494                     	;# 
  6255  0495                     	;# 
  6256  0495                     	;# 
  6257  0496                     	;# 
  6258  0497                     	;# 
  6259  0498                     	;# 
  6260  0499                     	;# 
  6261  049A                     	;# 
  6262  049B                     	;# 
  6263  049C                     	;# 
  6264  049D                     	;# 
  6265  058C                     	;# 
  6266  058C                     	;# 
  6267  058D                     	;# 
  6268  058E                     	;# 
  6269  058F                     	;# 
  6270  058F                     	;# 
  6271  0590                     	;# 
  6272  0591                     	;# 
  6273  0592                     	;# 
  6274  0593                     	;# 
  6275  059C                     	;# 
  6276  059C                     	;# 
  6277  059D                     	;# 
  6278  059D                     	;# 
  6279  059E                     	;# 
  6280  059F                     	;# 
  6281  060C                     	;# 
  6282  060C                     	;# 
  6283  060D                     	;# 
  6284  060D                     	;# 
  6285  060E                     	;# 
  6286  060F                     	;# 
  6287  0610                     	;# 
  6288  0611                     	;# 
  6289  0612                     	;# 
  6290  0613                     	;# 
  6291  0614                     	;# 
  6292  0616                     	;# 
  6293  0616                     	;# 
  6294  0617                     	;# 
  6295  0617                     	;# 
  6296  0618                     	;# 
  6297  0619                     	;# 
  6298  061A                     	;# 
  6299  061B                     	;# 
  6300  061C                     	;# 
  6301  061D                     	;# 
  6302  061E                     	;# 
  6303  070C                     	;# 
  6304  070D                     	;# 
  6305  070E                     	;# 
  6306  070F                     	;# 
  6307  0710                     	;# 
  6308  0711                     	;# 
  6309  0712                     	;# 
  6310  0713                     	;# 
  6311  0714                     	;# 
  6312  0716                     	;# 
  6313  0717                     	;# 
  6314  0718                     	;# 
  6315  0719                     	;# 
  6316  071A                     	;# 
  6317  071B                     	;# 
  6318  071C                     	;# 
  6319  071D                     	;# 
  6320  071E                     	;# 
  6321  0796                     	;# 
  6322  0797                     	;# 
  6323  0798                     	;# 
  6324  0799                     	;# 
  6325  079A                     	;# 
  6326  079B                     	;# 
  6327  079C                     	;# 
  6328  079D                     	;# 
  6329  080C                     	;# 
  6330  080D                     	;# 
  6331  080E                     	;# 
  6332  080F                     	;# 
  6333  0810                     	;# 
  6334  0811                     	;# 
  6335  0812                     	;# 
  6336  0813                     	;# 
  6337  0814                     	;# 
  6338  081A                     	;# 
  6339  081A                     	;# 
  6340  081B                     	;# 
  6341  081C                     	;# 
  6342  081C                     	;# 
  6343  081D                     	;# 
  6344  081E                     	;# 
  6345  081F                     	;# 
  6346  088C                     	;# 
  6347  088D                     	;# 
  6348  088E                     	;# 
  6349  088F                     	;# 
  6350  0890                     	;# 
  6351  0891                     	;# 
  6352  0892                     	;# 
  6353  0893                     	;# 
  6354  0895                     	;# 
  6355  0896                     	;# 
  6356  0897                     	;# 
  6357  0898                     	;# 
  6358  0899                     	;# 
  6359  089A                     	;# 
  6360  089B                     	;# 
  6361  090C                     	;# 
  6362  090E                     	;# 
  6363  090F                     	;# 
  6364  091F                     	;# 
  6365  098F                     	;# 
  6366  098F                     	;# 
  6367  0990                     	;# 
  6368  0991                     	;# 
  6369  0992                     	;# 
  6370  0993                     	;# 
  6371  0994                     	;# 
  6372  0995                     	;# 
  6373  0996                     	;# 
  6374  0997                     	;# 
  6375  1E0F                     	;# 
  6376  1E10                     	;# 
  6377  1E11                     	;# 
  6378  1E12                     	;# 
  6379  1E13                     	;# 
  6380  1E14                     	;# 
  6381  1E15                     	;# 
  6382  1E16                     	;# 
  6383  1E17                     	;# 
  6384  1E18                     	;# 
  6385  1E19                     	;# 
  6386  1E1A                     	;# 
  6387  1E1B                     	;# 
  6388  1E1C                     	;# 
  6389  1E1D                     	;# 
  6390  1E1E                     	;# 
  6391  1E1F                     	;# 
  6392  1E20                     	;# 
  6393  1E21                     	;# 
  6394  1E22                     	;# 
  6395  1E23                     	;# 
  6396  1E24                     	;# 
  6397  1E25                     	;# 
  6398  1E26                     	;# 
  6399  1E27                     	;# 
  6400  1E28                     	;# 
  6401  1E29                     	;# 
  6402  1E2A                     	;# 
  6403  1E2B                     	;# 
  6404  1E2C                     	;# 
  6405  1E2D                     	;# 
  6406  1E2E                     	;# 
  6407  1E2F                     	;# 
  6408  1E30                     	;# 
  6409  1E31                     	;# 
  6410  1E32                     	;# 
  6411  1E33                     	;# 
  6412  1E34                     	;# 
  6413  1E35                     	;# 
  6414  1E36                     	;# 
  6415  1E37                     	;# 
  6416  1E8F                     	;# 
  6417  1E90                     	;# 
  6418  1E91                     	;# 
  6419  1E92                     	;# 
  6420  1E93                     	;# 
  6421  1E94                     	;# 
  6422  1E95                     	;# 
  6423  1E96                     	;# 
  6424  1E97                     	;# 
  6425  1E9C                     	;# 
  6426  1E9D                     	;# 
  6427  1E9E                     	;# 
  6428  1EA1                     	;# 
  6429  1EA2                     	;# 
  6430  1EA3                     	;# 
  6431  1EA4                     	;# 
  6432  1EA9                     	;# 
  6433  1EAA                     	;# 
  6434  1EB1                     	;# 
  6435  1EB2                     	;# 
  6436  1EB8                     	;# 
  6437  1EB9                     	;# 
  6438  1EBA                     	;# 
  6439  1EBB                     	;# 
  6440  1EBC                     	;# 
  6441  1EBD                     	;# 
  6442  1EBE                     	;# 
  6443  1EC3                     	;# 
  6444  1EC5                     	;# 
  6445  1EC6                     	;# 
  6446  1EC7                     	;# 
  6447  1EC8                     	;# 
  6448  1EC9                     	;# 
  6449  1ECA                     	;# 
  6450  1ECB                     	;# 
  6451  1ECB                     	;# 
  6452  1ECB                     	;# 
  6453  1ECC                     	;# 
  6454  1ECC                     	;# 
  6455  1ECC                     	;# 
  6456  1F10                     	;# 
  6457  1F11                     	;# 
  6458  1F12                     	;# 
  6459  1F14                     	;# 
  6460  1F15                     	;# 
  6461  1F1C                     	;# 
  6462  1F1D                     	;# 
  6463  1F1E                     	;# 
  6464  1F1F                     	;# 
  6465  1F20                     	;# 
  6466  1F21                     	;# 
  6467  1F22                     	;# 
  6468  1F23                     	;# 
  6469  1F24                     	;# 
  6470  1F25                     	;# 
  6471  1F26                     	;# 
  6472  1F27                     	;# 
  6473  1F38                     	;# 
  6474  1F39                     	;# 
  6475  1F3A                     	;# 
  6476  1F3B                     	;# 
  6477  1F3C                     	;# 
  6478  1F3D                     	;# 
  6479  1F3E                     	;# 
  6480  1F3F                     	;# 
  6481  1F43                     	;# 
  6482  1F44                     	;# 
  6483  1F45                     	;# 
  6484  1F46                     	;# 
  6485  1F47                     	;# 
  6486  1F48                     	;# 
  6487  1F49                     	;# 
  6488  1F4A                     	;# 
  6489  1F4E                     	;# 
  6490  1F4F                     	;# 
  6491  1F50                     	;# 
  6492  1F51                     	;# 
  6493  1F52                     	;# 
  6494  1F53                     	;# 
  6495  1F54                     	;# 
  6496  1F55                     	;# 
  6497  1FE4                     	;# 
  6498  1FE5                     	;# 
  6499  1FE6                     	;# 
  6500  1FE7                     	;# 
  6501  1FE8                     	;# 
  6502  1FE8                     	;# 
  6503  1FE9                     	;# 
  6504  1FEA                     	;# 
  6505  1FEB                     	;# 
  6506  1FED                     	;# 
  6507  1FEE                     	;# 
  6508  1FEF                     	;_dmxData
  6509                           
  6510                           	psect	idataBANK1
  6511  0002                     __pidataBANK1:	
  6512                           
  6513                           ;initializer for _address
  6514  0002  3401               	retlw	1
  6515  0003  3400               	retlw	0
  6516                           
  6517                           	psect	idataBANK2
  6518  1EB0                     __pidataBANK2:	
  6519                           
  6520                           ;initializer for _currentState
  6521  1EB0  3402               	retlw	2
  6522  1EB1  3400               	retlw	0
  6523                           
  6524                           ;initializer for _fadeAmmount
  6525  1EB2  3414               	retlw	20
  6526  1EB3  3400               	retlw	0
  6527                           
  6528                           ;initializer for _delay
  6529  1EB4  340A               	retlw	10
  6530  1EB5  3400               	retlw	0
  6531                           
  6532                           ;initializer for _threshold
  6533  1EB6  3490               	retlw	144
  6534  1EB7  3406               	retlw	6
  6535                           
  6536                           ;initializer for _firstMsg
  6537  1EB8  3401               	retlw	1
  6538                           
  6539                           ;initializer for _cycleSpeed
  6540  1EB9  3414               	retlw	20
  6541  1EBA  3400               	retlw	0
  6542                           
  6543                           	psect	idataBANK3
  6544  1F08                     __pidataBANK3:	
  6545                           
  6546                           ;initializer for _pulseColor
  6547  1F08  3400               	retlw	0
  6548  1F09  3400               	retlw	0
  6549  1F0A  3400               	retlw	0
  6550  1F0B  3400               	retlw	0
  6551  1F0C  3480               	retlw	128
  6552  1F0D  343F               	retlw	63
  6553  1F0E  3400               	retlw	0
  6554  1F0F  3400               	retlw	0
  6555  1F10  3400               	retlw	0
  6556  1F11  343F               	retlw	63
  6557                           
  6558                           ;initializer for _color
  6559  1F12  3400               	retlw	0
  6560  1F13  3400               	retlw	0
  6561  1F14  3400               	retlw	0
  6562  1F15  3400               	retlw	0
  6563  1F16  3480               	retlw	128
  6564  1F17  343F               	retlw	63
  6565  1F18  3400               	retlw	0
  6566  1F19  3400               	retlw	0
  6567  1F1A  3400               	retlw	0
  6568  1F1B  343F               	retlw	63
  6569                           
  6570                           	psect	stringtext1
  6571  1800                     __pstringtext1:	
  6572  1800                     _charTable:	
  6573  1800  3400               	retlw	0
  6574  1801  3482               	retlw	130
  6575  1802  3421               	retlw	33
  6576  1803  3400               	retlw	0
  6577  1804  3400               	retlw	0
  6578  1805  3400               	retlw	0
  6579  1806  3400               	retlw	0
  6580  1807  3402               	retlw	2
  6581  1808  3439               	retlw	57
  6582  1809  340F               	retlw	15
  6583  180A  3400               	retlw	0
  6584  180B  3400               	retlw	0
  6585  180C  3400               	retlw	0
  6586  180D  3440               	retlw	64
  6587  180E  3480               	retlw	128
  6588  180F  3400               	retlw	0
  6589  1810  343F               	retlw	63
  6590  1811  3406               	retlw	6
  6591  1812  345B               	retlw	91
  6592  1813  344F               	retlw	79
  6593  1814  3466               	retlw	102
  6594  1815  346D               	retlw	109
  6595  1816  347D               	retlw	125
  6596  1817  3407               	retlw	7
  6597  1818  347F               	retlw	127
  6598  1819  346F               	retlw	111
  6599  181A  3400               	retlw	0
  6600  181B  3400               	retlw	0
  6601  181C  3400               	retlw	0
  6602  181D  3448               	retlw	72
  6603  181E  3400               	retlw	0
  6604  181F  3453               	retlw	83
  6605  1820  3400               	retlw	0
  6606  1821  3477               	retlw	119
  6607  1822  347C               	retlw	124
  6608  1823  3439               	retlw	57
  6609  1824  345E               	retlw	94
  6610  1825  3479               	retlw	121
  6611  1826  3471               	retlw	113
  6612  1827  346F               	retlw	111
  6613  1828  3476               	retlw	118
  6614  1829  3406               	retlw	6
  6615  182A  341E               	retlw	30
  6616  182B  3400               	retlw	0
  6617  182C  3438               	retlw	56
  6618  182D  3400               	retlw	0
  6619  182E  3454               	retlw	84
  6620  182F  343F               	retlw	63
  6621  1830  3473               	retlw	115
  6622  1831  3467               	retlw	103
  6623  1832  3450               	retlw	80
  6624  1833  346D               	retlw	109
  6625  1834  3478               	retlw	120
  6626  1835  343E               	retlw	62
  6627  1836  3400               	retlw	0
  6628  1837  3400               	retlw	0
  6629  1838  3400               	retlw	0
  6630  1839  346E               	retlw	110
  6631  183A  3400               	retlw	0
  6632  183B  3439               	retlw	57
  6633  183C  3400               	retlw	0
  6634  183D  340F               	retlw	15
  6635  183E  3400               	retlw	0
  6636  183F  3408               	retlw	8
  6637  1840  3463               	retlw	99
  6638  1841  345F               	retlw	95
  6639  1842  347C               	retlw	124
  6640  1843  3458               	retlw	88
  6641  1844  345E               	retlw	94
  6642  1845  347B               	retlw	123
  6643  1846  3471               	retlw	113
  6644  1847  346F               	retlw	111
  6645  1848  3474               	retlw	116
  6646  1849  3402               	retlw	2
  6647  184A  341E               	retlw	30
  6648  184B  3400               	retlw	0
  6649  184C  3406               	retlw	6
  6650  184D  3400               	retlw	0
  6651  184E  3454               	retlw	84
  6652  184F  345C               	retlw	92
  6653  1850  3473               	retlw	115
  6654  1851  3467               	retlw	103
  6655  1852  3450               	retlw	80
  6656  1853  346D               	retlw	109
  6657  1854  3478               	retlw	120
  6658  1855  341C               	retlw	28
  6659  1856  3400               	retlw	0
  6660  1857  3400               	retlw	0
  6661  1858  3400               	retlw	0
  6662  1859  346E               	retlw	110
  6663  185A  3400               	retlw	0
  6664  185B  3439               	retlw	57
  6665  185C  3430               	retlw	48
  6666  185D  340F               	retlw	15
  6667  185E  3400               	retlw	0
  6668  185F  3400               	retlw	0
  6669  1860                     __end_of_charTable:	
  6670                           
  6671                           	psect	nvBANK2
  6672  016B                     __pnvBANK2:	
  6673  016B                     _ADCC_ADTI_InterruptHandler:	
  6674  016B                     	ds	2
  6675  016D                     _TMR0_InterruptHandler:	
  6676  016D                     	ds	2
  6677  016F                     _eusart1TxBufferRemaining:	
  6678  016F                     	ds	1
  6679                           
  6680                           	psect	nvBANK3
  6681  01DA                     __pnvBANK3:	
  6682  01DA                     _EUSART1_ErrorHandler:	
  6683  01DA                     	ds	2
  6684  01DC                     _EUSART1_OverrunErrorHandler:	
  6685  01DC                     	ds	2
  6686  01DE                     _EUSART1_FramingErrorHandler:	
  6687  01DE                     	ds	2
  6688  01E0                     _EUSART1_RxDefaultInterruptHandler:	
  6689  01E0                     	ds	2
  6690  01E2                     _EUSART1_TxDefaultInterruptHandler:	
  6691  01E2                     	ds	2
  6692  000B                     _INTCONbits	set	11
  6693  0014                     _TRISC	set	20
  6694  0013                     _TRISB	set	19
  6695  0012                     _TRISA	set	18
  6696  001A                     _LATC	set	26
  6697  0019                     _LATB	set	25
  6698  0018                     _LATA	set	24
  6699  000C                     _PORTA	set	12
  6700  000E                     _PORTC	set	14
  6701  00A3                     _TRISC3	set	163
  6702  00A4                     _TRISC4	set	164
  6703  00A6                     _TRISC6	set	166
  6704  00A7                     _TRISC7	set	167
  6705  00CE                     _LATB6	set	206
  6706  009E                     _TRISB6	set	158
  6707  0090                     _ADERRL	set	144
  6708  0091                     _ADERRH	set	145
  6709  009B                     _ADPREVL	set	155
  6710  009C                     _ADPREVH	set	156
  6711  0094                     _ADFLTRL	set	148
  6712  0095                     _ADFLTRH	set	149
  6713  0096                     _ADACCL	set	150
  6714  0097                     _ADACCH	set	151
  6715  0099                     _ADCNT	set	153
  6716  009D                     _ADRESL	set	157
  6717  009E                     _ADRESH	set	158
  6718  009F                     _ADPCH	set	159
  6719  009A                     _ADRPT	set	154
  6720  0098                     _ADACCU	set	152
  6721  0093                     _ADSTPTH	set	147
  6722  0092                     _ADSTPTL	set	146
  6723  008F                     _ADUTHH	set	143
  6724  008E                     _ADUTHL	set	142
  6725  008D                     _ADLTHH	set	141
  6726  008C                     _ADLTHL	set	140
  6727  011A                     _TXREG	set	282
  6728  0112                     _ADCON1bits	set	274
  6729  0115                     _ADSTATbits	set	277
  6730  0113                     _ADCON2bits	set	275
  6731  0114                     _ADCON3bits	set	276
  6732  0111                     _ADCON0bits	set	273
  6733  0111                     _ADCON0	set	273
  6734  0118                     _ADCLK	set	280
  6735  0117                     _ADACT	set	279
  6736  0116                     _ADREF	set	278
  6737  0115                     _ADSTAT	set	277
  6738  0114                     _ADCON3	set	276
  6739  0113                     _ADCON2	set	275
  6740  0112                     _ADCON1	set	274
  6741  0110                     _ADPREH	set	272
  6742  010F                     _ADPREL	set	271
  6743  010E                     _ADCAP	set	270
  6744  010D                     _ADACQH	set	269
  6745  010C                     _ADACQL	set	268
  6746  0119                     _RC1REG	set	281
  6747  011D                     _RC1STAbits	set	285
  6748  011A                     _TX1REG	set	282
  6749  011E                     _TX1STAbits	set	286
  6750  011C                     _SP1BRGH	set	284
  6751  011B                     _SP1BRGL	set	283
  6752  011E                     _TX1STA	set	286
  6753  011D                     _RC1STA	set	285
  6754  011F                     _BAUD1CON	set	287
  6755  018C                     _SSP1BUF	set	396
  6756  0191                     _SSP1CON2bits	set	401
  6757  0190                     _SSP1CON1bits	set	400
  6758  018D                     _SSP1ADD	set	397
  6759  0192                     _SSP1CON3	set	402
  6760  0190                     _SSP1CON1	set	400
  6761  018F                     _SSP1STAT	set	399
  6762  028E                     _T2CONbits	set	654
  6763  0290                     _T2CLKCON	set	656
  6764  0318                     _CCPR4L	set	792
  6765  0319                     _CCPR4H	set	793
  6766  0314                     _CCPR3L	set	788
  6767  0315                     _CCPR3H	set	789
  6768  0310                     _CCPR2L	set	784
  6769  0311                     _CCPR2H	set	785
  6770  030C                     _CCPR1L	set	780
  6771  030D                     _CCPR1H	set	781
  6772  031A                     _CCP4CONbits	set	794
  6773  0316                     _CCP3CONbits	set	790
  6774  0312                     _CCP2CONbits	set	786
  6775  030E                     _CCP1CONbits	set	782
  6776  059E                     _T0CON0bits	set	1438
  6777  059E                     _T0CON0	set	1438
  6778  059C                     _TMR0L	set	1436
  6779  059D                     _TMR0H	set	1437
  6780  059F                     _T0CON1	set	1439
  6781  070D                     _PIR1bits	set	1805
  6782  0717                     _PIE1bits	set	1815
  6783  070F                     _PIR3bits	set	1807
  6784  070C                     _PIR0bits	set	1804
  6785  0716                     _PIE0bits	set	1814
  6786  0719                     _PIE3bits	set	1817
  6787  079D                     _PMD7	set	1949
  6788  079C                     _PMD6	set	1948
  6789  079B                     _PMD5	set	1947
  6790  079A                     _PMD4	set	1946
  6791  0799                     _PMD3	set	1945
  6792  0798                     _PMD2	set	1944
  6793  0797                     _PMD1	set	1943
  6794  0796                     _PMD0	set	1942
  6795  0892                     _OSCTUNE	set	2194
  6796  0893                     _OSCFRQ	set	2195
  6797  0891                     _OSCEN	set	2193
  6798  088F                     _OSCCON3	set	2191
  6799  088D                     _OSCCON1	set	2189
  6800  1ECB                     _RX1DTPPS	set	7883
  6801  1EC6                     _SSP1DATPPS	set	7878
  6802  1EC5                     _SSP1CLKPPS	set	7877
  6803  1F23                     _RC3PPS	set	7971
  6804  1F24                     _RC4PPS	set	7972
  6805  1F26                     _RC6PPS	set	7974
  6806  1F27                     _RC7PPS	set	7975
  6807  1F15                     _RA5PPS	set	7957
  6808  1F14                     _RA4PPS	set	7956
  6809  1F51                     _SLRCONC	set	8017
  6810  1F46                     _SLRCONB	set	8006
  6811  1F3B                     _SLRCONA	set	7995
  6812  1F50                     _ODCONC	set	8016
  6813  1F45                     _ODCONB	set	8005
  6814  1F3A                     _ODCONA	set	7994
  6815  1F4F                     _WPUC	set	8015
  6816  1F39                     _WPUA	set	7993
  6817  1F44                     _WPUB	set	8004
  6818  1F38                     _ANSELA	set	7992
  6819  1F43                     _ANSELB	set	8003
  6820  1F4E                     _ANSELC	set	8014
  6821                           
  6822                           ; #config settings
  6823  0000                     
  6824                           	psect	cinit
  6825  003B                     start_initialization:	
  6826  003B                     __initialization:		;BIGRAM
  6827                           
  6828                           ; Initialize objects allocated to BANK1
  6829  003B  0141               	movlb	1	; select bank1
  6830  003C  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  6831  003F  00EE               	movwf	__pdataBANK1& (0+127)
  6832  0040  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  6833  0043  00EF               	movwf	(__pdataBANK1+1)& (0+127)
  6834                           
  6835                           ; Initialize objects allocated to BANK2
  6836  0044  30B0               	movlw	low __pidataBANK2
  6837  0045  0084               	movwf	4
  6838  0046  309E               	movlw	(high __pidataBANK2)| (0+128)
  6839  0047  0085               	movwf	5
  6840  0048  3060               	movlw	low __pdataBANK2
  6841  0049  0086               	movwf	6
  6842  004A  3001               	movlw	high __pdataBANK2
  6843  004B  0087               	movwf	7
  6844  004C  3000               	movlw	0
  6845  004D  00FF               	movwf	btemp+1
  6846  004E  300B               	movlw	11
  6847  004F  319E  26C7  3180   	fcall	init_ram
  6848                           
  6849                           ; Initialize objects allocated to BANK3
  6850  0052  3008               	movlw	low __pidataBANK3
  6851  0053  0084               	movwf	4
  6852  0054  309F               	movlw	(high __pidataBANK3)| (0+128)
  6853  0055  0085               	movwf	5
  6854  0056  30C6               	movlw	low __pdataBANK3
  6855  0057  0086               	movwf	6
  6856  0058  3001               	movlw	high __pdataBANK3
  6857  0059  0087               	movwf	7
  6858  005A  3000               	movlw	0
  6859  005B  00FF               	movwf	btemp+1
  6860  005C  3014               	movlw	20
  6861  005D  319E  26C7  3180   	fcall	init_ram
  6862                           
  6863                           ; Clear objects allocated to BIGRAM
  6864  0060  30EF               	movlw	low (0+9711)
  6865  0061  0084               	movwf	4
  6866  0062  3025               	movlw	high (0+9711)
  6867  0063  0085               	movwf	5
  6868  0064  3001               	movlw	1
  6869  0065  00FE               	movwf	btemp
  6870  0066  3002               	movlw	2
  6871  0067  00FF               	movwf	btemp+1
  6872  0068  319E  26BB  3180   	fcall	clear_ram0
  6873                           
  6874                           ; Clear objects allocated to COMMON
  6875  006B  01F0               	clrf	__pbssCOMMON& (0+127)
  6876  006C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  6877  006D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  6878  006E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  6879  006F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  6880  0070  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  6881                           
  6882                           ; Clear objects allocated to BANK1
  6883  0071  01E9               	clrf	__pbssBANK1& (0+127)
  6884  0072  01EA               	clrf	(__pbssBANK1+1)& (0+127)
  6885  0073  01EB               	clrf	(__pbssBANK1+2)& (0+127)
  6886  0074  01EC               	clrf	(__pbssBANK1+3)& (0+127)
  6887  0075  01ED               	clrf	(__pbssBANK1+4)& (0+127)
  6888                           
  6889                           ; Clear objects allocated to BANK2
  6890  0076  3020               	movlw	low __pbssBANK2
  6891  0077  0084               	movwf	4
  6892  0078  3001               	movlw	high __pbssBANK2
  6893  0079  0085               	movwf	5
  6894  007A  3040               	movlw	64
  6895  007B  00FE               	movwf	btemp
  6896  007C  3000               	movlw	0
  6897  007D  00FF               	movwf	btemp+1
  6898  007E  319E  26BB  3180   	fcall	clear_ram0
  6899                           
  6900                           ; Clear objects allocated to BANK3
  6901  0081  30A0               	movlw	low __pbssBANK3
  6902  0082  0084               	movwf	4
  6903  0083  3001               	movlw	high __pbssBANK3
  6904  0084  0085               	movwf	5
  6905  0085  3026               	movlw	38
  6906  0086  00FE               	movwf	btemp
  6907  0087  3000               	movlw	0
  6908  0088  00FF               	movwf	btemp+1
  6909  0089  319E  26BB  3180   	fcall	clear_ram0
  6910                           
  6911                           ; Clear objects allocated to BANK4
  6912  008C  3020               	movlw	low __pbssBANK4
  6913  008D  0084               	movwf	4
  6914  008E  3002               	movlw	high __pbssBANK4
  6915  008F  0085               	movwf	5
  6916  0090  3020               	movlw	32
  6917  0091  00FE               	movwf	btemp
  6918  0092  3000               	movlw	0
  6919  0093  00FF               	movwf	btemp+1
  6920  0094  319E  26BB         	fcall	clear_ram0
  6921  0096                     end_of_initialization:	
  6922                           ;End of C runtime variable initialization code
  6923                           
  6924  0096                     __end_of__initialization:	
  6925  0096  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6926  0097  0140               	movlb	0
  6927  0098  3192  2A4C         	ljmp	_main	;jump to C main() function
  6928                           
  6929                           	psect	bssCOMMON
  6930  0070                     __pbssCOMMON:	
  6931  0070                     _eusart1RxTail:	
  6932  0070                     	ds	1
  6933  0071                     _eusart1RxHead:	
  6934  0071                     	ds	1
  6935  0072                     _eusart1TxTail:	
  6936  0072                     	ds	1
  6937  0073                     _eusart1TxHead:	
  6938  0073                     	ds	1
  6939  0074                     I2C1_ISR@i2c_address:	
  6940  0074                     	ds	2
  6941                           
  6942                           	psect	bssBANK1
  6943  00E9                     __pbssBANK1:	
  6944  00E9                     _thresholdExceeded:	
  6945  00E9                     	ds	1
  6946  00EA                     _p_i2c1_current:	
  6947  00EA                     	ds	1
  6948  00EB                     _p_i2c1_trb_current:	
  6949  00EB                     	ds	1
  6950  00EC                     _i2c1_state:	
  6951  00EC                     	ds	1
  6952  00ED                     _eusart1RxCount:	
  6953  00ED                     	ds	1
  6954                           
  6955                           	psect	dataBANK1
  6956  00EE                     __pdataBANK1:	
  6957  00EE                     _address:	
  6958  00EE                     	ds	2
  6959                           
  6960                           	psect	bssBANK2
  6961  0120                     __pbssBANK2:	
  6962  0120                     _i2c1_object:	
  6963  0120                     	ds	5
  6964  0125                     _fadeTime:	
  6965  0125                     	ds	4
  6966  0129                     _lastActiveTime:	
  6967  0129                     	ds	2
  6968  012B                     controller@lastTime:	
  6969  012B                     	ds	2
  6970  012D                     _hueValPulse:	
  6971  012D                     	ds	2
  6972  012F                     _lastTimePulse:	
  6973  012F                     	ds	2
  6974  0131                     _hueValCycle:	
  6975  0131                     	ds	2
  6976  0133                     _lastTimeCycle:	
  6977  0133                     	ds	2
  6978  0135                     led@lastTime:	
  6979  0135                     	ds	2
  6980  0137                     dmx@lastTime:	
  6981  0137                     	ds	2
  6982  0139                     _dmxPointer:	
  6983  0139                     	ds	2
  6984  013B                     _thresholdCount:	
  6985  013B                     	ds	2
  6986  013D                     _lastRun:	
  6987  013D                     	ds	2
  6988  013F                     _bpm:	
  6989  013F                     	ds	2
  6990  0141                     _lastBeat:	
  6991  0141                     	ds	2
  6992  0143                     _lastTime:	
  6993  0143                     	ds	2
  6994  0145                     _count:	
  6995  0145                     	ds	2
  6996  0147                     _currentTime:	
  6997  0147                     	ds	2
  6998  0149                     _changeColor:	
  6999  0149                     	ds	1
  7000  014A                     _toggleCheck:	
  7001  014A                     	ds	1
  7002  014B                     _dmxOn:	
  7003  014B                     	ds	1
  7004  014C                     _offCheck:	
  7005  014C                     	ds	1
  7006  014D                     _lastDetected:	
  7007  014D                     	ds	1
  7008  014E                     _detected:	
  7009  014E                     	ds	1
  7010  014F                     _menu:	
  7011  014F                     	ds	1
  7012  0150                     _enter:	
  7013  0150                     	ds	1
  7014  0151                     _down:	
  7015  0151                     	ds	1
  7016  0152                     _up:	
  7017  0152                     	ds	1
  7018  0153                     _isOn:	
  7019  0153                     	ds	1
  7020  0154                     I2C1_ISR@i2c_10bit_address_restart:	
  7021  0154                     	ds	1
  7022  0155                     I2C1_ISR@i2c_bytes_left:	
  7023  0155                     	ds	1
  7024  0156                     I2C1_ISR@pi2c_buf_ptr:	
  7025  0156                     	ds	1
  7026  0157                     _i2c1_trb_count:	
  7027  0157                     	ds	1
  7028  0158                     _eusart1RxLastError:	
  7029  0158                     	ds	1
  7030  0159                     I2C1_MasterWrite@trBlock:	
  7031  0159                     	ds	4
  7032  015D                     _i2c1_tr_queue:	
  7033  015D                     	ds	3
  7034                           
  7035                           	psect	dataBANK2
  7036  0160                     __pdataBANK2:	
  7037  0160                     _currentState:	
  7038  0160                     	ds	2
  7039  0162                     _fadeAmmount:	
  7040  0162                     	ds	2
  7041  0164                     _delay:	
  7042  0164                     	ds	2
  7043  0166                     _threshold:	
  7044  0166                     	ds	2
  7045  0168                     _firstMsg:	
  7046  0168                     	ds	1
  7047  0169                     _cycleSpeed:	
  7048  0169                     	ds	2
  7049                           
  7050                           	psect	bssBANK3
  7051  01A0                     __pbssBANK3:	
  7052  01A0                     cycleColors@F111:	
  7053  01A0                     	ds	10
  7054  01AA                     _eusart1RxStatusBuffer:	
  7055  01AA                     	ds	8
  7056  01B2                     _eusart1RxBuffer:	
  7057  01B2                     	ds	8
  7058  01BA                     _eusart1TxBuffer:	
  7059  01BA                     	ds	8
  7060  01C2                     I2C1_MasterRead@trBlock:	
  7061  01C2                     	ds	4
  7062                           
  7063                           	psect	dataBANK3
  7064  01C6                     __pdataBANK3:	
  7065  01C6                     _pulseColor:	
  7066  01C6                     	ds	10
  7067  01D0                     _color:	
  7068  01D0                     	ds	10
  7069                           
  7070                           	psect	bssBANK4
  7071  0220                     __pbssBANK4:	
  7072  0220                     _buttons:	
  7073  0220                     	ds	32
  7074                           
  7075                           	psect	inittext
  7076  1EC7                     init_ram:	
  7077  1EC7  00FE               	movwf	126
  7078  1EC8                     initloop:	
  7079  1EC8  0012               	moviw fsr0++
  7080  1EC9  001E               	movwi fsr1++
  7081  1ECA  3001               	movlw	1
  7082  1ECB  02FE               	subwf	126,f
  7083  1ECC  3000               	movlw	0
  7084  1ECD  3BFF               	subwfb	127,f
  7085  1ECE  087F               	movf	127,w
  7086  1ECF  047E               	iorwf	126,w
  7087  1ED0  1903               	btfsc	3,2
  7088  1ED1  3400               	retlw	0
  7089  1ED2  2EC8               	goto	initloop
  7090                           
  7091                           	psect	clrtext
  7092  1EBB                     clear_ram0:	
  7093                           ;	Called with FSR0 containing the base address, and
  7094                           ;	btemp/btemp+1 has the size to clear
  7095                           
  7096  1EBB  0064               	clrwdt	;clear the watchdog before getting into this loop
  7097  1EBC                     clrloop0:	
  7098  1EBC  0180               	clrf	0	;clear RAM location pointed to by FSR
  7099  1EBD  3101               	addfsr 0,1
  7100  1EBE  3001               	movlw	1
  7101  1EBF  02FE               	subwf	126,f
  7102  1EC0  3000               	movlw	0
  7103  1EC1  3BFF               	subwfb	127,f
  7104  1EC2  087F               	movf	127,w
  7105  1EC3  047E               	iorwf	126,w
  7106  1EC4  1903               	btfsc	3,2
  7107  1EC5  3400               	retlw	0	;all done for this memory range, return
  7108  1EC6  2EBC               	goto	clrloop0	;have we reached the end yet?
  7109                           
  7110                           	psect	cstackBANK3
  7111  01E4                     __pcstackBANK3:	
  7112  01E4                     ??_main:	
  7113                           
  7114                           ; 1 bytes @ 0x0
  7115  01E4                     	ds	2
  7116                           
  7117                           	psect	cstackBANK1
  7118  00A0                     __pcstackBANK1:	
  7119  00A0                     _HueToRGB$2871:	
  7120                           
  7121                           ; 4 bytes @ 0x0
  7122  00A0                     	ds	4
  7123  00A4                     ?___fltol:	
  7124  00A4                     ___fltol@f1:	
  7125                           ; 4 bytes @ 0x4
  7126                           
  7127                           
  7128                           ; 4 bytes @ 0x4
  7129  00A4                     	ds	4
  7130  00A8                     ??___fltol:	
  7131                           
  7132                           ; 1 bytes @ 0x8
  7133  00A8                     	ds	5
  7134  00AD                     ___fltol@sign1:	
  7135                           
  7136                           ; 1 bytes @ 0xD
  7137  00AD                     	ds	1
  7138  00AE                     ___fltol@exp1:	
  7139                           
  7140                           ; 1 bytes @ 0xE
  7141  00AE                     	ds	1
  7142  00AF                     ?_LED_setHSL:	
  7143  00AF                     LED_setHSL@hsl:	
  7144                           ; 1 bytes @ 0xF
  7145                           
  7146                           
  7147                           ; 10 bytes @ 0xF
  7148  00AF                     	ds	10
  7149  00B9                     ??_LED_setHSL:	
  7150                           
  7151                           ; 1 bytes @ 0x19
  7152  00B9                     	ds	2
  7153  00BB                     _LED_setHSL$2872:	
  7154                           
  7155                           ; 4 bytes @ 0x1B
  7156  00BB                     	ds	4
  7157  00BF                     _LED_setHSL$2875:	
  7158                           
  7159                           ; 4 bytes @ 0x1F
  7160  00BF                     	ds	4
  7161  00C3                     _LED_setHSL$2873:	
  7162                           
  7163                           ; 4 bytes @ 0x23
  7164  00C3                     	ds	4
  7165  00C7                     _LED_setHSL$2874:	
  7166                           
  7167                           ; 4 bytes @ 0x27
  7168  00C7                     	ds	4
  7169  00CB                     LED_setHSL@v1:	
  7170                           
  7171                           ; 4 bytes @ 0x2B
  7172  00CB                     	ds	4
  7173  00CF                     LED_setHSL@hue:	
  7174                           
  7175                           ; 4 bytes @ 0x2F
  7176  00CF                     	ds	4
  7177  00D3                     LED_setHSL@v2:	
  7178                           
  7179                           ; 4 bytes @ 0x33
  7180  00D3                     	ds	4
  7181  00D7                     LED_setHSL@rgb:	
  7182                           
  7183                           ; 3 bytes @ 0x37
  7184  00D7                     	ds	3
  7185  00DA                     ??_fadeColor:	
  7186  00DA                     ??_cycleColors:	
  7187                           ; 1 bytes @ 0x3A
  7188                           
  7189                           
  7190                           ; 1 bytes @ 0x3A
  7191  00DA                     	ds	2
  7192  00DC                     fadeColor@time:	
  7193  00DC                     cycleColors@time:	
  7194                           ; 2 bytes @ 0x3C
  7195                           
  7196                           
  7197                           ; 2 bytes @ 0x3C
  7198  00DC                     	ds	2
  7199  00DE                     cycleColors@color:	
  7200                           
  7201                           ; 10 bytes @ 0x3E
  7202  00DE                     	ds	10
  7203  00E8                     ??_MENU_task:	
  7204                           
  7205                           ; 1 bytes @ 0x48
  7206  00E8                     	ds	1
  7207                           
  7208                           	psect	cstackCOMMON
  7209  0076                     __pcstackCOMMON:	
  7210  0076                     ?_EUSART1_Receive_ISR:	
  7211  0076                     ?_EUSART1_Transmit_ISR:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0076                     ??_EUSART1_Transmit_ISR:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0076                     ?_EUSART1_DefaultErrorHandler:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0076                     ?_EUSART1_RxDataHandler:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0076                     ??_EUSART1_RxDataHandler:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0076                     ?_PMD_Initialize:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0076                     ?_PIN_MANAGER_Initialize:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0076                     ?_OSCILLATOR_Initialize:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0076                     ?_I2C1_Initialize:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0076                     ?_ADCC_Initialize:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0076                     ?_TMR0_Initialize:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0076                     ?_TMR0_ISR:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0076                     ??_TMR0_ISR:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0076                     ?_I2C1_BusCollisionISR:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0076                     ??_I2C1_BusCollisionISR:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0076                     ?_I2C1_ISR:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0076                     ?_ADCC_ThresholdISR:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0076                     ??_ADCC_ThresholdISR:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0076                     ?_TMR0_DefaultInterruptHandler:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0076                     ??_TMR0_DefaultInterruptHandler:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0076                     ?_I2C1_Stop:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0076                     ??_I2C1_Stop:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0076                     ?_I2C1_FunctionComplete:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0076                     ??_I2C1_FunctionComplete:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0076                     ?_ADCC_DefaultInterruptHandler:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0076                     ??_ADCC_DefaultInterruptHandler:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0076                     ?_CLOCK_init:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0076                     ?_DMX_ISR:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0076                     ??_DMX_ISR:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0076                     ?_TM1650_init:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0076                     ?_BUTTONS_init:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0076                     ?_initLED:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0076                     ?_BEAT_init:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0076                     ?_MENU_task:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0076                     ?_DMX_task:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0076                     ?_BUTTONS_task:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0076                     ?_CLOCK_timerCallback:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0076                     ??_CLOCK_timerCallback:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0076                     ?_TM1650_enable:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0076                     ?_numControl_resetTimer:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0076                     ?_EUSART1_Initialize:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0076                     ?_SYSTEM_Initialize:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0076                     ?_INTERRUPT_InterruptManager:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0076                     ?_ADCC_StartConversion:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0076                     ?_main:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0076                     ?_TM1650_isEnabled:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0076                     ?_adcThresholdHandler:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0076                     ??_adcThresholdHandler:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0076                     ?_BEAT_detected:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0076                     ?_BEAT_task:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0076                     ?_isDMXOn:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0076                     ?_fadeColor:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0076                     ?_LED_DMX:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0076                     ?_LED_Beat:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0076                     ?_menuButtons:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0076                     ?_cycleColors:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0076                     ?_pulseColors:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397                           
  7398                           ; 1 bytes @ 0x0
  7399  0076                     	ds	1
  7400  0077                     ??_EUSART1_Receive_ISR:	
  7401  0077                     ??_EUSART1_DefaultErrorHandler:	
  7402                           ; 1 bytes @ 0x1
  7403                           
  7404  0077                     I2C1_Stop@completion_code:	
  7405                           ; 1 bytes @ 0x1
  7406                           
  7407                           
  7408                           ; 1 bytes @ 0x1
  7409  0077                     	ds	1
  7410  0078                     ??_I2C1_ISR:	
  7411                           
  7412                           ; 1 bytes @ 0x2
  7413  0078                     	ds	4
  7414  007C                     ??_INTERRUPT_InterruptManager:	
  7415                           
  7416                           	psect	cstackBANK0
  7417  0020                     __pcstackBANK0:	
  7418                           ; 1 bytes @ 0x6
  7419                           
  7420  0020                     ?___fleq:	
  7421  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7422                           ; 1 bit 
  7423                           
  7424  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0020                     ?_EUSART1_SetErrorHandler:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0020                     ??_PMD_Initialize:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0020                     ??_PIN_MANAGER_Initialize:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0020                     ??_OSCILLATOR_Initialize:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0020                     ??_I2C1_Initialize:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0020                     ?_TMR0_SetInterruptHandler:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0020                     ?_I2C1_MasterTRBInsert:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0020                     ??_initLED:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0020                     ??_ADCC_StartConversion:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469  0020                     ?_ADCC_SetUpperThreshold:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472  0020                     ??_TM1650_isEnabled:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475  0020                     ?_init:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0020                     ??_BEAT_detected:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0020                     ??_isDMXOn:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0020                     ?_LED_setColor:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0020                     ?__Umul8_16:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490  0020                     ?_CLOCK_getTime:	
  7491                           ; 2 bytes @ 0x0
  7492                           
  7493  0020                     ?_BUTTONS_isClicked:	
  7494                           ; 2 bytes @ 0x0
  7495                           
  7496  0020                     ?___lwdiv:	
  7497                           ; 2 bytes @ 0x0
  7498                           
  7499  0020                     ?___lwmod:	
  7500                           ; 2 bytes @ 0x0
  7501                           
  7502  0020                     ?___xxtofl:	
  7503                           ; 2 bytes @ 0x0
  7504                           
  7505  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7506                           ; 4 bytes @ 0x0
  7507                           
  7508  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511  0020                     ADCC_StartConversion@channel:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514  0020                     LED_setColor@green:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517  0020                     __Umul8_16@multiplicand:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7524                           ; 2 bytes @ 0x0
  7525                           
  7526  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7527                           ; 2 bytes @ 0x0
  7528                           
  7529  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7530                           ; 2 bytes @ 0x0
  7531                           
  7532  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7533                           ; 2 bytes @ 0x0
  7534                           
  7535  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7536                           ; 2 bytes @ 0x0
  7537                           
  7538  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7539                           ; 2 bytes @ 0x0
  7540                           
  7541  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7542                           ; 2 bytes @ 0x0
  7543                           
  7544  0020                     init@port:	
  7545                           ; 2 bytes @ 0x0
  7546                           
  7547  0020                     ___lwdiv@divisor:	
  7548                           ; 2 bytes @ 0x0
  7549                           
  7550  0020                     ___lwmod@divisor:	
  7551                           ; 2 bytes @ 0x0
  7552                           
  7553  0020                     ___fleq@ff1:	
  7554                           ; 2 bytes @ 0x0
  7555                           
  7556  0020                     ___xxtofl@val:	
  7557                           ; 4 bytes @ 0x0
  7558                           
  7559                           
  7560                           ; 4 bytes @ 0x0
  7561  0020                     	ds	1
  7562  0021                     I2C1_MasterTRBInsert@pflag:	
  7563  0021                     I2C1_MasterWriteTRBBuild@length:	
  7564                           ; 1 bytes @ 0x1
  7565                           
  7566  0021                     LED_setColor@white:	
  7567                           ; 1 bytes @ 0x1
  7568                           
  7569                           
  7570                           ; 1 bytes @ 0x1
  7571  0021                     	ds	1
  7572  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7573  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7574                           ; 1 bytes @ 0x2
  7575                           
  7576  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7577                           ; 1 bytes @ 0x2
  7578                           
  7579  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7580                           ; 1 bytes @ 0x2
  7581                           
  7582  0022                     ??_EUSART1_SetErrorHandler:	
  7583                           ; 1 bytes @ 0x2
  7584                           
  7585  0022                     ??_ADCC_Initialize:	
  7586                           ; 1 bytes @ 0x2
  7587                           
  7588  0022                     ??_TMR0_Initialize:	
  7589                           ; 1 bytes @ 0x2
  7590                           
  7591  0022                     ??_TMR0_SetInterruptHandler:	
  7592                           ; 1 bytes @ 0x2
  7593                           
  7594  0022                     ??_I2C1_MasterTRBInsert:	
  7595                           ; 1 bytes @ 0x2
  7596                           
  7597  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7598                           ; 1 bytes @ 0x2
  7599                           
  7600  0022                     ??_CLOCK_init:	
  7601                           ; 1 bytes @ 0x2
  7602                           
  7603  0022                     ??_BEAT_init:	
  7604                           ; 1 bytes @ 0x2
  7605                           
  7606  0022                     ??_DMX_task:	
  7607                           ; 1 bytes @ 0x2
  7608                           
  7609  0022                     ??_BUTTONS_task:	
  7610                           ; 1 bytes @ 0x2
  7611                           
  7612  0022                     ??_numControl_resetTimer:	
  7613                           ; 1 bytes @ 0x2
  7614                           
  7615  0022                     ??__Umul8_16:	
  7616                           ; 1 bytes @ 0x2
  7617                           
  7618  0022                     ??_EUSART1_Initialize:	
  7619                           ; 1 bytes @ 0x2
  7620                           
  7621  0022                     ??_ADCC_SetUpperThreshold:	
  7622                           ; 1 bytes @ 0x2
  7623                           
  7624  0022                     ??_CLOCK_getTime:	
  7625                           ; 1 bytes @ 0x2
  7626                           
  7627  0022                     init@pin:	
  7628                           ; 1 bytes @ 0x2
  7629                           
  7630  0022                     LED_setColor@blue:	
  7631                           ; 1 bytes @ 0x2
  7632                           
  7633  0022                     I2C1_MasterWriteTRBBuild@address:	
  7634                           ; 1 bytes @ 0x2
  7635                           
  7636  0022                     ___lwdiv@dividend:	
  7637                           ; 2 bytes @ 0x2
  7638                           
  7639  0022                     ___lwmod@dividend:	
  7640                           ; 2 bytes @ 0x2
  7641                           
  7642                           
  7643                           ; 2 bytes @ 0x2
  7644  0022                     	ds	1
  7645  0023                     ??_SYSTEM_Initialize:	
  7646  0023                     ??_init:	
  7647                           ; 1 bytes @ 0x3
  7648                           
  7649  0023                     ??_BUTTONS_isClicked:	
  7650                           ; 1 bytes @ 0x3
  7651                           
  7652  0023                     ??_LED_setColor:	
  7653                           ; 1 bytes @ 0x3
  7654                           
  7655  0023                     I2C1_MasterTRBInsert@count:	
  7656                           ; 1 bytes @ 0x3
  7657                           
  7658  0023                     BUTTONS_isClicked@button:	
  7659                           ; 1 bytes @ 0x3
  7660                           
  7661                           
  7662                           ; 1 bytes @ 0x3
  7663  0023                     	ds	1
  7664  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7665  0024                     ??_menuButtons:	
  7666                           ; 1 bytes @ 0x4
  7667                           
  7668  0024                     ??___lwdiv:	
  7669                           ; 1 bytes @ 0x4
  7670                           
  7671  0024                     ??___lwmod:	
  7672                           ; 1 bytes @ 0x4
  7673                           
  7674  0024                     ??___xxtofl:	
  7675                           ; 1 bytes @ 0x4
  7676                           
  7677  0024                     init@btn:	
  7678                           ; 1 bytes @ 0x4
  7679                           
  7680  0024                     DMX_task@time:	
  7681                           ; 1 bytes @ 0x4
  7682                           
  7683  0024                     __Umul8_16@product:	
  7684                           ; 2 bytes @ 0x4
  7685                           
  7686  0024                     ___fleq@ff2:	
  7687                           ; 2 bytes @ 0x4
  7688                           
  7689                           
  7690                           ; 4 bytes @ 0x4
  7691  0024                     	ds	1
  7692  0025                     ??_BUTTONS_init:	
  7693  0025                     BUTTONS_task@i:	
  7694                           ; 1 bytes @ 0x5
  7695                           
  7696  0025                     ___lwdiv@counter:	
  7697                           ; 1 bytes @ 0x5
  7698                           
  7699  0025                     ___lwmod@counter:	
  7700                           ; 1 bytes @ 0x5
  7701                           
  7702                           
  7703                           ; 1 bytes @ 0x5
  7704  0025                     	ds	1
  7705  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7706  0026                     BUTTONS_task@time:	
  7707                           ; 1 bytes @ 0x6
  7708                           
  7709  0026                     ___lwdiv@quotient:	
  7710                           ; 2 bytes @ 0x6
  7711                           
  7712  0026                     __Umul8_16@word_mpld:	
  7713                           ; 2 bytes @ 0x6
  7714                           
  7715                           
  7716                           ; 2 bytes @ 0x6
  7717  0026                     	ds	1
  7718  0027                     ?_I2C1_MasterWrite:	
  7719  0027                     I2C1_MasterWrite@length:	
  7720                           ; 1 bytes @ 0x7
  7721                           
  7722  0027                     LED_setColor@lo1:	
  7723                           ; 1 bytes @ 0x7
  7724                           
  7725                           
  7726                           ; 2 bytes @ 0x7
  7727  0027                     	ds	1
  7728  0028                     ??_BEAT_task:	
  7729  0028                     ??___fleq:	
  7730                           ; 1 bytes @ 0x8
  7731                           
  7732  0028                     BUTTONS_task@btn:	
  7733                           ; 1 bytes @ 0x8
  7734                           
  7735  0028                     ___xxtofl@sign:	
  7736                           ; 1 bytes @ 0x8
  7737                           
  7738  0028                     __Umul8_16@multiplier:	
  7739                           ; 1 bytes @ 0x8
  7740                           
  7741  0028                     I2C1_MasterWrite@address:	
  7742                           ; 1 bytes @ 0x8
  7743                           
  7744                           
  7745                           ; 2 bytes @ 0x8
  7746  0028                     	ds	1
  7747  0029                     ?___fladd:	
  7748  0029                     ___xxtofl@exp:	
  7749                           ; 4 bytes @ 0x9
  7750                           
  7751  0029                     ___fladd@b:	
  7752                           ; 1 bytes @ 0x9
  7753                           
  7754                           
  7755                           ; 4 bytes @ 0x9
  7756  0029                     	ds	1
  7757  002A                     I2C1_MasterWrite@pflag:	
  7758  002A                     BEAT_task@offset:	
  7759                           ; 1 bytes @ 0xA
  7760                           
  7761  002A                     ___xxtofl@arg:	
  7762                           ; 2 bytes @ 0xA
  7763                           
  7764                           
  7765                           ; 4 bytes @ 0xA
  7766  002A                     	ds	1
  7767  002B                     ??_I2C1_MasterWrite:	
  7768  002B                     LED_setColor@lo2:	
  7769                           ; 1 bytes @ 0xB
  7770                           
  7771                           
  7772                           ; 2 bytes @ 0xB
  7773  002B                     	ds	2
  7774  002D                     I2C1_MasterWrite@pdata:	
  7775  002D                     ___fladd@a:	
  7776                           ; 1 bytes @ 0xD
  7777                           
  7778                           
  7779                           ; 4 bytes @ 0xD
  7780  002D                     	ds	1
  7781  002E                     ?_writeData:	
  7782  002E                     ?___fldiv:	
  7783                           ; 1 bytes @ 0xE
  7784                           
  7785  002E                     writeData@data:	
  7786                           ; 4 bytes @ 0xE
  7787                           
  7788  002E                     ___fldiv@a:	
  7789                           ; 1 bytes @ 0xE
  7790                           
  7791                           
  7792                           ; 4 bytes @ 0xE
  7793  002E                     	ds	1
  7794  002F                     ??_writeData:	
  7795  002F                     LED_setColor@lo3:	
  7796                           ; 1 bytes @ 0xF
  7797                           
  7798                           
  7799                           ; 2 bytes @ 0xF
  7800  002F                     	ds	2
  7801  0031                     ??___fladd:	
  7802                           
  7803                           ; 1 bytes @ 0x11
  7804  0031                     	ds	1
  7805  0032                     writeData@address:	
  7806  0032                     ___fldiv@b:	
  7807                           ; 1 bytes @ 0x12
  7808                           
  7809                           
  7810                           ; 4 bytes @ 0x12
  7811  0032                     	ds	1
  7812  0033                     writeData@status:	
  7813  0033                     LED_setColor@lo4:	
  7814                           ; 1 bytes @ 0x13
  7815                           
  7816                           
  7817                           ; 2 bytes @ 0x13
  7818  0033                     	ds	1
  7819  0034                     ??_TM1650_enable:	
  7820  0034                     ?_TM1650_setDigit:	
  7821                           ; 1 bytes @ 0x14
  7822                           
  7823  0034                     TM1650_setDigit@data:	
  7824                           ; 1 bytes @ 0x14
  7825                           
  7826  0034                     TM1650_enable@enable:	
  7827                           ; 1 bytes @ 0x14
  7828                           
  7829                           
  7830                           ; 1 bytes @ 0x14
  7831  0034                     	ds	1
  7832  0035                     ??_TM1650_init:	
  7833  0035                     LED_setColor@red:	
  7834                           ; 1 bytes @ 0x15
  7835                           
  7836  0035                     TM1650_setDigit@dp:	
  7837                           ; 1 bytes @ 0x15
  7838                           
  7839                           
  7840                           ; 2 bytes @ 0x15
  7841  0035                     	ds	1
  7842  0036                     ??_LED_DMX:	
  7843  0036                     ??___fldiv:	
  7844                           ; 1 bytes @ 0x16
  7845                           
  7846                           
  7847                           ; 1 bytes @ 0x16
  7848  0036                     	ds	1
  7849  0037                     ??_TM1650_setDigit:	
  7850                           
  7851                           ; 1 bytes @ 0x17
  7852  0037                     	ds	2
  7853  0039                     ___fladd@signs:	
  7854                           
  7855                           ; 1 bytes @ 0x19
  7856  0039                     	ds	1
  7857  003A                     TM1650_setDigit@digit:	
  7858  003A                     ___fladd@aexp:	
  7859                           ; 1 bytes @ 0x1A
  7860                           
  7861                           
  7862                           ; 1 bytes @ 0x1A
  7863  003A                     	ds	1
  7864  003B                     ?_TM1650_fastPrintNum:	
  7865  003B                     ___fladd@bexp:	
  7866                           ; 1 bytes @ 0x1B
  7867                           
  7868  003B                     TM1650_fastPrintNum@num:	
  7869                           ; 1 bytes @ 0x1B
  7870                           
  7871  003B                     ___fldiv@rem:	
  7872                           ; 2 bytes @ 0x1B
  7873                           
  7874                           
  7875                           ; 4 bytes @ 0x1B
  7876  003B                     	ds	1
  7877  003C                     ___fladd@grs:	
  7878                           
  7879                           ; 1 bytes @ 0x1C
  7880  003C                     	ds	1
  7881  003D                     ??_TM1650_fastPrintNum:	
  7882  003D                     ?___flmul:	
  7883                           ; 1 bytes @ 0x1D
  7884                           
  7885  003D                     ___flmul@b:	
  7886                           ; 4 bytes @ 0x1D
  7887                           
  7888                           
  7889                           ; 4 bytes @ 0x1D
  7890  003D                     	ds	1
  7891  003E                     TM1650_fastPrintNum@numWrite:	
  7892                           
  7893                           ; 2 bytes @ 0x1E
  7894  003E                     	ds	1
  7895  003F                     ___fldiv@sign:	
  7896                           
  7897                           ; 1 bytes @ 0x1F
  7898  003F                     	ds	1
  7899  0040                     TM1650_fastPrintNum@i:	
  7900  0040                     ___fldiv@new_exp:	
  7901                           ; 2 bytes @ 0x20
  7902                           
  7903                           
  7904                           ; 2 bytes @ 0x20
  7905  0040                     	ds	1
  7906  0041                     ___flmul@a:	
  7907                           
  7908                           ; 4 bytes @ 0x21
  7909  0041                     	ds	1
  7910  0042                     ?_increment:	
  7911  0042                     ?_decrement:	
  7912                           ; 1 bytes @ 0x22
  7913                           
  7914  0042                     increment@val:	
  7915                           ; 1 bytes @ 0x22
  7916                           
  7917  0042                     decrement@val:	
  7918                           ; 2 bytes @ 0x22
  7919                           
  7920  0042                     ___fldiv@grs:	
  7921                           ; 2 bytes @ 0x22
  7922                           
  7923                           
  7924                           ; 4 bytes @ 0x22
  7925  0042                     	ds	2
  7926  0044                     increment@max:	
  7927  0044                     decrement@max:	
  7928                           ; 2 bytes @ 0x24
  7929                           
  7930                           
  7931                           ; 2 bytes @ 0x24
  7932  0044                     	ds	1
  7933  0045                     ??___flmul:	
  7934                           
  7935                           ; 1 bytes @ 0x25
  7936  0045                     	ds	1
  7937  0046                     ___fldiv@bexp:	
  7938  0046                     increment@min:	
  7939                           ; 1 bytes @ 0x26
  7940                           
  7941  0046                     decrement@min:	
  7942                           ; 2 bytes @ 0x26
  7943                           
  7944                           
  7945                           ; 2 bytes @ 0x26
  7946  0046                     	ds	1
  7947  0047                     ___fldiv@aexp:	
  7948                           
  7949                           ; 1 bytes @ 0x27
  7950  0047                     	ds	1
  7951  0048                     ??_increment:	
  7952  0048                     ??_decrement:	
  7953                           ; 1 bytes @ 0x28
  7954                           
  7955                           
  7956                           ; 1 bytes @ 0x28
  7957  0048                     	ds	2
  7958  004A                     ?_numControl_Set:	
  7959  004A                     ___flmul@sign:	
  7960                           ; 1 bytes @ 0x2A
  7961                           
  7962  004A                     numControl_Set@val:	
  7963                           ; 1 bytes @ 0x2A
  7964                           
  7965                           
  7966                           ; 2 bytes @ 0x2A
  7967  004A                     	ds	1
  7968  004B                     ___flmul@aexp:	
  7969                           
  7970                           ; 1 bytes @ 0x2B
  7971  004B                     	ds	1
  7972  004C                     numControl_Set@max:	
  7973  004C                     ___flmul@grs:	
  7974                           ; 2 bytes @ 0x2C
  7975                           
  7976                           
  7977                           ; 4 bytes @ 0x2C
  7978  004C                     	ds	2
  7979  004E                     numControl_Set@min:	
  7980                           
  7981                           ; 2 bytes @ 0x2E
  7982  004E                     	ds	2
  7983  0050                     ??_numControl_Set:	
  7984  0050                     ___flmul@bexp:	
  7985                           ; 1 bytes @ 0x30
  7986                           
  7987                           
  7988                           ; 1 bytes @ 0x30
  7989  0050                     	ds	1
  7990  0051                     ___flmul@prod:	
  7991                           
  7992                           ; 4 bytes @ 0x31
  7993  0051                     	ds	1
  7994  0052                     numControl_Set@time:	
  7995                           
  7996                           ; 2 bytes @ 0x32
  7997  0052                     	ds	3
  7998  0055                     ___flmul@temp:	
  7999                           
  8000                           ; 2 bytes @ 0x35
  8001  0055                     	ds	2
  8002  0057                     ?___flge:	
  8003  0057                     ?___flsub:	
  8004                           ; 1 bit 
  8005                           
  8006  0057                     ___flge@ff1:	
  8007                           ; 4 bytes @ 0x37
  8008                           
  8009  0057                     ___flsub@a:	
  8010                           ; 4 bytes @ 0x37
  8011                           
  8012                           
  8013                           ; 4 bytes @ 0x37
  8014  0057                     	ds	4
  8015  005B                     ___flge@ff2:	
  8016  005B                     ___flsub@b:	
  8017                           ; 4 bytes @ 0x3B
  8018                           
  8019                           
  8020                           ; 4 bytes @ 0x3B
  8021  005B                     	ds	4
  8022  005F                     ??___flge:	
  8023  005F                     ??___flsub:	
  8024                           ; 1 bytes @ 0x3F
  8025                           
  8026                           
  8027                           ; 1 bytes @ 0x3F
  8028  005F                     	ds	4
  8029  0063                     ?_HueToRGB:	
  8030  0063                     HueToRGB@v1:	
  8031                           ; 4 bytes @ 0x43
  8032                           
  8033                           
  8034                           ; 4 bytes @ 0x43
  8035  0063                     	ds	4
  8036  0067                     HueToRGB@v2:	
  8037                           
  8038                           ; 4 bytes @ 0x47
  8039  0067                     	ds	4
  8040  006B                     HueToRGB@vH:	
  8041                           
  8042                           ; 4 bytes @ 0x4B
  8043  006B                     	ds	4
  8044  006F                     ??_HueToRGB:	
  8045  006F                     ??_LED_Beat:	
  8046                           ; 1 bytes @ 0x4F
  8047                           
  8048  006F                     ??_pulseColors:	
  8049                           ; 1 bytes @ 0x4F
  8050                           
  8051                           
  8052                           ; 1 bytes @ 0x4F
  8053  006F                     	ds	1
  8054                           
  8055                           	psect	maintext
  8056  124C                     __pmaintext:	
  8057 ;;
  8058 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8059 ;;
  8060 ;; *************** function _main *****************
  8061 ;; Defined at:
  8062 ;;		line 16 in file "main.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      void 
  8069 ;; Registers used:
  8070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : B3F/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8078 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8079 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8080 ;;Total ram usage:        2 bytes
  8081 ;; Hardware stack levels required when called:   14
  8082 ;; This function calls:
  8083 ;;		_BEAT_init
  8084 ;;		_BUTTONS_init
  8085 ;;		_BUTTONS_task
  8086 ;;		_CLOCK_init
  8087 ;;		_DMX_task
  8088 ;;		_EUSART1_SetRxInterruptHandler
  8089 ;;		_MENU_task
  8090 ;;		_SYSTEM_Initialize
  8091 ;;		_TM1650_init
  8092 ;;		_initLED
  8093 ;; This function is called by:
  8094 ;;		Startup code after reset
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           
  8099                           ;psect for function _main
  8100  124C                     _main:	
  8101                           
  8102                           ;main.c: 18:     SYSTEM_Initialize();
  8103                           
  8104                           ;incstack = 0
  8105                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8106  124C  319F  2731  3192   	fcall	_SYSTEM_Initialize
  8107                           
  8108                           ;main.c: 19:     CLOCK_init();
  8109  124F  319E  2627  3192   	fcall	_CLOCK_init
  8110                           
  8111                           ;main.c: 20:     TRISB6 = 0;
  8112  1252  0140               	movlb	0	; select bank0
  8113  1253  1313               	bcf	19,6	;volatile
  8114                           
  8115                           ;main.c: 21:     LATB6 = 0;
  8116  1254  1319               	bcf	25,6	;volatile
  8117                           
  8118                           ;main.c: 22:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  8119  1255  30C4               	movlw	low _DMX_ISR
  8120  1256  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8121  1257  3010               	movlw	high _DMX_ISR
  8122  1258  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8123  1259  319E  2680  3192   	fcall	_EUSART1_SetRxInterruptHandler
  8124                           
  8125                           ;main.c: 28:     (INTCONbits.GIE = 1);
  8126  125C  178B               	bsf	11,7	;volatile
  8127                           
  8128                           ;main.c: 31:     (INTCONbits.PEIE = 1);
  8129  125D  170B               	bsf	11,6	;volatile
  8130                           
  8131                           ;main.c: 38:      _delay((unsigned long)((500)*(32000000/4000.0)));
  8132  125E  3015               	movlw	21
  8133  125F  0143               	movlb	3	; select bank3
  8134  1260  00E5               	movwf	(??_main^(0+384)+1)
  8135  1261  304B               	movlw	75
  8136  1262  00E4               	movwf	??_main^(0+384)
  8137  1263  30BE               	movlw	190
  8138  1264                     u6607:	
  8139  1264  0B89               	decfsz	9,f
  8140  1265  2A64               	goto	u6607
  8141  1266  0BE4               	decfsz	??_main^(0+384),f
  8142  1267  2A64               	goto	u6607
  8143  1268  0BE5               	decfsz	(??_main^(0+384)+1),f
  8144  1269  2A64               	goto	u6607
  8145  126A  0000               	nop
  8146                           
  8147                           ;main.c: 39:     TM1650_init();
  8148  126B  3190  2000  3192   	fcall	_TM1650_init
  8149                           
  8150                           ;main.c: 40:     BUTTONS_init();
  8151  126E  3194  2402  3192   	fcall	_BUTTONS_init
  8152                           
  8153                           ;main.c: 41:     initLED();
  8154  1271  3191  210E  3192   	fcall	_initLED
  8155                           
  8156                           ;main.c: 42:     BEAT_init();
  8157  1274  319F  2746  3192   	fcall	_BEAT_init
  8158  1277                     l6261:	
  8159                           
  8160                           ;main.c: 46:         MENU_task();
  8161  1277  3197  274C  3192   	fcall	_MENU_task
  8162                           
  8163                           ;main.c: 47:         DMX_task();
  8164  127A  3192  22B7  3192   	fcall	_DMX_task
  8165                           
  8166                           ;main.c: 48:         BUTTONS_task();
  8167  127D  3189  2130  3192   	fcall	_BUTTONS_task
  8168  1280  2A77               	goto	l6261
  8169  1281                     __end_of_main:	
  8170                           
  8171                           	psect	text1
  8172  110E                     __ptext1:	
  8173 ;; *************** function _initLED *****************
  8174 ;; Defined at:
  8175 ;;		line 14 in file "led.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;		None
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2, status,0
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8193 ;;Total ram usage:        0 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    4
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		_main
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           
  8204                           ;psect for function _initLED
  8205  110E                     _initLED:	
  8206                           
  8207                           ;led.c: 17:     TRISC7 = 0;
  8208                           
  8209                           ;incstack = 0
  8210                           ; Regs used in _initLED: [wreg+status,2+status,0]
  8211  110E  0140               	movlb	0	; select bank0
  8212  110F  1394               	bcf	20,7	;volatile
  8213                           
  8214                           ;led.c: 18:     TRISC6 = 0;
  8215  1110  1314               	bcf	20,6	;volatile
  8216                           
  8217                           ;led.c: 19:     TRISC4 = 0;
  8218  1111  1214               	bcf	20,4	;volatile
  8219                           
  8220                           ;led.c: 20:     TRISC3 = 0;
  8221  1112  1194               	bcf	20,3	;volatile
  8222                           
  8223                           ;led.c: 22:     T2CLKCON = 0x01;
  8224  1113  3001               	movlw	1
  8225  1114  0145               	movlb	5	; select bank5
  8226  1115  0090               	movwf	16	;volatile
  8227                           
  8228                           ;led.c: 23:     T2CONbits.ON = 1;
  8229  1116  178E               	bsf	14,7	;volatile
  8230                           
  8231                           ;led.c: 25:     CCP1CONbits.CCP1EN = 1;
  8232  1117  0146               	movlb	6	; select bank6
  8233  1118  178E               	bsf	14,7	;volatile
  8234                           
  8235                           ;led.c: 26:     CCP1CONbits.MODE = 0b1100;
  8236  1119  080E               	movf	14,w	;volatile
  8237  111A  39F0               	andlw	-16
  8238  111B  380C               	iorlw	12
  8239  111C  008E               	movwf	14	;volatile
  8240                           
  8241                           ;led.c: 27:     CCP2CONbits.CCP2EN = 1;
  8242  111D  1792               	bsf	18,7	;volatile
  8243                           
  8244                           ;led.c: 28:     CCP2CONbits.MODE = 0b1100;
  8245  111E  0812               	movf	18,w	;volatile
  8246  111F  39F0               	andlw	-16
  8247  1120  380C               	iorlw	12
  8248  1121  0092               	movwf	18	;volatile
  8249                           
  8250                           ;led.c: 29:     CCP3CONbits.CCP3EN = 1;
  8251  1122  1796               	bsf	22,7	;volatile
  8252                           
  8253                           ;led.c: 30:     CCP3CONbits.MODE = 0b1100;
  8254  1123  0816               	movf	22,w	;volatile
  8255  1124  39F0               	andlw	-16
  8256  1125  380C               	iorlw	12
  8257  1126  0096               	movwf	22	;volatile
  8258                           
  8259                           ;led.c: 31:     CCP4CONbits.CCP4EN = 1;
  8260  1127  179A               	bsf	26,7	;volatile
  8261                           
  8262                           ;led.c: 32:     CCP4CONbits.MODE = 0b1100;
  8263  1128  081A               	movf	26,w	;volatile
  8264  1129  39F0               	andlw	-16
  8265  112A  380C               	iorlw	12
  8266  112B  009A               	movwf	26	;volatile
  8267                           
  8268                           ;led.c: 35:     RC7PPS = 0x09;
  8269  112C  3009               	movlw	9
  8270  112D  017E               	movlb	62	; select bank62
  8271  112E  00A7               	movwf	39	;volatile
  8272                           
  8273                           ;led.c: 36:     RC6PPS = 0x0A;
  8274  112F  300A               	movlw	10
  8275  1130  00A6               	movwf	38	;volatile
  8276                           
  8277                           ;led.c: 37:     RC4PPS = 0x0B;
  8278  1131  300B               	movlw	11
  8279  1132  00A4               	movwf	36	;volatile
  8280                           
  8281                           ;led.c: 38:     RC3PPS = 0x0C;
  8282  1133  300C               	movlw	12
  8283  1134  00A3               	movwf	35	;volatile
  8284  1135  0008               	return
  8285  1136                     __end_of_initLED:	
  8286                           
  8287                           	psect	text2
  8288  1000                     __ptext2:	
  8289 ;; *************** function _TM1650_init *****************
  8290 ;; Defined at:
  8291 ;;		line 28 in file "tm1650.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;		None
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8309 ;;Total ram usage:        0 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    9
  8312 ;; This function calls:
  8313 ;;		_TM1650_enable
  8314 ;; This function is called by:
  8315 ;;		_main
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           
  8320                           ;psect for function _TM1650_init
  8321  1000                     _TM1650_init:	
  8322                           
  8323                           ;tm1650.c: 29:     TM1650_enable(1);
  8324                           
  8325                           ;incstack = 0
  8326                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8327  1000  3001               	movlw	1
  8328  1001  319F  271C         	fcall	_TM1650_enable
  8329  1003  0008               	return
  8330  1004                     __end_of_TM1650_init:	
  8331                           
  8332                           	psect	text3
  8333  1F31                     __ptext3:	
  8334 ;; *************** function _SYSTEM_Initialize *****************
  8335 ;; Defined at:
  8336 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;		None
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      void 
  8343 ;; Registers used:
  8344 ;;		wreg, status,2, status,0, pclath, cstack
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8354 ;;Total ram usage:        0 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; Hardware stack levels required when called:    6
  8357 ;; This function calls:
  8358 ;;		_ADCC_Initialize
  8359 ;;		_EUSART1_Initialize
  8360 ;;		_I2C1_Initialize
  8361 ;;		_OSCILLATOR_Initialize
  8362 ;;		_PIN_MANAGER_Initialize
  8363 ;;		_PMD_Initialize
  8364 ;;		_TMR0_Initialize
  8365 ;; This function is called by:
  8366 ;;		_main
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           
  8371                           ;psect for function _SYSTEM_Initialize
  8372  1F31                     _SYSTEM_Initialize:	
  8373                           
  8374                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8375                           
  8376                           ;incstack = 0
  8377                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8378  1F31  319E  269B  319F   	fcall	_PMD_Initialize
  8379                           
  8380                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8381  1F34  3191  218D  319F   	fcall	_PIN_MANAGER_Initialize
  8382                           
  8383                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8384  1F37  319E  2692  319F   	fcall	_OSCILLATOR_Initialize
  8385                           
  8386                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  8387  1F3A  319F  27C7  319F   	fcall	_I2C1_Initialize
  8388                           
  8389                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8390  1F3D  3190  20E8  319F   	fcall	_ADCC_Initialize
  8391                           
  8392                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  8393  1F40  319E  26F4  319F   	fcall	_TMR0_Initialize
  8394                           
  8395                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  8396  1F43  3193  232A         	fcall	_EUSART1_Initialize
  8397  1F45  0008               	return
  8398  1F46                     __end_of_SYSTEM_Initialize:	
  8399                           
  8400                           	psect	text4
  8401  1EF4                     __ptext4:	
  8402 ;; *************** function _TMR0_Initialize *****************
  8403 ;; Defined at:
  8404 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;		None
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;		None
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  1    wreg      void 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0, pclath, cstack
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8422 ;;Total ram usage:        0 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; Hardware stack levels required when called:    5
  8425 ;; This function calls:
  8426 ;;		_TMR0_SetInterruptHandler
  8427 ;; This function is called by:
  8428 ;;		_SYSTEM_Initialize
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           
  8433                           ;psect for function _TMR0_Initialize
  8434  1EF4                     _TMR0_Initialize:	
  8435                           
  8436                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  8437                           
  8438                           ;incstack = 0
  8439                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8440  1EF4  3045               	movlw	69
  8441  1EF5  014B               	movlb	11	; select bank11
  8442  1EF6  009F               	movwf	31	;volatile
  8443                           
  8444                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8445  1EF7  30F9               	movlw	249
  8446  1EF8  009D               	movwf	29	;volatile
  8447                           
  8448                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8449  1EF9  019C               	clrf	28	;volatile
  8450                           
  8451                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8452  1EFA  014E               	movlb	14	; select bank14
  8453  1EFB  128C               	bcf	12,5	;volatile
  8454                           
  8455                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8456  1EFC  1696               	bsf	22,5	;volatile
  8457                           
  8458                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8459  1EFD  3001               	movlw	low _TMR0_DefaultInterruptHandler
  8460  1EFE  0140               	movlb	0	; select bank0
  8461  1EFF  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8462  1F00  3008               	movlw	high _TMR0_DefaultInterruptHandler
  8463  1F01  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8464  1F02  319E  2653         	fcall	_TMR0_SetInterruptHandler
  8465                           
  8466                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8467  1F04  3080               	movlw	128
  8468  1F05  014B               	movlb	11	; select bank11
  8469  1F06  009E               	movwf	30	;volatile
  8470  1F07  0008               	return
  8471  1F08                     __end_of_TMR0_Initialize:	
  8472                           
  8473                           	psect	text5
  8474  1E9B                     __ptext5:	
  8475 ;; *************** function _PMD_Initialize *****************
  8476 ;; Defined at:
  8477 ;;		line 75 in file "mcc_generated_files/mcc.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;		None
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;		None
  8482 ;; Return value:  Size  Location     Type
  8483 ;;                  1    wreg      void 
  8484 ;; Registers used:
  8485 ;;		status,2
  8486 ;; Tracked objects:
  8487 ;;		On entry : 0/0
  8488 ;;		On exit  : 0/0
  8489 ;;		Unchanged: 0/0
  8490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8495 ;;Total ram usage:        0 bytes
  8496 ;; Hardware stack levels used:    1
  8497 ;; Hardware stack levels required when called:    4
  8498 ;; This function calls:
  8499 ;;		Nothing
  8500 ;; This function is called by:
  8501 ;;		_SYSTEM_Initialize
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           
  8506                           ;psect for function _PMD_Initialize
  8507  1E9B                     _PMD_Initialize:	
  8508                           
  8509                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  8510                           
  8511                           ;incstack = 0
  8512                           ; Regs used in _PMD_Initialize: [status,2]
  8513  1E9B  014F               	movlb	15	; select bank15
  8514  1E9C  0196               	clrf	22	;volatile
  8515                           
  8516                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  8517  1E9D  0197               	clrf	23	;volatile
  8518                           
  8519                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  8520  1E9E  0198               	clrf	24	;volatile
  8521                           
  8522                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  8523  1E9F  0199               	clrf	25	;volatile
  8524                           
  8525                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  8526  1EA0  019A               	clrf	26	;volatile
  8527                           
  8528                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  8529  1EA1  019B               	clrf	27	;volatile
  8530                           
  8531                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  8532  1EA2  019C               	clrf	28	;volatile
  8533                           
  8534                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  8535  1EA3  019D               	clrf	29	;volatile
  8536  1EA4  0008               	return
  8537  1EA5                     __end_of_PMD_Initialize:	
  8538                           
  8539                           	psect	text6
  8540  118D                     __ptext6:	
  8541 ;; *************** function _PIN_MANAGER_Initialize *****************
  8542 ;; Defined at:
  8543 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8544 ;; Parameters:    Size  Location     Type
  8545 ;;		None
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;		None
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  1    wreg      void 
  8550 ;; Registers used:
  8551 ;;		wreg, status,2
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8561 ;;Total ram usage:        0 bytes
  8562 ;; Hardware stack levels used:    1
  8563 ;; Hardware stack levels required when called:    4
  8564 ;; This function calls:
  8565 ;;		Nothing
  8566 ;; This function is called by:
  8567 ;;		_SYSTEM_Initialize
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function _PIN_MANAGER_Initialize
  8573  118D                     _PIN_MANAGER_Initialize:	
  8574                           
  8575                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8576                           
  8577                           ;incstack = 0
  8578                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8579  118D  0140               	movlb	0	; select bank0
  8580  118E  0198               	clrf	24	;volatile
  8581                           
  8582                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8583  118F  0199               	clrf	25	;volatile
  8584                           
  8585                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8586  1190  019A               	clrf	26	;volatile
  8587                           
  8588                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8589  1191  303F               	movlw	63
  8590  1192  0092               	movwf	18	;volatile
  8591                           
  8592                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  8593  1193  30F0               	movlw	240
  8594  1194  0093               	movwf	19	;volatile
  8595                           
  8596                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8597  1195  30FF               	movlw	255
  8598  1196  0094               	movwf	20	;volatile
  8599                           
  8600                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8601  1197  30F8               	movlw	248
  8602  1198  017E               	movlb	62	; select bank62
  8603  1199  00CE               	movwf	78	;volatile
  8604                           
  8605                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8606  119A  30E0               	movlw	224
  8607  119B  00C3               	movwf	67	;volatile
  8608                           
  8609                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8610  119C  3003               	movlw	3
  8611  119D  00B8               	movwf	56	;volatile
  8612                           
  8613                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8614  119E  01C4               	clrf	68	;volatile
  8615                           
  8616                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8617  119F  3004               	movlw	4
  8618  11A0  00B9               	movwf	57	;volatile
  8619                           
  8620                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8621  11A1  3007               	movlw	7
  8622  11A2  00CF               	movwf	79	;volatile
  8623                           
  8624                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8625  11A3  01BA               	clrf	58	;volatile
  8626                           
  8627                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8628  11A4  01C5               	clrf	69	;volatile
  8629                           
  8630                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8631  11A5  01D0               	clrf	80	;volatile
  8632                           
  8633                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8634  11A6  3037               	movlw	55
  8635  11A7  00BB               	movwf	59	;volatile
  8636                           
  8637                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8638  11A8  30F0               	movlw	240
  8639  11A9  00C6               	movwf	70	;volatile
  8640                           
  8641                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8642  11AA  30FF               	movlw	255
  8643  11AB  00D1               	movwf	81	;volatile
  8644                           
  8645                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8646  11AC  3005               	movlw	5
  8647  11AD  017D               	movlb	61	; select bank61
  8648  11AE  00C5               	movwf	69	;volatile
  8649                           
  8650                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8651  11AF  3014               	movlw	20
  8652  11B0  017E               	movlb	62	; select bank62
  8653  11B1  0094               	movwf	20	;volatile
  8654                           
  8655                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  8656  11B2  3013               	movlw	19
  8657  11B3  0095               	movwf	21	;volatile
  8658                           
  8659                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  8660  11B4  3004               	movlw	4
  8661  11B5  017D               	movlb	61	; select bank61
  8662  11B6  00C6               	movwf	70	;volatile
  8663                           
  8664                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  8665  11B7  300C               	movlw	12
  8666  11B8  00CB               	movwf	75	;volatile
  8667  11B9  0008               	return
  8668  11BA                     __end_of_PIN_MANAGER_Initialize:	
  8669                           
  8670                           	psect	text7
  8671  1E92                     __ptext7:	
  8672 ;; *************** function _OSCILLATOR_Initialize *****************
  8673 ;; Defined at:
  8674 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;		None
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  1    wreg      void 
  8681 ;; Registers used:
  8682 ;;		wreg, status,2
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8692 ;;Total ram usage:        0 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    4
  8695 ;; This function calls:
  8696 ;;		Nothing
  8697 ;; This function is called by:
  8698 ;;		_SYSTEM_Initialize
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           
  8703                           ;psect for function _OSCILLATOR_Initialize
  8704  1E92                     _OSCILLATOR_Initialize:	
  8705                           
  8706                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8707                           
  8708                           ;incstack = 0
  8709                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8710  1E92  3060               	movlw	96
  8711  1E93  0151               	movlb	17	; select bank17
  8712  1E94  008D               	movwf	13	;volatile
  8713                           
  8714                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8715  1E95  018F               	clrf	15	;volatile
  8716                           
  8717                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8718  1E96  0191               	clrf	17	;volatile
  8719                           
  8720                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8721  1E97  3006               	movlw	6
  8722  1E98  0093               	movwf	19	;volatile
  8723                           
  8724                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  8725  1E99  0192               	clrf	18	;volatile
  8726  1E9A  0008               	return
  8727  1E9B                     __end_of_OSCILLATOR_Initialize:	
  8728                           
  8729                           	psect	text8
  8730  1FC7                     __ptext8:	
  8731 ;; *************** function _I2C1_Initialize *****************
  8732 ;; Defined at:
  8733 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;		None
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;		None
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  1    wreg      void 
  8740 ;; Registers used:
  8741 ;;		wreg, status,2
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8750 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8751 ;;Total ram usage:        1 bytes
  8752 ;; Hardware stack levels used:    1
  8753 ;; Hardware stack levels required when called:    4
  8754 ;; This function calls:
  8755 ;;		Nothing
  8756 ;; This function is called by:
  8757 ;;		_SYSTEM_Initialize
  8758 ;; This function uses a non-reentrant model
  8759 ;;
  8760                           
  8761                           
  8762                           ;psect for function _I2C1_Initialize
  8763  1FC7                     _I2C1_Initialize:	
  8764                           
  8765                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8766                           
  8767                           ;incstack = 0
  8768                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8769  1FC7  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8770  1FC8  0140               	movlb	0	; select bank0
  8771  1FC9  00A0               	movwf	??_I2C1_Initialize
  8772  1FCA  0820               	movf	??_I2C1_Initialize,w
  8773  1FCB  0142               	movlb	2	; select bank2
  8774  1FCC  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
  8775                           
  8776                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8777  1FCD  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8778  1FCE  0140               	movlb	0	; select bank0
  8779  1FCF  00A0               	movwf	??_I2C1_Initialize
  8780  1FD0  0820               	movf	??_I2C1_Initialize,w
  8781  1FD1  0142               	movlb	2	; select bank2
  8782  1FD2  00A0               	movwf	_i2c1_object^(0+256)
  8783                           
  8784                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8785  1FD3  14A2               	bsf	(_i2c1_object^(0+256)+2),1
  8786                           
  8787                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8788  1FD4  1022               	bcf	(_i2c1_object^(0+256)+2),0
  8789                           
  8790                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8791  1FD5  01A4               	clrf	(_i2c1_object^(0+256)+4)
  8792                           
  8793                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8794  1FD6  0143               	movlb	3	; select bank3
  8795  1FD7  018F               	clrf	15	;volatile
  8796                           
  8797                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8798  1FD8  3028               	movlw	40
  8799  1FD9  0090               	movwf	16	;volatile
  8800                           
  8801                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8802  1FDA  0192               	clrf	18	;volatile
  8803                           
  8804                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  8805  1FDB  3050               	movlw	80
  8806  1FDC  008D               	movwf	13	;volatile
  8807                           
  8808                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8809  1FDD  014E               	movlb	14	; select bank14
  8810  1FDE  100F               	bcf	15,0	;volatile
  8811                           
  8812                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8813  1FDF  108F               	bcf	15,1	;volatile
  8814                           
  8815                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8816  1FE0  1419               	bsf	25,0	;volatile
  8817                           
  8818                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8819  1FE1  1499               	bsf	25,1	;volatile
  8820  1FE2  0008               	return
  8821  1FE3                     __end_of_I2C1_Initialize:	
  8822                           
  8823                           	psect	text9
  8824  132A                     __ptext9:	
  8825 ;; *************** function _EUSART1_Initialize *****************
  8826 ;; Defined at:
  8827 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0, pclath, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8843 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8844 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8845 ;;Total ram usage:        1 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    5
  8848 ;; This function calls:
  8849 ;;		_EUSART1_SetErrorHandler
  8850 ;;		_EUSART1_SetFramingErrorHandler
  8851 ;;		_EUSART1_SetOverrunErrorHandler
  8852 ;;		_EUSART1_SetRxInterruptHandler
  8853 ;;		_EUSART1_SetTxInterruptHandler
  8854 ;; This function is called by:
  8855 ;;		_SYSTEM_Initialize
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           
  8860                           ;psect for function _EUSART1_Initialize
  8861  132A                     _EUSART1_Initialize:	
  8862                           
  8863                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8864                           
  8865                           ;incstack = 0
  8866                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8867  132A  014E               	movlb	14	; select bank14
  8868  132B  1299               	bcf	25,5	;volatile
  8869                           
  8870                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8871  132C  3081               	movlw	low _EUSART1_Receive_ISR
  8872  132D  0140               	movlb	0	; select bank0
  8873  132E  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8874  132F  3012               	movlw	high _EUSART1_Receive_ISR
  8875  1330  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8876  1331  319E  2680  3193   	fcall	_EUSART1_SetRxInterruptHandler
  8877                           
  8878                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8879  1334  014E               	movlb	14	; select bank14
  8880  1335  1219               	bcf	25,4	;volatile
  8881                           
  8882                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8883  1336  308F               	movlw	low _EUSART1_Transmit_ISR
  8884  1337  0140               	movlb	0	; select bank0
  8885  1338  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8886  1339  301F               	movlw	high _EUSART1_Transmit_ISR
  8887  133A  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8888  133B  319E  2689  3193   	fcall	_EUSART1_SetTxInterruptHandler
  8889                           
  8890                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8891  133E  3008               	movlw	8
  8892  133F  0142               	movlb	2	; select bank2
  8893  1340  009F               	movwf	31	;volatile
  8894                           
  8895                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8896  1341  3090               	movlw	144
  8897  1342  009D               	movwf	29	;volatile
  8898                           
  8899                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8900  1343  3004               	movlw	4
  8901  1344  009E               	movwf	30	;volatile
  8902                           
  8903                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8904  1345  301F               	movlw	31
  8905  1346  009B               	movwf	27	;volatile
  8906                           
  8907                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8908  1347  019C               	clrf	28	;volatile
  8909                           
  8910                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8911  1348  3000               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8912  1349  0140               	movlb	0	; select bank0
  8913  134A  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8914  134B  3008               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8915  134C  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8916  134D  319E  266E  3193   	fcall	_EUSART1_SetFramingErrorHandler
  8917                           
  8918                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8919  1350  3018               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8920  1351  0140               	movlb	0	; select bank0
  8921  1352  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8922  1353  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8923  1354  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8924  1355  319E  2677  3193   	fcall	_EUSART1_SetOverrunErrorHandler
  8925                           
  8926                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8927  1358  3008               	movlw	low _EUSART1_DefaultErrorHandler
  8928  1359  0140               	movlb	0	; select bank0
  8929  135A  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8930  135B  301E               	movlw	high _EUSART1_DefaultErrorHandler
  8931  135C  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8932  135D  319E  2665         	fcall	_EUSART1_SetErrorHandler
  8933                           
  8934                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8935  135F  0142               	movlb	2	; select bank2
  8936  1360  01D8               	clrf	_eusart1RxLastError^(0+256)	;volatile
  8937                           
  8938                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8939  1361  01F3               	clrf	_eusart1TxHead	;volatile
  8940                           
  8941                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8942  1362  01F2               	clrf	_eusart1TxTail	;volatile
  8943                           
  8944                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8945  1363  3008               	movlw	8
  8946  1364  0140               	movlb	0	; select bank0
  8947  1365  00A2               	movwf	??_EUSART1_Initialize
  8948  1366  0822               	movf	??_EUSART1_Initialize,w
  8949  1367  0142               	movlb	2	; select bank2
  8950  1368  00EF               	movwf	_eusart1TxBufferRemaining^(0+256)	;volatile
  8951                           
  8952                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8953  1369  01F1               	clrf	_eusart1RxHead	;volatile
  8954                           
  8955                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8956  136A  01F0               	clrf	_eusart1RxTail	;volatile
  8957                           
  8958                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8959  136B  0141               	movlb	1	; select bank1
  8960  136C  01ED               	clrf	_eusart1RxCount^(0+128)	;volatile
  8961                           
  8962                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8963  136D  014E               	movlb	14	; select bank14
  8964  136E  1699               	bsf	25,5	;volatile
  8965  136F  0008               	return
  8966  1370                     __end_of_EUSART1_Initialize:	
  8967                           
  8968                           	psect	text10
  8969  1E89                     __ptext10:	
  8970 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8971 ;; Defined at:
  8972 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8975 ;;		 -> EUSART1_Transmit_ISR(1), 
  8976 ;; Auto vars:     Size  Location     Type
  8977 ;;		None
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  1    wreg      void 
  8980 ;; Registers used:
  8981 ;;		wreg
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8990 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8991 ;;Total ram usage:        2 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    4
  8994 ;; This function calls:
  8995 ;;		Nothing
  8996 ;; This function is called by:
  8997 ;;		_EUSART1_Initialize
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           
  9002                           ;psect for function _EUSART1_SetTxInterruptHandler
  9003  1E89                     _EUSART1_SetTxInterruptHandler:	
  9004                           
  9005                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9006                           
  9007                           ;incstack = 0
  9008                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9009  1E89  0140               	movlb	0	; select bank0
  9010  1E8A  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9011  1E8B  0143               	movlb	3	; select bank3
  9012  1E8C  00E3               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384)
  9013  1E8D  0140               	movlb	0	; select bank0
  9014  1E8E  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9015  1E8F  0143               	movlb	3	; select bank3
  9016  1E90  00E2               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+384)
  9017  1E91  0008               	return
  9018  1E92                     __end_of_EUSART1_SetTxInterruptHandler:	
  9019                           
  9020                           	psect	text11
  9021  1E80                     __ptext11:	
  9022 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9023 ;; Defined at:
  9024 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9027 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9043 ;;Total ram usage:        2 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    4
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_EUSART1_Initialize
  9050 ;;		_main
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           
  9055                           ;psect for function _EUSART1_SetRxInterruptHandler
  9056  1E80                     _EUSART1_SetRxInterruptHandler:	
  9057                           
  9058                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9059                           
  9060                           ;incstack = 0
  9061                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9062  1E80  0140               	movlb	0	; select bank0
  9063  1E81  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9064  1E82  0143               	movlb	3	; select bank3
  9065  1E83  00E1               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
  9066  1E84  0140               	movlb	0	; select bank0
  9067  1E85  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9068  1E86  0143               	movlb	3	; select bank3
  9069  1E87  00E0               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
  9070  1E88  0008               	return
  9071  1E89                     __end_of_EUSART1_SetRxInterruptHandler:	
  9072                           
  9073                           	psect	text12
  9074  1E77                     __ptext12:	
  9075 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9076 ;; Defined at:
  9077 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9080 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9081 ;; Auto vars:     Size  Location     Type
  9082 ;;		None
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  1    wreg      void 
  9085 ;; Registers used:
  9086 ;;		wreg
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9095 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9096 ;;Total ram usage:        2 bytes
  9097 ;; Hardware stack levels used:    1
  9098 ;; Hardware stack levels required when called:    4
  9099 ;; This function calls:
  9100 ;;		Nothing
  9101 ;; This function is called by:
  9102 ;;		_EUSART1_Initialize
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           
  9107                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9108  1E77                     _EUSART1_SetOverrunErrorHandler:	
  9109                           
  9110                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  9111                           
  9112                           ;incstack = 0
  9113                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9114  1E77  0140               	movlb	0	; select bank0
  9115  1E78  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9116  1E79  0143               	movlb	3	; select bank3
  9117  1E7A  00DD               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
  9118  1E7B  0140               	movlb	0	; select bank0
  9119  1E7C  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9120  1E7D  0143               	movlb	3	; select bank3
  9121  1E7E  00DC               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
  9122  1E7F  0008               	return
  9123  1E80                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9124                           
  9125                           	psect	text13
  9126  1E6E                     __ptext13:	
  9127 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9128 ;; Defined at:
  9129 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9132 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9147 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9148 ;;Total ram usage:        2 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    4
  9151 ;; This function calls:
  9152 ;;		Nothing
  9153 ;; This function is called by:
  9154 ;;		_EUSART1_Initialize
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           
  9159                           ;psect for function _EUSART1_SetFramingErrorHandler
  9160  1E6E                     _EUSART1_SetFramingErrorHandler:	
  9161                           
  9162                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  9163                           
  9164                           ;incstack = 0
  9165                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9166  1E6E  0140               	movlb	0	; select bank0
  9167  1E6F  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9168  1E70  0143               	movlb	3	; select bank3
  9169  1E71  00DF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
  9170  1E72  0140               	movlb	0	; select bank0
  9171  1E73  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9172  1E74  0143               	movlb	3	; select bank3
  9173  1E75  00DE               	movwf	_EUSART1_FramingErrorHandler^(0+384)
  9174  1E76  0008               	return
  9175  1E77                     __end_of_EUSART1_SetFramingErrorHandler:	
  9176                           
  9177                           	psect	text14
  9178  1E65                     __ptext14:	
  9179 ;; *************** function _EUSART1_SetErrorHandler *****************
  9180 ;; Defined at:
  9181 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9184 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;		None
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9199 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9200 ;;Total ram usage:        2 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    4
  9203 ;; This function calls:
  9204 ;;		Nothing
  9205 ;; This function is called by:
  9206 ;;		_EUSART1_Initialize
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           
  9211                           ;psect for function _EUSART1_SetErrorHandler
  9212  1E65                     _EUSART1_SetErrorHandler:	
  9213                           
  9214                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  9215                           
  9216                           ;incstack = 0
  9217                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9218  1E65  0140               	movlb	0	; select bank0
  9219  1E66  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9220  1E67  0143               	movlb	3	; select bank3
  9221  1E68  00DB               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
  9222  1E69  0140               	movlb	0	; select bank0
  9223  1E6A  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9224  1E6B  0143               	movlb	3	; select bank3
  9225  1E6C  00DA               	movwf	_EUSART1_ErrorHandler^(0+384)
  9226  1E6D  0008               	return
  9227  1E6E                     __end_of_EUSART1_SetErrorHandler:	
  9228                           
  9229                           	psect	text15
  9230  10E8                     __ptext15:	
  9231 ;; *************** function _ADCC_Initialize *****************
  9232 ;; Defined at:
  9233 ;;		line 64 in file "mcc_generated_files/adcc.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;		None
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;		None
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      void 
  9240 ;; Registers used:
  9241 ;;		wreg, status,2, status,0, pclath, cstack
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9251 ;;Total ram usage:        0 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; Hardware stack levels required when called:    5
  9254 ;; This function calls:
  9255 ;;		_ADCC_SetADTIInterruptHandler
  9256 ;; This function is called by:
  9257 ;;		_SYSTEM_Initialize
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           
  9262                           ;psect for function _ADCC_Initialize
  9263  10E8                     _ADCC_Initialize:	
  9264                           
  9265                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  9266                           
  9267                           ;incstack = 0
  9268                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9269  10E8  0141               	movlb	1	; select bank1
  9270  10E9  018C               	clrf	12	;volatile
  9271                           
  9272                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  9273  10EA  018D               	clrf	13	;volatile
  9274                           
  9275                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  9276  10EB  018E               	clrf	14	;volatile
  9277                           
  9278                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  9279  10EC  018F               	clrf	15	;volatile
  9280                           
  9281                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  9282  10ED  0192               	clrf	18	;volatile
  9283                           
  9284                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  9285  10EE  0193               	clrf	19	;volatile
  9286                           
  9287                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  9288  10EF  0198               	clrf	24	;volatile
  9289                           
  9290                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  9291  10F0  019A               	clrf	26	;volatile
  9292                           
  9293                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  9294  10F1  019F               	clrf	31	;volatile
  9295                           
  9296                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  9297  10F2  0142               	movlb	2	; select bank2
  9298  10F3  018C               	clrf	12	;volatile
  9299                           
  9300                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  9301  10F4  018D               	clrf	13	;volatile
  9302                           
  9303                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  9304  10F5  018E               	clrf	14	;volatile
  9305                           
  9306                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  9307  10F6  018F               	clrf	15	;volatile
  9308                           
  9309                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  9310  10F7  0190               	clrf	16	;volatile
  9311                           
  9312                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  9313  10F8  0192               	clrf	18	;volatile
  9314                           
  9315                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  9316  10F9  3054               	movlw	84
  9317  10FA  0093               	movwf	19	;volatile
  9318                           
  9319                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  9320  10FB  3056               	movlw	86
  9321  10FC  0094               	movwf	20	;volatile
  9322                           
  9323                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  9324  10FD  0195               	clrf	21	;volatile
  9325                           
  9326                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  9327  10FE  0196               	clrf	22	;volatile
  9328                           
  9329                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  9330  10FF  0197               	clrf	23	;volatile
  9331                           
  9332                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  9333  1100  0198               	clrf	24	;volatile
  9334                           
  9335                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  9336  1101  30D4               	movlw	212
  9337  1102  0091               	movwf	17	;volatile
  9338                           
  9339                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  9340  1103  014E               	movlb	14	; select bank14
  9341  1104  108D               	bcf	13,1	;volatile
  9342                           
  9343                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  9344  1105  1497               	bsf	23,1	;volatile
  9345                           
  9346                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  9347  1106  3007               	movlw	low _ADCC_DefaultInterruptHandler
  9348  1107  0140               	movlb	0	; select bank0
  9349  1108  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  9350  1109  301E               	movlw	high _ADCC_DefaultInterruptHandler
  9351  110A  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  9352  110B  319E  262F         	fcall	_ADCC_SetADTIInterruptHandler
  9353  110D  0008               	return
  9354  110E                     __end_of_ADCC_Initialize:	
  9355                           
  9356                           	psect	text16
  9357  174C                     __ptext16:	
  9358 ;; *************** function _MENU_task *****************
  9359 ;; Defined at:
  9360 ;;		line 75 in file "menu.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;		None
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      void 
  9367 ;; Registers used:
  9368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9376 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9377 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9378 ;;Total ram usage:        1 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; Hardware stack levels required when called:   13
  9381 ;; This function calls:
  9382 ;;		_BEAT_task
  9383 ;;		_LED_Beat
  9384 ;;		_LED_DMX
  9385 ;;		_TM1650_enable
  9386 ;;		_TM1650_setDigit
  9387 ;;		_cycleColors
  9388 ;;		_isDMXOn
  9389 ;;		_menuButtons
  9390 ;;		_numControl_Set
  9391 ;;		_pulseColors
  9392 ;; This function is called by:
  9393 ;;		_main
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function _MENU_task
  9399  174C                     _MENU_task:	
  9400                           
  9401                           ;menu.c: 76:     if(isDMXOn()) {
  9402                           
  9403                           ;incstack = 0
  9404                           ; Regs used in _MENU_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9405  174C  319E  2611  3197   	fcall	_isDMXOn
  9406  174F  3A00               	xorlw	0
  9407  1750  1903               	skipnz
  9408  1751  2F65               	goto	l6119
  9409                           
  9410                           ;menu.c: 77:         LED_DMX();
  9411  1752  3193  23B9  3197   	fcall	_LED_DMX
  9412                           
  9413                           ;menu.c: 78:         numControl_Set(&address, 512, 1);
  9414  1755  30EE               	movlw	low _address
  9415  1756  0140               	movlb	0	; select bank0
  9416  1757  00CA               	movwf	numControl_Set@val
  9417  1758  3000               	movlw	high _address
  9418  1759  00CB               	movwf	numControl_Set@val+1
  9419  175A  3000               	movlw	0
  9420  175B  00CC               	movwf	numControl_Set@max
  9421  175C  3002               	movlw	2
  9422  175D  00CD               	movwf	numControl_Set@max+1
  9423  175E  3001               	movlw	1
  9424  175F  00CE               	movwf	numControl_Set@min
  9425  1760  3000               	movlw	0
  9426  1761  00CF               	movwf	numControl_Set@min+1
  9427  1762  3196  2628         	fcall	_numControl_Set
  9428                           
  9429                           ;menu.c: 79:     } else {
  9430  1764  0008               	return
  9431  1765                     l6119:	
  9432                           
  9433                           ;menu.c: 80:         menuButtons();
  9434  1765  3190  2004  3197   	fcall	_menuButtons
  9435                           
  9436                           ;menu.c: 81:         if(currentState == 0) {
  9437  1768  0142               	movlb	2	; select bank2
  9438  1769  0860               	movf	_currentState^(0+256),w
  9439  176A  0461               	iorwf	(_currentState+1)^(0+256),w
  9440  176B  1D03               	btfss	3,2
  9441  176C  2F77               	goto	l6129
  9442                           
  9443                           ;menu.c: 82:             TM1650_enable(0);
  9444  176D  3000               	movlw	0
  9445  176E  319F  271C  3197   	fcall	_TM1650_enable
  9446                           
  9447                           ;menu.c: 83:             LED_Beat();
  9448  1771  3188  2002  3197   	fcall	_LED_Beat
  9449                           
  9450                           ;menu.c: 84:             BEAT_task();
  9451  1774  318A  2202         	fcall	_BEAT_task
  9452                           
  9453                           ;menu.c: 85:         } else if(currentState == 1) {
  9454  1776  0008               	return
  9455  1777                     l6129:	
  9456  1777  0360               	decf	_currentState^(0+256),w
  9457  1778  0461               	iorwf	(_currentState+1)^(0+256),w
  9458  1779  1D03               	btfss	3,2
  9459  177A  2FBB               	goto	l6147
  9460                           
  9461                           ;menu.c: 86:             if(firstMsg) {
  9462  177B  0868               	movf	_firstMsg^(0+256),w
  9463  177C  1903               	btfsc	3,2
  9464  177D  2FB8               	goto	l6145
  9465                           
  9466                           ;menu.c: 87:                 TM1650_enable(1);
  9467  177E  3001               	movlw	1
  9468  177F  319F  271C  3197   	fcall	_TM1650_enable
  9469                           
  9470                           ;menu.c: 88:                 TM1650_setDigit(0, 'P', 0);
  9471  1782  3050               	movlw	80
  9472  1783  0141               	movlb	1	; select bank1
  9473  1784  00E8               	movwf	??_MENU_task^(0+128)
  9474  1785  0868               	movf	??_MENU_task^(0+128),w
  9475  1786  0140               	movlb	0	; select bank0
  9476  1787  00B4               	movwf	TM1650_setDigit@data
  9477  1788  3000               	movlw	0
  9478  1789  00B5               	movwf	TM1650_setDigit@dp
  9479  178A  00B6               	movwf	TM1650_setDigit@dp+1
  9480  178B  3000               	movlw	0
  9481  178C  319F  27AB  3197   	fcall	_TM1650_setDigit
  9482                           
  9483                           ;menu.c: 89:                 TM1650_setDigit(1, 'L', 0);
  9484  178F  304C               	movlw	76
  9485  1790  0141               	movlb	1	; select bank1
  9486  1791  00E8               	movwf	??_MENU_task^(0+128)
  9487  1792  0868               	movf	??_MENU_task^(0+128),w
  9488  1793  0140               	movlb	0	; select bank0
  9489  1794  00B4               	movwf	TM1650_setDigit@data
  9490  1795  3000               	movlw	0
  9491  1796  00B5               	movwf	TM1650_setDigit@dp
  9492  1797  00B6               	movwf	TM1650_setDigit@dp+1
  9493  1798  3001               	movlw	1
  9494  1799  319F  27AB  3197   	fcall	_TM1650_setDigit
  9495                           
  9496                           ;menu.c: 90:                 TM1650_setDigit(2, 'S', 0);
  9497  179C  3053               	movlw	83
  9498  179D  0141               	movlb	1	; select bank1
  9499  179E  00E8               	movwf	??_MENU_task^(0+128)
  9500  179F  0868               	movf	??_MENU_task^(0+128),w
  9501  17A0  0140               	movlb	0	; select bank0
  9502  17A1  00B4               	movwf	TM1650_setDigit@data
  9503  17A2  3000               	movlw	0
  9504  17A3  00B5               	movwf	TM1650_setDigit@dp
  9505  17A4  00B6               	movwf	TM1650_setDigit@dp+1
  9506  17A5  3002               	movlw	2
  9507  17A6  319F  27AB  3197   	fcall	_TM1650_setDigit
  9508                           
  9509                           ;menu.c: 91:                 TM1650_setDigit(3, 'E', 0);
  9510  17A9  3045               	movlw	69
  9511  17AA  0141               	movlb	1	; select bank1
  9512  17AB  00E8               	movwf	??_MENU_task^(0+128)
  9513  17AC  0868               	movf	??_MENU_task^(0+128),w
  9514  17AD  0140               	movlb	0	; select bank0
  9515  17AE  00B4               	movwf	TM1650_setDigit@data
  9516  17AF  3000               	movlw	0
  9517  17B0  00B5               	movwf	TM1650_setDigit@dp
  9518  17B1  00B6               	movwf	TM1650_setDigit@dp+1
  9519  17B2  3003               	movlw	3
  9520  17B3  319F  27AB  3197   	fcall	_TM1650_setDigit
  9521                           
  9522                           ;menu.c: 92:                 firstMsg = 0;
  9523  17B6  0142               	movlb	2	; select bank2
  9524  17B7  01E8               	clrf	_firstMsg^(0+256)
  9525  17B8                     l6145:	
  9526                           
  9527                           ;menu.c: 94:             pulseColors();
  9528  17B8  3188  2064         	fcall	_pulseColors
  9529                           
  9530                           ;menu.c: 95:         } else if (currentState == 2) {
  9531  17BA  0008               	return
  9532  17BB                     l6147:	
  9533  17BB  3002               	movlw	2
  9534  17BC  0660               	xorwf	_currentState^(0+256),w
  9535  17BD  0461               	iorwf	(_currentState+1)^(0+256),w
  9536  17BE  1D03               	btfss	3,2
  9537  17BF  0008               	return
  9538                           
  9539                           ;menu.c: 96:             if(firstMsg) {
  9540  17C0  0868               	movf	_firstMsg^(0+256),w
  9541  17C1  1903               	btfsc	3,2
  9542  17C2  2FFD               	goto	l6163
  9543                           
  9544                           ;menu.c: 97:                 TM1650_enable(1);
  9545  17C3  3001               	movlw	1
  9546  17C4  319F  271C  3197   	fcall	_TM1650_enable
  9547                           
  9548                           ;menu.c: 98:                 TM1650_setDigit(0, 'C', 0);
  9549  17C7  3043               	movlw	67
  9550  17C8  0141               	movlb	1	; select bank1
  9551  17C9  00E8               	movwf	??_MENU_task^(0+128)
  9552  17CA  0868               	movf	??_MENU_task^(0+128),w
  9553  17CB  0140               	movlb	0	; select bank0
  9554  17CC  00B4               	movwf	TM1650_setDigit@data
  9555  17CD  3000               	movlw	0
  9556  17CE  00B5               	movwf	TM1650_setDigit@dp
  9557  17CF  00B6               	movwf	TM1650_setDigit@dp+1
  9558  17D0  3000               	movlw	0
  9559  17D1  319F  27AB  3197   	fcall	_TM1650_setDigit
  9560                           
  9561                           ;menu.c: 99:                 TM1650_setDigit(1, 'Y', 0);
  9562  17D4  3059               	movlw	89
  9563  17D5  0141               	movlb	1	; select bank1
  9564  17D6  00E8               	movwf	??_MENU_task^(0+128)
  9565  17D7  0868               	movf	??_MENU_task^(0+128),w
  9566  17D8  0140               	movlb	0	; select bank0
  9567  17D9  00B4               	movwf	TM1650_setDigit@data
  9568  17DA  3000               	movlw	0
  9569  17DB  00B5               	movwf	TM1650_setDigit@dp
  9570  17DC  00B6               	movwf	TM1650_setDigit@dp+1
  9571  17DD  3001               	movlw	1
  9572  17DE  319F  27AB  3197   	fcall	_TM1650_setDigit
  9573                           
  9574                           ;menu.c: 100:                 TM1650_setDigit(2, 'C', 0);
  9575  17E1  3043               	movlw	67
  9576  17E2  0141               	movlb	1	; select bank1
  9577  17E3  00E8               	movwf	??_MENU_task^(0+128)
  9578  17E4  0868               	movf	??_MENU_task^(0+128),w
  9579  17E5  0140               	movlb	0	; select bank0
  9580  17E6  00B4               	movwf	TM1650_setDigit@data
  9581  17E7  3000               	movlw	0
  9582  17E8  00B5               	movwf	TM1650_setDigit@dp
  9583  17E9  00B6               	movwf	TM1650_setDigit@dp+1
  9584  17EA  3002               	movlw	2
  9585  17EB  319F  27AB  3197   	fcall	_TM1650_setDigit
  9586                           
  9587                           ;menu.c: 101:                 TM1650_setDigit(3, 'L', 0);
  9588  17EE  304C               	movlw	76
  9589  17EF  0141               	movlb	1	; select bank1
  9590  17F0  00E8               	movwf	??_MENU_task^(0+128)
  9591  17F1  0868               	movf	??_MENU_task^(0+128),w
  9592  17F2  0140               	movlb	0	; select bank0
  9593  17F3  00B4               	movwf	TM1650_setDigit@data
  9594  17F4  3000               	movlw	0
  9595  17F5  00B5               	movwf	TM1650_setDigit@dp
  9596  17F6  00B6               	movwf	TM1650_setDigit@dp+1
  9597  17F7  3003               	movlw	3
  9598  17F8  319F  27AB  3197   	fcall	_TM1650_setDigit
  9599                           
  9600                           ;menu.c: 102:                 firstMsg = 0;
  9601  17FB  0142               	movlb	2	; select bank2
  9602  17FC  01E8               	clrf	_firstMsg^(0+256)
  9603  17FD                     l6163:	
  9604                           
  9605                           ;menu.c: 104:             cycleColors();
  9606  17FD  3195  25A9         	fcall	_cycleColors
  9607  17FF  0008               	return
  9608  1800                     __end_of_MENU_task:	
  9609                           
  9610                           	psect	text17
  9611  0864                     __ptext17:	
  9612 ;; *************** function _pulseColors *****************
  9613 ;; Defined at:
  9614 ;;		line 53 in file "menu.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;		None
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;		None
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9630 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9631 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9632 ;;Total ram usage:        1 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; Hardware stack levels required when called:    8
  9635 ;; This function calls:
  9636 ;;		_LED_setHSL
  9637 ;;		___fldiv
  9638 ;;		___fleq
  9639 ;;		___flge
  9640 ;;		___flsub
  9641 ;; This function is called by:
  9642 ;;		_MENU_task
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           
  9647                           ;psect for function _pulseColors
  9648  0864                     _pulseColors:	
  9649                           
  9650                           ;menu.c: 54:     if(fadeTime == -400/10) {
  9651                           
  9652                           ;incstack = 0
  9653                           ; Regs used in _pulseColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9654  0864  0142               	movlb	2	; select bank2
  9655  0865  0828               	movf	(_fadeTime+3)^(0+256),w
  9656  0866  0140               	movlb	0	; select bank0
  9657  0867  00A3               	movwf	___fleq@ff1+3
  9658  0868  0142               	movlb	2	; select bank2
  9659  0869  0827               	movf	(_fadeTime+2)^(0+256),w
  9660  086A  0140               	movlb	0	; select bank0
  9661  086B  00A2               	movwf	___fleq@ff1+2
  9662  086C  0142               	movlb	2	; select bank2
  9663  086D  0826               	movf	(_fadeTime+1)^(0+256),w
  9664  086E  0140               	movlb	0	; select bank0
  9665  086F  00A1               	movwf	___fleq@ff1+1
  9666  0870  0142               	movlb	2	; select bank2
  9667  0871  0825               	movf	_fadeTime^(0+256),w
  9668  0872  0140               	movlb	0	; select bank0
  9669  0873  00A0               	movwf	___fleq@ff1
  9670  0874  30C2               	movlw	194
  9671  0875  00A7               	movwf	___fleq@ff2+3
  9672  0876  3020               	movlw	32
  9673  0877  00A6               	movwf	___fleq@ff2+2
  9674  0878  3000               	movlw	0
  9675  0879  00A5               	movwf	___fleq@ff2+1
  9676  087A  3000               	movlw	0
  9677  087B  00A4               	movwf	___fleq@ff2
  9678  087C  3193  2370  3188   	fcall	___fleq
  9679  087F  1C03               	btfss	3,0
  9680  0880  28A8               	goto	l6053
  9681                           
  9682                           ;menu.c: 56:         if(hueValPulse == 360) {
  9683  0881  3068               	movlw	104
  9684  0882  0142               	movlb	2	; select bank2
  9685  0883  062D               	xorwf	_hueValPulse^(0+256),w
  9686  0884  1D03               	skipz
  9687  0885  288C               	goto	l6051
  9688  0886  032E               	decf	(_hueValPulse+1)^(0+256),w
  9689  0887  1D03               	btfss	3,2
  9690  0888  288C               	goto	l6051
  9691                           
  9692                           ;menu.c: 57:             hueValPulse = 0;
  9693  0889  01AD               	clrf	_hueValPulse^(0+256)
  9694  088A  01AE               	clrf	(_hueValPulse+1)^(0+256)
  9695                           
  9696                           ;menu.c: 58:         } else {
  9697  088B  2890               	goto	l1072
  9698  088C                     l6051:	
  9699                           
  9700                           ;menu.c: 59:             hueValPulse += 36;
  9701  088C  3024               	movlw	36
  9702  088D  07AD               	addwf	_hueValPulse^(0+256),f
  9703  088E  3000               	movlw	0
  9704  088F  3DAE               	addwfc	(_hueValPulse+1)^(0+256),f
  9705  0890                     l1072:	
  9706                           ;menu.c: 60:         }
  9707                           
  9708                           
  9709                           ;menu.c: 61:         pulseColor.H = hueValPulse;
  9710  0890  082E               	movf	(_hueValPulse+1)^(0+256),w
  9711  0891  0143               	movlb	3	; select bank3
  9712  0892  00C7               	movwf	(_pulseColor+1)^(0+384)
  9713  0893  0142               	movlb	2	; select bank2
  9714  0894  082D               	movf	_hueValPulse^(0+256),w
  9715  0895  0143               	movlb	3	; select bank3
  9716  0896  00C6               	movwf	_pulseColor^(0+384)
  9717                           
  9718                           ;menu.c: 62:         pulseColor.L = 1;
  9719  0897  303F               	movlw	63
  9720  0898  00CF               	movwf	((_pulseColor+3)^(0+384)+6)
  9721  0899  3080               	movlw	128
  9722  089A  00CE               	movwf	((_pulseColor+2)^(0+384)+6)
  9723  089B  3000               	movlw	0
  9724  089C  00CD               	movwf	((_pulseColor+1)^(0+384)+6)
  9725  089D  3000               	movlw	0
  9726  089E  00CC               	movwf	(_pulseColor^(0+384)+6)
  9727                           
  9728                           ;menu.c: 63:         fadeTime = 400/2;
  9729  089F  3043               	movlw	67
  9730  08A0  0142               	movlb	2	; select bank2
  9731  08A1  00A8               	movwf	(_fadeTime+3)^(0+256)
  9732  08A2  3048               	movlw	72
  9733  08A3  00A7               	movwf	(_fadeTime+2)^(0+256)
  9734  08A4  3000               	movlw	0
  9735  08A5  00A6               	movwf	(_fadeTime+1)^(0+256)
  9736  08A6  3000               	movlw	0
  9737  08A7  291D               	goto	L1
  9738  08A8                     l6053:	
  9739                           ;menu.c: 64:     } else if(fadeTime > 0) {
  9740                           
  9741  08A8  3000               	movlw	0
  9742  08A9  0140               	movlb	0	; select bank0
  9743  08AA  00DA               	movwf	___flge@ff1+3
  9744  08AB  3000               	movlw	0
  9745  08AC  00D9               	movwf	___flge@ff1+2
  9746  08AD  3000               	movlw	0
  9747  08AE  00D8               	movwf	___flge@ff1+1
  9748  08AF  3000               	movlw	0
  9749  08B0  00D7               	movwf	___flge@ff1
  9750  08B1  0142               	movlb	2	; select bank2
  9751  08B2  0828               	movf	(_fadeTime+3)^(0+256),w
  9752  08B3  0140               	movlb	0	; select bank0
  9753  08B4  00DE               	movwf	___flge@ff2+3
  9754  08B5  0142               	movlb	2	; select bank2
  9755  08B6  0827               	movf	(_fadeTime+2)^(0+256),w
  9756  08B7  0140               	movlb	0	; select bank0
  9757  08B8  00DD               	movwf	___flge@ff2+2
  9758  08B9  0142               	movlb	2	; select bank2
  9759  08BA  0826               	movf	(_fadeTime+1)^(0+256),w
  9760  08BB  0140               	movlb	0	; select bank0
  9761  08BC  00DC               	movwf	___flge@ff2+1
  9762  08BD  0142               	movlb	2	; select bank2
  9763  08BE  0825               	movf	_fadeTime^(0+256),w
  9764  08BF  0140               	movlb	0	; select bank0
  9765  08C0  00DB               	movwf	___flge@ff2
  9766  08C1  3195  252D  3188   	fcall	___flge
  9767  08C4  1803               	btfsc	3,0
  9768  08C5  28F2               	goto	l6057
  9769                           
  9770                           ;menu.c: 65:         pulseColor.L = fadeTime/(400);
  9771  08C6  3043               	movlw	67
  9772  08C7  0140               	movlb	0	; select bank0
  9773  08C8  00B1               	movwf	___fldiv@a+3
  9774  08C9  30C8               	movlw	200
  9775  08CA  00B0               	movwf	___fldiv@a+2
  9776  08CB  3000               	movlw	0
  9777  08CC  00AF               	movwf	___fldiv@a+1
  9778  08CD  3000               	movlw	0
  9779  08CE  00AE               	movwf	___fldiv@a
  9780  08CF  0142               	movlb	2	; select bank2
  9781  08D0  0828               	movf	(_fadeTime+3)^(0+256),w
  9782  08D1  0140               	movlb	0	; select bank0
  9783  08D2  00B5               	movwf	___fldiv@b+3
  9784  08D3  0142               	movlb	2	; select bank2
  9785  08D4  0827               	movf	(_fadeTime+2)^(0+256),w
  9786  08D5  0140               	movlb	0	; select bank0
  9787  08D6  00B4               	movwf	___fldiv@b+2
  9788  08D7  0142               	movlb	2	; select bank2
  9789  08D8  0826               	movf	(_fadeTime+1)^(0+256),w
  9790  08D9  0140               	movlb	0	; select bank0
  9791  08DA  00B3               	movwf	___fldiv@b+1
  9792  08DB  0142               	movlb	2	; select bank2
  9793  08DC  0825               	movf	_fadeTime^(0+256),w
  9794  08DD  0140               	movlb	0	; select bank0
  9795  08DE  00B2               	movwf	___fldiv@b
  9796  08DF  3186  2624  3188   	fcall	___fldiv
  9797  08E2  0140               	movlb	0	; select bank0
  9798  08E3  0831               	movf	?___fldiv+3,w
  9799  08E4  0143               	movlb	3	; select bank3
  9800  08E5  00CF               	movwf	((_pulseColor+3)^(0+384)+6)
  9801  08E6  0140               	movlb	0	; select bank0
  9802  08E7  0830               	movf	?___fldiv+2,w
  9803  08E8  0143               	movlb	3	; select bank3
  9804  08E9  00CE               	movwf	((_pulseColor+2)^(0+384)+6)
  9805  08EA  0140               	movlb	0	; select bank0
  9806  08EB  082F               	movf	?___fldiv+1,w
  9807  08EC  0143               	movlb	3	; select bank3
  9808  08ED  00CD               	movwf	((_pulseColor+1)^(0+384)+6)
  9809  08EE  0140               	movlb	0	; select bank0
  9810  08EF  082E               	movf	?___fldiv,w
  9811  08F0  0143               	movlb	3	; select bank3
  9812  08F1  00CC               	movwf	(_pulseColor^(0+384)+6)
  9813  08F2                     l6057:	
  9814                           ;menu.c: 67:     } else {
  9815                           
  9816                           ;menu.c: 66:         fadeTime -= 1;
  9817                           
  9818                           
  9819                           ;menu.c: 68:         fadeTime -= 1;
  9820  08F2  303F               	movlw	63
  9821  08F3  0140               	movlb	0	; select bank0
  9822  08F4  00DA               	movwf	___flsub@a+3
  9823  08F5  3080               	movlw	128
  9824  08F6  00D9               	movwf	___flsub@a+2
  9825  08F7  3000               	movlw	0
  9826  08F8  00D8               	movwf	___flsub@a+1
  9827  08F9  3000               	movlw	0
  9828  08FA  00D7               	movwf	___flsub@a
  9829  08FB  0142               	movlb	2	; select bank2
  9830  08FC  0828               	movf	(_fadeTime+3)^(0+256),w
  9831  08FD  0140               	movlb	0	; select bank0
  9832  08FE  00DE               	movwf	___flsub@b+3
  9833  08FF  0142               	movlb	2	; select bank2
  9834  0900  0827               	movf	(_fadeTime+2)^(0+256),w
  9835  0901  0140               	movlb	0	; select bank0
  9836  0902  00DD               	movwf	___flsub@b+2
  9837  0903  0142               	movlb	2	; select bank2
  9838  0904  0826               	movf	(_fadeTime+1)^(0+256),w
  9839  0905  0140               	movlb	0	; select bank0
  9840  0906  00DC               	movwf	___flsub@b+1
  9841  0907  0142               	movlb	2	; select bank2
  9842  0908  0825               	movf	_fadeTime^(0+256),w
  9843  0909  0140               	movlb	0	; select bank0
  9844  090A  00DB               	movwf	___flsub@b
  9845  090B  3190  2021  3188   	fcall	___flsub
  9846  090E  0140               	movlb	0	; select bank0
  9847  090F  085A               	movf	?___flsub+3,w
  9848  0910  0142               	movlb	2	; select bank2
  9849  0911  00A8               	movwf	(_fadeTime+3)^(0+256)
  9850  0912  0140               	movlb	0	; select bank0
  9851  0913  0859               	movf	?___flsub+2,w
  9852  0914  0142               	movlb	2	; select bank2
  9853  0915  00A7               	movwf	(_fadeTime+2)^(0+256)
  9854  0916  0140               	movlb	0	; select bank0
  9855  0917  0858               	movf	?___flsub+1,w
  9856  0918  0142               	movlb	2	; select bank2
  9857  0919  00A6               	movwf	(_fadeTime+1)^(0+256)
  9858  091A  0140               	movlb	0	; select bank0
  9859  091B  0857               	movf	?___flsub,w
  9860  091C  0142               	movlb	2	; select bank2
  9861  091D                     L1:	
  9862  091D  00A5               	movwf	_fadeTime^(0+256)
  9863                           
  9864                           ;menu.c: 71:     LED_setHSL(pulseColor);
  9865  091E  30C6               	movlw	low _pulseColor
  9866  091F  0086               	movwf	6
  9867  0920  3001               	movlw	high _pulseColor
  9868  0921  0087               	movwf	7
  9869  0922  30AF               	movlw	low LED_setHSL@hsl
  9870  0923  0084               	movwf	4
  9871  0924  3000               	movlw	high LED_setHSL@hsl
  9872  0925  0085               	movwf	5
  9873  0926  300A               	movlw	10
  9874  0927  0140               	movlb	0	; select bank0
  9875  0928  00EF               	movwf	??_pulseColors
  9876  0929                     u6350:	
  9877  0929  0016               	moviw fsr1++
  9878  092A  001A               	movwi fsr0++
  9879  092B  0BEF               	decfsz	??_pulseColors,f
  9880  092C  2929               	goto	u6350
  9881  092D  3180  209A         	fcall	_LED_setHSL
  9882  092F  0008               	return
  9883  0930                     __end_of_pulseColors:	
  9884                           
  9885                           	psect	text18
  9886  1004                     __ptext18:	
  9887 ;; *************** function _menuButtons *****************
  9888 ;; Defined at:
  9889 ;;		line 17 in file "menu.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;		None
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;		None
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  1    wreg      void 
  9896 ;; Registers used:
  9897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 0/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9907 ;;Total ram usage:        0 bytes
  9908 ;; Hardware stack levels used:    1
  9909 ;; Hardware stack levels required when called:    6
  9910 ;; This function calls:
  9911 ;;		_BUTTONS_isClicked
  9912 ;;		_numControl_resetTimer
  9913 ;; This function is called by:
  9914 ;;		_MENU_task
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           
  9919                           ;psect for function _menuButtons
  9920  1004                     _menuButtons:	
  9921                           
  9922                           ;menu.c: 18:     if (BUTTONS_isClicked(menu)) {
  9923                           
  9924                           ;incstack = 0
  9925                           ; Regs used in _menuButtons: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9926  1004  0142               	movlb	2	; select bank2
  9927  1005  084F               	movf	_menu^(0+256),w
  9928  1006  3190  2080  3190   	fcall	_BUTTONS_isClicked
  9929  1009  0140               	movlb	0	; select bank0
  9930  100A  0820               	movf	?_BUTTONS_isClicked,w
  9931  100B  0421               	iorwf	?_BUTTONS_isClicked+1,w
  9932  100C  1903               	btfsc	3,2
  9933  100D  0008               	return
  9934                           
  9935                           ;menu.c: 19:         numControl_resetTimer();
  9936  100E  319E  26A5  3190   	fcall	_numControl_resetTimer
  9937                           
  9938                           ;menu.c: 20:         firstMsg = 1;
  9939  1011  0142               	movlb	2	; select bank2
  9940  1012  01E8               	clrf	_firstMsg^(0+256)
  9941  1013  0AE8               	incf	_firstMsg^(0+256),f
  9942                           
  9943                           ;menu.c: 21:         if(currentState == 2) {
  9944  1014  3002               	movlw	2
  9945  1015  0660               	xorwf	_currentState^(0+256),w
  9946  1016  0461               	iorwf	(_currentState+1)^(0+256),w
  9947  1017  1D03               	btfss	3,2
  9948  1018  281C               	goto	l6017
  9949                           
  9950                           ;menu.c: 22:             currentState = 0;
  9951  1019  01E0               	clrf	_currentState^(0+256)
  9952  101A  01E1               	clrf	(_currentState+1)^(0+256)
  9953                           
  9954                           ;menu.c: 23:         } else {
  9955  101B  0008               	return
  9956  101C                     l6017:	
  9957                           
  9958                           ;menu.c: 24:             currentState += 1;
  9959  101C  3001               	movlw	1
  9960  101D  07E0               	addwf	_currentState^(0+256),f
  9961  101E  3000               	movlw	0
  9962  101F  3DE1               	addwfc	(_currentState+1)^(0+256),f
  9963  1020  0008               	return
  9964  1021                     __end_of_menuButtons:	
  9965                           
  9966                           	psect	text19
  9967  1EA5                     __ptext19:	
  9968 ;; *************** function _numControl_resetTimer *****************
  9969 ;; Defined at:
  9970 ;;		line 68 in file "controller.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;		None
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;		None
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  1    wreg      void 
  9977 ;; Registers used:
  9978 ;;		wreg, pclath, cstack
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9988 ;;Total ram usage:        0 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:    5
  9991 ;; This function calls:
  9992 ;;		_CLOCK_getTime
  9993 ;; This function is called by:
  9994 ;;		_menuButtons
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           
  9999                           ;psect for function _numControl_resetTimer
 10000  1EA5                     _numControl_resetTimer:	
 10001                           
 10002                           ;controller.c: 69:      lastActiveTime = CLOCK_getTime();
 10003                           
 10004                           ;incstack = 0
 10005                           ; Regs used in _numControl_resetTimer: [wreg+pclath+cstack]
 10006  1EA5  319E  264A         	fcall	_CLOCK_getTime
 10007  1EA7  0140               	movlb	0	; select bank0
 10008  1EA8  0821               	movf	?_CLOCK_getTime+1,w
 10009  1EA9  0142               	movlb	2	; select bank2
 10010  1EAA  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10011  1EAB  0140               	movlb	0	; select bank0
 10012  1EAC  0820               	movf	?_CLOCK_getTime,w
 10013  1EAD  0142               	movlb	2	; select bank2
 10014  1EAE  00A9               	movwf	_lastActiveTime^(0+256)
 10015  1EAF  0008               	return
 10016  1EB0                     __end_of_numControl_resetTimer:	
 10017                           
 10018                           	psect	text20
 10019  1E11                     __ptext20:	
 10020 ;; *************** function _isDMXOn *****************
 10021 ;; Defined at:
 10022 ;;		line 60 in file "dmx.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;		None
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;		None
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  1    wreg      _Bool 
 10029 ;; Registers used:
 10030 ;;		wreg
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10040 ;;Total ram usage:        0 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    4
 10043 ;; This function calls:
 10044 ;;		Nothing
 10045 ;; This function is called by:
 10046 ;;		_MENU_task
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           
 10051                           ;psect for function _isDMXOn
 10052  1E11                     _isDMXOn:	
 10053                           
 10054                           ;dmx.c: 61:     return dmxOn;
 10055                           
 10056                           ;incstack = 0
 10057                           ; Regs used in _isDMXOn: [wreg]
 10058  1E11  0142               	movlb	2	; select bank2
 10059  1E12  084B               	movf	_dmxOn^(0+256),w
 10060  1E13  0008               	return
 10061  1E14                     __end_of_isDMXOn:	
 10062                           
 10063                           	psect	text21
 10064  15A9                     __ptext21:	
 10065 ;; *************** function _cycleColors *****************
 10066 ;; Defined at:
 10067 ;;		line 32 in file "menu.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;		None
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;  color          10   62[BANK1 ] struct HSL
 10072 ;;  time            2   60[BANK1 ] unsigned short 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      void 
 10075 ;; Registers used:
 10076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10083 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10084 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10085 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10086 ;;Total ram usage:       14 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:   12
 10089 ;; This function calls:
 10090 ;;		_CLOCK_getTime
 10091 ;;		_LED_setHSL
 10092 ;;		_numControl_Set
 10093 ;; This function is called by:
 10094 ;;		_MENU_task
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           
 10099                           ;psect for function _cycleColors
 10100  15A9                     _cycleColors:	
 10101                           
 10102                           ;menu.c: 33:     time_t time = CLOCK_getTime();
 10103                           
 10104                           ;incstack = 0
 10105                           ; Regs used in _cycleColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10106  15A9  319E  264A  3195   	fcall	_CLOCK_getTime
 10107  15AC  0140               	movlb	0	; select bank0
 10108  15AD  0821               	movf	?_CLOCK_getTime+1,w
 10109  15AE  0141               	movlb	1	; select bank1
 10110  15AF  00DD               	movwf	(cycleColors@time+1)^(0+128)
 10111  15B0  0140               	movlb	0	; select bank0
 10112  15B1  0820               	movf	?_CLOCK_getTime,w
 10113  15B2  0141               	movlb	1	; select bank1
 10114  15B3  00DC               	movwf	cycleColors@time^(0+128)
 10115                           
 10116                           ;menu.c: 35:     if (time - lastTimeCycle < cycleSpeed)
 10117  15B4  0142               	movlb	2	; select bank2
 10118  15B5  0833               	movf	_lastTimeCycle^(0+256),w
 10119  15B6  0141               	movlb	1	; select bank1
 10120  15B7  025C               	subwf	cycleColors@time^(0+128),w
 10121  15B8  00DA               	movwf	??_cycleColors^(0+128)
 10122  15B9  0142               	movlb	2	; select bank2
 10123  15BA  0834               	movf	(_lastTimeCycle+1)^(0+256),w
 10124  15BB  0141               	movlb	1	; select bank1
 10125  15BC  3B5D               	subwfb	(cycleColors@time+1)^(0+128),w
 10126  15BD  00DB               	movwf	(??_cycleColors+1)^(0+128)
 10127  15BE  0142               	movlb	2	; select bank2
 10128  15BF  086A               	movf	(_cycleSpeed+1)^(0+256),w
 10129  15C0  0141               	movlb	1	; select bank1
 10130  15C1  025B               	subwf	(??_cycleColors+1)^(0+128),w
 10131  15C2  1D03               	skipz
 10132  15C3  2DC8               	goto	u6285
 10133  15C4  0142               	movlb	2	; select bank2
 10134  15C5  0869               	movf	_cycleSpeed^(0+256),w
 10135  15C6  0141               	movlb	1	; select bank1
 10136  15C7  025A               	subwf	??_cycleColors^(0+128),w
 10137  15C8                     u6285:	
 10138  15C8  1C03               	btfss	3,0
 10139  15C9  0008               	return
 10140                           
 10141                           ;menu.c: 37:     lastTimeCycle = time;
 10142  15CA  085D               	movf	(cycleColors@time+1)^(0+128),w
 10143  15CB  0142               	movlb	2	; select bank2
 10144  15CC  00B4               	movwf	(_lastTimeCycle+1)^(0+256)
 10145  15CD  0141               	movlb	1	; select bank1
 10146  15CE  085C               	movf	cycleColors@time^(0+128),w
 10147  15CF  0142               	movlb	2	; select bank2
 10148  15D0  00B3               	movwf	_lastTimeCycle^(0+256)
 10149                           
 10150                           ;menu.c: 38:     numControl_Set(&cycleSpeed, 100, 1);
 10151  15D1  3069               	movlw	low _cycleSpeed
 10152  15D2  0140               	movlb	0	; select bank0
 10153  15D3  00CA               	movwf	numControl_Set@val
 10154  15D4  3001               	movlw	high _cycleSpeed
 10155  15D5  00CB               	movwf	numControl_Set@val+1
 10156  15D6  3064               	movlw	100
 10157  15D7  00CC               	movwf	numControl_Set@max
 10158  15D8  3000               	movlw	0
 10159  15D9  00CD               	movwf	numControl_Set@max+1
 10160  15DA  3001               	movlw	1
 10161  15DB  00CE               	movwf	numControl_Set@min
 10162  15DC  3000               	movlw	0
 10163  15DD  00CF               	movwf	numControl_Set@min+1
 10164  15DE  3196  2628  3195   	fcall	_numControl_Set
 10165                           
 10166                           ;menu.c: 39:     if(hueValCycle == 360) {
 10167  15E1  3068               	movlw	104
 10168  15E2  0142               	movlb	2	; select bank2
 10169  15E3  0631               	xorwf	_hueValCycle^(0+256),w
 10170  15E4  1D03               	skipz
 10171  15E5  2DEC               	goto	l6033
 10172  15E6  0332               	decf	(_hueValCycle+1)^(0+256),w
 10173  15E7  1D03               	btfss	3,2
 10174  15E8  2DEC               	goto	l6033
 10175                           
 10176                           ;menu.c: 40:         hueValCycle = 0;
 10177  15E9  01B1               	clrf	_hueValCycle^(0+256)
 10178  15EA  01B2               	clrf	(_hueValCycle+1)^(0+256)
 10179                           
 10180                           ;menu.c: 41:     } else {
 10181  15EB  2DF0               	goto	l6035
 10182  15EC                     l6033:	
 10183                           
 10184                           ;menu.c: 42:         hueValCycle += 1;
 10185  15EC  3001               	movlw	1
 10186  15ED  07B1               	addwf	_hueValCycle^(0+256),f
 10187  15EE  3000               	movlw	0
 10188  15EF  3DB2               	addwfc	(_hueValCycle+1)^(0+256),f
 10189  15F0                     l6035:	
 10190                           
 10191                           ;menu.c: 44:     struct HSL color = {hueValCycle, 1, .5};
 10192  15F0  30A0               	movlw	low cycleColors@F111
 10193  15F1  0086               	movwf	6
 10194  15F2  3001               	movlw	high cycleColors@F111
 10195  15F3  0087               	movwf	7
 10196  15F4  30DE               	movlw	low cycleColors@color
 10197  15F5  0084               	movwf	4
 10198  15F6  3000               	movlw	high cycleColors@color
 10199  15F7  0085               	movwf	5
 10200  15F8  300A               	movlw	10
 10201  15F9  0141               	movlb	1	; select bank1
 10202  15FA  00DA               	movwf	??_cycleColors^(0+128)
 10203  15FB                     u6300:	
 10204  15FB  0016               	moviw fsr1++
 10205  15FC  001A               	movwi fsr0++
 10206  15FD  0BDA               	decfsz	??_cycleColors^(0+128),f
 10207  15FE  2DFB               	goto	u6300
 10208  15FF  0142               	movlb	2	; select bank2
 10209  1600  0832               	movf	(_hueValCycle+1)^(0+256),w
 10210  1601  0141               	movlb	1	; select bank1
 10211  1602  00DF               	movwf	(cycleColors@color+1)^(0+128)
 10212  1603  0142               	movlb	2	; select bank2
 10213  1604  0831               	movf	_hueValCycle^(0+256),w
 10214  1605  0141               	movlb	1	; select bank1
 10215  1606  00DE               	movwf	cycleColors@color^(0+128)
 10216  1607  303F               	movlw	63
 10217  1608  00E3               	movwf	((cycleColors@color+3)^(0+128)+2)
 10218  1609  3080               	movlw	128
 10219  160A  00E2               	movwf	((cycleColors@color+2)^(0+128)+2)
 10220  160B  3000               	movlw	0
 10221  160C  00E1               	movwf	((cycleColors@color+1)^(0+128)+2)
 10222  160D  3000               	movlw	0
 10223  160E  00E0               	movwf	(cycleColors@color^(0+128)+2)
 10224  160F  303F               	movlw	63
 10225  1610  00E7               	movwf	((cycleColors@color+3)^(0+128)+6)
 10226  1611  3000               	movlw	0
 10227  1612  00E6               	movwf	((cycleColors@color+2)^(0+128)+6)
 10228  1613  3000               	movlw	0
 10229  1614  00E5               	movwf	((cycleColors@color+1)^(0+128)+6)
 10230  1615  3000               	movlw	0
 10231  1616  00E4               	movwf	(cycleColors@color^(0+128)+6)
 10232                           
 10233                           ;menu.c: 45:     LED_setHSL(color);
 10234  1617  30DE               	movlw	low cycleColors@color
 10235  1618  0086               	movwf	6
 10236  1619  3000               	movlw	high cycleColors@color
 10237  161A  0087               	movwf	7
 10238  161B  30AF               	movlw	low LED_setHSL@hsl
 10239  161C  0084               	movwf	4
 10240  161D  3000               	movlw	high LED_setHSL@hsl
 10241  161E  0085               	movwf	5
 10242  161F  300A               	movlw	10
 10243  1620  00DA               	movwf	??_cycleColors^(0+128)
 10244  1621                     u6310:	
 10245  1621  0016               	moviw fsr1++
 10246  1622  001A               	movwi fsr0++
 10247  1623  0BDA               	decfsz	??_cycleColors^(0+128),f
 10248  1624  2E21               	goto	u6310
 10249  1625  3180  209A         	fcall	_LED_setHSL
 10250  1627  0008               	return
 10251  1628                     __end_of_cycleColors:	
 10252                           
 10253                           	psect	text22
 10254  1628                     __ptext22:	
 10255 ;; *************** function _numControl_Set *****************
 10256 ;; Defined at:
 10257 ;;		line 45 in file "controller.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  val             2   42[BANK0 ] PTR int 
 10260 ;;		 -> cycleSpeed(2), address(2), 
 10261 ;;  max             2   44[BANK0 ] int 
 10262 ;;  min             2   46[BANK0 ] int 
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;  time            2   50[BANK0 ] unsigned short 
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      void 
 10267 ;; Registers used:
 10268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10274 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10275 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10276 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10277 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10278 ;;Total ram usage:       10 bytes
 10279 ;; Hardware stack levels used:    1
 10280 ;; Hardware stack levels required when called:   11
 10281 ;; This function calls:
 10282 ;;		_BUTTONS_isClicked
 10283 ;;		_CLOCK_getTime
 10284 ;;		_TM1650_enable
 10285 ;;		_decrement
 10286 ;;		_increment
 10287 ;; This function is called by:
 10288 ;;		_cycleColors
 10289 ;;		_MENU_task
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           
 10294                           ;psect for function _numControl_Set
 10295  1628                     _numControl_Set:	
 10296                           
 10297                           ;controller.c: 46:     time_t time = CLOCK_getTime();
 10298                           
 10299                           ;incstack = 0
 10300                           ; Regs used in _numControl_Set: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10301  1628  319E  264A  3196   	fcall	_CLOCK_getTime
 10302  162B  0140               	movlb	0	; select bank0
 10303  162C  0821               	movf	?_CLOCK_getTime+1,w
 10304  162D  00D3               	movwf	numControl_Set@time+1
 10305  162E  0820               	movf	?_CLOCK_getTime,w
 10306  162F  00D2               	movwf	numControl_Set@time
 10307                           
 10308                           ;controller.c: 48:     if (time - lastTime < 35)
 10309  1630  0142               	movlb	2	; select bank2
 10310  1631  082B               	movf	controller@lastTime^(0+256),w
 10311  1632  0140               	movlb	0	; select bank0
 10312  1633  0252               	subwf	numControl_Set@time,w
 10313  1634  00D0               	movwf	??_numControl_Set
 10314  1635  0142               	movlb	2	; select bank2
 10315  1636  082C               	movf	(controller@lastTime+1)^(0+256),w
 10316  1637  0140               	movlb	0	; select bank0
 10317  1638  3B53               	subwfb	numControl_Set@time+1,w
 10318  1639  00D1               	movwf	??_numControl_Set+1
 10319  163A  3000               	movlw	0
 10320  163B  0251               	subwf	??_numControl_Set+1,w
 10321  163C  3023               	movlw	35
 10322  163D  1903               	skipnz
 10323  163E  0250               	subwf	??_numControl_Set,w
 10324  163F  1C03               	btfss	3,0
 10325  1640  0008               	return
 10326                           
 10327                           ;controller.c: 50:     lastTime = time;
 10328  1641  0853               	movf	numControl_Set@time+1,w
 10329  1642  0142               	movlb	2	; select bank2
 10330  1643  00AC               	movwf	(controller@lastTime+1)^(0+256)
 10331  1644  0140               	movlb	0	; select bank0
 10332  1645  0852               	movf	numControl_Set@time,w
 10333  1646  0142               	movlb	2	; select bank2
 10334  1647  00AB               	movwf	controller@lastTime^(0+256)
 10335                           
 10336                           ;controller.c: 52:     if (BUTTONS_isClicked(up)) {
 10337  1648  0852               	movf	_up^(0+256),w
 10338  1649  3190  2080  3196   	fcall	_BUTTONS_isClicked
 10339  164C  0140               	movlb	0	; select bank0
 10340  164D  0820               	movf	?_BUTTONS_isClicked,w
 10341  164E  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10342  164F  1903               	btfsc	3,2
 10343  1650  2E6C               	goto	l5785
 10344                           
 10345                           ;controller.c: 53:         increment(val, max, min);
 10346  1651  084B               	movf	numControl_Set@val+1,w
 10347  1652  00C3               	movwf	increment@val+1
 10348  1653  084A               	movf	numControl_Set@val,w
 10349  1654  00C2               	movwf	increment@val
 10350  1655  084D               	movf	numControl_Set@max+1,w
 10351  1656  00C5               	movwf	increment@max+1
 10352  1657  084C               	movf	numControl_Set@max,w
 10353  1658  00C4               	movwf	increment@max
 10354  1659  084F               	movf	numControl_Set@min+1,w
 10355  165A  00C7               	movwf	increment@min+1
 10356  165B  084E               	movf	numControl_Set@min,w
 10357  165C  00C6               	movwf	increment@min
 10358  165D  3191  21BA  3196   	fcall	_increment
 10359                           
 10360                           ;controller.c: 54:         lastActiveTime = time;
 10361  1660  0140               	movlb	0	; select bank0
 10362  1661  0853               	movf	numControl_Set@time+1,w
 10363  1662  0142               	movlb	2	; select bank2
 10364  1663  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10365  1664  0140               	movlb	0	; select bank0
 10366  1665  0852               	movf	numControl_Set@time,w
 10367  1666  0142               	movlb	2	; select bank2
 10368  1667  00A9               	movwf	_lastActiveTime^(0+256)
 10369                           
 10370                           ;controller.c: 55:         TM1650_enable(1);
 10371  1668  3001               	movlw	1
 10372  1669  319F  271C         	fcall	_TM1650_enable
 10373                           
 10374                           ;controller.c: 56:     } else if (BUTTONS_isClicked(down)) {
 10375  166B  0008               	return
 10376  166C                     l5785:	
 10377  166C  0142               	movlb	2	; select bank2
 10378  166D  0851               	movf	_down^(0+256),w
 10379  166E  3190  2080  3196   	fcall	_BUTTONS_isClicked
 10380  1671  0140               	movlb	0	; select bank0
 10381  1672  0820               	movf	?_BUTTONS_isClicked,w
 10382  1673  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10383  1674  1903               	btfsc	3,2
 10384  1675  2E91               	goto	l5793
 10385                           
 10386                           ;controller.c: 57:         decrement(val, max, min);
 10387  1676  084B               	movf	numControl_Set@val+1,w
 10388  1677  00C3               	movwf	decrement@val+1
 10389  1678  084A               	movf	numControl_Set@val,w
 10390  1679  00C2               	movwf	decrement@val
 10391  167A  084D               	movf	numControl_Set@max+1,w
 10392  167B  00C5               	movwf	decrement@max+1
 10393  167C  084C               	movf	numControl_Set@max,w
 10394  167D  00C4               	movwf	decrement@max
 10395  167E  084F               	movf	numControl_Set@min+1,w
 10396  167F  00C7               	movwf	decrement@min+1
 10397  1680  084E               	movf	numControl_Set@min,w
 10398  1681  00C6               	movwf	decrement@min
 10399  1682  3191  21E8  3196   	fcall	_decrement
 10400                           
 10401                           ;controller.c: 58:         lastActiveTime = time;
 10402  1685  0140               	movlb	0	; select bank0
 10403  1686  0853               	movf	numControl_Set@time+1,w
 10404  1687  0142               	movlb	2	; select bank2
 10405  1688  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10406  1689  0140               	movlb	0	; select bank0
 10407  168A  0852               	movf	numControl_Set@time,w
 10408  168B  0142               	movlb	2	; select bank2
 10409  168C  00A9               	movwf	_lastActiveTime^(0+256)
 10410                           
 10411                           ;controller.c: 59:         TM1650_enable(1);
 10412  168D  3001               	movlw	1
 10413  168E  319F  271C         	fcall	_TM1650_enable
 10414                           
 10415                           ;controller.c: 60:     } else {
 10416  1690  0008               	return
 10417  1691                     l5793:	
 10418                           
 10419                           ;controller.c: 61:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
 10420  1691  319E  264A  3196   	fcall	_CLOCK_getTime
 10421  1694  0142               	movlb	2	; select bank2
 10422  1695  0829               	movf	_lastActiveTime^(0+256),w
 10423  1696  0140               	movlb	0	; select bank0
 10424  1697  0220               	subwf	?_CLOCK_getTime,w
 10425  1698  00D0               	movwf	??_numControl_Set
 10426  1699  0142               	movlb	2	; select bank2
 10427  169A  082A               	movf	(_lastActiveTime+1)^(0+256),w
 10428  169B  0140               	movlb	0	; select bank0
 10429  169C  3B21               	subwfb	?_CLOCK_getTime+1,w
 10430  169D  00D1               	movwf	??_numControl_Set+1
 10431  169E  3013               	movlw	19
 10432  169F  0251               	subwf	??_numControl_Set+1,w
 10433  16A0  3088               	movlw	136
 10434  16A1  1903               	skipnz
 10435  16A2  0250               	subwf	??_numControl_Set,w
 10436  16A3  1C03               	skipc
 10437  16A4  0008               	return
 10438                           
 10439                           ;controller.c: 62:             TM1650_enable(0);
 10440  16A5  3000               	movlw	0
 10441  16A6  319F  271C  3196   	fcall	_TM1650_enable
 10442                           
 10443                           ;controller.c: 63:             lastActiveTime = CLOCK_getTime() - 5001;
 10444  16A9  319E  264A         	fcall	_CLOCK_getTime
 10445  16AB  0140               	movlb	0	; select bank0
 10446  16AC  0820               	movf	?_CLOCK_getTime,w
 10447  16AD  3E77               	addlw	119
 10448  16AE  0142               	movlb	2	; select bank2
 10449  16AF  00A9               	movwf	_lastActiveTime^(0+256)
 10450  16B0  30EC               	movlw	236
 10451  16B1  0140               	movlb	0	; select bank0
 10452  16B2  3D21               	addwfc	?_CLOCK_getTime+1,w
 10453  16B3  0142               	movlb	2	; select bank2
 10454  16B4  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10455  16B5  0008               	return
 10456  16B6                     __end_of_numControl_Set:	
 10457                           
 10458                           	psect	text23
 10459  11BA                     __ptext23:	
 10460 ;; *************** function _increment *****************
 10461 ;; Defined at:
 10462 ;;		line 17 in file "controller.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;  val             2   34[BANK0 ] PTR int 
 10465 ;;		 -> cycleSpeed(2), address(2), 
 10466 ;;  max             2   36[BANK0 ] int 
 10467 ;;  min             2   38[BANK0 ] int 
 10468 ;; Auto vars:     Size  Location     Type
 10469 ;;		None
 10470 ;; Return value:  Size  Location     Type
 10471 ;;                  1    wreg      void 
 10472 ;; Registers used:
 10473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10474 ;; Tracked objects:
 10475 ;;		On entry : 0/0
 10476 ;;		On exit  : 0/0
 10477 ;;		Unchanged: 0/0
 10478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10479 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10481 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10482 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10483 ;;Total ram usage:        8 bytes
 10484 ;; Hardware stack levels used:    1
 10485 ;; Hardware stack levels required when called:   10
 10486 ;; This function calls:
 10487 ;;		_TM1650_fastPrintNum
 10488 ;; This function is called by:
 10489 ;;		_numControl_Set
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493                           
 10494                           ;psect for function _increment
 10495  11BA                     _increment:	
 10496                           
 10497                           ;controller.c: 17: void increment(int *val, int max, int min);controller.c: 18: {;contro
      +                          ller.c: 19:     if(*val == max) {
 10498                           
 10499                           ;incstack = 0
 10500                           ; Regs used in _increment: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10501  11BA  0140               	movlb	0	; select bank0
 10502  11BB  0842               	movf	increment@val,w
 10503  11BC  0086               	movwf	6
 10504  11BD  0843               	movf	increment@val+1,w
 10505  11BE  0087               	movwf	7
 10506  11BF  3F40               	moviw [0]fsr1
 10507  11C0  00C8               	movwf	??_increment
 10508  11C1  3F41               	moviw [1]fsr1
 10509  11C2  00C9               	movwf	??_increment+1
 10510  11C3  0845               	movf	increment@max+1,w
 10511  11C4  0649               	xorwf	??_increment+1,w
 10512  11C5  1D03               	skipz
 10513  11C6  29C9               	goto	u6055
 10514  11C7  0844               	movf	increment@max,w
 10515  11C8  0648               	xorwf	??_increment,w
 10516  11C9                     u6055:	
 10517  11C9  1D03               	skipz
 10518  11CA  29D4               	goto	l5699
 10519                           
 10520                           ;controller.c: 20:         *val = min;
 10521  11CB  0842               	movf	increment@val,w
 10522  11CC  0086               	movwf	6
 10523  11CD  0843               	movf	increment@val+1,w
 10524  11CE  0087               	movwf	7
 10525  11CF  0846               	movf	increment@min,w
 10526  11D0  3FC0               	movwi [0]fsr1
 10527  11D1  0847               	movf	increment@min+1,w
 10528  11D2  3FC1               	movwi [1]fsr1
 10529                           
 10530                           ;controller.c: 21:     } else {
 10531  11D3  29DD               	goto	l5701
 10532  11D4                     l5699:	
 10533                           
 10534                           ;controller.c: 22:         (*val)++;
 10535  11D4  0842               	movf	increment@val,w
 10536  11D5  0086               	movwf	6
 10537  11D6  0843               	movf	increment@val+1,w
 10538  11D7  0087               	movwf	7
 10539  11D8  3001               	movlw	1
 10540  11D9  0781               	addwf	1,f
 10541  11DA  3141               	addfsr 1,1
 10542  11DB  1803               	skipnc
 10543  11DC  0A81               	incf	1,f
 10544  11DD                     l5701:	
 10545                           
 10546                           ;controller.c: 24:     TM1650_fastPrintNum(*val);
 10547  11DD  0842               	movf	increment@val,w
 10548  11DE  0086               	movwf	6
 10549  11DF  0843               	movf	increment@val+1,w
 10550  11E0  0087               	movwf	7
 10551  11E1  3F40               	moviw [0]fsr1
 10552  11E2  00BB               	movwf	TM1650_fastPrintNum@num
 10553  11E3  3F41               	moviw [1]fsr1
 10554  11E4  00BC               	movwf	TM1650_fastPrintNum@num+1
 10555  11E5  3194  24B3         	fcall	_TM1650_fastPrintNum
 10556  11E7  0008               	return
 10557  11E8                     __end_of_increment:	
 10558                           
 10559                           	psect	text24
 10560  11E8                     __ptext24:	
 10561 ;; *************** function _decrement *****************
 10562 ;; Defined at:
 10563 ;;		line 30 in file "controller.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  val             2   34[BANK0 ] PTR int 
 10566 ;;		 -> cycleSpeed(2), address(2), 
 10567 ;;  max             2   36[BANK0 ] int 
 10568 ;;  min             2   38[BANK0 ] int 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;		None
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10580 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10582 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10583 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10584 ;;Total ram usage:        8 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:   10
 10587 ;; This function calls:
 10588 ;;		_TM1650_fastPrintNum
 10589 ;; This function is called by:
 10590 ;;		_numControl_Set
 10591 ;; This function uses a non-reentrant model
 10592 ;;
 10593                           
 10594                           
 10595                           ;psect for function _decrement
 10596  11E8                     _decrement:	
 10597                           
 10598                           ;controller.c: 30: void decrement(int *val, int max, int min);controller.c: 31: {;contro
      +                          ller.c: 32:     if(*val == min) {
 10599                           
 10600                           ;incstack = 0
 10601                           ; Regs used in _decrement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10602  11E8  0140               	movlb	0	; select bank0
 10603  11E9  0842               	movf	decrement@val,w
 10604  11EA  0086               	movwf	6
 10605  11EB  0843               	movf	decrement@val+1,w
 10606  11EC  0087               	movwf	7
 10607  11ED  3F40               	moviw [0]fsr1
 10608  11EE  00C8               	movwf	??_decrement
 10609  11EF  3F41               	moviw [1]fsr1
 10610  11F0  00C9               	movwf	??_decrement+1
 10611  11F1  0847               	movf	decrement@min+1,w
 10612  11F2  0649               	xorwf	??_decrement+1,w
 10613  11F3  1D03               	skipz
 10614  11F4  29F7               	goto	u6065
 10615  11F5  0846               	movf	decrement@min,w
 10616  11F6  0648               	xorwf	??_decrement,w
 10617  11F7                     u6065:	
 10618  11F7  1D03               	skipz
 10619  11F8  2A02               	goto	l5707
 10620                           
 10621                           ;controller.c: 33:         *val = max;
 10622  11F9  0842               	movf	decrement@val,w
 10623  11FA  0086               	movwf	6
 10624  11FB  0843               	movf	decrement@val+1,w
 10625  11FC  0087               	movwf	7
 10626  11FD  0844               	movf	decrement@max,w
 10627  11FE  3FC0               	movwi [0]fsr1
 10628  11FF  0845               	movf	decrement@max+1,w
 10629  1200  3FC1               	movwi [1]fsr1
 10630                           
 10631                           ;controller.c: 34:     } else {
 10632  1201  2A0C               	goto	l5709
 10633  1202                     l5707:	
 10634                           
 10635                           ;controller.c: 35:         (*val)--;
 10636  1202  0842               	movf	decrement@val,w
 10637  1203  0086               	movwf	6
 10638  1204  0843               	movf	decrement@val+1,w
 10639  1205  0087               	movwf	7
 10640  1206  30FF               	movlw	255
 10641  1207  0781               	addwf	1,f
 10642  1208  3141               	addfsr 1,1
 10643  1209  30FF               	movlw	255
 10644  120A  3D81               	addwfc	1,f
 10645  120B  317F               	addfsr 1,-1
 10646  120C                     l5709:	
 10647                           
 10648                           ;controller.c: 37:     TM1650_fastPrintNum(*val);
 10649  120C  0842               	movf	decrement@val,w
 10650  120D  0086               	movwf	6
 10651  120E  0843               	movf	decrement@val+1,w
 10652  120F  0087               	movwf	7
 10653  1210  3F40               	moviw [0]fsr1
 10654  1211  00BB               	movwf	TM1650_fastPrintNum@num
 10655  1212  3F41               	moviw [1]fsr1
 10656  1213  00BC               	movwf	TM1650_fastPrintNum@num+1
 10657  1214  3194  24B3         	fcall	_TM1650_fastPrintNum
 10658  1216  0008               	return
 10659  1217                     __end_of_decrement:	
 10660                           
 10661                           	psect	text25
 10662  14B3                     __ptext25:	
 10663 ;; *************** function _TM1650_fastPrintNum *****************
 10664 ;; Defined at:
 10665 ;;		line 36 in file "tm1650.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  num             2   27[BANK0 ] unsigned short 
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;  numWrite        2   30[BANK0 ] int 
 10670 ;;  i               2   32[BANK0 ] int 
 10671 ;; Return value:  Size  Location     Type
 10672 ;;                  1    wreg      void 
 10673 ;; Registers used:
 10674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10681 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10682 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10683 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10684 ;;Total ram usage:        7 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; Hardware stack levels required when called:    9
 10687 ;; This function calls:
 10688 ;;		_TM1650_setDigit
 10689 ;;		___lwdiv
 10690 ;;		___lwmod
 10691 ;; This function is called by:
 10692 ;;		_increment
 10693 ;;		_decrement
 10694 ;;		_numControl_init
 10695 ;; This function uses a non-reentrant model
 10696 ;;
 10697                           
 10698                           
 10699                           ;psect for function _TM1650_fastPrintNum
 10700  14B3                     _TM1650_fastPrintNum:	
 10701                           
 10702                           ;tm1650.c: 37:     if(num > 9999) {
 10703                           
 10704                           ;incstack = 0
 10705                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10706  14B3  3027               	movlw	39
 10707  14B4  0140               	movlb	0	; select bank0
 10708  14B5  023C               	subwf	TM1650_fastPrintNum@num+1,w
 10709  14B6  3010               	movlw	16
 10710  14B7  1903               	skipnz
 10711  14B8  023B               	subwf	TM1650_fastPrintNum@num,w
 10712  14B9  1C03               	skipc
 10713  14BA  2CEA               	goto	l5527
 10714                           
 10715                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
 10716  14BB  3045               	movlw	69
 10717  14BC  00BD               	movwf	??_TM1650_fastPrintNum
 10718  14BD  083D               	movf	??_TM1650_fastPrintNum,w
 10719  14BE  00B4               	movwf	TM1650_setDigit@data
 10720  14BF  3000               	movlw	0
 10721  14C0  00B5               	movwf	TM1650_setDigit@dp
 10722  14C1  00B6               	movwf	TM1650_setDigit@dp+1
 10723  14C2  3000               	movlw	0
 10724  14C3  319F  27AB  3194   	fcall	_TM1650_setDigit
 10725                           
 10726                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
 10727  14C6  3045               	movlw	69
 10728  14C7  0140               	movlb	0	; select bank0
 10729  14C8  00BD               	movwf	??_TM1650_fastPrintNum
 10730  14C9  083D               	movf	??_TM1650_fastPrintNum,w
 10731  14CA  00B4               	movwf	TM1650_setDigit@data
 10732  14CB  3000               	movlw	0
 10733  14CC  00B5               	movwf	TM1650_setDigit@dp
 10734  14CD  00B6               	movwf	TM1650_setDigit@dp+1
 10735  14CE  3001               	movlw	1
 10736  14CF  319F  27AB  3194   	fcall	_TM1650_setDigit
 10737                           
 10738                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
 10739  14D2  3045               	movlw	69
 10740  14D3  0140               	movlb	0	; select bank0
 10741  14D4  00BD               	movwf	??_TM1650_fastPrintNum
 10742  14D5  083D               	movf	??_TM1650_fastPrintNum,w
 10743  14D6  00B4               	movwf	TM1650_setDigit@data
 10744  14D7  3000               	movlw	0
 10745  14D8  00B5               	movwf	TM1650_setDigit@dp
 10746  14D9  00B6               	movwf	TM1650_setDigit@dp+1
 10747  14DA  3002               	movlw	2
 10748  14DB  319F  27AB  3194   	fcall	_TM1650_setDigit
 10749                           
 10750                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
 10751  14DE  3045               	movlw	69
 10752  14DF  0140               	movlb	0	; select bank0
 10753  14E0  00BD               	movwf	??_TM1650_fastPrintNum
 10754  14E1  083D               	movf	??_TM1650_fastPrintNum,w
 10755  14E2  00B4               	movwf	TM1650_setDigit@data
 10756  14E3  3000               	movlw	0
 10757  14E4  00B5               	movwf	TM1650_setDigit@dp
 10758  14E5  00B6               	movwf	TM1650_setDigit@dp+1
 10759  14E6  3003               	movlw	3
 10760  14E7  319F  27AB         	fcall	_TM1650_setDigit
 10761                           
 10762                           ;tm1650.c: 42:     } else {
 10763  14E9  0008               	return
 10764  14EA                     l5527:	
 10765                           
 10766                           ;tm1650.c: 43:         int i=0;
 10767  14EA  01C0               	clrf	TM1650_fastPrintNum@i
 10768  14EB  01C1               	clrf	TM1650_fastPrintNum@i+1
 10769                           
 10770                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
 10771  14EC  01C0               	clrf	TM1650_fastPrintNum@i
 10772  14ED  01C1               	clrf	TM1650_fastPrintNum@i+1
 10773  14EE                     l5533:	
 10774                           
 10775                           ;tm1650.c: 45:             int numWrite = num %10;
 10776  14EE  300A               	movlw	10
 10777  14EF  0140               	movlb	0	; select bank0
 10778  14F0  00A0               	movwf	___lwmod@divisor
 10779  14F1  3000               	movlw	0
 10780  14F2  00A1               	movwf	___lwmod@divisor+1
 10781  14F3  083C               	movf	TM1650_fastPrintNum@num+1,w
 10782  14F4  00A3               	movwf	___lwmod@dividend+1
 10783  14F5  083B               	movf	TM1650_fastPrintNum@num,w
 10784  14F6  00A2               	movwf	___lwmod@dividend
 10785  14F7  3191  2160  3194   	fcall	___lwmod
 10786  14FA  0140               	movlb	0	; select bank0
 10787  14FB  0821               	movf	?___lwmod+1,w
 10788  14FC  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
 10789  14FD  0820               	movf	?___lwmod,w
 10790  14FE  00BE               	movwf	TM1650_fastPrintNum@numWrite
 10791                           
 10792                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
 10793  14FF  083E               	movf	TM1650_fastPrintNum@numWrite,w
 10794  1500  3E30               	addlw	48
 10795  1501  00BD               	movwf	??_TM1650_fastPrintNum
 10796  1502  083D               	movf	??_TM1650_fastPrintNum,w
 10797  1503  00B4               	movwf	TM1650_setDigit@data
 10798  1504  3000               	movlw	0
 10799  1505  00B5               	movwf	TM1650_setDigit@dp
 10800  1506  00B6               	movwf	TM1650_setDigit@dp+1
 10801  1507  0840               	movf	TM1650_fastPrintNum@i,w
 10802  1508  3C03               	sublw	3
 10803  1509  319F  27AB  3194   	fcall	_TM1650_setDigit
 10804                           
 10805                           ;tm1650.c: 47:             num = num/10;
 10806  150C  300A               	movlw	10
 10807  150D  0140               	movlb	0	; select bank0
 10808  150E  00A0               	movwf	___lwdiv@divisor
 10809  150F  3000               	movlw	0
 10810  1510  00A1               	movwf	___lwdiv@divisor+1
 10811  1511  083C               	movf	TM1650_fastPrintNum@num+1,w
 10812  1512  00A3               	movwf	___lwdiv@dividend+1
 10813  1513  083B               	movf	TM1650_fastPrintNum@num,w
 10814  1514  00A2               	movwf	___lwdiv@dividend
 10815  1515  3192  2217  3194   	fcall	___lwdiv
 10816  1518  0140               	movlb	0	; select bank0
 10817  1519  0821               	movf	?___lwdiv+1,w
 10818  151A  00BC               	movwf	TM1650_fastPrintNum@num+1
 10819  151B  0820               	movf	?___lwdiv,w
 10820  151C  00BB               	movwf	TM1650_fastPrintNum@num
 10821                           
 10822                           ;tm1650.c: 48:         }
 10823  151D  3001               	movlw	1
 10824  151E  07C0               	addwf	TM1650_fastPrintNum@i,f
 10825  151F  3000               	movlw	0
 10826  1520  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
 10827  1521  0841               	movf	TM1650_fastPrintNum@i+1,w
 10828  1522  3A80               	xorlw	128
 10829  1523  00BD               	movwf	??_TM1650_fastPrintNum
 10830  1524  3080               	movlw	128
 10831  1525  023D               	subwf	??_TM1650_fastPrintNum,w
 10832  1526  1D03               	skipz
 10833  1527  2D2A               	goto	u5845
 10834  1528  3004               	movlw	4
 10835  1529  0240               	subwf	TM1650_fastPrintNum@i,w
 10836  152A                     u5845:	
 10837  152A  1803               	btfsc	3,0
 10838  152B  0008               	return
 10839  152C  2CEE               	goto	l5533
 10840  152D                     __end_of_TM1650_fastPrintNum:	
 10841                           
 10842                           	psect	text26
 10843  1160                     __ptext26:	
 10844 ;; *************** function ___lwmod *****************
 10845 ;; Defined at:
 10846 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  divisor         2    0[BANK0 ] unsigned int 
 10849 ;;  dividend        2    2[BANK0 ] unsigned int 
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;  counter         1    5[BANK0 ] unsigned char 
 10852 ;; Return value:  Size  Location     Type
 10853 ;;                  2    0[BANK0 ] unsigned int 
 10854 ;; Registers used:
 10855 ;;		wreg, status,2, status,0
 10856 ;; Tracked objects:
 10857 ;;		On entry : 0/0
 10858 ;;		On exit  : 0/0
 10859 ;;		Unchanged: 0/0
 10860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10861 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10863 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10864 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10865 ;;Total ram usage:        6 bytes
 10866 ;; Hardware stack levels used:    1
 10867 ;; Hardware stack levels required when called:    4
 10868 ;; This function calls:
 10869 ;;		Nothing
 10870 ;; This function is called by:
 10871 ;;		_TM1650_fastPrintNum
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           
 10876                           ;psect for function ___lwmod
 10877  1160                     ___lwmod:	
 10878                           
 10879                           ;incstack = 0
 10880                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10881  1160  0140               	movlb	0	; select bank0
 10882  1161  0820               	movf	___lwmod@divisor,w
 10883  1162  0421               	iorwf	___lwmod@divisor+1,w
 10884  1163  1903               	btfsc	3,2
 10885  1164  2988               	goto	l5373
 10886  1165  01A5               	clrf	___lwmod@counter
 10887  1166  0AA5               	incf	___lwmod@counter,f
 10888  1167                     l5363:	
 10889  1167  1BA1               	btfsc	___lwmod@divisor+1,7
 10890  1168  2973               	goto	l5365
 10891  1169  3001               	movlw	1
 10892  116A                     u5525:	
 10893  116A  35A0               	lslf	___lwmod@divisor,f
 10894  116B  0DA1               	rlf	___lwmod@divisor+1,f
 10895  116C  0B89               	decfsz	9,f
 10896  116D  296A               	goto	u5525
 10897  116E  3001               	movlw	1
 10898  116F  00A4               	movwf	??___lwmod
 10899  1170  0824               	movf	??___lwmod,w
 10900  1171  07A5               	addwf	___lwmod@counter,f
 10901  1172  2967               	goto	l5363
 10902  1173                     l5365:	
 10903  1173  0821               	movf	___lwmod@divisor+1,w
 10904  1174  0223               	subwf	___lwmod@dividend+1,w
 10905  1175  1D03               	skipz
 10906  1176  2979               	goto	u5545
 10907  1177  0820               	movf	___lwmod@divisor,w
 10908  1178  0222               	subwf	___lwmod@dividend,w
 10909  1179                     u5545:	
 10910  1179  1C03               	skipc
 10911  117A  297F               	goto	l5369
 10912  117B  0820               	movf	___lwmod@divisor,w
 10913  117C  02A2               	subwf	___lwmod@dividend,f
 10914  117D  0821               	movf	___lwmod@divisor+1,w
 10915  117E  3BA3               	subwfb	___lwmod@dividend+1,f
 10916  117F                     l5369:	
 10917  117F  3001               	movlw	1
 10918  1180                     u5555:	
 10919  1180  36A1               	lsrf	___lwmod@divisor+1,f
 10920  1181  0CA0               	rrf	___lwmod@divisor,f
 10921  1182  0B89               	decfsz	9,f
 10922  1183  2980               	goto	u5555
 10923  1184  3001               	movlw	1
 10924  1185  02A5               	subwf	___lwmod@counter,f
 10925  1186  1D03               	btfss	3,2
 10926  1187  2973               	goto	l5365
 10927  1188                     l5373:	
 10928  1188  0823               	movf	___lwmod@dividend+1,w
 10929  1189  00A1               	movwf	?___lwmod+1
 10930  118A  0822               	movf	___lwmod@dividend,w
 10931  118B  00A0               	movwf	?___lwmod
 10932  118C  0008               	return
 10933  118D                     __end_of___lwmod:	
 10934                           
 10935                           	psect	text27
 10936  1FAB                     __ptext27:	
 10937 ;; *************** function _TM1650_setDigit *****************
 10938 ;; Defined at:
 10939 ;;		line 24 in file "tm1650.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;  digit           1    wreg     unsigned char 
 10942 ;;  data            1   20[BANK0 ] unsigned char 
 10943 ;;  dp              2   21[BANK0 ] int 
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;  digit           1   26[BANK0 ] unsigned char 
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      void 
 10948 ;; Registers used:
 10949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10955 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10957 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10958 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10959 ;;Total ram usage:        7 bytes
 10960 ;; Hardware stack levels used:    1
 10961 ;; Hardware stack levels required when called:    8
 10962 ;; This function calls:
 10963 ;;		_writeData
 10964 ;; This function is called by:
 10965 ;;		_TM1650_fastPrintNum
 10966 ;;		_MENU_task
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           
 10971                           ;psect for function _TM1650_setDigit
 10972  1FAB                     _TM1650_setDigit:	
 10973                           
 10974                           ;incstack = 0
 10975                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10976                           ;TM1650_setDigit@digit stored from wreg
 10977  1FAB  0140               	movlb	0	; select bank0
 10978  1FAC  00BA               	movwf	TM1650_setDigit@digit
 10979                           
 10980                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
 10981  1FAD  0834               	movf	TM1650_setDigit@data,w
 10982  1FAE  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 10983  1FAF  0084               	movwf	4
 10984  1FB0  3097               	movlw	high ((_charTable+65504)| (0+32768))
 10985  1FB1  1803               	skipnc
 10986  1FB2  3E01               	addlw	1
 10987  1FB3  0085               	movwf	5
 10988  1FB4  0800               	movf	0,w	;code access
 10989  1FB5  00B7               	movwf	??_TM1650_setDigit
 10990  1FB6  0835               	movf	TM1650_setDigit@dp,w
 10991  1FB7  00B8               	movwf	??_TM1650_setDigit+1
 10992  1FB8  3006               	movlw	6
 10993  1FB9                     u5435:	
 10994  1FB9  35B8               	lslf	??_TM1650_setDigit+1,f
 10995  1FBA  3EFF               	addlw	-1
 10996  1FBB  1D03               	skipz
 10997  1FBC  2FB9               	goto	u5435
 10998  1FBD  3538               	lslf	??_TM1650_setDigit+1,w
 10999  1FBE  0437               	iorwf	??_TM1650_setDigit,w
 11000  1FBF  00B9               	movwf	??_TM1650_setDigit+2
 11001  1FC0  0839               	movf	??_TM1650_setDigit+2,w
 11002  1FC1  00AE               	movwf	writeData@data
 11003  1FC2  083A               	movf	TM1650_setDigit@digit,w
 11004  1FC3  3E34               	addlw	52
 11005  1FC4  319F  27E3         	fcall	_writeData
 11006  1FC6  0008               	return
 11007  1FC7                     __end_of_TM1650_setDigit:	
 11008                           
 11009                           	psect	text28
 11010  1F1C                     __ptext28:	
 11011 ;; *************** function _TM1650_enable *****************
 11012 ;; Defined at:
 11013 ;;		line 56 in file "tm1650.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;  enable          1    wreg     _Bool 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;  enable          1   20[BANK0 ] _Bool 
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  1    wreg      void 
 11020 ;; Registers used:
 11021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11031 ;;Total ram usage:        1 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; Hardware stack levels required when called:    8
 11034 ;; This function calls:
 11035 ;;		_writeData
 11036 ;; This function is called by:
 11037 ;;		_TM1650_init
 11038 ;;		_MENU_task
 11039 ;;		_numControl_Set
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           
 11044                           ;psect for function _TM1650_enable
 11045  1F1C                     _TM1650_enable:	
 11046                           
 11047                           ;incstack = 0
 11048                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11049                           ;TM1650_enable@enable stored from wreg
 11050  1F1C  0140               	movlb	0	; select bank0
 11051  1F1D  00B4               	movwf	TM1650_enable@enable
 11052                           
 11053                           ;tm1650.c: 57:     if(enable) {
 11054  1F1E  0834               	movf	TM1650_enable@enable,w
 11055  1F1F  1903               	btfsc	3,2
 11056  1F20  2F2A               	goto	l5641
 11057                           
 11058                           ;tm1650.c: 58:         writeData(0x24, 1);
 11059  1F21  01AE               	clrf	writeData@data
 11060  1F22  0AAE               	incf	writeData@data,f
 11061  1F23  3024               	movlw	36
 11062  1F24  319F  27E3         	fcall	_writeData
 11063                           
 11064                           ;tm1650.c: 59:         isOn = 1;
 11065  1F26  0142               	movlb	2	; select bank2
 11066  1F27  01D3               	clrf	_isOn^(0+256)
 11067  1F28  0AD3               	incf	_isOn^(0+256),f
 11068                           
 11069                           ;tm1650.c: 60:     } else {
 11070  1F29  0008               	return
 11071  1F2A                     l5641:	
 11072                           
 11073                           ;tm1650.c: 61:         writeData(0x24, 0);
 11074  1F2A  01AE               	clrf	writeData@data
 11075  1F2B  3024               	movlw	36
 11076  1F2C  319F  27E3         	fcall	_writeData
 11077                           
 11078                           ;tm1650.c: 62:         isOn = 0;
 11079  1F2E  0142               	movlb	2	; select bank2
 11080  1F2F  01D3               	clrf	_isOn^(0+256)
 11081  1F30  0008               	return
 11082  1F31                     __end_of_TM1650_enable:	
 11083                           
 11084                           	psect	text29
 11085  1FE3                     __ptext29:	
 11086 ;; *************** function _writeData *****************
 11087 ;; Defined at:
 11088 ;;		line 18 in file "tm1650.c"
 11089 ;; Parameters:    Size  Location     Type
 11090 ;;  address         1    wreg     unsigned char 
 11091 ;;  data            1   14[BANK0 ] unsigned char 
 11092 ;; Auto vars:     Size  Location     Type
 11093 ;;  address         1   18[BANK0 ] unsigned char 
 11094 ;;  status          1   19[BANK0 ] volatile enum E10866
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      void 
 11097 ;; Registers used:
 11098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11104 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11105 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11106 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11107 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11108 ;;Total ram usage:        6 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:    7
 11111 ;; This function calls:
 11112 ;;		_I2C1_MasterWrite
 11113 ;; This function is called by:
 11114 ;;		_TM1650_setDigit
 11115 ;;		_TM1650_enable
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           
 11120                           ;psect for function _writeData
 11121  1FE3                     _writeData:	
 11122                           
 11123                           ;incstack = 0
 11124                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11125                           ;writeData@address stored from wreg
 11126  1FE3  0140               	movlb	0	; select bank0
 11127  1FE4  00B2               	movwf	writeData@address
 11128                           
 11129                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11130  1FE5  3002               	movlw	2
 11131  1FE6  00AF               	movwf	??_writeData
 11132  1FE7  082F               	movf	??_writeData,w
 11133  1FE8  00B3               	movwf	writeData@status	;volatile
 11134                           
 11135                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
 11136  1FE9  01A7               	clrf	I2C1_MasterWrite@length
 11137  1FEA  0AA7               	incf	I2C1_MasterWrite@length,f
 11138  1FEB  0832               	movf	writeData@address,w
 11139  1FEC  00AF               	movwf	??_writeData
 11140  1FED  01B0               	clrf	??_writeData+1
 11141  1FEE  082F               	movf	??_writeData,w
 11142  1FEF  00A8               	movwf	I2C1_MasterWrite@address
 11143  1FF0  0830               	movf	??_writeData+1,w
 11144  1FF1  00A9               	movwf	I2C1_MasterWrite@address+1
 11145  1FF2  3033               	movlw	(low (writeData@status| 0))& (0+255)
 11146  1FF3  00B1               	movwf	??_writeData+2
 11147  1FF4  0831               	movf	??_writeData+2,w
 11148  1FF5  00AA               	movwf	I2C1_MasterWrite@pflag
 11149  1FF6  302E               	movlw	(low (writeData@data| 0))& (0+255)
 11150  1FF7  3191  2136  319F   	fcall	_I2C1_MasterWrite
 11151  1FFA                     l5311:	
 11152                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
 11153                           
 11154  1FFA  3002               	movlw	2
 11155  1FFB  0140               	movlb	0	; select bank0
 11156  1FFC  0633               	xorwf	writeData@status,w	;volatile
 11157  1FFD  1D03               	btfss	3,2
 11158  1FFE  0008               	return
 11159  1FFF  2FFA               	goto	l5311
 11160  2000                     __end_of_writeData:	
 11161                           
 11162                           	psect	text30
 11163  1136                     __ptext30:	
 11164 ;; *************** function _I2C1_MasterWrite *****************
 11165 ;; Defined at:
 11166 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  pdata           1    wreg     PTR unsigned char 
 11169 ;;		 -> writeData@data(1), 
 11170 ;;  length          1    7[BANK0 ] unsigned char 
 11171 ;;  address         2    8[BANK0 ] unsigned short 
 11172 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 11173 ;;		 -> writeData@status(1), 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 11176 ;;		 -> writeData@data(1), 
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11186 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11188 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11189 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11190 ;;Total ram usage:        7 bytes
 11191 ;; Hardware stack levels used:    1
 11192 ;; Hardware stack levels required when called:    6
 11193 ;; This function calls:
 11194 ;;		_I2C1_MasterTRBInsert
 11195 ;;		_I2C1_MasterWriteTRBBuild
 11196 ;; This function is called by:
 11197 ;;		_writeData
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           
 11202                           ;psect for function _I2C1_MasterWrite
 11203  1136                     _I2C1_MasterWrite:	
 11204                           
 11205                           ;incstack = 0
 11206                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11207                           ;I2C1_MasterWrite@pdata stored from wreg
 11208  1136  0140               	movlb	0	; select bank0
 11209  1137  00AD               	movwf	I2C1_MasterWrite@pdata
 11210                           
 11211                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 11212  1138  0142               	movlb	2	; select bank2
 11213  1139  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 11214  113A  2959               	goto	l5305
 11215                           
 11216                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 11217  113B  0140               	movlb	0	; select bank0
 11218  113C  082D               	movf	I2C1_MasterWrite@pdata,w
 11219  113D  00AB               	movwf	??_I2C1_MasterWrite
 11220  113E  082B               	movf	??_I2C1_MasterWrite,w
 11221  113F  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 11222  1140  0827               	movf	I2C1_MasterWrite@length,w
 11223  1141  00AC               	movwf	??_I2C1_MasterWrite+1
 11224  1142  082C               	movf	??_I2C1_MasterWrite+1,w
 11225  1143  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 11226  1144  0829               	movf	I2C1_MasterWrite@address+1,w
 11227  1145  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 11228  1146  0828               	movf	I2C1_MasterWrite@address,w
 11229  1147  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 11230  1148  3059               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 11231  1149  3190  20A1  3191   	fcall	_I2C1_MasterWriteTRBBuild
 11232                           
 11233                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 11234  114C  3059               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 11235  114D  0140               	movlb	0	; select bank0
 11236  114E  00AB               	movwf	??_I2C1_MasterWrite
 11237  114F  082B               	movf	??_I2C1_MasterWrite,w
 11238  1150  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 11239  1151  082A               	movf	I2C1_MasterWrite@pflag,w
 11240  1152  00AC               	movwf	??_I2C1_MasterWrite+1
 11241  1153  082C               	movf	??_I2C1_MasterWrite+1,w
 11242  1154  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 11243  1155  3001               	movlw	1
 11244  1156  3187  279E         	fcall	_I2C1_MasterTRBInsert
 11245                           
 11246                           ;mcc_generated_files/i2c1.c: 613:     }
 11247  1158  0008               	return
 11248  1159                     l5305:	
 11249                           
 11250                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11251  1159  0140               	movlb	0	; select bank0
 11252  115A  082A               	movf	I2C1_MasterWrite@pflag,w
 11253  115B  0086               	movwf	6
 11254  115C  0187               	clrf	7
 11255  115D  0181               	clrf	1
 11256  115E  0A81               	incf	1,f
 11257  115F  0008               	return
 11258  1160                     __end_of_I2C1_MasterWrite:	
 11259                           
 11260                           	psect	text31
 11261  10A1                     __ptext31:	
 11262 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 11263 ;; Defined at:
 11264 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;  ptrb            1    wreg     PTR struct .
 11267 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11268 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 11269 ;;		 -> writeData@data(1), 
 11270 ;;  length          1    1[BANK0 ] unsigned char 
 11271 ;;  address         2    2[BANK0 ] unsigned short 
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;  ptrb            1    6[BANK0 ] PTR struct .
 11274 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11275 ;; Return value:  Size  Location     Type
 11276 ;;                  1    wreg      void 
 11277 ;; Registers used:
 11278 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11279 ;; Tracked objects:
 11280 ;;		On entry : 0/0
 11281 ;;		On exit  : 0/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11287 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11288 ;;Total ram usage:        7 bytes
 11289 ;; Hardware stack levels used:    1
 11290 ;; Hardware stack levels required when called:    4
 11291 ;; This function calls:
 11292 ;;		Nothing
 11293 ;; This function is called by:
 11294 ;;		_I2C1_MasterWrite
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           
 11299                           ;psect for function _I2C1_MasterWriteTRBBuild
 11300  10A1                     _I2C1_MasterWriteTRBBuild:	
 11301                           
 11302                           ;incstack = 0
 11303                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 11304                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 11305  10A1  0140               	movlb	0	; select bank0
 11306  10A2  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 11307                           
 11308                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 11309  10A3  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 11310  10A4  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 11311  10A5  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 11312  10A6  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11313  10A7  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 11314  10A8  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 11315  10A9  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11316  10AA  0086               	movwf	6
 11317  10AB  3001               	movlw	1	; select bank2/3
 11318  10AC  0087               	movwf	7
 11319  10AD  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11320  10AE  3FC0               	movwi [0]fsr1
 11321  10AF  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 11322  10B0  3FC1               	movwi [1]fsr1
 11323                           
 11324                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 11325  10B1  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 11326  10B2  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11327  10B3  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11328  10B4  3E02               	addlw	2
 11329  10B5  0086               	movwf	6
 11330  10B6  3001               	movlw	1	; select bank2/3
 11331  10B7  0087               	movwf	7
 11332  10B8  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11333  10B9  0081               	movwf	1
 11334                           
 11335                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 11336  10BA  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 11337  10BB  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11338  10BC  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11339  10BD  3E03               	addlw	3
 11340  10BE  0086               	movwf	6
 11341  10BF  3001               	movlw	1	; select bank2/3
 11342  10C0  0087               	movwf	7
 11343  10C1  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11344  10C2  0081               	movwf	1
 11345  10C3  0008               	return
 11346  10C4                     __end_of_I2C1_MasterWriteTRBBuild:	
 11347                           
 11348                           	psect	text32
 11349  079E                     __ptext32:	
 11350 ;; *************** function _I2C1_MasterTRBInsert *****************
 11351 ;; Defined at:
 11352 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;  count           1    wreg     unsigned char 
 11355 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 11356 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 11357 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 11358 ;;		 -> writeData@status(1), 
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;  count           1    3[BANK0 ] unsigned char 
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      void 
 11363 ;; Registers used:
 11364 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11372 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11373 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11374 ;;Total ram usage:        4 bytes
 11375 ;; Hardware stack levels used:    1
 11376 ;; Hardware stack levels required when called:    5
 11377 ;; This function calls:
 11378 ;;		_I2C1_WaitForLastPacketToComplete
 11379 ;; This function is called by:
 11380 ;;		_I2C1_MasterWrite
 11381 ;;		_I2C1_MasterRead
 11382 ;; This function uses a non-reentrant model
 11383 ;;
 11384                           
 11385                           
 11386                           ;psect for function _I2C1_MasterTRBInsert
 11387  079E                     _I2C1_MasterTRBInsert:	
 11388                           
 11389                           ;incstack = 0
 11390                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11391                           ;I2C1_MasterTRBInsert@count stored from wreg
 11392  079E  0140               	movlb	0	; select bank0
 11393  079F  00A3               	movwf	I2C1_MasterTRBInsert@count
 11394                           
 11395                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 11396  07A0  0142               	movlb	2	; select bank2
 11397  07A1  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 11398  07A2  2FE0               	goto	l5293
 11399                           
 11400                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 11401  07A3  3002               	movlw	2
 11402  07A4  0140               	movlb	0	; select bank0
 11403  07A5  00A2               	movwf	??_I2C1_MasterTRBInsert
 11404  07A6  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11405  07A7  0086               	movwf	6
 11406  07A8  0187               	clrf	7
 11407  07A9  0822               	movf	??_I2C1_MasterTRBInsert,w
 11408  07AA  0081               	movwf	1
 11409                           
 11410                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11411  07AB  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 11412  07AC  00A2               	movwf	??_I2C1_MasterTRBInsert
 11413  07AD  0142               	movlb	2	; select bank2
 11414  07AE  0A20               	incf	_i2c1_object^(0+256),w
 11415  07AF  0086               	movwf	6
 11416  07B0  3001               	movlw	1	; select bank2/3
 11417  07B1  0087               	movwf	7
 11418  07B2  0140               	movlb	0	; select bank0
 11419  07B3  0822               	movf	??_I2C1_MasterTRBInsert,w
 11420  07B4  0081               	movwf	1
 11421                           
 11422                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 11423  07B5  0823               	movf	I2C1_MasterTRBInsert@count,w
 11424  07B6  00A2               	movwf	??_I2C1_MasterTRBInsert
 11425  07B7  0142               	movlb	2	; select bank2
 11426  07B8  0820               	movf	_i2c1_object^(0+256),w
 11427  07B9  0086               	movwf	6
 11428  07BA  3001               	movlw	1	; select bank2/3
 11429  07BB  0087               	movwf	7
 11430  07BC  0140               	movlb	0	; select bank0
 11431  07BD  0822               	movf	??_I2C1_MasterTRBInsert,w
 11432  07BE  0081               	movwf	1
 11433                           
 11434                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 11435  07BF  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11436  07C0  00A2               	movwf	??_I2C1_MasterTRBInsert
 11437  07C1  0142               	movlb	2	; select bank2
 11438  07C2  0820               	movf	_i2c1_object^(0+256),w
 11439  07C3  3E02               	addlw	2
 11440  07C4  0086               	movwf	6
 11441  07C5  3001               	movlw	1	; select bank2/3
 11442  07C6  0087               	movwf	7
 11443  07C7  0140               	movlb	0	; select bank0
 11444  07C8  0822               	movf	??_I2C1_MasterTRBInsert,w
 11445  07C9  0081               	movwf	1
 11446                           
 11447                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 11448  07CA  3003               	movlw	3
 11449  07CB  00A2               	movwf	??_I2C1_MasterTRBInsert
 11450  07CC  0822               	movf	??_I2C1_MasterTRBInsert,w
 11451  07CD  0142               	movlb	2	; select bank2
 11452  07CE  07A0               	addwf	_i2c1_object^(0+256),f
 11453                           
 11454                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 11455  07CF  0820               	movf	_i2c1_object^(0+256),w
 11456  07D0  3A60               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 11457  07D1  1D03               	skipz
 11458  07D2  2FD9               	goto	l5289
 11459                           
 11460                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 11461  07D3  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 11462  07D4  0140               	movlb	0	; select bank0
 11463  07D5  00A2               	movwf	??_I2C1_MasterTRBInsert
 11464  07D6  0822               	movf	??_I2C1_MasterTRBInsert,w
 11465  07D7  0142               	movlb	2	; select bank2
 11466  07D8  00A0               	movwf	_i2c1_object^(0+256)
 11467  07D9                     l5289:	
 11468                           
 11469                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 11470  07D9  10A2               	bcf	(_i2c1_object^(0+256)+2),1
 11471                           
 11472                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 11473  07DA  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 11474  07DB  0620               	xorwf	_i2c1_object^(0+256),w
 11475  07DC  1D03               	skipz
 11476  07DD  2FE6               	goto	l5295
 11477                           
 11478                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 11479  07DE  1422               	bsf	(_i2c1_object^(0+256)+2),0
 11480  07DF  2FE6               	goto	l5295
 11481  07E0                     l5293:	
 11482                           
 11483                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11484  07E0  0140               	movlb	0	; select bank0
 11485  07E1  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11486  07E2  0086               	movwf	6
 11487  07E3  0187               	clrf	7
 11488  07E4  0181               	clrf	1
 11489  07E5  0A81               	incf	1,f
 11490  07E6                     l5295:	
 11491                           
 11492                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 11493  07E6  0140               	movlb	0	; select bank0
 11494  07E7  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11495  07E8  0086               	movwf	6
 11496  07E9  0187               	clrf	7
 11497  07EA  3002               	movlw	2
 11498  07EB  0601               	xorwf	1,w
 11499  07EC  1D03               	btfss	3,2
 11500  07ED  0008               	return
 11501                           
 11502                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 11503  07EE  319E  261C         	fcall	_I2C1_WaitForLastPacketToComplete
 11504                           
 11505                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 11506  07F0  014E               	movlb	14	; select bank14
 11507  07F1  140F               	bsf	15,0	;volatile
 11508  07F2  0008               	return
 11509  07F3                     __end_of_I2C1_MasterTRBInsert:	
 11510                           
 11511                           	psect	text33
 11512  1E1C                     __ptext33:	
 11513 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 11514 ;; Defined at:
 11515 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;		None
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;		None
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      void 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11533 ;;Total ram usage:        0 bytes
 11534 ;; Hardware stack levels used:    1
 11535 ;; Hardware stack levels required when called:    4
 11536 ;; This function calls:
 11537 ;;		Nothing
 11538 ;; This function is called by:
 11539 ;;		_I2C1_MasterTRBInsert
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           
 11544                           ;psect for function _I2C1_WaitForLastPacketToComplete
 11545  1E1C                     _I2C1_WaitForLastPacketToComplete:	
 11546  1E1C                     l5275:	
 11547                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11548                           
 11549                           ;incstack = 0
 11550                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 11551                           
 11552                           
 11553                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11554  1E1C  0141               	movlb	1	; select bank1
 11555  1E1D  086C               	movf	_i2c1_state^(0+128),w
 11556  1E1E  1903               	btfsc	3,2
 11557  1E1F  0008               	return
 11558  1E20  2E1C               	goto	l5275
 11559  1E21                     __end_of_I2C1_WaitForLastPacketToComplete:	
 11560                           
 11561                           	psect	text34
 11562  1080                     __ptext34:	
 11563 ;; *************** function _BUTTONS_isClicked *****************
 11564 ;; Defined at:
 11565 ;;		line 74 in file "buttons.c"
 11566 ;; Parameters:    Size  Location     Type
 11567 ;;  button          1    wreg     PTR struct .
 11568 ;;		 -> buttons(32), NULL(0), 
 11569 ;; Auto vars:     Size  Location     Type
 11570 ;;  button          1    3[BANK0 ] PTR struct .
 11571 ;;		 -> buttons(32), NULL(0), 
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  2    0[BANK0 ] int 
 11574 ;; Registers used:
 11575 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11576 ;; Tracked objects:
 11577 ;;		On entry : 0/0
 11578 ;;		On exit  : 0/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11581 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11582 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11584 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11585 ;;Total ram usage:        4 bytes
 11586 ;; Hardware stack levels used:    1
 11587 ;; Hardware stack levels required when called:    4
 11588 ;; This function calls:
 11589 ;;		Nothing
 11590 ;; This function is called by:
 11591 ;;		_menuButtons
 11592 ;;		_numControl_Set
 11593 ;; This function uses a non-reentrant model
 11594 ;;
 11595                           
 11596                           
 11597                           ;psect for function _BUTTONS_isClicked
 11598  1080                     _BUTTONS_isClicked:	
 11599                           
 11600                           ;incstack = 0
 11601                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 11602                           ;BUTTONS_isClicked@button stored from wreg
 11603  1080  0140               	movlb	0	; select bank0
 11604  1081  00A3               	movwf	BUTTONS_isClicked@button
 11605                           
 11606                           ;buttons.c: 75:     if (button->event == EVENT_PRESSED) {
 11607  1082  0823               	movf	BUTTONS_isClicked@button,w
 11608  1083  3E05               	addlw	5
 11609  1084  0086               	movwf	6
 11610  1085  3002               	movlw	2	; select bank4/5
 11611  1086  0087               	movwf	7
 11612  1087  0301               	decf	1,w
 11613  1088  1D03               	btfss	3,2
 11614  1089  2895               	goto	l5655
 11615                           
 11616                           ;buttons.c: 76:         button->event = EVENT_IDLE;
 11617  108A  0823               	movf	BUTTONS_isClicked@button,w
 11618  108B  3E05               	addlw	5
 11619  108C  0086               	movwf	6
 11620  108D  3002               	movlw	2	; select bank4/5
 11621  108E  0087               	movwf	7
 11622  108F  0181               	clrf	1
 11623  1090                     l5649:	
 11624                           
 11625                           ;buttons.c: 77:         return 1;
 11626  1090  3001               	movlw	1
 11627  1091  00A0               	movwf	?_BUTTONS_isClicked
 11628  1092  3000               	movlw	0
 11629  1093  00A1               	movwf	?_BUTTONS_isClicked+1
 11630  1094  0008               	return
 11631  1095                     l5655:	
 11632  1095  0823               	movf	BUTTONS_isClicked@button,w
 11633  1096  3E05               	addlw	5
 11634  1097  0086               	movwf	6
 11635  1098  3002               	movlw	2	; select bank4/5
 11636  1099  0087               	movwf	7
 11637  109A  3002               	movlw	2
 11638  109B  0601               	xorwf	1,w
 11639  109C  1903               	btfsc	3,2
 11640  109D  2890               	goto	l5649
 11641                           
 11642                           ;buttons.c: 81:     return 0;
 11643  109E  01A0               	clrf	?_BUTTONS_isClicked
 11644  109F  01A1               	clrf	?_BUTTONS_isClicked+1
 11645  10A0  0008               	return
 11646  10A1                     __end_of_BUTTONS_isClicked:	
 11647                           
 11648                           	psect	text35
 11649  13B9                     __ptext35:	
 11650 ;; *************** function _LED_DMX *****************
 11651 ;; Defined at:
 11652 ;;		line 140 in file "led.c"
 11653 ;; Parameters:    Size  Location     Type
 11654 ;;		None
 11655 ;; Auto vars:     Size  Location     Type
 11656 ;;		None
 11657 ;; Return value:  Size  Location     Type
 11658 ;;                  1    wreg      void 
 11659 ;; Registers used:
 11660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11661 ;; Tracked objects:
 11662 ;;		On entry : 0/0
 11663 ;;		On exit  : 0/0
 11664 ;;		Unchanged: 0/0
 11665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11668 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11669 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11670 ;;Total ram usage:       11 bytes
 11671 ;; Hardware stack levels used:    1
 11672 ;; Hardware stack levels required when called:    5
 11673 ;; This function calls:
 11674 ;;		_LED_setColor
 11675 ;; This function is called by:
 11676 ;;		_MENU_task
 11677 ;; This function uses a non-reentrant model
 11678 ;;
 11679                           
 11680                           
 11681                           ;psect for function _LED_DMX
 11682  13B9                     _LED_DMX:	
 11683                           
 11684                           ;led.c: 141:     LED_setColor(dmxData[address+1], dmxData[address+2], dmxData[address+3]
      +                          , dmxData[address+4]);
 11685                           
 11686                           ;incstack = 0
 11687                           ; Regs used in _LED_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11688  13B9  30F1               	movlw	241
 11689  13BA  0140               	movlb	0	; select bank0
 11690  13BB  00B6               	movwf	??_LED_DMX
 11691  13BC  3025               	movlw	37
 11692  13BD  00B7               	movwf	??_LED_DMX+1
 11693  13BE  0141               	movlb	1	; select bank1
 11694  13BF  086E               	movf	_address^(0+128),w
 11695  13C0  0140               	movlb	0	; select bank0
 11696  13C1  0736               	addwf	??_LED_DMX,w
 11697  13C2  0086               	movwf	6
 11698  13C3  0141               	movlb	1	; select bank1
 11699  13C4  086F               	movf	(_address+1)^(0+128),w
 11700  13C5  0140               	movlb	0	; select bank0
 11701  13C6  3D37               	addwfc	??_LED_DMX+1,w
 11702  13C7  0087               	movwf	7
 11703  13C8  0801               	movf	1,w
 11704  13C9  00B8               	movwf	??_LED_DMX+2
 11705  13CA  0838               	movf	??_LED_DMX+2,w
 11706  13CB  00A0               	movwf	LED_setColor@green
 11707  13CC  30F2               	movlw	242
 11708  13CD  00B9               	movwf	??_LED_DMX+3
 11709  13CE  3025               	movlw	37
 11710  13CF  00BA               	movwf	??_LED_DMX+4
 11711  13D0  0141               	movlb	1	; select bank1
 11712  13D1  086E               	movf	_address^(0+128),w
 11713  13D2  0140               	movlb	0	; select bank0
 11714  13D3  0739               	addwf	??_LED_DMX+3,w
 11715  13D4  0086               	movwf	6
 11716  13D5  0141               	movlb	1	; select bank1
 11717  13D6  086F               	movf	(_address+1)^(0+128),w
 11718  13D7  0140               	movlb	0	; select bank0
 11719  13D8  3D3A               	addwfc	??_LED_DMX+4,w
 11720  13D9  0087               	movwf	7
 11721  13DA  0801               	movf	1,w
 11722  13DB  00BB               	movwf	??_LED_DMX+5
 11723  13DC  083B               	movf	??_LED_DMX+5,w
 11724  13DD  00A1               	movwf	LED_setColor@white
 11725  13DE  30F3               	movlw	243
 11726  13DF  00BC               	movwf	??_LED_DMX+6
 11727  13E0  3025               	movlw	37
 11728  13E1  00BD               	movwf	??_LED_DMX+7
 11729  13E2  0141               	movlb	1	; select bank1
 11730  13E3  086E               	movf	_address^(0+128),w
 11731  13E4  0140               	movlb	0	; select bank0
 11732  13E5  073C               	addwf	??_LED_DMX+6,w
 11733  13E6  0086               	movwf	6
 11734  13E7  0141               	movlb	1	; select bank1
 11735  13E8  086F               	movf	(_address+1)^(0+128),w
 11736  13E9  0140               	movlb	0	; select bank0
 11737  13EA  3D3D               	addwfc	??_LED_DMX+7,w
 11738  13EB  0087               	movwf	7
 11739  13EC  0801               	movf	1,w
 11740  13ED  00BE               	movwf	??_LED_DMX+8
 11741  13EE  083E               	movf	??_LED_DMX+8,w
 11742  13EF  00A2               	movwf	LED_setColor@blue
 11743  13F0  30F0               	movlw	240
 11744  13F1  00BF               	movwf	??_LED_DMX+9
 11745  13F2  3025               	movlw	37
 11746  13F3  00C0               	movwf	??_LED_DMX+10
 11747  13F4  0141               	movlb	1	; select bank1
 11748  13F5  086E               	movf	_address^(0+128),w
 11749  13F6  0140               	movlb	0	; select bank0
 11750  13F7  073F               	addwf	??_LED_DMX+9,w
 11751  13F8  0086               	movwf	6
 11752  13F9  0141               	movlb	1	; select bank1
 11753  13FA  086F               	movf	(_address+1)^(0+128),w
 11754  13FB  0140               	movlb	0	; select bank0
 11755  13FC  3D40               	addwfc	??_LED_DMX+10,w
 11756  13FD  0087               	movwf	7
 11757  13FE  0801               	movf	1,w
 11758  13FF  3192  22EE         	fcall	_LED_setColor
 11759  1401  0008               	return
 11760  1402                     __end_of_LED_DMX:	
 11761                           
 11762                           	psect	text36
 11763  0802                     __ptext36:	
 11764 ;; *************** function _LED_Beat *****************
 11765 ;; Defined at:
 11766 ;;		line 144 in file "led.c"
 11767 ;; Parameters:    Size  Location     Type
 11768 ;;		None
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;		None
 11771 ;; Return value:  Size  Location     Type
 11772 ;;                  1    wreg      void 
 11773 ;; Registers used:
 11774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11775 ;; Tracked objects:
 11776 ;;		On entry : 0/0
 11777 ;;		On exit  : 0/0
 11778 ;;		Unchanged: 0/0
 11779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11784 ;;Total ram usage:        0 bytes
 11785 ;; Hardware stack levels used:    1
 11786 ;; Hardware stack levels required when called:    9
 11787 ;; This function calls:
 11788 ;;		_BEAT_detected
 11789 ;;		_fadeColor
 11790 ;; This function is called by:
 11791 ;;		_MENU_task
 11792 ;; This function uses a non-reentrant model
 11793 ;;
 11794                           
 11795                           
 11796                           ;psect for function _LED_Beat
 11797  0802                     _LED_Beat:	
 11798                           
 11799                           ;led.c: 145:     if(BEAT_detected()) {
 11800                           
 11801                           ;incstack = 0
 11802                           ; Regs used in _LED_Beat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11803  0802  319E  265C  3188   	fcall	_BEAT_detected
 11804  0805  3A00               	xorlw	0
 11805  0806  1903               	skipnz
 11806  0807  280B               	goto	l6003
 11807                           
 11808                           ;led.c: 146:         changeColor = 1;
 11809  0808  0142               	movlb	2	; select bank2
 11810  0809  01C9               	clrf	_changeColor^(0+256)
 11811  080A  0AC9               	incf	_changeColor^(0+256),f
 11812  080B                     l6003:	
 11813                           
 11814                           ;led.c: 148:     if(changeColor) {
 11815  080B  0142               	movlb	2	; select bank2
 11816  080C  0849               	movf	_changeColor^(0+256),w
 11817  080D  1903               	btfsc	3,2
 11818  080E  0008               	return
 11819                           
 11820                           ;led.c: 149:         fadeColor();
 11821  080F  3188  2012         	fcall	_fadeColor
 11822  0811  0008               	return
 11823  0812                     __end_of_LED_Beat:	
 11824                           
 11825                           	psect	text37
 11826  0812                     __ptext37:	
 11827 ;; *************** function _fadeColor *****************
 11828 ;; Defined at:
 11829 ;;		line 116 in file "led.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;		None
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;  time            2   60[BANK1 ] unsigned short 
 11834 ;; Return value:  Size  Location     Type
 11835 ;;                  1    wreg      void 
 11836 ;; Registers used:
 11837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 0/0
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11844 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11845 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11846 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11847 ;;Total ram usage:        4 bytes
 11848 ;; Hardware stack levels used:    1
 11849 ;; Hardware stack levels required when called:    8
 11850 ;; This function calls:
 11851 ;;		_CLOCK_getTime
 11852 ;;		_LED_setHSL
 11853 ;; This function is called by:
 11854 ;;		_LED_Beat
 11855 ;; This function uses a non-reentrant model
 11856 ;;
 11857                           
 11858                           
 11859                           ;psect for function _fadeColor
 11860  0812                     _fadeColor:	
 11861                           
 11862                           ;led.c: 117:     time_t time = CLOCK_getTime();
 11863                           
 11864                           ;incstack = 0
 11865                           ; Regs used in _fadeColor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11866  0812  319E  264A  3188   	fcall	_CLOCK_getTime
 11867  0815  0140               	movlb	0	; select bank0
 11868  0816  0821               	movf	?_CLOCK_getTime+1,w
 11869  0817  0141               	movlb	1	; select bank1
 11870  0818  00DD               	movwf	(fadeColor@time+1)^(0+128)
 11871  0819  0140               	movlb	0	; select bank0
 11872  081A  0820               	movf	?_CLOCK_getTime,w
 11873  081B  0141               	movlb	1	; select bank1
 11874  081C  00DC               	movwf	fadeColor@time^(0+128)
 11875                           
 11876                           ;led.c: 119:     if (time - lastTime < 10)
 11877  081D  0142               	movlb	2	; select bank2
 11878  081E  0835               	movf	led@lastTime^(0+256),w
 11879  081F  0141               	movlb	1	; select bank1
 11880  0820  025C               	subwf	fadeColor@time^(0+128),w
 11881  0821  00DA               	movwf	??_fadeColor^(0+128)
 11882  0822  0142               	movlb	2	; select bank2
 11883  0823  0836               	movf	(led@lastTime+1)^(0+256),w
 11884  0824  0141               	movlb	1	; select bank1
 11885  0825  3B5D               	subwfb	(fadeColor@time+1)^(0+128),w
 11886  0826  00DB               	movwf	(??_fadeColor+1)^(0+128)
 11887  0827  3000               	movlw	0
 11888  0828  025B               	subwf	(??_fadeColor+1)^(0+128),w
 11889  0829  300A               	movlw	10
 11890  082A  1903               	skipnz
 11891  082B  025A               	subwf	??_fadeColor^(0+128),w
 11892  082C  1C03               	btfss	3,0
 11893  082D  0008               	return
 11894                           
 11895                           ;led.c: 122:     lastTime = time;
 11896  082E  085D               	movf	(fadeColor@time+1)^(0+128),w
 11897  082F  0142               	movlb	2	; select bank2
 11898  0830  00B6               	movwf	(led@lastTime+1)^(0+256)
 11899  0831  0141               	movlb	1	; select bank1
 11900  0832  085C               	movf	fadeColor@time^(0+128),w
 11901  0833  0142               	movlb	2	; select bank2
 11902  0834  00B5               	movwf	led@lastTime^(0+256)
 11903                           
 11904                           ;led.c: 124:     if(color.H == 360) {
 11905  0835  3068               	movlw	104
 11906  0836  0143               	movlb	3	; select bank3
 11907  0837  0650               	xorwf	_color^(0+384),w
 11908  0838  1D03               	skipz
 11909  0839  2840               	goto	l5757
 11910  083A  0351               	decf	(_color+1)^(0+384),w
 11911  083B  1D03               	btfss	3,2
 11912  083C  2840               	goto	l5757
 11913                           
 11914                           ;led.c: 125:         color.H = 0;
 11915  083D  01D0               	clrf	_color^(0+384)
 11916  083E  01D1               	clrf	(_color+1)^(0+384)
 11917                           
 11918                           ;led.c: 126:     } else {
 11919  083F  2844               	goto	l1000
 11920  0840                     l5757:	
 11921                           
 11922                           ;led.c: 127:         color.H += 1;
 11923  0840  3001               	movlw	1
 11924  0841  07D0               	addwf	_color^(0+384),f
 11925  0842  3000               	movlw	0
 11926  0843  3DD1               	addwfc	(_color+1)^(0+384),f
 11927  0844                     l1000:	
 11928                           ;led.c: 128:     }
 11929                           
 11930                           
 11931                           ;led.c: 129:     fadeAmmount -= 1;
 11932  0844  30FF               	movlw	255
 11933  0845  0142               	movlb	2	; select bank2
 11934  0846  07E2               	addwf	_fadeAmmount^(0+256),f
 11935  0847  30FF               	movlw	255
 11936  0848  3DE3               	addwfc	(_fadeAmmount+1)^(0+256),f
 11937                           
 11938                           ;led.c: 130:     if(fadeAmmount == 0) {
 11939  0849  0862               	movf	_fadeAmmount^(0+256),w
 11940  084A  0463               	iorwf	(_fadeAmmount+1)^(0+256),w
 11941  084B  1D03               	btfss	3,2
 11942  084C  2852               	goto	l5765
 11943                           
 11944                           ;led.c: 131:         fadeAmmount = 20;
 11945  084D  3014               	movlw	20
 11946  084E  00E2               	movwf	_fadeAmmount^(0+256)
 11947  084F  3000               	movlw	0
 11948  0850  00E3               	movwf	(_fadeAmmount^(0+256)+1)
 11949                           
 11950                           ;led.c: 132:         changeColor = 0;
 11951  0851  01C9               	clrf	_changeColor^(0+256)
 11952  0852                     l5765:	
 11953                           
 11954                           ;led.c: 134:     LED_setHSL(color);
 11955  0852  30D0               	movlw	low _color
 11956  0853  0086               	movwf	6
 11957  0854  3001               	movlw	high _color
 11958  0855  0087               	movwf	7
 11959  0856  30AF               	movlw	low LED_setHSL@hsl
 11960  0857  0084               	movwf	4
 11961  0858  3000               	movlw	high LED_setHSL@hsl
 11962  0859  0085               	movwf	5
 11963  085A  300A               	movlw	10
 11964  085B  0141               	movlb	1	; select bank1
 11965  085C  00DA               	movwf	??_fadeColor^(0+128)
 11966  085D                     u6110:	
 11967  085D  0016               	moviw fsr1++
 11968  085E  001A               	movwi fsr0++
 11969  085F  0BDA               	decfsz	??_fadeColor^(0+128),f
 11970  0860  285D               	goto	u6110
 11971  0861  3180  209A         	fcall	_LED_setHSL
 11972  0863  0008               	return
 11973  0864                     __end_of_fadeColor:	
 11974                           
 11975                           	psect	text38
 11976  009A                     __ptext38:	
 11977 ;; *************** function _LED_setHSL *****************
 11978 ;; Defined at:
 11979 ;;		line 87 in file "led.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;  hsl            10   15[BANK1 ] struct HSL
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;  v2              4   51[BANK1 ] float 
 11984 ;;  hue             4   47[BANK1 ] float 
 11985 ;;  v1              4   43[BANK1 ] float 
 11986 ;;  rgb             3   55[BANK1 ] struct RGB
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      void 
 11989 ;; Registers used:
 11990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11991 ;; Tracked objects:
 11992 ;;		On entry : 0/0
 11993 ;;		On exit  : 0/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11996 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11997 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11998 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11999 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12000 ;;Total ram usage:       43 bytes
 12001 ;; Hardware stack levels used:    1
 12002 ;; Hardware stack levels required when called:    7
 12003 ;; This function calls:
 12004 ;;		_HueToRGB
 12005 ;;		_LED_setColor
 12006 ;;		___fladd
 12007 ;;		___fldiv
 12008 ;;		___fleq
 12009 ;;		___flge
 12010 ;;		___flmul
 12011 ;;		___flsub
 12012 ;;		___fltol
 12013 ;;		___xxtofl
 12014 ;; This function is called by:
 12015 ;;		_fadeColor
 12016 ;;		_cycleColors
 12017 ;;		_pulseColors
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021                           
 12022                           ;psect for function _LED_setHSL
 12023  009A                     _LED_setHSL:	
 12024                           
 12025                           ;led.c: 88:  struct RGB rgb;;led.c: 90:  if (hsl.S == 0)
 12026                           
 12027                           ;incstack = 0
 12028                           ; Regs used in _LED_setHSL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12029  009A  3002               	movlw	2
 12030  009B  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12031  009C  0086               	movwf	6
 12032  009D  0187               	clrf	7
 12033  009E  3F40               	moviw [0]fsr1
 12034  009F  0140               	movlb	0	; select bank0
 12035  00A0  00A0               	movwf	___fleq@ff1
 12036  00A1  3F41               	moviw [1]fsr1
 12037  00A2  00A1               	movwf	___fleq@ff1+1
 12038  00A3  3F42               	moviw [2]fsr1
 12039  00A4  00A2               	movwf	___fleq@ff1+2
 12040  00A5  3F43               	moviw [3]fsr1
 12041  00A6  00A3               	movwf	___fleq@ff1+3
 12042  00A7  3000               	movlw	0
 12043  00A8  00A7               	movwf	___fleq@ff2+3
 12044  00A9  3000               	movlw	0
 12045  00AA  00A6               	movwf	___fleq@ff2+2
 12046  00AB  3000               	movlw	0
 12047  00AC  00A5               	movwf	___fleq@ff2+1
 12048  00AD  3000               	movlw	0
 12049  00AE  00A4               	movwf	___fleq@ff2
 12050  00AF  3193  2370  3180   	fcall	___fleq
 12051  00B2  1C03               	btfss	3,0
 12052  00B3  28F2               	goto	l5669
 12053                           
 12054                           ;led.c: 91:  {;led.c: 92:   rgb.R = rgb.G = rgb.B = (unsigned char)(hsl.L * 255);
 12055  00B4  3001               	movlw	1
 12056  00B5  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 12057  00B6  0086               	movwf	6
 12058  00B7  0187               	clrf	7
 12059  00B8  3002               	movlw	2
 12060  00B9  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 12061  00BA  0084               	movwf	4
 12062  00BB  0185               	clrf	5
 12063  00BC  0141               	movlb	1	; select bank1
 12064  00BD  0838               	movf	((LED_setHSL@hsl+3)^(0+128)+6),w
 12065  00BE  0140               	movlb	0	; select bank0
 12066  00BF  00C4               	movwf	___flmul@a+3
 12067  00C0  0141               	movlb	1	; select bank1
 12068  00C1  0837               	movf	((LED_setHSL@hsl+2)^(0+128)+6),w
 12069  00C2  0140               	movlb	0	; select bank0
 12070  00C3  00C3               	movwf	___flmul@a+2
 12071  00C4  0141               	movlb	1	; select bank1
 12072  00C5  0836               	movf	((LED_setHSL@hsl+1)^(0+128)+6),w
 12073  00C6  0140               	movlb	0	; select bank0
 12074  00C7  00C2               	movwf	___flmul@a+1
 12075  00C8  0141               	movlb	1	; select bank1
 12076  00C9  0835               	movf	(LED_setHSL@hsl^(0+128)+6),w
 12077  00CA  0140               	movlb	0	; select bank0
 12078  00CB  00C1               	movwf	___flmul@a
 12079  00CC  3043               	movlw	67
 12080  00CD  00C0               	movwf	___flmul@b+3
 12081  00CE  307F               	movlw	127
 12082  00CF  00BF               	movwf	___flmul@b+2
 12083  00D0  3000               	movlw	0
 12084  00D1  00BE               	movwf	___flmul@b+1
 12085  00D2  3000               	movlw	0
 12086  00D3  00BD               	movwf	___flmul@b
 12087  00D4  3183  23F8  3180   	fcall	___flmul
 12088  00D7  0140               	movlb	0	; select bank0
 12089  00D8  0840               	movf	?___flmul+3,w
 12090  00D9  0141               	movlb	1	; select bank1
 12091  00DA  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12092  00DB  0140               	movlb	0	; select bank0
 12093  00DC  083F               	movf	?___flmul+2,w
 12094  00DD  0141               	movlb	1	; select bank1
 12095  00DE  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12096  00DF  0140               	movlb	0	; select bank0
 12097  00E0  083E               	movf	?___flmul+1,w
 12098  00E1  0141               	movlb	1	; select bank1
 12099  00E2  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12100  00E3  0140               	movlb	0	; select bank0
 12101  00E4  083D               	movf	?___flmul,w
 12102  00E5  0141               	movlb	1	; select bank1
 12103  00E6  00A4               	movwf	___fltol@f1^(0+128)
 12104  00E7  3194  244D  3180   	fcall	___fltol
 12105  00EA  0141               	movlb	1	; select bank1
 12106  00EB  0824               	movf	?___fltol^(0+128),w
 12107  00EC  3F80               	movwi [0]fsr0
 12108  00ED  3FC0               	movwi [0]fsr1
 12109  00EE  00B9               	movwf	??_LED_setHSL^(0+128)
 12110  00EF  0839               	movf	??_LED_setHSL^(0+128),w
 12111  00F0  00D7               	movwf	LED_setHSL@rgb^(0+128)
 12112                           
 12113                           ;led.c: 93:  }
 12114  00F1  2BE7               	goto	l5693
 12115  00F2                     l5669:	
 12116                           
 12117                           ;led.c: 95:  {;led.c: 96:   float v1, v2;;led.c: 97:   float hue = (float)hsl.H / 360;
 12118  00F2  3043               	movlw	67
 12119  00F3  0140               	movlb	0	; select bank0
 12120  00F4  00B1               	movwf	___fldiv@a+3
 12121  00F5  30B4               	movlw	180
 12122  00F6  00B0               	movwf	___fldiv@a+2
 12123  00F7  3000               	movlw	0
 12124  00F8  00AF               	movwf	___fldiv@a+1
 12125  00F9  3000               	movlw	0
 12126  00FA  00AE               	movwf	___fldiv@a
 12127  00FB  0141               	movlb	1	; select bank1
 12128  00FC  082F               	movf	LED_setHSL@hsl^(0+128),w
 12129  00FD  0140               	movlb	0	; select bank0
 12130  00FE  00A0               	movwf	___xxtofl@val
 12131  00FF  0141               	movlb	1	; select bank1
 12132  0100  0830               	movf	(LED_setHSL@hsl+1)^(0+128),w
 12133  0101  0140               	movlb	0	; select bank0
 12134  0102  00A1               	movwf	___xxtofl@val+1
 12135  0103  0D89               	rlf	9,f
 12136  0104  3B89               	subwfb	9,f
 12137  0105  0989               	comf	9,f
 12138  0106  00A2               	movwf	___xxtofl@val+2
 12139  0107  00A3               	movwf	___xxtofl@val+3
 12140  0108  3001               	movlw	1
 12141  0109  3196  26B6  3180   	fcall	___xxtofl
 12142  010C  0140               	movlb	0	; select bank0
 12143  010D  0823               	movf	?___xxtofl+3,w
 12144  010E  00B5               	movwf	___fldiv@b+3
 12145  010F  0822               	movf	?___xxtofl+2,w
 12146  0110  00B4               	movwf	___fldiv@b+2
 12147  0111  0821               	movf	?___xxtofl+1,w
 12148  0112  00B3               	movwf	___fldiv@b+1
 12149  0113  0820               	movf	?___xxtofl,w
 12150  0114  00B2               	movwf	___fldiv@b
 12151  0115  3186  2624  3180   	fcall	___fldiv
 12152  0118  0140               	movlb	0	; select bank0
 12153  0119  0831               	movf	?___fldiv+3,w
 12154  011A  0141               	movlb	1	; select bank1
 12155  011B  00D2               	movwf	(LED_setHSL@hue+3)^(0+128)
 12156  011C  0140               	movlb	0	; select bank0
 12157  011D  0830               	movf	?___fldiv+2,w
 12158  011E  0141               	movlb	1	; select bank1
 12159  011F  00D1               	movwf	(LED_setHSL@hue+2)^(0+128)
 12160  0120  0140               	movlb	0	; select bank0
 12161  0121  082F               	movf	?___fldiv+1,w
 12162  0122  0141               	movlb	1	; select bank1
 12163  0123  00D0               	movwf	(LED_setHSL@hue+1)^(0+128)
 12164  0124  0140               	movlb	0	; select bank0
 12165  0125  082E               	movf	?___fldiv,w
 12166  0126  0141               	movlb	1	; select bank1
 12167  0127  00CF               	movwf	LED_setHSL@hue^(0+128)
 12168                           
 12169                           ;led.c: 99:   v2 = (hsl.L < 0.5) ? (hsl.L * (1 + hsl.S)) : ((hsl.L + hsl.S) - (hsl.L * h
      +                          sl.S));
 12170  0128  3006               	movlw	6
 12171  0129  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12172  012A  0086               	movwf	6
 12173  012B  0187               	clrf	7
 12174  012C  3F40               	moviw [0]fsr1
 12175  012D  0140               	movlb	0	; select bank0
 12176  012E  00D7               	movwf	___flge@ff1
 12177  012F  3F41               	moviw [1]fsr1
 12178  0130  00D8               	movwf	___flge@ff1+1
 12179  0131  3F42               	moviw [2]fsr1
 12180  0132  00D9               	movwf	___flge@ff1+2
 12181  0133  3F43               	moviw [3]fsr1
 12182  0134  00DA               	movwf	___flge@ff1+3
 12183  0135  303F               	movlw	63
 12184  0136  00DE               	movwf	___flge@ff2+3
 12185  0137  3000               	movlw	0
 12186  0138  00DD               	movwf	___flge@ff2+2
 12187  0139  3000               	movlw	0
 12188  013A  00DC               	movwf	___flge@ff2+1
 12189  013B  3000               	movlw	0
 12190  013C  00DB               	movwf	___flge@ff2
 12191  013D  3195  252D  3180   	fcall	___flge
 12192  0140  1C03               	btfss	3,0
 12193  0141  29B5               	goto	l5675
 12194  0142  3002               	movlw	2
 12195  0143  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12196  0144  0086               	movwf	6
 12197  0145  0187               	clrf	7
 12198  0146  3F40               	moviw [0]fsr1
 12199  0147  0140               	movlb	0	; select bank0
 12200  0148  00A9               	movwf	___fladd@b
 12201  0149  3F41               	moviw [1]fsr1
 12202  014A  00AA               	movwf	___fladd@b+1
 12203  014B  3F42               	moviw [2]fsr1
 12204  014C  00AB               	movwf	___fladd@b+2
 12205  014D  3F43               	moviw [3]fsr1
 12206  014E  00AC               	movwf	___fladd@b+3
 12207  014F  3006               	movlw	6
 12208  0150  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12209  0151  0086               	movwf	6
 12210  0152  0187               	clrf	7
 12211  0153  3F40               	moviw [0]fsr1
 12212  0154  00AD               	movwf	___fladd@a
 12213  0155  3F41               	moviw [1]fsr1
 12214  0156  00AE               	movwf	___fladd@a+1
 12215  0157  3F42               	moviw [2]fsr1
 12216  0158  00AF               	movwf	___fladd@a+2
 12217  0159  3F43               	moviw [3]fsr1
 12218  015A  00B0               	movwf	___fladd@a+3
 12219  015B  318C  243A  3180   	fcall	___fladd
 12220  015E  0140               	movlb	0	; select bank0
 12221  015F  082C               	movf	?___fladd+3,w
 12222  0160  0141               	movlb	1	; select bank1
 12223  0161  00BE               	movwf	(_LED_setHSL$2872+3)^(0+128)
 12224  0162  0140               	movlb	0	; select bank0
 12225  0163  082B               	movf	?___fladd+2,w
 12226  0164  0141               	movlb	1	; select bank1
 12227  0165  00BD               	movwf	(_LED_setHSL$2872+2)^(0+128)
 12228  0166  0140               	movlb	0	; select bank0
 12229  0167  082A               	movf	?___fladd+1,w
 12230  0168  0141               	movlb	1	; select bank1
 12231  0169  00BC               	movwf	(_LED_setHSL$2872+1)^(0+128)
 12232  016A  0140               	movlb	0	; select bank0
 12233  016B  0829               	movf	?___fladd,w
 12234  016C  0141               	movlb	1	; select bank1
 12235  016D  00BB               	movwf	_LED_setHSL$2872^(0+128)
 12236  016E  3002               	movlw	2
 12237  016F  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12238  0170  0086               	movwf	6
 12239  0171  0187               	clrf	7
 12240  0172  3F40               	moviw [0]fsr1
 12241  0173  0140               	movlb	0	; select bank0
 12242  0174  00BD               	movwf	___flmul@b
 12243  0175  3F41               	moviw [1]fsr1
 12244  0176  00BE               	movwf	___flmul@b+1
 12245  0177  3F42               	moviw [2]fsr1
 12246  0178  00BF               	movwf	___flmul@b+2
 12247  0179  3F43               	moviw [3]fsr1
 12248  017A  00C0               	movwf	___flmul@b+3
 12249  017B  3006               	movlw	6
 12250  017C  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12251  017D  0086               	movwf	6
 12252  017E  0187               	clrf	7
 12253  017F  3F40               	moviw [0]fsr1
 12254  0180  00C1               	movwf	___flmul@a
 12255  0181  3F41               	moviw [1]fsr1
 12256  0182  00C2               	movwf	___flmul@a+1
 12257  0183  3F42               	moviw [2]fsr1
 12258  0184  00C3               	movwf	___flmul@a+2
 12259  0185  3F43               	moviw [3]fsr1
 12260  0186  00C4               	movwf	___flmul@a+3
 12261  0187  3183  23F8  3180   	fcall	___flmul
 12262  018A  0140               	movlb	0	; select bank0
 12263  018B  0840               	movf	?___flmul+3,w
 12264  018C  00DA               	movwf	___flsub@a+3
 12265  018D  083F               	movf	?___flmul+2,w
 12266  018E  00D9               	movwf	___flsub@a+2
 12267  018F  083E               	movf	?___flmul+1,w
 12268  0190  00D8               	movwf	___flsub@a+1
 12269  0191  083D               	movf	?___flmul,w
 12270  0192  00D7               	movwf	___flsub@a
 12271  0193  0141               	movlb	1	; select bank1
 12272  0194  083E               	movf	(_LED_setHSL$2872+3)^(0+128),w
 12273  0195  0140               	movlb	0	; select bank0
 12274  0196  00DE               	movwf	___flsub@b+3
 12275  0197  0141               	movlb	1	; select bank1
 12276  0198  083D               	movf	(_LED_setHSL$2872+2)^(0+128),w
 12277  0199  0140               	movlb	0	; select bank0
 12278  019A  00DD               	movwf	___flsub@b+2
 12279  019B  0141               	movlb	1	; select bank1
 12280  019C  083C               	movf	(_LED_setHSL$2872+1)^(0+128),w
 12281  019D  0140               	movlb	0	; select bank0
 12282  019E  00DC               	movwf	___flsub@b+1
 12283  019F  0141               	movlb	1	; select bank1
 12284  01A0  083B               	movf	_LED_setHSL$2872^(0+128),w
 12285  01A1  0140               	movlb	0	; select bank0
 12286  01A2  00DB               	movwf	___flsub@b
 12287  01A3  3190  2021  3180   	fcall	___flsub
 12288  01A6  0140               	movlb	0	; select bank0
 12289  01A7  085A               	movf	?___flsub+3,w
 12290  01A8  0141               	movlb	1	; select bank1
 12291  01A9  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12292  01AA  0140               	movlb	0	; select bank0
 12293  01AB  0859               	movf	?___flsub+2,w
 12294  01AC  0141               	movlb	1	; select bank1
 12295  01AD  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12296  01AE  0140               	movlb	0	; select bank0
 12297  01AF  0858               	movf	?___flsub+1,w
 12298  01B0  0141               	movlb	1	; select bank1
 12299  01B1  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12300  01B2  0140               	movlb	0	; select bank0
 12301  01B3  0857               	movf	?___flsub,w
 12302  01B4  29F3               	goto	L2
 12303  01B5                     l5675:	
 12304  01B5  3006               	movlw	6
 12305  01B6  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12306  01B7  0086               	movwf	6
 12307  01B8  0187               	clrf	7
 12308  01B9  3F40               	moviw [0]fsr1
 12309  01BA  0140               	movlb	0	; select bank0
 12310  01BB  00BD               	movwf	___flmul@b
 12311  01BC  3F41               	moviw [1]fsr1
 12312  01BD  00BE               	movwf	___flmul@b+1
 12313  01BE  3F42               	moviw [2]fsr1
 12314  01BF  00BF               	movwf	___flmul@b+2
 12315  01C0  3F43               	moviw [3]fsr1
 12316  01C1  00C0               	movwf	___flmul@b+3
 12317  01C2  303F               	movlw	63
 12318  01C3  00AC               	movwf	___fladd@b+3
 12319  01C4  3080               	movlw	128
 12320  01C5  00AB               	movwf	___fladd@b+2
 12321  01C6  3000               	movlw	0
 12322  01C7  00AA               	movwf	___fladd@b+1
 12323  01C8  3000               	movlw	0
 12324  01C9  00A9               	movwf	___fladd@b
 12325  01CA  3002               	movlw	2
 12326  01CB  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12327  01CC  0086               	movwf	6
 12328  01CD  0187               	clrf	7
 12329  01CE  3F40               	moviw [0]fsr1
 12330  01CF  00AD               	movwf	___fladd@a
 12331  01D0  3F41               	moviw [1]fsr1
 12332  01D1  00AE               	movwf	___fladd@a+1
 12333  01D2  3F42               	moviw [2]fsr1
 12334  01D3  00AF               	movwf	___fladd@a+2
 12335  01D4  3F43               	moviw [3]fsr1
 12336  01D5  00B0               	movwf	___fladd@a+3
 12337  01D6  318C  243A  3180   	fcall	___fladd
 12338  01D9  0140               	movlb	0	; select bank0
 12339  01DA  082C               	movf	?___fladd+3,w
 12340  01DB  00C4               	movwf	___flmul@a+3
 12341  01DC  082B               	movf	?___fladd+2,w
 12342  01DD  00C3               	movwf	___flmul@a+2
 12343  01DE  082A               	movf	?___fladd+1,w
 12344  01DF  00C2               	movwf	___flmul@a+1
 12345  01E0  0829               	movf	?___fladd,w
 12346  01E1  00C1               	movwf	___flmul@a
 12347  01E2  3183  23F8  3180   	fcall	___flmul
 12348  01E5  0140               	movlb	0	; select bank0
 12349  01E6  0840               	movf	?___flmul+3,w
 12350  01E7  0141               	movlb	1	; select bank1
 12351  01E8  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12352  01E9  0140               	movlb	0	; select bank0
 12353  01EA  083F               	movf	?___flmul+2,w
 12354  01EB  0141               	movlb	1	; select bank1
 12355  01EC  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12356  01ED  0140               	movlb	0	; select bank0
 12357  01EE  083E               	movf	?___flmul+1,w
 12358  01EF  0141               	movlb	1	; select bank1
 12359  01F0  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12360  01F1  0140               	movlb	0	; select bank0
 12361  01F2  083D               	movf	?___flmul,w
 12362  01F3                     L2:	
 12363  01F3  0141               	movlb	1	; select bank1
 12364  01F4  00D3               	movwf	LED_setHSL@v2^(0+128)
 12365                           
 12366                           ;led.c: 100:   v1 = 2 * hsl.L - v2;
 12367  01F5  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12368  01F6  0140               	movlb	0	; select bank0
 12369  01F7  00DA               	movwf	___flsub@a+3
 12370  01F8  0141               	movlb	1	; select bank1
 12371  01F9  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12372  01FA  0140               	movlb	0	; select bank0
 12373  01FB  00D9               	movwf	___flsub@a+2
 12374  01FC  0141               	movlb	1	; select bank1
 12375  01FD  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12376  01FE  0140               	movlb	0	; select bank0
 12377  01FF  00D8               	movwf	___flsub@a+1
 12378  0200  0141               	movlb	1	; select bank1
 12379  0201  0853               	movf	LED_setHSL@v2^(0+128),w
 12380  0202  0140               	movlb	0	; select bank0
 12381  0203  00D7               	movwf	___flsub@a
 12382  0204  3040               	movlw	64
 12383  0205  00C0               	movwf	___flmul@b+3
 12384  0206  3000               	movlw	0
 12385  0207  00BF               	movwf	___flmul@b+2
 12386  0208  3000               	movlw	0
 12387  0209  00BE               	movwf	___flmul@b+1
 12388  020A  3000               	movlw	0
 12389  020B  00BD               	movwf	___flmul@b
 12390  020C  3006               	movlw	6
 12391  020D  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12392  020E  0086               	movwf	6
 12393  020F  0187               	clrf	7
 12394  0210  3F40               	moviw [0]fsr1
 12395  0211  00C1               	movwf	___flmul@a
 12396  0212  3F41               	moviw [1]fsr1
 12397  0213  00C2               	movwf	___flmul@a+1
 12398  0214  3F42               	moviw [2]fsr1
 12399  0215  00C3               	movwf	___flmul@a+2
 12400  0216  3F43               	moviw [3]fsr1
 12401  0217  00C4               	movwf	___flmul@a+3
 12402  0218  3183  23F8  3180   	fcall	___flmul
 12403  021B  0140               	movlb	0	; select bank0
 12404  021C  0840               	movf	?___flmul+3,w
 12405  021D  00DE               	movwf	___flsub@b+3
 12406  021E  083F               	movf	?___flmul+2,w
 12407  021F  00DD               	movwf	___flsub@b+2
 12408  0220  083E               	movf	?___flmul+1,w
 12409  0221  00DC               	movwf	___flsub@b+1
 12410  0222  083D               	movf	?___flmul,w
 12411  0223  00DB               	movwf	___flsub@b
 12412  0224  3190  2021  3180   	fcall	___flsub
 12413  0227  0140               	movlb	0	; select bank0
 12414  0228  085A               	movf	?___flsub+3,w
 12415  0229  0141               	movlb	1	; select bank1
 12416  022A  00CE               	movwf	(LED_setHSL@v1+3)^(0+128)
 12417  022B  0140               	movlb	0	; select bank0
 12418  022C  0859               	movf	?___flsub+2,w
 12419  022D  0141               	movlb	1	; select bank1
 12420  022E  00CD               	movwf	(LED_setHSL@v1+2)^(0+128)
 12421  022F  0140               	movlb	0	; select bank0
 12422  0230  0858               	movf	?___flsub+1,w
 12423  0231  0141               	movlb	1	; select bank1
 12424  0232  00CC               	movwf	(LED_setHSL@v1+1)^(0+128)
 12425  0233  0140               	movlb	0	; select bank0
 12426  0234  0857               	movf	?___flsub,w
 12427  0235  0141               	movlb	1	; select bank1
 12428  0236  00CB               	movwf	LED_setHSL@v1^(0+128)
 12429                           
 12430                           ;led.c: 102:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12431  0237  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12432  0238  0140               	movlb	0	; select bank0
 12433  0239  00B0               	movwf	___fladd@a+3
 12434  023A  0141               	movlb	1	; select bank1
 12435  023B  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12436  023C  0140               	movlb	0	; select bank0
 12437  023D  00AF               	movwf	___fladd@a+2
 12438  023E  0141               	movlb	1	; select bank1
 12439  023F  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12440  0240  0140               	movlb	0	; select bank0
 12441  0241  00AE               	movwf	___fladd@a+1
 12442  0242  0141               	movlb	1	; select bank1
 12443  0243  084F               	movf	LED_setHSL@hue^(0+128),w
 12444  0244  0140               	movlb	0	; select bank0
 12445  0245  00AD               	movwf	___fladd@a
 12446  0246  303E               	movlw	62
 12447  0247  00AC               	movwf	___fladd@b+3
 12448  0248  30AA               	movlw	170
 12449  0249  00AB               	movwf	___fladd@b+2
 12450  024A  30AA               	movlw	170
 12451  024B  00AA               	movwf	___fladd@b+1
 12452  024C  30AB               	movlw	171
 12453  024D  00A9               	movwf	___fladd@b
 12454  024E  318C  243A  3180   	fcall	___fladd
 12455  0251  0140               	movlb	0	; select bank0
 12456  0252  082C               	movf	?___fladd+3,w
 12457  0253  0141               	movlb	1	; select bank1
 12458  0254  00C6               	movwf	(_LED_setHSL$2873+3)^(0+128)
 12459  0255  0140               	movlb	0	; select bank0
 12460  0256  082B               	movf	?___fladd+2,w
 12461  0257  0141               	movlb	1	; select bank1
 12462  0258  00C5               	movwf	(_LED_setHSL$2873+2)^(0+128)
 12463  0259  0140               	movlb	0	; select bank0
 12464  025A  082A               	movf	?___fladd+1,w
 12465  025B  0141               	movlb	1	; select bank1
 12466  025C  00C4               	movwf	(_LED_setHSL$2873+1)^(0+128)
 12467  025D  0140               	movlb	0	; select bank0
 12468  025E  0829               	movf	?___fladd,w
 12469  025F  0141               	movlb	1	; select bank1
 12470  0260  00C3               	movwf	_LED_setHSL$2873^(0+128)
 12471                           
 12472                           ;led.c: 102:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12473  0261  0846               	movf	(_LED_setHSL$2873+3)^(0+128),w
 12474  0262  0140               	movlb	0	; select bank0
 12475  0263  00EE               	movwf	HueToRGB@vH+3
 12476  0264  0141               	movlb	1	; select bank1
 12477  0265  0845               	movf	(_LED_setHSL$2873+2)^(0+128),w
 12478  0266  0140               	movlb	0	; select bank0
 12479  0267  00ED               	movwf	HueToRGB@vH+2
 12480  0268  0141               	movlb	1	; select bank1
 12481  0269  0844               	movf	(_LED_setHSL$2873+1)^(0+128),w
 12482  026A  0140               	movlb	0	; select bank0
 12483  026B  00EC               	movwf	HueToRGB@vH+1
 12484  026C  0141               	movlb	1	; select bank1
 12485  026D  0843               	movf	_LED_setHSL$2873^(0+128),w
 12486  026E  0140               	movlb	0	; select bank0
 12487  026F  00EB               	movwf	HueToRGB@vH
 12488  0270  0141               	movlb	1	; select bank1
 12489  0271  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12490  0272  0140               	movlb	0	; select bank0
 12491  0273  00EA               	movwf	HueToRGB@v2+3
 12492  0274  0141               	movlb	1	; select bank1
 12493  0275  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12494  0276  0140               	movlb	0	; select bank0
 12495  0277  00E9               	movwf	HueToRGB@v2+2
 12496  0278  0141               	movlb	1	; select bank1
 12497  0279  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12498  027A  0140               	movlb	0	; select bank0
 12499  027B  00E8               	movwf	HueToRGB@v2+1
 12500  027C  0141               	movlb	1	; select bank1
 12501  027D  0853               	movf	LED_setHSL@v2^(0+128),w
 12502  027E  0140               	movlb	0	; select bank0
 12503  027F  00E7               	movwf	HueToRGB@v2
 12504  0280  0141               	movlb	1	; select bank1
 12505  0281  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12506  0282  0140               	movlb	0	; select bank0
 12507  0283  00E6               	movwf	HueToRGB@v1+3
 12508  0284  0141               	movlb	1	; select bank1
 12509  0285  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12510  0286  0140               	movlb	0	; select bank0
 12511  0287  00E5               	movwf	HueToRGB@v1+2
 12512  0288  0141               	movlb	1	; select bank1
 12513  0289  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12514  028A  0140               	movlb	0	; select bank0
 12515  028B  00E4               	movwf	HueToRGB@v1+1
 12516  028C  0141               	movlb	1	; select bank1
 12517  028D  084B               	movf	LED_setHSL@v1^(0+128),w
 12518  028E  0140               	movlb	0	; select bank0
 12519  028F  00E3               	movwf	HueToRGB@v1
 12520  0290  318E  261C  3180   	fcall	_HueToRGB
 12521  0293  0140               	movlb	0	; select bank0
 12522  0294  0866               	movf	?_HueToRGB+3,w
 12523  0295  0141               	movlb	1	; select bank1
 12524  0296  00CA               	movwf	(_LED_setHSL$2874+3)^(0+128)
 12525  0297  0140               	movlb	0	; select bank0
 12526  0298  0865               	movf	?_HueToRGB+2,w
 12527  0299  0141               	movlb	1	; select bank1
 12528  029A  00C9               	movwf	(_LED_setHSL$2874+2)^(0+128)
 12529  029B  0140               	movlb	0	; select bank0
 12530  029C  0864               	movf	?_HueToRGB+1,w
 12531  029D  0141               	movlb	1	; select bank1
 12532  029E  00C8               	movwf	(_LED_setHSL$2874+1)^(0+128)
 12533  029F  0140               	movlb	0	; select bank0
 12534  02A0  0863               	movf	?_HueToRGB,w
 12535  02A1  0141               	movlb	1	; select bank1
 12536  02A2  00C7               	movwf	_LED_setHSL$2874^(0+128)
 12537                           
 12538                           ;led.c: 102:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12539  02A3  084A               	movf	(_LED_setHSL$2874+3)^(0+128),w
 12540  02A4  0140               	movlb	0	; select bank0
 12541  02A5  00C4               	movwf	___flmul@a+3
 12542  02A6  0141               	movlb	1	; select bank1
 12543  02A7  0849               	movf	(_LED_setHSL$2874+2)^(0+128),w
 12544  02A8  0140               	movlb	0	; select bank0
 12545  02A9  00C3               	movwf	___flmul@a+2
 12546  02AA  0141               	movlb	1	; select bank1
 12547  02AB  0848               	movf	(_LED_setHSL$2874+1)^(0+128),w
 12548  02AC  0140               	movlb	0	; select bank0
 12549  02AD  00C2               	movwf	___flmul@a+1
 12550  02AE  0141               	movlb	1	; select bank1
 12551  02AF  0847               	movf	_LED_setHSL$2874^(0+128),w
 12552  02B0  0140               	movlb	0	; select bank0
 12553  02B1  00C1               	movwf	___flmul@a
 12554  02B2  3043               	movlw	67
 12555  02B3  00C0               	movwf	___flmul@b+3
 12556  02B4  307F               	movlw	127
 12557  02B5  00BF               	movwf	___flmul@b+2
 12558  02B6  3000               	movlw	0
 12559  02B7  00BE               	movwf	___flmul@b+1
 12560  02B8  3000               	movlw	0
 12561  02B9  00BD               	movwf	___flmul@b
 12562  02BA  3183  23F8  3180   	fcall	___flmul
 12563  02BD  0140               	movlb	0	; select bank0
 12564  02BE  0840               	movf	?___flmul+3,w
 12565  02BF  0141               	movlb	1	; select bank1
 12566  02C0  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12567  02C1  0140               	movlb	0	; select bank0
 12568  02C2  083F               	movf	?___flmul+2,w
 12569  02C3  0141               	movlb	1	; select bank1
 12570  02C4  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12571  02C5  0140               	movlb	0	; select bank0
 12572  02C6  083E               	movf	?___flmul+1,w
 12573  02C7  0141               	movlb	1	; select bank1
 12574  02C8  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12575  02C9  0140               	movlb	0	; select bank0
 12576  02CA  083D               	movf	?___flmul,w
 12577  02CB  0141               	movlb	1	; select bank1
 12578  02CC  00A4               	movwf	___fltol@f1^(0+128)
 12579  02CD  3194  244D  3180   	fcall	___fltol
 12580  02D0  0141               	movlb	1	; select bank1
 12581  02D1  0824               	movf	?___fltol^(0+128),w
 12582  02D2  00B9               	movwf	??_LED_setHSL^(0+128)
 12583  02D3  0839               	movf	??_LED_setHSL^(0+128),w
 12584  02D4  00D7               	movwf	LED_setHSL@rgb^(0+128)
 12585                           
 12586                           ;led.c: 103:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12587  02D5  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12588  02D6  0140               	movlb	0	; select bank0
 12589  02D7  00EE               	movwf	HueToRGB@vH+3
 12590  02D8  0141               	movlb	1	; select bank1
 12591  02D9  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12592  02DA  0140               	movlb	0	; select bank0
 12593  02DB  00ED               	movwf	HueToRGB@vH+2
 12594  02DC  0141               	movlb	1	; select bank1
 12595  02DD  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12596  02DE  0140               	movlb	0	; select bank0
 12597  02DF  00EC               	movwf	HueToRGB@vH+1
 12598  02E0  0141               	movlb	1	; select bank1
 12599  02E1  084F               	movf	LED_setHSL@hue^(0+128),w
 12600  02E2  0140               	movlb	0	; select bank0
 12601  02E3  00EB               	movwf	HueToRGB@vH
 12602  02E4  0141               	movlb	1	; select bank1
 12603  02E5  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12604  02E6  0140               	movlb	0	; select bank0
 12605  02E7  00EA               	movwf	HueToRGB@v2+3
 12606  02E8  0141               	movlb	1	; select bank1
 12607  02E9  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12608  02EA  0140               	movlb	0	; select bank0
 12609  02EB  00E9               	movwf	HueToRGB@v2+2
 12610  02EC  0141               	movlb	1	; select bank1
 12611  02ED  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12612  02EE  0140               	movlb	0	; select bank0
 12613  02EF  00E8               	movwf	HueToRGB@v2+1
 12614  02F0  0141               	movlb	1	; select bank1
 12615  02F1  0853               	movf	LED_setHSL@v2^(0+128),w
 12616  02F2  0140               	movlb	0	; select bank0
 12617  02F3  00E7               	movwf	HueToRGB@v2
 12618  02F4  0141               	movlb	1	; select bank1
 12619  02F5  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12620  02F6  0140               	movlb	0	; select bank0
 12621  02F7  00E6               	movwf	HueToRGB@v1+3
 12622  02F8  0141               	movlb	1	; select bank1
 12623  02F9  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12624  02FA  0140               	movlb	0	; select bank0
 12625  02FB  00E5               	movwf	HueToRGB@v1+2
 12626  02FC  0141               	movlb	1	; select bank1
 12627  02FD  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12628  02FE  0140               	movlb	0	; select bank0
 12629  02FF  00E4               	movwf	HueToRGB@v1+1
 12630  0300  0141               	movlb	1	; select bank1
 12631  0301  084B               	movf	LED_setHSL@v1^(0+128),w
 12632  0302  0140               	movlb	0	; select bank0
 12633  0303  00E3               	movwf	HueToRGB@v1
 12634  0304  318E  261C  3180   	fcall	_HueToRGB
 12635  0307  0140               	movlb	0	; select bank0
 12636  0308  0866               	movf	?_HueToRGB+3,w
 12637  0309  0141               	movlb	1	; select bank1
 12638  030A  00C2               	movwf	(_LED_setHSL$2875+3)^(0+128)
 12639  030B  0140               	movlb	0	; select bank0
 12640  030C  0865               	movf	?_HueToRGB+2,w
 12641  030D  0141               	movlb	1	; select bank1
 12642  030E  00C1               	movwf	(_LED_setHSL$2875+2)^(0+128)
 12643  030F  0140               	movlb	0	; select bank0
 12644  0310  0864               	movf	?_HueToRGB+1,w
 12645  0311  0141               	movlb	1	; select bank1
 12646  0312  00C0               	movwf	(_LED_setHSL$2875+1)^(0+128)
 12647  0313  0140               	movlb	0	; select bank0
 12648  0314  0863               	movf	?_HueToRGB,w
 12649  0315  0141               	movlb	1	; select bank1
 12650  0316  00BF               	movwf	_LED_setHSL$2875^(0+128)
 12651                           
 12652                           ;led.c: 103:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12653  0317  0842               	movf	(_LED_setHSL$2875+3)^(0+128),w
 12654  0318  0140               	movlb	0	; select bank0
 12655  0319  00C4               	movwf	___flmul@a+3
 12656  031A  0141               	movlb	1	; select bank1
 12657  031B  0841               	movf	(_LED_setHSL$2875+2)^(0+128),w
 12658  031C  0140               	movlb	0	; select bank0
 12659  031D  00C3               	movwf	___flmul@a+2
 12660  031E  0141               	movlb	1	; select bank1
 12661  031F  0840               	movf	(_LED_setHSL$2875+1)^(0+128),w
 12662  0320  0140               	movlb	0	; select bank0
 12663  0321  00C2               	movwf	___flmul@a+1
 12664  0322  0141               	movlb	1	; select bank1
 12665  0323  083F               	movf	_LED_setHSL$2875^(0+128),w
 12666  0324  0140               	movlb	0	; select bank0
 12667  0325  00C1               	movwf	___flmul@a
 12668  0326  3043               	movlw	67
 12669  0327  00C0               	movwf	___flmul@b+3
 12670  0328  307F               	movlw	127
 12671  0329  00BF               	movwf	___flmul@b+2
 12672  032A  3000               	movlw	0
 12673  032B  00BE               	movwf	___flmul@b+1
 12674  032C  3000               	movlw	0
 12675  032D  00BD               	movwf	___flmul@b
 12676  032E  3183  23F8  3180   	fcall	___flmul
 12677  0331  0140               	movlb	0	; select bank0
 12678  0332  0840               	movf	?___flmul+3,w
 12679  0333  0141               	movlb	1	; select bank1
 12680  0334  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12681  0335  0140               	movlb	0	; select bank0
 12682  0336  083F               	movf	?___flmul+2,w
 12683  0337  0141               	movlb	1	; select bank1
 12684  0338  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12685  0339  0140               	movlb	0	; select bank0
 12686  033A  083E               	movf	?___flmul+1,w
 12687  033B  0141               	movlb	1	; select bank1
 12688  033C  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12689  033D  0140               	movlb	0	; select bank0
 12690  033E  083D               	movf	?___flmul,w
 12691  033F  0141               	movlb	1	; select bank1
 12692  0340  00A4               	movwf	___fltol@f1^(0+128)
 12693  0341  3194  244D  3180   	fcall	___fltol
 12694  0344  0141               	movlb	1	; select bank1
 12695  0345  0824               	movf	?___fltol^(0+128),w
 12696  0346  00B9               	movwf	??_LED_setHSL^(0+128)
 12697  0347  0839               	movf	??_LED_setHSL^(0+128),w
 12698  0348  00D8               	movwf	(LED_setHSL@rgb^(0+128)+1)
 12699                           
 12700                           ;led.c: 104:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12701  0349  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12702  034A  0140               	movlb	0	; select bank0
 12703  034B  00B0               	movwf	___fladd@a+3
 12704  034C  0141               	movlb	1	; select bank1
 12705  034D  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12706  034E  0140               	movlb	0	; select bank0
 12707  034F  00AF               	movwf	___fladd@a+2
 12708  0350  0141               	movlb	1	; select bank1
 12709  0351  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12710  0352  0140               	movlb	0	; select bank0
 12711  0353  00AE               	movwf	___fladd@a+1
 12712  0354  0141               	movlb	1	; select bank1
 12713  0355  084F               	movf	LED_setHSL@hue^(0+128),w
 12714  0356  0140               	movlb	0	; select bank0
 12715  0357  00AD               	movwf	___fladd@a
 12716  0358  30BE               	movlw	190
 12717  0359  00AC               	movwf	___fladd@b+3
 12718  035A  30AA               	movlw	170
 12719  035B  00AB               	movwf	___fladd@b+2
 12720  035C  30AA               	movlw	170
 12721  035D  00AA               	movwf	___fladd@b+1
 12722  035E  30AB               	movlw	171
 12723  035F  00A9               	movwf	___fladd@b
 12724  0360  318C  243A  3180   	fcall	___fladd
 12725  0363  0140               	movlb	0	; select bank0
 12726  0364  082C               	movf	?___fladd+3,w
 12727  0365  0141               	movlb	1	; select bank1
 12728  0366  00C6               	movwf	(_LED_setHSL$2873+3)^(0+128)
 12729  0367  0140               	movlb	0	; select bank0
 12730  0368  082B               	movf	?___fladd+2,w
 12731  0369  0141               	movlb	1	; select bank1
 12732  036A  00C5               	movwf	(_LED_setHSL$2873+2)^(0+128)
 12733  036B  0140               	movlb	0	; select bank0
 12734  036C  082A               	movf	?___fladd+1,w
 12735  036D  0141               	movlb	1	; select bank1
 12736  036E  00C4               	movwf	(_LED_setHSL$2873+1)^(0+128)
 12737  036F  0140               	movlb	0	; select bank0
 12738  0370  0829               	movf	?___fladd,w
 12739  0371  0141               	movlb	1	; select bank1
 12740  0372  00C3               	movwf	_LED_setHSL$2873^(0+128)
 12741                           
 12742                           ;led.c: 104:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12743  0373  0846               	movf	(_LED_setHSL$2873+3)^(0+128),w
 12744  0374  0140               	movlb	0	; select bank0
 12745  0375  00EE               	movwf	HueToRGB@vH+3
 12746  0376  0141               	movlb	1	; select bank1
 12747  0377  0845               	movf	(_LED_setHSL$2873+2)^(0+128),w
 12748  0378  0140               	movlb	0	; select bank0
 12749  0379  00ED               	movwf	HueToRGB@vH+2
 12750  037A  0141               	movlb	1	; select bank1
 12751  037B  0844               	movf	(_LED_setHSL$2873+1)^(0+128),w
 12752  037C  0140               	movlb	0	; select bank0
 12753  037D  00EC               	movwf	HueToRGB@vH+1
 12754  037E  0141               	movlb	1	; select bank1
 12755  037F  0843               	movf	_LED_setHSL$2873^(0+128),w
 12756  0380  0140               	movlb	0	; select bank0
 12757  0381  00EB               	movwf	HueToRGB@vH
 12758  0382  0141               	movlb	1	; select bank1
 12759  0383  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12760  0384  0140               	movlb	0	; select bank0
 12761  0385  00EA               	movwf	HueToRGB@v2+3
 12762  0386  0141               	movlb	1	; select bank1
 12763  0387  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12764  0388  0140               	movlb	0	; select bank0
 12765  0389  00E9               	movwf	HueToRGB@v2+2
 12766  038A  0141               	movlb	1	; select bank1
 12767  038B  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12768  038C  0140               	movlb	0	; select bank0
 12769  038D  00E8               	movwf	HueToRGB@v2+1
 12770  038E  0141               	movlb	1	; select bank1
 12771  038F  0853               	movf	LED_setHSL@v2^(0+128),w
 12772  0390  0140               	movlb	0	; select bank0
 12773  0391  00E7               	movwf	HueToRGB@v2
 12774  0392  0141               	movlb	1	; select bank1
 12775  0393  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12776  0394  0140               	movlb	0	; select bank0
 12777  0395  00E6               	movwf	HueToRGB@v1+3
 12778  0396  0141               	movlb	1	; select bank1
 12779  0397  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12780  0398  0140               	movlb	0	; select bank0
 12781  0399  00E5               	movwf	HueToRGB@v1+2
 12782  039A  0141               	movlb	1	; select bank1
 12783  039B  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12784  039C  0140               	movlb	0	; select bank0
 12785  039D  00E4               	movwf	HueToRGB@v1+1
 12786  039E  0141               	movlb	1	; select bank1
 12787  039F  084B               	movf	LED_setHSL@v1^(0+128),w
 12788  03A0  0140               	movlb	0	; select bank0
 12789  03A1  00E3               	movwf	HueToRGB@v1
 12790  03A2  318E  261C  3180   	fcall	_HueToRGB
 12791  03A5  0140               	movlb	0	; select bank0
 12792  03A6  0866               	movf	?_HueToRGB+3,w
 12793  03A7  0141               	movlb	1	; select bank1
 12794  03A8  00CA               	movwf	(_LED_setHSL$2874+3)^(0+128)
 12795  03A9  0140               	movlb	0	; select bank0
 12796  03AA  0865               	movf	?_HueToRGB+2,w
 12797  03AB  0141               	movlb	1	; select bank1
 12798  03AC  00C9               	movwf	(_LED_setHSL$2874+2)^(0+128)
 12799  03AD  0140               	movlb	0	; select bank0
 12800  03AE  0864               	movf	?_HueToRGB+1,w
 12801  03AF  0141               	movlb	1	; select bank1
 12802  03B0  00C8               	movwf	(_LED_setHSL$2874+1)^(0+128)
 12803  03B1  0140               	movlb	0	; select bank0
 12804  03B2  0863               	movf	?_HueToRGB,w
 12805  03B3  0141               	movlb	1	; select bank1
 12806  03B4  00C7               	movwf	_LED_setHSL$2874^(0+128)
 12807                           
 12808                           ;led.c: 104:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12809  03B5  084A               	movf	(_LED_setHSL$2874+3)^(0+128),w
 12810  03B6  0140               	movlb	0	; select bank0
 12811  03B7  00C4               	movwf	___flmul@a+3
 12812  03B8  0141               	movlb	1	; select bank1
 12813  03B9  0849               	movf	(_LED_setHSL$2874+2)^(0+128),w
 12814  03BA  0140               	movlb	0	; select bank0
 12815  03BB  00C3               	movwf	___flmul@a+2
 12816  03BC  0141               	movlb	1	; select bank1
 12817  03BD  0848               	movf	(_LED_setHSL$2874+1)^(0+128),w
 12818  03BE  0140               	movlb	0	; select bank0
 12819  03BF  00C2               	movwf	___flmul@a+1
 12820  03C0  0141               	movlb	1	; select bank1
 12821  03C1  0847               	movf	_LED_setHSL$2874^(0+128),w
 12822  03C2  0140               	movlb	0	; select bank0
 12823  03C3  00C1               	movwf	___flmul@a
 12824  03C4  3043               	movlw	67
 12825  03C5  00C0               	movwf	___flmul@b+3
 12826  03C6  307F               	movlw	127
 12827  03C7  00BF               	movwf	___flmul@b+2
 12828  03C8  3000               	movlw	0
 12829  03C9  00BE               	movwf	___flmul@b+1
 12830  03CA  3000               	movlw	0
 12831  03CB  00BD               	movwf	___flmul@b
 12832  03CC  3183  23F8  3180   	fcall	___flmul
 12833  03CF  0140               	movlb	0	; select bank0
 12834  03D0  0840               	movf	?___flmul+3,w
 12835  03D1  0141               	movlb	1	; select bank1
 12836  03D2  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12837  03D3  0140               	movlb	0	; select bank0
 12838  03D4  083F               	movf	?___flmul+2,w
 12839  03D5  0141               	movlb	1	; select bank1
 12840  03D6  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12841  03D7  0140               	movlb	0	; select bank0
 12842  03D8  083E               	movf	?___flmul+1,w
 12843  03D9  0141               	movlb	1	; select bank1
 12844  03DA  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12845  03DB  0140               	movlb	0	; select bank0
 12846  03DC  083D               	movf	?___flmul,w
 12847  03DD  0141               	movlb	1	; select bank1
 12848  03DE  00A4               	movwf	___fltol@f1^(0+128)
 12849  03DF  3194  244D  3180   	fcall	___fltol
 12850  03E2  0141               	movlb	1	; select bank1
 12851  03E3  0824               	movf	?___fltol^(0+128),w
 12852  03E4  00B9               	movwf	??_LED_setHSL^(0+128)
 12853  03E5  0839               	movf	??_LED_setHSL^(0+128),w
 12854  03E6  00D9               	movwf	(LED_setHSL@rgb^(0+128)+2)
 12855  03E7                     l5693:	
 12856                           
 12857                           ;led.c: 107:  LED_setColor(rgb.R, rgb.G, rgb.B, 0);
 12858  03E7  0858               	movf	(LED_setHSL@rgb^(0+128)+1),w
 12859  03E8  00B9               	movwf	??_LED_setHSL^(0+128)
 12860  03E9  0839               	movf	??_LED_setHSL^(0+128),w
 12861  03EA  0140               	movlb	0	; select bank0
 12862  03EB  00A0               	movwf	LED_setColor@green
 12863  03EC  0141               	movlb	1	; select bank1
 12864  03ED  0859               	movf	(LED_setHSL@rgb^(0+128)+2),w
 12865  03EE  00BA               	movwf	(??_LED_setHSL+1)^(0+128)
 12866  03EF  083A               	movf	(??_LED_setHSL+1)^(0+128),w
 12867  03F0  0140               	movlb	0	; select bank0
 12868  03F1  00A1               	movwf	LED_setColor@white
 12869  03F2  01A2               	clrf	LED_setColor@blue
 12870  03F3  0141               	movlb	1	; select bank1
 12871  03F4  0857               	movf	LED_setHSL@rgb^(0+128),w
 12872  03F5  3192  22EE         	fcall	_LED_setColor
 12873  03F7  0008               	return
 12874  03F8                     __end_of_LED_setHSL:	
 12875                           
 12876                           	psect	text39
 12877  16B6                     __ptext39:	
 12878 ;; *************** function ___xxtofl *****************
 12879 ;; Defined at:
 12880 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;  sign            1    wreg     unsigned char 
 12883 ;;  val             4    0[BANK0 ] long 
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;  sign            1    8[BANK0 ] unsigned char 
 12886 ;;  arg             4   10[BANK0 ] unsigned long 
 12887 ;;  exp             1    9[BANK0 ] unsigned char 
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  4    0[BANK0 ] unsigned char 
 12890 ;; Registers used:
 12891 ;;		wreg, status,2, status,0
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12898 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12899 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12900 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12901 ;;Total ram usage:       14 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; Hardware stack levels required when called:    4
 12904 ;; This function calls:
 12905 ;;		Nothing
 12906 ;; This function is called by:
 12907 ;;		_LED_setHSL
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911                           
 12912                           ;psect for function ___xxtofl
 12913  16B6                     ___xxtofl:	
 12914                           
 12915                           ;incstack = 0
 12916                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12917                           ;___xxtofl@sign stored from wreg
 12918  16B6  0140               	movlb	0	; select bank0
 12919  16B7  00A8               	movwf	___xxtofl@sign
 12920  16B8  0828               	movf	___xxtofl@sign,w
 12921  16B9  1D03               	btfss	3,2
 12922  16BA  1FA3               	btfss	___xxtofl@val+3,7
 12923  16BB  2ECC               	goto	l4327
 12924  16BC  0920               	comf	___xxtofl@val,w
 12925  16BD  00AA               	movwf	___xxtofl@arg
 12926  16BE  0921               	comf	___xxtofl@val+1,w
 12927  16BF  00AB               	movwf	___xxtofl@arg+1
 12928  16C0  0922               	comf	___xxtofl@val+2,w
 12929  16C1  00AC               	movwf	___xxtofl@arg+2
 12930  16C2  0923               	comf	___xxtofl@val+3,w
 12931  16C3  00AD               	movwf	___xxtofl@arg+3
 12932  16C4  0AAA               	incf	___xxtofl@arg,f
 12933  16C5  1903               	skipnz
 12934  16C6  0AAB               	incf	___xxtofl@arg+1,f
 12935  16C7  1903               	skipnz
 12936  16C8  0AAC               	incf	___xxtofl@arg+2,f
 12937  16C9  1903               	skipnz
 12938  16CA  0AAD               	incf	___xxtofl@arg+3,f
 12939  16CB  2ED4               	goto	l1716
 12940  16CC                     l4327:	
 12941  16CC  0823               	movf	___xxtofl@val+3,w
 12942  16CD  00AD               	movwf	___xxtofl@arg+3
 12943  16CE  0822               	movf	___xxtofl@val+2,w
 12944  16CF  00AC               	movwf	___xxtofl@arg+2
 12945  16D0  0821               	movf	___xxtofl@val+1,w
 12946  16D1  00AB               	movwf	___xxtofl@arg+1
 12947  16D2  0820               	movf	___xxtofl@val,w
 12948  16D3  00AA               	movwf	___xxtofl@arg
 12949  16D4                     l1716:	
 12950  16D4  0823               	movf	___xxtofl@val+3,w
 12951  16D5  0422               	iorwf	___xxtofl@val+2,w
 12952  16D6  0421               	iorwf	___xxtofl@val+1,w
 12953  16D7  0420               	iorwf	___xxtofl@val,w
 12954  16D8  1D03               	skipz
 12955  16D9  2EE3               	goto	l4333
 12956  16DA  3000               	movlw	0
 12957  16DB  00A3               	movwf	?___xxtofl+3
 12958  16DC  3000               	movlw	0
 12959  16DD  00A2               	movwf	?___xxtofl+2
 12960  16DE  3000               	movlw	0
 12961  16DF  00A1               	movwf	?___xxtofl+1
 12962  16E0  3000               	movlw	0
 12963  16E1  00A0               	movwf	?___xxtofl
 12964  16E2  0008               	return
 12965  16E3                     l4333:	
 12966  16E3  3096               	movlw	150
 12967  16E4  00A4               	movwf	??___xxtofl
 12968  16E5  0824               	movf	??___xxtofl,w
 12969  16E6  00A9               	movwf	___xxtofl@exp
 12970  16E7                     l4337:	
 12971  16E7  30FE               	movlw	254
 12972  16E8  052D               	andwf	___xxtofl@arg+3,w
 12973  16E9  1903               	btfsc	3,2
 12974  16EA  2F0A               	goto	l1722
 12975  16EB  3001               	movlw	1
 12976  16EC  00A4               	movwf	??___xxtofl
 12977  16ED  0824               	movf	??___xxtofl,w
 12978  16EE  07A9               	addwf	___xxtofl@exp,f
 12979  16EF  3001               	movlw	1
 12980  16F0                     u4185:	
 12981  16F0  36AD               	lsrf	___xxtofl@arg+3,f
 12982  16F1  0CAC               	rrf	___xxtofl@arg+2,f
 12983  16F2  0CAB               	rrf	___xxtofl@arg+1,f
 12984  16F3  0CAA               	rrf	___xxtofl@arg,f
 12985  16F4  0B89               	decfsz	9,f
 12986  16F5  2EF0               	goto	u4185
 12987  16F6  2EE7               	goto	l4337
 12988  16F7                     l4339:	
 12989  16F7  3001               	movlw	1
 12990  16F8  00A4               	movwf	??___xxtofl
 12991  16F9  0824               	movf	??___xxtofl,w
 12992  16FA  07A9               	addwf	___xxtofl@exp,f
 12993  16FB  3001               	movlw	1
 12994  16FC  07AA               	addwf	___xxtofl@arg,f
 12995  16FD  3000               	movlw	0
 12996  16FE  3DAB               	addwfc	___xxtofl@arg+1,f
 12997  16FF  3000               	movlw	0
 12998  1700  3DAC               	addwfc	___xxtofl@arg+2,f
 12999  1701  3000               	movlw	0
 13000  1702  3DAD               	addwfc	___xxtofl@arg+3,f
 13001  1703  3001               	movlw	1
 13002  1704                     u4205:	
 13003  1704  36AD               	lsrf	___xxtofl@arg+3,f
 13004  1705  0CAC               	rrf	___xxtofl@arg+2,f
 13005  1706  0CAB               	rrf	___xxtofl@arg+1,f
 13006  1707  0CAA               	rrf	___xxtofl@arg,f
 13007  1708  0B89               	decfsz	9,f
 13008  1709  2F04               	goto	u4205
 13009  170A                     l1722:	
 13010  170A  30FF               	movlw	255
 13011  170B  052D               	andwf	___xxtofl@arg+3,w
 13012  170C  1903               	btfsc	3,2
 13013  170D  2F1C               	goto	l4347
 13014  170E  2EF7               	goto	l4339
 13015  170F                     l4349:	
 13016  170F  3002               	movlw	2
 13017  1710  0229               	subwf	___xxtofl@exp,w
 13018  1711  1C03               	btfss	3,0
 13019  1712  2F1E               	goto	l1729
 13020  1713  3001               	movlw	1
 13021  1714  02A9               	subwf	___xxtofl@exp,f
 13022  1715  3001               	movlw	1
 13023  1716                     u4225:	
 13024  1716  35AA               	lslf	___xxtofl@arg,f
 13025  1717  0DAB               	rlf	___xxtofl@arg+1,f
 13026  1718  0DAC               	rlf	___xxtofl@arg+2,f
 13027  1719  0DAD               	rlf	___xxtofl@arg+3,f
 13028  171A  0B89               	decfsz	9,f
 13029  171B  2F16               	goto	u4225
 13030  171C                     l4347:	
 13031  171C  1FAC               	btfss	___xxtofl@arg+2,7
 13032  171D  2F0F               	goto	l4349
 13033  171E                     l1729:	
 13034  171E  1829               	btfsc	___xxtofl@exp,0
 13035  171F  2F28               	goto	l1730
 13036  1720  30FF               	movlw	255
 13037  1721  05AA               	andwf	___xxtofl@arg,f
 13038  1722  30FF               	movlw	255
 13039  1723  05AB               	andwf	___xxtofl@arg+1,f
 13040  1724  307F               	movlw	127
 13041  1725  05AC               	andwf	___xxtofl@arg+2,f
 13042  1726  30FF               	movlw	255
 13043  1727  05AD               	andwf	___xxtofl@arg+3,f
 13044  1728                     l1730:	
 13045  1728  1003               	clrc
 13046  1729  0CA9               	rrf	___xxtofl@exp,f
 13047  172A  0829               	movf	___xxtofl@exp,w
 13048  172B  00A4               	movwf	??___xxtofl
 13049  172C  01A5               	clrf	??___xxtofl+1
 13050  172D  01A6               	clrf	??___xxtofl+2
 13051  172E  01A7               	clrf	??___xxtofl+3
 13052  172F  3018               	movlw	24
 13053  1730                     u4265:	
 13054  1730  35A4               	lslf	??___xxtofl,f
 13055  1731  0DA5               	rlf	??___xxtofl+1,f
 13056  1732  0DA6               	rlf	??___xxtofl+2,f
 13057  1733  0DA7               	rlf	??___xxtofl+3,f
 13058  1734  0B89               	decfsz	9,f
 13059  1735  2F30               	goto	u4265
 13060  1736  0824               	movf	??___xxtofl,w
 13061  1737  04AA               	iorwf	___xxtofl@arg,f
 13062  1738  0825               	movf	??___xxtofl+1,w
 13063  1739  04AB               	iorwf	___xxtofl@arg+1,f
 13064  173A  0826               	movf	??___xxtofl+2,w
 13065  173B  04AC               	iorwf	___xxtofl@arg+2,f
 13066  173C  0827               	movf	??___xxtofl+3,w
 13067  173D  04AD               	iorwf	___xxtofl@arg+3,f
 13068  173E  0828               	movf	___xxtofl@sign,w
 13069  173F  1D03               	btfss	3,2
 13070  1740  1FA3               	btfss	___xxtofl@val+3,7
 13071  1741  2F43               	goto	l4361
 13072  1742  17AD               	bsf	___xxtofl@arg+3,7
 13073  1743                     l4361:	
 13074  1743  082D               	movf	___xxtofl@arg+3,w
 13075  1744  00A3               	movwf	?___xxtofl+3
 13076  1745  082C               	movf	___xxtofl@arg+2,w
 13077  1746  00A2               	movwf	?___xxtofl+2
 13078  1747  082B               	movf	___xxtofl@arg+1,w
 13079  1748  00A1               	movwf	?___xxtofl+1
 13080  1749  082A               	movf	___xxtofl@arg,w
 13081  174A  00A0               	movwf	?___xxtofl
 13082  174B  0008               	return
 13083  174C                     __end_of___xxtofl:	
 13084                           
 13085                           	psect	text40
 13086  144D                     __ptext40:	
 13087 ;; *************** function ___fltol *****************
 13088 ;; Defined at:
 13089 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13090 ;; Parameters:    Size  Location     Type
 13091 ;;  f1              4    4[BANK1 ] unsigned char 
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;  exp1            1   14[BANK1 ] unsigned char 
 13094 ;;  sign1           1   13[BANK1 ] unsigned char 
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  4    4[BANK1 ] long 
 13097 ;; Registers used:
 13098 ;;		wreg, status,2, status,0
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13104 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13105 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13106 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13107 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13108 ;;Total ram usage:       11 bytes
 13109 ;; Hardware stack levels used:    1
 13110 ;; Hardware stack levels required when called:    4
 13111 ;; This function calls:
 13112 ;;		Nothing
 13113 ;; This function is called by:
 13114 ;;		_LED_setHSL
 13115 ;; This function uses a non-reentrant model
 13116 ;;
 13117                           
 13118                           
 13119                           ;psect for function ___fltol
 13120  144D                     ___fltol:	
 13121                           
 13122                           ;incstack = 0
 13123                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 13124  144D  1003               	clrc
 13125  144E  0141               	movlb	1	; select bank1
 13126  144F  0D26               	rlf	(___fltol@f1+2)^(0+128),w
 13127  1450  0D27               	rlf	(___fltol@f1+3)^(0+128),w
 13128  1451  00A8               	movwf	??___fltol^(0+128)
 13129  1452  0828               	movf	??___fltol^(0+128),w
 13130  1453  00AE               	movwf	___fltol@exp1^(0+128)
 13131  1454  082E               	movf	___fltol@exp1^(0+128),w
 13132  1455  1D03               	btfss	3,2
 13133  1456  2C60               	goto	l5601
 13134  1457                     l5597:	
 13135  1457  3000               	movlw	0
 13136  1458  00A7               	movwf	(?___fltol+3)^(0+128)
 13137  1459  3000               	movlw	0
 13138  145A  00A6               	movwf	(?___fltol+2)^(0+128)
 13139  145B  3000               	movlw	0
 13140  145C  00A5               	movwf	(?___fltol+1)^(0+128)
 13141  145D  3000               	movlw	0
 13142  145E  00A4               	movwf	?___fltol^(0+128)
 13143  145F  0008               	return
 13144  1460                     l5601:	
 13145  1460  0824               	movf	___fltol@f1^(0+128),w
 13146  1461  00A8               	movwf	??___fltol^(0+128)
 13147  1462  0825               	movf	(___fltol@f1+1)^(0+128),w
 13148  1463  00A9               	movwf	(??___fltol^(0+128)+1)
 13149  1464  0826               	movf	(___fltol@f1+2)^(0+128),w
 13150  1465  00AA               	movwf	(??___fltol^(0+128)+2)
 13151  1466  0827               	movf	(___fltol@f1+3)^(0+128),w
 13152  1467  00AB               	movwf	(??___fltol^(0+128)+3)
 13153  1468  301F               	movlw	31
 13154  1469                     u5915:	
 13155  1469  36AB               	lsrf	(??___fltol^(0+128)+3),f
 13156  146A  0CAA               	rrf	(??___fltol^(0+128)+2),f
 13157  146B  0CA9               	rrf	(??___fltol^(0+128)+1),f
 13158  146C  0CA8               	rrf	??___fltol^(0+128),f
 13159  146D  0B89               	decfsz	9,f
 13160  146E  2C69               	goto	u5915
 13161  146F  0828               	movf	??___fltol^(0+128),w
 13162  1470  00AC               	movwf	(??___fltol+4)^(0+128)
 13163  1471  082C               	movf	(??___fltol+4)^(0+128),w
 13164  1472  00AD               	movwf	___fltol@sign1^(0+128)
 13165  1473  17A6               	bsf	(___fltol@f1^(0+128)+2),7
 13166  1474  30FF               	movlw	255
 13167  1475  05A4               	andwf	___fltol@f1^(0+128),f
 13168  1476  30FF               	movlw	255
 13169  1477  05A5               	andwf	(___fltol@f1+1)^(0+128),f
 13170  1478  30FF               	movlw	255
 13171  1479  05A6               	andwf	(___fltol@f1+2)^(0+128),f
 13172  147A  3000               	movlw	0
 13173  147B  05A7               	andwf	(___fltol@f1+3)^(0+128),f
 13174  147C  3096               	movlw	150
 13175  147D  02AE               	subwf	___fltol@exp1^(0+128),f
 13176  147E  1FAE               	btfss	___fltol@exp1^(0+128),7
 13177  147F  2C93               	goto	l5619
 13178  1480  082E               	movf	___fltol@exp1^(0+128),w
 13179  1481  3A80               	xorlw	128
 13180  1482  3E97               	addlw	151
 13181  1483  1C03               	btfss	3,0
 13182  1484  2C57               	goto	l5597
 13183  1485                     l5617:	
 13184  1485  3001               	movlw	1
 13185  1486                     u5945:	
 13186  1486  36A7               	lsrf	(___fltol@f1+3)^(0+128),f
 13187  1487  0CA6               	rrf	(___fltol@f1+2)^(0+128),f
 13188  1488  0CA5               	rrf	(___fltol@f1+1)^(0+128),f
 13189  1489  0CA4               	rrf	___fltol@f1^(0+128),f
 13190  148A  0B89               	decfsz	9,f
 13191  148B  2C86               	goto	u5945
 13192  148C  3001               	movlw	1
 13193  148D  00A8               	movwf	??___fltol^(0+128)
 13194  148E  0828               	movf	??___fltol^(0+128),w
 13195  148F  07AE               	addwf	___fltol@exp1^(0+128),f
 13196  1490  1903               	btfsc	3,2
 13197  1491  2CA4               	goto	l5627
 13198  1492  2C85               	goto	l5617
 13199  1493                     l5619:	
 13200  1493  3020               	movlw	32
 13201  1494  022E               	subwf	___fltol@exp1^(0+128),w
 13202  1495  1803               	btfsc	3,0
 13203  1496  2C57               	goto	l5597
 13204  1497                     l1482:	
 13205  1497  082E               	movf	___fltol@exp1^(0+128),w
 13206  1498  1903               	btfsc	3,2
 13207  1499  2CA4               	goto	l5627
 13208  149A  3001               	movlw	1
 13209  149B                     u5975:	
 13210  149B  35A4               	lslf	___fltol@f1^(0+128),f
 13211  149C  0DA5               	rlf	(___fltol@f1+1)^(0+128),f
 13212  149D  0DA6               	rlf	(___fltol@f1+2)^(0+128),f
 13213  149E  0DA7               	rlf	(___fltol@f1+3)^(0+128),f
 13214  149F  0B89               	decfsz	9,f
 13215  14A0  2C9B               	goto	u5975
 13216  14A1  3001               	movlw	1
 13217  14A2  02AE               	subwf	___fltol@exp1^(0+128),f
 13218  14A3  2C97               	goto	l1482
 13219  14A4                     l5627:	
 13220  14A4  082D               	movf	___fltol@sign1^(0+128),w
 13221  14A5  1903               	btfsc	3,2
 13222  14A6  0008               	return
 13223  14A7  09A4               	comf	___fltol@f1^(0+128),f
 13224  14A8  09A5               	comf	(___fltol@f1+1)^(0+128),f
 13225  14A9  09A6               	comf	(___fltol@f1+2)^(0+128),f
 13226  14AA  09A7               	comf	(___fltol@f1+3)^(0+128),f
 13227  14AB  0AA4               	incf	___fltol@f1^(0+128),f
 13228  14AC  1903               	skipnz
 13229  14AD  0AA5               	incf	(___fltol@f1+1)^(0+128),f
 13230  14AE  1903               	skipnz
 13231  14AF  0AA6               	incf	(___fltol@f1+2)^(0+128),f
 13232  14B0  1903               	skipnz
 13233  14B1  0AA7               	incf	(___fltol@f1+3)^(0+128),f
 13234  14B2  0008               	return
 13235  14B3                     __end_of___fltol:	
 13236                           
 13237                           	psect	text41
 13238  1370                     __ptext41:	
 13239 ;; *************** function ___fleq *****************
 13240 ;; Defined at:
 13241 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 13242 ;; Parameters:    Size  Location     Type
 13243 ;;  ff1             4    0[BANK0 ] long 
 13244 ;;  ff2             4    4[BANK0 ] long 
 13245 ;; Auto vars:     Size  Location     Type
 13246 ;;		None
 13247 ;; Return value:  Size  Location     Type
 13248 ;;		None               void
 13249 ;; Registers used:
 13250 ;;		wreg, status,2, status,0
 13251 ;; Tracked objects:
 13252 ;;		On entry : 0/0
 13253 ;;		On exit  : 0/0
 13254 ;;		Unchanged: 0/0
 13255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13256 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13258 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13259 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13260 ;;Total ram usage:       12 bytes
 13261 ;; Hardware stack levels used:    1
 13262 ;; Hardware stack levels required when called:    4
 13263 ;; This function calls:
 13264 ;;		Nothing
 13265 ;; This function is called by:
 13266 ;;		_LED_setHSL
 13267 ;;		_pulseColors
 13268 ;; This function uses a non-reentrant model
 13269 ;;
 13270                           
 13271                           
 13272                           ;psect for function ___fleq
 13273  1370                     ___fleq:	
 13274                           
 13275                           ;incstack = 0
 13276                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13277  1370  3000               	movlw	0
 13278  1371  0140               	movlb	0	; select bank0
 13279  1372  0520               	andwf	___fleq@ff1,w
 13280  1373  00A8               	movwf	??___fleq
 13281  1374  3000               	movlw	0
 13282  1375  0521               	andwf	___fleq@ff1+1,w
 13283  1376  00A9               	movwf	??___fleq+1
 13284  1377  3080               	movlw	128
 13285  1378  0522               	andwf	___fleq@ff1+2,w
 13286  1379  00AA               	movwf	??___fleq+2
 13287  137A  307F               	movlw	127
 13288  137B  0523               	andwf	___fleq@ff1+3,w
 13289  137C  00AB               	movwf	??___fleq+3
 13290  137D  082B               	movf	??___fleq+3,w
 13291  137E  042A               	iorwf	??___fleq+2,w
 13292  137F  0429               	iorwf	??___fleq+1,w
 13293  1380  0428               	iorwf	??___fleq,w
 13294  1381  1D03               	skipz
 13295  1382  2B8B               	goto	l1450
 13296  1383  3000               	movlw	0
 13297  1384  00A3               	movwf	___fleq@ff1+3
 13298  1385  3000               	movlw	0
 13299  1386  00A2               	movwf	___fleq@ff1+2
 13300  1387  3000               	movlw	0
 13301  1388  00A1               	movwf	___fleq@ff1+1
 13302  1389  3000               	movlw	0
 13303  138A  00A0               	movwf	___fleq@ff1
 13304  138B                     l1450:	
 13305  138B  3000               	movlw	0
 13306  138C  0524               	andwf	___fleq@ff2,w
 13307  138D  00A8               	movwf	??___fleq
 13308  138E  3000               	movlw	0
 13309  138F  0525               	andwf	___fleq@ff2+1,w
 13310  1390  00A9               	movwf	??___fleq+1
 13311  1391  3080               	movlw	128
 13312  1392  0526               	andwf	___fleq@ff2+2,w
 13313  1393  00AA               	movwf	??___fleq+2
 13314  1394  307F               	movlw	127
 13315  1395  0527               	andwf	___fleq@ff2+3,w
 13316  1396  00AB               	movwf	??___fleq+3
 13317  1397  082B               	movf	??___fleq+3,w
 13318  1398  042A               	iorwf	??___fleq+2,w
 13319  1399  0429               	iorwf	??___fleq+1,w
 13320  139A  0428               	iorwf	??___fleq,w
 13321  139B  1D03               	skipz
 13322  139C  2BA5               	goto	l1451
 13323  139D  3000               	movlw	0
 13324  139E  00A7               	movwf	___fleq@ff2+3
 13325  139F  3000               	movlw	0
 13326  13A0  00A6               	movwf	___fleq@ff2+2
 13327  13A1  3000               	movlw	0
 13328  13A2  00A5               	movwf	___fleq@ff2+1
 13329  13A3  3000               	movlw	0
 13330  13A4  00A4               	movwf	___fleq@ff2
 13331  13A5                     l1451:	
 13332  13A5  0827               	movf	___fleq@ff2+3,w
 13333  13A6  0623               	xorwf	___fleq@ff1+3,w
 13334  13A7  1D03               	skipz
 13335  13A8  2BB3               	goto	u3755
 13336  13A9  0826               	movf	___fleq@ff2+2,w
 13337  13AA  0622               	xorwf	___fleq@ff1+2,w
 13338  13AB  1D03               	skipz
 13339  13AC  2BB3               	goto	u3755
 13340  13AD  0825               	movf	___fleq@ff2+1,w
 13341  13AE  0621               	xorwf	___fleq@ff1+1,w
 13342  13AF  1D03               	skipz
 13343  13B0  2BB3               	goto	u3755
 13344  13B1  0824               	movf	___fleq@ff2,w
 13345  13B2  0620               	xorwf	___fleq@ff1,w
 13346  13B3                     u3755:	
 13347  13B3  1903               	skipnz
 13348  13B4  2BB7               	goto	l4141
 13349  13B5  1003               	clrc
 13350  13B6  0008               	return
 13351  13B7                     l4141:	
 13352  13B7  1403               	setc
 13353  13B8  0008               	return
 13354  13B9                     __end_of___fleq:	
 13355                           
 13356                           	psect	text42
 13357  0624                     __ptext42:	
 13358 ;; *************** function ___fldiv *****************
 13359 ;; Defined at:
 13360 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;  a               4   14[BANK0 ] long 
 13363 ;;  b               4   18[BANK0 ] long 
 13364 ;; Auto vars:     Size  Location     Type
 13365 ;;  grs             4   34[BANK0 ] unsigned long 
 13366 ;;  rem             4   27[BANK0 ] unsigned long 
 13367 ;;  new_exp         2   32[BANK0 ] int 
 13368 ;;  aexp            1   39[BANK0 ] unsigned char 
 13369 ;;  bexp            1   38[BANK0 ] unsigned char 
 13370 ;;  sign            1   31[BANK0 ] unsigned char 
 13371 ;; Return value:  Size  Location     Type
 13372 ;;                  4   14[BANK0 ] unsigned char 
 13373 ;; Registers used:
 13374 ;;		wreg, status,2, status,0
 13375 ;; Tracked objects:
 13376 ;;		On entry : 0/0
 13377 ;;		On exit  : 0/0
 13378 ;;		Unchanged: 0/0
 13379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13380 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13381 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13382 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13383 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13384 ;;Total ram usage:       26 bytes
 13385 ;; Hardware stack levels used:    1
 13386 ;; Hardware stack levels required when called:    4
 13387 ;; This function calls:
 13388 ;;		Nothing
 13389 ;; This function is called by:
 13390 ;;		_LED_setHSL
 13391 ;;		_pulseColors
 13392 ;; This function uses a non-reentrant model
 13393 ;;
 13394                           
 13395                           
 13396                           ;psect for function ___fldiv
 13397  0624                     ___fldiv:	
 13398                           
 13399                           ;incstack = 0
 13400                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 13401  0624  0140               	movlb	0	; select bank0
 13402  0625  0835               	movf	___fldiv@b+3,w
 13403  0626  3980               	andlw	128
 13404  0627  00B6               	movwf	??___fldiv
 13405  0628  0836               	movf	??___fldiv,w
 13406  0629  00BF               	movwf	___fldiv@sign
 13407  062A  3535               	lslf	___fldiv@b+3,w
 13408  062B  00B6               	movwf	??___fldiv
 13409  062C  0836               	movf	??___fldiv,w
 13410  062D  00C6               	movwf	___fldiv@bexp
 13411  062E  1BB4               	btfsc	___fldiv@b+2,7
 13412  062F  1446               	bsf	___fldiv@bexp,0
 13413  0630  0846               	movf	___fldiv@bexp,w
 13414  0631  1903               	btfsc	3,2
 13415  0632  2E41               	goto	l4199
 13416  0633  0A46               	incf	___fldiv@bexp,w
 13417  0634  1D03               	btfss	3,2
 13418  0635  2E3E               	goto	l4195
 13419  0636  3000               	movlw	0
 13420  0637  00B5               	movwf	___fldiv@b+3
 13421  0638  3000               	movlw	0
 13422  0639  00B4               	movwf	___fldiv@b+2
 13423  063A  3000               	movlw	0
 13424  063B  00B3               	movwf	___fldiv@b+1
 13425  063C  3000               	movlw	0
 13426  063D  00B2               	movwf	___fldiv@b
 13427  063E                     l4195:	
 13428  063E  17B4               	bsf	___fldiv@b+2,7
 13429  063F  01B5               	clrf	___fldiv@b+3
 13430  0640  2E49               	goto	l4201
 13431  0641                     l4199:	
 13432  0641  3000               	movlw	0
 13433  0642  00B5               	movwf	___fldiv@b+3
 13434  0643  3000               	movlw	0
 13435  0644  00B4               	movwf	___fldiv@b+2
 13436  0645  3000               	movlw	0
 13437  0646  00B3               	movwf	___fldiv@b+1
 13438  0647  3000               	movlw	0
 13439  0648  00B2               	movwf	___fldiv@b
 13440  0649                     l4201:	
 13441  0649  0831               	movf	___fldiv@a+3,w
 13442  064A  3980               	andlw	128
 13443  064B  00B6               	movwf	??___fldiv
 13444  064C  0836               	movf	??___fldiv,w
 13445  064D  06BF               	xorwf	___fldiv@sign,f
 13446  064E  3531               	lslf	___fldiv@a+3,w
 13447  064F  00B6               	movwf	??___fldiv
 13448  0650  0836               	movf	??___fldiv,w
 13449  0651  00C7               	movwf	___fldiv@aexp
 13450  0652  1BB0               	btfsc	___fldiv@a+2,7
 13451  0653  1447               	bsf	___fldiv@aexp,0
 13452  0654  0847               	movf	___fldiv@aexp,w
 13453  0655  1903               	btfsc	3,2
 13454  0656  2E65               	goto	l4219
 13455  0657  0A47               	incf	___fldiv@aexp,w
 13456  0658  1D03               	btfss	3,2
 13457  0659  2E62               	goto	l4215
 13458  065A  3000               	movlw	0
 13459  065B  00B1               	movwf	___fldiv@a+3
 13460  065C  3000               	movlw	0
 13461  065D  00B0               	movwf	___fldiv@a+2
 13462  065E  3000               	movlw	0
 13463  065F  00AF               	movwf	___fldiv@a+1
 13464  0660  3000               	movlw	0
 13465  0661  00AE               	movwf	___fldiv@a
 13466  0662                     l4215:	
 13467  0662  17B0               	bsf	___fldiv@a+2,7
 13468  0663  01B1               	clrf	___fldiv@a+3
 13469  0664  2E6D               	goto	l1638
 13470  0665                     l4219:	
 13471  0665  3000               	movlw	0
 13472  0666  00B1               	movwf	___fldiv@a+3
 13473  0667  3000               	movlw	0
 13474  0668  00B0               	movwf	___fldiv@a+2
 13475  0669  3000               	movlw	0
 13476  066A  00AF               	movwf	___fldiv@a+1
 13477  066B  3000               	movlw	0
 13478  066C  00AE               	movwf	___fldiv@a
 13479  066D                     l1638:	
 13480  066D  0831               	movf	___fldiv@a+3,w
 13481  066E  0430               	iorwf	___fldiv@a+2,w
 13482  066F  042F               	iorwf	___fldiv@a+1,w
 13483  0670  042E               	iorwf	___fldiv@a,w
 13484  0671  1D03               	skipz
 13485  0672  2E8C               	goto	l4229
 13486  0673  3000               	movlw	0
 13487  0674  00B5               	movwf	___fldiv@b+3
 13488  0675  3000               	movlw	0
 13489  0676  00B4               	movwf	___fldiv@b+2
 13490  0677  3000               	movlw	0
 13491  0678  00B3               	movwf	___fldiv@b+1
 13492  0679  3000               	movlw	0
 13493  067A  00B2               	movwf	___fldiv@b
 13494  067B  3080               	movlw	128
 13495  067C  04B4               	iorwf	___fldiv@b+2,f
 13496  067D  307F               	movlw	127
 13497  067E  04B5               	iorwf	___fldiv@b+3,f
 13498  067F                     L3:	
 13499  067F  083F               	movf	___fldiv@sign,w
 13500  0680  00B6               	movwf	??___fldiv
 13501  0681  0836               	movf	??___fldiv,w
 13502  0682  04B5               	iorwf	___fldiv@b+3,f
 13503  0683  0835               	movf	___fldiv@b+3,w
 13504  0684  00B1               	movwf	?___fldiv+3
 13505  0685  0834               	movf	___fldiv@b+2,w
 13506  0686  00B0               	movwf	?___fldiv+2
 13507  0687  0833               	movf	___fldiv@b+1,w
 13508  0688  00AF               	movwf	?___fldiv+1
 13509  0689  0832               	movf	___fldiv@b,w
 13510  068A  00AE               	movwf	?___fldiv
 13511  068B  0008               	return
 13512  068C                     l4229:	
 13513  068C  0846               	movf	___fldiv@bexp,w
 13514  068D  1D03               	btfss	3,2
 13515  068E  2E98               	goto	l4235
 13516  068F  3000               	movlw	0
 13517  0690  00B1               	movwf	?___fldiv+3
 13518  0691  3000               	movlw	0
 13519  0692  00B0               	movwf	?___fldiv+2
 13520  0693  3000               	movlw	0
 13521  0694  00AF               	movwf	?___fldiv+1
 13522  0695  3000               	movlw	0
 13523  0696  00AE               	movwf	?___fldiv
 13524  0697  0008               	return
 13525  0698                     l4235:	
 13526  0698  0846               	movf	___fldiv@bexp,w
 13527  0699  00B6               	movwf	??___fldiv
 13528  069A  01B7               	clrf	??___fldiv+1
 13529  069B  0837               	movf	??___fldiv+1,w
 13530  069C  00B9               	movwf	??___fldiv+3
 13531  069D  0847               	movf	___fldiv@aexp,w
 13532  069E  0236               	subwf	??___fldiv,w
 13533  069F  00B8               	movwf	??___fldiv+2
 13534  06A0  1C03               	skipc
 13535  06A1  03B9               	decf	??___fldiv+3,f
 13536  06A2  0838               	movf	??___fldiv+2,w
 13537  06A3  3E7F               	addlw	127
 13538  06A4  00C0               	movwf	___fldiv@new_exp
 13539  06A5  3000               	movlw	0
 13540  06A6  3D39               	addwfc	??___fldiv+3,w
 13541  06A7  00C1               	movwf	___fldiv@new_exp+1
 13542  06A8  0835               	movf	___fldiv@b+3,w
 13543  06A9  00BE               	movwf	___fldiv@rem+3
 13544  06AA  0834               	movf	___fldiv@b+2,w
 13545  06AB  00BD               	movwf	___fldiv@rem+2
 13546  06AC  0833               	movf	___fldiv@b+1,w
 13547  06AD  00BC               	movwf	___fldiv@rem+1
 13548  06AE  0832               	movf	___fldiv@b,w
 13549  06AF  00BB               	movwf	___fldiv@rem
 13550  06B0  3000               	movlw	0
 13551  06B1  00B5               	movwf	___fldiv@b+3
 13552  06B2  3000               	movlw	0
 13553  06B3  00B4               	movwf	___fldiv@b+2
 13554  06B4  3000               	movlw	0
 13555  06B5  00B3               	movwf	___fldiv@b+1
 13556  06B6  3000               	movlw	0
 13557  06B7  00B2               	movwf	___fldiv@b
 13558  06B8  3000               	movlw	0
 13559  06B9  00C5               	movwf	___fldiv@grs+3
 13560  06BA  3000               	movlw	0
 13561  06BB  00C4               	movwf	___fldiv@grs+2
 13562  06BC  3000               	movlw	0
 13563  06BD  00C3               	movwf	___fldiv@grs+1
 13564  06BE  3000               	movlw	0
 13565  06BF  00C2               	movwf	___fldiv@grs
 13566  06C0  01C7               	clrf	___fldiv@aexp
 13567  06C1                     l4263:	
 13568  06C1  301A               	movlw	26
 13569  06C2  0247               	subwf	___fldiv@aexp,w
 13570  06C3  1803               	btfsc	3,0
 13571  06C4  2EFD               	goto	l4265
 13572  06C5  0847               	movf	___fldiv@aexp,w
 13573  06C6  1903               	btfsc	3,2
 13574  06C7  2EDF               	goto	l4255
 13575  06C8  3001               	movlw	1
 13576  06C9                     u3955:	
 13577  06C9  35BB               	lslf	___fldiv@rem,f
 13578  06CA  0DBC               	rlf	___fldiv@rem+1,f
 13579  06CB  0DBD               	rlf	___fldiv@rem+2,f
 13580  06CC  0DBE               	rlf	___fldiv@rem+3,f
 13581  06CD  0B89               	decfsz	9,f
 13582  06CE  2EC9               	goto	u3955
 13583  06CF  3001               	movlw	1
 13584  06D0                     u3965:	
 13585  06D0  35B2               	lslf	___fldiv@b,f
 13586  06D1  0DB3               	rlf	___fldiv@b+1,f
 13587  06D2  0DB4               	rlf	___fldiv@b+2,f
 13588  06D3  0DB5               	rlf	___fldiv@b+3,f
 13589  06D4  0B89               	decfsz	9,f
 13590  06D5  2ED0               	goto	u3965
 13591  06D6  1BC5               	btfsc	___fldiv@grs+3,7
 13592  06D7  1432               	bsf	___fldiv@b,0
 13593  06D8  3001               	movlw	1
 13594  06D9                     u3985:	
 13595  06D9  35C2               	lslf	___fldiv@grs,f
 13596  06DA  0DC3               	rlf	___fldiv@grs+1,f
 13597  06DB  0DC4               	rlf	___fldiv@grs+2,f
 13598  06DC  0DC5               	rlf	___fldiv@grs+3,f
 13599  06DD  0B89               	decfsz	9,f
 13600  06DE  2ED9               	goto	u3985
 13601  06DF                     l4255:	
 13602  06DF  0831               	movf	___fldiv@a+3,w
 13603  06E0  023E               	subwf	___fldiv@rem+3,w
 13604  06E1  1D03               	skipz
 13605  06E2  2EED               	goto	u3995
 13606  06E3  0830               	movf	___fldiv@a+2,w
 13607  06E4  023D               	subwf	___fldiv@rem+2,w
 13608  06E5  1D03               	skipz
 13609  06E6  2EED               	goto	u3995
 13610  06E7  082F               	movf	___fldiv@a+1,w
 13611  06E8  023C               	subwf	___fldiv@rem+1,w
 13612  06E9  1D03               	skipz
 13613  06EA  2EED               	goto	u3995
 13614  06EB  082E               	movf	___fldiv@a,w
 13615  06EC  023B               	subwf	___fldiv@rem,w
 13616  06ED                     u3995:	
 13617  06ED  1C03               	skipc
 13618  06EE  2EF8               	goto	l4261
 13619  06EF  1745               	bsf	___fldiv@grs+3,6
 13620  06F0  082E               	movf	___fldiv@a,w
 13621  06F1  02BB               	subwf	___fldiv@rem,f
 13622  06F2  082F               	movf	___fldiv@a+1,w
 13623  06F3  3BBC               	subwfb	___fldiv@rem+1,f
 13624  06F4  0830               	movf	___fldiv@a+2,w
 13625  06F5  3BBD               	subwfb	___fldiv@rem+2,f
 13626  06F6  0831               	movf	___fldiv@a+3,w
 13627  06F7  3BBE               	subwfb	___fldiv@rem+3,f
 13628  06F8                     l4261:	
 13629  06F8  3001               	movlw	1
 13630  06F9  00B6               	movwf	??___fldiv
 13631  06FA  0836               	movf	??___fldiv,w
 13632  06FB  07C7               	addwf	___fldiv@aexp,f
 13633  06FC  2EC1               	goto	l4263
 13634  06FD                     l4265:	
 13635  06FD  083E               	movf	___fldiv@rem+3,w
 13636  06FE  043D               	iorwf	___fldiv@rem+2,w
 13637  06FF  043C               	iorwf	___fldiv@rem+1,w
 13638  0700  043B               	iorwf	___fldiv@rem,w
 13639  0701  1D03               	btfss	3,2
 13640  0702  1442               	bsf	___fldiv@grs,0
 13641  0703                     l4279:	
 13642  0703  1BB4               	btfsc	___fldiv@b+2,7
 13643  0704  2F1A               	goto	l4281
 13644  0705  3001               	movlw	1
 13645  0706                     u4025:	
 13646  0706  35B2               	lslf	___fldiv@b,f
 13647  0707  0DB3               	rlf	___fldiv@b+1,f
 13648  0708  0DB4               	rlf	___fldiv@b+2,f
 13649  0709  0DB5               	rlf	___fldiv@b+3,f
 13650  070A  0B89               	decfsz	9,f
 13651  070B  2F06               	goto	u4025
 13652  070C  1BC5               	btfsc	___fldiv@grs+3,7
 13653  070D  1432               	bsf	___fldiv@b,0
 13654  070E  3001               	movlw	1
 13655  070F                     u4045:	
 13656  070F  35C2               	lslf	___fldiv@grs,f
 13657  0710  0DC3               	rlf	___fldiv@grs+1,f
 13658  0711  0DC4               	rlf	___fldiv@grs+2,f
 13659  0712  0DC5               	rlf	___fldiv@grs+3,f
 13660  0713  0B89               	decfsz	9,f
 13661  0714  2F0F               	goto	u4045
 13662  0715  30FF               	movlw	255
 13663  0716  07C0               	addwf	___fldiv@new_exp,f
 13664  0717  30FF               	movlw	255
 13665  0718  3DC1               	addwfc	___fldiv@new_exp+1,f
 13666  0719  2F03               	goto	l4279
 13667  071A                     l4281:	
 13668  071A  01C7               	clrf	___fldiv@aexp
 13669  071B  1FC5               	btfss	___fldiv@grs+3,7
 13670  071C  2F33               	goto	l4291
 13671  071D  30FF               	movlw	255
 13672  071E  0542               	andwf	___fldiv@grs,w
 13673  071F  00B6               	movwf	??___fldiv
 13674  0720  30FF               	movlw	255
 13675  0721  0543               	andwf	___fldiv@grs+1,w
 13676  0722  00B7               	movwf	??___fldiv+1
 13677  0723  30FF               	movlw	255
 13678  0724  0544               	andwf	___fldiv@grs+2,w
 13679  0725  00B8               	movwf	??___fldiv+2
 13680  0726  307F               	movlw	127
 13681  0727  0545               	andwf	___fldiv@grs+3,w
 13682  0728  00B9               	movwf	??___fldiv+3
 13683  0729  0839               	movf	??___fldiv+3,w
 13684  072A  0438               	iorwf	??___fldiv+2,w
 13685  072B  0437               	iorwf	??___fldiv+1,w
 13686  072C  0436               	iorwf	??___fldiv,w
 13687  072D  1903               	skipnz
 13688  072E  1832               	btfsc	___fldiv@b,0
 13689  072F  2F31               	goto	l4287
 13690  0730  2F33               	goto	l4291
 13691  0731                     l4287:	
 13692  0731  01C7               	clrf	___fldiv@aexp
 13693  0732  0AC7               	incf	___fldiv@aexp,f
 13694  0733                     l4291:	
 13695  0733  0847               	movf	___fldiv@aexp,w
 13696  0734  1903               	btfsc	3,2
 13697  0735  2F5C               	goto	l4301
 13698  0736  3001               	movlw	1
 13699  0737  07B2               	addwf	___fldiv@b,f
 13700  0738  3000               	movlw	0
 13701  0739  3DB3               	addwfc	___fldiv@b+1,f
 13702  073A  3000               	movlw	0
 13703  073B  3DB4               	addwfc	___fldiv@b+2,f
 13704  073C  3000               	movlw	0
 13705  073D  3DB5               	addwfc	___fldiv@b+3,f
 13706  073E  1C35               	btfss	___fldiv@b+3,0
 13707  073F  2F5C               	goto	l4301
 13708  0740  0832               	movf	___fldiv@b,w
 13709  0741  00B6               	movwf	??___fldiv
 13710  0742  0833               	movf	___fldiv@b+1,w
 13711  0743  00B7               	movwf	??___fldiv+1
 13712  0744  0834               	movf	___fldiv@b+2,w
 13713  0745  00B8               	movwf	??___fldiv+2
 13714  0746  0835               	movf	___fldiv@b+3,w
 13715  0747  00B9               	movwf	??___fldiv+3
 13716  0748  3001               	movlw	1
 13717  0749  00BA               	movwf	??___fldiv+4
 13718  074A                     u4115:	
 13719  074A  37B9               	asrf	??___fldiv+3,f
 13720  074B  0CB8               	rrf	??___fldiv+2,f
 13721  074C  0CB7               	rrf	??___fldiv+1,f
 13722  074D  0CB6               	rrf	??___fldiv,f
 13723  074E  0BBA               	decfsz	??___fldiv+4,f
 13724  074F  2F4A               	goto	u4115
 13725  0750  0839               	movf	??___fldiv+3,w
 13726  0751  00B5               	movwf	___fldiv@b+3
 13727  0752  0838               	movf	??___fldiv+2,w
 13728  0753  00B4               	movwf	___fldiv@b+2
 13729  0754  0837               	movf	??___fldiv+1,w
 13730  0755  00B3               	movwf	___fldiv@b+1
 13731  0756  0836               	movf	??___fldiv,w
 13732  0757  00B2               	movwf	___fldiv@b
 13733  0758  3001               	movlw	1
 13734  0759  07C0               	addwf	___fldiv@new_exp,f
 13735  075A  3000               	movlw	0
 13736  075B  3DC1               	addwfc	___fldiv@new_exp+1,f
 13737  075C                     l4301:	
 13738  075C  0841               	movf	___fldiv@new_exp+1,w
 13739  075D  3A80               	xorlw	128
 13740  075E  00B6               	movwf	??___fldiv
 13741  075F  3080               	movlw	128
 13742  0760  0236               	subwf	??___fldiv,w
 13743  0761  1D03               	skipz
 13744  0762  2F65               	goto	u4125
 13745  0763  30FF               	movlw	255
 13746  0764  0240               	subwf	___fldiv@new_exp,w
 13747  0765                     u4125:	
 13748  0765  1C03               	skipc
 13749  0766  2F74               	goto	l1659
 13750  0767  30FF               	movlw	255
 13751  0768  0140               	movlb	0	; select bank0
 13752  0769  00C0               	movwf	___fldiv@new_exp
 13753  076A  3000               	movlw	0
 13754  076B  00C1               	movwf	___fldiv@new_exp+1
 13755  076C  3000               	movlw	0
 13756  076D  00B5               	movwf	___fldiv@b+3
 13757  076E  3000               	movlw	0
 13758  076F  00B4               	movwf	___fldiv@b+2
 13759  0770  3000               	movlw	0
 13760  0771  00B3               	movwf	___fldiv@b+1
 13761  0772  3000               	movlw	0
 13762  0773  00B2               	movwf	___fldiv@b
 13763  0774                     l1659:	
 13764  0774  0140               	movlb	0	; select bank0
 13765  0775  0841               	movf	___fldiv@new_exp+1,w
 13766  0776  3A80               	xorlw	128
 13767  0777  00B6               	movwf	??___fldiv
 13768  0778  3080               	movlw	128
 13769  0779  0236               	subwf	??___fldiv,w
 13770  077A  1D03               	skipz
 13771  077B  2F7E               	goto	u4135
 13772  077C  3001               	movlw	1
 13773  077D  0240               	subwf	___fldiv@new_exp,w
 13774  077E                     u4135:	
 13775  077E  1803               	skipnc
 13776  077F  2F8C               	goto	l1660
 13777  0780  0140               	movlb	0	; select bank0
 13778  0781  01C0               	clrf	___fldiv@new_exp
 13779  0782  01C1               	clrf	___fldiv@new_exp+1
 13780  0783  3000               	movlw	0
 13781  0784  00B5               	movwf	___fldiv@b+3
 13782  0785  3000               	movlw	0
 13783  0786  00B4               	movwf	___fldiv@b+2
 13784  0787  3000               	movlw	0
 13785  0788  00B3               	movwf	___fldiv@b+1
 13786  0789  3000               	movlw	0
 13787  078A  00B2               	movwf	___fldiv@b
 13788  078B  01BF               	clrf	___fldiv@sign
 13789  078C                     l1660:	
 13790  078C  0140               	movlb	0	; select bank0
 13791  078D  0840               	movf	___fldiv@new_exp,w
 13792  078E  00B6               	movwf	??___fldiv
 13793  078F  0836               	movf	??___fldiv,w
 13794  0790  00C6               	movwf	___fldiv@bexp
 13795  0791  1C46               	btfss	___fldiv@bexp,0
 13796  0792  2F95               	goto	l4315
 13797  0793  17B4               	bsf	___fldiv@b+2,7
 13798  0794  2F99               	goto	l1662
 13799  0795                     l4315:	
 13800  0795  307F               	movlw	127
 13801  0796  00B6               	movwf	??___fldiv
 13802  0797  0836               	movf	??___fldiv,w
 13803  0798  05B4               	andwf	___fldiv@b+2,f
 13804  0799                     l1662:	
 13805  0799  3646               	lsrf	___fldiv@bexp,w
 13806  079A  00B6               	movwf	??___fldiv
 13807  079B  0836               	movf	??___fldiv,w
 13808  079C  00B5               	movwf	___fldiv@b+3
 13809  079D  2E7F               	goto	L3
 13810  079E                     __end_of___fldiv:	
 13811                           
 13812                           	psect	text43
 13813  12EE                     __ptext43:	
 13814 ;; *************** function _LED_setColor *****************
 13815 ;; Defined at:
 13816 ;;		line 60 in file "led.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;  red             1    wreg     unsigned char 
 13819 ;;  green           1    0[BANK0 ] unsigned char 
 13820 ;;  white           1    1[BANK0 ] unsigned char 
 13821 ;;  blue            1    2[BANK0 ] unsigned char 
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;  red             1   21[BANK0 ] unsigned char 
 13824 ;;  lo4             2   19[BANK0 ] int 
 13825 ;;  hi4             2    0        int 
 13826 ;;  lo3             2   15[BANK0 ] int 
 13827 ;;  hi3             2    0        int 
 13828 ;;  lo2             2   11[BANK0 ] int 
 13829 ;;  hi2             2    0        int 
 13830 ;;  lo1             2    7[BANK0 ] int 
 13831 ;;  hi1             2    0        int 
 13832 ;; Return value:  Size  Location     Type
 13833 ;;                  1    wreg      void 
 13834 ;; Registers used:
 13835 ;;		wreg, status,2
 13836 ;; Tracked objects:
 13837 ;;		On entry : 0/0
 13838 ;;		On exit  : 0/0
 13839 ;;		Unchanged: 0/0
 13840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13841 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13842 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13844 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13845 ;;Total ram usage:       22 bytes
 13846 ;; Hardware stack levels used:    1
 13847 ;; Hardware stack levels required when called:    4
 13848 ;; This function calls:
 13849 ;;		Nothing
 13850 ;; This function is called by:
 13851 ;;		_LED_setHSL
 13852 ;;		_LED_DMX
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           
 13857                           ;psect for function _LED_setColor
 13858  12EE                     _LED_setColor:	
 13859                           
 13860                           ;incstack = 0
 13861                           ; Regs used in _LED_setColor: [wreg+status,2]
 13862                           ;LED_setColor@red stored from wreg
 13863  12EE  0140               	movlb	0	; select bank0
 13864  12EF  00B5               	movwf	LED_setColor@red
 13865                           
 13866                           ;led.c: 61:     red/=2;
 13867  12F0  1003               	clrc
 13868  12F1  0CB5               	rrf	LED_setColor@red,f
 13869                           
 13870                           ;led.c: 62:     green/=2;
 13871  12F2  1003               	clrc
 13872  12F3  0CA0               	rrf	LED_setColor@green,f
 13873                           
 13874                           ;led.c: 63:     blue/=2;
 13875  12F4  1003               	clrc
 13876  12F5  0CA2               	rrf	LED_setColor@blue,f
 13877                           
 13878                           ;led.c: 64:     white/=2;
 13879  12F6  1003               	clrc
 13880  12F7  0CA1               	rrf	LED_setColor@white,f
 13881                           
 13882                           ;led.c: 66:     int lo1 = red & 0x00FF;
 13883  12F8  0835               	movf	LED_setColor@red,w
 13884  12F9  00A3               	movwf	??_LED_setColor
 13885  12FA  01A4               	clrf	??_LED_setColor+1
 13886  12FB  0823               	movf	??_LED_setColor,w
 13887  12FC  00A7               	movwf	LED_setColor@lo1
 13888  12FD  0824               	movf	??_LED_setColor+1,w
 13889  12FE  00A8               	movwf	LED_setColor@lo1+1
 13890                           
 13891                           ;led.c: 68:     int lo2 = green & 0x00FF;
 13892  12FF  0820               	movf	LED_setColor@green,w
 13893  1300  00A3               	movwf	??_LED_setColor
 13894  1301  01A4               	clrf	??_LED_setColor+1
 13895  1302  0823               	movf	??_LED_setColor,w
 13896  1303  00AB               	movwf	LED_setColor@lo2
 13897  1304  0824               	movf	??_LED_setColor+1,w
 13898  1305  00AC               	movwf	LED_setColor@lo2+1
 13899                           
 13900                           ;led.c: 70:     int lo3 = blue & 0x00FF;
 13901  1306  0822               	movf	LED_setColor@blue,w
 13902  1307  00A3               	movwf	??_LED_setColor
 13903  1308  01A4               	clrf	??_LED_setColor+1
 13904  1309  0823               	movf	??_LED_setColor,w
 13905  130A  00AF               	movwf	LED_setColor@lo3
 13906  130B  0824               	movf	??_LED_setColor+1,w
 13907  130C  00B0               	movwf	LED_setColor@lo3+1
 13908                           
 13909                           ;led.c: 72:     int lo4 = white & 0x00FF;
 13910  130D  0821               	movf	LED_setColor@white,w
 13911  130E  00A3               	movwf	??_LED_setColor
 13912  130F  01A4               	clrf	??_LED_setColor+1
 13913  1310  0823               	movf	??_LED_setColor,w
 13914  1311  00B3               	movwf	LED_setColor@lo4
 13915  1312  0824               	movf	??_LED_setColor+1,w
 13916  1313  00B4               	movwf	LED_setColor@lo4+1
 13917                           
 13918                           ;led.c: 74:     CCPR1H = hi1;
 13919  1314  0146               	movlb	6	; select bank6
 13920  1315  018D               	clrf	13	;volatile
 13921                           
 13922                           ;led.c: 75:     CCPR1L = lo1;
 13923  1316  0140               	movlb	0	; select bank0
 13924  1317  0827               	movf	LED_setColor@lo1,w
 13925  1318  0146               	movlb	6	; select bank6
 13926  1319  008C               	movwf	12	;volatile
 13927                           
 13928                           ;led.c: 77:     CCPR2H = hi2;
 13929  131A  0191               	clrf	17	;volatile
 13930                           
 13931                           ;led.c: 78:     CCPR2L = lo2;
 13932  131B  0140               	movlb	0	; select bank0
 13933  131C  082B               	movf	LED_setColor@lo2,w
 13934  131D  0146               	movlb	6	; select bank6
 13935  131E  0090               	movwf	16	;volatile
 13936                           
 13937                           ;led.c: 80:     CCPR3H = hi3;
 13938  131F  0195               	clrf	21	;volatile
 13939                           
 13940                           ;led.c: 81:     CCPR3L = lo3;
 13941  1320  0140               	movlb	0	; select bank0
 13942  1321  082F               	movf	LED_setColor@lo3,w
 13943  1322  0146               	movlb	6	; select bank6
 13944  1323  0094               	movwf	20	;volatile
 13945                           
 13946                           ;led.c: 83:     CCPR4H = hi4;
 13947  1324  0199               	clrf	25	;volatile
 13948                           
 13949                           ;led.c: 84:     CCPR4L = lo4;
 13950  1325  0140               	movlb	0	; select bank0
 13951  1326  0833               	movf	LED_setColor@lo4,w
 13952  1327  0146               	movlb	6	; select bank6
 13953  1328  0098               	movwf	24	;volatile
 13954  1329  0008               	return
 13955  132A                     __end_of_LED_setColor:	
 13956                           
 13957                           	psect	text44
 13958  0E1C                     __ptext44:	
 13959 ;; *************** function _HueToRGB *****************
 13960 ;; Defined at:
 13961 ;;		line 41 in file "led.c"
 13962 ;; Parameters:    Size  Location     Type
 13963 ;;  v1              4   67[BANK0 ] float 
 13964 ;;  v2              4   71[BANK0 ] float 
 13965 ;;  vH              4   75[BANK0 ] float 
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;		None
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  4   67[BANK0 ] float 
 13970 ;; Registers used:
 13971 ;;		wreg, status,2, status,0, pclath, cstack
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13977 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13978 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13980 ;;      Totals:         0      12       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13981 ;;Total ram usage:       16 bytes
 13982 ;; Hardware stack levels used:    1
 13983 ;; Hardware stack levels required when called:    6
 13984 ;; This function calls:
 13985 ;;		___fladd
 13986 ;;		___flge
 13987 ;;		___flmul
 13988 ;;		___flsub
 13989 ;; This function is called by:
 13990 ;;		_LED_setHSL
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           
 13995                           ;psect for function _HueToRGB
 13996  0E1C                     _HueToRGB:	
 13997                           
 13998                           ;led.c: 42:  if (vH < 0)
 13999                           
 14000                           ;incstack = 0
 14001                           ; Regs used in _HueToRGB: [wreg+status,2+status,0+pclath+cstack]
 14002  0E1C  0140               	movlb	0	; select bank0
 14003  0E1D  086E               	movf	HueToRGB@vH+3,w
 14004  0E1E  00DA               	movwf	___flge@ff1+3
 14005  0E1F  086D               	movf	HueToRGB@vH+2,w
 14006  0E20  00D9               	movwf	___flge@ff1+2
 14007  0E21  086C               	movf	HueToRGB@vH+1,w
 14008  0E22  00D8               	movwf	___flge@ff1+1
 14009  0E23  086B               	movf	HueToRGB@vH,w
 14010  0E24  00D7               	movwf	___flge@ff1
 14011  0E25  3000               	movlw	0
 14012  0E26  00DE               	movwf	___flge@ff2+3
 14013  0E27  3000               	movlw	0
 14014  0E28  00DD               	movwf	___flge@ff2+2
 14015  0E29  3000               	movlw	0
 14016  0E2A  00DC               	movwf	___flge@ff2+1
 14017  0E2B  3000               	movlw	0
 14018  0E2C  00DB               	movwf	___flge@ff2
 14019  0E2D  3195  252D  318E   	fcall	___flge
 14020  0E30  1803               	btfsc	3,0
 14021  0E31  2E4F               	goto	l969
 14022                           
 14023                           ;led.c: 43:   vH += 1;
 14024  0E32  303F               	movlw	63
 14025  0E33  0140               	movlb	0	; select bank0
 14026  0E34  00AC               	movwf	___fladd@b+3
 14027  0E35  3080               	movlw	128
 14028  0E36  00AB               	movwf	___fladd@b+2
 14029  0E37  3000               	movlw	0
 14030  0E38  00AA               	movwf	___fladd@b+1
 14031  0E39  3000               	movlw	0
 14032  0E3A  00A9               	movwf	___fladd@b
 14033  0E3B  086E               	movf	HueToRGB@vH+3,w
 14034  0E3C  00B0               	movwf	___fladd@a+3
 14035  0E3D  086D               	movf	HueToRGB@vH+2,w
 14036  0E3E  00AF               	movwf	___fladd@a+2
 14037  0E3F  086C               	movf	HueToRGB@vH+1,w
 14038  0E40  00AE               	movwf	___fladd@a+1
 14039  0E41  086B               	movf	HueToRGB@vH,w
 14040  0E42  00AD               	movwf	___fladd@a
 14041  0E43  318C  243A  318E   	fcall	___fladd
 14042  0E46  0140               	movlb	0	; select bank0
 14043  0E47  082C               	movf	?___fladd+3,w
 14044  0E48  00EE               	movwf	HueToRGB@vH+3
 14045  0E49  082B               	movf	?___fladd+2,w
 14046  0E4A  00ED               	movwf	HueToRGB@vH+2
 14047  0E4B  082A               	movf	?___fladd+1,w
 14048  0E4C  00EC               	movwf	HueToRGB@vH+1
 14049  0E4D  0829               	movf	?___fladd,w
 14050  0E4E  00EB               	movwf	HueToRGB@vH
 14051  0E4F                     l969:	
 14052                           
 14053                           ;led.c: 45:  if (vH > 1)
 14054  0E4F  303F               	movlw	63
 14055  0E50  0140               	movlb	0	; select bank0
 14056  0E51  00DA               	movwf	___flge@ff1+3
 14057  0E52  3080               	movlw	128
 14058  0E53  00D9               	movwf	___flge@ff1+2
 14059  0E54  3000               	movlw	0
 14060  0E55  00D8               	movwf	___flge@ff1+1
 14061  0E56  3000               	movlw	0
 14062  0E57  00D7               	movwf	___flge@ff1
 14063  0E58  086E               	movf	HueToRGB@vH+3,w
 14064  0E59  00DE               	movwf	___flge@ff2+3
 14065  0E5A  086D               	movf	HueToRGB@vH+2,w
 14066  0E5B  00DD               	movwf	___flge@ff2+2
 14067  0E5C  086C               	movf	HueToRGB@vH+1,w
 14068  0E5D  00DC               	movwf	___flge@ff2+1
 14069  0E5E  086B               	movf	HueToRGB@vH,w
 14070  0E5F  00DB               	movwf	___flge@ff2
 14071  0E60  3195  252D  318E   	fcall	___flge
 14072  0E63  1803               	btfsc	3,0
 14073  0E64  2E82               	goto	l970
 14074                           
 14075                           ;led.c: 46:   vH -= 1;
 14076  0E65  303F               	movlw	63
 14077  0E66  0140               	movlb	0	; select bank0
 14078  0E67  00DA               	movwf	___flsub@a+3
 14079  0E68  3080               	movlw	128
 14080  0E69  00D9               	movwf	___flsub@a+2
 14081  0E6A  3000               	movlw	0
 14082  0E6B  00D8               	movwf	___flsub@a+1
 14083  0E6C  3000               	movlw	0
 14084  0E6D  00D7               	movwf	___flsub@a
 14085  0E6E  086E               	movf	HueToRGB@vH+3,w
 14086  0E6F  00DE               	movwf	___flsub@b+3
 14087  0E70  086D               	movf	HueToRGB@vH+2,w
 14088  0E71  00DD               	movwf	___flsub@b+2
 14089  0E72  086C               	movf	HueToRGB@vH+1,w
 14090  0E73  00DC               	movwf	___flsub@b+1
 14091  0E74  086B               	movf	HueToRGB@vH,w
 14092  0E75  00DB               	movwf	___flsub@b
 14093  0E76  3190  2021  318E   	fcall	___flsub
 14094  0E79  0140               	movlb	0	; select bank0
 14095  0E7A  085A               	movf	?___flsub+3,w
 14096  0E7B  00EE               	movwf	HueToRGB@vH+3
 14097  0E7C  0859               	movf	?___flsub+2,w
 14098  0E7D  00ED               	movwf	HueToRGB@vH+2
 14099  0E7E  0858               	movf	?___flsub+1,w
 14100  0E7F  00EC               	movwf	HueToRGB@vH+1
 14101  0E80  0857               	movf	?___flsub,w
 14102  0E81  00EB               	movwf	HueToRGB@vH
 14103  0E82                     l970:	
 14104                           
 14105                           ;led.c: 48:  if ((6 * vH) < 1)
 14106  0E82  3040               	movlw	64
 14107  0E83  0140               	movlb	0	; select bank0
 14108  0E84  00C0               	movwf	___flmul@b+3
 14109  0E85  30C0               	movlw	192
 14110  0E86  00BF               	movwf	___flmul@b+2
 14111  0E87  3000               	movlw	0
 14112  0E88  00BE               	movwf	___flmul@b+1
 14113  0E89  3000               	movlw	0
 14114  0E8A  00BD               	movwf	___flmul@b
 14115  0E8B  086E               	movf	HueToRGB@vH+3,w
 14116  0E8C  00C4               	movwf	___flmul@a+3
 14117  0E8D  086D               	movf	HueToRGB@vH+2,w
 14118  0E8E  00C3               	movwf	___flmul@a+2
 14119  0E8F  086C               	movf	HueToRGB@vH+1,w
 14120  0E90  00C2               	movwf	___flmul@a+1
 14121  0E91  086B               	movf	HueToRGB@vH,w
 14122  0E92  00C1               	movwf	___flmul@a
 14123  0E93  3183  23F8  318E   	fcall	___flmul
 14124  0E96  0140               	movlb	0	; select bank0
 14125  0E97  0840               	movf	?___flmul+3,w
 14126  0E98  00DA               	movwf	___flge@ff1+3
 14127  0E99  083F               	movf	?___flmul+2,w
 14128  0E9A  00D9               	movwf	___flge@ff1+2
 14129  0E9B  083E               	movf	?___flmul+1,w
 14130  0E9C  00D8               	movwf	___flge@ff1+1
 14131  0E9D  083D               	movf	?___flmul,w
 14132  0E9E  00D7               	movwf	___flge@ff1
 14133  0E9F  303F               	movlw	63
 14134  0EA0  00DE               	movwf	___flge@ff2+3
 14135  0EA1  3080               	movlw	128
 14136  0EA2  00DD               	movwf	___flge@ff2+2
 14137  0EA3  3000               	movlw	0
 14138  0EA4  00DC               	movwf	___flge@ff2+1
 14139  0EA5  3000               	movlw	0
 14140  0EA6  00DB               	movwf	___flge@ff2
 14141  0EA7  3195  252D  318E   	fcall	___flge
 14142  0EAA  1803               	btfsc	3,0
 14143  0EAB  2F1D               	goto	l5553
 14144                           
 14145                           ;led.c: 49:   return (v1 + (v2 - v1) * 6 * vH);
 14146  0EAC  3040               	movlw	64
 14147  0EAD  0140               	movlb	0	; select bank0
 14148  0EAE  00C0               	movwf	___flmul@b+3
 14149  0EAF  30C0               	movlw	192
 14150  0EB0  00BF               	movwf	___flmul@b+2
 14151  0EB1  3000               	movlw	0
 14152  0EB2  00BE               	movwf	___flmul@b+1
 14153  0EB3  3000               	movlw	0
 14154  0EB4  00BD               	movwf	___flmul@b
 14155  0EB5  0866               	movf	HueToRGB@v1+3,w
 14156  0EB6  00DA               	movwf	___flsub@a+3
 14157  0EB7  0865               	movf	HueToRGB@v1+2,w
 14158  0EB8  00D9               	movwf	___flsub@a+2
 14159  0EB9  0864               	movf	HueToRGB@v1+1,w
 14160  0EBA  00D8               	movwf	___flsub@a+1
 14161  0EBB  0863               	movf	HueToRGB@v1,w
 14162  0EBC  00D7               	movwf	___flsub@a
 14163  0EBD  086A               	movf	HueToRGB@v2+3,w
 14164  0EBE  00DE               	movwf	___flsub@b+3
 14165  0EBF  0869               	movf	HueToRGB@v2+2,w
 14166  0EC0  00DD               	movwf	___flsub@b+2
 14167  0EC1  0868               	movf	HueToRGB@v2+1,w
 14168  0EC2  00DC               	movwf	___flsub@b+1
 14169  0EC3  0867               	movf	HueToRGB@v2,w
 14170  0EC4  00DB               	movwf	___flsub@b
 14171  0EC5  3190  2021  318E   	fcall	___flsub
 14172  0EC8  0140               	movlb	0	; select bank0
 14173  0EC9  085A               	movf	?___flsub+3,w
 14174  0ECA  00C4               	movwf	___flmul@a+3
 14175  0ECB  0859               	movf	?___flsub+2,w
 14176  0ECC  00C3               	movwf	___flmul@a+2
 14177  0ECD  0858               	movf	?___flsub+1,w
 14178  0ECE  00C2               	movwf	___flmul@a+1
 14179  0ECF  0857               	movf	?___flsub,w
 14180  0ED0  00C1               	movwf	___flmul@a
 14181  0ED1  3183  23F8  318E   	fcall	___flmul
 14182  0ED4  0140               	movlb	0	; select bank0
 14183  0ED5  0840               	movf	?___flmul+3,w
 14184  0ED6  0141               	movlb	1	; select bank1
 14185  0ED7  00A3               	movwf	(_HueToRGB$2871+3)^(0+128)
 14186  0ED8  0140               	movlb	0	; select bank0
 14187  0ED9  083F               	movf	?___flmul+2,w
 14188  0EDA  0141               	movlb	1	; select bank1
 14189  0EDB  00A2               	movwf	(_HueToRGB$2871+2)^(0+128)
 14190  0EDC  0140               	movlb	0	; select bank0
 14191  0EDD  083E               	movf	?___flmul+1,w
 14192  0EDE  0141               	movlb	1	; select bank1
 14193  0EDF  00A1               	movwf	(_HueToRGB$2871+1)^(0+128)
 14194  0EE0  0140               	movlb	0	; select bank0
 14195  0EE1  083D               	movf	?___flmul,w
 14196  0EE2  0141               	movlb	1	; select bank1
 14197  0EE3  00A0               	movwf	_HueToRGB$2871^(0+128)
 14198                           
 14199                           ;led.c: 49:   return (v1 + (v2 - v1) * 6 * vH);
 14200  0EE4  0140               	movlb	0	; select bank0
 14201  0EE5  0866               	movf	HueToRGB@v1+3,w
 14202  0EE6  00AC               	movwf	___fladd@b+3
 14203  0EE7  0865               	movf	HueToRGB@v1+2,w
 14204  0EE8  00AB               	movwf	___fladd@b+2
 14205  0EE9  0864               	movf	HueToRGB@v1+1,w
 14206  0EEA  00AA               	movwf	___fladd@b+1
 14207  0EEB  0863               	movf	HueToRGB@v1,w
 14208  0EEC  00A9               	movwf	___fladd@b
 14209  0EED  086E               	movf	HueToRGB@vH+3,w
 14210  0EEE  00C0               	movwf	___flmul@b+3
 14211  0EEF  086D               	movf	HueToRGB@vH+2,w
 14212  0EF0  00BF               	movwf	___flmul@b+2
 14213  0EF1  086C               	movf	HueToRGB@vH+1,w
 14214  0EF2  00BE               	movwf	___flmul@b+1
 14215  0EF3  086B               	movf	HueToRGB@vH,w
 14216  0EF4  00BD               	movwf	___flmul@b
 14217  0EF5  0141               	movlb	1	; select bank1
 14218  0EF6  0823               	movf	(_HueToRGB$2871+3)^(0+128),w
 14219  0EF7  0140               	movlb	0	; select bank0
 14220  0EF8  00C4               	movwf	___flmul@a+3
 14221  0EF9  0141               	movlb	1	; select bank1
 14222  0EFA  0822               	movf	(_HueToRGB$2871+2)^(0+128),w
 14223  0EFB  0140               	movlb	0	; select bank0
 14224  0EFC  00C3               	movwf	___flmul@a+2
 14225  0EFD  0141               	movlb	1	; select bank1
 14226  0EFE  0821               	movf	(_HueToRGB$2871+1)^(0+128),w
 14227  0EFF  0140               	movlb	0	; select bank0
 14228  0F00  00C2               	movwf	___flmul@a+1
 14229  0F01  0141               	movlb	1	; select bank1
 14230  0F02  0820               	movf	_HueToRGB$2871^(0+128),w
 14231  0F03  0140               	movlb	0	; select bank0
 14232  0F04  00C1               	movwf	___flmul@a
 14233  0F05  3183  23F8  318E   	fcall	___flmul
 14234  0F08  0140               	movlb	0	; select bank0
 14235  0F09  0840               	movf	?___flmul+3,w
 14236  0F0A  00B0               	movwf	___fladd@a+3
 14237  0F0B  083F               	movf	?___flmul+2,w
 14238  0F0C  00AF               	movwf	___fladd@a+2
 14239  0F0D  083E               	movf	?___flmul+1,w
 14240  0F0E  00AE               	movwf	___fladd@a+1
 14241  0F0F  083D               	movf	?___flmul,w
 14242  0F10  00AD               	movwf	___fladd@a
 14243  0F11  318C  243A         	fcall	___fladd
 14244  0F13  0140               	movlb	0	; select bank0
 14245  0F14  082C               	movf	?___fladd+3,w
 14246  0F15  00E6               	movwf	?_HueToRGB+3
 14247  0F16  082B               	movf	?___fladd+2,w
 14248  0F17  00E5               	movwf	?_HueToRGB+2
 14249  0F18  082A               	movf	?___fladd+1,w
 14250  0F19  00E4               	movwf	?_HueToRGB+1
 14251  0F1A  0829               	movf	?___fladd,w
 14252  0F1B  00E3               	movwf	?_HueToRGB
 14253  0F1C  0008               	return
 14254  0F1D                     l5553:	
 14255                           
 14256                           ;led.c: 51:  if ((2 * vH) < 1)
 14257  0F1D  3040               	movlw	64
 14258  0F1E  0140               	movlb	0	; select bank0
 14259  0F1F  00C0               	movwf	___flmul@b+3
 14260  0F20  3000               	movlw	0
 14261  0F21  00BF               	movwf	___flmul@b+2
 14262  0F22  3000               	movlw	0
 14263  0F23  00BE               	movwf	___flmul@b+1
 14264  0F24  3000               	movlw	0
 14265  0F25  00BD               	movwf	___flmul@b
 14266  0F26  086E               	movf	HueToRGB@vH+3,w
 14267  0F27  00C4               	movwf	___flmul@a+3
 14268  0F28  086D               	movf	HueToRGB@vH+2,w
 14269  0F29  00C3               	movwf	___flmul@a+2
 14270  0F2A  086C               	movf	HueToRGB@vH+1,w
 14271  0F2B  00C2               	movwf	___flmul@a+1
 14272  0F2C  086B               	movf	HueToRGB@vH,w
 14273  0F2D  00C1               	movwf	___flmul@a
 14274  0F2E  3183  23F8  318E   	fcall	___flmul
 14275  0F31  0140               	movlb	0	; select bank0
 14276  0F32  0840               	movf	?___flmul+3,w
 14277  0F33  00DA               	movwf	___flge@ff1+3
 14278  0F34  083F               	movf	?___flmul+2,w
 14279  0F35  00D9               	movwf	___flge@ff1+2
 14280  0F36  083E               	movf	?___flmul+1,w
 14281  0F37  00D8               	movwf	___flge@ff1+1
 14282  0F38  083D               	movf	?___flmul,w
 14283  0F39  00D7               	movwf	___flge@ff1
 14284  0F3A  303F               	movlw	63
 14285  0F3B  00DE               	movwf	___flge@ff2+3
 14286  0F3C  3080               	movlw	128
 14287  0F3D  00DD               	movwf	___flge@ff2+2
 14288  0F3E  3000               	movlw	0
 14289  0F3F  00DC               	movwf	___flge@ff2+1
 14290  0F40  3000               	movlw	0
 14291  0F41  00DB               	movwf	___flge@ff2
 14292  0F42  3195  252D  318E   	fcall	___flge
 14293  0F45  1803               	btfsc	3,0
 14294  0F46  2F51               	goto	l5559
 14295                           
 14296                           ;led.c: 52:   return v2;
 14297  0F47  0140               	movlb	0	; select bank0
 14298  0F48  086A               	movf	HueToRGB@v2+3,w
 14299  0F49  00E6               	movwf	?_HueToRGB+3
 14300  0F4A  0869               	movf	HueToRGB@v2+2,w
 14301  0F4B  00E5               	movwf	?_HueToRGB+2
 14302  0F4C  0868               	movf	HueToRGB@v2+1,w
 14303  0F4D  00E4               	movwf	?_HueToRGB+1
 14304  0F4E  0867               	movf	HueToRGB@v2,w
 14305  0F4F  00E3               	movwf	?_HueToRGB
 14306  0F50  0008               	return
 14307  0F51                     l5559:	
 14308                           
 14309                           ;led.c: 54:  if ((3 * vH) < 2)
 14310  0F51  3040               	movlw	64
 14311  0F52  0140               	movlb	0	; select bank0
 14312  0F53  00C0               	movwf	___flmul@b+3
 14313  0F54  3040               	movlw	64
 14314  0F55  00BF               	movwf	___flmul@b+2
 14315  0F56  3000               	movlw	0
 14316  0F57  00BE               	movwf	___flmul@b+1
 14317  0F58  3000               	movlw	0
 14318  0F59  00BD               	movwf	___flmul@b
 14319  0F5A  086E               	movf	HueToRGB@vH+3,w
 14320  0F5B  00C4               	movwf	___flmul@a+3
 14321  0F5C  086D               	movf	HueToRGB@vH+2,w
 14322  0F5D  00C3               	movwf	___flmul@a+2
 14323  0F5E  086C               	movf	HueToRGB@vH+1,w
 14324  0F5F  00C2               	movwf	___flmul@a+1
 14325  0F60  086B               	movf	HueToRGB@vH,w
 14326  0F61  00C1               	movwf	___flmul@a
 14327  0F62  3183  23F8  318E   	fcall	___flmul
 14328  0F65  0140               	movlb	0	; select bank0
 14329  0F66  0840               	movf	?___flmul+3,w
 14330  0F67  00DA               	movwf	___flge@ff1+3
 14331  0F68  083F               	movf	?___flmul+2,w
 14332  0F69  00D9               	movwf	___flge@ff1+2
 14333  0F6A  083E               	movf	?___flmul+1,w
 14334  0F6B  00D8               	movwf	___flge@ff1+1
 14335  0F6C  083D               	movf	?___flmul,w
 14336  0F6D  00D7               	movwf	___flge@ff1
 14337  0F6E  3040               	movlw	64
 14338  0F6F  00DE               	movwf	___flge@ff2+3
 14339  0F70  3000               	movlw	0
 14340  0F71  00DD               	movwf	___flge@ff2+2
 14341  0F72  3000               	movlw	0
 14342  0F73  00DC               	movwf	___flge@ff2+1
 14343  0F74  3000               	movlw	0
 14344  0F75  00DB               	movwf	___flge@ff2
 14345  0F76  3195  252D  318E   	fcall	___flge
 14346  0F79  1803               	btfsc	3,0
 14347  0F7A  0008               	return
 14348                           
 14349                           ;led.c: 55:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14350  0F7B  0140               	movlb	0	; select bank0
 14351  0F7C  086E               	movf	HueToRGB@vH+3,w
 14352  0F7D  00DA               	movwf	___flsub@a+3
 14353  0F7E  086D               	movf	HueToRGB@vH+2,w
 14354  0F7F  00D9               	movwf	___flsub@a+2
 14355  0F80  086C               	movf	HueToRGB@vH+1,w
 14356  0F81  00D8               	movwf	___flsub@a+1
 14357  0F82  086B               	movf	HueToRGB@vH,w
 14358  0F83  00D7               	movwf	___flsub@a
 14359  0F84  303F               	movlw	63
 14360  0F85  00DE               	movwf	___flsub@b+3
 14361  0F86  302A               	movlw	42
 14362  0F87  00DD               	movwf	___flsub@b+2
 14363  0F88  30AA               	movlw	170
 14364  0F89  00DC               	movwf	___flsub@b+1
 14365  0F8A  30AB               	movlw	171
 14366  0F8B  00DB               	movwf	___flsub@b
 14367  0F8C  3190  2021  318E   	fcall	___flsub
 14368  0F8F  0140               	movlb	0	; select bank0
 14369  0F90  085A               	movf	?___flsub+3,w
 14370  0F91  00C0               	movwf	___flmul@b+3
 14371  0F92  0859               	movf	?___flsub+2,w
 14372  0F93  00BF               	movwf	___flmul@b+2
 14373  0F94  0858               	movf	?___flsub+1,w
 14374  0F95  00BE               	movwf	___flmul@b+1
 14375  0F96  0857               	movf	?___flsub,w
 14376  0F97  00BD               	movwf	___flmul@b
 14377  0F98  0866               	movf	HueToRGB@v1+3,w
 14378  0F99  00DA               	movwf	___flsub@a+3
 14379  0F9A  0865               	movf	HueToRGB@v1+2,w
 14380  0F9B  00D9               	movwf	___flsub@a+2
 14381  0F9C  0864               	movf	HueToRGB@v1+1,w
 14382  0F9D  00D8               	movwf	___flsub@a+1
 14383  0F9E  0863               	movf	HueToRGB@v1,w
 14384  0F9F  00D7               	movwf	___flsub@a
 14385  0FA0  086A               	movf	HueToRGB@v2+3,w
 14386  0FA1  00DE               	movwf	___flsub@b+3
 14387  0FA2  0869               	movf	HueToRGB@v2+2,w
 14388  0FA3  00DD               	movwf	___flsub@b+2
 14389  0FA4  0868               	movf	HueToRGB@v2+1,w
 14390  0FA5  00DC               	movwf	___flsub@b+1
 14391  0FA6  0867               	movf	HueToRGB@v2,w
 14392  0FA7  00DB               	movwf	___flsub@b
 14393  0FA8  3190  2021  318E   	fcall	___flsub
 14394  0FAB  0140               	movlb	0	; select bank0
 14395  0FAC  085A               	movf	?___flsub+3,w
 14396  0FAD  00C4               	movwf	___flmul@a+3
 14397  0FAE  0859               	movf	?___flsub+2,w
 14398  0FAF  00C3               	movwf	___flmul@a+2
 14399  0FB0  0858               	movf	?___flsub+1,w
 14400  0FB1  00C2               	movwf	___flmul@a+1
 14401  0FB2  0857               	movf	?___flsub,w
 14402  0FB3  00C1               	movwf	___flmul@a
 14403  0FB4  3183  23F8  318E   	fcall	___flmul
 14404  0FB7  0140               	movlb	0	; select bank0
 14405  0FB8  0840               	movf	?___flmul+3,w
 14406  0FB9  0141               	movlb	1	; select bank1
 14407  0FBA  00A3               	movwf	(_HueToRGB$2871+3)^(0+128)
 14408  0FBB  0140               	movlb	0	; select bank0
 14409  0FBC  083F               	movf	?___flmul+2,w
 14410  0FBD  0141               	movlb	1	; select bank1
 14411  0FBE  00A2               	movwf	(_HueToRGB$2871+2)^(0+128)
 14412  0FBF  0140               	movlb	0	; select bank0
 14413  0FC0  083E               	movf	?___flmul+1,w
 14414  0FC1  0141               	movlb	1	; select bank1
 14415  0FC2  00A1               	movwf	(_HueToRGB$2871+1)^(0+128)
 14416  0FC3  0140               	movlb	0	; select bank0
 14417  0FC4  083D               	movf	?___flmul,w
 14418  0FC5  0141               	movlb	1	; select bank1
 14419  0FC6  00A0               	movwf	_HueToRGB$2871^(0+128)
 14420                           
 14421                           ;led.c: 55:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14422  0FC7  0140               	movlb	0	; select bank0
 14423  0FC8  0866               	movf	HueToRGB@v1+3,w
 14424  0FC9  00AC               	movwf	___fladd@b+3
 14425  0FCA  0865               	movf	HueToRGB@v1+2,w
 14426  0FCB  00AB               	movwf	___fladd@b+2
 14427  0FCC  0864               	movf	HueToRGB@v1+1,w
 14428  0FCD  00AA               	movwf	___fladd@b+1
 14429  0FCE  0863               	movf	HueToRGB@v1,w
 14430  0FCF  00A9               	movwf	___fladd@b
 14431  0FD0  3040               	movlw	64
 14432  0FD1  00C0               	movwf	___flmul@b+3
 14433  0FD2  30C0               	movlw	192
 14434  0FD3  00BF               	movwf	___flmul@b+2
 14435  0FD4  3000               	movlw	0
 14436  0FD5  00BE               	movwf	___flmul@b+1
 14437  0FD6  3000               	movlw	0
 14438  0FD7  00BD               	movwf	___flmul@b
 14439  0FD8  0141               	movlb	1	; select bank1
 14440  0FD9  0823               	movf	(_HueToRGB$2871+3)^(0+128),w
 14441  0FDA  0140               	movlb	0	; select bank0
 14442  0FDB  00C4               	movwf	___flmul@a+3
 14443  0FDC  0141               	movlb	1	; select bank1
 14444  0FDD  0822               	movf	(_HueToRGB$2871+2)^(0+128),w
 14445  0FDE  0140               	movlb	0	; select bank0
 14446  0FDF  00C3               	movwf	___flmul@a+2
 14447  0FE0  0141               	movlb	1	; select bank1
 14448  0FE1  0821               	movf	(_HueToRGB$2871+1)^(0+128),w
 14449  0FE2  0140               	movlb	0	; select bank0
 14450  0FE3  00C2               	movwf	___flmul@a+1
 14451  0FE4  0141               	movlb	1	; select bank1
 14452  0FE5  0820               	movf	_HueToRGB$2871^(0+128),w
 14453  0FE6  0140               	movlb	0	; select bank0
 14454  0FE7  00C1               	movwf	___flmul@a
 14455  0FE8  3183  23F8  318E   	fcall	___flmul
 14456  0FEB  0140               	movlb	0	; select bank0
 14457  0FEC  0840               	movf	?___flmul+3,w
 14458  0FED  00B0               	movwf	___fladd@a+3
 14459  0FEE  083F               	movf	?___flmul+2,w
 14460  0FEF  00AF               	movwf	___fladd@a+2
 14461  0FF0  083E               	movf	?___flmul+1,w
 14462  0FF1  00AE               	movwf	___fladd@a+1
 14463  0FF2  083D               	movf	?___flmul,w
 14464  0FF3  00AD               	movwf	___fladd@a
 14465  0FF4  318C  243A         	fcall	___fladd
 14466  0FF6  0140               	movlb	0	; select bank0
 14467  0FF7  082C               	movf	?___fladd+3,w
 14468  0FF8  00E6               	movwf	?_HueToRGB+3
 14469  0FF9  082B               	movf	?___fladd+2,w
 14470  0FFA  00E5               	movwf	?_HueToRGB+2
 14471  0FFB  082A               	movf	?___fladd+1,w
 14472  0FFC  00E4               	movwf	?_HueToRGB+1
 14473  0FFD  0829               	movf	?___fladd,w
 14474  0FFE  00E3               	movwf	?_HueToRGB
 14475  0FFF  0008               	return
 14476  1000                     __end_of_HueToRGB:	
 14477                           ;led.c: 57:  return v1;
 14478                           
 14479                           
 14480                           	psect	text45
 14481  1021                     __ptext45:	
 14482 ;; *************** function ___flsub *****************
 14483 ;; Defined at:
 14484 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;  a               4   55[BANK0 ] float 
 14487 ;;  b               4   59[BANK0 ] float 
 14488 ;; Auto vars:     Size  Location     Type
 14489 ;;		None
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  4   55[BANK0 ] float 
 14492 ;; Registers used:
 14493 ;;		wreg, status,2, status,0, pclath, cstack
 14494 ;; Tracked objects:
 14495 ;;		On entry : 0/0
 14496 ;;		On exit  : 0/0
 14497 ;;		Unchanged: 0/0
 14498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14499 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14502 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14503 ;;Total ram usage:        8 bytes
 14504 ;; Hardware stack levels used:    1
 14505 ;; Hardware stack levels required when called:    5
 14506 ;; This function calls:
 14507 ;;		___fladd
 14508 ;; This function is called by:
 14509 ;;		_HueToRGB
 14510 ;;		_LED_setHSL
 14511 ;;		_pulseColors
 14512 ;; This function uses a non-reentrant model
 14513 ;;
 14514                           
 14515                           
 14516                           ;psect for function ___flsub
 14517  1021                     ___flsub:	
 14518                           
 14519                           ;incstack = 0
 14520                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 14521  1021  3080               	movlw	128
 14522  1022  0140               	movlb	0	; select bank0
 14523  1023  06DA               	xorwf	___flsub@a+3,f
 14524  1024  085E               	movf	___flsub@b+3,w
 14525  1025  00AC               	movwf	___fladd@b+3
 14526  1026  085D               	movf	___flsub@b+2,w
 14527  1027  00AB               	movwf	___fladd@b+2
 14528  1028  085C               	movf	___flsub@b+1,w
 14529  1029  00AA               	movwf	___fladd@b+1
 14530  102A  085B               	movf	___flsub@b,w
 14531  102B  00A9               	movwf	___fladd@b
 14532  102C  085A               	movf	___flsub@a+3,w
 14533  102D  00B0               	movwf	___fladd@a+3
 14534  102E  0859               	movf	___flsub@a+2,w
 14535  102F  00AF               	movwf	___fladd@a+2
 14536  1030  0858               	movf	___flsub@a+1,w
 14537  1031  00AE               	movwf	___fladd@a+1
 14538  1032  0857               	movf	___flsub@a,w
 14539  1033  00AD               	movwf	___fladd@a
 14540  1034  318C  243A         	fcall	___fladd
 14541  1036  0140               	movlb	0	; select bank0
 14542  1037  082C               	movf	?___fladd+3,w
 14543  1038  00DA               	movwf	?___flsub+3
 14544  1039  082B               	movf	?___fladd+2,w
 14545  103A  00D9               	movwf	?___flsub+2
 14546  103B  082A               	movf	?___fladd+1,w
 14547  103C  00D8               	movwf	?___flsub+1
 14548  103D  0829               	movf	?___fladd,w
 14549  103E  00D7               	movwf	?___flsub
 14550  103F  0008               	return
 14551  1040                     __end_of___flsub:	
 14552                           
 14553                           	psect	text46
 14554  0C3A                     __ptext46:	
 14555 ;; *************** function ___fladd *****************
 14556 ;; Defined at:
 14557 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14558 ;; Parameters:    Size  Location     Type
 14559 ;;  b               4    9[BANK0 ] float 
 14560 ;;  a               4   13[BANK0 ] float 
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;  grs             1   28[BANK0 ] unsigned char 
 14563 ;;  bexp            1   27[BANK0 ] unsigned char 
 14564 ;;  aexp            1   26[BANK0 ] unsigned char 
 14565 ;;  signs           1   25[BANK0 ] unsigned char 
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  4    9[BANK0 ] unsigned char 
 14568 ;; Registers used:
 14569 ;;		wreg, status,2, status,0
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14575 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14576 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14577 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14578 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14579 ;;Total ram usage:       20 bytes
 14580 ;; Hardware stack levels used:    1
 14581 ;; Hardware stack levels required when called:    4
 14582 ;; This function calls:
 14583 ;;		Nothing
 14584 ;; This function is called by:
 14585 ;;		_HueToRGB
 14586 ;;		_LED_setHSL
 14587 ;;		___flsub
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           
 14592                           ;psect for function ___fladd
 14593  0C3A                     ___fladd:	
 14594                           
 14595                           ;incstack = 0
 14596                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 14597  0C3A  0140               	movlb	0	; select bank0
 14598  0C3B  082C               	movf	___fladd@b+3,w
 14599  0C3C  3980               	andlw	128
 14600  0C3D  00B1               	movwf	??___fladd
 14601  0C3E  0831               	movf	??___fladd,w
 14602  0C3F  00B9               	movwf	___fladd@signs
 14603  0C40  352C               	lslf	___fladd@b+3,w
 14604  0C41  00B1               	movwf	??___fladd
 14605  0C42  0831               	movf	??___fladd,w
 14606  0C43  00BB               	movwf	___fladd@bexp
 14607  0C44  1BAB               	btfsc	___fladd@b+2,7
 14608  0C45  143B               	bsf	___fladd@bexp,0
 14609  0C46  083B               	movf	___fladd@bexp,w
 14610  0C47  1903               	btfsc	3,2
 14611  0C48  2C57               	goto	l3655
 14612  0C49  0A3B               	incf	___fladd@bexp,w
 14613  0C4A  1D03               	btfss	3,2
 14614  0C4B  2C54               	goto	l3651
 14615  0C4C  3000               	movlw	0
 14616  0C4D  00AC               	movwf	___fladd@b+3
 14617  0C4E  3000               	movlw	0
 14618  0C4F  00AB               	movwf	___fladd@b+2
 14619  0C50  3000               	movlw	0
 14620  0C51  00AA               	movwf	___fladd@b+1
 14621  0C52  3000               	movlw	0
 14622  0C53  00A9               	movwf	___fladd@b
 14623  0C54                     l3651:	
 14624  0C54  17AB               	bsf	___fladd@b+2,7
 14625  0C55  01AC               	clrf	___fladd@b+3
 14626  0C56  2C5F               	goto	l3657
 14627  0C57                     l3655:	
 14628  0C57  3000               	movlw	0
 14629  0C58  00AC               	movwf	___fladd@b+3
 14630  0C59  3000               	movlw	0
 14631  0C5A  00AB               	movwf	___fladd@b+2
 14632  0C5B  3000               	movlw	0
 14633  0C5C  00AA               	movwf	___fladd@b+1
 14634  0C5D  3000               	movlw	0
 14635  0C5E  00A9               	movwf	___fladd@b
 14636  0C5F                     l3657:	
 14637  0C5F  0830               	movf	___fladd@a+3,w
 14638  0C60  3980               	andlw	128
 14639  0C61  00B1               	movwf	??___fladd
 14640  0C62  0831               	movf	??___fladd,w
 14641  0C63  00BA               	movwf	___fladd@aexp
 14642  0C64  083A               	movf	___fladd@aexp,w
 14643  0C65  0639               	xorwf	___fladd@signs,w
 14644  0C66  1D03               	btfss	3,2
 14645  0C67  1739               	bsf	___fladd@signs,6
 14646  0C68  3530               	lslf	___fladd@a+3,w
 14647  0C69  00B1               	movwf	??___fladd
 14648  0C6A  0831               	movf	??___fladd,w
 14649  0C6B  00BA               	movwf	___fladd@aexp
 14650  0C6C  1BAF               	btfsc	___fladd@a+2,7
 14651  0C6D  143A               	bsf	___fladd@aexp,0
 14652  0C6E  083A               	movf	___fladd@aexp,w
 14653  0C6F  1903               	btfsc	3,2
 14654  0C70  2C7F               	goto	l3679
 14655  0C71  0A3A               	incf	___fladd@aexp,w
 14656  0C72  1D03               	btfss	3,2
 14657  0C73  2C7C               	goto	l3675
 14658  0C74  3000               	movlw	0
 14659  0C75  00B0               	movwf	___fladd@a+3
 14660  0C76  3000               	movlw	0
 14661  0C77  00AF               	movwf	___fladd@a+2
 14662  0C78  3000               	movlw	0
 14663  0C79  00AE               	movwf	___fladd@a+1
 14664  0C7A  3000               	movlw	0
 14665  0C7B  00AD               	movwf	___fladd@a
 14666  0C7C                     l3675:	
 14667  0C7C  17AF               	bsf	___fladd@a+2,7
 14668  0C7D  01B0               	clrf	___fladd@a+3
 14669  0C7E  2C87               	goto	l1582
 14670  0C7F                     l3679:	
 14671  0C7F  3000               	movlw	0
 14672  0C80  00B0               	movwf	___fladd@a+3
 14673  0C81  3000               	movlw	0
 14674  0C82  00AF               	movwf	___fladd@a+2
 14675  0C83  3000               	movlw	0
 14676  0C84  00AE               	movwf	___fladd@a+1
 14677  0C85  3000               	movlw	0
 14678  0C86  00AD               	movwf	___fladd@a
 14679  0C87                     l1582:	
 14680  0C87  083B               	movf	___fladd@bexp,w
 14681  0C88  023A               	subwf	___fladd@aexp,w
 14682  0C89  1803               	skipnc
 14683  0C8A  2CCD               	goto	l3715
 14684  0C8B  1F39               	btfss	___fladd@signs,6
 14685  0C8C  2C91               	goto	l3685
 14686  0C8D  3080               	movlw	128
 14687  0C8E  00B1               	movwf	??___fladd
 14688  0C8F  0831               	movf	??___fladd,w
 14689  0C90  06B9               	xorwf	___fladd@signs,f
 14690  0C91                     l3685:	
 14691  0C91  083B               	movf	___fladd@bexp,w
 14692  0C92  00B1               	movwf	??___fladd
 14693  0C93  0831               	movf	??___fladd,w
 14694  0C94  00BC               	movwf	___fladd@grs
 14695  0C95  083A               	movf	___fladd@aexp,w
 14696  0C96  00B1               	movwf	??___fladd
 14697  0C97  0831               	movf	??___fladd,w
 14698  0C98  00BB               	movwf	___fladd@bexp
 14699  0C99  083C               	movf	___fladd@grs,w
 14700  0C9A  00B1               	movwf	??___fladd
 14701  0C9B  0831               	movf	??___fladd,w
 14702  0C9C  00BA               	movwf	___fladd@aexp
 14703  0C9D  0829               	movf	___fladd@b,w
 14704  0C9E  00B1               	movwf	??___fladd
 14705  0C9F  0831               	movf	??___fladd,w
 14706  0CA0  00BC               	movwf	___fladd@grs
 14707  0CA1  082D               	movf	___fladd@a,w
 14708  0CA2  00B1               	movwf	??___fladd
 14709  0CA3  0831               	movf	??___fladd,w
 14710  0CA4  00A9               	movwf	___fladd@b
 14711  0CA5  083C               	movf	___fladd@grs,w
 14712  0CA6  00B1               	movwf	??___fladd
 14713  0CA7  0831               	movf	??___fladd,w
 14714  0CA8  00AD               	movwf	___fladd@a
 14715  0CA9  082A               	movf	___fladd@b+1,w
 14716  0CAA  00B1               	movwf	??___fladd
 14717  0CAB  0831               	movf	??___fladd,w
 14718  0CAC  00BC               	movwf	___fladd@grs
 14719  0CAD  082E               	movf	___fladd@a+1,w
 14720  0CAE  00B1               	movwf	??___fladd
 14721  0CAF  0831               	movf	??___fladd,w
 14722  0CB0  00AA               	movwf	___fladd@b+1
 14723  0CB1  083C               	movf	___fladd@grs,w
 14724  0CB2  00B1               	movwf	??___fladd
 14725  0CB3  0831               	movf	??___fladd,w
 14726  0CB4  00AE               	movwf	___fladd@a+1
 14727  0CB5  082B               	movf	___fladd@b+2,w
 14728  0CB6  00B1               	movwf	??___fladd
 14729  0CB7  0831               	movf	??___fladd,w
 14730  0CB8  00BC               	movwf	___fladd@grs
 14731  0CB9  082F               	movf	___fladd@a+2,w
 14732  0CBA  00B1               	movwf	??___fladd
 14733  0CBB  0831               	movf	??___fladd,w
 14734  0CBC  00AB               	movwf	___fladd@b+2
 14735  0CBD  083C               	movf	___fladd@grs,w
 14736  0CBE  00B1               	movwf	??___fladd
 14737  0CBF  0831               	movf	??___fladd,w
 14738  0CC0  00AF               	movwf	___fladd@a+2
 14739  0CC1  082C               	movf	___fladd@b+3,w
 14740  0CC2  00B1               	movwf	??___fladd
 14741  0CC3  0831               	movf	??___fladd,w
 14742  0CC4  00BC               	movwf	___fladd@grs
 14743  0CC5  0830               	movf	___fladd@a+3,w
 14744  0CC6  00B1               	movwf	??___fladd
 14745  0CC7  0831               	movf	??___fladd,w
 14746  0CC8  00AC               	movwf	___fladd@b+3
 14747  0CC9  083C               	movf	___fladd@grs,w
 14748  0CCA  00B1               	movwf	??___fladd
 14749  0CCB  0831               	movf	??___fladd,w
 14750  0CCC  00B0               	movwf	___fladd@a+3
 14751  0CCD                     l3715:	
 14752  0CCD  01BC               	clrf	___fladd@grs
 14753  0CCE  083A               	movf	___fladd@aexp,w
 14754  0CCF  00B1               	movwf	??___fladd
 14755  0CD0  01B2               	clrf	??___fladd+1
 14756  0CD1  0832               	movf	??___fladd+1,w
 14757  0CD2  00B4               	movwf	??___fladd+3
 14758  0CD3  083B               	movf	___fladd@bexp,w
 14759  0CD4  0231               	subwf	??___fladd,w
 14760  0CD5  00B3               	movwf	??___fladd+2
 14761  0CD6  1C03               	skipc
 14762  0CD7  03B4               	decf	??___fladd+3,f
 14763  0CD8  0834               	movf	??___fladd+3,w
 14764  0CD9  3A80               	xorlw	128
 14765  0CDA  00B5               	movwf	??___fladd+4
 14766  0CDB  3080               	movlw	128
 14767  0CDC  0235               	subwf	??___fladd+4,w
 14768  0CDD  1D03               	skipz
 14769  0CDE  2CE1               	goto	u2845
 14770  0CDF  301A               	movlw	26
 14771  0CE0  0233               	subwf	??___fladd+2,w
 14772  0CE1                     u2845:	
 14773  0CE1  1C03               	skipc
 14774  0CE2  2D15               	goto	l3733
 14775  0CE3  0140               	movlb	0	; select bank0
 14776  0CE4  082C               	movf	___fladd@b+3,w
 14777  0CE5  042B               	iorwf	___fladd@b+2,w
 14778  0CE6  042A               	iorwf	___fladd@b+1,w
 14779  0CE7  0429               	iorwf	___fladd@b,w
 14780  0CE8  1903               	btfsc	3,2
 14781  0CE9  2CEC               	goto	u2850
 14782  0CEA  3001               	movlw	1
 14783  0CEB  2CED               	goto	u2860
 14784  0CEC                     u2850:	
 14785  0CEC  3000               	movlw	0
 14786  0CED                     u2860:	
 14787  0CED  00B1               	movwf	??___fladd
 14788  0CEE  0831               	movf	??___fladd,w
 14789  0CEF  00BC               	movwf	___fladd@grs
 14790  0CF0  3000               	movlw	0
 14791  0CF1  00AC               	movwf	___fladd@b+3
 14792  0CF2  3000               	movlw	0
 14793  0CF3  00AB               	movwf	___fladd@b+2
 14794  0CF4  3000               	movlw	0
 14795  0CF5  00AA               	movwf	___fladd@b+1
 14796  0CF6  3000               	movlw	0
 14797  0CF7  00A9               	movwf	___fladd@b
 14798  0CF8  083A               	movf	___fladd@aexp,w
 14799  0CF9  00B1               	movwf	??___fladd
 14800  0CFA  0831               	movf	??___fladd,w
 14801  0CFB  00BB               	movwf	___fladd@bexp
 14802  0CFC  2D1A               	goto	l1586
 14803  0CFD                     l1588:	
 14804  0CFD  1C3C               	btfss	___fladd@grs,0
 14805  0CFE  2D05               	goto	l3723
 14806  0CFF  363C               	lsrf	___fladd@grs,w
 14807  0D00  3801               	iorlw	1
 14808  0D01  00B1               	movwf	??___fladd
 14809  0D02  0831               	movf	??___fladd,w
 14810  0D03  00BC               	movwf	___fladd@grs
 14811  0D04  2D07               	goto	l3725
 14812  0D05                     l3723:	
 14813  0D05  1003               	clrc
 14814  0D06  0CBC               	rrf	___fladd@grs,f
 14815  0D07                     l3725:	
 14816  0D07  1829               	btfsc	___fladd@b,0
 14817  0D08  17BC               	bsf	___fladd@grs,7
 14818  0D09  3001               	movlw	1
 14819  0D0A  00B1               	movwf	??___fladd
 14820  0D0B                     u2895:	
 14821  0D0B  37AC               	asrf	___fladd@b+3,f
 14822  0D0C  0CAB               	rrf	___fladd@b+2,f
 14823  0D0D  0CAA               	rrf	___fladd@b+1,f
 14824  0D0E  0CA9               	rrf	___fladd@b,f
 14825  0D0F  0BB1               	decfsz	??___fladd& (0+127),f
 14826  0D10  2D0B               	goto	u2895
 14827  0D11  3001               	movlw	1
 14828  0D12  00B1               	movwf	??___fladd
 14829  0D13  0831               	movf	??___fladd,w
 14830  0D14  07BB               	addwf	___fladd@bexp,f
 14831  0D15                     l3733:	
 14832  0D15  0140               	movlb	0	; select bank0
 14833  0D16  083A               	movf	___fladd@aexp,w
 14834  0D17  023B               	subwf	___fladd@bexp,w
 14835  0D18  1C03               	skipc
 14836  0D19  2CFD               	goto	l1588
 14837  0D1A                     l1586:	
 14838  0D1A  1B39               	btfsc	___fladd@signs,6
 14839  0D1B  2D4B               	goto	l3759
 14840  0D1C  083B               	movf	___fladd@bexp,w
 14841  0D1D  1D03               	btfss	3,2
 14842  0D1E  2D28               	goto	l3741
 14843  0D1F  3000               	movlw	0
 14844  0D20  00AC               	movwf	?___fladd+3
 14845  0D21  3000               	movlw	0
 14846  0D22  00AB               	movwf	?___fladd+2
 14847  0D23  3000               	movlw	0
 14848  0D24  00AA               	movwf	?___fladd+1
 14849  0D25  3000               	movlw	0
 14850  0D26  00A9               	movwf	?___fladd
 14851  0D27  0008               	return
 14852  0D28                     l3741:	
 14853  0D28  082D               	movf	___fladd@a,w
 14854  0D29  07A9               	addwf	___fladd@b,f
 14855  0D2A  082E               	movf	___fladd@a+1,w
 14856  0D2B  3DAA               	addwfc	___fladd@b+1,f
 14857  0D2C  082F               	movf	___fladd@a+2,w
 14858  0D2D  3DAB               	addwfc	___fladd@b+2,f
 14859  0D2E  0830               	movf	___fladd@a+3,w
 14860  0D2F  3DAC               	addwfc	___fladd@b+3,f
 14861  0D30  1C2C               	btfss	___fladd@b+3,0
 14862  0D31  2DC5               	goto	l3793
 14863  0D32  1C3C               	btfss	___fladd@grs,0
 14864  0D33  2D3A               	goto	l3749
 14865  0D34  363C               	lsrf	___fladd@grs,w
 14866  0D35  3801               	iorlw	1
 14867  0D36  00B1               	movwf	??___fladd
 14868  0D37  0831               	movf	??___fladd,w
 14869  0D38  00BC               	movwf	___fladd@grs
 14870  0D39  2D3C               	goto	l3751
 14871  0D3A                     l3749:	
 14872  0D3A  1003               	clrc
 14873  0D3B  0CBC               	rrf	___fladd@grs,f
 14874  0D3C                     l3751:	
 14875  0D3C  1829               	btfsc	___fladd@b,0
 14876  0D3D  17BC               	bsf	___fladd@grs,7
 14877  0D3E  3001               	movlw	1
 14878  0D3F  00B1               	movwf	??___fladd
 14879  0D40                     u2965:	
 14880  0D40  37AC               	asrf	___fladd@b+3,f
 14881  0D41  0CAB               	rrf	___fladd@b+2,f
 14882  0D42  0CAA               	rrf	___fladd@b+1,f
 14883  0D43  0CA9               	rrf	___fladd@b,f
 14884  0D44  0BB1               	decfsz	??___fladd& (0+127),f
 14885  0D45  2D40               	goto	u2965
 14886  0D46  3001               	movlw	1
 14887  0D47  00B1               	movwf	??___fladd
 14888  0D48  0831               	movf	??___fladd,w
 14889  0D49  07BB               	addwf	___fladd@bexp,f
 14890  0D4A  2DC5               	goto	l3793
 14891  0D4B                     l3759:	
 14892  0D4B  082C               	movf	___fladd@b+3,w
 14893  0D4C  3A80               	xorlw	128
 14894  0D4D  00B1               	movwf	??___fladd
 14895  0D4E  0830               	movf	___fladd@a+3,w
 14896  0D4F  3A80               	xorlw	128
 14897  0D50  0231               	subwf	??___fladd,w
 14898  0D51  1D03               	skipz
 14899  0D52  2D5D               	goto	u2973
 14900  0D53  082F               	movf	___fladd@a+2,w
 14901  0D54  022B               	subwf	___fladd@b+2,w
 14902  0D55  1D03               	skipz
 14903  0D56  2D5D               	goto	u2973
 14904  0D57  082E               	movf	___fladd@a+1,w
 14905  0D58  022A               	subwf	___fladd@b+1,w
 14906  0D59  1D03               	skipz
 14907  0D5A  2D5D               	goto	u2973
 14908  0D5B  082D               	movf	___fladd@a,w
 14909  0D5C  0229               	subwf	___fladd@b,w
 14910  0D5D                     u2973:	
 14911  0D5D  1803               	skipnc
 14912  0D5E  2D95               	goto	l3769
 14913  0D5F  30FF               	movlw	255
 14914  0D60  00B1               	movwf	??___fladd
 14915  0D61  30FF               	movlw	255
 14916  0D62  00B2               	movwf	??___fladd+1
 14917  0D63  30FF               	movlw	255
 14918  0D64  00B3               	movwf	??___fladd+2
 14919  0D65  30FF               	movlw	255
 14920  0D66  00B4               	movwf	??___fladd+3
 14921  0D67  0829               	movf	___fladd@b,w
 14922  0D68  022D               	subwf	___fladd@a,w
 14923  0D69  00B5               	movwf	??___fladd+4
 14924  0D6A  082A               	movf	___fladd@b+1,w
 14925  0D6B  3B2E               	subwfb	___fladd@a+1,w
 14926  0D6C  00B6               	movwf	??___fladd+5
 14927  0D6D  082B               	movf	___fladd@b+2,w
 14928  0D6E  3B2F               	subwfb	___fladd@a+2,w
 14929  0D6F  00B7               	movwf	??___fladd+6
 14930  0D70  082C               	movf	___fladd@b+3,w
 14931  0D71  3B30               	subwfb	___fladd@a+3,w
 14932  0D72  00B8               	movwf	??___fladd+7
 14933  0D73  0835               	movf	??___fladd+4,w
 14934  0D74  07B1               	addwf	??___fladd,f
 14935  0D75  0836               	movf	??___fladd+5,w
 14936  0D76  3DB2               	addwfc	??___fladd+1,f
 14937  0D77  0837               	movf	??___fladd+6,w
 14938  0D78  3DB3               	addwfc	??___fladd+2,f
 14939  0D79  0838               	movf	??___fladd+7,w
 14940  0D7A  3DB4               	addwfc	??___fladd+3,f
 14941  0D7B  0834               	movf	??___fladd+3,w
 14942  0D7C  00AC               	movwf	___fladd@b+3
 14943  0D7D  0833               	movf	??___fladd+2,w
 14944  0D7E  00AB               	movwf	___fladd@b+2
 14945  0D7F  0832               	movf	??___fladd+1,w
 14946  0D80  00AA               	movwf	___fladd@b+1
 14947  0D81  0831               	movf	??___fladd,w
 14948  0D82  00A9               	movwf	___fladd@b
 14949  0D83  3080               	movlw	128
 14950  0D84  00B1               	movwf	??___fladd
 14951  0D85  0831               	movf	??___fladd,w
 14952  0D86  06B9               	xorwf	___fladd@signs,f
 14953  0D87  09BC               	comf	___fladd@grs,f
 14954  0D88  0ABC               	incf	___fladd@grs,f
 14955  0D89  083C               	movf	___fladd@grs,w
 14956  0D8A  1D03               	btfss	3,2
 14957  0D8B  2D9D               	goto	l1603
 14958  0D8C  3001               	movlw	1
 14959  0D8D  07A9               	addwf	___fladd@b,f
 14960  0D8E  3000               	movlw	0
 14961  0D8F  3DAA               	addwfc	___fladd@b+1,f
 14962  0D90  3000               	movlw	0
 14963  0D91  3DAB               	addwfc	___fladd@b+2,f
 14964  0D92  3000               	movlw	0
 14965  0D93  3DAC               	addwfc	___fladd@b+3,f
 14966  0D94  2D9D               	goto	l1603
 14967  0D95                     l3769:	
 14968  0D95  082D               	movf	___fladd@a,w
 14969  0D96  02A9               	subwf	___fladd@b,f
 14970  0D97  082E               	movf	___fladd@a+1,w
 14971  0D98  3BAA               	subwfb	___fladd@b+1,f
 14972  0D99  082F               	movf	___fladd@a+2,w
 14973  0D9A  3BAB               	subwfb	___fladd@b+2,f
 14974  0D9B  0830               	movf	___fladd@a+3,w
 14975  0D9C  3BAC               	subwfb	___fladd@b+3,f
 14976  0D9D                     l1603:	
 14977  0D9D  082C               	movf	___fladd@b+3,w
 14978  0D9E  042B               	iorwf	___fladd@b+2,w
 14979  0D9F  042A               	iorwf	___fladd@b+1,w
 14980  0DA0  0429               	iorwf	___fladd@b,w
 14981  0DA1  1D03               	skipz
 14982  0DA2  2DC3               	goto	l3791
 14983  0DA3  083C               	movf	___fladd@grs,w
 14984  0DA4  1D03               	btfss	3,2
 14985  0DA5  2DC3               	goto	l3791
 14986  0DA6  3000               	movlw	0
 14987  0DA7  00AC               	movwf	?___fladd+3
 14988  0DA8  3000               	movlw	0
 14989  0DA9  00AB               	movwf	?___fladd+2
 14990  0DAA  3000               	movlw	0
 14991  0DAB  00AA               	movwf	?___fladd+1
 14992  0DAC  3000               	movlw	0
 14993  0DAD  00A9               	movwf	?___fladd
 14994  0DAE  0008               	return
 14995  0DAF                     l3777:	
 14996  0DAF  3001               	movlw	1
 14997  0DB0                     u3015:	
 14998  0DB0  35A9               	lslf	___fladd@b,f
 14999  0DB1  0DAA               	rlf	___fladd@b+1,f
 15000  0DB2  0DAB               	rlf	___fladd@b+2,f
 15001  0DB3  0DAC               	rlf	___fladd@b+3,f
 15002  0DB4  0B89               	decfsz	9,f
 15003  0DB5  2DB0               	goto	u3015
 15004  0DB6  1BBC               	btfsc	___fladd@grs,7
 15005  0DB7  1429               	bsf	___fladd@b,0
 15006  0DB8  1C3C               	btfss	___fladd@grs,0
 15007  0DB9  2DBC               	goto	l3785
 15008  0DBA  1403               	setc
 15009  0DBB  2DBD               	goto	L4
 15010  0DBC                     l3785:	
 15011  0DBC  1003               	clrc
 15012  0DBD                     L4:	
 15013  0DBD  0DBC               	rlf	___fladd@grs,f
 15014  0DBE  083B               	movf	___fladd@bexp,w
 15015  0DBF  1903               	btfsc	3,2
 15016  0DC0  2DC3               	goto	l3791
 15017  0DC1  3001               	movlw	1
 15018  0DC2  02BB               	subwf	___fladd@bexp,f
 15019  0DC3                     l3791:	
 15020  0DC3  1FAB               	btfss	___fladd@b+2,7
 15021  0DC4  2DAF               	goto	l3777
 15022  0DC5                     l3793:	
 15023  0DC5  01BA               	clrf	___fladd@aexp
 15024  0DC6  1FBC               	btfss	___fladd@grs,7
 15025  0DC7  2DD0               	goto	l3803
 15026  0DC8  083C               	movf	___fladd@grs,w
 15027  0DC9  397F               	andlw	127
 15028  0DCA  1903               	btfsc	3,2
 15029  0DCB  1829               	btfsc	___fladd@b,0
 15030  0DCC  2DCE               	goto	l3799
 15031  0DCD  2DD0               	goto	l3803
 15032  0DCE                     l3799:	
 15033  0DCE  01BA               	clrf	___fladd@aexp
 15034  0DCF  0ABA               	incf	___fladd@aexp,f
 15035  0DD0                     l3803:	
 15036  0DD0  083A               	movf	___fladd@aexp,w
 15037  0DD1  1903               	btfsc	3,2
 15038  0DD2  2DFC               	goto	l1616
 15039  0DD3  3001               	movlw	1
 15040  0DD4  07A9               	addwf	___fladd@b,f
 15041  0DD5  3000               	movlw	0
 15042  0DD6  3DAA               	addwfc	___fladd@b+1,f
 15043  0DD7  3000               	movlw	0
 15044  0DD8  3DAB               	addwfc	___fladd@b+2,f
 15045  0DD9  3000               	movlw	0
 15046  0DDA  3DAC               	addwfc	___fladd@b+3,f
 15047  0DDB  1C2C               	btfss	___fladd@b+3,0
 15048  0DDC  2DFC               	goto	l1616
 15049  0DDD  0829               	movf	___fladd@b,w
 15050  0DDE  00B1               	movwf	??___fladd
 15051  0DDF  082A               	movf	___fladd@b+1,w
 15052  0DE0  00B2               	movwf	??___fladd+1
 15053  0DE1  082B               	movf	___fladd@b+2,w
 15054  0DE2  00B3               	movwf	??___fladd+2
 15055  0DE3  082C               	movf	___fladd@b+3,w
 15056  0DE4  00B4               	movwf	??___fladd+3
 15057  0DE5  3001               	movlw	1
 15058  0DE6  00B5               	movwf	??___fladd+4
 15059  0DE7                     u3115:	
 15060  0DE7  37B4               	asrf	??___fladd+3,f
 15061  0DE8  0CB3               	rrf	??___fladd+2,f
 15062  0DE9  0CB2               	rrf	??___fladd+1,f
 15063  0DEA  0CB1               	rrf	??___fladd,f
 15064  0DEB  0BB5               	decfsz	??___fladd+4,f
 15065  0DEC  2DE7               	goto	u3115
 15066  0DED  0834               	movf	??___fladd+3,w
 15067  0DEE  00AC               	movwf	___fladd@b+3
 15068  0DEF  0833               	movf	??___fladd+2,w
 15069  0DF0  00AB               	movwf	___fladd@b+2
 15070  0DF1  0832               	movf	??___fladd+1,w
 15071  0DF2  00AA               	movwf	___fladd@b+1
 15072  0DF3  0831               	movf	??___fladd,w
 15073  0DF4  00A9               	movwf	___fladd@b
 15074  0DF5  0A3B               	incf	___fladd@bexp,w
 15075  0DF6  1903               	btfsc	3,2
 15076  0DF7  2DFC               	goto	l1616
 15077  0DF8  3001               	movlw	1
 15078  0DF9  00B1               	movwf	??___fladd
 15079  0DFA  0831               	movf	??___fladd,w
 15080  0DFB  07BB               	addwf	___fladd@bexp,f
 15081  0DFC                     l1616:	
 15082  0DFC  0A3B               	incf	___fladd@bexp,w
 15083  0DFD  1D03               	btfss	3,2
 15084  0DFE  083B               	movf	___fladd@bexp,w
 15085  0DFF  1D03               	btfss	3,2
 15086  0E00  2E0C               	goto	l3821
 15087  0E01  3000               	movlw	0
 15088  0E02  00AC               	movwf	___fladd@b+3
 15089  0E03  3000               	movlw	0
 15090  0E04  00AB               	movwf	___fladd@b+2
 15091  0E05  3000               	movlw	0
 15092  0E06  00AA               	movwf	___fladd@b+1
 15093  0E07  3000               	movlw	0
 15094  0E08  00A9               	movwf	___fladd@b
 15095  0E09  083B               	movf	___fladd@bexp,w
 15096  0E0A  1903               	btfsc	3,2
 15097  0E0B  01B9               	clrf	___fladd@signs
 15098  0E0C                     l3821:	
 15099  0E0C  1C3B               	btfss	___fladd@bexp,0
 15100  0E0D  2E10               	goto	l3825
 15101  0E0E  17AB               	bsf	___fladd@b+2,7
 15102  0E0F  2E14               	goto	l1624
 15103  0E10                     l3825:	
 15104  0E10  307F               	movlw	127
 15105  0E11  00B1               	movwf	??___fladd
 15106  0E12  0831               	movf	??___fladd,w
 15107  0E13  05AB               	andwf	___fladd@b+2,f
 15108  0E14                     l1624:	
 15109  0E14  363B               	lsrf	___fladd@bexp,w
 15110  0E15  00B1               	movwf	??___fladd
 15111  0E16  0831               	movf	??___fladd,w
 15112  0E17  00AC               	movwf	___fladd@b+3
 15113  0E18  1FB9               	btfss	___fladd@signs,7
 15114  0E19  0008               	return
 15115  0E1A  17AC               	bsf	___fladd@b+3,7
 15116  0E1B  0008               	return
 15117  0E1C                     __end_of___fladd:	
 15118                           
 15119                           	psect	text47
 15120  03F8                     __ptext47:	
 15121 ;; *************** function ___flmul *****************
 15122 ;; Defined at:
 15123 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 15124 ;; Parameters:    Size  Location     Type
 15125 ;;  b               4   29[BANK0 ] unsigned char 
 15126 ;;  a               4   33[BANK0 ] unsigned char 
 15127 ;; Auto vars:     Size  Location     Type
 15128 ;;  prod            4   49[BANK0 ] struct .
 15129 ;;  grs             4   44[BANK0 ] unsigned long 
 15130 ;;  temp            2   53[BANK0 ] struct .
 15131 ;;  bexp            1   48[BANK0 ] unsigned char 
 15132 ;;  aexp            1   43[BANK0 ] unsigned char 
 15133 ;;  sign            1   42[BANK0 ] unsigned char 
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  4   29[BANK0 ] unsigned char 
 15136 ;; Registers used:
 15137 ;;		wreg, status,2, status,0, pclath, cstack
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15143 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15144 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15145 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15146 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15147 ;;Total ram usage:       26 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; Hardware stack levels required when called:    5
 15150 ;; This function calls:
 15151 ;;		__Umul8_16
 15152 ;; This function is called by:
 15153 ;;		_HueToRGB
 15154 ;;		_LED_setHSL
 15155 ;; This function uses a non-reentrant model
 15156 ;;
 15157                           
 15158                           
 15159                           ;psect for function ___flmul
 15160  03F8                     ___flmul:	
 15161                           
 15162                           ;incstack = 0
 15163                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15164  03F8  0140               	movlb	0	; select bank0
 15165  03F9  0840               	movf	___flmul@b+3,w
 15166  03FA  3980               	andlw	128
 15167  03FB  00C5               	movwf	??___flmul
 15168  03FC  0845               	movf	??___flmul,w
 15169  03FD  00CA               	movwf	___flmul@sign
 15170  03FE  3540               	lslf	___flmul@b+3,w
 15171  03FF  00C5               	movwf	??___flmul
 15172  0400  0845               	movf	??___flmul,w
 15173  0401  00D0               	movwf	___flmul@bexp
 15174  0402  1BBF               	btfsc	___flmul@b+2,7
 15175  0403  1450               	bsf	___flmul@bexp,0
 15176  0404  0850               	movf	___flmul@bexp,w
 15177  0405  1903               	btfsc	3,2
 15178  0406  2C14               	goto	l5399
 15179  0407  0A50               	incf	___flmul@bexp,w
 15180  0408  1D03               	btfss	3,2
 15181  0409  2C12               	goto	l5397
 15182  040A  3000               	movlw	0
 15183  040B  00C0               	movwf	___flmul@b+3
 15184  040C  3000               	movlw	0
 15185  040D  00BF               	movwf	___flmul@b+2
 15186  040E  3000               	movlw	0
 15187  040F  00BE               	movwf	___flmul@b+1
 15188  0410  3000               	movlw	0
 15189  0411  00BD               	movwf	___flmul@b
 15190  0412                     l5397:	
 15191  0412  17BF               	bsf	___flmul@b+2,7
 15192  0413  2C1C               	goto	l5401
 15193  0414                     l5399:	
 15194  0414  3000               	movlw	0
 15195  0415  00C0               	movwf	___flmul@b+3
 15196  0416  3000               	movlw	0
 15197  0417  00BF               	movwf	___flmul@b+2
 15198  0418  3000               	movlw	0
 15199  0419  00BE               	movwf	___flmul@b+1
 15200  041A  3000               	movlw	0
 15201  041B  00BD               	movwf	___flmul@b
 15202  041C                     l5401:	
 15203  041C  0844               	movf	___flmul@a+3,w
 15204  041D  3980               	andlw	128
 15205  041E  00C5               	movwf	??___flmul
 15206  041F  0845               	movf	??___flmul,w
 15207  0420  06CA               	xorwf	___flmul@sign,f
 15208  0421  3544               	lslf	___flmul@a+3,w
 15209  0422  00C5               	movwf	??___flmul
 15210  0423  0845               	movf	??___flmul,w
 15211  0424  00CB               	movwf	___flmul@aexp
 15212  0425  1BC3               	btfsc	___flmul@a+2,7
 15213  0426  144B               	bsf	___flmul@aexp,0
 15214  0427  084B               	movf	___flmul@aexp,w
 15215  0428  1903               	btfsc	3,2
 15216  0429  2C37               	goto	l5417
 15217  042A  0A4B               	incf	___flmul@aexp,w
 15218  042B  1D03               	btfss	3,2
 15219  042C  2C35               	goto	l5415
 15220  042D  3000               	movlw	0
 15221  042E  00C4               	movwf	___flmul@a+3
 15222  042F  3000               	movlw	0
 15223  0430  00C3               	movwf	___flmul@a+2
 15224  0431  3000               	movlw	0
 15225  0432  00C2               	movwf	___flmul@a+1
 15226  0433  3000               	movlw	0
 15227  0434  00C1               	movwf	___flmul@a
 15228  0435                     l5415:	
 15229  0435  17C3               	bsf	___flmul@a+2,7
 15230  0436  2C3F               	goto	l5419
 15231  0437                     l5417:	
 15232  0437  3000               	movlw	0
 15233  0438  00C4               	movwf	___flmul@a+3
 15234  0439  3000               	movlw	0
 15235  043A  00C3               	movwf	___flmul@a+2
 15236  043B  3000               	movlw	0
 15237  043C  00C2               	movwf	___flmul@a+1
 15238  043D  3000               	movlw	0
 15239  043E  00C1               	movwf	___flmul@a
 15240  043F                     l5419:	
 15241  043F  084B               	movf	___flmul@aexp,w
 15242  0440  1D03               	btfss	3,2
 15243  0441  0850               	movf	___flmul@bexp,w
 15244  0442  1D03               	btfss	3,2
 15245  0443  2C4D               	goto	l5427
 15246  0444  3000               	movlw	0
 15247  0445  00C0               	movwf	?___flmul+3
 15248  0446  3000               	movlw	0
 15249  0447  00BF               	movwf	?___flmul+2
 15250  0448  3000               	movlw	0
 15251  0449  00BE               	movwf	?___flmul+1
 15252  044A  3000               	movlw	0
 15253  044B  00BD               	movwf	?___flmul
 15254  044C  0008               	return
 15255  044D                     l5427:	
 15256  044D  083D               	movf	___flmul@b,w
 15257  044E  00C5               	movwf	??___flmul
 15258  044F  0845               	movf	??___flmul,w
 15259  0450  00A0               	movwf	__Umul8_16@multiplicand
 15260  0451  0843               	movf	___flmul@a+2,w
 15261  0452  3190  2060  3183   	fcall	__Umul8_16
 15262  0455  0140               	movlb	0	; select bank0
 15263  0456  0821               	movf	?__Umul8_16+1,w
 15264  0457  00D6               	movwf	___flmul@temp+1
 15265  0458  0820               	movf	?__Umul8_16,w
 15266  0459  00D5               	movwf	___flmul@temp
 15267  045A  0855               	movf	___flmul@temp,w
 15268  045B  00C5               	movwf	??___flmul
 15269  045C  01C6               	clrf	??___flmul+1
 15270  045D  01C7               	clrf	??___flmul+2
 15271  045E  01C8               	clrf	??___flmul+3
 15272  045F  0848               	movf	??___flmul+3,w
 15273  0460  00CF               	movwf	___flmul@grs+3
 15274  0461  0847               	movf	??___flmul+2,w
 15275  0462  00CE               	movwf	___flmul@grs+2
 15276  0463  0846               	movf	??___flmul+1,w
 15277  0464  00CD               	movwf	___flmul@grs+1
 15278  0465  0845               	movf	??___flmul,w
 15279  0466  00CC               	movwf	___flmul@grs
 15280  0467  0856               	movf	___flmul@temp+1,w
 15281  0468  00C5               	movwf	??___flmul
 15282  0469  01C6               	clrf	??___flmul+1
 15283  046A  01C7               	clrf	??___flmul+2
 15284  046B  01C8               	clrf	??___flmul+3
 15285  046C  0848               	movf	??___flmul+3,w
 15286  046D  00D4               	movwf	___flmul@prod+3
 15287  046E  0847               	movf	??___flmul+2,w
 15288  046F  00D3               	movwf	___flmul@prod+2
 15289  0470  0846               	movf	??___flmul+1,w
 15290  0471  00D2               	movwf	___flmul@prod+1
 15291  0472  0845               	movf	??___flmul,w
 15292  0473  00D1               	movwf	___flmul@prod
 15293  0474  083E               	movf	___flmul@b+1,w
 15294  0475  00C5               	movwf	??___flmul
 15295  0476  0845               	movf	??___flmul,w
 15296  0477  00A0               	movwf	__Umul8_16@multiplicand
 15297  0478  0842               	movf	___flmul@a+1,w
 15298  0479  3190  2060  3183   	fcall	__Umul8_16
 15299  047C  0140               	movlb	0	; select bank0
 15300  047D  0821               	movf	?__Umul8_16+1,w
 15301  047E  00D6               	movwf	___flmul@temp+1
 15302  047F  0820               	movf	?__Umul8_16,w
 15303  0480  00D5               	movwf	___flmul@temp
 15304  0481  0855               	movf	___flmul@temp,w
 15305  0482  00C5               	movwf	??___flmul
 15306  0483  01C6               	clrf	??___flmul+1
 15307  0484  01C7               	clrf	??___flmul+2
 15308  0485  01C8               	clrf	??___flmul+3
 15309  0486  0845               	movf	??___flmul,w
 15310  0487  07CC               	addwf	___flmul@grs,f
 15311  0488  0846               	movf	??___flmul+1,w
 15312  0489  3DCD               	addwfc	___flmul@grs+1,f
 15313  048A  0847               	movf	??___flmul+2,w
 15314  048B  3DCE               	addwfc	___flmul@grs+2,f
 15315  048C  0848               	movf	??___flmul+3,w
 15316  048D  3DCF               	addwfc	___flmul@grs+3,f
 15317  048E  0856               	movf	___flmul@temp+1,w
 15318  048F  00C5               	movwf	??___flmul
 15319  0490  01C6               	clrf	??___flmul+1
 15320  0491  01C7               	clrf	??___flmul+2
 15321  0492  01C8               	clrf	??___flmul+3
 15322  0493  0845               	movf	??___flmul,w
 15323  0494  07D1               	addwf	___flmul@prod,f
 15324  0495  0846               	movf	??___flmul+1,w
 15325  0496  3DD2               	addwfc	___flmul@prod+1,f
 15326  0497  0847               	movf	??___flmul+2,w
 15327  0498  3DD3               	addwfc	___flmul@prod+2,f
 15328  0499  0848               	movf	??___flmul+3,w
 15329  049A  3DD4               	addwfc	___flmul@prod+3,f
 15330  049B  083F               	movf	___flmul@b+2,w
 15331  049C  00C5               	movwf	??___flmul
 15332  049D  0845               	movf	??___flmul,w
 15333  049E  00A0               	movwf	__Umul8_16@multiplicand
 15334  049F  0841               	movf	___flmul@a,w
 15335  04A0  3190  2060  3183   	fcall	__Umul8_16
 15336  04A3  0140               	movlb	0	; select bank0
 15337  04A4  0821               	movf	?__Umul8_16+1,w
 15338  04A5  00D6               	movwf	___flmul@temp+1
 15339  04A6  0820               	movf	?__Umul8_16,w
 15340  04A7  00D5               	movwf	___flmul@temp
 15341  04A8  0855               	movf	___flmul@temp,w
 15342  04A9  00C5               	movwf	??___flmul
 15343  04AA  01C6               	clrf	??___flmul+1
 15344  04AB  01C7               	clrf	??___flmul+2
 15345  04AC  01C8               	clrf	??___flmul+3
 15346  04AD  0845               	movf	??___flmul,w
 15347  04AE  07CC               	addwf	___flmul@grs,f
 15348  04AF  0846               	movf	??___flmul+1,w
 15349  04B0  3DCD               	addwfc	___flmul@grs+1,f
 15350  04B1  0847               	movf	??___flmul+2,w
 15351  04B2  3DCE               	addwfc	___flmul@grs+2,f
 15352  04B3  0848               	movf	??___flmul+3,w
 15353  04B4  3DCF               	addwfc	___flmul@grs+3,f
 15354  04B5  0856               	movf	___flmul@temp+1,w
 15355  04B6  00C5               	movwf	??___flmul
 15356  04B7  01C6               	clrf	??___flmul+1
 15357  04B8  01C7               	clrf	??___flmul+2
 15358  04B9  01C8               	clrf	??___flmul+3
 15359  04BA  0845               	movf	??___flmul,w
 15360  04BB  07D1               	addwf	___flmul@prod,f
 15361  04BC  0846               	movf	??___flmul+1,w
 15362  04BD  3DD2               	addwfc	___flmul@prod+1,f
 15363  04BE  0847               	movf	??___flmul+2,w
 15364  04BF  3DD3               	addwfc	___flmul@prod+2,f
 15365  04C0  0848               	movf	??___flmul+3,w
 15366  04C1  3DD4               	addwfc	___flmul@prod+3,f
 15367  04C2  3008               	movlw	8
 15368  04C3                     u5655:	
 15369  04C3  35CC               	lslf	___flmul@grs,f
 15370  04C4  0DCD               	rlf	___flmul@grs+1,f
 15371  04C5  0DCE               	rlf	___flmul@grs+2,f
 15372  04C6  0DCF               	rlf	___flmul@grs+3,f
 15373  04C7  0B89               	decfsz	9,f
 15374  04C8  2CC3               	goto	u5655
 15375  04C9  083E               	movf	___flmul@b+1,w
 15376  04CA  00C5               	movwf	??___flmul
 15377  04CB  0845               	movf	??___flmul,w
 15378  04CC  00A0               	movwf	__Umul8_16@multiplicand
 15379  04CD  0841               	movf	___flmul@a,w
 15380  04CE  3190  2060  3183   	fcall	__Umul8_16
 15381  04D1  0140               	movlb	0	; select bank0
 15382  04D2  0821               	movf	?__Umul8_16+1,w
 15383  04D3  00D6               	movwf	___flmul@temp+1
 15384  04D4  0820               	movf	?__Umul8_16,w
 15385  04D5  00D5               	movwf	___flmul@temp
 15386  04D6  0855               	movf	___flmul@temp,w
 15387  04D7  07CC               	addwf	___flmul@grs,f
 15388  04D8  0856               	movf	___flmul@temp+1,w
 15389  04D9  3DCD               	addwfc	___flmul@grs+1,f
 15390  04DA  3000               	movlw	0
 15391  04DB  3DCE               	addwfc	___flmul@grs+2,f
 15392  04DC  3DCF               	addwfc	___flmul@grs+3,f
 15393  04DD  083D               	movf	___flmul@b,w
 15394  04DE  00C5               	movwf	??___flmul
 15395  04DF  0845               	movf	??___flmul,w
 15396  04E0  00A0               	movwf	__Umul8_16@multiplicand
 15397  04E1  0842               	movf	___flmul@a+1,w
 15398  04E2  3190  2060  3183   	fcall	__Umul8_16
 15399  04E5  0140               	movlb	0	; select bank0
 15400  04E6  0821               	movf	?__Umul8_16+1,w
 15401  04E7  00D6               	movwf	___flmul@temp+1
 15402  04E8  0820               	movf	?__Umul8_16,w
 15403  04E9  00D5               	movwf	___flmul@temp
 15404  04EA  0855               	movf	___flmul@temp,w
 15405  04EB  07CC               	addwf	___flmul@grs,f
 15406  04EC  0856               	movf	___flmul@temp+1,w
 15407  04ED  3DCD               	addwfc	___flmul@grs+1,f
 15408  04EE  3000               	movlw	0
 15409  04EF  3DCE               	addwfc	___flmul@grs+2,f
 15410  04F0  3DCF               	addwfc	___flmul@grs+3,f
 15411  04F1  3008               	movlw	8
 15412  04F2                     u5665:	
 15413  04F2  35CC               	lslf	___flmul@grs,f
 15414  04F3  0DCD               	rlf	___flmul@grs+1,f
 15415  04F4  0DCE               	rlf	___flmul@grs+2,f
 15416  04F5  0DCF               	rlf	___flmul@grs+3,f
 15417  04F6  0B89               	decfsz	9,f
 15418  04F7  2CF2               	goto	u5665
 15419  04F8  083D               	movf	___flmul@b,w
 15420  04F9  00C5               	movwf	??___flmul
 15421  04FA  0845               	movf	??___flmul,w
 15422  04FB  00A0               	movwf	__Umul8_16@multiplicand
 15423  04FC  0841               	movf	___flmul@a,w
 15424  04FD  3190  2060  3183   	fcall	__Umul8_16
 15425  0500  0140               	movlb	0	; select bank0
 15426  0501  0821               	movf	?__Umul8_16+1,w
 15427  0502  00D6               	movwf	___flmul@temp+1
 15428  0503  0820               	movf	?__Umul8_16,w
 15429  0504  00D5               	movwf	___flmul@temp
 15430  0505  0855               	movf	___flmul@temp,w
 15431  0506  07CC               	addwf	___flmul@grs,f
 15432  0507  0856               	movf	___flmul@temp+1,w
 15433  0508  3DCD               	addwfc	___flmul@grs+1,f
 15434  0509  3000               	movlw	0
 15435  050A  3DCE               	addwfc	___flmul@grs+2,f
 15436  050B  3DCF               	addwfc	___flmul@grs+3,f
 15437  050C  083E               	movf	___flmul@b+1,w
 15438  050D  00C5               	movwf	??___flmul
 15439  050E  0845               	movf	??___flmul,w
 15440  050F  00A0               	movwf	__Umul8_16@multiplicand
 15441  0510  0843               	movf	___flmul@a+2,w
 15442  0511  3190  2060  3183   	fcall	__Umul8_16
 15443  0514  0140               	movlb	0	; select bank0
 15444  0515  0821               	movf	?__Umul8_16+1,w
 15445  0516  00D6               	movwf	___flmul@temp+1
 15446  0517  0820               	movf	?__Umul8_16,w
 15447  0518  00D5               	movwf	___flmul@temp
 15448  0519  0855               	movf	___flmul@temp,w
 15449  051A  07D1               	addwf	___flmul@prod,f
 15450  051B  0856               	movf	___flmul@temp+1,w
 15451  051C  3DD2               	addwfc	___flmul@prod+1,f
 15452  051D  3000               	movlw	0
 15453  051E  3DD3               	addwfc	___flmul@prod+2,f
 15454  051F  3DD4               	addwfc	___flmul@prod+3,f
 15455  0520  083F               	movf	___flmul@b+2,w
 15456  0521  00C5               	movwf	??___flmul
 15457  0522  0845               	movf	??___flmul,w
 15458  0523  00A0               	movwf	__Umul8_16@multiplicand
 15459  0524  0842               	movf	___flmul@a+1,w
 15460  0525  3190  2060  3183   	fcall	__Umul8_16
 15461  0528  0140               	movlb	0	; select bank0
 15462  0529  0821               	movf	?__Umul8_16+1,w
 15463  052A  00D6               	movwf	___flmul@temp+1
 15464  052B  0820               	movf	?__Umul8_16,w
 15465  052C  00D5               	movwf	___flmul@temp
 15466  052D  0855               	movf	___flmul@temp,w
 15467  052E  07D1               	addwf	___flmul@prod,f
 15468  052F  0856               	movf	___flmul@temp+1,w
 15469  0530  3DD2               	addwfc	___flmul@prod+1,f
 15470  0531  3000               	movlw	0
 15471  0532  3DD3               	addwfc	___flmul@prod+2,f
 15472  0533  3DD4               	addwfc	___flmul@prod+3,f
 15473  0534  083F               	movf	___flmul@b+2,w
 15474  0535  00C5               	movwf	??___flmul
 15475  0536  0845               	movf	??___flmul,w
 15476  0537  00A0               	movwf	__Umul8_16@multiplicand
 15477  0538  0843               	movf	___flmul@a+2,w
 15478  0539  3190  2060  3183   	fcall	__Umul8_16
 15479  053C  0140               	movlb	0	; select bank0
 15480  053D  0821               	movf	?__Umul8_16+1,w
 15481  053E  00D6               	movwf	___flmul@temp+1
 15482  053F  0820               	movf	?__Umul8_16,w
 15483  0540  00D5               	movwf	___flmul@temp
 15484  0541  0855               	movf	___flmul@temp,w
 15485  0542  00C5               	movwf	??___flmul
 15486  0543  0856               	movf	___flmul@temp+1,w
 15487  0544  00C6               	movwf	??___flmul+1
 15488  0545  01C7               	clrf	??___flmul+2
 15489  0546  01C8               	clrf	??___flmul+3
 15490  0547  3008               	movlw	8
 15491  0548                     u5675:	
 15492  0548  35C5               	lslf	??___flmul,f
 15493  0549  0DC6               	rlf	??___flmul+1,f
 15494  054A  0DC7               	rlf	??___flmul+2,f
 15495  054B  0DC8               	rlf	??___flmul+3,f
 15496  054C  0B89               	decfsz	9,f
 15497  054D  2D48               	goto	u5675
 15498  054E  0845               	movf	??___flmul,w
 15499  054F  07D1               	addwf	___flmul@prod,f
 15500  0550  0846               	movf	??___flmul+1,w
 15501  0551  3DD2               	addwfc	___flmul@prod+1,f
 15502  0552  0847               	movf	??___flmul+2,w
 15503  0553  3DD3               	addwfc	___flmul@prod+2,f
 15504  0554  0848               	movf	??___flmul+3,w
 15505  0555  3DD4               	addwfc	___flmul@prod+3,f
 15506  0556  084C               	movf	___flmul@grs,w
 15507  0557  00C5               	movwf	??___flmul
 15508  0558  084D               	movf	___flmul@grs+1,w
 15509  0559  00C6               	movwf	??___flmul+1
 15510  055A  084E               	movf	___flmul@grs+2,w
 15511  055B  00C7               	movwf	??___flmul+2
 15512  055C  084F               	movf	___flmul@grs+3,w
 15513  055D  00C8               	movwf	??___flmul+3
 15514  055E  3018               	movlw	24
 15515  055F                     u5685:	
 15516  055F  36C8               	lsrf	??___flmul+3,f
 15517  0560  0CC7               	rrf	??___flmul+2,f
 15518  0561  0CC6               	rrf	??___flmul+1,f
 15519  0562  0CC5               	rrf	??___flmul,f
 15520  0563  0B89               	decfsz	9,f
 15521  0564  2D5F               	goto	u5685
 15522  0565  0845               	movf	??___flmul,w
 15523  0566  07D1               	addwf	___flmul@prod,f
 15524  0567  0846               	movf	??___flmul+1,w
 15525  0568  3DD2               	addwfc	___flmul@prod+1,f
 15526  0569  0847               	movf	??___flmul+2,w
 15527  056A  3DD3               	addwfc	___flmul@prod+2,f
 15528  056B  0848               	movf	??___flmul+3,w
 15529  056C  3DD4               	addwfc	___flmul@prod+3,f
 15530  056D  3008               	movlw	8
 15531  056E                     u5695:	
 15532  056E  35CC               	lslf	___flmul@grs,f
 15533  056F  0DCD               	rlf	___flmul@grs+1,f
 15534  0570  0DCE               	rlf	___flmul@grs+2,f
 15535  0571  0DCF               	rlf	___flmul@grs+3,f
 15536  0572  0B89               	decfsz	9,f
 15537  0573  2D6E               	goto	u5695
 15538  0574  0850               	movf	___flmul@bexp,w
 15539  0575  074B               	addwf	___flmul@aexp,w
 15540  0576  00C5               	movwf	??___flmul
 15541  0577  01C6               	clrf	??___flmul+1
 15542  0578  0DC6               	rlf	??___flmul+1,f
 15543  0579  0845               	movf	??___flmul,w
 15544  057A  3E82               	addlw	130
 15545  057B  00D5               	movwf	___flmul@temp
 15546  057C  30FF               	movlw	255
 15547  057D  3D46               	addwfc	??___flmul+1,w
 15548  057E  00D6               	movwf	___flmul@temp+1
 15549  057F                     l5479:	
 15550  057F  1BD3               	btfsc	___flmul@prod+2,7
 15551  0580  2D96               	goto	l5481
 15552  0581  3001               	movlw	1
 15553  0582                     u5705:	
 15554  0582  35D1               	lslf	___flmul@prod,f
 15555  0583  0DD2               	rlf	___flmul@prod+1,f
 15556  0584  0DD3               	rlf	___flmul@prod+2,f
 15557  0585  0DD4               	rlf	___flmul@prod+3,f
 15558  0586  0B89               	decfsz	9,f
 15559  0587  2D82               	goto	u5705
 15560  0588  1BCF               	btfsc	___flmul@grs+3,7
 15561  0589  1451               	bsf	___flmul@prod,0
 15562  058A  3001               	movlw	1
 15563  058B                     u5725:	
 15564  058B  35CC               	lslf	___flmul@grs,f
 15565  058C  0DCD               	rlf	___flmul@grs+1,f
 15566  058D  0DCE               	rlf	___flmul@grs+2,f
 15567  058E  0DCF               	rlf	___flmul@grs+3,f
 15568  058F  0B89               	decfsz	9,f
 15569  0590  2D8B               	goto	u5725
 15570  0591  30FF               	movlw	255
 15571  0592  07D5               	addwf	___flmul@temp,f
 15572  0593  30FF               	movlw	255
 15573  0594  3DD6               	addwfc	___flmul@temp+1,f
 15574  0595  2D7F               	goto	l5479
 15575  0596                     l5481:	
 15576  0596  01CB               	clrf	___flmul@aexp
 15577  0597  1FCF               	btfss	___flmul@grs+3,7
 15578  0598  2DAF               	goto	l5491
 15579  0599  30FF               	movlw	255
 15580  059A  054C               	andwf	___flmul@grs,w
 15581  059B  00C5               	movwf	??___flmul
 15582  059C  30FF               	movlw	255
 15583  059D  054D               	andwf	___flmul@grs+1,w
 15584  059E  00C6               	movwf	??___flmul+1
 15585  059F  30FF               	movlw	255
 15586  05A0  054E               	andwf	___flmul@grs+2,w
 15587  05A1  00C7               	movwf	??___flmul+2
 15588  05A2  307F               	movlw	127
 15589  05A3  054F               	andwf	___flmul@grs+3,w
 15590  05A4  00C8               	movwf	??___flmul+3
 15591  05A5  0848               	movf	??___flmul+3,w
 15592  05A6  0447               	iorwf	??___flmul+2,w
 15593  05A7  0446               	iorwf	??___flmul+1,w
 15594  05A8  0445               	iorwf	??___flmul,w
 15595  05A9  1903               	skipnz
 15596  05AA  1851               	btfsc	___flmul@prod,0
 15597  05AB  2DAD               	goto	l5487
 15598  05AC  2DAF               	goto	l5491
 15599  05AD                     l5487:	
 15600  05AD  01CB               	clrf	___flmul@aexp
 15601  05AE  0ACB               	incf	___flmul@aexp,f
 15602  05AF                     l5491:	
 15603  05AF  084B               	movf	___flmul@aexp,w
 15604  05B0  1903               	btfsc	3,2
 15605  05B1  2DD8               	goto	l5501
 15606  05B2  3001               	movlw	1
 15607  05B3  07D1               	addwf	___flmul@prod,f
 15608  05B4  3000               	movlw	0
 15609  05B5  3DD2               	addwfc	___flmul@prod+1,f
 15610  05B6  3000               	movlw	0
 15611  05B7  3DD3               	addwfc	___flmul@prod+2,f
 15612  05B8  3000               	movlw	0
 15613  05B9  3DD4               	addwfc	___flmul@prod+3,f
 15614  05BA  1C54               	btfss	___flmul@prod+3,0
 15615  05BB  2DD8               	goto	l5501
 15616  05BC  0851               	movf	___flmul@prod,w
 15617  05BD  00C5               	movwf	??___flmul
 15618  05BE  0852               	movf	___flmul@prod+1,w
 15619  05BF  00C6               	movwf	??___flmul+1
 15620  05C0  0853               	movf	___flmul@prod+2,w
 15621  05C1  00C7               	movwf	??___flmul+2
 15622  05C2  0854               	movf	___flmul@prod+3,w
 15623  05C3  00C8               	movwf	??___flmul+3
 15624  05C4  3001               	movlw	1
 15625  05C5  00C9               	movwf	??___flmul+4
 15626  05C6                     u5795:	
 15627  05C6  37C8               	asrf	??___flmul+3,f
 15628  05C7  0CC7               	rrf	??___flmul+2,f
 15629  05C8  0CC6               	rrf	??___flmul+1,f
 15630  05C9  0CC5               	rrf	??___flmul,f
 15631  05CA  0BC9               	decfsz	??___flmul+4,f
 15632  05CB  2DC6               	goto	u5795
 15633  05CC  0848               	movf	??___flmul+3,w
 15634  05CD  00D4               	movwf	___flmul@prod+3
 15635  05CE  0847               	movf	??___flmul+2,w
 15636  05CF  00D3               	movwf	___flmul@prod+2
 15637  05D0  0846               	movf	??___flmul+1,w
 15638  05D1  00D2               	movwf	___flmul@prod+1
 15639  05D2  0845               	movf	??___flmul,w
 15640  05D3  00D1               	movwf	___flmul@prod
 15641  05D4  3001               	movlw	1
 15642  05D5  07D5               	addwf	___flmul@temp,f
 15643  05D6  3000               	movlw	0
 15644  05D7  3DD6               	addwfc	___flmul@temp+1,f
 15645  05D8                     l5501:	
 15646  05D8  0856               	movf	___flmul@temp+1,w
 15647  05D9  3A80               	xorlw	128
 15648  05DA  00C5               	movwf	??___flmul
 15649  05DB  3080               	movlw	128
 15650  05DC  0245               	subwf	??___flmul,w
 15651  05DD  1D03               	skipz
 15652  05DE  2DE1               	goto	u5805
 15653  05DF  30FF               	movlw	255
 15654  05E0  0255               	subwf	___flmul@temp,w
 15655  05E1                     u5805:	
 15656  05E1  1C03               	skipc
 15657  05E2  2DED               	goto	l5505
 15658  05E3  307F               	movlw	127
 15659  05E4  0140               	movlb	0	; select bank0
 15660  05E5  00D4               	movwf	___flmul@prod+3
 15661  05E6  3080               	movlw	128
 15662  05E7  00D3               	movwf	___flmul@prod+2
 15663  05E8  3000               	movlw	0
 15664  05E9  00D2               	movwf	___flmul@prod+1
 15665  05EA  3000               	movlw	0
 15666  05EB  00D1               	movwf	___flmul@prod
 15667  05EC  2E17               	goto	l1690
 15668  05ED                     l5505:	
 15669  05ED  0140               	movlb	0	; select bank0
 15670  05EE  0856               	movf	___flmul@temp+1,w
 15671  05EF  3A80               	xorlw	128
 15672  05F0  00C5               	movwf	??___flmul
 15673  05F1  3080               	movlw	128
 15674  05F2  0245               	subwf	??___flmul,w
 15675  05F3  1D03               	skipz
 15676  05F4  2DF7               	goto	u5815
 15677  05F5  3001               	movlw	1
 15678  05F6  0255               	subwf	___flmul@temp,w
 15679  05F7                     u5815:	
 15680  05F7  1803               	skipnc
 15681  05F8  2E04               	goto	l5511
 15682  05F9  3000               	movlw	0
 15683  05FA  0140               	movlb	0	; select bank0
 15684  05FB  00D4               	movwf	___flmul@prod+3
 15685  05FC  3000               	movlw	0
 15686  05FD  00D3               	movwf	___flmul@prod+2
 15687  05FE  3000               	movlw	0
 15688  05FF  00D2               	movwf	___flmul@prod+1
 15689  0600  3000               	movlw	0
 15690  0601  00D1               	movwf	___flmul@prod
 15691  0602  01CA               	clrf	___flmul@sign
 15692  0603  2E17               	goto	l1690
 15693  0604                     l5511:	
 15694  0604  0140               	movlb	0	; select bank0
 15695  0605  0855               	movf	___flmul@temp,w
 15696  0606  00C5               	movwf	??___flmul
 15697  0607  0845               	movf	??___flmul,w
 15698  0608  00D0               	movwf	___flmul@bexp
 15699  0609  30FF               	movlw	255
 15700  060A  05D1               	andwf	___flmul@prod,f
 15701  060B  30FF               	movlw	255
 15702  060C  05D2               	andwf	___flmul@prod+1,f
 15703  060D  307F               	movlw	127
 15704  060E  05D3               	andwf	___flmul@prod+2,f
 15705  060F  3000               	movlw	0
 15706  0610  05D4               	andwf	___flmul@prod+3,f
 15707  0611  1850               	btfsc	___flmul@bexp,0
 15708  0612  17D3               	bsf	___flmul@prod+2,7
 15709  0613  3650               	lsrf	___flmul@bexp,w
 15710  0614  00C5               	movwf	??___flmul
 15711  0615  0845               	movf	??___flmul,w
 15712  0616  00D4               	movwf	___flmul@prod+3
 15713  0617                     l1690:	
 15714  0617  084A               	movf	___flmul@sign,w
 15715  0618  00C5               	movwf	??___flmul
 15716  0619  0845               	movf	??___flmul,w
 15717  061A  04D4               	iorwf	___flmul@prod+3,f
 15718  061B  0854               	movf	___flmul@prod+3,w
 15719  061C  00C0               	movwf	?___flmul+3
 15720  061D  0853               	movf	___flmul@prod+2,w
 15721  061E  00BF               	movwf	?___flmul+2
 15722  061F  0852               	movf	___flmul@prod+1,w
 15723  0620  00BE               	movwf	?___flmul+1
 15724  0621  0851               	movf	___flmul@prod,w
 15725  0622  00BD               	movwf	?___flmul
 15726  0623  0008               	return
 15727  0624                     __end_of___flmul:	
 15728                           
 15729                           	psect	text48
 15730  1060                     __ptext48:	
 15731 ;; *************** function __Umul8_16 *****************
 15732 ;; Defined at:
 15733 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 15734 ;; Parameters:    Size  Location     Type
 15735 ;;  multiplier      1    wreg     unsigned char 
 15736 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15737 ;; Auto vars:     Size  Location     Type
 15738 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15739 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15740 ;;  product         2    4[BANK0 ] unsigned int 
 15741 ;; Return value:  Size  Location     Type
 15742 ;;                  2    0[BANK0 ] unsigned int 
 15743 ;; Registers used:
 15744 ;;		wreg, status,2, status,0
 15745 ;; Tracked objects:
 15746 ;;		On entry : 0/0
 15747 ;;		On exit  : 0/0
 15748 ;;		Unchanged: 0/0
 15749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15751 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15752 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15753 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15754 ;;Total ram usage:        9 bytes
 15755 ;; Hardware stack levels used:    1
 15756 ;; Hardware stack levels required when called:    4
 15757 ;; This function calls:
 15758 ;;		Nothing
 15759 ;; This function is called by:
 15760 ;;		___flmul
 15761 ;; This function uses a non-reentrant model
 15762 ;;
 15763                           
 15764                           
 15765                           ;psect for function __Umul8_16
 15766  1060                     __Umul8_16:	
 15767                           
 15768                           ;incstack = 0
 15769                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15770                           ;__Umul8_16@multiplier stored from wreg
 15771  1060  0140               	movlb	0	; select bank0
 15772  1061  00A8               	movwf	__Umul8_16@multiplier
 15773  1062  01A4               	clrf	__Umul8_16@product
 15774  1063  01A5               	clrf	__Umul8_16@product+1
 15775  1064  0820               	movf	__Umul8_16@multiplicand,w
 15776  1065  00A2               	movwf	??__Umul8_16
 15777  1066  01A3               	clrf	??__Umul8_16+1
 15778  1067  0822               	movf	??__Umul8_16,w
 15779  1068  00A6               	movwf	__Umul8_16@word_mpld
 15780  1069  0823               	movf	??__Umul8_16+1,w
 15781  106A  00A7               	movwf	__Umul8_16@word_mpld+1
 15782  106B                     l5317:	
 15783  106B  1C28               	btfss	__Umul8_16@multiplier,0
 15784  106C  2871               	goto	l1735
 15785  106D  0826               	movf	__Umul8_16@word_mpld,w
 15786  106E  07A4               	addwf	__Umul8_16@product,f
 15787  106F  0827               	movf	__Umul8_16@word_mpld+1,w
 15788  1070  3DA5               	addwfc	__Umul8_16@product+1,f
 15789  1071                     l1735:	
 15790  1071  3001               	movlw	1
 15791  1072                     u5415:	
 15792  1072  35A6               	lslf	__Umul8_16@word_mpld,f
 15793  1073  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15794  1074  0B89               	decfsz	9,f
 15795  1075  2872               	goto	u5415
 15796  1076  1003               	clrc
 15797  1077  0CA8               	rrf	__Umul8_16@multiplier,f
 15798  1078  0828               	movf	__Umul8_16@multiplier,w
 15799  1079  1D03               	btfss	3,2
 15800  107A  286B               	goto	l5317
 15801  107B  0825               	movf	__Umul8_16@product+1,w
 15802  107C  00A1               	movwf	?__Umul8_16+1
 15803  107D  0824               	movf	__Umul8_16@product,w
 15804  107E  00A0               	movwf	?__Umul8_16
 15805  107F  0008               	return
 15806  1080                     __end_of__Umul8_16:	
 15807                           
 15808                           	psect	text49
 15809  152D                     __ptext49:	
 15810 ;; *************** function ___flge *****************
 15811 ;; Defined at:
 15812 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;  ff1             4   55[BANK0 ] unsigned int 
 15815 ;;  ff2             4   59[BANK0 ] unsigned int 
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;		None
 15818 ;; Return value:  Size  Location     Type
 15819 ;;		None               void
 15820 ;; Registers used:
 15821 ;;		wreg, status,2, status,0
 15822 ;; Tracked objects:
 15823 ;;		On entry : 0/0
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15827 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15829 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15830 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15831 ;;Total ram usage:       12 bytes
 15832 ;; Hardware stack levels used:    1
 15833 ;; Hardware stack levels required when called:    4
 15834 ;; This function calls:
 15835 ;;		Nothing
 15836 ;; This function is called by:
 15837 ;;		_HueToRGB
 15838 ;;		_LED_setHSL
 15839 ;;		_pulseColors
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843                           
 15844                           ;psect for function ___flge
 15845  152D                     ___flge:	
 15846                           
 15847                           ;incstack = 0
 15848                           ; Regs used in ___flge: [wreg+status,2+status,0]
 15849  152D  3000               	movlw	0
 15850  152E  0140               	movlb	0	; select bank0
 15851  152F  0557               	andwf	___flge@ff1,w
 15852  1530  00DF               	movwf	??___flge
 15853  1531  3000               	movlw	0
 15854  1532  0558               	andwf	___flge@ff1+1,w
 15855  1533  00E0               	movwf	??___flge+1
 15856  1534  3080               	movlw	128
 15857  1535  0559               	andwf	___flge@ff1+2,w
 15858  1536  00E1               	movwf	??___flge+2
 15859  1537  307F               	movlw	127
 15860  1538  055A               	andwf	___flge@ff1+3,w
 15861  1539  00E2               	movwf	??___flge+3
 15862  153A  0862               	movf	??___flge+3,w
 15863  153B  0461               	iorwf	??___flge+2,w
 15864  153C  0460               	iorwf	??___flge+1,w
 15865  153D  045F               	iorwf	??___flge,w
 15866  153E  1D03               	skipz
 15867  153F  2D48               	goto	l1459
 15868  1540  3000               	movlw	0
 15869  1541  00DA               	movwf	___flge@ff1+3
 15870  1542  3000               	movlw	0
 15871  1543  00D9               	movwf	___flge@ff1+2
 15872  1544  3000               	movlw	0
 15873  1545  00D8               	movwf	___flge@ff1+1
 15874  1546  3000               	movlw	0
 15875  1547  00D7               	movwf	___flge@ff1
 15876  1548                     l1459:	
 15877  1548  3000               	movlw	0
 15878  1549  055B               	andwf	___flge@ff2,w
 15879  154A  00DF               	movwf	??___flge
 15880  154B  3000               	movlw	0
 15881  154C  055C               	andwf	___flge@ff2+1,w
 15882  154D  00E0               	movwf	??___flge+1
 15883  154E  3080               	movlw	128
 15884  154F  055D               	andwf	___flge@ff2+2,w
 15885  1550  00E1               	movwf	??___flge+2
 15886  1551  307F               	movlw	127
 15887  1552  055E               	andwf	___flge@ff2+3,w
 15888  1553  00E2               	movwf	??___flge+3
 15889  1554  0862               	movf	??___flge+3,w
 15890  1555  0461               	iorwf	??___flge+2,w
 15891  1556  0460               	iorwf	??___flge+1,w
 15892  1557  045F               	iorwf	??___flge,w
 15893  1558  1D03               	skipz
 15894  1559  2D62               	goto	l3853
 15895  155A  3000               	movlw	0
 15896  155B  00DE               	movwf	___flge@ff2+3
 15897  155C  3000               	movlw	0
 15898  155D  00DD               	movwf	___flge@ff2+2
 15899  155E  3000               	movlw	0
 15900  155F  00DC               	movwf	___flge@ff2+1
 15901  1560  3000               	movlw	0
 15902  1561  00DB               	movwf	___flge@ff2
 15903  1562                     l3853:	
 15904  1562  1FDA               	btfss	___flge@ff1+3,7
 15905  1563  2D7C               	goto	l3857
 15906  1564  3000               	movlw	0
 15907  1565  00DF               	movwf	??___flge
 15908  1566  3000               	movlw	0
 15909  1567  00E0               	movwf	??___flge+1
 15910  1568  3000               	movlw	0
 15911  1569  00E1               	movwf	??___flge+2
 15912  156A  3080               	movlw	128
 15913  156B  00E2               	movwf	??___flge+3
 15914  156C  0857               	movf	___flge@ff1,w
 15915  156D  02DF               	subwf	??___flge,f
 15916  156E  0858               	movf	___flge@ff1+1,w
 15917  156F  3BE0               	subwfb	??___flge+1,f
 15918  1570  0859               	movf	___flge@ff1+2,w
 15919  1571  3BE1               	subwfb	??___flge+2,f
 15920  1572  085A               	movf	___flge@ff1+3,w
 15921  1573  3BE2               	subwfb	??___flge+3,f
 15922  1574  0862               	movf	??___flge+3,w
 15923  1575  00DA               	movwf	___flge@ff1+3
 15924  1576  0861               	movf	??___flge+2,w
 15925  1577  00D9               	movwf	___flge@ff1+2
 15926  1578  0860               	movf	??___flge+1,w
 15927  1579  00D8               	movwf	___flge@ff1+1
 15928  157A  085F               	movf	??___flge,w
 15929  157B  00D7               	movwf	___flge@ff1
 15930  157C                     l3857:	
 15931  157C  1FDE               	btfss	___flge@ff2+3,7
 15932  157D  2D96               	goto	l1462
 15933  157E  3000               	movlw	0
 15934  157F  00DF               	movwf	??___flge
 15935  1580  3000               	movlw	0
 15936  1581  00E0               	movwf	??___flge+1
 15937  1582  3000               	movlw	0
 15938  1583  00E1               	movwf	??___flge+2
 15939  1584  3080               	movlw	128
 15940  1585  00E2               	movwf	??___flge+3
 15941  1586  085B               	movf	___flge@ff2,w
 15942  1587  02DF               	subwf	??___flge,f
 15943  1588  085C               	movf	___flge@ff2+1,w
 15944  1589  3BE0               	subwfb	??___flge+1,f
 15945  158A  085D               	movf	___flge@ff2+2,w
 15946  158B  3BE1               	subwfb	??___flge+2,f
 15947  158C  085E               	movf	___flge@ff2+3,w
 15948  158D  3BE2               	subwfb	??___flge+3,f
 15949  158E  0862               	movf	??___flge+3,w
 15950  158F  00DE               	movwf	___flge@ff2+3
 15951  1590  0861               	movf	??___flge+2,w
 15952  1591  00DD               	movwf	___flge@ff2+2
 15953  1592  0860               	movf	??___flge+1,w
 15954  1593  00DC               	movwf	___flge@ff2+1
 15955  1594  085F               	movf	??___flge,w
 15956  1595  00DB               	movwf	___flge@ff2
 15957  1596                     l1462:	
 15958  1596  3080               	movlw	128
 15959  1597  06DA               	xorwf	___flge@ff1+3,f
 15960  1598  3080               	movlw	128
 15961  1599  06DE               	xorwf	___flge@ff2+3,f
 15962  159A  085E               	movf	___flge@ff2+3,w
 15963  159B  025A               	subwf	___flge@ff1+3,w
 15964  159C  1D03               	skipz
 15965  159D  0008               	return
 15966  159E  085D               	movf	___flge@ff2+2,w
 15967  159F  0259               	subwf	___flge@ff1+2,w
 15968  15A0  1D03               	skipz
 15969  15A1  0008               	return
 15970  15A2  085C               	movf	___flge@ff2+1,w
 15971  15A3  0258               	subwf	___flge@ff1+1,w
 15972  15A4  1D03               	skipz
 15973  15A5  0008               	return
 15974  15A6  085B               	movf	___flge@ff2,w
 15975  15A7  0257               	subwf	___flge@ff1,w
 15976  15A8  0008               	return
 15977  15A9                     __end_of___flge:	
 15978                           
 15979                           	psect	text50
 15980  1E5C                     __ptext50:	
 15981 ;; *************** function _BEAT_detected *****************
 15982 ;; Defined at:
 15983 ;;		line 41 in file "beat.c"
 15984 ;; Parameters:    Size  Location     Type
 15985 ;;		None
 15986 ;; Auto vars:     Size  Location     Type
 15987 ;;		None
 15988 ;; Return value:  Size  Location     Type
 15989 ;;                  1    wreg      _Bool 
 15990 ;; Registers used:
 15991 ;;		wreg, status,2, status,0
 15992 ;; Tracked objects:
 15993 ;;		On entry : 0/0
 15994 ;;		On exit  : 0/0
 15995 ;;		Unchanged: 0/0
 15996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16001 ;;Total ram usage:        0 bytes
 16002 ;; Hardware stack levels used:    1
 16003 ;; Hardware stack levels required when called:    4
 16004 ;; This function calls:
 16005 ;;		Nothing
 16006 ;; This function is called by:
 16007 ;;		_LED_Beat
 16008 ;; This function uses a non-reentrant model
 16009 ;;
 16010                           
 16011                           
 16012                           ;psect for function _BEAT_detected
 16013  1E5C                     _BEAT_detected:	
 16014                           
 16015                           ;beat.c: 42:     if (detected) {
 16016                           
 16017                           ;incstack = 0
 16018                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 16019  1E5C  0142               	movlb	2	; select bank2
 16020  1E5D  084E               	movf	_detected^(0+256),w
 16021  1E5E  1903               	btfsc	3,2
 16022  1E5F  2E63               	goto	l5741
 16023                           
 16024                           ;beat.c: 43:         detected = 0;
 16025  1E60  01CE               	clrf	_detected^(0+256)
 16026                           
 16027                           ;beat.c: 44:         return 1;
 16028  1E61  3001               	movlw	1
 16029  1E62  0008               	return
 16030  1E63                     l5741:	
 16031                           
 16032                           ;beat.c: 46:     return 0;
 16033  1E63  3000               	movlw	0
 16034  1E64  0008               	return
 16035  1E65                     __end_of_BEAT_detected:	
 16036                           
 16037                           	psect	text51
 16038  0A02                     __ptext51:	
 16039 ;; *************** function _BEAT_task *****************
 16040 ;; Defined at:
 16041 ;;		line 59 in file "beat.c"
 16042 ;; Parameters:    Size  Location     Type
 16043 ;;		None
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;  offset          2   10[BANK0 ] unsigned short 
 16046 ;; Return value:  Size  Location     Type
 16047 ;;                  1    wreg      void 
 16048 ;; Registers used:
 16049 ;;		wreg, status,2, status,0, pclath, cstack
 16050 ;; Tracked objects:
 16051 ;;		On entry : 0/0
 16052 ;;		On exit  : 0/0
 16053 ;;		Unchanged: 0/0
 16054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16057 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16058 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16059 ;;Total ram usage:        4 bytes
 16060 ;; Hardware stack levels used:    1
 16061 ;; Hardware stack levels required when called:    5
 16062 ;; This function calls:
 16063 ;;		_ADCC_SetUpperThreshold
 16064 ;;		_CLOCK_getTime
 16065 ;;		_TM1650_isEnabled
 16066 ;;		___lwdiv
 16067 ;; This function is called by:
 16068 ;;		_MENU_task
 16069 ;; This function uses a non-reentrant model
 16070 ;;
 16071                           
 16072                           
 16073                           ;psect for function _BEAT_task
 16074  0A02                     _BEAT_task:	
 16075                           
 16076                           ;beat.c: 61:     if (TM1650_isEnabled())
 16077                           
 16078                           ;incstack = 0
 16079                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 16080  0A02  319E  260E  318A   	fcall	_TM1650_isEnabled
 16081  0A05  3A00               	xorlw	0
 16082  0A06  1D03               	btfss	3,2
 16083  0A07  0008               	return
 16084                           
 16085                           ;beat.c: 64:     if (CLOCK_getTime() - lastRun < delay)
 16086  0A08  319E  264A  318A   	fcall	_CLOCK_getTime
 16087  0A0B  0142               	movlb	2	; select bank2
 16088  0A0C  083D               	movf	_lastRun^(0+256),w
 16089  0A0D  0140               	movlb	0	; select bank0
 16090  0A0E  0220               	subwf	?_CLOCK_getTime,w
 16091  0A0F  00A8               	movwf	??_BEAT_task
 16092  0A10  0142               	movlb	2	; select bank2
 16093  0A11  083E               	movf	(_lastRun+1)^(0+256),w
 16094  0A12  0140               	movlb	0	; select bank0
 16095  0A13  3B21               	subwfb	?_CLOCK_getTime+1,w
 16096  0A14  00A9               	movwf	??_BEAT_task+1
 16097  0A15  0142               	movlb	2	; select bank2
 16098  0A16  0865               	movf	(_delay+1)^(0+256),w
 16099  0A17  0140               	movlb	0	; select bank0
 16100  0A18  0229               	subwf	??_BEAT_task+1,w
 16101  0A19  1D03               	skipz
 16102  0A1A  2A1F               	goto	u6175
 16103  0A1B  0142               	movlb	2	; select bank2
 16104  0A1C  0864               	movf	_delay^(0+256),w
 16105  0A1D  0140               	movlb	0	; select bank0
 16106  0A1E  0228               	subwf	??_BEAT_task,w
 16107  0A1F                     u6175:	
 16108  0A1F  1C03               	btfss	3,0
 16109  0A20  0008               	return
 16110                           
 16111                           ;beat.c: 67:     lastRun = CLOCK_getTime();
 16112  0A21  319E  264A  318A   	fcall	_CLOCK_getTime
 16113  0A24  0140               	movlb	0	; select bank0
 16114  0A25  0821               	movf	?_CLOCK_getTime+1,w
 16115  0A26  0142               	movlb	2	; select bank2
 16116  0A27  00BE               	movwf	(_lastRun+1)^(0+256)
 16117  0A28  0140               	movlb	0	; select bank0
 16118  0A29  0820               	movf	?_CLOCK_getTime,w
 16119  0A2A  0142               	movlb	2	; select bank2
 16120  0A2B  00BD               	movwf	_lastRun^(0+256)
 16121                           
 16122                           ;beat.c: 69:     if (thresholdExceeded == 1) {
 16123  0A2C  0141               	movlb	1	; select bank1
 16124  0A2D  0369               	decf	_thresholdExceeded^(0+128),w
 16125  0A2E  1D03               	btfss	3,2
 16126  0A2F  2A36               	goto	l5951
 16127                           
 16128                           ;beat.c: 73:         thresholdCount++;
 16129  0A30  3001               	movlw	1
 16130  0A31  0142               	movlb	2	; select bank2
 16131  0A32  07BB               	addwf	_thresholdCount^(0+256),f
 16132  0A33  3000               	movlw	0
 16133  0A34  3DBC               	addwfc	(_thresholdCount+1)^(0+256),f
 16134                           
 16135                           ;beat.c: 74:     } else {
 16136  0A35  2A3D               	goto	l5955
 16137  0A36                     l5951:	
 16138                           
 16139                           ;beat.c: 76:         thresholdCount = 0;
 16140  0A36  0142               	movlb	2	; select bank2
 16141  0A37  01BB               	clrf	_thresholdCount^(0+256)
 16142  0A38  01BC               	clrf	(_thresholdCount+1)^(0+256)
 16143                           
 16144                           ;beat.c: 77:         delay = 20;
 16145  0A39  3014               	movlw	20
 16146  0A3A  00E4               	movwf	_delay^(0+256)
 16147  0A3B  3000               	movlw	0
 16148  0A3C  00E5               	movwf	(_delay^(0+256)+1)
 16149  0A3D                     l5955:	
 16150                           
 16151                           ;beat.c: 83:     if (thresholdExceeded == 1 && lastDetected == 0) {
 16152  0A3D  0141               	movlb	1	; select bank1
 16153  0A3E  0369               	decf	_thresholdExceeded^(0+128),w
 16154  0A3F  1D03               	btfss	3,2
 16155  0A40  2A84               	goto	l5973
 16156  0A41  0142               	movlb	2	; select bank2
 16157  0A42  084D               	movf	_lastDetected^(0+256),w
 16158  0A43  1D03               	btfss	3,2
 16159  0A44  2A84               	goto	l5973
 16160                           
 16161                           ;beat.c: 85:         detected = 1;
 16162  0A45  01CE               	clrf	_detected^(0+256)
 16163  0A46  0ACE               	incf	_detected^(0+256),f
 16164                           
 16165                           ;beat.c: 88:         delay = 100;
 16166  0A47  3064               	movlw	100
 16167  0A48  00E4               	movwf	_delay^(0+256)
 16168  0A49  3000               	movlw	0
 16169  0A4A  00E5               	movwf	(_delay^(0+256)+1)
 16170                           
 16171                           ;beat.c: 91:         time_t offset = CLOCK_getTime() - lastBeat;
 16172  0A4B  319E  264A  318A   	fcall	_CLOCK_getTime
 16173  0A4E  0142               	movlb	2	; select bank2
 16174  0A4F  0841               	movf	_lastBeat^(0+256),w
 16175  0A50  0140               	movlb	0	; select bank0
 16176  0A51  0220               	subwf	?_CLOCK_getTime,w
 16177  0A52  00AA               	movwf	BEAT_task@offset
 16178  0A53  0142               	movlb	2	; select bank2
 16179  0A54  0842               	movf	(_lastBeat+1)^(0+256),w
 16180  0A55  0140               	movlb	0	; select bank0
 16181  0A56  3B21               	subwfb	?_CLOCK_getTime+1,w
 16182  0A57  00AB               	movwf	BEAT_task@offset+1
 16183                           
 16184                           ;beat.c: 93:         lastBeat = CLOCK_getTime();
 16185  0A58  319E  264A  318A   	fcall	_CLOCK_getTime
 16186  0A5B  0140               	movlb	0	; select bank0
 16187  0A5C  0821               	movf	?_CLOCK_getTime+1,w
 16188  0A5D  0142               	movlb	2	; select bank2
 16189  0A5E  00C2               	movwf	(_lastBeat+1)^(0+256)
 16190  0A5F  0140               	movlb	0	; select bank0
 16191  0A60  0820               	movf	?_CLOCK_getTime,w
 16192  0A61  0142               	movlb	2	; select bank2
 16193  0A62  00C1               	movwf	_lastBeat^(0+256)
 16194                           
 16195                           ;beat.c: 95:         if (offset < 150)
 16196  0A63  3000               	movlw	0
 16197  0A64  0140               	movlb	0	; select bank0
 16198  0A65  022B               	subwf	BEAT_task@offset+1,w
 16199  0A66  3096               	movlw	150
 16200  0A67  1903               	skipnz
 16201  0A68  022A               	subwf	BEAT_task@offset,w
 16202  0A69  1803               	skipnc
 16203  0A6A  2A71               	goto	l5971
 16204                           
 16205                           ;beat.c: 96:             bpm = 400;
 16206  0A6B  3090               	movlw	144
 16207  0A6C  0142               	movlb	2	; select bank2
 16208  0A6D  00BF               	movwf	_bpm^(0+256)
 16209  0A6E  3001               	movlw	1
 16210  0A6F  00C0               	movwf	(_bpm^(0+256)+1)
 16211  0A70  2A84               	goto	l5973
 16212  0A71                     l5971:	
 16213                           
 16214                           ;beat.c: 98:             bpm = 60 * 1000 / offset;
 16215  0A71  082B               	movf	BEAT_task@offset+1,w
 16216  0A72  00A1               	movwf	___lwdiv@divisor+1
 16217  0A73  082A               	movf	BEAT_task@offset,w
 16218  0A74  00A0               	movwf	___lwdiv@divisor
 16219  0A75  3060               	movlw	96
 16220  0A76  00A2               	movwf	___lwdiv@dividend
 16221  0A77  30EA               	movlw	234
 16222  0A78  00A3               	movwf	___lwdiv@dividend+1
 16223  0A79  3192  2217  318A   	fcall	___lwdiv
 16224  0A7C  0140               	movlb	0	; select bank0
 16225  0A7D  0821               	movf	?___lwdiv+1,w
 16226  0A7E  0142               	movlb	2	; select bank2
 16227  0A7F  00C0               	movwf	(_bpm+1)^(0+256)
 16228  0A80  0140               	movlb	0	; select bank0
 16229  0A81  0820               	movf	?___lwdiv,w
 16230  0A82  0142               	movlb	2	; select bank2
 16231  0A83  00BF               	movwf	_bpm^(0+256)
 16232  0A84                     l5973:	
 16233                           
 16234                           ;beat.c: 104:     lastDetected = thresholdExceeded;
 16235  0A84  0141               	movlb	1	; select bank1
 16236  0A85  0869               	movf	_thresholdExceeded^(0+128),w
 16237  0A86  0140               	movlb	0	; select bank0
 16238  0A87  00A8               	movwf	??_BEAT_task
 16239  0A88  0828               	movf	??_BEAT_task,w
 16240  0A89  0142               	movlb	2	; select bank2
 16241  0A8A  00CD               	movwf	_lastDetected^(0+256)
 16242                           
 16243                           ;beat.c: 105:     thresholdExceeded = 0;
 16244  0A8B  0141               	movlb	1	; select bank1
 16245  0A8C  01E9               	clrf	_thresholdExceeded^(0+128)
 16246                           
 16247                           ;beat.c: 107:     if (thresholdCount > 3) {
 16248  0A8D  0142               	movlb	2	; select bank2
 16249  0A8E  083C               	movf	(_thresholdCount+1)^(0+256),w
 16250  0A8F  3A80               	xorlw	128
 16251  0A90  0140               	movlb	0	; select bank0
 16252  0A91  00A8               	movwf	??_BEAT_task
 16253  0A92  3080               	movlw	128
 16254  0A93  0228               	subwf	??_BEAT_task,w
 16255  0A94  1D03               	skipz
 16256  0A95  2A99               	goto	u6225
 16257  0A96  3004               	movlw	4
 16258  0A97  0142               	movlb	2	; select bank2
 16259  0A98  023B               	subwf	_thresholdCount^(0+256),w
 16260  0A99                     u6225:	
 16261  0A99  1C03               	skipc
 16262  0A9A  2AB8               	goto	l5987
 16263                           
 16264                           ;beat.c: 108:         threshold += 1;
 16265  0A9B  3001               	movlw	1
 16266  0A9C  0142               	movlb	2	; select bank2
 16267  0A9D  07E6               	addwf	_threshold^(0+256),f
 16268  0A9E  3000               	movlw	0
 16269  0A9F  3DE7               	addwfc	(_threshold+1)^(0+256),f
 16270                           
 16271                           ;beat.c: 109:         ADCC_SetUpperThreshold(threshold);
 16272  0AA0  0867               	movf	(_threshold+1)^(0+256),w
 16273  0AA1  0140               	movlb	0	; select bank0
 16274  0AA2  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16275  0AA3  0142               	movlb	2	; select bank2
 16276  0AA4  0866               	movf	_threshold^(0+256),w
 16277  0AA5  0140               	movlb	0	; select bank0
 16278  0AA6  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16279  0AA7  319E  2638  318A   	fcall	_ADCC_SetUpperThreshold
 16280                           
 16281                           ;beat.c: 110:         thresholdCount = 0;
 16282  0AAA  0142               	movlb	2	; select bank2
 16283  0AAB  01BB               	clrf	_thresholdCount^(0+256)
 16284  0AAC  01BC               	clrf	(_thresholdCount+1)^(0+256)
 16285                           
 16286                           ;beat.c: 113:         lastBeat = CLOCK_getTime();
 16287  0AAD  319E  264A         	fcall	_CLOCK_getTime
 16288  0AAF  0140               	movlb	0	; select bank0
 16289  0AB0  0821               	movf	?_CLOCK_getTime+1,w
 16290  0AB1  0142               	movlb	2	; select bank2
 16291  0AB2  00C2               	movwf	(_lastBeat+1)^(0+256)
 16292  0AB3  0140               	movlb	0	; select bank0
 16293  0AB4  0820               	movf	?_CLOCK_getTime,w
 16294  0AB5  0142               	movlb	2	; select bank2
 16295  0AB6  00C1               	movwf	_lastBeat^(0+256)
 16296                           
 16297                           ;beat.c: 114:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 16298  0AB7  0008               	return
 16299  0AB8                     l5987:	
 16300  0AB8  319E  264A  318A   	fcall	_CLOCK_getTime
 16301  0ABB  0142               	movlb	2	; select bank2
 16302  0ABC  0841               	movf	_lastBeat^(0+256),w
 16303  0ABD  0140               	movlb	0	; select bank0
 16304  0ABE  0220               	subwf	?_CLOCK_getTime,w
 16305  0ABF  00A8               	movwf	??_BEAT_task
 16306  0AC0  0142               	movlb	2	; select bank2
 16307  0AC1  0842               	movf	(_lastBeat+1)^(0+256),w
 16308  0AC2  0140               	movlb	0	; select bank0
 16309  0AC3  3B21               	subwfb	?_CLOCK_getTime+1,w
 16310  0AC4  00A9               	movwf	??_BEAT_task+1
 16311  0AC5  3003               	movlw	3
 16312  0AC6  0229               	subwf	??_BEAT_task+1,w
 16313  0AC7  30E9               	movlw	233
 16314  0AC8  1903               	skipnz
 16315  0AC9  0228               	subwf	??_BEAT_task,w
 16316  0ACA  1C03               	skipc
 16317  0ACB  0008               	return
 16318                           
 16319                           ;beat.c: 115:         threshold -= 1;
 16320  0ACC  3001               	movlw	1
 16321  0ACD  0142               	movlb	2	; select bank2
 16322  0ACE  02E6               	subwf	_threshold^(0+256),f
 16323  0ACF  3000               	movlw	0
 16324  0AD0  3BE7               	subwfb	(_threshold+1)^(0+256),f
 16325                           
 16326                           ;beat.c: 116:         ADCC_SetUpperThreshold(threshold);
 16327  0AD1  0867               	movf	(_threshold+1)^(0+256),w
 16328  0AD2  0140               	movlb	0	; select bank0
 16329  0AD3  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16330  0AD4  0142               	movlb	2	; select bank2
 16331  0AD5  0866               	movf	_threshold^(0+256),w
 16332  0AD6  0140               	movlb	0	; select bank0
 16333  0AD7  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16334  0AD8  319E  2638         	fcall	_ADCC_SetUpperThreshold
 16335  0ADA  0008               	return
 16336  0ADB                     __end_of_BEAT_task:	
 16337                           
 16338                           	psect	text52
 16339  1217                     __ptext52:	
 16340 ;; *************** function ___lwdiv *****************
 16341 ;; Defined at:
 16342 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 16343 ;; Parameters:    Size  Location     Type
 16344 ;;  divisor         2    0[BANK0 ] unsigned int 
 16345 ;;  dividend        2    2[BANK0 ] unsigned int 
 16346 ;; Auto vars:     Size  Location     Type
 16347 ;;  quotient        2    6[BANK0 ] unsigned int 
 16348 ;;  counter         1    5[BANK0 ] unsigned char 
 16349 ;; Return value:  Size  Location     Type
 16350 ;;                  2    0[BANK0 ] unsigned int 
 16351 ;; Registers used:
 16352 ;;		wreg, status,2, status,0
 16353 ;; Tracked objects:
 16354 ;;		On entry : 0/0
 16355 ;;		On exit  : 0/0
 16356 ;;		Unchanged: 0/0
 16357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16359 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16361 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16362 ;;Total ram usage:        8 bytes
 16363 ;; Hardware stack levels used:    1
 16364 ;; Hardware stack levels required when called:    4
 16365 ;; This function calls:
 16366 ;;		Nothing
 16367 ;; This function is called by:
 16368 ;;		_TM1650_fastPrintNum
 16369 ;;		_BEAT_task
 16370 ;; This function uses a non-reentrant model
 16371 ;;
 16372                           
 16373                           
 16374                           ;psect for function ___lwdiv
 16375  1217                     ___lwdiv:	
 16376                           
 16377                           ;incstack = 0
 16378                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16379  1217  0140               	movlb	0	; select bank0
 16380  1218  01A6               	clrf	___lwdiv@quotient
 16381  1219  01A7               	clrf	___lwdiv@quotient+1
 16382  121A  0820               	movf	___lwdiv@divisor,w
 16383  121B  0421               	iorwf	___lwdiv@divisor+1,w
 16384  121C  1903               	btfsc	3,2
 16385  121D  2A47               	goto	l5351
 16386  121E  01A5               	clrf	___lwdiv@counter
 16387  121F  0AA5               	incf	___lwdiv@counter,f
 16388  1220                     l5339:	
 16389  1220  1BA1               	btfsc	___lwdiv@divisor+1,7
 16390  1221  2A2C               	goto	l5341
 16391  1222  3001               	movlw	1
 16392  1223                     u5455:	
 16393  1223  35A0               	lslf	___lwdiv@divisor,f
 16394  1224  0DA1               	rlf	___lwdiv@divisor+1,f
 16395  1225  0B89               	decfsz	9,f
 16396  1226  2A23               	goto	u5455
 16397  1227  3001               	movlw	1
 16398  1228  00A4               	movwf	??___lwdiv
 16399  1229  0824               	movf	??___lwdiv,w
 16400  122A  07A5               	addwf	___lwdiv@counter,f
 16401  122B  2A20               	goto	l5339
 16402  122C                     l5341:	
 16403  122C  3001               	movlw	1
 16404  122D                     u5475:	
 16405  122D  35A6               	lslf	___lwdiv@quotient,f
 16406  122E  0DA7               	rlf	___lwdiv@quotient+1,f
 16407  122F  0B89               	decfsz	9,f
 16408  1230  2A2D               	goto	u5475
 16409  1231  0821               	movf	___lwdiv@divisor+1,w
 16410  1232  0223               	subwf	___lwdiv@dividend+1,w
 16411  1233  1D03               	skipz
 16412  1234  2A37               	goto	u5485
 16413  1235  0820               	movf	___lwdiv@divisor,w
 16414  1236  0222               	subwf	___lwdiv@dividend,w
 16415  1237                     u5485:	
 16416  1237  1C03               	skipc
 16417  1238  2A3E               	goto	l5347
 16418  1239  0820               	movf	___lwdiv@divisor,w
 16419  123A  02A2               	subwf	___lwdiv@dividend,f
 16420  123B  0821               	movf	___lwdiv@divisor+1,w
 16421  123C  3BA3               	subwfb	___lwdiv@dividend+1,f
 16422  123D  1426               	bsf	___lwdiv@quotient,0
 16423  123E                     l5347:	
 16424  123E  3001               	movlw	1
 16425  123F                     u5495:	
 16426  123F  36A1               	lsrf	___lwdiv@divisor+1,f
 16427  1240  0CA0               	rrf	___lwdiv@divisor,f
 16428  1241  0B89               	decfsz	9,f
 16429  1242  2A3F               	goto	u5495
 16430  1243  3001               	movlw	1
 16431  1244  02A5               	subwf	___lwdiv@counter,f
 16432  1245  1D03               	btfss	3,2
 16433  1246  2A2C               	goto	l5341
 16434  1247                     l5351:	
 16435  1247  0827               	movf	___lwdiv@quotient+1,w
 16436  1248  00A1               	movwf	?___lwdiv+1
 16437  1249  0826               	movf	___lwdiv@quotient,w
 16438  124A  00A0               	movwf	?___lwdiv
 16439  124B  0008               	return
 16440  124C                     __end_of___lwdiv:	
 16441                           
 16442                           	psect	text53
 16443  1E0E                     __ptext53:	
 16444 ;; *************** function _TM1650_isEnabled *****************
 16445 ;; Defined at:
 16446 ;;		line 70 in file "tm1650.c"
 16447 ;; Parameters:    Size  Location     Type
 16448 ;;		None
 16449 ;; Auto vars:     Size  Location     Type
 16450 ;;		None
 16451 ;; Return value:  Size  Location     Type
 16452 ;;                  1    wreg      _Bool 
 16453 ;; Registers used:
 16454 ;;		wreg
 16455 ;; Tracked objects:
 16456 ;;		On entry : 0/0
 16457 ;;		On exit  : 0/0
 16458 ;;		Unchanged: 0/0
 16459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16464 ;;Total ram usage:        0 bytes
 16465 ;; Hardware stack levels used:    1
 16466 ;; Hardware stack levels required when called:    4
 16467 ;; This function calls:
 16468 ;;		Nothing
 16469 ;; This function is called by:
 16470 ;;		_BEAT_task
 16471 ;; This function uses a non-reentrant model
 16472 ;;
 16473                           
 16474                           
 16475                           ;psect for function _TM1650_isEnabled
 16476  1E0E                     _TM1650_isEnabled:	
 16477                           
 16478                           ;tm1650.c: 71:     return isOn;
 16479                           
 16480                           ;incstack = 0
 16481                           ; Regs used in _TM1650_isEnabled: [wreg]
 16482  1E0E  0142               	movlb	2	; select bank2
 16483  1E0F  0853               	movf	_isOn^(0+256),w
 16484  1E10  0008               	return
 16485  1E11                     __end_of_TM1650_isEnabled:	
 16486                           
 16487                           	psect	text54
 16488  12B7                     __ptext54:	
 16489 ;; *************** function _DMX_task *****************
 16490 ;; Defined at:
 16491 ;;		line 38 in file "dmx.c"
 16492 ;; Parameters:    Size  Location     Type
 16493 ;;		None
 16494 ;; Auto vars:     Size  Location     Type
 16495 ;;  time            2    4[BANK0 ] unsigned short 
 16496 ;; Return value:  Size  Location     Type
 16497 ;;                  1    wreg      void 
 16498 ;; Registers used:
 16499 ;;		wreg, status,2, status,0, pclath, cstack
 16500 ;; Tracked objects:
 16501 ;;		On entry : 0/0
 16502 ;;		On exit  : 0/0
 16503 ;;		Unchanged: 0/0
 16504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16507 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16508 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16509 ;;Total ram usage:        4 bytes
 16510 ;; Hardware stack levels used:    1
 16511 ;; Hardware stack levels required when called:    5
 16512 ;; This function calls:
 16513 ;;		_CLOCK_getTime
 16514 ;; This function is called by:
 16515 ;;		_main
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           
 16520                           ;psect for function _DMX_task
 16521  12B7                     _DMX_task:	
 16522                           
 16523                           ;dmx.c: 39:     time_t time = CLOCK_getTime();
 16524                           
 16525                           ;incstack = 0
 16526                           ; Regs used in _DMX_task: [wreg+status,2+status,0+pclath+cstack]
 16527  12B7  319E  264A  3192   	fcall	_CLOCK_getTime
 16528  12BA  0140               	movlb	0	; select bank0
 16529  12BB  0821               	movf	?_CLOCK_getTime+1,w
 16530  12BC  00A5               	movwf	DMX_task@time+1
 16531  12BD  0820               	movf	?_CLOCK_getTime,w
 16532  12BE  00A4               	movwf	DMX_task@time
 16533                           
 16534                           ;dmx.c: 40:     if (time - lastTime < 1000)
 16535  12BF  0142               	movlb	2	; select bank2
 16536  12C0  0837               	movf	dmx@lastTime^(0+256),w
 16537  12C1  0140               	movlb	0	; select bank0
 16538  12C2  0224               	subwf	DMX_task@time,w
 16539  12C3  00A2               	movwf	??_DMX_task
 16540  12C4  0142               	movlb	2	; select bank2
 16541  12C5  0838               	movf	(dmx@lastTime+1)^(0+256),w
 16542  12C6  0140               	movlb	0	; select bank0
 16543  12C7  3B25               	subwfb	DMX_task@time+1,w
 16544  12C8  00A3               	movwf	??_DMX_task+1
 16545  12C9  3003               	movlw	3
 16546  12CA  0223               	subwf	??_DMX_task+1,w
 16547  12CB  30E8               	movlw	232
 16548  12CC  1903               	skipnz
 16549  12CD  0222               	subwf	??_DMX_task,w
 16550  12CE  1C03               	btfss	3,0
 16551  12CF  0008               	return
 16552                           
 16553                           ;dmx.c: 42:     lastTime = time;
 16554  12D0  0825               	movf	DMX_task@time+1,w
 16555  12D1  0142               	movlb	2	; select bank2
 16556  12D2  00B8               	movwf	(dmx@lastTime+1)^(0+256)
 16557  12D3  0140               	movlb	0	; select bank0
 16558  12D4  0824               	movf	DMX_task@time,w
 16559  12D5  0142               	movlb	2	; select bank2
 16560  12D6  00B7               	movwf	dmx@lastTime^(0+256)
 16561                           
 16562                           ;dmx.c: 44:     if(offCheck && !toggleCheck) {
 16563  12D7  084C               	movf	_offCheck^(0+256),w
 16564  12D8  1903               	btfsc	3,2
 16565  12D9  2AE1               	goto	l6183
 16566  12DA  084A               	movf	_toggleCheck^(0+256),w
 16567  12DB  1D03               	btfss	3,2
 16568  12DC  2AE1               	goto	l6183
 16569                           
 16570                           ;dmx.c: 46:         toggleCheck = 1;
 16571  12DD  01CA               	clrf	_toggleCheck^(0+256)
 16572  12DE  0ACA               	incf	_toggleCheck^(0+256),f
 16573                           
 16574                           ;dmx.c: 47:         offCheck = 0;
 16575  12DF  01CC               	clrf	_offCheck^(0+256)
 16576  12E0  0008               	return
 16577  12E1                     l6183:	
 16578                           
 16579                           ;dmx.c: 51:     if (offCheck && toggleCheck) {
 16580  12E1  084C               	movf	_offCheck^(0+256),w
 16581  12E2  1903               	btfsc	3,2
 16582  12E3  2AEC               	goto	l6191
 16583  12E4  084A               	movf	_toggleCheck^(0+256),w
 16584  12E5  1903               	btfsc	3,2
 16585  12E6  2AEC               	goto	l6191
 16586                           
 16587                           ;dmx.c: 52:         dmxOn = 1;
 16588  12E7  01CB               	clrf	_dmxOn^(0+256)
 16589  12E8  0ACB               	incf	_dmxOn^(0+256),f
 16590                           
 16591                           ;dmx.c: 53:         toggleCheck = 0;
 16592  12E9  01CA               	clrf	_toggleCheck^(0+256)
 16593                           
 16594                           ;dmx.c: 54:         offCheck = 0;
 16595  12EA  01CC               	clrf	_offCheck^(0+256)
 16596                           
 16597                           ;dmx.c: 55:     } else {
 16598  12EB  0008               	return
 16599  12EC                     l6191:	
 16600                           
 16601                           ;dmx.c: 56:         dmxOn = 0;
 16602  12EC  01CB               	clrf	_dmxOn^(0+256)
 16603  12ED  0008               	return
 16604  12EE                     __end_of_DMX_task:	
 16605                           
 16606                           	psect	text55
 16607  1E27                     __ptext55:	
 16608 ;; *************** function _CLOCK_init *****************
 16609 ;; Defined at:
 16610 ;;		line 9 in file "clock.c"
 16611 ;; Parameters:    Size  Location     Type
 16612 ;;		None
 16613 ;; Auto vars:     Size  Location     Type
 16614 ;;		None
 16615 ;; Return value:  Size  Location     Type
 16616 ;;                  1    wreg      void 
 16617 ;; Registers used:
 16618 ;;		wreg, status,2, status,0, pclath, cstack
 16619 ;; Tracked objects:
 16620 ;;		On entry : 0/0
 16621 ;;		On exit  : 0/0
 16622 ;;		Unchanged: 0/0
 16623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16628 ;;Total ram usage:        0 bytes
 16629 ;; Hardware stack levels used:    1
 16630 ;; Hardware stack levels required when called:    5
 16631 ;; This function calls:
 16632 ;;		_TMR0_SetInterruptHandler
 16633 ;; This function is called by:
 16634 ;;		_main
 16635 ;; This function uses a non-reentrant model
 16636 ;;
 16637                           
 16638                           
 16639                           ;psect for function _CLOCK_init
 16640  1E27                     _CLOCK_init:	
 16641                           
 16642                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 16643                           
 16644                           ;incstack = 0
 16645                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 16646  1E27  3021               	movlw	low _CLOCK_timerCallback
 16647  1E28  0140               	movlb	0	; select bank0
 16648  1E29  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16649  1E2A  301E               	movlw	high _CLOCK_timerCallback
 16650  1E2B  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16651  1E2C  319E  2653         	fcall	_TMR0_SetInterruptHandler
 16652  1E2E  0008               	return
 16653  1E2F                     __end_of_CLOCK_init:	
 16654                           
 16655                           	psect	text56
 16656  1E53                     __ptext56:	
 16657 ;; *************** function _TMR0_SetInterruptHandler *****************
 16658 ;; Defined at:
 16659 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16660 ;; Parameters:    Size  Location     Type
 16661 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16662 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 16663 ;; Auto vars:     Size  Location     Type
 16664 ;;		None
 16665 ;; Return value:  Size  Location     Type
 16666 ;;                  1    wreg      void 
 16667 ;; Registers used:
 16668 ;;		wreg
 16669 ;; Tracked objects:
 16670 ;;		On entry : 0/0
 16671 ;;		On exit  : 0/0
 16672 ;;		Unchanged: 0/0
 16673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16678 ;;Total ram usage:        2 bytes
 16679 ;; Hardware stack levels used:    1
 16680 ;; Hardware stack levels required when called:    4
 16681 ;; This function calls:
 16682 ;;		Nothing
 16683 ;; This function is called by:
 16684 ;;		_TMR0_Initialize
 16685 ;;		_CLOCK_init
 16686 ;; This function uses a non-reentrant model
 16687 ;;
 16688                           
 16689                           
 16690                           ;psect for function _TMR0_SetInterruptHandler
 16691  1E53                     _TMR0_SetInterruptHandler:	
 16692                           
 16693                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16694                           
 16695                           ;incstack = 0
 16696                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16697  1E53  0140               	movlb	0	; select bank0
 16698  1E54  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16699  1E55  0142               	movlb	2	; select bank2
 16700  1E56  00EE               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 16701  1E57  0140               	movlb	0	; select bank0
 16702  1E58  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16703  1E59  0142               	movlb	2	; select bank2
 16704  1E5A  00ED               	movwf	_TMR0_InterruptHandler^(0+256)
 16705  1E5B  0008               	return
 16706  1E5C                     __end_of_TMR0_SetInterruptHandler:	
 16707                           
 16708                           	psect	text57
 16709  0930                     __ptext57:	
 16710 ;; *************** function _BUTTONS_task *****************
 16711 ;; Defined at:
 16712 ;;		line 37 in file "buttons.c"
 16713 ;; Parameters:    Size  Location     Type
 16714 ;;		None
 16715 ;; Auto vars:     Size  Location     Type
 16716 ;;  btn             1    8[BANK0 ] PTR struct .
 16717 ;;		 -> buttons(32), 
 16718 ;;  i               1    5[BANK0 ] unsigned char 
 16719 ;;  time            2    6[BANK0 ] unsigned short 
 16720 ;; Return value:  Size  Location     Type
 16721 ;;                  1    wreg      void 
 16722 ;; Registers used:
 16723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16724 ;; Tracked objects:
 16725 ;;		On entry : 0/0
 16726 ;;		On exit  : 0/0
 16727 ;;		Unchanged: 0/0
 16728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16730 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16731 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16732 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16733 ;;Total ram usage:        7 bytes
 16734 ;; Hardware stack levels used:    1
 16735 ;; Hardware stack levels required when called:    5
 16736 ;; This function calls:
 16737 ;;		_CLOCK_getTime
 16738 ;; This function is called by:
 16739 ;;		_main
 16740 ;; This function uses a non-reentrant model
 16741 ;;
 16742                           
 16743                           
 16744                           ;psect for function _BUTTONS_task
 16745  0930                     _BUTTONS_task:	
 16746                           
 16747                           ;buttons.c: 38:     time_t time = CLOCK_getTime();
 16748                           
 16749                           ;incstack = 0
 16750                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16751  0930  319E  264A  3189   	fcall	_CLOCK_getTime
 16752  0933  0140               	movlb	0	; select bank0
 16753  0934  0821               	movf	?_CLOCK_getTime+1,w
 16754  0935  00A7               	movwf	BUTTONS_task@time+1
 16755  0936  0820               	movf	?_CLOCK_getTime,w
 16756  0937  00A6               	movwf	BUTTONS_task@time
 16757                           
 16758                           ;buttons.c: 41:     if (time - lastTime < 50)
 16759  0938  0142               	movlb	2	; select bank2
 16760  0939  0843               	movf	_lastTime^(0+256),w
 16761  093A  0140               	movlb	0	; select bank0
 16762  093B  0226               	subwf	BUTTONS_task@time,w
 16763  093C  00A2               	movwf	??_BUTTONS_task
 16764  093D  0142               	movlb	2	; select bank2
 16765  093E  0844               	movf	(_lastTime+1)^(0+256),w
 16766  093F  0140               	movlb	0	; select bank0
 16767  0940  3B27               	subwfb	BUTTONS_task@time+1,w
 16768  0941  00A3               	movwf	??_BUTTONS_task+1
 16769  0942  3000               	movlw	0
 16770  0943  0223               	subwf	??_BUTTONS_task+1,w
 16771  0944  3032               	movlw	50
 16772  0945  1903               	skipnz
 16773  0946  0222               	subwf	??_BUTTONS_task,w
 16774  0947  1C03               	btfss	3,0
 16775  0948  0008               	return
 16776                           
 16777                           ;buttons.c: 44:     lastTime = time;
 16778  0949  0827               	movf	BUTTONS_task@time+1,w
 16779  094A  0142               	movlb	2	; select bank2
 16780  094B  00C4               	movwf	(_lastTime+1)^(0+256)
 16781  094C  0140               	movlb	0	; select bank0
 16782  094D  0826               	movf	BUTTONS_task@time,w
 16783  094E  0142               	movlb	2	; select bank2
 16784  094F  00C3               	movwf	_lastTime^(0+256)
 16785                           
 16786                           ;buttons.c: 47:     for (uint8_t i = 0; i < 4; i++) {
 16787  0950  0140               	movlb	0	; select bank0
 16788  0951  01A5               	clrf	BUTTONS_task@i
 16789  0952                     l6207:	
 16790                           
 16791                           ;buttons.c: 48:         button_t* btn = buttons + i;
 16792  0952  0825               	movf	BUTTONS_task@i,w
 16793  0953  00A2               	movwf	??_BUTTONS_task
 16794  0954  3002               	movlw	2
 16795  0955                     u6485:	
 16796  0955  35A2               	lslf	??_BUTTONS_task,f
 16797  0956  3EFF               	addlw	-1
 16798  0957  1D03               	skipz
 16799  0958  2955               	goto	u6485
 16800  0959  3522               	lslf	??_BUTTONS_task,w
 16801  095A  3E20               	addlw	(low (_buttons| (0+512)))& (0+255)
 16802  095B  00A3               	movwf	??_BUTTONS_task+1
 16803  095C  0823               	movf	??_BUTTONS_task+1,w
 16804  095D  00A8               	movwf	BUTTONS_task@btn
 16805                           
 16806                           ;buttons.c: 51:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 16807  095E  0828               	movf	BUTTONS_task@btn,w
 16808  095F  0086               	movwf	6
 16809  0960  3002               	movlw	2	; select bank4/5
 16810  0961  0087               	movwf	7
 16811  0962  3F40               	moviw [0]fsr1
 16812  0963  00A2               	movwf	??_BUTTONS_task
 16813  0964  3F41               	moviw [1]fsr1
 16814  0965  00A3               	movwf	??_BUTTONS_task+1
 16815  0966  0822               	movf	??_BUTTONS_task,w
 16816  0967  0086               	movwf	6
 16817  0968  0823               	movf	??_BUTTONS_task+1,w
 16818  0969  0087               	movwf	7
 16819  096A  3001               	movlw	1
 16820  096B  00A4               	movwf	??_BUTTONS_task+2
 16821  096C  0828               	movf	BUTTONS_task@btn,w
 16822  096D  3E02               	addlw	2
 16823  096E  0084               	movwf	4
 16824  096F  3002               	movlw	2	; select bank4/5
 16825  0970  0085               	movwf	5
 16826  0971  0A00               	incf	0,w
 16827  0972  2974               	goto	u6494
 16828  0973                     u6495:	
 16829  0973  35A4               	lslf	??_BUTTONS_task+2,f
 16830  0974                     u6494:	
 16831  0974  0B89               	decfsz	9,f
 16832  0975  2973               	goto	u6495
 16833  0976  0824               	movf	??_BUTTONS_task+2,w
 16834  0977  0501               	andwf	1,w
 16835  0978  1D03               	btfss	3,2
 16836  0979  2982               	goto	l6213
 16837                           
 16838                           ;buttons.c: 52:             btn->state = STATE_PRESSED;
 16839  097A  0828               	movf	BUTTONS_task@btn,w
 16840  097B  3E03               	addlw	3
 16841  097C  0086               	movwf	6
 16842  097D  3002               	movlw	2	; select bank4/5
 16843  097E  0087               	movwf	7
 16844  097F  0181               	clrf	1
 16845  0980  0A81               	incf	1,f
 16846                           
 16847                           ;buttons.c: 53:         } else {
 16848  0981  2988               	goto	l802
 16849  0982                     l6213:	
 16850                           
 16851                           ;buttons.c: 54:             btn->state = STATE_UNPRESSED;
 16852  0982  0828               	movf	BUTTONS_task@btn,w
 16853  0983  3E03               	addlw	3
 16854  0984  0086               	movwf	6
 16855  0985  3002               	movlw	2	; select bank4/5
 16856  0986  0087               	movwf	7
 16857  0987  0181               	clrf	1
 16858  0988                     l802:	
 16859                           ;buttons.c: 55:         }
 16860                           
 16861                           
 16862                           ;buttons.c: 57:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
 16863  0988  0828               	movf	BUTTONS_task@btn,w
 16864  0989  3E03               	addlw	3
 16865  098A  0086               	movwf	6
 16866  098B  3002               	movlw	2	; select bank4/5
 16867  098C  0087               	movwf	7
 16868  098D  0301               	decf	1,w
 16869  098E  1D03               	btfss	3,2
 16870  098F  29A9               	goto	l6219
 16871  0990  0828               	movf	BUTTONS_task@btn,w
 16872  0991  3E04               	addlw	4
 16873  0992  0086               	movwf	6
 16874  0993  3002               	movlw	2	; select bank4/5
 16875  0994  0087               	movwf	7
 16876  0995  0801               	movf	1,w
 16877  0996  1D03               	btfss	3,2
 16878  0997  29A9               	goto	l6219
 16879                           
 16880                           ;buttons.c: 59:             btn->event = EVENT_PRESSED;
 16881  0998  0828               	movf	BUTTONS_task@btn,w
 16882  0999  3E05               	addlw	5
 16883  099A  0086               	movwf	6
 16884  099B  3002               	movlw	2	; select bank4/5
 16885  099C  0087               	movwf	7
 16886  099D  0181               	clrf	1
 16887  099E  0A81               	incf	1,f
 16888                           
 16889                           ;buttons.c: 60:             btn->pressTime = time;
 16890  099F  0828               	movf	BUTTONS_task@btn,w
 16891  09A0  3E06               	addlw	6
 16892  09A1  0086               	movwf	6
 16893  09A2  3002               	movlw	2	; select bank4/5
 16894  09A3  0087               	movwf	7
 16895  09A4  0826               	movf	BUTTONS_task@time,w
 16896  09A5  3FC0               	movwi [0]fsr1
 16897  09A6  0827               	movf	BUTTONS_task@time+1,w
 16898  09A7  3FC1               	movwi [1]fsr1
 16899                           
 16900                           ;buttons.c: 61:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 16901  09A8  29EB               	goto	l804
 16902  09A9                     l6219:	
 16903  09A9  0828               	movf	BUTTONS_task@btn,w
 16904  09AA  3E03               	addlw	3
 16905  09AB  0086               	movwf	6
 16906  09AC  3002               	movlw	2	; select bank4/5
 16907  09AD  0087               	movwf	7
 16908  09AE  0301               	decf	1,w
 16909  09AF  1D03               	btfss	3,2
 16910  09B0  29D5               	goto	l6227
 16911  09B1  0828               	movf	BUTTONS_task@btn,w
 16912  09B2  3E04               	addlw	4
 16913  09B3  0086               	movwf	6
 16914  09B4  3002               	movlw	2	; select bank4/5
 16915  09B5  0087               	movwf	7
 16916  09B6  0301               	decf	1,w
 16917  09B7  1D03               	btfss	3,2
 16918  09B8  29D5               	goto	l6227
 16919                           
 16920                           ;buttons.c: 63:             if(time - btn->pressTime > 500) {
 16921  09B9  0828               	movf	BUTTONS_task@btn,w
 16922  09BA  3E06               	addlw	6
 16923  09BB  0086               	movwf	6
 16924  09BC  3002               	movlw	2	; select bank4/5
 16925  09BD  0087               	movwf	7
 16926  09BE  3F40               	moviw [0]fsr1
 16927  09BF  0226               	subwf	BUTTONS_task@time,w
 16928  09C0  00A2               	movwf	??_BUTTONS_task
 16929  09C1  3F41               	moviw [1]fsr1
 16930  09C2  3B27               	subwfb	BUTTONS_task@time+1,w
 16931  09C3  00A3               	movwf	??_BUTTONS_task+1
 16932  09C4  3001               	movlw	1
 16933  09C5  0223               	subwf	??_BUTTONS_task+1,w
 16934  09C6  30F5               	movlw	245
 16935  09C7  1903               	skipnz
 16936  09C8  0222               	subwf	??_BUTTONS_task,w
 16937  09C9  1C03               	skipc
 16938  09CA  29EB               	goto	l804
 16939                           
 16940                           ;buttons.c: 64:                 btn->event = EVENT_HELD;
 16941  09CB  3002               	movlw	2
 16942  09CC  00A2               	movwf	??_BUTTONS_task
 16943  09CD  0828               	movf	BUTTONS_task@btn,w
 16944  09CE  3E05               	addlw	5
 16945  09CF  0086               	movwf	6
 16946  09D0  3002               	movlw	2	; select bank4/5
 16947  09D1  0087               	movwf	7
 16948  09D2  0822               	movf	??_BUTTONS_task,w
 16949  09D3  0081               	movwf	1
 16950  09D4  29EB               	goto	l804
 16951  09D5                     l6227:	
 16952  09D5  0828               	movf	BUTTONS_task@btn,w
 16953  09D6  3E03               	addlw	3
 16954  09D7  0086               	movwf	6
 16955  09D8  3002               	movlw	2	; select bank4/5
 16956  09D9  0087               	movwf	7
 16957  09DA  0801               	movf	1,w
 16958  09DB  1D03               	btfss	3,2
 16959  09DC  29EB               	goto	l804
 16960  09DD  0828               	movf	BUTTONS_task@btn,w
 16961  09DE  3E04               	addlw	4
 16962  09DF  0086               	movwf	6
 16963  09E0  3002               	movlw	2	; select bank4/5
 16964  09E1  0087               	movwf	7
 16965  09E2  0301               	decf	1,w
 16966  09E3  1D03               	btfss	3,2
 16967  09E4  29EB               	goto	l804
 16968                           
 16969                           ;buttons.c: 67:             btn->event = EVENT_IDLE;
 16970  09E5  0828               	movf	BUTTONS_task@btn,w
 16971  09E6  3E05               	addlw	5
 16972  09E7  0086               	movwf	6
 16973  09E8  3002               	movlw	2	; select bank4/5
 16974  09E9  0087               	movwf	7
 16975  09EA  0181               	clrf	1
 16976  09EB                     l804:	
 16977                           
 16978                           ;buttons.c: 70:         btn->lastState = btn->state;
 16979  09EB  0828               	movf	BUTTONS_task@btn,w
 16980  09EC  3E03               	addlw	3
 16981  09ED  0086               	movwf	6
 16982  09EE  3002               	movlw	2	; select bank4/5
 16983  09EF  0087               	movwf	7
 16984  09F0  0801               	movf	1,w
 16985  09F1  00A2               	movwf	??_BUTTONS_task
 16986  09F2  0828               	movf	BUTTONS_task@btn,w
 16987  09F3  3E04               	addlw	4
 16988  09F4  0086               	movwf	6
 16989  09F5  3002               	movlw	2	; select bank4/5
 16990  09F6  0087               	movwf	7
 16991  09F7  0822               	movf	??_BUTTONS_task,w
 16992  09F8  0081               	movwf	1
 16993                           
 16994                           ;buttons.c: 71:     }
 16995  09F9  3001               	movlw	1
 16996  09FA  00A2               	movwf	??_BUTTONS_task
 16997  09FB  0822               	movf	??_BUTTONS_task,w
 16998  09FC  07A5               	addwf	BUTTONS_task@i,f
 16999  09FD  3004               	movlw	4
 17000  09FE  0225               	subwf	BUTTONS_task@i,w
 17001  09FF  1803               	btfsc	3,0
 17002  0A00  0008               	return
 17003  0A01  2952               	goto	l6207
 17004  0A02                     __end_of_BUTTONS_task:	
 17005                           
 17006                           	psect	text58
 17007  1E4A                     __ptext58:	
 17008 ;; *************** function _CLOCK_getTime *****************
 17009 ;; Defined at:
 17010 ;;		line 17 in file "clock.c"
 17011 ;; Parameters:    Size  Location     Type
 17012 ;;		None
 17013 ;; Auto vars:     Size  Location     Type
 17014 ;;		None
 17015 ;; Return value:  Size  Location     Type
 17016 ;;                  2    0[BANK0 ] unsigned short 
 17017 ;; Registers used:
 17018 ;;		wreg
 17019 ;; Tracked objects:
 17020 ;;		On entry : 0/0
 17021 ;;		On exit  : 0/0
 17022 ;;		Unchanged: 0/0
 17023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17027 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17028 ;;Total ram usage:        2 bytes
 17029 ;; Hardware stack levels used:    1
 17030 ;; Hardware stack levels required when called:    4
 17031 ;; This function calls:
 17032 ;;		Nothing
 17033 ;; This function is called by:
 17034 ;;		_BUTTONS_task
 17035 ;;		_BEAT_task
 17036 ;;		_DMX_task
 17037 ;;		_fadeColor
 17038 ;;		_cycleColors
 17039 ;;		_numControl_Set
 17040 ;;		_numControl_resetTimer
 17041 ;; This function uses a non-reentrant model
 17042 ;;
 17043                           
 17044                           
 17045                           ;psect for function _CLOCK_getTime
 17046  1E4A                     _CLOCK_getTime:	
 17047                           
 17048                           ;clock.c: 18:     return currentTime;
 17049                           
 17050                           ;incstack = 0
 17051                           ; Regs used in _CLOCK_getTime: [wreg]
 17052  1E4A  0142               	movlb	2	; select bank2
 17053  1E4B  0848               	movf	(_currentTime+1)^(0+256),w
 17054  1E4C  0140               	movlb	0	; select bank0
 17055  1E4D  00A1               	movwf	?_CLOCK_getTime+1
 17056  1E4E  0142               	movlb	2	; select bank2
 17057  1E4F  0847               	movf	_currentTime^(0+256),w
 17058  1E50  0140               	movlb	0	; select bank0
 17059  1E51  00A0               	movwf	?_CLOCK_getTime
 17060  1E52  0008               	return
 17061  1E53                     __end_of_CLOCK_getTime:	
 17062                           
 17063                           	psect	text59
 17064  1402                     __ptext59:	
 17065 ;; *************** function _BUTTONS_init *****************
 17066 ;; Defined at:
 17067 ;;		line 21 in file "buttons.c"
 17068 ;; Parameters:    Size  Location     Type
 17069 ;;		None
 17070 ;; Auto vars:     Size  Location     Type
 17071 ;;		None
 17072 ;; Return value:  Size  Location     Type
 17073 ;;                  1    wreg      void 
 17074 ;; Registers used:
 17075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17076 ;; Tracked objects:
 17077 ;;		On entry : 0/0
 17078 ;;		On exit  : 0/0
 17079 ;;		Unchanged: 0/0
 17080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17083 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17085 ;;Total ram usage:        1 bytes
 17086 ;; Hardware stack levels used:    1
 17087 ;; Hardware stack levels required when called:    5
 17088 ;; This function calls:
 17089 ;;		_init
 17090 ;; This function is called by:
 17091 ;;		_main
 17092 ;; This function uses a non-reentrant model
 17093 ;;
 17094                           
 17095                           
 17096                           ;psect for function _BUTTONS_init
 17097  1402                     _BUTTONS_init:	
 17098                           
 17099                           ;buttons.c: 22:     menu = &buttons[0];
 17100                           
 17101                           ;incstack = 0
 17102                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17103  1402  3020               	movlw	(low (_buttons| (0+512)))& (0+255)
 17104  1403  0140               	movlb	0	; select bank0
 17105  1404  00A5               	movwf	??_BUTTONS_init
 17106  1405  0825               	movf	??_BUTTONS_init,w
 17107  1406  0142               	movlb	2	; select bank2
 17108  1407  00CF               	movwf	_menu^(0+256)
 17109                           
 17110                           ;buttons.c: 23:     up = &buttons[1];
 17111  1408  3028               	movlw	(low ((_buttons| (0+512)+8)))& (0+255)
 17112  1409  0140               	movlb	0	; select bank0
 17113  140A  00A5               	movwf	??_BUTTONS_init
 17114  140B  0825               	movf	??_BUTTONS_init,w
 17115  140C  0142               	movlb	2	; select bank2
 17116  140D  00D2               	movwf	_up^(0+256)
 17117                           
 17118                           ;buttons.c: 24:     down = &buttons[2];
 17119  140E  3030               	movlw	(low ((_buttons| (0+512)+16)))& (0+255)
 17120  140F  0140               	movlb	0	; select bank0
 17121  1410  00A5               	movwf	??_BUTTONS_init
 17122  1411  0825               	movf	??_BUTTONS_init,w
 17123  1412  0142               	movlb	2	; select bank2
 17124  1413  00D1               	movwf	_down^(0+256)
 17125                           
 17126                           ;buttons.c: 25:     enter = &buttons[3];
 17127  1414  3038               	movlw	(low ((_buttons| (0+512)+24)))& (0+255)
 17128  1415  0140               	movlb	0	; select bank0
 17129  1416  00A5               	movwf	??_BUTTONS_init
 17130  1417  0825               	movf	??_BUTTONS_init,w
 17131  1418  0142               	movlb	2	; select bank2
 17132  1419  00D0               	movwf	_enter^(0+256)
 17133                           
 17134                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 17135  141A  300E               	movlw	14
 17136  141B  0140               	movlb	0	; select bank0
 17137  141C  00A0               	movwf	init@port
 17138  141D  3000               	movlw	0
 17139  141E  00A1               	movwf	init@port+1
 17140  141F  3002               	movlw	2
 17141  1420  00A5               	movwf	??_BUTTONS_init
 17142  1421  0825               	movf	??_BUTTONS_init,w
 17143  1422  00A2               	movwf	init@pin
 17144  1423  0142               	movlb	2	; select bank2
 17145  1424  084F               	movf	_menu^(0+256),w
 17146  1425  3190  2040  3194   	fcall	_init
 17147                           
 17148                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 17149  1428  300C               	movlw	12
 17150  1429  0140               	movlb	0	; select bank0
 17151  142A  00A0               	movwf	init@port
 17152  142B  3000               	movlw	0
 17153  142C  00A1               	movwf	init@port+1
 17154  142D  3002               	movlw	2
 17155  142E  00A5               	movwf	??_BUTTONS_init
 17156  142F  0825               	movf	??_BUTTONS_init,w
 17157  1430  00A2               	movwf	init@pin
 17158  1431  0142               	movlb	2	; select bank2
 17159  1432  0850               	movf	_enter^(0+256),w
 17160  1433  3190  2040  3194   	fcall	_init
 17161                           
 17162                           ;buttons.c: 29:     init(down, &PORTC, 0);
 17163  1436  300E               	movlw	14
 17164  1437  0140               	movlb	0	; select bank0
 17165  1438  00A0               	movwf	init@port
 17166  1439  3000               	movlw	0
 17167  143A  00A1               	movwf	init@port+1
 17168  143B  01A2               	clrf	init@pin
 17169  143C  0142               	movlb	2	; select bank2
 17170  143D  0851               	movf	_down^(0+256),w
 17171  143E  3190  2040  3194   	fcall	_init
 17172                           
 17173                           ;buttons.c: 30:     init(up, &PORTC, 1);
 17174  1441  300E               	movlw	14
 17175  1442  0140               	movlb	0	; select bank0
 17176  1443  00A0               	movwf	init@port
 17177  1444  3000               	movlw	0
 17178  1445  00A1               	movwf	init@port+1
 17179  1446  01A2               	clrf	init@pin
 17180  1447  0AA2               	incf	init@pin,f
 17181  1448  0142               	movlb	2	; select bank2
 17182  1449  0852               	movf	_up^(0+256),w
 17183  144A  3190  2040         	fcall	_init
 17184  144C  0008               	return
 17185  144D                     __end_of_BUTTONS_init:	
 17186                           
 17187                           	psect	text60
 17188  1040                     __ptext60:	
 17189 ;; *************** function _init *****************
 17190 ;; Defined at:
 17191 ;;		line 14 in file "buttons.c"
 17192 ;; Parameters:    Size  Location     Type
 17193 ;;  btn             1    wreg     PTR struct .
 17194 ;;		 -> buttons(32), NULL(0), 
 17195 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 17196 ;;		 -> PORTA(1), PORTC(1), 
 17197 ;;  pin             1    2[BANK0 ] unsigned char 
 17198 ;; Auto vars:     Size  Location     Type
 17199 ;;  btn             1    4[BANK0 ] PTR struct .
 17200 ;;		 -> buttons(32), NULL(0), 
 17201 ;; Return value:  Size  Location     Type
 17202 ;;                  1    wreg      void 
 17203 ;; Registers used:
 17204 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17205 ;; Tracked objects:
 17206 ;;		On entry : 0/0
 17207 ;;		On exit  : 0/0
 17208 ;;		Unchanged: 0/0
 17209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17210 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17212 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17213 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17214 ;;Total ram usage:        5 bytes
 17215 ;; Hardware stack levels used:    1
 17216 ;; Hardware stack levels required when called:    4
 17217 ;; This function calls:
 17218 ;;		Nothing
 17219 ;; This function is called by:
 17220 ;;		_BUTTONS_init
 17221 ;; This function uses a non-reentrant model
 17222 ;;
 17223                           
 17224                           
 17225                           ;psect for function _init
 17226  1040                     _init:	
 17227                           
 17228                           ;incstack = 0
 17229                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 17230                           ;init@btn stored from wreg
 17231  1040  0140               	movlb	0	; select bank0
 17232  1041  00A4               	movwf	init@btn
 17233                           
 17234                           ;buttons.c: 15:     btn->port = port;
 17235  1042  0824               	movf	init@btn,w
 17236  1043  0086               	movwf	6
 17237  1044  3002               	movlw	2	; select bank4/5
 17238  1045  0087               	movwf	7
 17239  1046  0820               	movf	init@port,w
 17240  1047  3FC0               	movwi [0]fsr1
 17241  1048  0821               	movf	init@port+1,w
 17242  1049  3FC1               	movwi [1]fsr1
 17243                           
 17244                           ;buttons.c: 16:     btn->pin = pin;
 17245  104A  0822               	movf	init@pin,w
 17246  104B  00A3               	movwf	??_init
 17247  104C  0824               	movf	init@btn,w
 17248  104D  3E02               	addlw	2
 17249  104E  0086               	movwf	6
 17250  104F  3002               	movlw	2	; select bank4/5
 17251  1050  0087               	movwf	7
 17252  1051  0823               	movf	??_init,w
 17253  1052  0081               	movwf	1
 17254                           
 17255                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 17256  1053  0824               	movf	init@btn,w
 17257  1054  3E03               	addlw	3
 17258  1055  0086               	movwf	6
 17259  1056  3002               	movlw	2	; select bank4/5
 17260  1057  0087               	movwf	7
 17261  1058  0181               	clrf	1
 17262                           
 17263                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 17264  1059  0824               	movf	init@btn,w
 17265  105A  3E05               	addlw	5
 17266  105B  0086               	movwf	6
 17267  105C  3002               	movlw	2	; select bank4/5
 17268  105D  0087               	movwf	7
 17269  105E  0181               	clrf	1
 17270  105F  0008               	return
 17271  1060                     __end_of_init:	
 17272                           
 17273                           	psect	text61
 17274  1F46                     __ptext61:	
 17275 ;; *************** function _BEAT_init *****************
 17276 ;; Defined at:
 17277 ;;		line 31 in file "beat.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;		None
 17280 ;; Auto vars:     Size  Location     Type
 17281 ;;		None
 17282 ;; Return value:  Size  Location     Type
 17283 ;;                  1    wreg      void 
 17284 ;; Registers used:
 17285 ;;		wreg, status,2, status,0, pclath, cstack
 17286 ;; Tracked objects:
 17287 ;;		On entry : 0/0
 17288 ;;		On exit  : 0/0
 17289 ;;		Unchanged: 0/0
 17290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17295 ;;Total ram usage:        0 bytes
 17296 ;; Hardware stack levels used:    1
 17297 ;; Hardware stack levels required when called:    5
 17298 ;; This function calls:
 17299 ;;		_ADCC_SetADTIInterruptHandler
 17300 ;;		_ADCC_SetUpperThreshold
 17301 ;;		_ADCC_StartConversion
 17302 ;; This function is called by:
 17303 ;;		_main
 17304 ;; This function uses a non-reentrant model
 17305 ;;
 17306                           
 17307                           
 17308                           ;psect for function _BEAT_init
 17309  1F46                     _BEAT_init:	
 17310                           
 17311                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 17312                           
 17313                           ;incstack = 0
 17314                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 17315  1F46  0142               	movlb	2	; select bank2
 17316  1F47  0867               	movf	(_threshold+1)^(0+256),w
 17317  1F48  0140               	movlb	0	; select bank0
 17318  1F49  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17319  1F4A  0142               	movlb	2	; select bank2
 17320  1F4B  0866               	movf	_threshold^(0+256),w
 17321  1F4C  0140               	movlb	0	; select bank0
 17322  1F4D  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17323  1F4E  319E  2638  319F   	fcall	_ADCC_SetUpperThreshold
 17324                           
 17325                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 17326  1F51  3014               	movlw	low _adcThresholdHandler
 17327  1F52  0140               	movlb	0	; select bank0
 17328  1F53  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 17329  1F54  301E               	movlw	high _adcThresholdHandler
 17330  1F55  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 17331  1F56  319E  262F  319F   	fcall	_ADCC_SetADTIInterruptHandler
 17332                           
 17333                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 17334  1F59  300F               	movlw	15
 17335  1F5A  319E  2641         	fcall	_ADCC_StartConversion
 17336  1F5C  0008               	return
 17337  1F5D                     __end_of_BEAT_init:	
 17338                           
 17339                           	psect	text62
 17340  1E41                     __ptext62:	
 17341 ;; *************** function _ADCC_StartConversion *****************
 17342 ;; Defined at:
 17343 ;;		line 121 in file "mcc_generated_files/adcc.c"
 17344 ;; Parameters:    Size  Location     Type
 17345 ;;  channel         1    wreg     enum E10867
 17346 ;; Auto vars:     Size  Location     Type
 17347 ;;  channel         1    0[BANK0 ] enum E10867
 17348 ;; Return value:  Size  Location     Type
 17349 ;;                  1    wreg      void 
 17350 ;; Registers used:
 17351 ;;		wreg
 17352 ;; Tracked objects:
 17353 ;;		On entry : 0/0
 17354 ;;		On exit  : 0/0
 17355 ;;		Unchanged: 0/0
 17356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17360 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17361 ;;Total ram usage:        1 bytes
 17362 ;; Hardware stack levels used:    1
 17363 ;; Hardware stack levels required when called:    4
 17364 ;; This function calls:
 17365 ;;		Nothing
 17366 ;; This function is called by:
 17367 ;;		_BEAT_init
 17368 ;; This function uses a non-reentrant model
 17369 ;;
 17370                           
 17371                           
 17372                           ;psect for function _ADCC_StartConversion
 17373  1E41                     _ADCC_StartConversion:	
 17374                           
 17375                           ;incstack = 0
 17376                           ; Regs used in _ADCC_StartConversion: [wreg]
 17377                           ;ADCC_StartConversion@channel stored from wreg
 17378  1E41  0140               	movlb	0	; select bank0
 17379  1E42  00A0               	movwf	ADCC_StartConversion@channel
 17380                           
 17381                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 17382  1E43  0820               	movf	ADCC_StartConversion@channel,w
 17383  1E44  0141               	movlb	1	; select bank1
 17384  1E45  009F               	movwf	31	;volatile
 17385                           
 17386                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 17387  1E46  0142               	movlb	2	; select bank2
 17388  1E47  1791               	bsf	17,7	;volatile
 17389                           
 17390                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 17391  1E48  1411               	bsf	17,0	;volatile
 17392  1E49  0008               	return
 17393  1E4A                     __end_of_ADCC_StartConversion:	
 17394                           
 17395                           	psect	text63
 17396  1E38                     __ptext63:	
 17397 ;; *************** function _ADCC_SetUpperThreshold *****************
 17398 ;; Defined at:
 17399 ;;		line 251 in file "mcc_generated_files/adcc.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 17402 ;; Auto vars:     Size  Location     Type
 17403 ;;		None
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  1    wreg      void 
 17406 ;; Registers used:
 17407 ;;		wreg, status,2
 17408 ;; Tracked objects:
 17409 ;;		On entry : 0/0
 17410 ;;		On exit  : 0/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17417 ;;Total ram usage:        2 bytes
 17418 ;; Hardware stack levels used:    1
 17419 ;; Hardware stack levels required when called:    4
 17420 ;; This function calls:
 17421 ;;		Nothing
 17422 ;; This function is called by:
 17423 ;;		_BEAT_init
 17424 ;;		_BEAT_task
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428                           
 17429                           ;psect for function _ADCC_SetUpperThreshold
 17430  1E38                     _ADCC_SetUpperThreshold:	
 17431                           
 17432                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 17433                           
 17434                           ;incstack = 0
 17435                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 17436  1E38  0140               	movlb	0	; select bank0
 17437  1E39  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 17438  1E3A  0141               	movlb	1	; select bank1
 17439  1E3B  008F               	movwf	15	;volatile
 17440                           
 17441                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 17442  1E3C  0140               	movlb	0	; select bank0
 17443  1E3D  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 17444  1E3E  0141               	movlb	1	; select bank1
 17445  1E3F  008E               	movwf	14	;volatile
 17446  1E40  0008               	return
 17447  1E41                     __end_of_ADCC_SetUpperThreshold:	
 17448                           
 17449                           	psect	text64
 17450  1E2F                     __ptext64:	
 17451 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17452 ;; Defined at:
 17453 ;;		line 317 in file "mcc_generated_files/adcc.c"
 17454 ;; Parameters:    Size  Location     Type
 17455 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 17456 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 17457 ;; Auto vars:     Size  Location     Type
 17458 ;;		None
 17459 ;; Return value:  Size  Location     Type
 17460 ;;                  1    wreg      void 
 17461 ;; Registers used:
 17462 ;;		wreg
 17463 ;; Tracked objects:
 17464 ;;		On entry : 0/0
 17465 ;;		On exit  : 0/0
 17466 ;;		Unchanged: 0/0
 17467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17471 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17472 ;;Total ram usage:        2 bytes
 17473 ;; Hardware stack levels used:    1
 17474 ;; Hardware stack levels required when called:    4
 17475 ;; This function calls:
 17476 ;;		Nothing
 17477 ;; This function is called by:
 17478 ;;		_ADCC_Initialize
 17479 ;;		_BEAT_init
 17480 ;; This function uses a non-reentrant model
 17481 ;;
 17482                           
 17483                           
 17484                           ;psect for function _ADCC_SetADTIInterruptHandler
 17485  1E2F                     _ADCC_SetADTIInterruptHandler:	
 17486                           
 17487                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 17488                           
 17489                           ;incstack = 0
 17490                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 17491  1E2F  0140               	movlb	0	; select bank0
 17492  1E30  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 17493  1E31  0142               	movlb	2	; select bank2
 17494  1E32  00EC               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 17495  1E33  0140               	movlb	0	; select bank0
 17496  1E34  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 17497  1E35  0142               	movlb	2	; select bank2
 17498  1E36  00EB               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 17499  1E37  0008               	return
 17500  1E38                     __end_of_ADCC_SetADTIInterruptHandler:	
 17501                           
 17502                           	psect	intentry
 17503  0004                     __pintentry:	
 17504 ;; *************** function _INTERRUPT_InterruptManager *****************
 17505 ;; Defined at:
 17506 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17507 ;; Parameters:    Size  Location     Type
 17508 ;;		None
 17509 ;; Auto vars:     Size  Location     Type
 17510 ;;		None
 17511 ;; Return value:  Size  Location     Type
 17512 ;;                  1    wreg      void 
 17513 ;; Registers used:
 17514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17515 ;; Tracked objects:
 17516 ;;		On entry : 0/0
 17517 ;;		On exit  : 0/0
 17518 ;;		Unchanged: 0/0
 17519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17524 ;;Total ram usage:        0 bytes
 17525 ;; Hardware stack levels used:    1
 17526 ;; Hardware stack levels required when called:    3
 17527 ;; This function calls:
 17528 ;;		Absolute function
 17529 ;;		_ADCC_ThresholdISR
 17530 ;;		_DMX_ISR
 17531 ;;		_EUSART1_Receive_ISR
 17532 ;;		_EUSART1_Transmit_ISR
 17533 ;;		_I2C1_BusCollisionISR
 17534 ;;		_I2C1_ISR
 17535 ;;		_TMR0_ISR
 17536 ;; This function is called by:
 17537 ;;		Interrupt level 1
 17538 ;; This function uses a non-reentrant model
 17539 ;;
 17540                           
 17541  0004                     _INTERRUPT_InterruptManager:	
 17542                           
 17543                           ;incstack = 0
 17544  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17545                           
 17546                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17547  0005  3180               	pagesel	$
 17548                           
 17549                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17550  0006  014E               	movlb	14	; select bank14
 17551  0007  1A96               	btfsc	22,5	;volatile
 17552  0008  1E8C               	btfss	12,5	;volatile
 17553  0009  280E               	goto	i1l280
 17554                           
 17555                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17556  000A  3187  27F3  3180   	fcall	_TMR0_ISR
 17557                           
 17558                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17559  000D  2837               	goto	i1l294
 17560  000E                     i1l280:	
 17561                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17562                           
 17563  000E  1F0B               	btfss	11,6	;volatile
 17564  000F  2837               	goto	i1l294
 17565                           
 17566                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17567  0010  1899               	btfsc	25,1	;volatile
 17568  0011  1C8F               	btfss	15,1	;volatile
 17569  0012  2817               	goto	i1l283
 17570                           
 17571                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 17572  0013  319E  260B  3180   	fcall	_I2C1_BusCollisionISR
 17573                           
 17574                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17575  0016  2837               	goto	i1l294
 17576  0017                     i1l283:	
 17577                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17578                           
 17579  0017  1819               	btfsc	25,0	;volatile
 17580  0018  1C0F               	btfss	15,0	;volatile
 17581  0019  281E               	goto	i1l285
 17582                           
 17583                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 17584  001A  318A  22DB  3180   	fcall	_I2C1_ISR
 17585                           
 17586                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17587  001D  2837               	goto	i1l294
 17588  001E                     i1l285:	
 17589                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 17590                           
 17591  001E  1A19               	btfsc	25,4	;volatile
 17592  001F  1E0F               	btfss	15,4	;volatile
 17593  0020  2828               	goto	i1l287
 17594                           
 17595                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 17596  0021  0143               	movlb	3	; select bank3
 17597  0022  0863               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384),w
 17598  0023  008A               	movwf	10
 17599  0024  0862               	movf	_EUSART1_TxDefaultInterruptHandler^(0+384),w
 17600  0025  000A               	callw
 17601  0026  3180               	pagesel	$
 17602                           
 17603                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17604  0027  2837               	goto	i1l294
 17605  0028                     i1l287:	
 17606                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 17607                           
 17608  0028  1A99               	btfsc	25,5	;volatile
 17609  0029  1E8F               	btfss	15,5	;volatile
 17610  002A  2832               	goto	i1l289
 17611                           
 17612                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 17613  002B  0143               	movlb	3	; select bank3
 17614  002C  0861               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 17615  002D  008A               	movwf	10
 17616  002E  0860               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 17617  002F  000A               	callw
 17618  0030  3180               	pagesel	$
 17619                           
 17620                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17621  0031  2837               	goto	i1l294
 17622  0032                     i1l289:	
 17623                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 17624                           
 17625  0032  1897               	btfsc	23,1	;volatile
 17626  0033  1C8D               	btfss	13,1	;volatile
 17627  0034  2837               	goto	i1l294
 17628                           
 17629                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 17630  0035  319E  26D3         	fcall	_ADCC_ThresholdISR
 17631  0037                     i1l294:	
 17632                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17633                           
 17634  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17635  0038  0009               	retfie
 17636  0039                     __end_of_INTERRUPT_InterruptManager:	
 17637                           
 17638                           	psect	text66
 17639  07F3                     __ptext66:	
 17640 ;; *************** function _TMR0_ISR *****************
 17641 ;; Defined at:
 17642 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 17643 ;; Parameters:    Size  Location     Type
 17644 ;;		None
 17645 ;; Auto vars:     Size  Location     Type
 17646 ;;		None
 17647 ;; Return value:  Size  Location     Type
 17648 ;;                  1    wreg      void 
 17649 ;; Registers used:
 17650 ;;		wreg, status,2, status,0, pclath, cstack
 17651 ;; Tracked objects:
 17652 ;;		On entry : 0/0
 17653 ;;		On exit  : 0/0
 17654 ;;		Unchanged: 0/0
 17655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17660 ;;Total ram usage:        0 bytes
 17661 ;; Hardware stack levels used:    1
 17662 ;; Hardware stack levels required when called:    1
 17663 ;; This function calls:
 17664 ;;		Absolute function
 17665 ;;		_CLOCK_timerCallback
 17666 ;;		_TMR0_DefaultInterruptHandler
 17667 ;; This function is called by:
 17668 ;;		_INTERRUPT_InterruptManager
 17669 ;; This function uses a non-reentrant model
 17670 ;;
 17671                           
 17672                           
 17673                           ;psect for function _TMR0_ISR
 17674  07F3                     _TMR0_ISR:	
 17675                           
 17676                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 17677                           
 17678                           ;incstack = 0
 17679                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17680  07F3  014E               	movlb	14	; select bank14
 17681  07F4  128C               	bcf	12,5	;volatile
 17682                           
 17683                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 17684  07F5  0142               	movlb	2	; select bank2
 17685  07F6  086D               	movf	_TMR0_InterruptHandler^(0+256),w
 17686  07F7  046E               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 17687  07F8  1903               	btfsc	3,2
 17688  07F9  0008               	return
 17689                           
 17690                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 17691  07FA  086E               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 17692  07FB  008A               	movwf	10
 17693  07FC  086D               	movf	_TMR0_InterruptHandler^(0+256),w
 17694  07FD  000A               	callw
 17695  07FE  3187               	pagesel	$
 17696  07FF  0008               	return
 17697  0800                     __end_of_TMR0_ISR:	
 17698                           
 17699                           	psect	text67
 17700  1E21                     __ptext67:	
 17701 ;; *************** function _CLOCK_timerCallback *****************
 17702 ;; Defined at:
 17703 ;;		line 21 in file "clock.c"
 17704 ;; Parameters:    Size  Location     Type
 17705 ;;		None
 17706 ;; Auto vars:     Size  Location     Type
 17707 ;;		None
 17708 ;; Return value:  Size  Location     Type
 17709 ;;                  1    wreg      void 
 17710 ;; Registers used:
 17711 ;;		wreg
 17712 ;; Tracked objects:
 17713 ;;		On entry : 0/0
 17714 ;;		On exit  : 0/0
 17715 ;;		Unchanged: 0/0
 17716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17721 ;;Total ram usage:        0 bytes
 17722 ;; Hardware stack levels used:    1
 17723 ;; This function calls:
 17724 ;;		Nothing
 17725 ;; This function is called by:
 17726 ;;		_CLOCK_init
 17727 ;;		_TMR0_ISR
 17728 ;; This function uses a non-reentrant model
 17729 ;;
 17730                           
 17731                           
 17732                           ;psect for function _CLOCK_timerCallback
 17733  1E21                     _CLOCK_timerCallback:	
 17734                           
 17735                           ;clock.c: 22:     currentTime++;
 17736                           
 17737                           ;incstack = 0
 17738                           ; Regs used in _CLOCK_timerCallback: [wreg]
 17739  1E21  3001               	movlw	1
 17740  1E22  0142               	movlb	2	; select bank2
 17741  1E23  07C7               	addwf	_currentTime^(0+256),f
 17742  1E24  3000               	movlw	0
 17743  1E25  3DC8               	addwfc	(_currentTime+1)^(0+256),f
 17744  1E26  0008               	return
 17745  1E27                     __end_of_CLOCK_timerCallback:	
 17746                           
 17747                           	psect	text68
 17748  0801                     __ptext68:	
 17749 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17750 ;; Defined at:
 17751 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 17752 ;; Parameters:    Size  Location     Type
 17753 ;;		None
 17754 ;; Auto vars:     Size  Location     Type
 17755 ;;		None
 17756 ;; Return value:  Size  Location     Type
 17757 ;;                  1    wreg      void 
 17758 ;; Registers used:
 17759 ;;		None
 17760 ;; Tracked objects:
 17761 ;;		On entry : 0/0
 17762 ;;		On exit  : 0/0
 17763 ;;		Unchanged: 0/0
 17764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17769 ;;Total ram usage:        0 bytes
 17770 ;; Hardware stack levels used:    1
 17771 ;; This function calls:
 17772 ;;		Nothing
 17773 ;; This function is called by:
 17774 ;;		_TMR0_Initialize
 17775 ;;		_TMR0_ISR
 17776 ;; This function uses a non-reentrant model
 17777 ;;
 17778                           
 17779                           
 17780                           ;psect for function _TMR0_DefaultInterruptHandler
 17781  0801                     _TMR0_DefaultInterruptHandler:	
 17782                           
 17783                           ;incstack = 0
 17784                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17785  0801  0008               	return
 17786  0802                     __end_of_TMR0_DefaultInterruptHandler:	
 17787                           
 17788                           	psect	text69
 17789  0ADB                     __ptext69:	
 17790 ;; *************** function _I2C1_ISR *****************
 17791 ;; Defined at:
 17792 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;		None
 17795 ;; Auto vars:     Size  Location     Type
 17796 ;;		None
 17797 ;; Return value:  Size  Location     Type
 17798 ;;                  1    wreg      void 
 17799 ;; Registers used:
 17800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17801 ;; Tracked objects:
 17802 ;;		On entry : 0/0
 17803 ;;		On exit  : 0/0
 17804 ;;		Unchanged: 0/0
 17805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17808 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17810 ;;Total ram usage:        4 bytes
 17811 ;; Hardware stack levels used:    1
 17812 ;; Hardware stack levels required when called:    1
 17813 ;; This function calls:
 17814 ;;		_I2C1_FunctionComplete
 17815 ;;		_I2C1_Stop
 17816 ;; This function is called by:
 17817 ;;		_INTERRUPT_InterruptManager
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           
 17822                           ;psect for function _I2C1_ISR
 17823  0ADB                     _I2C1_ISR:	
 17824                           
 17825                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 17826                           
 17827                           ;incstack = 0
 17828                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17829  0ADB  014E               	movlb	14	; select bank14
 17830  0ADC  100F               	bcf	15,0	;volatile
 17831                           
 17832                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 17833  0ADD  0143               	movlb	3	; select bank3
 17834  0ADE  1F90               	btfss	16,7	;volatile
 17835  0ADF  2C0D               	goto	i1l4971
 17836                           
 17837                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 17838  0AE0  1390               	bcf	16,7	;volatile
 17839                           
 17840                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 17841  0AE1  0141               	movlb	1	; select bank1
 17842  0AE2  01EC               	clrf	_i2c1_state^(0+128)
 17843                           
 17844                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 17845  0AE3  086A               	movf	_p_i2c1_current^(0+128),w
 17846  0AE4  3E02               	addlw	2
 17847  0AE5  0086               	movwf	6
 17848  0AE6  3001               	movlw	1	; select bank2/3
 17849  0AE7  0087               	movwf	7
 17850  0AE8  0801               	movf	1,w
 17851  0AE9  0086               	movwf	6
 17852  0AEA  0187               	clrf	7
 17853  0AEB  0181               	clrf	1
 17854  0AEC  0A81               	incf	1,f
 17855                           
 17856                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 17857  0AED  01EA               	clrf	_p_i2c1_current^(0+128)
 17858  0AEE  0008               	return
 17859  0AEF                     i1l402:	
 17860                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 17861                           
 17862                           
 17863                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 17864  0AEF  0142               	movlb	2	; select bank2
 17865  0AF0  18A2               	btfsc	(_i2c1_object^(0+256)+2),1
 17866  0AF1  0008               	return
 17867                           
 17868                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 17869  0AF2  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17870  0AF3  00F8               	movwf	??_I2C1_ISR
 17871  0AF4  0878               	movf	??_I2C1_ISR,w
 17872  0AF5  0141               	movlb	1	; select bank1
 17873  0AF6  00EA               	movwf	_p_i2c1_current^(0+128)
 17874                           
 17875                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 17876  0AF7  0142               	movlb	2	; select bank2
 17877  0AF8  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17878  0AF9  0086               	movwf	6
 17879  0AFA  3001               	movlw	1	; select bank2/3
 17880  0AFB  0087               	movwf	7
 17881  0AFC  0801               	movf	1,w
 17882  0AFD  00F8               	movwf	??_I2C1_ISR
 17883  0AFE  0878               	movf	??_I2C1_ISR,w
 17884  0AFF  00D7               	movwf	_i2c1_trb_count^(0+256)
 17885                           
 17886                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 17887  0B00  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17888  0B01  0086               	movwf	6
 17889  0B02  3001               	movlw	1	; select bank2/3
 17890  0B03  0087               	movwf	7
 17891  0B04  3001               	movlw	1	; select bank2/3
 17892  0B05  3F41               	moviw [1]fsr1
 17893  0B06  0141               	movlb	1	; select bank1
 17894  0B07  00EB               	movwf	_p_i2c1_trb_current^(0+128)
 17895                           
 17896                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 17897  0B08  3003               	movlw	3
 17898  0B09  00F8               	movwf	??_I2C1_ISR
 17899  0B0A  0878               	movf	??_I2C1_ISR,w
 17900  0B0B  0142               	movlb	2	; select bank2
 17901  0B0C  07A1               	addwf	(low ((_i2c1_object| (0+256)+1)))^0,f
 17902                           
 17903                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 17904  0B0D  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17905  0B0E  3A60               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 17906  0B0F  1D03               	skipz
 17907  0B10  2B15               	goto	i1l4859
 17908                           
 17909                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 17910  0B11  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 17911  0B12  00F8               	movwf	??_I2C1_ISR
 17912  0B13  0878               	movf	??_I2C1_ISR,w
 17913  0B14  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
 17914  0B15                     i1l4859:	
 17915                           
 17916                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 17917  0B15  1022               	bcf	(_i2c1_object^(0+256)+2),0
 17918                           
 17919                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 17920  0B16  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17921  0B17  0620               	xorwf	_i2c1_object^(0+256),w
 17922  0B18  1903               	btfsc	3,2
 17923                           
 17924                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 17925  0B19  14A2               	bsf	(_i2c1_object^(0+256)+2),1
 17926                           
 17927                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 17928                           
 17929                           ;mcc_generated_files/i2c1.c: 290:                 }
 17930  0B1A  0143               	movlb	3	; select bank3
 17931  0B1B  1411               	bsf	17,0	;volatile
 17932  0B1C                     i1l4863:	
 17933                           
 17934                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 17935  0B1C  3002               	movlw	2
 17936  0B1D  00F8               	movwf	??_I2C1_ISR
 17937  0B1E  0878               	movf	??_I2C1_ISR,w
 17938  0B1F  0141               	movlb	1	; select bank1
 17939  0B20  00EC               	movwf	_i2c1_state^(0+128)
 17940  0B21  0008               	return
 17941  0B22                     i1l407:	
 17942                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 17943                           
 17944  0B22  2BB5               	goto	i1l428
 17945  0B23                     i1l408:	
 17946                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 17947                           
 17948                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 17949                           
 17950                           
 17951                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 17952  0B23  0143               	movlb	3	; select bank3
 17953  0B24  1F11               	btfss	17,6	;volatile
 17954  0B25  2B2F               	goto	i1l4871
 17955                           
 17956                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 17957  0B26  3001               	movlw	1
 17958  0B27  00F8               	movwf	??_I2C1_ISR
 17959  0B28  0878               	movf	??_I2C1_ISR,w
 17960  0B29  0142               	movlb	2	; select bank2
 17961  0B2A  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 17962                           
 17963                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17964  0B2B  3004               	movlw	4
 17965  0B2C  319F  2775         	fcall	_I2C1_Stop
 17966                           
 17967                           ;mcc_generated_files/i2c1.c: 319:             }
 17968  0B2E  0008               	return
 17969  0B2F                     i1l4871:	
 17970                           
 17971                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 17972  0B2F  0875               	movf	I2C1_ISR@i2c_address+1,w
 17973  0B30  00F9               	movwf	??_I2C1_ISR+1
 17974  0B31  0874               	movf	I2C1_ISR@i2c_address,w
 17975  0B32  00F8               	movwf	??_I2C1_ISR
 17976  0B33  36F9               	lsrf	??_I2C1_ISR+1,f
 17977  0B34  0CF8               	rrf	??_I2C1_ISR,f
 17978  0B35  0878               	movf	??_I2C1_ISR,w
 17979  0B36  008C               	movwf	12	;volatile
 17980                           
 17981                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 17982  0B37  1C74               	btfss	I2C1_ISR@i2c_address,0
 17983  0B38  2B3F               	goto	i1l4877
 17984                           
 17985                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 17986  0B39  300B               	movlw	11
 17987  0B3A  00F8               	movwf	??_I2C1_ISR
 17988  0B3B  0878               	movf	??_I2C1_ISR,w
 17989  0B3C  0141               	movlb	1	; select bank1
 17990  0B3D  00EC               	movwf	_i2c1_state^(0+128)
 17991                           
 17992                           ;mcc_generated_files/i2c1.c: 331:                 }
 17993  0B3E  0008               	return
 17994  0B3F                     i1l4877:	
 17995                           
 17996                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 17997  0B3F  3003               	movlw	3
 17998  0B40  00F8               	movwf	??_I2C1_ISR
 17999  0B41  0878               	movf	??_I2C1_ISR,w
 18000  0B42  0141               	movlb	1	; select bank1
 18001  0B43  00EC               	movwf	_i2c1_state^(0+128)
 18002  0B44  0008               	return
 18003  0B45                     i1l413:	
 18004                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 18005                           
 18006                           
 18007                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 18008  0B45  0143               	movlb	3	; select bank3
 18009  0B46  1F11               	btfss	17,6	;volatile
 18010  0B47  2B51               	goto	i1l414
 18011                           
 18012                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 18013  0B48  3001               	movlw	1
 18014  0B49  00F8               	movwf	??_I2C1_ISR
 18015  0B4A  0878               	movf	??_I2C1_ISR,w
 18016  0B4B  0142               	movlb	2	; select bank2
 18017  0B4C  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18018                           
 18019                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18020  0B4D  3004               	movlw	4
 18021  0B4E  319F  2775         	fcall	_I2C1_Stop
 18022                           
 18023                           ;mcc_generated_files/i2c1.c: 347:             }
 18024  0B50  0008               	return
 18025  0B51                     i1l414:	
 18026                           ;mcc_generated_files/i2c1.c: 348:             else
 18027                           
 18028                           
 18029                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 18030  0B51  1491               	bsf	17,1	;volatile
 18031                           
 18032                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 18033  0B52  0875               	movf	I2C1_ISR@i2c_address+1,w
 18034  0B53  00F9               	movwf	??_I2C1_ISR+1
 18035  0B54  0874               	movf	I2C1_ISR@i2c_address,w
 18036  0B55  00F8               	movwf	??_I2C1_ISR
 18037  0B56  0879               	movf	??_I2C1_ISR+1,w
 18038  0B57  00F8               	movwf	??_I2C1_ISR
 18039  0B58  01F9               	clrf	??_I2C1_ISR+1
 18040  0B59  3006               	movlw	6
 18041  0B5A  0578               	andwf	??_I2C1_ISR,w
 18042  0B5B  00FA               	movwf	??_I2C1_ISR+2
 18043  0B5C  3000               	movlw	0
 18044  0B5D  0579               	andwf	??_I2C1_ISR+1,w
 18045  0B5E  00FB               	movwf	??_I2C1_ISR+3
 18046  0B5F  30F0               	movlw	240
 18047  0B60  047A               	iorwf	??_I2C1_ISR+2,w
 18048  0B61  00F4               	movwf	I2C1_ISR@i2c_address
 18049  0B62  3000               	movlw	0
 18050  0B63  047B               	iorwf	??_I2C1_ISR+3,w
 18051  0B64  00F5               	movwf	I2C1_ISR@i2c_address+1
 18052                           
 18053                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 18054  0B65  1474               	bsf	I2C1_ISR@i2c_address,0
 18055                           
 18056                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 18057  0B66  0142               	movlb	2	; select bank2
 18058  0B67  01D4               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+256)
 18059  0B68  0AD4               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+256),f
 18060  0B69  2B1C               	goto	i1l4863
 18061  0B6A                     i1l4891:	
 18062                           
 18063                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 18064  0B6A  0142               	movlb	2	; select bank2
 18065  0B6B  0354               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+256),w
 18066  0B6C  1903               	btfsc	3,2
 18067  0B6D  2B88               	goto	i1l4911
 18068                           
 18069                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 18070  0B6E  0141               	movlb	1	; select bank1
 18071  0B6F  086B               	movf	_p_i2c1_trb_current^(0+128),w
 18072  0B70  0086               	movwf	6
 18073  0B71  3001               	movlw	1	; select bank2/3
 18074  0B72  0087               	movwf	7
 18075  0B73  3F40               	moviw [0]fsr1
 18076  0B74  00F4               	movwf	I2C1_ISR@i2c_address
 18077  0B75  3F41               	moviw [1]fsr1
 18078  0B76  00F5               	movwf	I2C1_ISR@i2c_address+1
 18079                           
 18080                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 18081  0B77  086B               	movf	_p_i2c1_trb_current^(0+128),w
 18082  0B78  0086               	movwf	6
 18083  0B79  3001               	movlw	1	; select bank2/3
 18084  0B7A  0087               	movwf	7
 18085  0B7B  3001               	movlw	1	; select bank2/3
 18086  0B7C  3F43               	moviw [3]fsr1
 18087  0B7D  0142               	movlb	2	; select bank2
 18088  0B7E  00D6               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+256)
 18089                           
 18090                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 18091  0B7F  0141               	movlb	1	; select bank1
 18092  0B80  086B               	movf	_p_i2c1_trb_current^(0+128),w
 18093  0B81  0086               	movwf	6
 18094  0B82  3001               	movlw	1	; select bank2/3
 18095  0B83  0087               	movwf	7
 18096  0B84  3001               	movlw	1	; select bank2/3
 18097  0B85  3F42               	moviw [2]fsr1
 18098  0B86  0142               	movlb	2	; select bank2
 18099  0B87  00D5               	movwf	I2C1_ISR@i2c_bytes_left^(0+256)
 18100  0B88                     i1l4911:	
 18101                           
 18102                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 18103  0B88  0874               	movf	I2C1_ISR@i2c_address,w
 18104  0B89  0143               	movlb	3	; select bank3
 18105  0B8A  008C               	movwf	12	;volatile
 18106                           
 18107                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 18108  0B8B  1C74               	btfss	I2C1_ISR@i2c_address,0
 18109  0B8C  2B3F               	goto	i1l4877
 18110                           
 18111                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 18112  0B8D  3005               	movlw	5
 18113  0B8E  00F8               	movwf	??_I2C1_ISR
 18114  0B8F  0878               	movf	??_I2C1_ISR,w
 18115  0B90  0141               	movlb	1	; select bank1
 18116  0B91  00EC               	movwf	_i2c1_state^(0+128)
 18117                           
 18118                           ;mcc_generated_files/i2c1.c: 419:                 }
 18119  0B92  0008               	return
 18120  0B93                     i1l424:	
 18121                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 18122                           
 18123                           
 18124                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 18125  0B93  0143               	movlb	3	; select bank3
 18126  0B94  1F11               	btfss	17,6	;volatile
 18127  0B95  2BA1               	goto	i1l4925
 18128                           
 18129                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 18130  0B96  3001               	movlw	1
 18131  0B97  00F8               	movwf	??_I2C1_ISR
 18132  0B98  0878               	movf	??_I2C1_ISR,w
 18133  0B99  0142               	movlb	2	; select bank2
 18134  0B9A  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18135                           
 18136                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 18137  0B9B  0143               	movlb	3	; select bank3
 18138  0B9C  1311               	bcf	17,6	;volatile
 18139                           
 18140                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 18141  0B9D  3005               	movlw	5
 18142  0B9E  319F  2775         	fcall	_I2C1_Stop
 18143                           
 18144                           ;mcc_generated_files/i2c1.c: 442:             }
 18145  0BA0  0008               	return
 18146  0BA1                     i1l4925:	
 18147                           
 18148                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 18149  0BA1  3001               	movlw	1
 18150  0BA2  0142               	movlb	2	; select bank2
 18151  0BA3  02D5               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 18152  0BA4  0A55               	incf	I2C1_ISR@i2c_bytes_left^(0+256),w
 18153  0BA5  1D03               	btfss	3,2
 18154  0BA6  2BB8               	goto	i1l4933
 18155                           
 18156                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 18157  0BA7  3004               	movlw	4
 18158  0BA8  00F8               	movwf	??_I2C1_ISR
 18159  0BA9  0878               	movf	??_I2C1_ISR,w
 18160  0BAA  0141               	movlb	1	; select bank1
 18161  0BAB  07EB               	addwf	_p_i2c1_trb_current^(0+128),f
 18162                           
 18163                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 18164  0BAC  3001               	movlw	1
 18165  0BAD  0142               	movlb	2	; select bank2
 18166  0BAE  02D7               	subwf	_i2c1_trb_count^(0+256),f
 18167  0BAF  1D03               	btfss	3,2
 18168  0BB0  2BB5               	goto	i1l428
 18169                           
 18170                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18171  0BB1  3000               	movlw	0
 18172  0BB2  319F  2775         	fcall	_I2C1_Stop
 18173                           
 18174                           ;mcc_generated_files/i2c1.c: 457:                     }
 18175  0BB4  0008               	return
 18176  0BB5                     i1l428:	
 18177                           ;mcc_generated_files/i2c1.c: 458:                     else
 18178                           
 18179                           
 18180                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 18181  0BB5  0143               	movlb	3	; select bank3
 18182  0BB6  1491               	bsf	17,1	;volatile
 18183  0BB7  2B1C               	goto	i1l4863
 18184  0BB8                     i1l4933:	
 18185                           
 18186                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 18187  0BB8  0856               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 18188  0BB9  0086               	movwf	6
 18189  0BBA  0187               	clrf	7
 18190  0BBB  0801               	movf	1,w
 18191  0BBC  0143               	movlb	3	; select bank3
 18192  0BBD  008C               	movwf	12	;volatile
 18193  0BBE  3001               	movlw	1
 18194  0BBF  00F8               	movwf	??_I2C1_ISR
 18195  0BC0  0878               	movf	??_I2C1_ISR,w
 18196  0BC1  0142               	movlb	2	; select bank2
 18197  0BC2  07D6               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 18198  0BC3  0008               	return
 18199  0BC4                     i1l431:	
 18200                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 18201                           
 18202                           
 18203                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 18204  0BC4  0143               	movlb	3	; select bank3
 18205  0BC5  1F11               	btfss	17,6	;volatile
 18206  0BC6  2BD2               	goto	i1l432
 18207                           
 18208                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 18209  0BC7  3001               	movlw	1
 18210  0BC8  00F8               	movwf	??_I2C1_ISR
 18211  0BC9  0878               	movf	??_I2C1_ISR,w
 18212  0BCA  0142               	movlb	2	; select bank2
 18213  0BCB  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18214                           
 18215                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18216  0BCC  3004               	movlw	4
 18217  0BCD  319F  2775         	fcall	_I2C1_Stop
 18218                           
 18219                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 18220  0BCF  0143               	movlb	3	; select bank3
 18221  0BD0  1311               	bcf	17,6	;volatile
 18222                           
 18223                           ;mcc_generated_files/i2c1.c: 495:             }
 18224  0BD1  0008               	return
 18225  0BD2                     i1l432:	
 18226                           ;mcc_generated_files/i2c1.c: 496:             else
 18227                           
 18228                           
 18229                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 18230  0BD2  1591               	bsf	17,3	;volatile
 18231                           
 18232                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 18233  0BD3  3008               	movlw	8
 18234  0BD4  00F8               	movwf	??_I2C1_ISR
 18235  0BD5  0878               	movf	??_I2C1_ISR,w
 18236  0BD6  0141               	movlb	1	; select bank1
 18237  0BD7  00EC               	movwf	_i2c1_state^(0+128)
 18238  0BD8  0008               	return
 18239  0BD9                     i1l4945:	
 18240                           
 18241                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 18242  0BD9  3008               	movlw	8
 18243  0BDA  00F8               	movwf	??_I2C1_ISR
 18244  0BDB  0878               	movf	??_I2C1_ISR,w
 18245  0BDC  00EC               	movwf	_i2c1_state^(0+128)
 18246                           
 18247                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 18248  0BDD  0143               	movlb	3	; select bank3
 18249  0BDE  1591               	bsf	17,3	;volatile
 18250                           
 18251                           ;mcc_generated_files/i2c1.c: 513:             break;
 18252  0BDF  0008               	return
 18253  0BE0                     i1l4949:	
 18254                           
 18255                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 18256  0BE0  0143               	movlb	3	; select bank3
 18257  0BE1  080C               	movf	12,w	;volatile
 18258  0BE2  00F8               	movwf	??_I2C1_ISR
 18259  0BE3  0142               	movlb	2	; select bank2
 18260  0BE4  0856               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 18261  0BE5  0086               	movwf	6
 18262  0BE6  0187               	clrf	7
 18263  0BE7  0878               	movf	??_I2C1_ISR,w
 18264  0BE8  0081               	movwf	1
 18265  0BE9  3001               	movlw	1
 18266  0BEA  00F8               	movwf	??_I2C1_ISR
 18267  0BEB  0878               	movf	??_I2C1_ISR,w
 18268  0BEC  07D6               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 18269                           
 18270                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 18271  0BED  3001               	movlw	1
 18272  0BEE  02D5               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 18273  0BEF  1903               	btfsc	3,2
 18274  0BF0  2BF9               	goto	i1l436
 18275                           
 18276                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 18277  0BF1  0143               	movlb	3	; select bank3
 18278  0BF2  1291               	bcf	17,5	;volatile
 18279                           
 18280                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 18281  0BF3  3006               	movlw	6
 18282  0BF4  00F8               	movwf	??_I2C1_ISR
 18283  0BF5  0878               	movf	??_I2C1_ISR,w
 18284  0BF6  0141               	movlb	1	; select bank1
 18285  0BF7  00EC               	movwf	_i2c1_state^(0+128)
 18286                           
 18287                           ;mcc_generated_files/i2c1.c: 532:             }
 18288  0BF8  2BFD               	goto	i1l4961
 18289  0BF9                     i1l436:	
 18290                           ;mcc_generated_files/i2c1.c: 533:             else
 18291                           
 18292                           
 18293                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 18294  0BF9  0143               	movlb	3	; select bank3
 18295  0BFA  1691               	bsf	17,5	;volatile
 18296                           
 18297                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 18298  0BFB  319E  26E0         	fcall	_I2C1_FunctionComplete
 18299  0BFD                     i1l4961:	
 18300                           
 18301                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 18302  0BFD  0143               	movlb	3	; select bank3
 18303  0BFE  1611               	bsf	17,4	;volatile
 18304                           
 18305                           ;mcc_generated_files/i2c1.c: 545:             break;
 18306  0BFF  0008               	return
 18307  0C00                     i1l4963:	
 18308                           
 18309                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18310  0C00  3000               	movlw	0
 18311  0C01  319F  2775         	fcall	_I2C1_Stop
 18312                           
 18313                           ;mcc_generated_files/i2c1.c: 552:             break;
 18314  0C03  0008               	return
 18315  0C04                     i1l4965:	
 18316                           
 18317                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 18318  0C04  3001               	movlw	1
 18319  0C05  00F8               	movwf	??_I2C1_ISR
 18320  0C06  0878               	movf	??_I2C1_ISR,w
 18321  0C07  0142               	movlb	2	; select bank2
 18322  0C08  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18323                           
 18324                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 18325  0C09  3006               	movlw	6
 18326  0C0A  319F  2775         	fcall	_I2C1_Stop
 18327                           
 18328                           ;mcc_generated_files/i2c1.c: 560:             break;
 18329  0C0C  0008               	return
 18330  0C0D                     i1l4971:	
 18331  0C0D  0141               	movlb	1	; select bank1
 18332  0C0E  086C               	movf	_i2c1_state^(0+128),w
 18333  0C0F  00F8               	movwf	??_I2C1_ISR
 18334  0C10  01F9               	clrf	??_I2C1_ISR+1
 18335                           
 18336                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18337                           ; Switch size 1, requested type "simple"
 18338                           ; Number of cases is 1, Range of values is 0 to 0
 18339                           ; switch strategies available:
 18340                           ; Name         Instructions Cycles
 18341                           ; simple_byte            4     3 (average)
 18342                           ; direct_byte            8     6 (fixed)
 18343                           ; jumptable            260     6 (fixed)
 18344                           ;	Chosen strategy is simple_byte
 18345  0C11  0879               	movf	??_I2C1_ISR+1,w
 18346  0C12  3A00               	xorlw	0	; case 0
 18347  0C13  1903               	skipnz
 18348  0C14  2C16               	goto	i1l6299
 18349  0C15  2C04               	goto	i1l4965
 18350  0C16                     i1l6299:	
 18351                           
 18352                           ; Switch size 1, requested type "simple"
 18353                           ; Number of cases is 11, Range of values is 0 to 11
 18354                           ; switch strategies available:
 18355                           ; Name         Instructions Cycles
 18356                           ; direct_byte           30     6 (fixed)
 18357                           ; simple_byte           34    18 (average)
 18358                           ; jumptable            260     6 (fixed)
 18359                           ;	Chosen strategy is simple_byte
 18360  0C16  0878               	movf	??_I2C1_ISR,w
 18361  0C17  3A00               	xorlw	0	; case 0
 18362  0C18  1903               	skipnz
 18363  0C19  2AEF               	goto	i1l402
 18364  0C1A  3A01               	xorlw	1	; case 1
 18365  0C1B  1903               	skipnz
 18366  0C1C  2B22               	goto	i1l407
 18367  0C1D  3A03               	xorlw	3	; case 2
 18368  0C1E  1903               	skipnz
 18369  0C1F  2B6A               	goto	i1l4891
 18370  0C20  3A01               	xorlw	1	; case 3
 18371  0C21  1903               	skipnz
 18372  0C22  2B93               	goto	i1l424
 18373  0C23  3A07               	xorlw	7	; case 4
 18374  0C24  1903               	skipnz
 18375  0C25  2C00               	goto	i1l4963
 18376  0C26  3A01               	xorlw	1	; case 5
 18377  0C27  1903               	skipnz
 18378  0C28  2BC4               	goto	i1l431
 18379  0C29  3A03               	xorlw	3	; case 6
 18380  0C2A  1903               	skipnz
 18381  0C2B  2BD9               	goto	i1l4945
 18382  0C2C  3A01               	xorlw	1	; case 7
 18383  0C2D  1903               	skipnz
 18384  0C2E  2C00               	goto	i1l4963
 18385  0C2F  3A0F               	xorlw	15	; case 8
 18386  0C30  1903               	skipnz
 18387  0C31  2BE0               	goto	i1l4949
 18388  0C32  3A02               	xorlw	2	; case 10
 18389  0C33  1903               	skipnz
 18390  0C34  2B23               	goto	i1l408
 18391  0C35  3A01               	xorlw	1	; case 11
 18392  0C36  1903               	skipnz
 18393  0C37  2B45               	goto	i1l413
 18394  0C38  2C04               	goto	i1l4965
 18395  0C39  0008               	return
 18396  0C3A                     __end_of_I2C1_ISR:	
 18397                           
 18398                           	psect	text70
 18399  1F75                     __ptext70:	
 18400 ;; *************** function _I2C1_Stop *****************
 18401 ;; Defined at:
 18402 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 18403 ;; Parameters:    Size  Location     Type
 18404 ;;  completion_c    1    wreg     enum E10866
 18405 ;; Auto vars:     Size  Location     Type
 18406 ;;  completion_c    1    1[COMMON] enum E10866
 18407 ;; Return value:  Size  Location     Type
 18408 ;;                  1    wreg      void 
 18409 ;; Registers used:
 18410 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18411 ;; Tracked objects:
 18412 ;;		On entry : 0/0
 18413 ;;		On exit  : 0/0
 18414 ;;		Unchanged: 0/0
 18415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18420 ;;Total ram usage:        2 bytes
 18421 ;; Hardware stack levels used:    1
 18422 ;; This function calls:
 18423 ;;		Nothing
 18424 ;; This function is called by:
 18425 ;;		_I2C1_ISR
 18426 ;; This function uses a non-reentrant model
 18427 ;;
 18428                           
 18429                           
 18430                           ;psect for function _I2C1_Stop
 18431  1F75                     _I2C1_Stop:	
 18432                           
 18433                           ;incstack = 0
 18434                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 18435                           ;I2C1_Stop@completion_code stored from wreg
 18436  1F75  00F7               	movwf	I2C1_Stop@completion_code
 18437                           
 18438                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 18439  1F76  0143               	movlb	3	; select bank3
 18440  1F77  1511               	bsf	17,2	;volatile
 18441                           
 18442                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 18443  1F78  0141               	movlb	1	; select bank1
 18444  1F79  086A               	movf	_p_i2c1_current^(0+128),w
 18445  1F7A  3E02               	addlw	2
 18446  1F7B  0086               	movwf	6
 18447  1F7C  3001               	movlw	1	; select bank2/3
 18448  1F7D  0087               	movwf	7
 18449  1F7E  0801               	movf	1,w
 18450  1F7F  1903               	btfsc	3,2
 18451  1F80  2F8D               	goto	i1l4633
 18452                           
 18453                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 18454  1F81  0877               	movf	I2C1_Stop@completion_code,w
 18455  1F82  00F6               	movwf	??_I2C1_Stop
 18456  1F83  086A               	movf	_p_i2c1_current^(0+128),w
 18457  1F84  3E02               	addlw	2
 18458  1F85  0086               	movwf	6
 18459  1F86  3001               	movlw	1	; select bank2/3
 18460  1F87  0087               	movwf	7
 18461  1F88  0801               	movf	1,w
 18462  1F89  0086               	movwf	6
 18463  1F8A  0187               	clrf	7
 18464  1F8B  0876               	movf	??_I2C1_Stop,w
 18465  1F8C  0081               	movwf	1
 18466  1F8D                     i1l4633:	
 18467                           
 18468                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 18469  1F8D  01EC               	clrf	_i2c1_state^(0+128)
 18470  1F8E  0008               	return
 18471  1F8F                     __end_of_I2C1_Stop:	
 18472                           
 18473                           	psect	text71
 18474  1EE0                     __ptext71:	
 18475 ;; *************** function _I2C1_FunctionComplete *****************
 18476 ;; Defined at:
 18477 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 18478 ;; Parameters:    Size  Location     Type
 18479 ;;		None
 18480 ;; Auto vars:     Size  Location     Type
 18481 ;;		None
 18482 ;; Return value:  Size  Location     Type
 18483 ;;                  1    wreg      void 
 18484 ;; Registers used:
 18485 ;;		wreg, status,2, status,0
 18486 ;; Tracked objects:
 18487 ;;		On entry : 0/0
 18488 ;;		On exit  : 0/0
 18489 ;;		Unchanged: 0/0
 18490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18495 ;;Total ram usage:        1 bytes
 18496 ;; Hardware stack levels used:    1
 18497 ;; This function calls:
 18498 ;;		Nothing
 18499 ;; This function is called by:
 18500 ;;		_I2C1_ISR
 18501 ;; This function uses a non-reentrant model
 18502 ;;
 18503                           
 18504                           
 18505                           ;psect for function _I2C1_FunctionComplete
 18506  1EE0                     _I2C1_FunctionComplete:	
 18507                           
 18508                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 18509                           
 18510                           ;incstack = 0
 18511                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 18512  1EE0  3004               	movlw	4
 18513  1EE1  00F6               	movwf	??_I2C1_FunctionComplete
 18514  1EE2  0876               	movf	??_I2C1_FunctionComplete,w
 18515  1EE3  0141               	movlb	1	; select bank1
 18516  1EE4  07EB               	addwf	_p_i2c1_trb_current^(0+128),f
 18517                           
 18518                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 18519  1EE5  3001               	movlw	1
 18520  1EE6  0142               	movlb	2	; select bank2
 18521  1EE7  02D7               	subwf	_i2c1_trb_count^(0+256),f
 18522  1EE8  1D03               	btfss	3,2
 18523  1EE9  2EF0               	goto	i1l443
 18524                           
 18525                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 18526  1EEA  3004               	movlw	4
 18527  1EEB  00F6               	movwf	??_I2C1_FunctionComplete
 18528  1EEC  0876               	movf	??_I2C1_FunctionComplete,w
 18529  1EED  0141               	movlb	1	; select bank1
 18530  1EEE  00EC               	movwf	_i2c1_state^(0+128)
 18531                           
 18532                           ;mcc_generated_files/i2c1.c: 575:     }
 18533  1EEF  0008               	return
 18534  1EF0                     i1l443:	
 18535                           ;mcc_generated_files/i2c1.c: 576:     else
 18536                           
 18537                           
 18538                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 18539  1EF0  0141               	movlb	1	; select bank1
 18540  1EF1  01EC               	clrf	_i2c1_state^(0+128)
 18541  1EF2  0AEC               	incf	_i2c1_state^(0+128),f
 18542  1EF3  0008               	return
 18543  1EF4                     __end_of_I2C1_FunctionComplete:	
 18544                           
 18545                           	psect	text72
 18546  1E0B                     __ptext72:	
 18547 ;; *************** function _I2C1_BusCollisionISR *****************
 18548 ;; Defined at:
 18549 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 18550 ;; Parameters:    Size  Location     Type
 18551 ;;		None
 18552 ;; Auto vars:     Size  Location     Type
 18553 ;;		None
 18554 ;; Return value:  Size  Location     Type
 18555 ;;                  1    wreg      void 
 18556 ;; Registers used:
 18557 ;;		None
 18558 ;; Tracked objects:
 18559 ;;		On entry : 0/0
 18560 ;;		On exit  : 0/0
 18561 ;;		Unchanged: 0/0
 18562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18567 ;;Total ram usage:        0 bytes
 18568 ;; Hardware stack levels used:    1
 18569 ;; This function calls:
 18570 ;;		Nothing
 18571 ;; This function is called by:
 18572 ;;		_INTERRUPT_InterruptManager
 18573 ;; This function uses a non-reentrant model
 18574 ;;
 18575                           
 18576                           
 18577                           ;psect for function _I2C1_BusCollisionISR
 18578  1E0B                     _I2C1_BusCollisionISR:	
 18579                           
 18580                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 18581                           
 18582                           ;incstack = 0
 18583                           ; Regs used in _I2C1_BusCollisionISR: []
 18584  1E0B  014E               	movlb	14	; select bank14
 18585  1E0C  108F               	bcf	15,1	;volatile
 18586  1E0D  0008               	return
 18587  1E0E                     __end_of_I2C1_BusCollisionISR:	
 18588                           
 18589                           	psect	text73
 18590  1F8F                     __ptext73:	
 18591 ;; *************** function _EUSART1_Transmit_ISR *****************
 18592 ;; Defined at:
 18593 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 18594 ;; Parameters:    Size  Location     Type
 18595 ;;		None
 18596 ;; Auto vars:     Size  Location     Type
 18597 ;;		None
 18598 ;; Return value:  Size  Location     Type
 18599 ;;                  1    wreg      void 
 18600 ;; Registers used:
 18601 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18602 ;; Tracked objects:
 18603 ;;		On entry : 0/0
 18604 ;;		On exit  : 0/0
 18605 ;;		Unchanged: 0/0
 18606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18611 ;;Total ram usage:        1 bytes
 18612 ;; Hardware stack levels used:    1
 18613 ;; This function calls:
 18614 ;;		Nothing
 18615 ;; This function is called by:
 18616 ;;		_EUSART1_Initialize
 18617 ;;		_INTERRUPT_InterruptManager
 18618 ;; This function uses a non-reentrant model
 18619 ;;
 18620                           
 18621                           
 18622                           ;psect for function _EUSART1_Transmit_ISR
 18623  1F8F                     _EUSART1_Transmit_ISR:	
 18624                           
 18625                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 18626                           
 18627                           ;incstack = 0
 18628                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18629  1F8F  3008               	movlw	8
 18630  1F90  0142               	movlb	2	; select bank2
 18631  1F91  026F               	subwf	_eusart1TxBufferRemaining^(0+256),w	;volatile
 18632  1F92  1803               	skipnc
 18633  1F93  2FA8               	goto	i1l106
 18634                           
 18635                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 18636  1F94  0872               	movf	_eusart1TxTail,w
 18637  1F95  3EBA               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 18638  1F96  0086               	movwf	6
 18639  1F97  3001               	movlw	1	; select bank3/4
 18640  1F98  0087               	movwf	7
 18641  1F99  0801               	movf	1,w
 18642  1F9A  009A               	movwf	26	;volatile
 18643  1F9B  3001               	movlw	1
 18644  1F9C  00F6               	movwf	??_EUSART1_Transmit_ISR
 18645  1F9D  0876               	movf	??_EUSART1_Transmit_ISR,w
 18646  1F9E  07F2               	addwf	_eusart1TxTail,f	;volatile
 18647                           
 18648                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 18649  1F9F  3008               	movlw	8
 18650  1FA0  0272               	subwf	_eusart1TxTail,w	;volatile
 18651  1FA1  1803               	btfsc	3,0
 18652                           
 18653                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 18654  1FA2  01F2               	clrf	_eusart1TxTail	;volatile
 18655                           
 18656                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 18657  1FA3  3001               	movlw	1
 18658  1FA4  00F6               	movwf	??_EUSART1_Transmit_ISR
 18659  1FA5  0876               	movf	??_EUSART1_Transmit_ISR,w
 18660  1FA6  07EF               	addwf	_eusart1TxBufferRemaining^(0+256),f	;volatile
 18661                           
 18662                           ;mcc_generated_files/eusart1.c: 206:     }
 18663  1FA7  0008               	return
 18664  1FA8                     i1l106:	
 18665                           ;mcc_generated_files/eusart1.c: 207:     else
 18666                           
 18667                           
 18668                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 18669  1FA8  014E               	movlb	14	; select bank14
 18670  1FA9  1219               	bcf	25,4	;volatile
 18671  1FAA  0008               	return
 18672  1FAB                     __end_of_EUSART1_Transmit_ISR:	
 18673                           
 18674                           	psect	text74
 18675  10C4                     __ptext74:	
 18676 ;; *************** function _DMX_ISR *****************
 18677 ;; Defined at:
 18678 ;;		line 13 in file "dmx.c"
 18679 ;; Parameters:    Size  Location     Type
 18680 ;;		None
 18681 ;; Auto vars:     Size  Location     Type
 18682 ;;		None
 18683 ;; Return value:  Size  Location     Type
 18684 ;;                  1    wreg      void 
 18685 ;; Registers used:
 18686 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18687 ;; Tracked objects:
 18688 ;;		On entry : 0/0
 18689 ;;		On exit  : 0/0
 18690 ;;		Unchanged: 0/0
 18691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18694 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18696 ;;Total ram usage:        4 bytes
 18697 ;; Hardware stack levels used:    1
 18698 ;; This function calls:
 18699 ;;		Nothing
 18700 ;; This function is called by:
 18701 ;;		_main
 18702 ;;		_INTERRUPT_InterruptManager
 18703 ;; This function uses a non-reentrant model
 18704 ;;
 18705                           
 18706                           
 18707                           ;psect for function _DMX_ISR
 18708  10C4                     _DMX_ISR:	
 18709                           
 18710                           ;dmx.c: 14:         LATB6 = 1;
 18711                           
 18712                           ;incstack = 0
 18713                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18714  10C4  0140               	movlb	0	; select bank0
 18715  10C5  1719               	bsf	25,6	;volatile
 18716                           
 18717                           ;dmx.c: 15:         LATB6 = 0;
 18718  10C6  1319               	bcf	25,6	;volatile
 18719                           
 18720                           ;dmx.c: 16:     if (RC1STAbits.FERR) {
 18721  10C7  0142               	movlb	2	; select bank2
 18722  10C8  1D1D               	btfss	29,2	;volatile
 18723  10C9  28CF               	goto	i1l5131
 18724                           
 18725                           ;dmx.c: 18:         dmxPointer = 0;
 18726  10CA  01B9               	clrf	_dmxPointer^(0+256)
 18727  10CB  01BA               	clrf	(_dmxPointer+1)^(0+256)
 18728                           
 18729                           ;dmx.c: 19:         offCheck = 1;
 18730  10CC  01CC               	clrf	_offCheck^(0+256)
 18731  10CD  0ACC               	incf	_offCheck^(0+256),f
 18732                           
 18733                           ;dmx.c: 20:     } else {
 18734  10CE  28D3               	goto	i1l5133
 18735  10CF                     i1l5131:	
 18736                           
 18737                           ;dmx.c: 21:         dmxPointer++;
 18738  10CF  3001               	movlw	1
 18739  10D0  07B9               	addwf	_dmxPointer^(0+256),f
 18740  10D1  3000               	movlw	0
 18741  10D2  3DBA               	addwfc	(_dmxPointer+1)^(0+256),f
 18742  10D3                     i1l5133:	
 18743                           
 18744                           ;dmx.c: 23:     dmxData[dmxPointer] = RC1REG;
 18745  10D3  30EF               	movlw	239
 18746  10D4  00F6               	movwf	??_DMX_ISR
 18747  10D5  3025               	movlw	37
 18748  10D6  00F7               	movwf	??_DMX_ISR+1
 18749  10D7  0839               	movf	_dmxPointer^(0+256),w
 18750  10D8  0776               	addwf	??_DMX_ISR,w
 18751  10D9  00F8               	movwf	??_DMX_ISR+2
 18752  10DA  083A               	movf	(_dmxPointer+1)^(0+256),w
 18753  10DB  3D77               	addwfc	??_DMX_ISR+1,w
 18754  10DC  00F9               	movwf	??_DMX_ISR+3
 18755  10DD  0878               	movf	??_DMX_ISR+2,w
 18756  10DE  0086               	movwf	6
 18757  10DF  0879               	movf	??_DMX_ISR+3,w
 18758  10E0  0087               	movwf	7
 18759  10E1  0819               	movf	25,w	;volatile
 18760  10E2  0081               	movwf	1
 18761                           
 18762                           ;dmx.c: 25:     if (RC1STAbits.OERR) {
 18763  10E3  1C9D               	btfss	29,1	;volatile
 18764  10E4  0008               	return
 18765                           
 18766                           ;dmx.c: 26:         RC1STAbits.CREN = 0;
 18767  10E5  121D               	bcf	29,4	;volatile
 18768                           
 18769                           ;dmx.c: 27:         RC1STAbits.CREN = 1;
 18770  10E6  161D               	bsf	29,4	;volatile
 18771  10E7  0008               	return
 18772  10E8                     __end_of_DMX_ISR:	
 18773                           
 18774                           	psect	text75
 18775  1281                     __ptext75:	
 18776 ;; *************** function _EUSART1_Receive_ISR *****************
 18777 ;; Defined at:
 18778 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;		None
 18781 ;; Auto vars:     Size  Location     Type
 18782 ;;		None
 18783 ;; Return value:  Size  Location     Type
 18784 ;;                  1    wreg      void 
 18785 ;; Registers used:
 18786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18787 ;; Tracked objects:
 18788 ;;		On entry : 0/0
 18789 ;;		On exit  : 0/0
 18790 ;;		Unchanged: 0/0
 18791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18796 ;;Total ram usage:        0 bytes
 18797 ;; Hardware stack levels used:    1
 18798 ;; Hardware stack levels required when called:    2
 18799 ;; This function calls:
 18800 ;;		Absolute function
 18801 ;;		_EUSART1_DefaultErrorHandler
 18802 ;;		_EUSART1_DefaultFramingErrorHandler
 18803 ;;		_EUSART1_DefaultOverrunErrorHandler
 18804 ;;		_EUSART1_RxDataHandler
 18805 ;; This function is called by:
 18806 ;;		_EUSART1_Initialize
 18807 ;;		_INTERRUPT_InterruptManager
 18808 ;; This function uses a non-reentrant model
 18809 ;;
 18810                           
 18811                           
 18812                           ;psect for function _EUSART1_Receive_ISR
 18813  1281                     _EUSART1_Receive_ISR:	
 18814                           
 18815                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 18816                           
 18817                           ;incstack = 0
 18818                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18819  1281  0871               	movf	_eusart1RxHead,w	;volatile
 18820  1282  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18821  1283  0086               	movwf	6
 18822  1284  3001               	movlw	1	; select bank3/4
 18823  1285  0087               	movwf	7
 18824  1286  0181               	clrf	1
 18825                           
 18826                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 18827  1287  0142               	movlb	2	; select bank2
 18828  1288  1D1D               	btfss	29,2	;volatile
 18829  1289  2A96               	goto	i1l4801
 18830                           
 18831                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 18832  128A  0871               	movf	_eusart1RxHead,w	;volatile
 18833  128B  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18834  128C  0086               	movwf	6
 18835  128D  3001               	movlw	1	; select bank3/4
 18836  128E  0087               	movwf	7
 18837  128F  1481               	bsf	1,1
 18838                           
 18839                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 18840  1290  0143               	movlb	3	; select bank3
 18841  1291  085F               	movf	(_EUSART1_FramingErrorHandler+1)^(0+384),w
 18842  1292  008A               	movwf	10
 18843  1293  085E               	movf	_EUSART1_FramingErrorHandler^(0+384),w
 18844  1294  000A               	callw
 18845  1295  3192               	pagesel	$
 18846  1296                     i1l4801:	
 18847                           
 18848                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 18849  1296  0142               	movlb	2	; select bank2
 18850  1297  1C9D               	btfss	29,1	;volatile
 18851  1298  2AA5               	goto	i1l4807
 18852                           
 18853                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 18854  1299  0871               	movf	_eusart1RxHead,w	;volatile
 18855  129A  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18856  129B  0086               	movwf	6
 18857  129C  3001               	movlw	1	; select bank3/4
 18858  129D  0087               	movwf	7
 18859  129E  1501               	bsf	1,2
 18860                           
 18861                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 18862  129F  0143               	movlb	3	; select bank3
 18863  12A0  085D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+384),w
 18864  12A1  008A               	movwf	10
 18865  12A2  085C               	movf	_EUSART1_OverrunErrorHandler^(0+384),w
 18866  12A3  000A               	callw
 18867  12A4  3192               	pagesel	$
 18868  12A5                     i1l4807:	
 18869                           
 18870                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 18871  12A5  0871               	movf	_eusart1RxHead,w	;volatile
 18872  12A6  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18873  12A7  0086               	movwf	6
 18874  12A8  3001               	movlw	1	; select bank3/4
 18875  12A9  0087               	movwf	7
 18876  12AA  0801               	movf	1,w
 18877  12AB  1903               	btfsc	3,2
 18878  12AC  2AB4               	goto	i1l4811
 18879                           
 18880                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 18881  12AD  0143               	movlb	3	; select bank3
 18882  12AE  085B               	movf	(_EUSART1_ErrorHandler+1)^(0+384),w
 18883  12AF  008A               	movwf	10
 18884  12B0  085A               	movf	_EUSART1_ErrorHandler^(0+384),w
 18885  12B1  000A               	callw
 18886  12B2  3192               	pagesel	$
 18887                           
 18888                           ;mcc_generated_files/eusart1.c: 230:     } else {
 18889  12B3  0008               	return
 18890  12B4                     i1l4811:	
 18891                           
 18892                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 18893  12B4  319F  275D         	fcall	_EUSART1_RxDataHandler
 18894  12B6  0008               	return
 18895  12B7                     __end_of_EUSART1_Receive_ISR:	
 18896                           
 18897                           	psect	text76
 18898  1E18                     __ptext76:	
 18899 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 18900 ;; Defined at:
 18901 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 18902 ;; Parameters:    Size  Location     Type
 18903 ;;		None
 18904 ;; Auto vars:     Size  Location     Type
 18905 ;;		None
 18906 ;; Return value:  Size  Location     Type
 18907 ;;                  1    wreg      void 
 18908 ;; Registers used:
 18909 ;;		None
 18910 ;; Tracked objects:
 18911 ;;		On entry : 0/0
 18912 ;;		On exit  : 0/0
 18913 ;;		Unchanged: 0/0
 18914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18919 ;;Total ram usage:        0 bytes
 18920 ;; Hardware stack levels used:    1
 18921 ;; This function calls:
 18922 ;;		Nothing
 18923 ;; This function is called by:
 18924 ;;		_EUSART1_Initialize
 18925 ;;		_EUSART1_Receive_ISR
 18926 ;; This function uses a non-reentrant model
 18927 ;;
 18928                           
 18929                           
 18930                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 18931  1E18                     _EUSART1_DefaultOverrunErrorHandler:	
 18932                           
 18933                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 18934                           
 18935                           ;incstack = 0
 18936                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 18937  1E18  0142               	movlb	2	; select bank2
 18938  1E19  121D               	bcf	29,4	;volatile
 18939                           
 18940                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 18941  1E1A  161D               	bsf	29,4	;volatile
 18942  1E1B  0008               	return
 18943  1E1C                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 18944                           
 18945                           	psect	text77
 18946  0800                     __ptext77:	
 18947 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 18948 ;; Defined at:
 18949 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 18950 ;; Parameters:    Size  Location     Type
 18951 ;;		None
 18952 ;; Auto vars:     Size  Location     Type
 18953 ;;		None
 18954 ;; Return value:  Size  Location     Type
 18955 ;;                  1    wreg      void 
 18956 ;; Registers used:
 18957 ;;		None
 18958 ;; Tracked objects:
 18959 ;;		On entry : 0/0
 18960 ;;		On exit  : 0/0
 18961 ;;		Unchanged: 0/0
 18962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18967 ;;Total ram usage:        0 bytes
 18968 ;; Hardware stack levels used:    1
 18969 ;; This function calls:
 18970 ;;		Nothing
 18971 ;; This function is called by:
 18972 ;;		_EUSART1_Initialize
 18973 ;;		_EUSART1_Receive_ISR
 18974 ;; This function uses a non-reentrant model
 18975 ;;
 18976                           
 18977                           
 18978                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 18979  0800                     _EUSART1_DefaultFramingErrorHandler:	
 18980                           
 18981                           ;incstack = 0
 18982                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 18983  0800  0008               	return
 18984  0801                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 18985                           
 18986                           	psect	text78
 18987  1E08                     __ptext78:	
 18988 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 18989 ;; Defined at:
 18990 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 18991 ;; Parameters:    Size  Location     Type
 18992 ;;		None
 18993 ;; Auto vars:     Size  Location     Type
 18994 ;;		None
 18995 ;; Return value:  Size  Location     Type
 18996 ;;                  1    wreg      void 
 18997 ;; Registers used:
 18998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18999 ;; Tracked objects:
 19000 ;;		On entry : 0/0
 19001 ;;		On exit  : 0/0
 19002 ;;		Unchanged: 0/0
 19003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19008 ;;Total ram usage:        0 bytes
 19009 ;; Hardware stack levels used:    1
 19010 ;; Hardware stack levels required when called:    1
 19011 ;; This function calls:
 19012 ;;		_EUSART1_RxDataHandler
 19013 ;; This function is called by:
 19014 ;;		_EUSART1_Initialize
 19015 ;;		_EUSART1_Receive_ISR
 19016 ;; This function uses a non-reentrant model
 19017 ;;
 19018                           
 19019                           
 19020                           ;psect for function _EUSART1_DefaultErrorHandler
 19021  1E08                     _EUSART1_DefaultErrorHandler:	
 19022                           
 19023                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 19024                           
 19025                           ;incstack = 0
 19026                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19027  1E08  319F  275D         	fcall	_EUSART1_RxDataHandler
 19028  1E0A  0008               	return
 19029  1E0B                     __end_of_EUSART1_DefaultErrorHandler:	
 19030                           
 19031                           	psect	text79
 19032  1F5D                     __ptext79:	
 19033 ;; *************** function _EUSART1_RxDataHandler *****************
 19034 ;; Defined at:
 19035 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 19036 ;; Parameters:    Size  Location     Type
 19037 ;;		None
 19038 ;; Auto vars:     Size  Location     Type
 19039 ;;		None
 19040 ;; Return value:  Size  Location     Type
 19041 ;;                  1    wreg      void 
 19042 ;; Registers used:
 19043 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19044 ;; Tracked objects:
 19045 ;;		On entry : 0/0
 19046 ;;		On exit  : 0/0
 19047 ;;		Unchanged: 0/0
 19048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19053 ;;Total ram usage:        1 bytes
 19054 ;; Hardware stack levels used:    1
 19055 ;; This function calls:
 19056 ;;		Nothing
 19057 ;; This function is called by:
 19058 ;;		_EUSART1_Receive_ISR
 19059 ;;		_EUSART1_DefaultErrorHandler
 19060 ;; This function uses a non-reentrant model
 19061 ;;
 19062                           
 19063                           
 19064                           ;psect for function _EUSART1_RxDataHandler
 19065  1F5D                     _EUSART1_RxDataHandler:	
 19066                           
 19067                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 19068                           
 19069                           ;incstack = 0
 19070                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 19071  1F5D  0142               	movlb	2	; select bank2
 19072  1F5E  0819               	movf	25,w	;volatile
 19073  1F5F  00F6               	movwf	??_EUSART1_RxDataHandler
 19074  1F60  0871               	movf	_eusart1RxHead,w
 19075  1F61  3EB2               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 19076  1F62  0086               	movwf	6
 19077  1F63  3001               	movlw	1	; select bank3/4
 19078  1F64  0087               	movwf	7
 19079  1F65  0876               	movf	??_EUSART1_RxDataHandler,w
 19080  1F66  0081               	movwf	1
 19081  1F67  3001               	movlw	1
 19082  1F68  00F6               	movwf	??_EUSART1_RxDataHandler
 19083  1F69  0876               	movf	??_EUSART1_RxDataHandler,w
 19084  1F6A  07F1               	addwf	_eusart1RxHead,f	;volatile
 19085                           
 19086                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 19087  1F6B  3008               	movlw	8
 19088  1F6C  0271               	subwf	_eusart1RxHead,w	;volatile
 19089  1F6D  1803               	btfsc	3,0
 19090                           
 19091                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 19092  1F6E  01F1               	clrf	_eusart1RxHead	;volatile
 19093                           
 19094                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 19095  1F6F  3001               	movlw	1
 19096  1F70  00F6               	movwf	??_EUSART1_RxDataHandler
 19097  1F71  0876               	movf	??_EUSART1_RxDataHandler,w
 19098  1F72  0141               	movlb	1	; select bank1
 19099  1F73  07ED               	addwf	_eusart1RxCount^(0+128),f	;volatile
 19100  1F74  0008               	return
 19101  1F75                     __end_of_EUSART1_RxDataHandler:	
 19102                           
 19103                           	psect	text80
 19104  1ED3                     __ptext80:	
 19105 ;; *************** function _ADCC_ThresholdISR *****************
 19106 ;; Defined at:
 19107 ;;		line 308 in file "mcc_generated_files/adcc.c"
 19108 ;; Parameters:    Size  Location     Type
 19109 ;;		None
 19110 ;; Auto vars:     Size  Location     Type
 19111 ;;		None
 19112 ;; Return value:  Size  Location     Type
 19113 ;;                  1    wreg      void 
 19114 ;; Registers used:
 19115 ;;		wreg, status,2, status,0, pclath, cstack
 19116 ;; Tracked objects:
 19117 ;;		On entry : 0/0
 19118 ;;		On exit  : 0/0
 19119 ;;		Unchanged: 0/0
 19120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19125 ;;Total ram usage:        0 bytes
 19126 ;; Hardware stack levels used:    1
 19127 ;; Hardware stack levels required when called:    1
 19128 ;; This function calls:
 19129 ;;		Absolute function
 19130 ;;		_ADCC_DefaultInterruptHandler
 19131 ;;		_adcThresholdHandler
 19132 ;; This function is called by:
 19133 ;;		_INTERRUPT_InterruptManager
 19134 ;; This function uses a non-reentrant model
 19135 ;;
 19136                           
 19137                           
 19138                           ;psect for function _ADCC_ThresholdISR
 19139  1ED3                     _ADCC_ThresholdISR:	
 19140                           
 19141                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 19142                           
 19143                           ;incstack = 0
 19144                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 19145  1ED3  014E               	movlb	14	; select bank14
 19146  1ED4  108D               	bcf	13,1	;volatile
 19147                           
 19148                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 19149  1ED5  0142               	movlb	2	; select bank2
 19150  1ED6  086B               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19151  1ED7  046C               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19152  1ED8  1903               	btfsc	3,2
 19153  1ED9  0008               	return
 19154                           
 19155                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 19156  1EDA  086C               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19157  1EDB  008A               	movwf	10
 19158  1EDC  086B               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19159  1EDD  000A               	callw
 19160  1EDE  319E               	pagesel	$
 19161  1EDF  0008               	return
 19162  1EE0                     __end_of_ADCC_ThresholdISR:	
 19163                           
 19164                           	psect	text81
 19165  1E07                     __ptext81:	
 19166 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 19167 ;; Defined at:
 19168 ;;		line 320 in file "mcc_generated_files/adcc.c"
 19169 ;; Parameters:    Size  Location     Type
 19170 ;;		None
 19171 ;; Auto vars:     Size  Location     Type
 19172 ;;		None
 19173 ;; Return value:  Size  Location     Type
 19174 ;;                  1    wreg      void 
 19175 ;; Registers used:
 19176 ;;		None
 19177 ;; Tracked objects:
 19178 ;;		On entry : 0/0
 19179 ;;		On exit  : 0/0
 19180 ;;		Unchanged: 0/0
 19181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19186 ;;Total ram usage:        0 bytes
 19187 ;; Hardware stack levels used:    1
 19188 ;; This function calls:
 19189 ;;		Nothing
 19190 ;; This function is called by:
 19191 ;;		_ADCC_Initialize
 19192 ;;		_ADCC_ThresholdISR
 19193 ;; This function uses a non-reentrant model
 19194 ;;
 19195                           
 19196                           
 19197                           ;psect for function _ADCC_DefaultInterruptHandler
 19198  1E07                     _ADCC_DefaultInterruptHandler:	
 19199                           
 19200                           ;incstack = 0
 19201                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 19202  1E07  0008               	return
 19203  1E08                     __end_of_ADCC_DefaultInterruptHandler:	
 19204                           
 19205                           	psect	text82
 19206  1E14                     __ptext82:	
 19207 ;; *************** function _adcThresholdHandler *****************
 19208 ;; Defined at:
 19209 ;;		line 27 in file "beat.c"
 19210 ;; Parameters:    Size  Location     Type
 19211 ;;		None
 19212 ;; Auto vars:     Size  Location     Type
 19213 ;;		None
 19214 ;; Return value:  Size  Location     Type
 19215 ;;                  1    wreg      void 
 19216 ;; Registers used:
 19217 ;;		None
 19218 ;; Tracked objects:
 19219 ;;		On entry : 0/0
 19220 ;;		On exit  : 0/0
 19221 ;;		Unchanged: 0/0
 19222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19227 ;;Total ram usage:        0 bytes
 19228 ;; Hardware stack levels used:    1
 19229 ;; This function calls:
 19230 ;;		Nothing
 19231 ;; This function is called by:
 19232 ;;		_BEAT_init
 19233 ;;		_ADCC_ThresholdISR
 19234 ;; This function uses a non-reentrant model
 19235 ;;
 19236                           
 19237                           
 19238                           ;psect for function _adcThresholdHandler
 19239  1E14                     _adcThresholdHandler:	
 19240                           
 19241                           ;beat.c: 28:     thresholdExceeded = 1;
 19242                           
 19243                           ;incstack = 0
 19244                           ; Regs used in _adcThresholdHandler: []
 19245  1E14  0141               	movlb	1	; select bank1
 19246  1E15  01E9               	clrf	_thresholdExceeded^(0+128)
 19247  1E16  0AE9               	incf	_thresholdExceeded^(0+128),f
 19248  1E17  0008               	return
 19249  1E18                     __end_of_adcThresholdHandler:	
 19250  007E                     btemp	set	126	;btemp
 19251  007E                     int$flags	set	126
 19252  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        33
    BSS         145
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     73      80
    BANK2            80      0      80
    BANK3            80      2      70
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    numControl_Set@val	PTR int  size(2) Largest target is 2
		 -> cycleSpeed(BANK2[2]), address(BANK1[2]), 

    decrement@val	PTR int  size(2) Largest target is 2
		 -> cycleSpeed(BANK2[2]), address(BANK1[2]), 

    increment@val	PTR int  size(2) Largest target is 2
		 -> cycleSpeed(BANK2[2]), address(BANK1[2]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    S1461$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MENU_task->_pulseColors
    _menuButtons->_BUTTONS_isClicked
    _numControl_resetTimer->_CLOCK_getTime
    _numControl_Set->_decrement
    _numControl_Set->_increment
    _increment->_TM1650_fastPrintNum
    _decrement->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _LED_DMX->_LED_setColor
    _LED_setHSL->_HueToRGB
    ___fltol->_HueToRGB
    ___fldiv->___xxtofl
    _HueToRGB->___flge
    ___flsub->___flmul
    ___fladd->__Umul8_16
    ___flmul->___fladd
    ___flge->___flmul
    _BEAT_task->___lwdiv
    _DMX_task->_CLOCK_getTime
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MENU_task
    _MENU_task->_cycleColors
    _pulseColors->_LED_setHSL
    _cycleColors->_LED_setHSL
    _LED_Beat->_fadeColor
    _fadeColor->_LED_setHSL
    _LED_setHSL->___fltol
    ___fltol->_HueToRGB

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  162797
                                              0 BANK3      2     2      0
                          _BEAT_init
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                           _DMX_task
      _EUSART1_SetRxInterruptHandler
                          _MENU_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MENU_task                                            1     1      0  156823
                                             72 BANK1      1     1      0
                          _BEAT_task
                           _LED_Beat
                            _LED_DMX
                      _TM1650_enable
                    _TM1650_setDigit
                        _cycleColors
                            _isDMXOn
                        _menuButtons
                     _numControl_Set
                        _pulseColors
 ---------------------------------------------------------------------------------
 (2) _pulseColors                                          1     1      0   44151
                                             79 BANK0      1     1      0
                         _LED_setHSL
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _menuButtons                                          0     0      0     201
                  _BUTTONS_isClicked
              _numControl_resetTimer
 ---------------------------------------------------------------------------------
 (3) _numControl_resetTimer                                0     0      0       0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (2) _isDMXOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cycleColors                                         14    14      0   52127
                                             58 BANK1     14    14      0
                      _CLOCK_getTime
                         _LED_setHSL
                     _numControl_Set
 ---------------------------------------------------------------------------------
 (2) _numControl_Set                                      10     4      6   15570
                                             42 BANK0     10     4      6
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                          _decrement
                          _increment
 ---------------------------------------------------------------------------------
 (3) _increment                                            8     2      6    6313
                                             34 BANK0      8     2      6
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _decrement                                            8     2      6    6313
                                             34 BANK0      8     2      6
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (4) _TM1650_fastPrintNum                                  7     5      2    5907
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _TM1650_setDigit                                      7     4      3    4392
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isClicked                                    4     1      3     201
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _LED_DMX                                             11    11      0     948
                                             22 BANK0     11    11      0
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_Beat                                             0     0      0   36446
                      _BEAT_detected
                          _fadeColor
 ---------------------------------------------------------------------------------
 (3) _fadeColor                                            4     4      0   36446
                                             58 BANK1      4     4      0
                      _CLOCK_getTime
                         _LED_setHSL
 ---------------------------------------------------------------------------------
 (3) _LED_setHSL                                          43    33     10   36381
                                             15 BANK1     43    33     10
                           _HueToRGB
                       _LED_setColor
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     697
                                              4 BANK1     11     7      4
                           _HueToRGB (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _LED_setColor                                        22    19      3     948
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (4) _HueToRGB                                            16     4     12   16255
                                             67 BANK0     12     0     12
                                              0 BANK1      4     4      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4705
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3200
                                              9 BANK0     20    12      8
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    5693
                                             29 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1246
                                             55 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_task                                             4     4      0      65
                                              2 BANK0      4     4      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (13) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (13) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _DMX_task
     _CLOCK_getTime
   _EUSART1_SetRxInterruptHandler
   _MENU_task
     _BEAT_task
       _ADCC_SetUpperThreshold
       _CLOCK_getTime
       _TM1650_isEnabled
       ___lwdiv
     _LED_Beat
       _BEAT_detected
       _fadeColor
         _CLOCK_getTime
         _LED_setHSL
           _HueToRGB
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           _LED_setColor
           ___fladd
             __Umul8_16 (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___xxtofl
     _LED_DMX
       _LED_setColor
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _TM1650_setDigit
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _cycleColors
       _CLOCK_getTime
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fleq
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
       _numControl_Set
         _BUTTONS_isClicked
         _CLOCK_getTime
         _TM1650_enable
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         _decrement
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
         _increment
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
     _isDMXOn
     _menuButtons
       _BUTTONS_isClicked
       _numControl_resetTimer
         _CLOCK_getTime
     _numControl_Set
       _BUTTONS_isClicked
       _CLOCK_getTime
       _TM1650_enable
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       _decrement
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
       _increment
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
     _pulseColors
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fleq
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
       ___fldiv
         ___xxtofl (ARG)
       ___fleq
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     162       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     49      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      2      46      12       87.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      20      14       40.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     162      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 01 00:30:28 2019

                                   _pulseColors 0864                        _eusart1TxBufferRemaining 016F  
                                  ___fldiv@aexp 0047                                    ___fldiv@bexp 0046  
                      ??_ADCC_SetUpperThreshold 0022                                    ___fldiv@sign 003F  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0076  
                                    HueToRGB@v1 0063                                      HueToRGB@v2 0067  
                                    HueToRGB@vH 006B                                              _up 0152  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00D9  
                           __Umul8_16@word_mpld 0026                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 1E14                                             l802 0988  
                                           l804 09EB                                             l970 0E82  
                                           l969 0E4F                                             _bpm 013F  
                       __size_of_PMD_Initialize 000A                           _numControl_resetTimer 1EA5  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ?_cycleColors 0076                                    ___flmul@aexp 004B  
                                  ___flmul@bexp 0050                                     ?_LED_setHSL 00AF  
                                  ___flmul@sign 004A                                    ___flmul@temp 0055  
                                  ___flmul@prod 0051                                   __CFG_BBEN$OFF 0000  
                               __end_of_LED_DMX 1402                                 __end_of_DMX_ISR 10E8  
                              __end_of_I2C1_ISR 0C3A                                    ___fltol@exp1 00AE  
                                          l1000 0844                                            l1072 0890  
                                          l1450 138B                                            l1603 0D9D  
                                          l1451 13A5                                            l1462 1596  
                                          l1624 0E14                                            l1616 0DFC  
                                          l4201 0649                                            l1482 1497  
                                          l1730 1728                                            l1722 170A  
                                          l1459 1548                                            l1660 078C  
                                          l1716 16D4                                            l4301 075C  
                                          l4141 13B7                                            l1582 0C87  
                                          l1662 0799                                            l1638 066D  
                                          l1735 1071                                            l4215 0662  
                                          l1729 171E                                            l1690 0617  
                                          l1586 0D1A                                            l4315 0795  
                                          l1659 0774                                            l4235 0698  
                                          l4219 0665                                            l6003 080B  
                                          l1588 0CFD                                            l4261 06F8  
                                          l4229 068C                                            l4333 16E3  
                          _ADCC_StartConversion 1E41                                            l4255 06DF  
                                          l4263 06C1                                            l4327 16CC  
                                          l5311 1FFA                                            l5401 041C  
                                          l4281 071A                                            l4265 06FD  
                                          l4361 1743                                            l4337 16E7  
                                          l5305 1159                                            l6033 15EC  
                                          l6017 101C                                            l3803 0DD0  
                                          l3723 0D05                                            l3715 0CCD  
                                          l3651 0C54                                            l4291 0733  
                                          l4195 063E                                            l4347 171C  
                                          l4339 16F7                                            l6035 15F0  
                                          l6051 088C                                            l6213 0982  
                                          l5341 122C                                            l5317 106B  
                                          l5501 05D8                                            l3821 0E0C  
                                          l3741 0D28                                            l3725 0D07  
                                          l3733 0D15                                            l4349 170F  
                                          l6053 08A8                                            l6207 0952  
                                          l5351 1247                                            l5511 0604  
                                          l5415 0435                                            l3751 0D3C  
                                          l3655 0C57                                            l4287 0731  
                                          l4279 0703                                            l4199 0641  
                                          l6119 1765                                            l5505 05ED  
                                          l5417 0437                                            l3825 0E10  
                                          l3657 0C5F                                            l5601 1460  
                                          l6057 08F2                                            l6145 17B8  
                                          l6129 1777                                            l6227 09D5  
                                          l6219 09A9                                            l5347 123E  
                                          l5339 1220                                            l5427 044D  
                                          l5419 043F                                            l3675 0C7C  
                                          l5275 1E1C                                            l5363 1167  
                                          l6163 17FD                                            l6147 17BB  
                                          l3853 1562                                            l3749 0D3A  
                                          l3685 0C91                                            l5293 07E0  
                                          l5365 1173                                            l5373 1188  
                                          l5533 14EE                                            l5701 11DD  
                                          l6261 1277                                            l6191 12EC  
                                          l6183 12E1                                            l3791 0DC3  
                                          l3759 0D4B                                            l3679 0C7F  
                                          l5295 07E6                                            l5527 14EA  
                                          l3857 157C                                            l5481 0596  
                                          l3785 0DBC                                            l3777 0DAF  
                                          l3769 0D95                                            l3793 0DC5  
                                          l5553 0F1D                                            l5617 1485  
                                          l5289 07D9                                            l5641 1F2A  
                                          l5369 117F                                            l5491 05AF  
                                          l5627 14A4                                            l5619 1493  
                                          l5707 1202                                            l5741 1E63  
                                          l5397 0412                                            l5709 120C  
                                          l5487 05AD                                            l5479 057F  
                                          l5399 0414                                            l3799 0DCE  
                                          l5559 0F51                                            l5655 1095  
                                          l5649 1090                                            l5675 01B5  
                                          l5597 1457                                            l5693 03E7  
                                          l5669 00F2                                            l5765 0852  
                                          l5757 0840                                            l5951 0A36  
                                          l5793 1691                                            l5785 166C  
                                          l5971 0A71                                            l5955 0A3D  
                                          l5699 11D4                                            l5973 0A84  
                                          l5987 0AB8                                  ?_TM1650_enable 0076  
                                          _LATA 0018                                            _LATB 0019  
                                          u3015 0DB0                                            _LATC 001A  
                                          u3115 0DE7                                            u4025 0706  
                                          u4115 074A                                            u4125 0765  
                                          u4045 070F                                            u4205 1704  
                                          u4135 077E                                            u4225 1716  
                                          u6110 085D                                            u4265 1730  
                                          u4185 16F0                                            u2850 0CEC  
                                          u2860 0CED                                            u6300 15FB  
                                          _PMD0 0796                                            u2845 0CE1  
                                          _PMD1 0797                                            u6310 1621  
                                          _PMD2 0798                                            u5415 1072  
                                          u6055 11C9                                            _PMD3 0799  
                                          _PMD4 079A                                            u6225 0A99  
                                          u6065 11F7                                            _PMD5 079B  
                                          _PMD6 079C                                            u3755 13B3  
                                          u5435 1FB9                                            _PMD7 079D  
                                          u2973 0D5D                                            u2965 0D40  
                                          u5525 116A                                            u6350 0929  
                                          u5455 1223                                            u6175 0A1F  
                                          u2895 0D0B                                            u5705 0582  
                                          u5545 1179                                            u5475 122D  
                                          u3955 06C9                                            u5555 1180  
                                          u5485 1237                                            u5805 05E1  
                                          u5725 058B                                            u3965 06D0  
                                          u6285 15C8                                            u5495 123F  
                                          u5815 05F7                                            u5655 04C3  
                                          u6607 1264                                            u5665 04F2  
                                          u3985 06D9                                            u5675 0548  
                                          u3995 06ED                                            u5915 1469  
                                          u6485 0955                                            u5685 055F  
                                          u5845 152A                                            u6494 0974  
                                          u6495 0973                                            u5695 056E  
                                          u5945 1486                                            u5795 05C6  
                                          u5975 149B                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 __CFG_FCMEN$ON 0000                                   ?_BUTTONS_init 0076  
                                 ?_BUTTONS_task 0076                            ?_adcThresholdHandler 0076  
                                          _isOn 0153                                            _main 124C  
                                          _down 0151                                            _init 1040  
                                          _menu 014F                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                              cycleColors@color 00DE                         __size_of_numControl_Set 008E  
                                          start 0039                                 ___fldiv@new_exp 0040  
                       __end_of_TM1650_setDigit 1FC7                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                I2C1_MasterWriteTRBBuild@length 0021                              __size_of_MENU_task 00B4  
                       __end_of_TMR0_Initialize 1F08                                      _i2c1_state 00EC  
                              __end_of_LED_Beat 0812                  ??_TMR0_DefaultInterruptHandler 0076  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1E9B                        __end_of_TM1650_isEnabled 1E11  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 01AA  
                                 ___fltol@sign1 00AD                                           _ADCAP 010E  
                                         _ADACT 0117                                 __end_of___fladd 0E1C  
                                         ?_main 0076                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 079E  
                                         _ADREF 0116                               __end_of_I2C1_Stop 1F8F  
                                  ?_menuButtons 0076                                   __CFG_WDTE$OFF 0000  
                                         _ADRPT 009A                                 __end_of___flmul 0624  
                               __end_of___flsub 1040                                 __end_of___fltol 14B3  
                              __end_of_DMX_task 12EE                                           _LATB6 00CE  
                               __end_of___lwdiv 124C                      _ADCC_ADTI_InterruptHandler 016B  
                                         i1l106 1FA8                                           i1l402 0AEF  
                                         i1l413 0B45                                           i1l414 0B51  
                                         i1l431 0BC4                                           i1l407 0B22  
                                         i1l432 0BD2                                           i1l424 0B93  
                                         i1l408 0B23                                           i1l280 000E  
                               __end_of___lwmod 118D                                           i1l443 1EF0  
                                         i1l283 0017                                           i1l436 0BF9  
                                         i1l428 0BB5                                           i1l285 001E  
                                         i1l294 0037                                           i1l287 0028  
                                         i1l289 0032                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
                               __end_of_isDMXOn 1E14                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         _TXREG 011A               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 1E0E                       ?_TMR0_SetInterruptHandler 0020  
                          _EUSART1_Transmit_ISR 1F8F                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 0800                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                               __end_of_initLED 1136                                           _delay 0164  
                                         _dmxOn 014B                                           _color 01D0  
                                         _count 0145                                           _enter 0150  
                         ?_ADCC_StartConversion 0076                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0076                               __end_of_BEAT_init 1F5D  
                             __end_of_BEAT_task 0ADB                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0801  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0076  
           ?_EUSART1_DefaultFramingErrorHandler 0076              _EUSART1_DefaultFramingErrorHandler 0800  
               I2C1_MasterWriteTRBBuild@address 0022                                 __initialization 003B  
                          TM1650_setDigit@digit 003A                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                      __end_of_EUSART1_Initialize 1370  
                                  __end_of_main 1281                                    __end_of_init 1060  
                           __size_of_LED_setHSL 035E                                __end_of_HueToRGB 1000  
                                 ?_LED_setColor 0020                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 1E53                     ?_INTERRUPT_InterruptManager 0076  
                                   _i2c1_object 0120                                          ??_main 01E4  
                                        ??_init 0023                          ?_numControl_resetTimer 0076  
                                     ??_LED_DMX 0036                                       ??_DMX_ISR 0076  
                         ?_EUSART1_Transmit_ISR 0076                                 ??_TM1650_enable 0034  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR1L 030C  
                                        _CCPR3H 0315                                          _CCPR2L 0310  
                                        _CCPR4H 0319                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                             __end_of_MENU_task 1800                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5131 10CF                                          i1l5133 10D3  
                                        i1l4801 1296                                          i1l4633 1F8D  
                                __CFG_WDTCCS$SC 0000                                          i1l4811 12B4  
                                        i1l4807 12A5                                          i1l4911 0B88  
                                        i1l4933 0BB8                                          i1l4925 0BA1  
                                        i1l4871 0B2F                                          i1l4863 0B1C  
                                        i1l4961 0BFD                                          i1l4945 0BD9  
                                        i1l6299 0C16                                          i1l4963 0C00  
                                        i1l4891 0B6A                                          i1l4859 0B15  
                                        i1l4971 0C0D                                          i1l4965 0C04  
                                        i1l4949 0BE0                                          i1l4877 0B3F  
                                        _OSCFRQ 0893                                   _lastTimeCycle 0133  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                        _TRISC3 00A3                                          _TRISB6 009E  
                                        _TRISC4 00A4                                          _TRISC6 00A6  
                                        _TRISC7 00A7                                   _lastTimePulse 012F  
                              __end_of___xxtofl 174C                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00EA  
                                        ___flge 152D                                          ___fleq 1370  
                                ??_LED_setColor 0023                     __end_of_TM1650_fastPrintNum 152D  
                             _ADCC_ThresholdISR 1ED3                                       ??___fladd 0031  
                                     ??___fldiv 0036                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0045                                       ??___flsub 005F  
                                     ??___fltol 00A8                                       ??___lwdiv 0024  
                                     ??___lwmod 0024                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                       ??_isDMXOn 0020  
                              ?_TMR0_Initialize 0076                              ?_ADCC_ThresholdISR 0076  
                                     ?_I2C1_ISR 0076                          __size_of_BEAT_detected 0009  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 0129                            __size_of_TM1650_init 0004  
                                     ??_initLED 0020                                 _ADCC_Initialize 10E8  
                                _PMD_Initialize 1E9B                                    ??_CLOCK_init 0022  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0076  
                        ??_ADCC_StartConversion 0020            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                          __size_of_cycleColors 007F                          _ADCC_SetUpperThreshold 1E38  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                 _eusart1RxBuffer 01B2  
                               _eusart1TxBuffer 01BA                                      ___flge@ff1 0057  
                                    ___flge@ff2 005B                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 1F31  
                                  ___xxtofl@val 0020                                      ___fleq@ff1 0020  
                                    ___fleq@ff2 0024                         __end_of__initialization 0096  
                                     ?_LED_Beat 0076                                  _numControl_Set 1628  
                            ?_SYSTEM_Initialize 0076                                      ___fltol@f1 00A4  
                                     ?_DMX_task 0076                                  _i2c1_trb_count 0157  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1EE0  
                 __end_of_EUSART1_RxDataHandler 1F75                              __size_of_fadeColor 0052  
                         _I2C1_FunctionComplete 1EE0                            _I2C1_BusCollisionISR 1E0B  
                                __pcstackCOMMON 0076                              __end_of_CLOCK_init 1E2F  
                                  ?_pulseColors 0076                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 0002                                    __pidataBANK2 1EB0  
                                  __pidataBANK3 1F08                             ??_SYSTEM_Initialize 0023  
                                     ?_TMR0_ISR 0076                     TM1650_fastPrintNum@numWrite 003E  
                            __size_of_decrement 002F                                      ??_I2C1_ISR 0078  
                          __end_of_BUTTONS_init 144D                          __end_of_PMD_Initialize 1EA5  
                          __end_of_BUTTONS_task 0A02                          ??_EUSART1_Transmit_ISR 0076  
                          __size_of_menuButtons 001D                     __end_of_EUSART1_Receive_ISR 12B7  
                                  ??_LED_setHSL 00B9                               _thresholdExceeded 00E9  
                   ADCC_StartConversion@channel 0020                               LED_setColor@green 0020  
                             LED_setColor@white 0021                       __end_of_SYSTEM_Initialize 1F46  
                                 _eusart1RxHead 0071                                   _eusart1TxHead 0073  
                                 _eusart1RxTail 0070                                      __pbssBANK1 00E9  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                     ?_HueToRGB 0063                                      __pbssBANK4 0220  
                                 _eusart1TxTail 0072               _EUSART1_TxDefaultInterruptHandler 01E2  
               ??_EUSART1_SetRxInterruptHandler 0022                          __end_of_numControl_Set 16B6  
                                 _BEAT_detected 1E5C                                      ??_LED_Beat 006F  
                            __size_of_increment 002E                                      ??_DMX_task 0022  
                             __end_of__Umul8_16 1080                           ?_I2C1_BusCollisionISR 0076  
               __end_of_EUSART1_SetErrorHandler 1E6E                                      __pmaintext 124C  
                                       ?___flge 0057                                         ?___fleq 0020  
              __end_of_TMR0_SetInterruptHandler 1E5C                                      ??_TMR0_ISR 0076  
                               __CFG_PPS1WAY$ON 0000                                    LED_setHSL@v1 00CB  
                                  LED_setHSL@v2 00D3                                writeData@address 0032  
                       __end_of_ADCC_Initialize 110E                              __end_of_LED_setHSL 03F8  
                                    __pintentry 0004                                 _I2C1_Initialize 1FC7  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1E38  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1E2F  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                                  increment@max 0044                                    increment@min 0046  
                                  increment@val 0042                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0076                               ?_TM1650_isEnabled 0076  
        __end_of_EUSART1_SetFramingErrorHandler 1E77         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 1E6E                                         _LED_DMX 13B9  
                                       _DMX_ISR 10C4                                       ?___xxtofl 0020  
                            ??_TM1650_isEnabled 0020                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                     _I2C1_Stop 1F75                               __end_of_fadeColor 0864  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                    _dmxPointer 0139                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 132A  
                             __end_of_charTable 1860                             _CLOCK_timerCallback 1E21  
                                    ??_HueToRGB 006F                                  ?_BEAT_detected 0076  
                             __end_of_decrement 1217                                 ?_numControl_Set 004A  
                 I2C1_MasterTRBInsert@ptrb_list 0020                                      _cycleSpeed 0169  
                            __size_of_writeData 001D                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0076                                       _BEAT_init 1F46  
                 __size_of_I2C1_MasterTRBInsert 0055                                       _BEAT_task 0A02  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 00EB  
                               __size_of___flge 007C                                 __size_of___fleq 0049  
                                       ___fladd 0C3A                                         ___fldiv 0624  
                          ?_CLOCK_timerCallback 0076                                         ___flmul 03F8  
                                       ___flsub 1021                                         ___fltol 144D  
                                       ___lwdiv 1217                                         ___lwmod 1160  
                       ??_numControl_resetTimer 0022                                         _address 00EE  
                             numControl_Set@max 004C                               numControl_Set@min 004E  
                             numControl_Set@val 004A                                         _isDMXOn 1E11  
                                       _dmxData 25EF                                         __ptext1 110E  
                                       __ptext2 1000                                         __ptext3 1F31  
                                       __ptext4 1EF4                                         __ptext5 1E9B  
                                       __ptext6 118D                                         __ptext7 1E92  
                                       __ptext8 1FC7                                         __ptext9 132A  
                             __end_of_increment 11E8                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                         _initLED 110E  
                                       _lastRun 013D                                    DMX_task@time 0024  
                         _OSCILLATOR_Initialize 1E92                                       _T2CONbits 028E  
                                       _buttons 0220                                      ??___xxtofl 0024  
                            _EUSART1_Initialize 132A                        ??_PIN_MANAGER_Initialize 0020  
                               __CFG_WRTSAF$OFF 0000                                      ?_I2C1_Stop 0076  
                   __end_of_adcThresholdHandler 1E18                   ??_EUSART1_DefaultErrorHandler 0077  
                    __size_of_SYSTEM_Initialize 0015                            I2C1_ISR@pi2c_buf_ptr 0156  
                                       clrloop0 1EBC                            end_of_initialization 0096  
                           ?_EUSART1_Initialize 0076                                         init@btn 0024  
                                       init@pin 0022                                         init_ram 1EC7  
                   _EUSART1_OverrunErrorHandler 01DC                                         initloop 1EC8  
                                     _MENU_task 174C                          ??_I2C1_BusCollisionISR 0076  
                       __end_of_I2C1_Initialize 1FE3           __end_of_EUSART1_SetRxInterruptHandler 1E89  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 1E80  
                                    ?_BEAT_init 0076                                      ?_BEAT_task 0076  
                         __size_of_BUTTONS_init 004B                           __size_of_BUTTONS_task 00D2  
                         ??_CLOCK_timerCallback 0076                                ?_ADCC_Initialize 0076  
                          ??_EUSART1_Initialize 0022                            __size_of_pulseColors 00CC  
                         __CFG_WDTCPS$WDTCPS_31 0000                        _TMR0_SetInterruptHandler 1E53  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 015F  
                             __end_of_writeData 2000                                     ___fladd@grs 003C  
                       ?_ADCC_SetUpperThreshold 0020                                   ___xxtofl@sign 0028  
                                    _pulseColor 01C6                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 1F31               I2C1_ISR@i2c_10bit_address_restart 0154  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 004C  
                               cycleColors@F111 01A0                                    _BUTTONS_init 1402  
                                  _BUTTONS_task 0930                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                      ?_MENU_task 0076  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                             __size_of_LED_Beat 0010                         I2C1_MasterWrite@address 0028  
                               cycleColors@time 00DC            __size_of_EUSART1_DefaultErrorHandler 0003  
                             __size_of_DMX_task 0037                  ??_ADCC_DefaultInterruptHandler 0076  
                                __end_of___flge 15A9                                  __end_of___fleq 13B9  
                                 ??_TM1650_init 0035                         I2C1_MasterWrite@trBlock 0159  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0077  
                      __size_of_TM1650_setDigit 001C                          ?_OSCILLATOR_Initialize 0076  
                __end_of_ADCC_SetUpperThreshold 1E41                    __size_of_TM1650_fastPrintNum 007A  
                         __size_of_LED_setColor 003C                                    _lastDetected 014D  
                                 ??_cycleColors 00DA                             start_initialization 003B  
                                   ??_I2C1_Stop 0076                        __size_of_TMR0_Initialize 0014  
               __size_of_PIN_MANAGER_Initialize 002D                             TM1650_setDigit@data 0034  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020   EUSART1_SetTxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 1080  
                                   _fadeAmmount 0162                              ?_BUTTONS_isClicked 0020  
                             __size_of_HueToRGB 01E4                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0076                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                                        ??___flge 005F  
                                      ??___fleq 0028                             ??_BUTTONS_isClicked 0023  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 1F5D  
                                  _LED_setColor 12EE                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 1060                                     __pdataBANK1 00EE  
                                   __pdataBANK2 0160                                     __pdataBANK3 01C6  
                                 _CLOCK_getTime 1E4A                                   ??_menuButtons 0024  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 00ED  
                                     ___fladd@a 002D                                       ___fladd@b 0029  
                                   _changeColor 0149                                        ?_LED_DMX 0076  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 25EF                                        ?_DMX_ISR 0076  
                           __end_of_TM1650_init 1004                                       ___flmul@a 0041  
                                     ___flmul@b 003D                                     __pbssCOMMON 0070  
                                     ___flsub@a 0057                                       ___flsub@b 005B  
             _EUSART1_RxDefaultInterruptHandler 01E0                                       ___latbits 0003  
                 __size_of_EUSART1_Transmit_ISR 001C                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00A0                                   __pcstackBANK3 01E4  
                              ??_numControl_Set 0050                                   _i2c1_tr_queue 015D  
                             __size_of___xxtofl 0096                       __end_of_BUTTONS_isClicked 10A1  
                           __end_of_cycleColors 1628                                       _fadeColor 0812  
               ??_EUSART1_SetTxInterruptHandler 0022                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0076  
                     __size_of_TM1650_isEnabled 0003                    __size_of_EUSART1_Receive_ISR 0036  
                              LED_setColor@blue 0022                                    _currentState 0160  
                                     _charTable 1800                                     ??_MENU_task 00E8  
                         _TMR0_InterruptHandler 016D                                       __pnvBANK2 016B  
                                     __pnvBANK3 01DA                                       _decrement 11E8  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 118D  
                                      ?___fladd 0029                                        ?___fldiv 002E  
                                      ?___flmul 003D                                        ?___flsub 0057  
                                      ?___fltol 00A4                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0020                                        ?___lwmod 0020  
                                ?_CLOCK_getTime 0020                                        ?_isDMXOn 0076  
                                      _I2C1_ISR 0ADB                                   LED_setHSL@hue 00CF  
                                 LED_setHSL@hsl 00AF                                   LED_setHSL@rgb 00D7  
                  ??_INTERRUPT_InterruptManager 007C                                 writeData@status 0033  
                __size_of_numControl_resetTimer 000B                   __end_of_numControl_resetTimer 1EB0  
                              _I2C1_MasterWrite 1136                                        _BAUD1CON 011F  
                                      ?_initLED 0076                    __end_of_I2C1_MasterTRBInsert 07F3  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1E1C     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0076             ?_EUSART1_DefaultOverrunErrorHandler 0076  
            _EUSART1_DefaultOverrunErrorHandler 1E18                            _EUSART1_ErrorHandler 01DA  
                       _EUSART1_SetErrorHandler 1E65                                       _increment 11BA  
                             ??_TM1650_setDigit 0037                             __end_of_menuButtons 1021  
                              ___lwdiv@quotient 0026                                    decrement@max 0044  
                                  decrement@min 0046                                    decrement@val 0042  
                                      _T2CLKCON 0290                                      ?_fadeColor 0076  
      __end_of_I2C1_WaitForLastPacketToComplete 1E21       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0076  
              _I2C1_WaitForLastPacketToComplete 1E1C                          I2C1_MasterRead@trBlock 01C2  
                             ??_TMR0_Initialize 0022                                        _LED_Beat 0802  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0023  
                                     clear_ram0 1EBB                                        _PIE0bits 0716  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                    ?_decrement 0042                                        _DMX_task 12B7  
           __size_of_INTERRUPT_InterruptManager 0035                      ??_TMR0_SetInterruptHandler 0022  
                                      _PIR0bits 070C                                        _PIR1bits 070D  
                                      _PIR3bits 070F                            TM1650_fastPrintNum@i 0040  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0076  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 07F3  
                                      _SSP1STAT 018F                                     _TM1650_init 1000  
                                     _threshold 0166                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                __size_of_LED_DMX 0049  
                                   _cycleColors 15A9                                __size_of_DMX_ISR 0024  
                                    ?_increment 0042                                       _writeData 1FE3  
                    __size_of_BUTTONS_isClicked 0021                                        _HueToRGB 0E1C  
                                   _hueValCycle 0131                    __size_of_adcThresholdHandler 0004  
                                   _hueValPulse 012D                     __end_of_CLOCK_timerCallback 1E27  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 14B3  
                                    _ADSTATbits 0115                              controller@lastTime 012B  
         __end_of_EUSART1_SetTxInterruptHandler 1E92          __size_of_EUSART1_SetTxInterruptHandler 0009  
                 _EUSART1_SetTxInterruptHandler 1E89                   __size_of_I2C1_BusCollisionISR 0003  
                                 ??_pulseColors 006F                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 0155                                 _LED_setHSL$2872 00BB  
                               _LED_setHSL$2873 00C3                                 _LED_setHSL$2874 00C7  
                               _LED_setHSL$2875 00BF                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fladd 01E2  
                              __size_of___fldiv 017A                                __size_of___flmul 022C  
                              __size_of___flsub 001F                                __size_of___fltol 0066  
                   __size_of_EUSART1_Initialize 0046                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                                __size_of_isDMXOn 0003  
              __end_of_I2C1_MasterWriteTRBBuild 10C4                                     _menuButtons 1004  
                          ?_TM1650_fastPrintNum 003B                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                                        _fadeTime 0125  
                               LED_setColor@lo1 0027                                 LED_setColor@lo2 002B  
                           TM1650_enable@enable 0034                                 LED_setColor@lo3 002F  
                               LED_setColor@lo4 0033             __end_of_EUSART1_DefaultErrorHandler 1E0B  
                   _EUSART1_DefaultErrorHandler 1E08                                 LED_setColor@red 0035  
                            numControl_Set@time 0052                                     _currentTime 0147  
                                    _CLOCK_init 1E27                                __size_of_initLED 0028  
                                      ___xxtofl 16B6                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0074                                 ___lwdiv@counter 0025  
                                      _detected 014E                                      ?_writeData 002E  
                                      __ptext10 1E89                                        __ptext11 1E80  
                                      __ptext20 1E11                                        __ptext12 1E77  
                                      __ptext21 15A9                                        __ptext13 1E6E  
                                      __ptext30 1136                                        __ptext22 1628  
                                      __ptext14 1E65                                        __ptext31 10A1  
                                      __ptext23 11BA                                        __ptext15 10E8  
                                      __ptext40 144D                                        __ptext32 079E  
                                      __ptext24 11E8                                        __ptext16 174C  
                                      __ptext41 1370                                        __ptext33 1E1C  
                                      __ptext25 14B3                                        __ptext17 0864  
                                      __ptext50 1E5C                                        __ptext42 0624  
                                      __ptext34 1080                                        __ptext26 1160  
                                      __ptext18 1004                                        __ptext51 0A02  
                                      __ptext43 12EE                                        __ptext35 13B9  
                                      __ptext27 1FAB                                        __ptext19 1EA5  
                                      __ptext60 1040                                        __ptext52 1217  
                                      __ptext44 0E1C                                        __ptext36 0802  
                                      __ptext28 1F1C                                        __ptext61 1F46  
                                      __ptext53 1E0E                                        __ptext45 1021  
                                      __ptext37 0812                                        __ptext29 1FE3  
                                      __ptext70 1F75                                        __ptext62 1E41  
                                      __ptext54 12B7                                        __ptext46 0C3A  
                                      __ptext38 009A                                        __ptext71 1EE0  
                                      __ptext63 1E38                                        __ptext55 1E27  
                                      __ptext47 03F8                                        __ptext39 16B6  
                                      __ptext80 1ED3                                        __ptext72 1E0B  
                                      __ptext64 1E2F                                        __ptext56 1E53  
                                      __ptext48 1060                                        __ptext81 1E07  
                                      __ptext73 1F8F                                        __ptext57 0930  
                                      __ptext49 152D                                        __ptext82 1E14  
                                      __ptext74 10C4                                        __ptext66 07F3  
                                      __ptext58 1E4A                                        __ptext75 1281  
                                      __ptext67 1E21                                        __ptext59 1402  
                                      __ptext76 1E18                                        __ptext68 0801  
                                      __ptext77 0800                                        __ptext69 0ADB  
                                      __ptext78 1E08                                        __ptext79 1F5D  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _offCheck 014C                                     ??_fadeColor 00DA  
                         __end_of_BEAT_detected 1E65                                        _lastBeat 0141  
                                      _firstMsg 0168                                        _lastTime 0143  
                              _TM1650_isEnabled 1E0E                                   __size_of_main 0035  
                                 __size_of_init 0020            __end_of_TMR0_DefaultInterruptHandler 0802  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 0801  
                          __CFG_WDTCWS$WDTCWS_7 0000                                     ??_decrement 0048  
                          _I2C1_MasterTRBInsert 079E                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                    __end_of_ADCC_StartConversion 1E4A  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0039  
                    _INTERRUPT_InterruptManager 0004                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 01DE                             _EUSART1_Receive_ISR 1281  
                           __end_of_pulseColors 0930                           ??_TM1650_fastPrintNum 003D  
                             TM1650_setDigit@dp 0035                                      _INTCONbits 000B  
                                      init@port 0020                                   _HueToRGB$2871 00A0  
                                   ??_increment 0048                                      _LED_setHSL 009A  
          __end_of_ADCC_DefaultInterruptHandler 1E08           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1E07                                        intlevel1 0000  
                                _thresholdCount 013B                            ?_EUSART1_Receive_ISR 0076  
                                 writeData@data 002E                                ___lwmod@dividend 0022  
                       ?_PIN_MANAGER_Initialize 0076                        __end_of_I2C1_MasterWrite 1160  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0014  
        __end_of_EUSART1_SetOverrunErrorHandler 1E80         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1E77                   __end_of_I2C1_FunctionComplete 1EF4  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 1FAB  
                                   led@lastTime 0135                   ?_TMR0_DefaultInterruptHandler 0076  
                        TM1650_fastPrintNum@num 003B  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 1FAB  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 0158  
                                 __pstringtext1 1800                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0020                                     ?_CLOCK_init 0076  
                               _TMR0_Initialize 1EF4                                 ___lwmod@counter 0025  
                                   dmx@lastTime 0137                                   fadeColor@time 00DC  
                      _I2C1_MasterWriteTRBBuild 10A1                                     ??_writeData 002F  
                                    _TX1STAbits 011E                                   ___fladd@signs 0039  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 11BA                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1F1C                                    ___fladd@aexp 003A  
                                  ___fladd@bexp 003B                              __size_of_I2C1_Stop 001A  
                 ?_ADCC_DefaultInterruptHandler 0076                                     _toggleCheck 014A  
                          __Umul8_16@multiplier 0028                         ??_EUSART1_RxDataHandler 0076  
                             __Umul8_16@product 0024  
