

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 29 15:34:35 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	intentry,global,class=CODE,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	dabs	1,0xCA0,32
    84                           	dabs	1,0xC20,80
    85                           	dabs	1,0xBA0,80
    86                           	dabs	1,0xB20,80
    87                           	dabs	1,0xAA0,80
    88                           	dabs	1,0xA20,80
    89                           	dabs	1,0x9A0,80
    90                           	dabs	1,0x96F,1
    91                           	dabs	1,0x25EF,0,_dmxData
    92                           	dabs	1,0x7E,2
    93  0000                     
    94                           ; Version 2.05
    95                           ; Generated 20/12/2018 GMT
    96                           ; 
    97                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC16F18446 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  008C                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008E                     	;# 
   154  008F                     	;# 
   155  0090                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0096                     	;# 
   166  0097                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009A                     	;# 
   170  009B                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  010F                     	;# 
   183  0110                     	;# 
   184  0111                     	;# 
   185  0112                     	;# 
   186  0113                     	;# 
   187  0114                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0117                     	;# 
   191  0118                     	;# 
   192  0119                     	;# 
   193  0119                     	;# 
   194  0119                     	;# 
   195  011A                     	;# 
   196  011A                     	;# 
   197  011A                     	;# 
   198  011B                     	;# 
   199  011B                     	;# 
   200  011B                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011C                     	;# 
   204  011C                     	;# 
   205  011C                     	;# 
   206  011D                     	;# 
   207  011D                     	;# 
   208  011D                     	;# 
   209  011E                     	;# 
   210  011E                     	;# 
   211  011E                     	;# 
   212  011F                     	;# 
   213  011F                     	;# 
   214  011F                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  018E                     	;# 
   220  018F                     	;# 
   221  0190                     	;# 
   222  0191                     	;# 
   223  0192                     	;# 
   224  0196                     	;# 
   225  0197                     	;# 
   226  0198                     	;# 
   227  0199                     	;# 
   228  019A                     	;# 
   229  019B                     	;# 
   230  019C                     	;# 
   231  020C                     	;# 
   232  020D                     	;# 
   233  020E                     	;# 
   234  020E                     	;# 
   235  020F                     	;# 
   236  020F                     	;# 
   237  0210                     	;# 
   238  0210                     	;# 
   239  0211                     	;# 
   240  0211                     	;# 
   241  0212                     	;# 
   242  0213                     	;# 
   243  0214                     	;# 
   244  0214                     	;# 
   245  0215                     	;# 
   246  0215                     	;# 
   247  0216                     	;# 
   248  0216                     	;# 
   249  0217                     	;# 
   250  0217                     	;# 
   251  0218                     	;# 
   252  0219                     	;# 
   253  021A                     	;# 
   254  021A                     	;# 
   255  021B                     	;# 
   256  021B                     	;# 
   257  021C                     	;# 
   258  021C                     	;# 
   259  021D                     	;# 
   260  021D                     	;# 
   261  021E                     	;# 
   262  021F                     	;# 
   263  028C                     	;# 
   264  028C                     	;# 
   265  028D                     	;# 
   266  028D                     	;# 
   267  028E                     	;# 
   268  028F                     	;# 
   269  0290                     	;# 
   270  0291                     	;# 
   271  0292                     	;# 
   272  0292                     	;# 
   273  0293                     	;# 
   274  0293                     	;# 
   275  0294                     	;# 
   276  0295                     	;# 
   277  0296                     	;# 
   278  0297                     	;# 
   279  0298                     	;# 
   280  0298                     	;# 
   281  0299                     	;# 
   282  0299                     	;# 
   283  029A                     	;# 
   284  029B                     	;# 
   285  029C                     	;# 
   286  029D                     	;# 
   287  029F                     	;# 
   288  030C                     	;# 
   289  030C                     	;# 
   290  030D                     	;# 
   291  030E                     	;# 
   292  030F                     	;# 
   293  0310                     	;# 
   294  0310                     	;# 
   295  0311                     	;# 
   296  0312                     	;# 
   297  0313                     	;# 
   298  0314                     	;# 
   299  0314                     	;# 
   300  0315                     	;# 
   301  0316                     	;# 
   302  0317                     	;# 
   303  0318                     	;# 
   304  0318                     	;# 
   305  0319                     	;# 
   306  031A                     	;# 
   307  031B                     	;# 
   308  038C                     	;# 
   309  038C                     	;# 
   310  038D                     	;# 
   311  038E                     	;# 
   312  0390                     	;# 
   313  0390                     	;# 
   314  0391                     	;# 
   315  0392                     	;# 
   316  048C                     	;# 
   317  048C                     	;# 
   318  048D                     	;# 
   319  048E                     	;# 
   320  048F                     	;# 
   321  048F                     	;# 
   322  0490                     	;# 
   323  0491                     	;# 
   324  0492                     	;# 
   325  0492                     	;# 
   326  0493                     	;# 
   327  0494                     	;# 
   328  0495                     	;# 
   329  0495                     	;# 
   330  0496                     	;# 
   331  0497                     	;# 
   332  0498                     	;# 
   333  0499                     	;# 
   334  049A                     	;# 
   335  049B                     	;# 
   336  049C                     	;# 
   337  049D                     	;# 
   338  058C                     	;# 
   339  058C                     	;# 
   340  058D                     	;# 
   341  058E                     	;# 
   342  058F                     	;# 
   343  058F                     	;# 
   344  0590                     	;# 
   345  0591                     	;# 
   346  0592                     	;# 
   347  0593                     	;# 
   348  059C                     	;# 
   349  059C                     	;# 
   350  059D                     	;# 
   351  059D                     	;# 
   352  059E                     	;# 
   353  059F                     	;# 
   354  060C                     	;# 
   355  060C                     	;# 
   356  060D                     	;# 
   357  060D                     	;# 
   358  060E                     	;# 
   359  060F                     	;# 
   360  0610                     	;# 
   361  0611                     	;# 
   362  0612                     	;# 
   363  0613                     	;# 
   364  0614                     	;# 
   365  0616                     	;# 
   366  0616                     	;# 
   367  0617                     	;# 
   368  0617                     	;# 
   369  0618                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061D                     	;# 
   375  061E                     	;# 
   376  070C                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0716                     	;# 
   386  0717                     	;# 
   387  0718                     	;# 
   388  0719                     	;# 
   389  071A                     	;# 
   390  071B                     	;# 
   391  071C                     	;# 
   392  071D                     	;# 
   393  071E                     	;# 
   394  0796                     	;# 
   395  0797                     	;# 
   396  0798                     	;# 
   397  0799                     	;# 
   398  079A                     	;# 
   399  079B                     	;# 
   400  079C                     	;# 
   401  079D                     	;# 
   402  080C                     	;# 
   403  080D                     	;# 
   404  080E                     	;# 
   405  080F                     	;# 
   406  0810                     	;# 
   407  0811                     	;# 
   408  0812                     	;# 
   409  0813                     	;# 
   410  0814                     	;# 
   411  081A                     	;# 
   412  081A                     	;# 
   413  081B                     	;# 
   414  081C                     	;# 
   415  081C                     	;# 
   416  081D                     	;# 
   417  081E                     	;# 
   418  081F                     	;# 
   419  088C                     	;# 
   420  088D                     	;# 
   421  088E                     	;# 
   422  088F                     	;# 
   423  0890                     	;# 
   424  0891                     	;# 
   425  0892                     	;# 
   426  0893                     	;# 
   427  0895                     	;# 
   428  0896                     	;# 
   429  0897                     	;# 
   430  0898                     	;# 
   431  0899                     	;# 
   432  089A                     	;# 
   433  089B                     	;# 
   434  090C                     	;# 
   435  090E                     	;# 
   436  090F                     	;# 
   437  091F                     	;# 
   438  098F                     	;# 
   439  098F                     	;# 
   440  0990                     	;# 
   441  0991                     	;# 
   442  0992                     	;# 
   443  0993                     	;# 
   444  0994                     	;# 
   445  0995                     	;# 
   446  0996                     	;# 
   447  0997                     	;# 
   448  1E0F                     	;# 
   449  1E10                     	;# 
   450  1E11                     	;# 
   451  1E12                     	;# 
   452  1E13                     	;# 
   453  1E14                     	;# 
   454  1E15                     	;# 
   455  1E16                     	;# 
   456  1E17                     	;# 
   457  1E18                     	;# 
   458  1E19                     	;# 
   459  1E1A                     	;# 
   460  1E1B                     	;# 
   461  1E1C                     	;# 
   462  1E1D                     	;# 
   463  1E1E                     	;# 
   464  1E1F                     	;# 
   465  1E20                     	;# 
   466  1E21                     	;# 
   467  1E22                     	;# 
   468  1E23                     	;# 
   469  1E24                     	;# 
   470  1E25                     	;# 
   471  1E26                     	;# 
   472  1E27                     	;# 
   473  1E28                     	;# 
   474  1E29                     	;# 
   475  1E2A                     	;# 
   476  1E2B                     	;# 
   477  1E2C                     	;# 
   478  1E2D                     	;# 
   479  1E2E                     	;# 
   480  1E2F                     	;# 
   481  1E30                     	;# 
   482  1E31                     	;# 
   483  1E32                     	;# 
   484  1E33                     	;# 
   485  1E34                     	;# 
   486  1E35                     	;# 
   487  1E36                     	;# 
   488  1E37                     	;# 
   489  1E8F                     	;# 
   490  1E90                     	;# 
   491  1E91                     	;# 
   492  1E92                     	;# 
   493  1E93                     	;# 
   494  1E94                     	;# 
   495  1E95                     	;# 
   496  1E96                     	;# 
   497  1E97                     	;# 
   498  1E9C                     	;# 
   499  1E9D                     	;# 
   500  1E9E                     	;# 
   501  1EA1                     	;# 
   502  1EA2                     	;# 
   503  1EA3                     	;# 
   504  1EA4                     	;# 
   505  1EA9                     	;# 
   506  1EAA                     	;# 
   507  1EB1                     	;# 
   508  1EB2                     	;# 
   509  1EB8                     	;# 
   510  1EB9                     	;# 
   511  1EBA                     	;# 
   512  1EBB                     	;# 
   513  1EBC                     	;# 
   514  1EBD                     	;# 
   515  1EBE                     	;# 
   516  1EC3                     	;# 
   517  1EC5                     	;# 
   518  1EC6                     	;# 
   519  1EC7                     	;# 
   520  1EC8                     	;# 
   521  1EC9                     	;# 
   522  1ECA                     	;# 
   523  1ECB                     	;# 
   524  1ECB                     	;# 
   525  1ECB                     	;# 
   526  1ECC                     	;# 
   527  1ECC                     	;# 
   528  1ECC                     	;# 
   529  1F10                     	;# 
   530  1F11                     	;# 
   531  1F12                     	;# 
   532  1F14                     	;# 
   533  1F15                     	;# 
   534  1F1C                     	;# 
   535  1F1D                     	;# 
   536  1F1E                     	;# 
   537  1F1F                     	;# 
   538  1F20                     	;# 
   539  1F21                     	;# 
   540  1F22                     	;# 
   541  1F23                     	;# 
   542  1F24                     	;# 
   543  1F25                     	;# 
   544  1F26                     	;# 
   545  1F27                     	;# 
   546  1F38                     	;# 
   547  1F39                     	;# 
   548  1F3A                     	;# 
   549  1F3B                     	;# 
   550  1F3C                     	;# 
   551  1F3D                     	;# 
   552  1F3E                     	;# 
   553  1F3F                     	;# 
   554  1F43                     	;# 
   555  1F44                     	;# 
   556  1F45                     	;# 
   557  1F46                     	;# 
   558  1F47                     	;# 
   559  1F48                     	;# 
   560  1F49                     	;# 
   561  1F4A                     	;# 
   562  1F4E                     	;# 
   563  1F4F                     	;# 
   564  1F50                     	;# 
   565  1F51                     	;# 
   566  1F52                     	;# 
   567  1F53                     	;# 
   568  1F54                     	;# 
   569  1F55                     	;# 
   570  1FE4                     	;# 
   571  1FE5                     	;# 
   572  1FE6                     	;# 
   573  1FE7                     	;# 
   574  1FE8                     	;# 
   575  1FE8                     	;# 
   576  1FE9                     	;# 
   577  1FEA                     	;# 
   578  1FEB                     	;# 
   579  1FED                     	;# 
   580  1FEE                     	;# 
   581  1FEF                     	;# 
   582  0000                     	;# 
   583  0001                     	;# 
   584  0002                     	;# 
   585  0003                     	;# 
   586  0004                     	;# 
   587  0005                     	;# 
   588  0006                     	;# 
   589  0007                     	;# 
   590  0008                     	;# 
   591  0009                     	;# 
   592  000A                     	;# 
   593  000B                     	;# 
   594  000C                     	;# 
   595  000D                     	;# 
   596  000E                     	;# 
   597  0012                     	;# 
   598  0013                     	;# 
   599  0014                     	;# 
   600  0018                     	;# 
   601  0019                     	;# 
   602  001A                     	;# 
   603  008C                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0092                     	;# 
   614  0093                     	;# 
   615  0094                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0096                     	;# 
   620  0097                     	;# 
   621  0098                     	;# 
   622  0099                     	;# 
   623  009A                     	;# 
   624  009B                     	;# 
   625  009B                     	;# 
   626  009C                     	;# 
   627  009D                     	;# 
   628  009D                     	;# 
   629  009E                     	;# 
   630  009F                     	;# 
   631  010C                     	;# 
   632  010C                     	;# 
   633  010D                     	;# 
   634  010E                     	;# 
   635  010F                     	;# 
   636  010F                     	;# 
   637  0110                     	;# 
   638  0111                     	;# 
   639  0112                     	;# 
   640  0113                     	;# 
   641  0114                     	;# 
   642  0115                     	;# 
   643  0116                     	;# 
   644  0117                     	;# 
   645  0118                     	;# 
   646  0119                     	;# 
   647  0119                     	;# 
   648  0119                     	;# 
   649  011A                     	;# 
   650  011A                     	;# 
   651  011A                     	;# 
   652  011B                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011B                     	;# 
   656  011B                     	;# 
   657  011C                     	;# 
   658  011C                     	;# 
   659  011C                     	;# 
   660  011D                     	;# 
   661  011D                     	;# 
   662  011D                     	;# 
   663  011E                     	;# 
   664  011E                     	;# 
   665  011E                     	;# 
   666  011F                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  011F                     	;# 
   670  011F                     	;# 
   671  018C                     	;# 
   672  018D                     	;# 
   673  018E                     	;# 
   674  018F                     	;# 
   675  0190                     	;# 
   676  0191                     	;# 
   677  0192                     	;# 
   678  0196                     	;# 
   679  0197                     	;# 
   680  0198                     	;# 
   681  0199                     	;# 
   682  019A                     	;# 
   683  019B                     	;# 
   684  019C                     	;# 
   685  020C                     	;# 
   686  020D                     	;# 
   687  020E                     	;# 
   688  020E                     	;# 
   689  020F                     	;# 
   690  020F                     	;# 
   691  0210                     	;# 
   692  0210                     	;# 
   693  0211                     	;# 
   694  0211                     	;# 
   695  0212                     	;# 
   696  0213                     	;# 
   697  0214                     	;# 
   698  0214                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0216                     	;# 
   702  0216                     	;# 
   703  0217                     	;# 
   704  0217                     	;# 
   705  0218                     	;# 
   706  0219                     	;# 
   707  021A                     	;# 
   708  021A                     	;# 
   709  021B                     	;# 
   710  021B                     	;# 
   711  021C                     	;# 
   712  021C                     	;# 
   713  021D                     	;# 
   714  021D                     	;# 
   715  021E                     	;# 
   716  021F                     	;# 
   717  028C                     	;# 
   718  028C                     	;# 
   719  028D                     	;# 
   720  028D                     	;# 
   721  028E                     	;# 
   722  028F                     	;# 
   723  0290                     	;# 
   724  0291                     	;# 
   725  0292                     	;# 
   726  0292                     	;# 
   727  0293                     	;# 
   728  0293                     	;# 
   729  0294                     	;# 
   730  0295                     	;# 
   731  0296                     	;# 
   732  0297                     	;# 
   733  0298                     	;# 
   734  0298                     	;# 
   735  0299                     	;# 
   736  0299                     	;# 
   737  029A                     	;# 
   738  029B                     	;# 
   739  029C                     	;# 
   740  029D                     	;# 
   741  029F                     	;# 
   742  030C                     	;# 
   743  030C                     	;# 
   744  030D                     	;# 
   745  030E                     	;# 
   746  030F                     	;# 
   747  0310                     	;# 
   748  0310                     	;# 
   749  0311                     	;# 
   750  0312                     	;# 
   751  0313                     	;# 
   752  0314                     	;# 
   753  0314                     	;# 
   754  0315                     	;# 
   755  0316                     	;# 
   756  0317                     	;# 
   757  0318                     	;# 
   758  0318                     	;# 
   759  0319                     	;# 
   760  031A                     	;# 
   761  031B                     	;# 
   762  038C                     	;# 
   763  038C                     	;# 
   764  038D                     	;# 
   765  038E                     	;# 
   766  0390                     	;# 
   767  0390                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  048C                     	;# 
   771  048C                     	;# 
   772  048D                     	;# 
   773  048E                     	;# 
   774  048F                     	;# 
   775  048F                     	;# 
   776  0490                     	;# 
   777  0491                     	;# 
   778  0492                     	;# 
   779  0492                     	;# 
   780  0493                     	;# 
   781  0494                     	;# 
   782  0495                     	;# 
   783  0495                     	;# 
   784  0496                     	;# 
   785  0497                     	;# 
   786  0498                     	;# 
   787  0499                     	;# 
   788  049A                     	;# 
   789  049B                     	;# 
   790  049C                     	;# 
   791  049D                     	;# 
   792  058C                     	;# 
   793  058C                     	;# 
   794  058D                     	;# 
   795  058E                     	;# 
   796  058F                     	;# 
   797  058F                     	;# 
   798  0590                     	;# 
   799  0591                     	;# 
   800  0592                     	;# 
   801  0593                     	;# 
   802  059C                     	;# 
   803  059C                     	;# 
   804  059D                     	;# 
   805  059D                     	;# 
   806  059E                     	;# 
   807  059F                     	;# 
   808  060C                     	;# 
   809  060C                     	;# 
   810  060D                     	;# 
   811  060D                     	;# 
   812  060E                     	;# 
   813  060F                     	;# 
   814  0610                     	;# 
   815  0611                     	;# 
   816  0612                     	;# 
   817  0613                     	;# 
   818  0614                     	;# 
   819  0616                     	;# 
   820  0616                     	;# 
   821  0617                     	;# 
   822  0617                     	;# 
   823  0618                     	;# 
   824  0619                     	;# 
   825  061A                     	;# 
   826  061B                     	;# 
   827  061C                     	;# 
   828  061D                     	;# 
   829  061E                     	;# 
   830  070C                     	;# 
   831  070D                     	;# 
   832  070E                     	;# 
   833  070F                     	;# 
   834  0710                     	;# 
   835  0711                     	;# 
   836  0712                     	;# 
   837  0713                     	;# 
   838  0714                     	;# 
   839  0716                     	;# 
   840  0717                     	;# 
   841  0718                     	;# 
   842  0719                     	;# 
   843  071A                     	;# 
   844  071B                     	;# 
   845  071C                     	;# 
   846  071D                     	;# 
   847  071E                     	;# 
   848  0796                     	;# 
   849  0797                     	;# 
   850  0798                     	;# 
   851  0799                     	;# 
   852  079A                     	;# 
   853  079B                     	;# 
   854  079C                     	;# 
   855  079D                     	;# 
   856  080C                     	;# 
   857  080D                     	;# 
   858  080E                     	;# 
   859  080F                     	;# 
   860  0810                     	;# 
   861  0811                     	;# 
   862  0812                     	;# 
   863  0813                     	;# 
   864  0814                     	;# 
   865  081A                     	;# 
   866  081A                     	;# 
   867  081B                     	;# 
   868  081C                     	;# 
   869  081C                     	;# 
   870  081D                     	;# 
   871  081E                     	;# 
   872  081F                     	;# 
   873  088C                     	;# 
   874  088D                     	;# 
   875  088E                     	;# 
   876  088F                     	;# 
   877  0890                     	;# 
   878  0891                     	;# 
   879  0892                     	;# 
   880  0893                     	;# 
   881  0895                     	;# 
   882  0896                     	;# 
   883  0897                     	;# 
   884  0898                     	;# 
   885  0899                     	;# 
   886  089A                     	;# 
   887  089B                     	;# 
   888  090C                     	;# 
   889  090E                     	;# 
   890  090F                     	;# 
   891  091F                     	;# 
   892  098F                     	;# 
   893  098F                     	;# 
   894  0990                     	;# 
   895  0991                     	;# 
   896  0992                     	;# 
   897  0993                     	;# 
   898  0994                     	;# 
   899  0995                     	;# 
   900  0996                     	;# 
   901  0997                     	;# 
   902  1E0F                     	;# 
   903  1E10                     	;# 
   904  1E11                     	;# 
   905  1E12                     	;# 
   906  1E13                     	;# 
   907  1E14                     	;# 
   908  1E15                     	;# 
   909  1E16                     	;# 
   910  1E17                     	;# 
   911  1E18                     	;# 
   912  1E19                     	;# 
   913  1E1A                     	;# 
   914  1E1B                     	;# 
   915  1E1C                     	;# 
   916  1E1D                     	;# 
   917  1E1E                     	;# 
   918  1E1F                     	;# 
   919  1E20                     	;# 
   920  1E21                     	;# 
   921  1E22                     	;# 
   922  1E23                     	;# 
   923  1E24                     	;# 
   924  1E25                     	;# 
   925  1E26                     	;# 
   926  1E27                     	;# 
   927  1E28                     	;# 
   928  1E29                     	;# 
   929  1E2A                     	;# 
   930  1E2B                     	;# 
   931  1E2C                     	;# 
   932  1E2D                     	;# 
   933  1E2E                     	;# 
   934  1E2F                     	;# 
   935  1E30                     	;# 
   936  1E31                     	;# 
   937  1E32                     	;# 
   938  1E33                     	;# 
   939  1E34                     	;# 
   940  1E35                     	;# 
   941  1E36                     	;# 
   942  1E37                     	;# 
   943  1E8F                     	;# 
   944  1E90                     	;# 
   945  1E91                     	;# 
   946  1E92                     	;# 
   947  1E93                     	;# 
   948  1E94                     	;# 
   949  1E95                     	;# 
   950  1E96                     	;# 
   951  1E97                     	;# 
   952  1E9C                     	;# 
   953  1E9D                     	;# 
   954  1E9E                     	;# 
   955  1EA1                     	;# 
   956  1EA2                     	;# 
   957  1EA3                     	;# 
   958  1EA4                     	;# 
   959  1EA9                     	;# 
   960  1EAA                     	;# 
   961  1EB1                     	;# 
   962  1EB2                     	;# 
   963  1EB8                     	;# 
   964  1EB9                     	;# 
   965  1EBA                     	;# 
   966  1EBB                     	;# 
   967  1EBC                     	;# 
   968  1EBD                     	;# 
   969  1EBE                     	;# 
   970  1EC3                     	;# 
   971  1EC5                     	;# 
   972  1EC6                     	;# 
   973  1EC7                     	;# 
   974  1EC8                     	;# 
   975  1EC9                     	;# 
   976  1ECA                     	;# 
   977  1ECB                     	;# 
   978  1ECB                     	;# 
   979  1ECB                     	;# 
   980  1ECC                     	;# 
   981  1ECC                     	;# 
   982  1ECC                     	;# 
   983  1F10                     	;# 
   984  1F11                     	;# 
   985  1F12                     	;# 
   986  1F14                     	;# 
   987  1F15                     	;# 
   988  1F1C                     	;# 
   989  1F1D                     	;# 
   990  1F1E                     	;# 
   991  1F1F                     	;# 
   992  1F20                     	;# 
   993  1F21                     	;# 
   994  1F22                     	;# 
   995  1F23                     	;# 
   996  1F24                     	;# 
   997  1F25                     	;# 
   998  1F26                     	;# 
   999  1F27                     	;# 
  1000  1F38                     	;# 
  1001  1F39                     	;# 
  1002  1F3A                     	;# 
  1003  1F3B                     	;# 
  1004  1F3C                     	;# 
  1005  1F3D                     	;# 
  1006  1F3E                     	;# 
  1007  1F3F                     	;# 
  1008  1F43                     	;# 
  1009  1F44                     	;# 
  1010  1F45                     	;# 
  1011  1F46                     	;# 
  1012  1F47                     	;# 
  1013  1F48                     	;# 
  1014  1F49                     	;# 
  1015  1F4A                     	;# 
  1016  1F4E                     	;# 
  1017  1F4F                     	;# 
  1018  1F50                     	;# 
  1019  1F51                     	;# 
  1020  1F52                     	;# 
  1021  1F53                     	;# 
  1022  1F54                     	;# 
  1023  1F55                     	;# 
  1024  1FE4                     	;# 
  1025  1FE5                     	;# 
  1026  1FE6                     	;# 
  1027  1FE7                     	;# 
  1028  1FE8                     	;# 
  1029  1FE8                     	;# 
  1030  1FE9                     	;# 
  1031  1FEA                     	;# 
  1032  1FEB                     	;# 
  1033  1FED                     	;# 
  1034  1FEE                     	;# 
  1035  1FEF                     	;# 
  1036  0000                     	;# 
  1037  0001                     	;# 
  1038  0002                     	;# 
  1039  0003                     	;# 
  1040  0004                     	;# 
  1041  0005                     	;# 
  1042  0006                     	;# 
  1043  0007                     	;# 
  1044  0008                     	;# 
  1045  0009                     	;# 
  1046  000A                     	;# 
  1047  000B                     	;# 
  1048  000C                     	;# 
  1049  000D                     	;# 
  1050  000E                     	;# 
  1051  0012                     	;# 
  1052  0013                     	;# 
  1053  0014                     	;# 
  1054  0018                     	;# 
  1055  0019                     	;# 
  1056  001A                     	;# 
  1057  008C                     	;# 
  1058  008C                     	;# 
  1059  008D                     	;# 
  1060  008E                     	;# 
  1061  008E                     	;# 
  1062  008F                     	;# 
  1063  0090                     	;# 
  1064  0090                     	;# 
  1065  0091                     	;# 
  1066  0092                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0094                     	;# 
  1070  0094                     	;# 
  1071  0095                     	;# 
  1072  0096                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009D                     	;# 
  1083  009E                     	;# 
  1084  009F                     	;# 
  1085  010C                     	;# 
  1086  010C                     	;# 
  1087  010D                     	;# 
  1088  010E                     	;# 
  1089  010F                     	;# 
  1090  010F                     	;# 
  1091  0110                     	;# 
  1092  0111                     	;# 
  1093  0112                     	;# 
  1094  0113                     	;# 
  1095  0114                     	;# 
  1096  0115                     	;# 
  1097  0116                     	;# 
  1098  0117                     	;# 
  1099  0118                     	;# 
  1100  0119                     	;# 
  1101  0119                     	;# 
  1102  0119                     	;# 
  1103  011A                     	;# 
  1104  011A                     	;# 
  1105  011A                     	;# 
  1106  011B                     	;# 
  1107  011B                     	;# 
  1108  011B                     	;# 
  1109  011B                     	;# 
  1110  011B                     	;# 
  1111  011C                     	;# 
  1112  011C                     	;# 
  1113  011C                     	;# 
  1114  011D                     	;# 
  1115  011D                     	;# 
  1116  011D                     	;# 
  1117  011E                     	;# 
  1118  011E                     	;# 
  1119  011E                     	;# 
  1120  011F                     	;# 
  1121  011F                     	;# 
  1122  011F                     	;# 
  1123  011F                     	;# 
  1124  011F                     	;# 
  1125  018C                     	;# 
  1126  018D                     	;# 
  1127  018E                     	;# 
  1128  018F                     	;# 
  1129  0190                     	;# 
  1130  0191                     	;# 
  1131  0192                     	;# 
  1132  0196                     	;# 
  1133  0197                     	;# 
  1134  0198                     	;# 
  1135  0199                     	;# 
  1136  019A                     	;# 
  1137  019B                     	;# 
  1138  019C                     	;# 
  1139  020C                     	;# 
  1140  020D                     	;# 
  1141  020E                     	;# 
  1142  020E                     	;# 
  1143  020F                     	;# 
  1144  020F                     	;# 
  1145  0210                     	;# 
  1146  0210                     	;# 
  1147  0211                     	;# 
  1148  0211                     	;# 
  1149  0212                     	;# 
  1150  0213                     	;# 
  1151  0214                     	;# 
  1152  0214                     	;# 
  1153  0215                     	;# 
  1154  0215                     	;# 
  1155  0216                     	;# 
  1156  0216                     	;# 
  1157  0217                     	;# 
  1158  0217                     	;# 
  1159  0218                     	;# 
  1160  0219                     	;# 
  1161  021A                     	;# 
  1162  021A                     	;# 
  1163  021B                     	;# 
  1164  021B                     	;# 
  1165  021C                     	;# 
  1166  021C                     	;# 
  1167  021D                     	;# 
  1168  021D                     	;# 
  1169  021E                     	;# 
  1170  021F                     	;# 
  1171  028C                     	;# 
  1172  028C                     	;# 
  1173  028D                     	;# 
  1174  028D                     	;# 
  1175  028E                     	;# 
  1176  028F                     	;# 
  1177  0290                     	;# 
  1178  0291                     	;# 
  1179  0292                     	;# 
  1180  0292                     	;# 
  1181  0293                     	;# 
  1182  0293                     	;# 
  1183  0294                     	;# 
  1184  0295                     	;# 
  1185  0296                     	;# 
  1186  0297                     	;# 
  1187  0298                     	;# 
  1188  0298                     	;# 
  1189  0299                     	;# 
  1190  0299                     	;# 
  1191  029A                     	;# 
  1192  029B                     	;# 
  1193  029C                     	;# 
  1194  029D                     	;# 
  1195  029F                     	;# 
  1196  030C                     	;# 
  1197  030C                     	;# 
  1198  030D                     	;# 
  1199  030E                     	;# 
  1200  030F                     	;# 
  1201  0310                     	;# 
  1202  0310                     	;# 
  1203  0311                     	;# 
  1204  0312                     	;# 
  1205  0313                     	;# 
  1206  0314                     	;# 
  1207  0314                     	;# 
  1208  0315                     	;# 
  1209  0316                     	;# 
  1210  0317                     	;# 
  1211  0318                     	;# 
  1212  0318                     	;# 
  1213  0319                     	;# 
  1214  031A                     	;# 
  1215  031B                     	;# 
  1216  038C                     	;# 
  1217  038C                     	;# 
  1218  038D                     	;# 
  1219  038E                     	;# 
  1220  0390                     	;# 
  1221  0390                     	;# 
  1222  0391                     	;# 
  1223  0392                     	;# 
  1224  048C                     	;# 
  1225  048C                     	;# 
  1226  048D                     	;# 
  1227  048E                     	;# 
  1228  048F                     	;# 
  1229  048F                     	;# 
  1230  0490                     	;# 
  1231  0491                     	;# 
  1232  0492                     	;# 
  1233  0492                     	;# 
  1234  0493                     	;# 
  1235  0494                     	;# 
  1236  0495                     	;# 
  1237  0495                     	;# 
  1238  0496                     	;# 
  1239  0497                     	;# 
  1240  0498                     	;# 
  1241  0499                     	;# 
  1242  049A                     	;# 
  1243  049B                     	;# 
  1244  049C                     	;# 
  1245  049D                     	;# 
  1246  058C                     	;# 
  1247  058C                     	;# 
  1248  058D                     	;# 
  1249  058E                     	;# 
  1250  058F                     	;# 
  1251  058F                     	;# 
  1252  0590                     	;# 
  1253  0591                     	;# 
  1254  0592                     	;# 
  1255  0593                     	;# 
  1256  059C                     	;# 
  1257  059C                     	;# 
  1258  059D                     	;# 
  1259  059D                     	;# 
  1260  059E                     	;# 
  1261  059F                     	;# 
  1262  060C                     	;# 
  1263  060C                     	;# 
  1264  060D                     	;# 
  1265  060D                     	;# 
  1266  060E                     	;# 
  1267  060F                     	;# 
  1268  0610                     	;# 
  1269  0611                     	;# 
  1270  0612                     	;# 
  1271  0613                     	;# 
  1272  0614                     	;# 
  1273  0616                     	;# 
  1274  0616                     	;# 
  1275  0617                     	;# 
  1276  0617                     	;# 
  1277  0618                     	;# 
  1278  0619                     	;# 
  1279  061A                     	;# 
  1280  061B                     	;# 
  1281  061C                     	;# 
  1282  061D                     	;# 
  1283  061E                     	;# 
  1284  070C                     	;# 
  1285  070D                     	;# 
  1286  070E                     	;# 
  1287  070F                     	;# 
  1288  0710                     	;# 
  1289  0711                     	;# 
  1290  0712                     	;# 
  1291  0713                     	;# 
  1292  0714                     	;# 
  1293  0716                     	;# 
  1294  0717                     	;# 
  1295  0718                     	;# 
  1296  0719                     	;# 
  1297  071A                     	;# 
  1298  071B                     	;# 
  1299  071C                     	;# 
  1300  071D                     	;# 
  1301  071E                     	;# 
  1302  0796                     	;# 
  1303  0797                     	;# 
  1304  0798                     	;# 
  1305  0799                     	;# 
  1306  079A                     	;# 
  1307  079B                     	;# 
  1308  079C                     	;# 
  1309  079D                     	;# 
  1310  080C                     	;# 
  1311  080D                     	;# 
  1312  080E                     	;# 
  1313  080F                     	;# 
  1314  0810                     	;# 
  1315  0811                     	;# 
  1316  0812                     	;# 
  1317  0813                     	;# 
  1318  0814                     	;# 
  1319  081A                     	;# 
  1320  081A                     	;# 
  1321  081B                     	;# 
  1322  081C                     	;# 
  1323  081C                     	;# 
  1324  081D                     	;# 
  1325  081E                     	;# 
  1326  081F                     	;# 
  1327  088C                     	;# 
  1328  088D                     	;# 
  1329  088E                     	;# 
  1330  088F                     	;# 
  1331  0890                     	;# 
  1332  0891                     	;# 
  1333  0892                     	;# 
  1334  0893                     	;# 
  1335  0895                     	;# 
  1336  0896                     	;# 
  1337  0897                     	;# 
  1338  0898                     	;# 
  1339  0899                     	;# 
  1340  089A                     	;# 
  1341  089B                     	;# 
  1342  090C                     	;# 
  1343  090E                     	;# 
  1344  090F                     	;# 
  1345  091F                     	;# 
  1346  098F                     	;# 
  1347  098F                     	;# 
  1348  0990                     	;# 
  1349  0991                     	;# 
  1350  0992                     	;# 
  1351  0993                     	;# 
  1352  0994                     	;# 
  1353  0995                     	;# 
  1354  0996                     	;# 
  1355  0997                     	;# 
  1356  1E0F                     	;# 
  1357  1E10                     	;# 
  1358  1E11                     	;# 
  1359  1E12                     	;# 
  1360  1E13                     	;# 
  1361  1E14                     	;# 
  1362  1E15                     	;# 
  1363  1E16                     	;# 
  1364  1E17                     	;# 
  1365  1E18                     	;# 
  1366  1E19                     	;# 
  1367  1E1A                     	;# 
  1368  1E1B                     	;# 
  1369  1E1C                     	;# 
  1370  1E1D                     	;# 
  1371  1E1E                     	;# 
  1372  1E1F                     	;# 
  1373  1E20                     	;# 
  1374  1E21                     	;# 
  1375  1E22                     	;# 
  1376  1E23                     	;# 
  1377  1E24                     	;# 
  1378  1E25                     	;# 
  1379  1E26                     	;# 
  1380  1E27                     	;# 
  1381  1E28                     	;# 
  1382  1E29                     	;# 
  1383  1E2A                     	;# 
  1384  1E2B                     	;# 
  1385  1E2C                     	;# 
  1386  1E2D                     	;# 
  1387  1E2E                     	;# 
  1388  1E2F                     	;# 
  1389  1E30                     	;# 
  1390  1E31                     	;# 
  1391  1E32                     	;# 
  1392  1E33                     	;# 
  1393  1E34                     	;# 
  1394  1E35                     	;# 
  1395  1E36                     	;# 
  1396  1E37                     	;# 
  1397  1E8F                     	;# 
  1398  1E90                     	;# 
  1399  1E91                     	;# 
  1400  1E92                     	;# 
  1401  1E93                     	;# 
  1402  1E94                     	;# 
  1403  1E95                     	;# 
  1404  1E96                     	;# 
  1405  1E97                     	;# 
  1406  1E9C                     	;# 
  1407  1E9D                     	;# 
  1408  1E9E                     	;# 
  1409  1EA1                     	;# 
  1410  1EA2                     	;# 
  1411  1EA3                     	;# 
  1412  1EA4                     	;# 
  1413  1EA9                     	;# 
  1414  1EAA                     	;# 
  1415  1EB1                     	;# 
  1416  1EB2                     	;# 
  1417  1EB8                     	;# 
  1418  1EB9                     	;# 
  1419  1EBA                     	;# 
  1420  1EBB                     	;# 
  1421  1EBC                     	;# 
  1422  1EBD                     	;# 
  1423  1EBE                     	;# 
  1424  1EC3                     	;# 
  1425  1EC5                     	;# 
  1426  1EC6                     	;# 
  1427  1EC7                     	;# 
  1428  1EC8                     	;# 
  1429  1EC9                     	;# 
  1430  1ECA                     	;# 
  1431  1ECB                     	;# 
  1432  1ECB                     	;# 
  1433  1ECB                     	;# 
  1434  1ECC                     	;# 
  1435  1ECC                     	;# 
  1436  1ECC                     	;# 
  1437  1F10                     	;# 
  1438  1F11                     	;# 
  1439  1F12                     	;# 
  1440  1F14                     	;# 
  1441  1F15                     	;# 
  1442  1F1C                     	;# 
  1443  1F1D                     	;# 
  1444  1F1E                     	;# 
  1445  1F1F                     	;# 
  1446  1F20                     	;# 
  1447  1F21                     	;# 
  1448  1F22                     	;# 
  1449  1F23                     	;# 
  1450  1F24                     	;# 
  1451  1F25                     	;# 
  1452  1F26                     	;# 
  1453  1F27                     	;# 
  1454  1F38                     	;# 
  1455  1F39                     	;# 
  1456  1F3A                     	;# 
  1457  1F3B                     	;# 
  1458  1F3C                     	;# 
  1459  1F3D                     	;# 
  1460  1F3E                     	;# 
  1461  1F3F                     	;# 
  1462  1F43                     	;# 
  1463  1F44                     	;# 
  1464  1F45                     	;# 
  1465  1F46                     	;# 
  1466  1F47                     	;# 
  1467  1F48                     	;# 
  1468  1F49                     	;# 
  1469  1F4A                     	;# 
  1470  1F4E                     	;# 
  1471  1F4F                     	;# 
  1472  1F50                     	;# 
  1473  1F51                     	;# 
  1474  1F52                     	;# 
  1475  1F53                     	;# 
  1476  1F54                     	;# 
  1477  1F55                     	;# 
  1478  1FE4                     	;# 
  1479  1FE5                     	;# 
  1480  1FE6                     	;# 
  1481  1FE7                     	;# 
  1482  1FE8                     	;# 
  1483  1FE8                     	;# 
  1484  1FE9                     	;# 
  1485  1FEA                     	;# 
  1486  1FEB                     	;# 
  1487  1FED                     	;# 
  1488  1FEE                     	;# 
  1489  1FEF                     	;# 
  1490  0000                     	;# 
  1491  0001                     	;# 
  1492  0002                     	;# 
  1493  0003                     	;# 
  1494  0004                     	;# 
  1495  0005                     	;# 
  1496  0006                     	;# 
  1497  0007                     	;# 
  1498  0008                     	;# 
  1499  0009                     	;# 
  1500  000A                     	;# 
  1501  000B                     	;# 
  1502  000C                     	;# 
  1503  000D                     	;# 
  1504  000E                     	;# 
  1505  0012                     	;# 
  1506  0013                     	;# 
  1507  0014                     	;# 
  1508  0018                     	;# 
  1509  0019                     	;# 
  1510  001A                     	;# 
  1511  008C                     	;# 
  1512  008C                     	;# 
  1513  008D                     	;# 
  1514  008E                     	;# 
  1515  008E                     	;# 
  1516  008F                     	;# 
  1517  0090                     	;# 
  1518  0090                     	;# 
  1519  0091                     	;# 
  1520  0092                     	;# 
  1521  0092                     	;# 
  1522  0093                     	;# 
  1523  0094                     	;# 
  1524  0094                     	;# 
  1525  0095                     	;# 
  1526  0096                     	;# 
  1527  0096                     	;# 
  1528  0097                     	;# 
  1529  0098                     	;# 
  1530  0099                     	;# 
  1531  009A                     	;# 
  1532  009B                     	;# 
  1533  009B                     	;# 
  1534  009C                     	;# 
  1535  009D                     	;# 
  1536  009D                     	;# 
  1537  009E                     	;# 
  1538  009F                     	;# 
  1539  010C                     	;# 
  1540  010C                     	;# 
  1541  010D                     	;# 
  1542  010E                     	;# 
  1543  010F                     	;# 
  1544  010F                     	;# 
  1545  0110                     	;# 
  1546  0111                     	;# 
  1547  0112                     	;# 
  1548  0113                     	;# 
  1549  0114                     	;# 
  1550  0115                     	;# 
  1551  0116                     	;# 
  1552  0117                     	;# 
  1553  0118                     	;# 
  1554  0119                     	;# 
  1555  0119                     	;# 
  1556  0119                     	;# 
  1557  011A                     	;# 
  1558  011A                     	;# 
  1559  011A                     	;# 
  1560  011B                     	;# 
  1561  011B                     	;# 
  1562  011B                     	;# 
  1563  011B                     	;# 
  1564  011B                     	;# 
  1565  011C                     	;# 
  1566  011C                     	;# 
  1567  011C                     	;# 
  1568  011D                     	;# 
  1569  011D                     	;# 
  1570  011D                     	;# 
  1571  011E                     	;# 
  1572  011E                     	;# 
  1573  011E                     	;# 
  1574  011F                     	;# 
  1575  011F                     	;# 
  1576  011F                     	;# 
  1577  011F                     	;# 
  1578  011F                     	;# 
  1579  018C                     	;# 
  1580  018D                     	;# 
  1581  018E                     	;# 
  1582  018F                     	;# 
  1583  0190                     	;# 
  1584  0191                     	;# 
  1585  0192                     	;# 
  1586  0196                     	;# 
  1587  0197                     	;# 
  1588  0198                     	;# 
  1589  0199                     	;# 
  1590  019A                     	;# 
  1591  019B                     	;# 
  1592  019C                     	;# 
  1593  020C                     	;# 
  1594  020D                     	;# 
  1595  020E                     	;# 
  1596  020E                     	;# 
  1597  020F                     	;# 
  1598  020F                     	;# 
  1599  0210                     	;# 
  1600  0210                     	;# 
  1601  0211                     	;# 
  1602  0211                     	;# 
  1603  0212                     	;# 
  1604  0213                     	;# 
  1605  0214                     	;# 
  1606  0214                     	;# 
  1607  0215                     	;# 
  1608  0215                     	;# 
  1609  0216                     	;# 
  1610  0216                     	;# 
  1611  0217                     	;# 
  1612  0217                     	;# 
  1613  0218                     	;# 
  1614  0219                     	;# 
  1615  021A                     	;# 
  1616  021A                     	;# 
  1617  021B                     	;# 
  1618  021B                     	;# 
  1619  021C                     	;# 
  1620  021C                     	;# 
  1621  021D                     	;# 
  1622  021D                     	;# 
  1623  021E                     	;# 
  1624  021F                     	;# 
  1625  028C                     	;# 
  1626  028C                     	;# 
  1627  028D                     	;# 
  1628  028D                     	;# 
  1629  028E                     	;# 
  1630  028F                     	;# 
  1631  0290                     	;# 
  1632  0291                     	;# 
  1633  0292                     	;# 
  1634  0292                     	;# 
  1635  0293                     	;# 
  1636  0293                     	;# 
  1637  0294                     	;# 
  1638  0295                     	;# 
  1639  0296                     	;# 
  1640  0297                     	;# 
  1641  0298                     	;# 
  1642  0298                     	;# 
  1643  0299                     	;# 
  1644  0299                     	;# 
  1645  029A                     	;# 
  1646  029B                     	;# 
  1647  029C                     	;# 
  1648  029D                     	;# 
  1649  029F                     	;# 
  1650  030C                     	;# 
  1651  030C                     	;# 
  1652  030D                     	;# 
  1653  030E                     	;# 
  1654  030F                     	;# 
  1655  0310                     	;# 
  1656  0310                     	;# 
  1657  0311                     	;# 
  1658  0312                     	;# 
  1659  0313                     	;# 
  1660  0314                     	;# 
  1661  0314                     	;# 
  1662  0315                     	;# 
  1663  0316                     	;# 
  1664  0317                     	;# 
  1665  0318                     	;# 
  1666  0318                     	;# 
  1667  0319                     	;# 
  1668  031A                     	;# 
  1669  031B                     	;# 
  1670  038C                     	;# 
  1671  038C                     	;# 
  1672  038D                     	;# 
  1673  038E                     	;# 
  1674  0390                     	;# 
  1675  0390                     	;# 
  1676  0391                     	;# 
  1677  0392                     	;# 
  1678  048C                     	;# 
  1679  048C                     	;# 
  1680  048D                     	;# 
  1681  048E                     	;# 
  1682  048F                     	;# 
  1683  048F                     	;# 
  1684  0490                     	;# 
  1685  0491                     	;# 
  1686  0492                     	;# 
  1687  0492                     	;# 
  1688  0493                     	;# 
  1689  0494                     	;# 
  1690  0495                     	;# 
  1691  0495                     	;# 
  1692  0496                     	;# 
  1693  0497                     	;# 
  1694  0498                     	;# 
  1695  0499                     	;# 
  1696  049A                     	;# 
  1697  049B                     	;# 
  1698  049C                     	;# 
  1699  049D                     	;# 
  1700  058C                     	;# 
  1701  058C                     	;# 
  1702  058D                     	;# 
  1703  058E                     	;# 
  1704  058F                     	;# 
  1705  058F                     	;# 
  1706  0590                     	;# 
  1707  0591                     	;# 
  1708  0592                     	;# 
  1709  0593                     	;# 
  1710  059C                     	;# 
  1711  059C                     	;# 
  1712  059D                     	;# 
  1713  059D                     	;# 
  1714  059E                     	;# 
  1715  059F                     	;# 
  1716  060C                     	;# 
  1717  060C                     	;# 
  1718  060D                     	;# 
  1719  060D                     	;# 
  1720  060E                     	;# 
  1721  060F                     	;# 
  1722  0610                     	;# 
  1723  0611                     	;# 
  1724  0612                     	;# 
  1725  0613                     	;# 
  1726  0614                     	;# 
  1727  0616                     	;# 
  1728  0616                     	;# 
  1729  0617                     	;# 
  1730  0617                     	;# 
  1731  0618                     	;# 
  1732  0619                     	;# 
  1733  061A                     	;# 
  1734  061B                     	;# 
  1735  061C                     	;# 
  1736  061D                     	;# 
  1737  061E                     	;# 
  1738  070C                     	;# 
  1739  070D                     	;# 
  1740  070E                     	;# 
  1741  070F                     	;# 
  1742  0710                     	;# 
  1743  0711                     	;# 
  1744  0712                     	;# 
  1745  0713                     	;# 
  1746  0714                     	;# 
  1747  0716                     	;# 
  1748  0717                     	;# 
  1749  0718                     	;# 
  1750  0719                     	;# 
  1751  071A                     	;# 
  1752  071B                     	;# 
  1753  071C                     	;# 
  1754  071D                     	;# 
  1755  071E                     	;# 
  1756  0796                     	;# 
  1757  0797                     	;# 
  1758  0798                     	;# 
  1759  0799                     	;# 
  1760  079A                     	;# 
  1761  079B                     	;# 
  1762  079C                     	;# 
  1763  079D                     	;# 
  1764  080C                     	;# 
  1765  080D                     	;# 
  1766  080E                     	;# 
  1767  080F                     	;# 
  1768  0810                     	;# 
  1769  0811                     	;# 
  1770  0812                     	;# 
  1771  0813                     	;# 
  1772  0814                     	;# 
  1773  081A                     	;# 
  1774  081A                     	;# 
  1775  081B                     	;# 
  1776  081C                     	;# 
  1777  081C                     	;# 
  1778  081D                     	;# 
  1779  081E                     	;# 
  1780  081F                     	;# 
  1781  088C                     	;# 
  1782  088D                     	;# 
  1783  088E                     	;# 
  1784  088F                     	;# 
  1785  0890                     	;# 
  1786  0891                     	;# 
  1787  0892                     	;# 
  1788  0893                     	;# 
  1789  0895                     	;# 
  1790  0896                     	;# 
  1791  0897                     	;# 
  1792  0898                     	;# 
  1793  0899                     	;# 
  1794  089A                     	;# 
  1795  089B                     	;# 
  1796  090C                     	;# 
  1797  090E                     	;# 
  1798  090F                     	;# 
  1799  091F                     	;# 
  1800  098F                     	;# 
  1801  098F                     	;# 
  1802  0990                     	;# 
  1803  0991                     	;# 
  1804  0992                     	;# 
  1805  0993                     	;# 
  1806  0994                     	;# 
  1807  0995                     	;# 
  1808  0996                     	;# 
  1809  0997                     	;# 
  1810  1E0F                     	;# 
  1811  1E10                     	;# 
  1812  1E11                     	;# 
  1813  1E12                     	;# 
  1814  1E13                     	;# 
  1815  1E14                     	;# 
  1816  1E15                     	;# 
  1817  1E16                     	;# 
  1818  1E17                     	;# 
  1819  1E18                     	;# 
  1820  1E19                     	;# 
  1821  1E1A                     	;# 
  1822  1E1B                     	;# 
  1823  1E1C                     	;# 
  1824  1E1D                     	;# 
  1825  1E1E                     	;# 
  1826  1E1F                     	;# 
  1827  1E20                     	;# 
  1828  1E21                     	;# 
  1829  1E22                     	;# 
  1830  1E23                     	;# 
  1831  1E24                     	;# 
  1832  1E25                     	;# 
  1833  1E26                     	;# 
  1834  1E27                     	;# 
  1835  1E28                     	;# 
  1836  1E29                     	;# 
  1837  1E2A                     	;# 
  1838  1E2B                     	;# 
  1839  1E2C                     	;# 
  1840  1E2D                     	;# 
  1841  1E2E                     	;# 
  1842  1E2F                     	;# 
  1843  1E30                     	;# 
  1844  1E31                     	;# 
  1845  1E32                     	;# 
  1846  1E33                     	;# 
  1847  1E34                     	;# 
  1848  1E35                     	;# 
  1849  1E36                     	;# 
  1850  1E37                     	;# 
  1851  1E8F                     	;# 
  1852  1E90                     	;# 
  1853  1E91                     	;# 
  1854  1E92                     	;# 
  1855  1E93                     	;# 
  1856  1E94                     	;# 
  1857  1E95                     	;# 
  1858  1E96                     	;# 
  1859  1E97                     	;# 
  1860  1E9C                     	;# 
  1861  1E9D                     	;# 
  1862  1E9E                     	;# 
  1863  1EA1                     	;# 
  1864  1EA2                     	;# 
  1865  1EA3                     	;# 
  1866  1EA4                     	;# 
  1867  1EA9                     	;# 
  1868  1EAA                     	;# 
  1869  1EB1                     	;# 
  1870  1EB2                     	;# 
  1871  1EB8                     	;# 
  1872  1EB9                     	;# 
  1873  1EBA                     	;# 
  1874  1EBB                     	;# 
  1875  1EBC                     	;# 
  1876  1EBD                     	;# 
  1877  1EBE                     	;# 
  1878  1EC3                     	;# 
  1879  1EC5                     	;# 
  1880  1EC6                     	;# 
  1881  1EC7                     	;# 
  1882  1EC8                     	;# 
  1883  1EC9                     	;# 
  1884  1ECA                     	;# 
  1885  1ECB                     	;# 
  1886  1ECB                     	;# 
  1887  1ECB                     	;# 
  1888  1ECC                     	;# 
  1889  1ECC                     	;# 
  1890  1ECC                     	;# 
  1891  1F10                     	;# 
  1892  1F11                     	;# 
  1893  1F12                     	;# 
  1894  1F14                     	;# 
  1895  1F15                     	;# 
  1896  1F1C                     	;# 
  1897  1F1D                     	;# 
  1898  1F1E                     	;# 
  1899  1F1F                     	;# 
  1900  1F20                     	;# 
  1901  1F21                     	;# 
  1902  1F22                     	;# 
  1903  1F23                     	;# 
  1904  1F24                     	;# 
  1905  1F25                     	;# 
  1906  1F26                     	;# 
  1907  1F27                     	;# 
  1908  1F38                     	;# 
  1909  1F39                     	;# 
  1910  1F3A                     	;# 
  1911  1F3B                     	;# 
  1912  1F3C                     	;# 
  1913  1F3D                     	;# 
  1914  1F3E                     	;# 
  1915  1F3F                     	;# 
  1916  1F43                     	;# 
  1917  1F44                     	;# 
  1918  1F45                     	;# 
  1919  1F46                     	;# 
  1920  1F47                     	;# 
  1921  1F48                     	;# 
  1922  1F49                     	;# 
  1923  1F4A                     	;# 
  1924  1F4E                     	;# 
  1925  1F4F                     	;# 
  1926  1F50                     	;# 
  1927  1F51                     	;# 
  1928  1F52                     	;# 
  1929  1F53                     	;# 
  1930  1F54                     	;# 
  1931  1F55                     	;# 
  1932  1FE4                     	;# 
  1933  1FE5                     	;# 
  1934  1FE6                     	;# 
  1935  1FE7                     	;# 
  1936  1FE8                     	;# 
  1937  1FE8                     	;# 
  1938  1FE9                     	;# 
  1939  1FEA                     	;# 
  1940  1FEB                     	;# 
  1941  1FED                     	;# 
  1942  1FEE                     	;# 
  1943  1FEF                     	;# 
  1944  0000                     	;# 
  1945  0001                     	;# 
  1946  0002                     	;# 
  1947  0003                     	;# 
  1948  0004                     	;# 
  1949  0005                     	;# 
  1950  0006                     	;# 
  1951  0007                     	;# 
  1952  0008                     	;# 
  1953  0009                     	;# 
  1954  000A                     	;# 
  1955  000B                     	;# 
  1956  000C                     	;# 
  1957  000D                     	;# 
  1958  000E                     	;# 
  1959  0012                     	;# 
  1960  0013                     	;# 
  1961  0014                     	;# 
  1962  0018                     	;# 
  1963  0019                     	;# 
  1964  001A                     	;# 
  1965  008C                     	;# 
  1966  008C                     	;# 
  1967  008D                     	;# 
  1968  008E                     	;# 
  1969  008E                     	;# 
  1970  008F                     	;# 
  1971  0090                     	;# 
  1972  0090                     	;# 
  1973  0091                     	;# 
  1974  0092                     	;# 
  1975  0092                     	;# 
  1976  0093                     	;# 
  1977  0094                     	;# 
  1978  0094                     	;# 
  1979  0095                     	;# 
  1980  0096                     	;# 
  1981  0096                     	;# 
  1982  0097                     	;# 
  1983  0098                     	;# 
  1984  0099                     	;# 
  1985  009A                     	;# 
  1986  009B                     	;# 
  1987  009B                     	;# 
  1988  009C                     	;# 
  1989  009D                     	;# 
  1990  009D                     	;# 
  1991  009E                     	;# 
  1992  009F                     	;# 
  1993  010C                     	;# 
  1994  010C                     	;# 
  1995  010D                     	;# 
  1996  010E                     	;# 
  1997  010F                     	;# 
  1998  010F                     	;# 
  1999  0110                     	;# 
  2000  0111                     	;# 
  2001  0112                     	;# 
  2002  0113                     	;# 
  2003  0114                     	;# 
  2004  0115                     	;# 
  2005  0116                     	;# 
  2006  0117                     	;# 
  2007  0118                     	;# 
  2008  0119                     	;# 
  2009  0119                     	;# 
  2010  0119                     	;# 
  2011  011A                     	;# 
  2012  011A                     	;# 
  2013  011A                     	;# 
  2014  011B                     	;# 
  2015  011B                     	;# 
  2016  011B                     	;# 
  2017  011B                     	;# 
  2018  011B                     	;# 
  2019  011C                     	;# 
  2020  011C                     	;# 
  2021  011C                     	;# 
  2022  011D                     	;# 
  2023  011D                     	;# 
  2024  011D                     	;# 
  2025  011E                     	;# 
  2026  011E                     	;# 
  2027  011E                     	;# 
  2028  011F                     	;# 
  2029  011F                     	;# 
  2030  011F                     	;# 
  2031  011F                     	;# 
  2032  011F                     	;# 
  2033  018C                     	;# 
  2034  018D                     	;# 
  2035  018E                     	;# 
  2036  018F                     	;# 
  2037  0190                     	;# 
  2038  0191                     	;# 
  2039  0192                     	;# 
  2040  0196                     	;# 
  2041  0197                     	;# 
  2042  0198                     	;# 
  2043  0199                     	;# 
  2044  019A                     	;# 
  2045  019B                     	;# 
  2046  019C                     	;# 
  2047  020C                     	;# 
  2048  020D                     	;# 
  2049  020E                     	;# 
  2050  020E                     	;# 
  2051  020F                     	;# 
  2052  020F                     	;# 
  2053  0210                     	;# 
  2054  0210                     	;# 
  2055  0211                     	;# 
  2056  0211                     	;# 
  2057  0212                     	;# 
  2058  0213                     	;# 
  2059  0214                     	;# 
  2060  0214                     	;# 
  2061  0215                     	;# 
  2062  0215                     	;# 
  2063  0216                     	;# 
  2064  0216                     	;# 
  2065  0217                     	;# 
  2066  0217                     	;# 
  2067  0218                     	;# 
  2068  0219                     	;# 
  2069  021A                     	;# 
  2070  021A                     	;# 
  2071  021B                     	;# 
  2072  021B                     	;# 
  2073  021C                     	;# 
  2074  021C                     	;# 
  2075  021D                     	;# 
  2076  021D                     	;# 
  2077  021E                     	;# 
  2078  021F                     	;# 
  2079  028C                     	;# 
  2080  028C                     	;# 
  2081  028D                     	;# 
  2082  028D                     	;# 
  2083  028E                     	;# 
  2084  028F                     	;# 
  2085  0290                     	;# 
  2086  0291                     	;# 
  2087  0292                     	;# 
  2088  0292                     	;# 
  2089  0293                     	;# 
  2090  0293                     	;# 
  2091  0294                     	;# 
  2092  0295                     	;# 
  2093  0296                     	;# 
  2094  0297                     	;# 
  2095  0298                     	;# 
  2096  0298                     	;# 
  2097  0299                     	;# 
  2098  0299                     	;# 
  2099  029A                     	;# 
  2100  029B                     	;# 
  2101  029C                     	;# 
  2102  029D                     	;# 
  2103  029F                     	;# 
  2104  030C                     	;# 
  2105  030C                     	;# 
  2106  030D                     	;# 
  2107  030E                     	;# 
  2108  030F                     	;# 
  2109  0310                     	;# 
  2110  0310                     	;# 
  2111  0311                     	;# 
  2112  0312                     	;# 
  2113  0313                     	;# 
  2114  0314                     	;# 
  2115  0314                     	;# 
  2116  0315                     	;# 
  2117  0316                     	;# 
  2118  0317                     	;# 
  2119  0318                     	;# 
  2120  0318                     	;# 
  2121  0319                     	;# 
  2122  031A                     	;# 
  2123  031B                     	;# 
  2124  038C                     	;# 
  2125  038C                     	;# 
  2126  038D                     	;# 
  2127  038E                     	;# 
  2128  0390                     	;# 
  2129  0390                     	;# 
  2130  0391                     	;# 
  2131  0392                     	;# 
  2132  048C                     	;# 
  2133  048C                     	;# 
  2134  048D                     	;# 
  2135  048E                     	;# 
  2136  048F                     	;# 
  2137  048F                     	;# 
  2138  0490                     	;# 
  2139  0491                     	;# 
  2140  0492                     	;# 
  2141  0492                     	;# 
  2142  0493                     	;# 
  2143  0494                     	;# 
  2144  0495                     	;# 
  2145  0495                     	;# 
  2146  0496                     	;# 
  2147  0497                     	;# 
  2148  0498                     	;# 
  2149  0499                     	;# 
  2150  049A                     	;# 
  2151  049B                     	;# 
  2152  049C                     	;# 
  2153  049D                     	;# 
  2154  058C                     	;# 
  2155  058C                     	;# 
  2156  058D                     	;# 
  2157  058E                     	;# 
  2158  058F                     	;# 
  2159  058F                     	;# 
  2160  0590                     	;# 
  2161  0591                     	;# 
  2162  0592                     	;# 
  2163  0593                     	;# 
  2164  059C                     	;# 
  2165  059C                     	;# 
  2166  059D                     	;# 
  2167  059D                     	;# 
  2168  059E                     	;# 
  2169  059F                     	;# 
  2170  060C                     	;# 
  2171  060C                     	;# 
  2172  060D                     	;# 
  2173  060D                     	;# 
  2174  060E                     	;# 
  2175  060F                     	;# 
  2176  0610                     	;# 
  2177  0611                     	;# 
  2178  0612                     	;# 
  2179  0613                     	;# 
  2180  0614                     	;# 
  2181  0616                     	;# 
  2182  0616                     	;# 
  2183  0617                     	;# 
  2184  0617                     	;# 
  2185  0618                     	;# 
  2186  0619                     	;# 
  2187  061A                     	;# 
  2188  061B                     	;# 
  2189  061C                     	;# 
  2190  061D                     	;# 
  2191  061E                     	;# 
  2192  070C                     	;# 
  2193  070D                     	;# 
  2194  070E                     	;# 
  2195  070F                     	;# 
  2196  0710                     	;# 
  2197  0711                     	;# 
  2198  0712                     	;# 
  2199  0713                     	;# 
  2200  0714                     	;# 
  2201  0716                     	;# 
  2202  0717                     	;# 
  2203  0718                     	;# 
  2204  0719                     	;# 
  2205  071A                     	;# 
  2206  071B                     	;# 
  2207  071C                     	;# 
  2208  071D                     	;# 
  2209  071E                     	;# 
  2210  0796                     	;# 
  2211  0797                     	;# 
  2212  0798                     	;# 
  2213  0799                     	;# 
  2214  079A                     	;# 
  2215  079B                     	;# 
  2216  079C                     	;# 
  2217  079D                     	;# 
  2218  080C                     	;# 
  2219  080D                     	;# 
  2220  080E                     	;# 
  2221  080F                     	;# 
  2222  0810                     	;# 
  2223  0811                     	;# 
  2224  0812                     	;# 
  2225  0813                     	;# 
  2226  0814                     	;# 
  2227  081A                     	;# 
  2228  081A                     	;# 
  2229  081B                     	;# 
  2230  081C                     	;# 
  2231  081C                     	;# 
  2232  081D                     	;# 
  2233  081E                     	;# 
  2234  081F                     	;# 
  2235  088C                     	;# 
  2236  088D                     	;# 
  2237  088E                     	;# 
  2238  088F                     	;# 
  2239  0890                     	;# 
  2240  0891                     	;# 
  2241  0892                     	;# 
  2242  0893                     	;# 
  2243  0895                     	;# 
  2244  0896                     	;# 
  2245  0897                     	;# 
  2246  0898                     	;# 
  2247  0899                     	;# 
  2248  089A                     	;# 
  2249  089B                     	;# 
  2250  090C                     	;# 
  2251  090E                     	;# 
  2252  090F                     	;# 
  2253  091F                     	;# 
  2254  098F                     	;# 
  2255  098F                     	;# 
  2256  0990                     	;# 
  2257  0991                     	;# 
  2258  0992                     	;# 
  2259  0993                     	;# 
  2260  0994                     	;# 
  2261  0995                     	;# 
  2262  0996                     	;# 
  2263  0997                     	;# 
  2264  1E0F                     	;# 
  2265  1E10                     	;# 
  2266  1E11                     	;# 
  2267  1E12                     	;# 
  2268  1E13                     	;# 
  2269  1E14                     	;# 
  2270  1E15                     	;# 
  2271  1E16                     	;# 
  2272  1E17                     	;# 
  2273  1E18                     	;# 
  2274  1E19                     	;# 
  2275  1E1A                     	;# 
  2276  1E1B                     	;# 
  2277  1E1C                     	;# 
  2278  1E1D                     	;# 
  2279  1E1E                     	;# 
  2280  1E1F                     	;# 
  2281  1E20                     	;# 
  2282  1E21                     	;# 
  2283  1E22                     	;# 
  2284  1E23                     	;# 
  2285  1E24                     	;# 
  2286  1E25                     	;# 
  2287  1E26                     	;# 
  2288  1E27                     	;# 
  2289  1E28                     	;# 
  2290  1E29                     	;# 
  2291  1E2A                     	;# 
  2292  1E2B                     	;# 
  2293  1E2C                     	;# 
  2294  1E2D                     	;# 
  2295  1E2E                     	;# 
  2296  1E2F                     	;# 
  2297  1E30                     	;# 
  2298  1E31                     	;# 
  2299  1E32                     	;# 
  2300  1E33                     	;# 
  2301  1E34                     	;# 
  2302  1E35                     	;# 
  2303  1E36                     	;# 
  2304  1E37                     	;# 
  2305  1E8F                     	;# 
  2306  1E90                     	;# 
  2307  1E91                     	;# 
  2308  1E92                     	;# 
  2309  1E93                     	;# 
  2310  1E94                     	;# 
  2311  1E95                     	;# 
  2312  1E96                     	;# 
  2313  1E97                     	;# 
  2314  1E9C                     	;# 
  2315  1E9D                     	;# 
  2316  1E9E                     	;# 
  2317  1EA1                     	;# 
  2318  1EA2                     	;# 
  2319  1EA3                     	;# 
  2320  1EA4                     	;# 
  2321  1EA9                     	;# 
  2322  1EAA                     	;# 
  2323  1EB1                     	;# 
  2324  1EB2                     	;# 
  2325  1EB8                     	;# 
  2326  1EB9                     	;# 
  2327  1EBA                     	;# 
  2328  1EBB                     	;# 
  2329  1EBC                     	;# 
  2330  1EBD                     	;# 
  2331  1EBE                     	;# 
  2332  1EC3                     	;# 
  2333  1EC5                     	;# 
  2334  1EC6                     	;# 
  2335  1EC7                     	;# 
  2336  1EC8                     	;# 
  2337  1EC9                     	;# 
  2338  1ECA                     	;# 
  2339  1ECB                     	;# 
  2340  1ECB                     	;# 
  2341  1ECB                     	;# 
  2342  1ECC                     	;# 
  2343  1ECC                     	;# 
  2344  1ECC                     	;# 
  2345  1F10                     	;# 
  2346  1F11                     	;# 
  2347  1F12                     	;# 
  2348  1F14                     	;# 
  2349  1F15                     	;# 
  2350  1F1C                     	;# 
  2351  1F1D                     	;# 
  2352  1F1E                     	;# 
  2353  1F1F                     	;# 
  2354  1F20                     	;# 
  2355  1F21                     	;# 
  2356  1F22                     	;# 
  2357  1F23                     	;# 
  2358  1F24                     	;# 
  2359  1F25                     	;# 
  2360  1F26                     	;# 
  2361  1F27                     	;# 
  2362  1F38                     	;# 
  2363  1F39                     	;# 
  2364  1F3A                     	;# 
  2365  1F3B                     	;# 
  2366  1F3C                     	;# 
  2367  1F3D                     	;# 
  2368  1F3E                     	;# 
  2369  1F3F                     	;# 
  2370  1F43                     	;# 
  2371  1F44                     	;# 
  2372  1F45                     	;# 
  2373  1F46                     	;# 
  2374  1F47                     	;# 
  2375  1F48                     	;# 
  2376  1F49                     	;# 
  2377  1F4A                     	;# 
  2378  1F4E                     	;# 
  2379  1F4F                     	;# 
  2380  1F50                     	;# 
  2381  1F51                     	;# 
  2382  1F52                     	;# 
  2383  1F53                     	;# 
  2384  1F54                     	;# 
  2385  1F55                     	;# 
  2386  1FE4                     	;# 
  2387  1FE5                     	;# 
  2388  1FE6                     	;# 
  2389  1FE7                     	;# 
  2390  1FE8                     	;# 
  2391  1FE8                     	;# 
  2392  1FE9                     	;# 
  2393  1FEA                     	;# 
  2394  1FEB                     	;# 
  2395  1FED                     	;# 
  2396  1FEE                     	;# 
  2397  1FEF                     	;# 
  2398  0000                     	;# 
  2399  0001                     	;# 
  2400  0002                     	;# 
  2401  0003                     	;# 
  2402  0004                     	;# 
  2403  0005                     	;# 
  2404  0006                     	;# 
  2405  0007                     	;# 
  2406  0008                     	;# 
  2407  0009                     	;# 
  2408  000A                     	;# 
  2409  000B                     	;# 
  2410  000C                     	;# 
  2411  000D                     	;# 
  2412  000E                     	;# 
  2413  0012                     	;# 
  2414  0013                     	;# 
  2415  0014                     	;# 
  2416  0018                     	;# 
  2417  0019                     	;# 
  2418  001A                     	;# 
  2419  008C                     	;# 
  2420  008C                     	;# 
  2421  008D                     	;# 
  2422  008E                     	;# 
  2423  008E                     	;# 
  2424  008F                     	;# 
  2425  0090                     	;# 
  2426  0090                     	;# 
  2427  0091                     	;# 
  2428  0092                     	;# 
  2429  0092                     	;# 
  2430  0093                     	;# 
  2431  0094                     	;# 
  2432  0094                     	;# 
  2433  0095                     	;# 
  2434  0096                     	;# 
  2435  0096                     	;# 
  2436  0097                     	;# 
  2437  0098                     	;# 
  2438  0099                     	;# 
  2439  009A                     	;# 
  2440  009B                     	;# 
  2441  009B                     	;# 
  2442  009C                     	;# 
  2443  009D                     	;# 
  2444  009D                     	;# 
  2445  009E                     	;# 
  2446  009F                     	;# 
  2447  010C                     	;# 
  2448  010C                     	;# 
  2449  010D                     	;# 
  2450  010E                     	;# 
  2451  010F                     	;# 
  2452  010F                     	;# 
  2453  0110                     	;# 
  2454  0111                     	;# 
  2455  0112                     	;# 
  2456  0113                     	;# 
  2457  0114                     	;# 
  2458  0115                     	;# 
  2459  0116                     	;# 
  2460  0117                     	;# 
  2461  0118                     	;# 
  2462  0119                     	;# 
  2463  0119                     	;# 
  2464  0119                     	;# 
  2465  011A                     	;# 
  2466  011A                     	;# 
  2467  011A                     	;# 
  2468  011B                     	;# 
  2469  011B                     	;# 
  2470  011B                     	;# 
  2471  011B                     	;# 
  2472  011B                     	;# 
  2473  011C                     	;# 
  2474  011C                     	;# 
  2475  011C                     	;# 
  2476  011D                     	;# 
  2477  011D                     	;# 
  2478  011D                     	;# 
  2479  011E                     	;# 
  2480  011E                     	;# 
  2481  011E                     	;# 
  2482  011F                     	;# 
  2483  011F                     	;# 
  2484  011F                     	;# 
  2485  011F                     	;# 
  2486  011F                     	;# 
  2487  018C                     	;# 
  2488  018D                     	;# 
  2489  018E                     	;# 
  2490  018F                     	;# 
  2491  0190                     	;# 
  2492  0191                     	;# 
  2493  0192                     	;# 
  2494  0196                     	;# 
  2495  0197                     	;# 
  2496  0198                     	;# 
  2497  0199                     	;# 
  2498  019A                     	;# 
  2499  019B                     	;# 
  2500  019C                     	;# 
  2501  020C                     	;# 
  2502  020D                     	;# 
  2503  020E                     	;# 
  2504  020E                     	;# 
  2505  020F                     	;# 
  2506  020F                     	;# 
  2507  0210                     	;# 
  2508  0210                     	;# 
  2509  0211                     	;# 
  2510  0211                     	;# 
  2511  0212                     	;# 
  2512  0213                     	;# 
  2513  0214                     	;# 
  2514  0214                     	;# 
  2515  0215                     	;# 
  2516  0215                     	;# 
  2517  0216                     	;# 
  2518  0216                     	;# 
  2519  0217                     	;# 
  2520  0217                     	;# 
  2521  0218                     	;# 
  2522  0219                     	;# 
  2523  021A                     	;# 
  2524  021A                     	;# 
  2525  021B                     	;# 
  2526  021B                     	;# 
  2527  021C                     	;# 
  2528  021C                     	;# 
  2529  021D                     	;# 
  2530  021D                     	;# 
  2531  021E                     	;# 
  2532  021F                     	;# 
  2533  028C                     	;# 
  2534  028C                     	;# 
  2535  028D                     	;# 
  2536  028D                     	;# 
  2537  028E                     	;# 
  2538  028F                     	;# 
  2539  0290                     	;# 
  2540  0291                     	;# 
  2541  0292                     	;# 
  2542  0292                     	;# 
  2543  0293                     	;# 
  2544  0293                     	;# 
  2545  0294                     	;# 
  2546  0295                     	;# 
  2547  0296                     	;# 
  2548  0297                     	;# 
  2549  0298                     	;# 
  2550  0298                     	;# 
  2551  0299                     	;# 
  2552  0299                     	;# 
  2553  029A                     	;# 
  2554  029B                     	;# 
  2555  029C                     	;# 
  2556  029D                     	;# 
  2557  029F                     	;# 
  2558  030C                     	;# 
  2559  030C                     	;# 
  2560  030D                     	;# 
  2561  030E                     	;# 
  2562  030F                     	;# 
  2563  0310                     	;# 
  2564  0310                     	;# 
  2565  0311                     	;# 
  2566  0312                     	;# 
  2567  0313                     	;# 
  2568  0314                     	;# 
  2569  0314                     	;# 
  2570  0315                     	;# 
  2571  0316                     	;# 
  2572  0317                     	;# 
  2573  0318                     	;# 
  2574  0318                     	;# 
  2575  0319                     	;# 
  2576  031A                     	;# 
  2577  031B                     	;# 
  2578  038C                     	;# 
  2579  038C                     	;# 
  2580  038D                     	;# 
  2581  038E                     	;# 
  2582  0390                     	;# 
  2583  0390                     	;# 
  2584  0391                     	;# 
  2585  0392                     	;# 
  2586  048C                     	;# 
  2587  048C                     	;# 
  2588  048D                     	;# 
  2589  048E                     	;# 
  2590  048F                     	;# 
  2591  048F                     	;# 
  2592  0490                     	;# 
  2593  0491                     	;# 
  2594  0492                     	;# 
  2595  0492                     	;# 
  2596  0493                     	;# 
  2597  0494                     	;# 
  2598  0495                     	;# 
  2599  0495                     	;# 
  2600  0496                     	;# 
  2601  0497                     	;# 
  2602  0498                     	;# 
  2603  0499                     	;# 
  2604  049A                     	;# 
  2605  049B                     	;# 
  2606  049C                     	;# 
  2607  049D                     	;# 
  2608  058C                     	;# 
  2609  058C                     	;# 
  2610  058D                     	;# 
  2611  058E                     	;# 
  2612  058F                     	;# 
  2613  058F                     	;# 
  2614  0590                     	;# 
  2615  0591                     	;# 
  2616  0592                     	;# 
  2617  0593                     	;# 
  2618  059C                     	;# 
  2619  059C                     	;# 
  2620  059D                     	;# 
  2621  059D                     	;# 
  2622  059E                     	;# 
  2623  059F                     	;# 
  2624  060C                     	;# 
  2625  060C                     	;# 
  2626  060D                     	;# 
  2627  060D                     	;# 
  2628  060E                     	;# 
  2629  060F                     	;# 
  2630  0610                     	;# 
  2631  0611                     	;# 
  2632  0612                     	;# 
  2633  0613                     	;# 
  2634  0614                     	;# 
  2635  0616                     	;# 
  2636  0616                     	;# 
  2637  0617                     	;# 
  2638  0617                     	;# 
  2639  0618                     	;# 
  2640  0619                     	;# 
  2641  061A                     	;# 
  2642  061B                     	;# 
  2643  061C                     	;# 
  2644  061D                     	;# 
  2645  061E                     	;# 
  2646  070C                     	;# 
  2647  070D                     	;# 
  2648  070E                     	;# 
  2649  070F                     	;# 
  2650  0710                     	;# 
  2651  0711                     	;# 
  2652  0712                     	;# 
  2653  0713                     	;# 
  2654  0714                     	;# 
  2655  0716                     	;# 
  2656  0717                     	;# 
  2657  0718                     	;# 
  2658  0719                     	;# 
  2659  071A                     	;# 
  2660  071B                     	;# 
  2661  071C                     	;# 
  2662  071D                     	;# 
  2663  071E                     	;# 
  2664  0796                     	;# 
  2665  0797                     	;# 
  2666  0798                     	;# 
  2667  0799                     	;# 
  2668  079A                     	;# 
  2669  079B                     	;# 
  2670  079C                     	;# 
  2671  079D                     	;# 
  2672  080C                     	;# 
  2673  080D                     	;# 
  2674  080E                     	;# 
  2675  080F                     	;# 
  2676  0810                     	;# 
  2677  0811                     	;# 
  2678  0812                     	;# 
  2679  0813                     	;# 
  2680  0814                     	;# 
  2681  081A                     	;# 
  2682  081A                     	;# 
  2683  081B                     	;# 
  2684  081C                     	;# 
  2685  081C                     	;# 
  2686  081D                     	;# 
  2687  081E                     	;# 
  2688  081F                     	;# 
  2689  088C                     	;# 
  2690  088D                     	;# 
  2691  088E                     	;# 
  2692  088F                     	;# 
  2693  0890                     	;# 
  2694  0891                     	;# 
  2695  0892                     	;# 
  2696  0893                     	;# 
  2697  0895                     	;# 
  2698  0896                     	;# 
  2699  0897                     	;# 
  2700  0898                     	;# 
  2701  0899                     	;# 
  2702  089A                     	;# 
  2703  089B                     	;# 
  2704  090C                     	;# 
  2705  090E                     	;# 
  2706  090F                     	;# 
  2707  091F                     	;# 
  2708  098F                     	;# 
  2709  098F                     	;# 
  2710  0990                     	;# 
  2711  0991                     	;# 
  2712  0992                     	;# 
  2713  0993                     	;# 
  2714  0994                     	;# 
  2715  0995                     	;# 
  2716  0996                     	;# 
  2717  0997                     	;# 
  2718  1E0F                     	;# 
  2719  1E10                     	;# 
  2720  1E11                     	;# 
  2721  1E12                     	;# 
  2722  1E13                     	;# 
  2723  1E14                     	;# 
  2724  1E15                     	;# 
  2725  1E16                     	;# 
  2726  1E17                     	;# 
  2727  1E18                     	;# 
  2728  1E19                     	;# 
  2729  1E1A                     	;# 
  2730  1E1B                     	;# 
  2731  1E1C                     	;# 
  2732  1E1D                     	;# 
  2733  1E1E                     	;# 
  2734  1E1F                     	;# 
  2735  1E20                     	;# 
  2736  1E21                     	;# 
  2737  1E22                     	;# 
  2738  1E23                     	;# 
  2739  1E24                     	;# 
  2740  1E25                     	;# 
  2741  1E26                     	;# 
  2742  1E27                     	;# 
  2743  1E28                     	;# 
  2744  1E29                     	;# 
  2745  1E2A                     	;# 
  2746  1E2B                     	;# 
  2747  1E2C                     	;# 
  2748  1E2D                     	;# 
  2749  1E2E                     	;# 
  2750  1E2F                     	;# 
  2751  1E30                     	;# 
  2752  1E31                     	;# 
  2753  1E32                     	;# 
  2754  1E33                     	;# 
  2755  1E34                     	;# 
  2756  1E35                     	;# 
  2757  1E36                     	;# 
  2758  1E37                     	;# 
  2759  1E8F                     	;# 
  2760  1E90                     	;# 
  2761  1E91                     	;# 
  2762  1E92                     	;# 
  2763  1E93                     	;# 
  2764  1E94                     	;# 
  2765  1E95                     	;# 
  2766  1E96                     	;# 
  2767  1E97                     	;# 
  2768  1E9C                     	;# 
  2769  1E9D                     	;# 
  2770  1E9E                     	;# 
  2771  1EA1                     	;# 
  2772  1EA2                     	;# 
  2773  1EA3                     	;# 
  2774  1EA4                     	;# 
  2775  1EA9                     	;# 
  2776  1EAA                     	;# 
  2777  1EB1                     	;# 
  2778  1EB2                     	;# 
  2779  1EB8                     	;# 
  2780  1EB9                     	;# 
  2781  1EBA                     	;# 
  2782  1EBB                     	;# 
  2783  1EBC                     	;# 
  2784  1EBD                     	;# 
  2785  1EBE                     	;# 
  2786  1EC3                     	;# 
  2787  1EC5                     	;# 
  2788  1EC6                     	;# 
  2789  1EC7                     	;# 
  2790  1EC8                     	;# 
  2791  1EC9                     	;# 
  2792  1ECA                     	;# 
  2793  1ECB                     	;# 
  2794  1ECB                     	;# 
  2795  1ECB                     	;# 
  2796  1ECC                     	;# 
  2797  1ECC                     	;# 
  2798  1ECC                     	;# 
  2799  1F10                     	;# 
  2800  1F11                     	;# 
  2801  1F12                     	;# 
  2802  1F14                     	;# 
  2803  1F15                     	;# 
  2804  1F1C                     	;# 
  2805  1F1D                     	;# 
  2806  1F1E                     	;# 
  2807  1F1F                     	;# 
  2808  1F20                     	;# 
  2809  1F21                     	;# 
  2810  1F22                     	;# 
  2811  1F23                     	;# 
  2812  1F24                     	;# 
  2813  1F25                     	;# 
  2814  1F26                     	;# 
  2815  1F27                     	;# 
  2816  1F38                     	;# 
  2817  1F39                     	;# 
  2818  1F3A                     	;# 
  2819  1F3B                     	;# 
  2820  1F3C                     	;# 
  2821  1F3D                     	;# 
  2822  1F3E                     	;# 
  2823  1F3F                     	;# 
  2824  1F43                     	;# 
  2825  1F44                     	;# 
  2826  1F45                     	;# 
  2827  1F46                     	;# 
  2828  1F47                     	;# 
  2829  1F48                     	;# 
  2830  1F49                     	;# 
  2831  1F4A                     	;# 
  2832  1F4E                     	;# 
  2833  1F4F                     	;# 
  2834  1F50                     	;# 
  2835  1F51                     	;# 
  2836  1F52                     	;# 
  2837  1F53                     	;# 
  2838  1F54                     	;# 
  2839  1F55                     	;# 
  2840  1FE4                     	;# 
  2841  1FE5                     	;# 
  2842  1FE6                     	;# 
  2843  1FE7                     	;# 
  2844  1FE8                     	;# 
  2845  1FE8                     	;# 
  2846  1FE9                     	;# 
  2847  1FEA                     	;# 
  2848  1FEB                     	;# 
  2849  1FED                     	;# 
  2850  1FEE                     	;# 
  2851  1FEF                     	;# 
  2852  0000                     	;# 
  2853  0001                     	;# 
  2854  0002                     	;# 
  2855  0003                     	;# 
  2856  0004                     	;# 
  2857  0005                     	;# 
  2858  0006                     	;# 
  2859  0007                     	;# 
  2860  0008                     	;# 
  2861  0009                     	;# 
  2862  000A                     	;# 
  2863  000B                     	;# 
  2864  000C                     	;# 
  2865  000D                     	;# 
  2866  000E                     	;# 
  2867  0012                     	;# 
  2868  0013                     	;# 
  2869  0014                     	;# 
  2870  0018                     	;# 
  2871  0019                     	;# 
  2872  001A                     	;# 
  2873  008C                     	;# 
  2874  008C                     	;# 
  2875  008D                     	;# 
  2876  008E                     	;# 
  2877  008E                     	;# 
  2878  008F                     	;# 
  2879  0090                     	;# 
  2880  0090                     	;# 
  2881  0091                     	;# 
  2882  0092                     	;# 
  2883  0092                     	;# 
  2884  0093                     	;# 
  2885  0094                     	;# 
  2886  0094                     	;# 
  2887  0095                     	;# 
  2888  0096                     	;# 
  2889  0096                     	;# 
  2890  0097                     	;# 
  2891  0098                     	;# 
  2892  0099                     	;# 
  2893  009A                     	;# 
  2894  009B                     	;# 
  2895  009B                     	;# 
  2896  009C                     	;# 
  2897  009D                     	;# 
  2898  009D                     	;# 
  2899  009E                     	;# 
  2900  009F                     	;# 
  2901  010C                     	;# 
  2902  010C                     	;# 
  2903  010D                     	;# 
  2904  010E                     	;# 
  2905  010F                     	;# 
  2906  010F                     	;# 
  2907  0110                     	;# 
  2908  0111                     	;# 
  2909  0112                     	;# 
  2910  0113                     	;# 
  2911  0114                     	;# 
  2912  0115                     	;# 
  2913  0116                     	;# 
  2914  0117                     	;# 
  2915  0118                     	;# 
  2916  0119                     	;# 
  2917  0119                     	;# 
  2918  0119                     	;# 
  2919  011A                     	;# 
  2920  011A                     	;# 
  2921  011A                     	;# 
  2922  011B                     	;# 
  2923  011B                     	;# 
  2924  011B                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011C                     	;# 
  2928  011C                     	;# 
  2929  011C                     	;# 
  2930  011D                     	;# 
  2931  011D                     	;# 
  2932  011D                     	;# 
  2933  011E                     	;# 
  2934  011E                     	;# 
  2935  011E                     	;# 
  2936  011F                     	;# 
  2937  011F                     	;# 
  2938  011F                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  018C                     	;# 
  2942  018D                     	;# 
  2943  018E                     	;# 
  2944  018F                     	;# 
  2945  0190                     	;# 
  2946  0191                     	;# 
  2947  0192                     	;# 
  2948  0196                     	;# 
  2949  0197                     	;# 
  2950  0198                     	;# 
  2951  0199                     	;# 
  2952  019A                     	;# 
  2953  019B                     	;# 
  2954  019C                     	;# 
  2955  020C                     	;# 
  2956  020D                     	;# 
  2957  020E                     	;# 
  2958  020E                     	;# 
  2959  020F                     	;# 
  2960  020F                     	;# 
  2961  0210                     	;# 
  2962  0210                     	;# 
  2963  0211                     	;# 
  2964  0211                     	;# 
  2965  0212                     	;# 
  2966  0213                     	;# 
  2967  0214                     	;# 
  2968  0214                     	;# 
  2969  0215                     	;# 
  2970  0215                     	;# 
  2971  0216                     	;# 
  2972  0216                     	;# 
  2973  0217                     	;# 
  2974  0217                     	;# 
  2975  0218                     	;# 
  2976  0219                     	;# 
  2977  021A                     	;# 
  2978  021A                     	;# 
  2979  021B                     	;# 
  2980  021B                     	;# 
  2981  021C                     	;# 
  2982  021C                     	;# 
  2983  021D                     	;# 
  2984  021D                     	;# 
  2985  021E                     	;# 
  2986  021F                     	;# 
  2987  028C                     	;# 
  2988  028C                     	;# 
  2989  028D                     	;# 
  2990  028D                     	;# 
  2991  028E                     	;# 
  2992  028F                     	;# 
  2993  0290                     	;# 
  2994  0291                     	;# 
  2995  0292                     	;# 
  2996  0292                     	;# 
  2997  0293                     	;# 
  2998  0293                     	;# 
  2999  0294                     	;# 
  3000  0295                     	;# 
  3001  0296                     	;# 
  3002  0297                     	;# 
  3003  0298                     	;# 
  3004  0298                     	;# 
  3005  0299                     	;# 
  3006  0299                     	;# 
  3007  029A                     	;# 
  3008  029B                     	;# 
  3009  029C                     	;# 
  3010  029D                     	;# 
  3011  029F                     	;# 
  3012  030C                     	;# 
  3013  030C                     	;# 
  3014  030D                     	;# 
  3015  030E                     	;# 
  3016  030F                     	;# 
  3017  0310                     	;# 
  3018  0310                     	;# 
  3019  0311                     	;# 
  3020  0312                     	;# 
  3021  0313                     	;# 
  3022  0314                     	;# 
  3023  0314                     	;# 
  3024  0315                     	;# 
  3025  0316                     	;# 
  3026  0317                     	;# 
  3027  0318                     	;# 
  3028  0318                     	;# 
  3029  0319                     	;# 
  3030  031A                     	;# 
  3031  031B                     	;# 
  3032  038C                     	;# 
  3033  038C                     	;# 
  3034  038D                     	;# 
  3035  038E                     	;# 
  3036  0390                     	;# 
  3037  0390                     	;# 
  3038  0391                     	;# 
  3039  0392                     	;# 
  3040  048C                     	;# 
  3041  048C                     	;# 
  3042  048D                     	;# 
  3043  048E                     	;# 
  3044  048F                     	;# 
  3045  048F                     	;# 
  3046  0490                     	;# 
  3047  0491                     	;# 
  3048  0492                     	;# 
  3049  0492                     	;# 
  3050  0493                     	;# 
  3051  0494                     	;# 
  3052  0495                     	;# 
  3053  0495                     	;# 
  3054  0496                     	;# 
  3055  0497                     	;# 
  3056  0498                     	;# 
  3057  0499                     	;# 
  3058  049A                     	;# 
  3059  049B                     	;# 
  3060  049C                     	;# 
  3061  049D                     	;# 
  3062  058C                     	;# 
  3063  058C                     	;# 
  3064  058D                     	;# 
  3065  058E                     	;# 
  3066  058F                     	;# 
  3067  058F                     	;# 
  3068  0590                     	;# 
  3069  0591                     	;# 
  3070  0592                     	;# 
  3071  0593                     	;# 
  3072  059C                     	;# 
  3073  059C                     	;# 
  3074  059D                     	;# 
  3075  059D                     	;# 
  3076  059E                     	;# 
  3077  059F                     	;# 
  3078  060C                     	;# 
  3079  060C                     	;# 
  3080  060D                     	;# 
  3081  060D                     	;# 
  3082  060E                     	;# 
  3083  060F                     	;# 
  3084  0610                     	;# 
  3085  0611                     	;# 
  3086  0612                     	;# 
  3087  0613                     	;# 
  3088  0614                     	;# 
  3089  0616                     	;# 
  3090  0616                     	;# 
  3091  0617                     	;# 
  3092  0617                     	;# 
  3093  0618                     	;# 
  3094  0619                     	;# 
  3095  061A                     	;# 
  3096  061B                     	;# 
  3097  061C                     	;# 
  3098  061D                     	;# 
  3099  061E                     	;# 
  3100  070C                     	;# 
  3101  070D                     	;# 
  3102  070E                     	;# 
  3103  070F                     	;# 
  3104  0710                     	;# 
  3105  0711                     	;# 
  3106  0712                     	;# 
  3107  0713                     	;# 
  3108  0714                     	;# 
  3109  0716                     	;# 
  3110  0717                     	;# 
  3111  0718                     	;# 
  3112  0719                     	;# 
  3113  071A                     	;# 
  3114  071B                     	;# 
  3115  071C                     	;# 
  3116  071D                     	;# 
  3117  071E                     	;# 
  3118  0796                     	;# 
  3119  0797                     	;# 
  3120  0798                     	;# 
  3121  0799                     	;# 
  3122  079A                     	;# 
  3123  079B                     	;# 
  3124  079C                     	;# 
  3125  079D                     	;# 
  3126  080C                     	;# 
  3127  080D                     	;# 
  3128  080E                     	;# 
  3129  080F                     	;# 
  3130  0810                     	;# 
  3131  0811                     	;# 
  3132  0812                     	;# 
  3133  0813                     	;# 
  3134  0814                     	;# 
  3135  081A                     	;# 
  3136  081A                     	;# 
  3137  081B                     	;# 
  3138  081C                     	;# 
  3139  081C                     	;# 
  3140  081D                     	;# 
  3141  081E                     	;# 
  3142  081F                     	;# 
  3143  088C                     	;# 
  3144  088D                     	;# 
  3145  088E                     	;# 
  3146  088F                     	;# 
  3147  0890                     	;# 
  3148  0891                     	;# 
  3149  0892                     	;# 
  3150  0893                     	;# 
  3151  0895                     	;# 
  3152  0896                     	;# 
  3153  0897                     	;# 
  3154  0898                     	;# 
  3155  0899                     	;# 
  3156  089A                     	;# 
  3157  089B                     	;# 
  3158  090C                     	;# 
  3159  090E                     	;# 
  3160  090F                     	;# 
  3161  091F                     	;# 
  3162  098F                     	;# 
  3163  098F                     	;# 
  3164  0990                     	;# 
  3165  0991                     	;# 
  3166  0992                     	;# 
  3167  0993                     	;# 
  3168  0994                     	;# 
  3169  0995                     	;# 
  3170  0996                     	;# 
  3171  0997                     	;# 
  3172  1E0F                     	;# 
  3173  1E10                     	;# 
  3174  1E11                     	;# 
  3175  1E12                     	;# 
  3176  1E13                     	;# 
  3177  1E14                     	;# 
  3178  1E15                     	;# 
  3179  1E16                     	;# 
  3180  1E17                     	;# 
  3181  1E18                     	;# 
  3182  1E19                     	;# 
  3183  1E1A                     	;# 
  3184  1E1B                     	;# 
  3185  1E1C                     	;# 
  3186  1E1D                     	;# 
  3187  1E1E                     	;# 
  3188  1E1F                     	;# 
  3189  1E20                     	;# 
  3190  1E21                     	;# 
  3191  1E22                     	;# 
  3192  1E23                     	;# 
  3193  1E24                     	;# 
  3194  1E25                     	;# 
  3195  1E26                     	;# 
  3196  1E27                     	;# 
  3197  1E28                     	;# 
  3198  1E29                     	;# 
  3199  1E2A                     	;# 
  3200  1E2B                     	;# 
  3201  1E2C                     	;# 
  3202  1E2D                     	;# 
  3203  1E2E                     	;# 
  3204  1E2F                     	;# 
  3205  1E30                     	;# 
  3206  1E31                     	;# 
  3207  1E32                     	;# 
  3208  1E33                     	;# 
  3209  1E34                     	;# 
  3210  1E35                     	;# 
  3211  1E36                     	;# 
  3212  1E37                     	;# 
  3213  1E8F                     	;# 
  3214  1E90                     	;# 
  3215  1E91                     	;# 
  3216  1E92                     	;# 
  3217  1E93                     	;# 
  3218  1E94                     	;# 
  3219  1E95                     	;# 
  3220  1E96                     	;# 
  3221  1E97                     	;# 
  3222  1E9C                     	;# 
  3223  1E9D                     	;# 
  3224  1E9E                     	;# 
  3225  1EA1                     	;# 
  3226  1EA2                     	;# 
  3227  1EA3                     	;# 
  3228  1EA4                     	;# 
  3229  1EA9                     	;# 
  3230  1EAA                     	;# 
  3231  1EB1                     	;# 
  3232  1EB2                     	;# 
  3233  1EB8                     	;# 
  3234  1EB9                     	;# 
  3235  1EBA                     	;# 
  3236  1EBB                     	;# 
  3237  1EBC                     	;# 
  3238  1EBD                     	;# 
  3239  1EBE                     	;# 
  3240  1EC3                     	;# 
  3241  1EC5                     	;# 
  3242  1EC6                     	;# 
  3243  1EC7                     	;# 
  3244  1EC8                     	;# 
  3245  1EC9                     	;# 
  3246  1ECA                     	;# 
  3247  1ECB                     	;# 
  3248  1ECB                     	;# 
  3249  1ECB                     	;# 
  3250  1ECC                     	;# 
  3251  1ECC                     	;# 
  3252  1ECC                     	;# 
  3253  1F10                     	;# 
  3254  1F11                     	;# 
  3255  1F12                     	;# 
  3256  1F14                     	;# 
  3257  1F15                     	;# 
  3258  1F1C                     	;# 
  3259  1F1D                     	;# 
  3260  1F1E                     	;# 
  3261  1F1F                     	;# 
  3262  1F20                     	;# 
  3263  1F21                     	;# 
  3264  1F22                     	;# 
  3265  1F23                     	;# 
  3266  1F24                     	;# 
  3267  1F25                     	;# 
  3268  1F26                     	;# 
  3269  1F27                     	;# 
  3270  1F38                     	;# 
  3271  1F39                     	;# 
  3272  1F3A                     	;# 
  3273  1F3B                     	;# 
  3274  1F3C                     	;# 
  3275  1F3D                     	;# 
  3276  1F3E                     	;# 
  3277  1F3F                     	;# 
  3278  1F43                     	;# 
  3279  1F44                     	;# 
  3280  1F45                     	;# 
  3281  1F46                     	;# 
  3282  1F47                     	;# 
  3283  1F48                     	;# 
  3284  1F49                     	;# 
  3285  1F4A                     	;# 
  3286  1F4E                     	;# 
  3287  1F4F                     	;# 
  3288  1F50                     	;# 
  3289  1F51                     	;# 
  3290  1F52                     	;# 
  3291  1F53                     	;# 
  3292  1F54                     	;# 
  3293  1F55                     	;# 
  3294  1FE4                     	;# 
  3295  1FE5                     	;# 
  3296  1FE6                     	;# 
  3297  1FE7                     	;# 
  3298  1FE8                     	;# 
  3299  1FE8                     	;# 
  3300  1FE9                     	;# 
  3301  1FEA                     	;# 
  3302  1FEB                     	;# 
  3303  1FED                     	;# 
  3304  1FEE                     	;# 
  3305  1FEF                     	;# 
  3306  0000                     	;# 
  3307  0001                     	;# 
  3308  0002                     	;# 
  3309  0003                     	;# 
  3310  0004                     	;# 
  3311  0005                     	;# 
  3312  0006                     	;# 
  3313  0007                     	;# 
  3314  0008                     	;# 
  3315  0009                     	;# 
  3316  000A                     	;# 
  3317  000B                     	;# 
  3318  000C                     	;# 
  3319  000D                     	;# 
  3320  000E                     	;# 
  3321  0012                     	;# 
  3322  0013                     	;# 
  3323  0014                     	;# 
  3324  0018                     	;# 
  3325  0019                     	;# 
  3326  001A                     	;# 
  3327  008C                     	;# 
  3328  008C                     	;# 
  3329  008D                     	;# 
  3330  008E                     	;# 
  3331  008E                     	;# 
  3332  008F                     	;# 
  3333  0090                     	;# 
  3334  0090                     	;# 
  3335  0091                     	;# 
  3336  0092                     	;# 
  3337  0092                     	;# 
  3338  0093                     	;# 
  3339  0094                     	;# 
  3340  0094                     	;# 
  3341  0095                     	;# 
  3342  0096                     	;# 
  3343  0096                     	;# 
  3344  0097                     	;# 
  3345  0098                     	;# 
  3346  0099                     	;# 
  3347  009A                     	;# 
  3348  009B                     	;# 
  3349  009B                     	;# 
  3350  009C                     	;# 
  3351  009D                     	;# 
  3352  009D                     	;# 
  3353  009E                     	;# 
  3354  009F                     	;# 
  3355  010C                     	;# 
  3356  010C                     	;# 
  3357  010D                     	;# 
  3358  010E                     	;# 
  3359  010F                     	;# 
  3360  010F                     	;# 
  3361  0110                     	;# 
  3362  0111                     	;# 
  3363  0112                     	;# 
  3364  0113                     	;# 
  3365  0114                     	;# 
  3366  0115                     	;# 
  3367  0116                     	;# 
  3368  0117                     	;# 
  3369  0118                     	;# 
  3370  0119                     	;# 
  3371  0119                     	;# 
  3372  0119                     	;# 
  3373  011A                     	;# 
  3374  011A                     	;# 
  3375  011A                     	;# 
  3376  011B                     	;# 
  3377  011B                     	;# 
  3378  011B                     	;# 
  3379  011B                     	;# 
  3380  011B                     	;# 
  3381  011C                     	;# 
  3382  011C                     	;# 
  3383  011C                     	;# 
  3384  011D                     	;# 
  3385  011D                     	;# 
  3386  011D                     	;# 
  3387  011E                     	;# 
  3388  011E                     	;# 
  3389  011E                     	;# 
  3390  011F                     	;# 
  3391  011F                     	;# 
  3392  011F                     	;# 
  3393  011F                     	;# 
  3394  011F                     	;# 
  3395  018C                     	;# 
  3396  018D                     	;# 
  3397  018E                     	;# 
  3398  018F                     	;# 
  3399  0190                     	;# 
  3400  0191                     	;# 
  3401  0192                     	;# 
  3402  0196                     	;# 
  3403  0197                     	;# 
  3404  0198                     	;# 
  3405  0199                     	;# 
  3406  019A                     	;# 
  3407  019B                     	;# 
  3408  019C                     	;# 
  3409  020C                     	;# 
  3410  020D                     	;# 
  3411  020E                     	;# 
  3412  020E                     	;# 
  3413  020F                     	;# 
  3414  020F                     	;# 
  3415  0210                     	;# 
  3416  0210                     	;# 
  3417  0211                     	;# 
  3418  0211                     	;# 
  3419  0212                     	;# 
  3420  0213                     	;# 
  3421  0214                     	;# 
  3422  0214                     	;# 
  3423  0215                     	;# 
  3424  0215                     	;# 
  3425  0216                     	;# 
  3426  0216                     	;# 
  3427  0217                     	;# 
  3428  0217                     	;# 
  3429  0218                     	;# 
  3430  0219                     	;# 
  3431  021A                     	;# 
  3432  021A                     	;# 
  3433  021B                     	;# 
  3434  021B                     	;# 
  3435  021C                     	;# 
  3436  021C                     	;# 
  3437  021D                     	;# 
  3438  021D                     	;# 
  3439  021E                     	;# 
  3440  021F                     	;# 
  3441  028C                     	;# 
  3442  028C                     	;# 
  3443  028D                     	;# 
  3444  028D                     	;# 
  3445  028E                     	;# 
  3446  028F                     	;# 
  3447  0290                     	;# 
  3448  0291                     	;# 
  3449  0292                     	;# 
  3450  0292                     	;# 
  3451  0293                     	;# 
  3452  0293                     	;# 
  3453  0294                     	;# 
  3454  0295                     	;# 
  3455  0296                     	;# 
  3456  0297                     	;# 
  3457  0298                     	;# 
  3458  0298                     	;# 
  3459  0299                     	;# 
  3460  0299                     	;# 
  3461  029A                     	;# 
  3462  029B                     	;# 
  3463  029C                     	;# 
  3464  029D                     	;# 
  3465  029F                     	;# 
  3466  030C                     	;# 
  3467  030C                     	;# 
  3468  030D                     	;# 
  3469  030E                     	;# 
  3470  030F                     	;# 
  3471  0310                     	;# 
  3472  0310                     	;# 
  3473  0311                     	;# 
  3474  0312                     	;# 
  3475  0313                     	;# 
  3476  0314                     	;# 
  3477  0314                     	;# 
  3478  0315                     	;# 
  3479  0316                     	;# 
  3480  0317                     	;# 
  3481  0318                     	;# 
  3482  0318                     	;# 
  3483  0319                     	;# 
  3484  031A                     	;# 
  3485  031B                     	;# 
  3486  038C                     	;# 
  3487  038C                     	;# 
  3488  038D                     	;# 
  3489  038E                     	;# 
  3490  0390                     	;# 
  3491  0390                     	;# 
  3492  0391                     	;# 
  3493  0392                     	;# 
  3494  048C                     	;# 
  3495  048C                     	;# 
  3496  048D                     	;# 
  3497  048E                     	;# 
  3498  048F                     	;# 
  3499  048F                     	;# 
  3500  0490                     	;# 
  3501  0491                     	;# 
  3502  0492                     	;# 
  3503  0492                     	;# 
  3504  0493                     	;# 
  3505  0494                     	;# 
  3506  0495                     	;# 
  3507  0495                     	;# 
  3508  0496                     	;# 
  3509  0497                     	;# 
  3510  0498                     	;# 
  3511  0499                     	;# 
  3512  049A                     	;# 
  3513  049B                     	;# 
  3514  049C                     	;# 
  3515  049D                     	;# 
  3516  058C                     	;# 
  3517  058C                     	;# 
  3518  058D                     	;# 
  3519  058E                     	;# 
  3520  058F                     	;# 
  3521  058F                     	;# 
  3522  0590                     	;# 
  3523  0591                     	;# 
  3524  0592                     	;# 
  3525  0593                     	;# 
  3526  059C                     	;# 
  3527  059C                     	;# 
  3528  059D                     	;# 
  3529  059D                     	;# 
  3530  059E                     	;# 
  3531  059F                     	;# 
  3532  060C                     	;# 
  3533  060C                     	;# 
  3534  060D                     	;# 
  3535  060D                     	;# 
  3536  060E                     	;# 
  3537  060F                     	;# 
  3538  0610                     	;# 
  3539  0611                     	;# 
  3540  0612                     	;# 
  3541  0613                     	;# 
  3542  0614                     	;# 
  3543  0616                     	;# 
  3544  0616                     	;# 
  3545  0617                     	;# 
  3546  0617                     	;# 
  3547  0618                     	;# 
  3548  0619                     	;# 
  3549  061A                     	;# 
  3550  061B                     	;# 
  3551  061C                     	;# 
  3552  061D                     	;# 
  3553  061E                     	;# 
  3554  070C                     	;# 
  3555  070D                     	;# 
  3556  070E                     	;# 
  3557  070F                     	;# 
  3558  0710                     	;# 
  3559  0711                     	;# 
  3560  0712                     	;# 
  3561  0713                     	;# 
  3562  0714                     	;# 
  3563  0716                     	;# 
  3564  0717                     	;# 
  3565  0718                     	;# 
  3566  0719                     	;# 
  3567  071A                     	;# 
  3568  071B                     	;# 
  3569  071C                     	;# 
  3570  071D                     	;# 
  3571  071E                     	;# 
  3572  0796                     	;# 
  3573  0797                     	;# 
  3574  0798                     	;# 
  3575  0799                     	;# 
  3576  079A                     	;# 
  3577  079B                     	;# 
  3578  079C                     	;# 
  3579  079D                     	;# 
  3580  080C                     	;# 
  3581  080D                     	;# 
  3582  080E                     	;# 
  3583  080F                     	;# 
  3584  0810                     	;# 
  3585  0811                     	;# 
  3586  0812                     	;# 
  3587  0813                     	;# 
  3588  0814                     	;# 
  3589  081A                     	;# 
  3590  081A                     	;# 
  3591  081B                     	;# 
  3592  081C                     	;# 
  3593  081C                     	;# 
  3594  081D                     	;# 
  3595  081E                     	;# 
  3596  081F                     	;# 
  3597  088C                     	;# 
  3598  088D                     	;# 
  3599  088E                     	;# 
  3600  088F                     	;# 
  3601  0890                     	;# 
  3602  0891                     	;# 
  3603  0892                     	;# 
  3604  0893                     	;# 
  3605  0895                     	;# 
  3606  0896                     	;# 
  3607  0897                     	;# 
  3608  0898                     	;# 
  3609  0899                     	;# 
  3610  089A                     	;# 
  3611  089B                     	;# 
  3612  090C                     	;# 
  3613  090E                     	;# 
  3614  090F                     	;# 
  3615  091F                     	;# 
  3616  098F                     	;# 
  3617  098F                     	;# 
  3618  0990                     	;# 
  3619  0991                     	;# 
  3620  0992                     	;# 
  3621  0993                     	;# 
  3622  0994                     	;# 
  3623  0995                     	;# 
  3624  0996                     	;# 
  3625  0997                     	;# 
  3626  1E0F                     	;# 
  3627  1E10                     	;# 
  3628  1E11                     	;# 
  3629  1E12                     	;# 
  3630  1E13                     	;# 
  3631  1E14                     	;# 
  3632  1E15                     	;# 
  3633  1E16                     	;# 
  3634  1E17                     	;# 
  3635  1E18                     	;# 
  3636  1E19                     	;# 
  3637  1E1A                     	;# 
  3638  1E1B                     	;# 
  3639  1E1C                     	;# 
  3640  1E1D                     	;# 
  3641  1E1E                     	;# 
  3642  1E1F                     	;# 
  3643  1E20                     	;# 
  3644  1E21                     	;# 
  3645  1E22                     	;# 
  3646  1E23                     	;# 
  3647  1E24                     	;# 
  3648  1E25                     	;# 
  3649  1E26                     	;# 
  3650  1E27                     	;# 
  3651  1E28                     	;# 
  3652  1E29                     	;# 
  3653  1E2A                     	;# 
  3654  1E2B                     	;# 
  3655  1E2C                     	;# 
  3656  1E2D                     	;# 
  3657  1E2E                     	;# 
  3658  1E2F                     	;# 
  3659  1E30                     	;# 
  3660  1E31                     	;# 
  3661  1E32                     	;# 
  3662  1E33                     	;# 
  3663  1E34                     	;# 
  3664  1E35                     	;# 
  3665  1E36                     	;# 
  3666  1E37                     	;# 
  3667  1E8F                     	;# 
  3668  1E90                     	;# 
  3669  1E91                     	;# 
  3670  1E92                     	;# 
  3671  1E93                     	;# 
  3672  1E94                     	;# 
  3673  1E95                     	;# 
  3674  1E96                     	;# 
  3675  1E97                     	;# 
  3676  1E9C                     	;# 
  3677  1E9D                     	;# 
  3678  1E9E                     	;# 
  3679  1EA1                     	;# 
  3680  1EA2                     	;# 
  3681  1EA3                     	;# 
  3682  1EA4                     	;# 
  3683  1EA9                     	;# 
  3684  1EAA                     	;# 
  3685  1EB1                     	;# 
  3686  1EB2                     	;# 
  3687  1EB8                     	;# 
  3688  1EB9                     	;# 
  3689  1EBA                     	;# 
  3690  1EBB                     	;# 
  3691  1EBC                     	;# 
  3692  1EBD                     	;# 
  3693  1EBE                     	;# 
  3694  1EC3                     	;# 
  3695  1EC5                     	;# 
  3696  1EC6                     	;# 
  3697  1EC7                     	;# 
  3698  1EC8                     	;# 
  3699  1EC9                     	;# 
  3700  1ECA                     	;# 
  3701  1ECB                     	;# 
  3702  1ECB                     	;# 
  3703  1ECB                     	;# 
  3704  1ECC                     	;# 
  3705  1ECC                     	;# 
  3706  1ECC                     	;# 
  3707  1F10                     	;# 
  3708  1F11                     	;# 
  3709  1F12                     	;# 
  3710  1F14                     	;# 
  3711  1F15                     	;# 
  3712  1F1C                     	;# 
  3713  1F1D                     	;# 
  3714  1F1E                     	;# 
  3715  1F1F                     	;# 
  3716  1F20                     	;# 
  3717  1F21                     	;# 
  3718  1F22                     	;# 
  3719  1F23                     	;# 
  3720  1F24                     	;# 
  3721  1F25                     	;# 
  3722  1F26                     	;# 
  3723  1F27                     	;# 
  3724  1F38                     	;# 
  3725  1F39                     	;# 
  3726  1F3A                     	;# 
  3727  1F3B                     	;# 
  3728  1F3C                     	;# 
  3729  1F3D                     	;# 
  3730  1F3E                     	;# 
  3731  1F3F                     	;# 
  3732  1F43                     	;# 
  3733  1F44                     	;# 
  3734  1F45                     	;# 
  3735  1F46                     	;# 
  3736  1F47                     	;# 
  3737  1F48                     	;# 
  3738  1F49                     	;# 
  3739  1F4A                     	;# 
  3740  1F4E                     	;# 
  3741  1F4F                     	;# 
  3742  1F50                     	;# 
  3743  1F51                     	;# 
  3744  1F52                     	;# 
  3745  1F53                     	;# 
  3746  1F54                     	;# 
  3747  1F55                     	;# 
  3748  1FE4                     	;# 
  3749  1FE5                     	;# 
  3750  1FE6                     	;# 
  3751  1FE7                     	;# 
  3752  1FE8                     	;# 
  3753  1FE8                     	;# 
  3754  1FE9                     	;# 
  3755  1FEA                     	;# 
  3756  1FEB                     	;# 
  3757  1FED                     	;# 
  3758  1FEE                     	;# 
  3759  1FEF                     	;# 
  3760  0000                     	;# 
  3761  0001                     	;# 
  3762  0002                     	;# 
  3763  0003                     	;# 
  3764  0004                     	;# 
  3765  0005                     	;# 
  3766  0006                     	;# 
  3767  0007                     	;# 
  3768  0008                     	;# 
  3769  0009                     	;# 
  3770  000A                     	;# 
  3771  000B                     	;# 
  3772  000C                     	;# 
  3773  000D                     	;# 
  3774  000E                     	;# 
  3775  0012                     	;# 
  3776  0013                     	;# 
  3777  0014                     	;# 
  3778  0018                     	;# 
  3779  0019                     	;# 
  3780  001A                     	;# 
  3781  008C                     	;# 
  3782  008C                     	;# 
  3783  008D                     	;# 
  3784  008E                     	;# 
  3785  008E                     	;# 
  3786  008F                     	;# 
  3787  0090                     	;# 
  3788  0090                     	;# 
  3789  0091                     	;# 
  3790  0092                     	;# 
  3791  0092                     	;# 
  3792  0093                     	;# 
  3793  0094                     	;# 
  3794  0094                     	;# 
  3795  0095                     	;# 
  3796  0096                     	;# 
  3797  0096                     	;# 
  3798  0097                     	;# 
  3799  0098                     	;# 
  3800  0099                     	;# 
  3801  009A                     	;# 
  3802  009B                     	;# 
  3803  009B                     	;# 
  3804  009C                     	;# 
  3805  009D                     	;# 
  3806  009D                     	;# 
  3807  009E                     	;# 
  3808  009F                     	;# 
  3809  010C                     	;# 
  3810  010C                     	;# 
  3811  010D                     	;# 
  3812  010E                     	;# 
  3813  010F                     	;# 
  3814  010F                     	;# 
  3815  0110                     	;# 
  3816  0111                     	;# 
  3817  0112                     	;# 
  3818  0113                     	;# 
  3819  0114                     	;# 
  3820  0115                     	;# 
  3821  0116                     	;# 
  3822  0117                     	;# 
  3823  0118                     	;# 
  3824  0119                     	;# 
  3825  0119                     	;# 
  3826  0119                     	;# 
  3827  011A                     	;# 
  3828  011A                     	;# 
  3829  011A                     	;# 
  3830  011B                     	;# 
  3831  011B                     	;# 
  3832  011B                     	;# 
  3833  011B                     	;# 
  3834  011B                     	;# 
  3835  011C                     	;# 
  3836  011C                     	;# 
  3837  011C                     	;# 
  3838  011D                     	;# 
  3839  011D                     	;# 
  3840  011D                     	;# 
  3841  011E                     	;# 
  3842  011E                     	;# 
  3843  011E                     	;# 
  3844  011F                     	;# 
  3845  011F                     	;# 
  3846  011F                     	;# 
  3847  011F                     	;# 
  3848  011F                     	;# 
  3849  018C                     	;# 
  3850  018D                     	;# 
  3851  018E                     	;# 
  3852  018F                     	;# 
  3853  0190                     	;# 
  3854  0191                     	;# 
  3855  0192                     	;# 
  3856  0196                     	;# 
  3857  0197                     	;# 
  3858  0198                     	;# 
  3859  0199                     	;# 
  3860  019A                     	;# 
  3861  019B                     	;# 
  3862  019C                     	;# 
  3863  020C                     	;# 
  3864  020D                     	;# 
  3865  020E                     	;# 
  3866  020E                     	;# 
  3867  020F                     	;# 
  3868  020F                     	;# 
  3869  0210                     	;# 
  3870  0210                     	;# 
  3871  0211                     	;# 
  3872  0211                     	;# 
  3873  0212                     	;# 
  3874  0213                     	;# 
  3875  0214                     	;# 
  3876  0214                     	;# 
  3877  0215                     	;# 
  3878  0215                     	;# 
  3879  0216                     	;# 
  3880  0216                     	;# 
  3881  0217                     	;# 
  3882  0217                     	;# 
  3883  0218                     	;# 
  3884  0219                     	;# 
  3885  021A                     	;# 
  3886  021A                     	;# 
  3887  021B                     	;# 
  3888  021B                     	;# 
  3889  021C                     	;# 
  3890  021C                     	;# 
  3891  021D                     	;# 
  3892  021D                     	;# 
  3893  021E                     	;# 
  3894  021F                     	;# 
  3895  028C                     	;# 
  3896  028C                     	;# 
  3897  028D                     	;# 
  3898  028D                     	;# 
  3899  028E                     	;# 
  3900  028F                     	;# 
  3901  0290                     	;# 
  3902  0291                     	;# 
  3903  0292                     	;# 
  3904  0292                     	;# 
  3905  0293                     	;# 
  3906  0293                     	;# 
  3907  0294                     	;# 
  3908  0295                     	;# 
  3909  0296                     	;# 
  3910  0297                     	;# 
  3911  0298                     	;# 
  3912  0298                     	;# 
  3913  0299                     	;# 
  3914  0299                     	;# 
  3915  029A                     	;# 
  3916  029B                     	;# 
  3917  029C                     	;# 
  3918  029D                     	;# 
  3919  029F                     	;# 
  3920  030C                     	;# 
  3921  030C                     	;# 
  3922  030D                     	;# 
  3923  030E                     	;# 
  3924  030F                     	;# 
  3925  0310                     	;# 
  3926  0310                     	;# 
  3927  0311                     	;# 
  3928  0312                     	;# 
  3929  0313                     	;# 
  3930  0314                     	;# 
  3931  0314                     	;# 
  3932  0315                     	;# 
  3933  0316                     	;# 
  3934  0317                     	;# 
  3935  0318                     	;# 
  3936  0318                     	;# 
  3937  0319                     	;# 
  3938  031A                     	;# 
  3939  031B                     	;# 
  3940  038C                     	;# 
  3941  038C                     	;# 
  3942  038D                     	;# 
  3943  038E                     	;# 
  3944  0390                     	;# 
  3945  0390                     	;# 
  3946  0391                     	;# 
  3947  0392                     	;# 
  3948  048C                     	;# 
  3949  048C                     	;# 
  3950  048D                     	;# 
  3951  048E                     	;# 
  3952  048F                     	;# 
  3953  048F                     	;# 
  3954  0490                     	;# 
  3955  0491                     	;# 
  3956  0492                     	;# 
  3957  0492                     	;# 
  3958  0493                     	;# 
  3959  0494                     	;# 
  3960  0495                     	;# 
  3961  0495                     	;# 
  3962  0496                     	;# 
  3963  0497                     	;# 
  3964  0498                     	;# 
  3965  0499                     	;# 
  3966  049A                     	;# 
  3967  049B                     	;# 
  3968  049C                     	;# 
  3969  049D                     	;# 
  3970  058C                     	;# 
  3971  058C                     	;# 
  3972  058D                     	;# 
  3973  058E                     	;# 
  3974  058F                     	;# 
  3975  058F                     	;# 
  3976  0590                     	;# 
  3977  0591                     	;# 
  3978  0592                     	;# 
  3979  0593                     	;# 
  3980  059C                     	;# 
  3981  059C                     	;# 
  3982  059D                     	;# 
  3983  059D                     	;# 
  3984  059E                     	;# 
  3985  059F                     	;# 
  3986  060C                     	;# 
  3987  060C                     	;# 
  3988  060D                     	;# 
  3989  060D                     	;# 
  3990  060E                     	;# 
  3991  060F                     	;# 
  3992  0610                     	;# 
  3993  0611                     	;# 
  3994  0612                     	;# 
  3995  0613                     	;# 
  3996  0614                     	;# 
  3997  0616                     	;# 
  3998  0616                     	;# 
  3999  0617                     	;# 
  4000  0617                     	;# 
  4001  0618                     	;# 
  4002  0619                     	;# 
  4003  061A                     	;# 
  4004  061B                     	;# 
  4005  061C                     	;# 
  4006  061D                     	;# 
  4007  061E                     	;# 
  4008  070C                     	;# 
  4009  070D                     	;# 
  4010  070E                     	;# 
  4011  070F                     	;# 
  4012  0710                     	;# 
  4013  0711                     	;# 
  4014  0712                     	;# 
  4015  0713                     	;# 
  4016  0714                     	;# 
  4017  0716                     	;# 
  4018  0717                     	;# 
  4019  0718                     	;# 
  4020  0719                     	;# 
  4021  071A                     	;# 
  4022  071B                     	;# 
  4023  071C                     	;# 
  4024  071D                     	;# 
  4025  071E                     	;# 
  4026  0796                     	;# 
  4027  0797                     	;# 
  4028  0798                     	;# 
  4029  0799                     	;# 
  4030  079A                     	;# 
  4031  079B                     	;# 
  4032  079C                     	;# 
  4033  079D                     	;# 
  4034  080C                     	;# 
  4035  080D                     	;# 
  4036  080E                     	;# 
  4037  080F                     	;# 
  4038  0810                     	;# 
  4039  0811                     	;# 
  4040  0812                     	;# 
  4041  0813                     	;# 
  4042  0814                     	;# 
  4043  081A                     	;# 
  4044  081A                     	;# 
  4045  081B                     	;# 
  4046  081C                     	;# 
  4047  081C                     	;# 
  4048  081D                     	;# 
  4049  081E                     	;# 
  4050  081F                     	;# 
  4051  088C                     	;# 
  4052  088D                     	;# 
  4053  088E                     	;# 
  4054  088F                     	;# 
  4055  0890                     	;# 
  4056  0891                     	;# 
  4057  0892                     	;# 
  4058  0893                     	;# 
  4059  0895                     	;# 
  4060  0896                     	;# 
  4061  0897                     	;# 
  4062  0898                     	;# 
  4063  0899                     	;# 
  4064  089A                     	;# 
  4065  089B                     	;# 
  4066  090C                     	;# 
  4067  090E                     	;# 
  4068  090F                     	;# 
  4069  091F                     	;# 
  4070  098F                     	;# 
  4071  098F                     	;# 
  4072  0990                     	;# 
  4073  0991                     	;# 
  4074  0992                     	;# 
  4075  0993                     	;# 
  4076  0994                     	;# 
  4077  0995                     	;# 
  4078  0996                     	;# 
  4079  0997                     	;# 
  4080  1E0F                     	;# 
  4081  1E10                     	;# 
  4082  1E11                     	;# 
  4083  1E12                     	;# 
  4084  1E13                     	;# 
  4085  1E14                     	;# 
  4086  1E15                     	;# 
  4087  1E16                     	;# 
  4088  1E17                     	;# 
  4089  1E18                     	;# 
  4090  1E19                     	;# 
  4091  1E1A                     	;# 
  4092  1E1B                     	;# 
  4093  1E1C                     	;# 
  4094  1E1D                     	;# 
  4095  1E1E                     	;# 
  4096  1E1F                     	;# 
  4097  1E20                     	;# 
  4098  1E21                     	;# 
  4099  1E22                     	;# 
  4100  1E23                     	;# 
  4101  1E24                     	;# 
  4102  1E25                     	;# 
  4103  1E26                     	;# 
  4104  1E27                     	;# 
  4105  1E28                     	;# 
  4106  1E29                     	;# 
  4107  1E2A                     	;# 
  4108  1E2B                     	;# 
  4109  1E2C                     	;# 
  4110  1E2D                     	;# 
  4111  1E2E                     	;# 
  4112  1E2F                     	;# 
  4113  1E30                     	;# 
  4114  1E31                     	;# 
  4115  1E32                     	;# 
  4116  1E33                     	;# 
  4117  1E34                     	;# 
  4118  1E35                     	;# 
  4119  1E36                     	;# 
  4120  1E37                     	;# 
  4121  1E8F                     	;# 
  4122  1E90                     	;# 
  4123  1E91                     	;# 
  4124  1E92                     	;# 
  4125  1E93                     	;# 
  4126  1E94                     	;# 
  4127  1E95                     	;# 
  4128  1E96                     	;# 
  4129  1E97                     	;# 
  4130  1E9C                     	;# 
  4131  1E9D                     	;# 
  4132  1E9E                     	;# 
  4133  1EA1                     	;# 
  4134  1EA2                     	;# 
  4135  1EA3                     	;# 
  4136  1EA4                     	;# 
  4137  1EA9                     	;# 
  4138  1EAA                     	;# 
  4139  1EB1                     	;# 
  4140  1EB2                     	;# 
  4141  1EB8                     	;# 
  4142  1EB9                     	;# 
  4143  1EBA                     	;# 
  4144  1EBB                     	;# 
  4145  1EBC                     	;# 
  4146  1EBD                     	;# 
  4147  1EBE                     	;# 
  4148  1EC3                     	;# 
  4149  1EC5                     	;# 
  4150  1EC6                     	;# 
  4151  1EC7                     	;# 
  4152  1EC8                     	;# 
  4153  1EC9                     	;# 
  4154  1ECA                     	;# 
  4155  1ECB                     	;# 
  4156  1ECB                     	;# 
  4157  1ECB                     	;# 
  4158  1ECC                     	;# 
  4159  1ECC                     	;# 
  4160  1ECC                     	;# 
  4161  1F10                     	;# 
  4162  1F11                     	;# 
  4163  1F12                     	;# 
  4164  1F14                     	;# 
  4165  1F15                     	;# 
  4166  1F1C                     	;# 
  4167  1F1D                     	;# 
  4168  1F1E                     	;# 
  4169  1F1F                     	;# 
  4170  1F20                     	;# 
  4171  1F21                     	;# 
  4172  1F22                     	;# 
  4173  1F23                     	;# 
  4174  1F24                     	;# 
  4175  1F25                     	;# 
  4176  1F26                     	;# 
  4177  1F27                     	;# 
  4178  1F38                     	;# 
  4179  1F39                     	;# 
  4180  1F3A                     	;# 
  4181  1F3B                     	;# 
  4182  1F3C                     	;# 
  4183  1F3D                     	;# 
  4184  1F3E                     	;# 
  4185  1F3F                     	;# 
  4186  1F43                     	;# 
  4187  1F44                     	;# 
  4188  1F45                     	;# 
  4189  1F46                     	;# 
  4190  1F47                     	;# 
  4191  1F48                     	;# 
  4192  1F49                     	;# 
  4193  1F4A                     	;# 
  4194  1F4E                     	;# 
  4195  1F4F                     	;# 
  4196  1F50                     	;# 
  4197  1F51                     	;# 
  4198  1F52                     	;# 
  4199  1F53                     	;# 
  4200  1F54                     	;# 
  4201  1F55                     	;# 
  4202  1FE4                     	;# 
  4203  1FE5                     	;# 
  4204  1FE6                     	;# 
  4205  1FE7                     	;# 
  4206  1FE8                     	;# 
  4207  1FE8                     	;# 
  4208  1FE9                     	;# 
  4209  1FEA                     	;# 
  4210  1FEB                     	;# 
  4211  1FED                     	;# 
  4212  1FEE                     	;# 
  4213  1FEF                     	;# 
  4214  0000                     	;# 
  4215  0001                     	;# 
  4216  0002                     	;# 
  4217  0003                     	;# 
  4218  0004                     	;# 
  4219  0005                     	;# 
  4220  0006                     	;# 
  4221  0007                     	;# 
  4222  0008                     	;# 
  4223  0009                     	;# 
  4224  000A                     	;# 
  4225  000B                     	;# 
  4226  000C                     	;# 
  4227  000D                     	;# 
  4228  000E                     	;# 
  4229  0012                     	;# 
  4230  0013                     	;# 
  4231  0014                     	;# 
  4232  0018                     	;# 
  4233  0019                     	;# 
  4234  001A                     	;# 
  4235  008C                     	;# 
  4236  008C                     	;# 
  4237  008D                     	;# 
  4238  008E                     	;# 
  4239  008E                     	;# 
  4240  008F                     	;# 
  4241  0090                     	;# 
  4242  0090                     	;# 
  4243  0091                     	;# 
  4244  0092                     	;# 
  4245  0092                     	;# 
  4246  0093                     	;# 
  4247  0094                     	;# 
  4248  0094                     	;# 
  4249  0095                     	;# 
  4250  0096                     	;# 
  4251  0096                     	;# 
  4252  0097                     	;# 
  4253  0098                     	;# 
  4254  0099                     	;# 
  4255  009A                     	;# 
  4256  009B                     	;# 
  4257  009B                     	;# 
  4258  009C                     	;# 
  4259  009D                     	;# 
  4260  009D                     	;# 
  4261  009E                     	;# 
  4262  009F                     	;# 
  4263  010C                     	;# 
  4264  010C                     	;# 
  4265  010D                     	;# 
  4266  010E                     	;# 
  4267  010F                     	;# 
  4268  010F                     	;# 
  4269  0110                     	;# 
  4270  0111                     	;# 
  4271  0112                     	;# 
  4272  0113                     	;# 
  4273  0114                     	;# 
  4274  0115                     	;# 
  4275  0116                     	;# 
  4276  0117                     	;# 
  4277  0118                     	;# 
  4278  0119                     	;# 
  4279  0119                     	;# 
  4280  0119                     	;# 
  4281  011A                     	;# 
  4282  011A                     	;# 
  4283  011A                     	;# 
  4284  011B                     	;# 
  4285  011B                     	;# 
  4286  011B                     	;# 
  4287  011B                     	;# 
  4288  011B                     	;# 
  4289  011C                     	;# 
  4290  011C                     	;# 
  4291  011C                     	;# 
  4292  011D                     	;# 
  4293  011D                     	;# 
  4294  011D                     	;# 
  4295  011E                     	;# 
  4296  011E                     	;# 
  4297  011E                     	;# 
  4298  011F                     	;# 
  4299  011F                     	;# 
  4300  011F                     	;# 
  4301  011F                     	;# 
  4302  011F                     	;# 
  4303  018C                     	;# 
  4304  018D                     	;# 
  4305  018E                     	;# 
  4306  018F                     	;# 
  4307  0190                     	;# 
  4308  0191                     	;# 
  4309  0192                     	;# 
  4310  0196                     	;# 
  4311  0197                     	;# 
  4312  0198                     	;# 
  4313  0199                     	;# 
  4314  019A                     	;# 
  4315  019B                     	;# 
  4316  019C                     	;# 
  4317  020C                     	;# 
  4318  020D                     	;# 
  4319  020E                     	;# 
  4320  020E                     	;# 
  4321  020F                     	;# 
  4322  020F                     	;# 
  4323  0210                     	;# 
  4324  0210                     	;# 
  4325  0211                     	;# 
  4326  0211                     	;# 
  4327  0212                     	;# 
  4328  0213                     	;# 
  4329  0214                     	;# 
  4330  0214                     	;# 
  4331  0215                     	;# 
  4332  0215                     	;# 
  4333  0216                     	;# 
  4334  0216                     	;# 
  4335  0217                     	;# 
  4336  0217                     	;# 
  4337  0218                     	;# 
  4338  0219                     	;# 
  4339  021A                     	;# 
  4340  021A                     	;# 
  4341  021B                     	;# 
  4342  021B                     	;# 
  4343  021C                     	;# 
  4344  021C                     	;# 
  4345  021D                     	;# 
  4346  021D                     	;# 
  4347  021E                     	;# 
  4348  021F                     	;# 
  4349  028C                     	;# 
  4350  028C                     	;# 
  4351  028D                     	;# 
  4352  028D                     	;# 
  4353  028E                     	;# 
  4354  028F                     	;# 
  4355  0290                     	;# 
  4356  0291                     	;# 
  4357  0292                     	;# 
  4358  0292                     	;# 
  4359  0293                     	;# 
  4360  0293                     	;# 
  4361  0294                     	;# 
  4362  0295                     	;# 
  4363  0296                     	;# 
  4364  0297                     	;# 
  4365  0298                     	;# 
  4366  0298                     	;# 
  4367  0299                     	;# 
  4368  0299                     	;# 
  4369  029A                     	;# 
  4370  029B                     	;# 
  4371  029C                     	;# 
  4372  029D                     	;# 
  4373  029F                     	;# 
  4374  030C                     	;# 
  4375  030C                     	;# 
  4376  030D                     	;# 
  4377  030E                     	;# 
  4378  030F                     	;# 
  4379  0310                     	;# 
  4380  0310                     	;# 
  4381  0311                     	;# 
  4382  0312                     	;# 
  4383  0313                     	;# 
  4384  0314                     	;# 
  4385  0314                     	;# 
  4386  0315                     	;# 
  4387  0316                     	;# 
  4388  0317                     	;# 
  4389  0318                     	;# 
  4390  0318                     	;# 
  4391  0319                     	;# 
  4392  031A                     	;# 
  4393  031B                     	;# 
  4394  038C                     	;# 
  4395  038C                     	;# 
  4396  038D                     	;# 
  4397  038E                     	;# 
  4398  0390                     	;# 
  4399  0390                     	;# 
  4400  0391                     	;# 
  4401  0392                     	;# 
  4402  048C                     	;# 
  4403  048C                     	;# 
  4404  048D                     	;# 
  4405  048E                     	;# 
  4406  048F                     	;# 
  4407  048F                     	;# 
  4408  0490                     	;# 
  4409  0491                     	;# 
  4410  0492                     	;# 
  4411  0492                     	;# 
  4412  0493                     	;# 
  4413  0494                     	;# 
  4414  0495                     	;# 
  4415  0495                     	;# 
  4416  0496                     	;# 
  4417  0497                     	;# 
  4418  0498                     	;# 
  4419  0499                     	;# 
  4420  049A                     	;# 
  4421  049B                     	;# 
  4422  049C                     	;# 
  4423  049D                     	;# 
  4424  058C                     	;# 
  4425  058C                     	;# 
  4426  058D                     	;# 
  4427  058E                     	;# 
  4428  058F                     	;# 
  4429  058F                     	;# 
  4430  0590                     	;# 
  4431  0591                     	;# 
  4432  0592                     	;# 
  4433  0593                     	;# 
  4434  059C                     	;# 
  4435  059C                     	;# 
  4436  059D                     	;# 
  4437  059D                     	;# 
  4438  059E                     	;# 
  4439  059F                     	;# 
  4440  060C                     	;# 
  4441  060C                     	;# 
  4442  060D                     	;# 
  4443  060D                     	;# 
  4444  060E                     	;# 
  4445  060F                     	;# 
  4446  0610                     	;# 
  4447  0611                     	;# 
  4448  0612                     	;# 
  4449  0613                     	;# 
  4450  0614                     	;# 
  4451  0616                     	;# 
  4452  0616                     	;# 
  4453  0617                     	;# 
  4454  0617                     	;# 
  4455  0618                     	;# 
  4456  0619                     	;# 
  4457  061A                     	;# 
  4458  061B                     	;# 
  4459  061C                     	;# 
  4460  061D                     	;# 
  4461  061E                     	;# 
  4462  070C                     	;# 
  4463  070D                     	;# 
  4464  070E                     	;# 
  4465  070F                     	;# 
  4466  0710                     	;# 
  4467  0711                     	;# 
  4468  0712                     	;# 
  4469  0713                     	;# 
  4470  0714                     	;# 
  4471  0716                     	;# 
  4472  0717                     	;# 
  4473  0718                     	;# 
  4474  0719                     	;# 
  4475  071A                     	;# 
  4476  071B                     	;# 
  4477  071C                     	;# 
  4478  071D                     	;# 
  4479  071E                     	;# 
  4480  0796                     	;# 
  4481  0797                     	;# 
  4482  0798                     	;# 
  4483  0799                     	;# 
  4484  079A                     	;# 
  4485  079B                     	;# 
  4486  079C                     	;# 
  4487  079D                     	;# 
  4488  080C                     	;# 
  4489  080D                     	;# 
  4490  080E                     	;# 
  4491  080F                     	;# 
  4492  0810                     	;# 
  4493  0811                     	;# 
  4494  0812                     	;# 
  4495  0813                     	;# 
  4496  0814                     	;# 
  4497  081A                     	;# 
  4498  081A                     	;# 
  4499  081B                     	;# 
  4500  081C                     	;# 
  4501  081C                     	;# 
  4502  081D                     	;# 
  4503  081E                     	;# 
  4504  081F                     	;# 
  4505  088C                     	;# 
  4506  088D                     	;# 
  4507  088E                     	;# 
  4508  088F                     	;# 
  4509  0890                     	;# 
  4510  0891                     	;# 
  4511  0892                     	;# 
  4512  0893                     	;# 
  4513  0895                     	;# 
  4514  0896                     	;# 
  4515  0897                     	;# 
  4516  0898                     	;# 
  4517  0899                     	;# 
  4518  089A                     	;# 
  4519  089B                     	;# 
  4520  090C                     	;# 
  4521  090E                     	;# 
  4522  090F                     	;# 
  4523  091F                     	;# 
  4524  098F                     	;# 
  4525  098F                     	;# 
  4526  0990                     	;# 
  4527  0991                     	;# 
  4528  0992                     	;# 
  4529  0993                     	;# 
  4530  0994                     	;# 
  4531  0995                     	;# 
  4532  0996                     	;# 
  4533  0997                     	;# 
  4534  1E0F                     	;# 
  4535  1E10                     	;# 
  4536  1E11                     	;# 
  4537  1E12                     	;# 
  4538  1E13                     	;# 
  4539  1E14                     	;# 
  4540  1E15                     	;# 
  4541  1E16                     	;# 
  4542  1E17                     	;# 
  4543  1E18                     	;# 
  4544  1E19                     	;# 
  4545  1E1A                     	;# 
  4546  1E1B                     	;# 
  4547  1E1C                     	;# 
  4548  1E1D                     	;# 
  4549  1E1E                     	;# 
  4550  1E1F                     	;# 
  4551  1E20                     	;# 
  4552  1E21                     	;# 
  4553  1E22                     	;# 
  4554  1E23                     	;# 
  4555  1E24                     	;# 
  4556  1E25                     	;# 
  4557  1E26                     	;# 
  4558  1E27                     	;# 
  4559  1E28                     	;# 
  4560  1E29                     	;# 
  4561  1E2A                     	;# 
  4562  1E2B                     	;# 
  4563  1E2C                     	;# 
  4564  1E2D                     	;# 
  4565  1E2E                     	;# 
  4566  1E2F                     	;# 
  4567  1E30                     	;# 
  4568  1E31                     	;# 
  4569  1E32                     	;# 
  4570  1E33                     	;# 
  4571  1E34                     	;# 
  4572  1E35                     	;# 
  4573  1E36                     	;# 
  4574  1E37                     	;# 
  4575  1E8F                     	;# 
  4576  1E90                     	;# 
  4577  1E91                     	;# 
  4578  1E92                     	;# 
  4579  1E93                     	;# 
  4580  1E94                     	;# 
  4581  1E95                     	;# 
  4582  1E96                     	;# 
  4583  1E97                     	;# 
  4584  1E9C                     	;# 
  4585  1E9D                     	;# 
  4586  1E9E                     	;# 
  4587  1EA1                     	;# 
  4588  1EA2                     	;# 
  4589  1EA3                     	;# 
  4590  1EA4                     	;# 
  4591  1EA9                     	;# 
  4592  1EAA                     	;# 
  4593  1EB1                     	;# 
  4594  1EB2                     	;# 
  4595  1EB8                     	;# 
  4596  1EB9                     	;# 
  4597  1EBA                     	;# 
  4598  1EBB                     	;# 
  4599  1EBC                     	;# 
  4600  1EBD                     	;# 
  4601  1EBE                     	;# 
  4602  1EC3                     	;# 
  4603  1EC5                     	;# 
  4604  1EC6                     	;# 
  4605  1EC7                     	;# 
  4606  1EC8                     	;# 
  4607  1EC9                     	;# 
  4608  1ECA                     	;# 
  4609  1ECB                     	;# 
  4610  1ECB                     	;# 
  4611  1ECB                     	;# 
  4612  1ECC                     	;# 
  4613  1ECC                     	;# 
  4614  1ECC                     	;# 
  4615  1F10                     	;# 
  4616  1F11                     	;# 
  4617  1F12                     	;# 
  4618  1F14                     	;# 
  4619  1F15                     	;# 
  4620  1F1C                     	;# 
  4621  1F1D                     	;# 
  4622  1F1E                     	;# 
  4623  1F1F                     	;# 
  4624  1F20                     	;# 
  4625  1F21                     	;# 
  4626  1F22                     	;# 
  4627  1F23                     	;# 
  4628  1F24                     	;# 
  4629  1F25                     	;# 
  4630  1F26                     	;# 
  4631  1F27                     	;# 
  4632  1F38                     	;# 
  4633  1F39                     	;# 
  4634  1F3A                     	;# 
  4635  1F3B                     	;# 
  4636  1F3C                     	;# 
  4637  1F3D                     	;# 
  4638  1F3E                     	;# 
  4639  1F3F                     	;# 
  4640  1F43                     	;# 
  4641  1F44                     	;# 
  4642  1F45                     	;# 
  4643  1F46                     	;# 
  4644  1F47                     	;# 
  4645  1F48                     	;# 
  4646  1F49                     	;# 
  4647  1F4A                     	;# 
  4648  1F4E                     	;# 
  4649  1F4F                     	;# 
  4650  1F50                     	;# 
  4651  1F51                     	;# 
  4652  1F52                     	;# 
  4653  1F53                     	;# 
  4654  1F54                     	;# 
  4655  1F55                     	;# 
  4656  1FE4                     	;# 
  4657  1FE5                     	;# 
  4658  1FE6                     	;# 
  4659  1FE7                     	;# 
  4660  1FE8                     	;# 
  4661  1FE8                     	;# 
  4662  1FE9                     	;# 
  4663  1FEA                     	;# 
  4664  1FEB                     	;# 
  4665  1FED                     	;# 
  4666  1FEE                     	;# 
  4667  1FEF                     	;# 
  4668  0000                     	;# 
  4669  0001                     	;# 
  4670  0002                     	;# 
  4671  0003                     	;# 
  4672  0004                     	;# 
  4673  0005                     	;# 
  4674  0006                     	;# 
  4675  0007                     	;# 
  4676  0008                     	;# 
  4677  0009                     	;# 
  4678  000A                     	;# 
  4679  000B                     	;# 
  4680  000C                     	;# 
  4681  000D                     	;# 
  4682  000E                     	;# 
  4683  0012                     	;# 
  4684  0013                     	;# 
  4685  0014                     	;# 
  4686  0018                     	;# 
  4687  0019                     	;# 
  4688  001A                     	;# 
  4689  008C                     	;# 
  4690  008C                     	;# 
  4691  008D                     	;# 
  4692  008E                     	;# 
  4693  008E                     	;# 
  4694  008F                     	;# 
  4695  0090                     	;# 
  4696  0090                     	;# 
  4697  0091                     	;# 
  4698  0092                     	;# 
  4699  0092                     	;# 
  4700  0093                     	;# 
  4701  0094                     	;# 
  4702  0094                     	;# 
  4703  0095                     	;# 
  4704  0096                     	;# 
  4705  0096                     	;# 
  4706  0097                     	;# 
  4707  0098                     	;# 
  4708  0099                     	;# 
  4709  009A                     	;# 
  4710  009B                     	;# 
  4711  009B                     	;# 
  4712  009C                     	;# 
  4713  009D                     	;# 
  4714  009D                     	;# 
  4715  009E                     	;# 
  4716  009F                     	;# 
  4717  010C                     	;# 
  4718  010C                     	;# 
  4719  010D                     	;# 
  4720  010E                     	;# 
  4721  010F                     	;# 
  4722  010F                     	;# 
  4723  0110                     	;# 
  4724  0111                     	;# 
  4725  0112                     	;# 
  4726  0113                     	;# 
  4727  0114                     	;# 
  4728  0115                     	;# 
  4729  0116                     	;# 
  4730  0117                     	;# 
  4731  0118                     	;# 
  4732  0119                     	;# 
  4733  0119                     	;# 
  4734  0119                     	;# 
  4735  011A                     	;# 
  4736  011A                     	;# 
  4737  011A                     	;# 
  4738  011B                     	;# 
  4739  011B                     	;# 
  4740  011B                     	;# 
  4741  011B                     	;# 
  4742  011B                     	;# 
  4743  011C                     	;# 
  4744  011C                     	;# 
  4745  011C                     	;# 
  4746  011D                     	;# 
  4747  011D                     	;# 
  4748  011D                     	;# 
  4749  011E                     	;# 
  4750  011E                     	;# 
  4751  011E                     	;# 
  4752  011F                     	;# 
  4753  011F                     	;# 
  4754  011F                     	;# 
  4755  011F                     	;# 
  4756  011F                     	;# 
  4757  018C                     	;# 
  4758  018D                     	;# 
  4759  018E                     	;# 
  4760  018F                     	;# 
  4761  0190                     	;# 
  4762  0191                     	;# 
  4763  0192                     	;# 
  4764  0196                     	;# 
  4765  0197                     	;# 
  4766  0198                     	;# 
  4767  0199                     	;# 
  4768  019A                     	;# 
  4769  019B                     	;# 
  4770  019C                     	;# 
  4771  020C                     	;# 
  4772  020D                     	;# 
  4773  020E                     	;# 
  4774  020E                     	;# 
  4775  020F                     	;# 
  4776  020F                     	;# 
  4777  0210                     	;# 
  4778  0210                     	;# 
  4779  0211                     	;# 
  4780  0211                     	;# 
  4781  0212                     	;# 
  4782  0213                     	;# 
  4783  0214                     	;# 
  4784  0214                     	;# 
  4785  0215                     	;# 
  4786  0215                     	;# 
  4787  0216                     	;# 
  4788  0216                     	;# 
  4789  0217                     	;# 
  4790  0217                     	;# 
  4791  0218                     	;# 
  4792  0219                     	;# 
  4793  021A                     	;# 
  4794  021A                     	;# 
  4795  021B                     	;# 
  4796  021B                     	;# 
  4797  021C                     	;# 
  4798  021C                     	;# 
  4799  021D                     	;# 
  4800  021D                     	;# 
  4801  021E                     	;# 
  4802  021F                     	;# 
  4803  028C                     	;# 
  4804  028C                     	;# 
  4805  028D                     	;# 
  4806  028D                     	;# 
  4807  028E                     	;# 
  4808  028F                     	;# 
  4809  0290                     	;# 
  4810  0291                     	;# 
  4811  0292                     	;# 
  4812  0292                     	;# 
  4813  0293                     	;# 
  4814  0293                     	;# 
  4815  0294                     	;# 
  4816  0295                     	;# 
  4817  0296                     	;# 
  4818  0297                     	;# 
  4819  0298                     	;# 
  4820  0298                     	;# 
  4821  0299                     	;# 
  4822  0299                     	;# 
  4823  029A                     	;# 
  4824  029B                     	;# 
  4825  029C                     	;# 
  4826  029D                     	;# 
  4827  029F                     	;# 
  4828  030C                     	;# 
  4829  030C                     	;# 
  4830  030D                     	;# 
  4831  030E                     	;# 
  4832  030F                     	;# 
  4833  0310                     	;# 
  4834  0310                     	;# 
  4835  0311                     	;# 
  4836  0312                     	;# 
  4837  0313                     	;# 
  4838  0314                     	;# 
  4839  0314                     	;# 
  4840  0315                     	;# 
  4841  0316                     	;# 
  4842  0317                     	;# 
  4843  0318                     	;# 
  4844  0318                     	;# 
  4845  0319                     	;# 
  4846  031A                     	;# 
  4847  031B                     	;# 
  4848  038C                     	;# 
  4849  038C                     	;# 
  4850  038D                     	;# 
  4851  038E                     	;# 
  4852  0390                     	;# 
  4853  0390                     	;# 
  4854  0391                     	;# 
  4855  0392                     	;# 
  4856  048C                     	;# 
  4857  048C                     	;# 
  4858  048D                     	;# 
  4859  048E                     	;# 
  4860  048F                     	;# 
  4861  048F                     	;# 
  4862  0490                     	;# 
  4863  0491                     	;# 
  4864  0492                     	;# 
  4865  0492                     	;# 
  4866  0493                     	;# 
  4867  0494                     	;# 
  4868  0495                     	;# 
  4869  0495                     	;# 
  4870  0496                     	;# 
  4871  0497                     	;# 
  4872  0498                     	;# 
  4873  0499                     	;# 
  4874  049A                     	;# 
  4875  049B                     	;# 
  4876  049C                     	;# 
  4877  049D                     	;# 
  4878  058C                     	;# 
  4879  058C                     	;# 
  4880  058D                     	;# 
  4881  058E                     	;# 
  4882  058F                     	;# 
  4883  058F                     	;# 
  4884  0590                     	;# 
  4885  0591                     	;# 
  4886  0592                     	;# 
  4887  0593                     	;# 
  4888  059C                     	;# 
  4889  059C                     	;# 
  4890  059D                     	;# 
  4891  059D                     	;# 
  4892  059E                     	;# 
  4893  059F                     	;# 
  4894  060C                     	;# 
  4895  060C                     	;# 
  4896  060D                     	;# 
  4897  060D                     	;# 
  4898  060E                     	;# 
  4899  060F                     	;# 
  4900  0610                     	;# 
  4901  0611                     	;# 
  4902  0612                     	;# 
  4903  0613                     	;# 
  4904  0614                     	;# 
  4905  0616                     	;# 
  4906  0616                     	;# 
  4907  0617                     	;# 
  4908  0617                     	;# 
  4909  0618                     	;# 
  4910  0619                     	;# 
  4911  061A                     	;# 
  4912  061B                     	;# 
  4913  061C                     	;# 
  4914  061D                     	;# 
  4915  061E                     	;# 
  4916  070C                     	;# 
  4917  070D                     	;# 
  4918  070E                     	;# 
  4919  070F                     	;# 
  4920  0710                     	;# 
  4921  0711                     	;# 
  4922  0712                     	;# 
  4923  0713                     	;# 
  4924  0714                     	;# 
  4925  0716                     	;# 
  4926  0717                     	;# 
  4927  0718                     	;# 
  4928  0719                     	;# 
  4929  071A                     	;# 
  4930  071B                     	;# 
  4931  071C                     	;# 
  4932  071D                     	;# 
  4933  071E                     	;# 
  4934  0796                     	;# 
  4935  0797                     	;# 
  4936  0798                     	;# 
  4937  0799                     	;# 
  4938  079A                     	;# 
  4939  079B                     	;# 
  4940  079C                     	;# 
  4941  079D                     	;# 
  4942  080C                     	;# 
  4943  080D                     	;# 
  4944  080E                     	;# 
  4945  080F                     	;# 
  4946  0810                     	;# 
  4947  0811                     	;# 
  4948  0812                     	;# 
  4949  0813                     	;# 
  4950  0814                     	;# 
  4951  081A                     	;# 
  4952  081A                     	;# 
  4953  081B                     	;# 
  4954  081C                     	;# 
  4955  081C                     	;# 
  4956  081D                     	;# 
  4957  081E                     	;# 
  4958  081F                     	;# 
  4959  088C                     	;# 
  4960  088D                     	;# 
  4961  088E                     	;# 
  4962  088F                     	;# 
  4963  0890                     	;# 
  4964  0891                     	;# 
  4965  0892                     	;# 
  4966  0893                     	;# 
  4967  0895                     	;# 
  4968  0896                     	;# 
  4969  0897                     	;# 
  4970  0898                     	;# 
  4971  0899                     	;# 
  4972  089A                     	;# 
  4973  089B                     	;# 
  4974  090C                     	;# 
  4975  090E                     	;# 
  4976  090F                     	;# 
  4977  091F                     	;# 
  4978  098F                     	;# 
  4979  098F                     	;# 
  4980  0990                     	;# 
  4981  0991                     	;# 
  4982  0992                     	;# 
  4983  0993                     	;# 
  4984  0994                     	;# 
  4985  0995                     	;# 
  4986  0996                     	;# 
  4987  0997                     	;# 
  4988  1E0F                     	;# 
  4989  1E10                     	;# 
  4990  1E11                     	;# 
  4991  1E12                     	;# 
  4992  1E13                     	;# 
  4993  1E14                     	;# 
  4994  1E15                     	;# 
  4995  1E16                     	;# 
  4996  1E17                     	;# 
  4997  1E18                     	;# 
  4998  1E19                     	;# 
  4999  1E1A                     	;# 
  5000  1E1B                     	;# 
  5001  1E1C                     	;# 
  5002  1E1D                     	;# 
  5003  1E1E                     	;# 
  5004  1E1F                     	;# 
  5005  1E20                     	;# 
  5006  1E21                     	;# 
  5007  1E22                     	;# 
  5008  1E23                     	;# 
  5009  1E24                     	;# 
  5010  1E25                     	;# 
  5011  1E26                     	;# 
  5012  1E27                     	;# 
  5013  1E28                     	;# 
  5014  1E29                     	;# 
  5015  1E2A                     	;# 
  5016  1E2B                     	;# 
  5017  1E2C                     	;# 
  5018  1E2D                     	;# 
  5019  1E2E                     	;# 
  5020  1E2F                     	;# 
  5021  1E30                     	;# 
  5022  1E31                     	;# 
  5023  1E32                     	;# 
  5024  1E33                     	;# 
  5025  1E34                     	;# 
  5026  1E35                     	;# 
  5027  1E36                     	;# 
  5028  1E37                     	;# 
  5029  1E8F                     	;# 
  5030  1E90                     	;# 
  5031  1E91                     	;# 
  5032  1E92                     	;# 
  5033  1E93                     	;# 
  5034  1E94                     	;# 
  5035  1E95                     	;# 
  5036  1E96                     	;# 
  5037  1E97                     	;# 
  5038  1E9C                     	;# 
  5039  1E9D                     	;# 
  5040  1E9E                     	;# 
  5041  1EA1                     	;# 
  5042  1EA2                     	;# 
  5043  1EA3                     	;# 
  5044  1EA4                     	;# 
  5045  1EA9                     	;# 
  5046  1EAA                     	;# 
  5047  1EB1                     	;# 
  5048  1EB2                     	;# 
  5049  1EB8                     	;# 
  5050  1EB9                     	;# 
  5051  1EBA                     	;# 
  5052  1EBB                     	;# 
  5053  1EBC                     	;# 
  5054  1EBD                     	;# 
  5055  1EBE                     	;# 
  5056  1EC3                     	;# 
  5057  1EC5                     	;# 
  5058  1EC6                     	;# 
  5059  1EC7                     	;# 
  5060  1EC8                     	;# 
  5061  1EC9                     	;# 
  5062  1ECA                     	;# 
  5063  1ECB                     	;# 
  5064  1ECB                     	;# 
  5065  1ECB                     	;# 
  5066  1ECC                     	;# 
  5067  1ECC                     	;# 
  5068  1ECC                     	;# 
  5069  1F10                     	;# 
  5070  1F11                     	;# 
  5071  1F12                     	;# 
  5072  1F14                     	;# 
  5073  1F15                     	;# 
  5074  1F1C                     	;# 
  5075  1F1D                     	;# 
  5076  1F1E                     	;# 
  5077  1F1F                     	;# 
  5078  1F20                     	;# 
  5079  1F21                     	;# 
  5080  1F22                     	;# 
  5081  1F23                     	;# 
  5082  1F24                     	;# 
  5083  1F25                     	;# 
  5084  1F26                     	;# 
  5085  1F27                     	;# 
  5086  1F38                     	;# 
  5087  1F39                     	;# 
  5088  1F3A                     	;# 
  5089  1F3B                     	;# 
  5090  1F3C                     	;# 
  5091  1F3D                     	;# 
  5092  1F3E                     	;# 
  5093  1F3F                     	;# 
  5094  1F43                     	;# 
  5095  1F44                     	;# 
  5096  1F45                     	;# 
  5097  1F46                     	;# 
  5098  1F47                     	;# 
  5099  1F48                     	;# 
  5100  1F49                     	;# 
  5101  1F4A                     	;# 
  5102  1F4E                     	;# 
  5103  1F4F                     	;# 
  5104  1F50                     	;# 
  5105  1F51                     	;# 
  5106  1F52                     	;# 
  5107  1F53                     	;# 
  5108  1F54                     	;# 
  5109  1F55                     	;# 
  5110  1FE4                     	;# 
  5111  1FE5                     	;# 
  5112  1FE6                     	;# 
  5113  1FE7                     	;# 
  5114  1FE8                     	;# 
  5115  1FE8                     	;# 
  5116  1FE9                     	;# 
  5117  1FEA                     	;# 
  5118  1FEB                     	;# 
  5119  1FED                     	;# 
  5120  1FEE                     	;# 
  5121  1FEF                     	;# 
  5122  0000                     	;# 
  5123  0001                     	;# 
  5124  0002                     	;# 
  5125  0003                     	;# 
  5126  0004                     	;# 
  5127  0005                     	;# 
  5128  0006                     	;# 
  5129  0007                     	;# 
  5130  0008                     	;# 
  5131  0009                     	;# 
  5132  000A                     	;# 
  5133  000B                     	;# 
  5134  000C                     	;# 
  5135  000D                     	;# 
  5136  000E                     	;# 
  5137  0012                     	;# 
  5138  0013                     	;# 
  5139  0014                     	;# 
  5140  0018                     	;# 
  5141  0019                     	;# 
  5142  001A                     	;# 
  5143  008C                     	;# 
  5144  008C                     	;# 
  5145  008D                     	;# 
  5146  008E                     	;# 
  5147  008E                     	;# 
  5148  008F                     	;# 
  5149  0090                     	;# 
  5150  0090                     	;# 
  5151  0091                     	;# 
  5152  0092                     	;# 
  5153  0092                     	;# 
  5154  0093                     	;# 
  5155  0094                     	;# 
  5156  0094                     	;# 
  5157  0095                     	;# 
  5158  0096                     	;# 
  5159  0096                     	;# 
  5160  0097                     	;# 
  5161  0098                     	;# 
  5162  0099                     	;# 
  5163  009A                     	;# 
  5164  009B                     	;# 
  5165  009B                     	;# 
  5166  009C                     	;# 
  5167  009D                     	;# 
  5168  009D                     	;# 
  5169  009E                     	;# 
  5170  009F                     	;# 
  5171  010C                     	;# 
  5172  010C                     	;# 
  5173  010D                     	;# 
  5174  010E                     	;# 
  5175  010F                     	;# 
  5176  010F                     	;# 
  5177  0110                     	;# 
  5178  0111                     	;# 
  5179  0112                     	;# 
  5180  0113                     	;# 
  5181  0114                     	;# 
  5182  0115                     	;# 
  5183  0116                     	;# 
  5184  0117                     	;# 
  5185  0118                     	;# 
  5186  0119                     	;# 
  5187  0119                     	;# 
  5188  0119                     	;# 
  5189  011A                     	;# 
  5190  011A                     	;# 
  5191  011A                     	;# 
  5192  011B                     	;# 
  5193  011B                     	;# 
  5194  011B                     	;# 
  5195  011B                     	;# 
  5196  011B                     	;# 
  5197  011C                     	;# 
  5198  011C                     	;# 
  5199  011C                     	;# 
  5200  011D                     	;# 
  5201  011D                     	;# 
  5202  011D                     	;# 
  5203  011E                     	;# 
  5204  011E                     	;# 
  5205  011E                     	;# 
  5206  011F                     	;# 
  5207  011F                     	;# 
  5208  011F                     	;# 
  5209  011F                     	;# 
  5210  011F                     	;# 
  5211  018C                     	;# 
  5212  018D                     	;# 
  5213  018E                     	;# 
  5214  018F                     	;# 
  5215  0190                     	;# 
  5216  0191                     	;# 
  5217  0192                     	;# 
  5218  0196                     	;# 
  5219  0197                     	;# 
  5220  0198                     	;# 
  5221  0199                     	;# 
  5222  019A                     	;# 
  5223  019B                     	;# 
  5224  019C                     	;# 
  5225  020C                     	;# 
  5226  020D                     	;# 
  5227  020E                     	;# 
  5228  020E                     	;# 
  5229  020F                     	;# 
  5230  020F                     	;# 
  5231  0210                     	;# 
  5232  0210                     	;# 
  5233  0211                     	;# 
  5234  0211                     	;# 
  5235  0212                     	;# 
  5236  0213                     	;# 
  5237  0214                     	;# 
  5238  0214                     	;# 
  5239  0215                     	;# 
  5240  0215                     	;# 
  5241  0216                     	;# 
  5242  0216                     	;# 
  5243  0217                     	;# 
  5244  0217                     	;# 
  5245  0218                     	;# 
  5246  0219                     	;# 
  5247  021A                     	;# 
  5248  021A                     	;# 
  5249  021B                     	;# 
  5250  021B                     	;# 
  5251  021C                     	;# 
  5252  021C                     	;# 
  5253  021D                     	;# 
  5254  021D                     	;# 
  5255  021E                     	;# 
  5256  021F                     	;# 
  5257  028C                     	;# 
  5258  028C                     	;# 
  5259  028D                     	;# 
  5260  028D                     	;# 
  5261  028E                     	;# 
  5262  028F                     	;# 
  5263  0290                     	;# 
  5264  0291                     	;# 
  5265  0292                     	;# 
  5266  0292                     	;# 
  5267  0293                     	;# 
  5268  0293                     	;# 
  5269  0294                     	;# 
  5270  0295                     	;# 
  5271  0296                     	;# 
  5272  0297                     	;# 
  5273  0298                     	;# 
  5274  0298                     	;# 
  5275  0299                     	;# 
  5276  0299                     	;# 
  5277  029A                     	;# 
  5278  029B                     	;# 
  5279  029C                     	;# 
  5280  029D                     	;# 
  5281  029F                     	;# 
  5282  030C                     	;# 
  5283  030C                     	;# 
  5284  030D                     	;# 
  5285  030E                     	;# 
  5286  030F                     	;# 
  5287  0310                     	;# 
  5288  0310                     	;# 
  5289  0311                     	;# 
  5290  0312                     	;# 
  5291  0313                     	;# 
  5292  0314                     	;# 
  5293  0314                     	;# 
  5294  0315                     	;# 
  5295  0316                     	;# 
  5296  0317                     	;# 
  5297  0318                     	;# 
  5298  0318                     	;# 
  5299  0319                     	;# 
  5300  031A                     	;# 
  5301  031B                     	;# 
  5302  038C                     	;# 
  5303  038C                     	;# 
  5304  038D                     	;# 
  5305  038E                     	;# 
  5306  0390                     	;# 
  5307  0390                     	;# 
  5308  0391                     	;# 
  5309  0392                     	;# 
  5310  048C                     	;# 
  5311  048C                     	;# 
  5312  048D                     	;# 
  5313  048E                     	;# 
  5314  048F                     	;# 
  5315  048F                     	;# 
  5316  0490                     	;# 
  5317  0491                     	;# 
  5318  0492                     	;# 
  5319  0492                     	;# 
  5320  0493                     	;# 
  5321  0494                     	;# 
  5322  0495                     	;# 
  5323  0495                     	;# 
  5324  0496                     	;# 
  5325  0497                     	;# 
  5326  0498                     	;# 
  5327  0499                     	;# 
  5328  049A                     	;# 
  5329  049B                     	;# 
  5330  049C                     	;# 
  5331  049D                     	;# 
  5332  058C                     	;# 
  5333  058C                     	;# 
  5334  058D                     	;# 
  5335  058E                     	;# 
  5336  058F                     	;# 
  5337  058F                     	;# 
  5338  0590                     	;# 
  5339  0591                     	;# 
  5340  0592                     	;# 
  5341  0593                     	;# 
  5342  059C                     	;# 
  5343  059C                     	;# 
  5344  059D                     	;# 
  5345  059D                     	;# 
  5346  059E                     	;# 
  5347  059F                     	;# 
  5348  060C                     	;# 
  5349  060C                     	;# 
  5350  060D                     	;# 
  5351  060D                     	;# 
  5352  060E                     	;# 
  5353  060F                     	;# 
  5354  0610                     	;# 
  5355  0611                     	;# 
  5356  0612                     	;# 
  5357  0613                     	;# 
  5358  0614                     	;# 
  5359  0616                     	;# 
  5360  0616                     	;# 
  5361  0617                     	;# 
  5362  0617                     	;# 
  5363  0618                     	;# 
  5364  0619                     	;# 
  5365  061A                     	;# 
  5366  061B                     	;# 
  5367  061C                     	;# 
  5368  061D                     	;# 
  5369  061E                     	;# 
  5370  070C                     	;# 
  5371  070D                     	;# 
  5372  070E                     	;# 
  5373  070F                     	;# 
  5374  0710                     	;# 
  5375  0711                     	;# 
  5376  0712                     	;# 
  5377  0713                     	;# 
  5378  0714                     	;# 
  5379  0716                     	;# 
  5380  0717                     	;# 
  5381  0718                     	;# 
  5382  0719                     	;# 
  5383  071A                     	;# 
  5384  071B                     	;# 
  5385  071C                     	;# 
  5386  071D                     	;# 
  5387  071E                     	;# 
  5388  0796                     	;# 
  5389  0797                     	;# 
  5390  0798                     	;# 
  5391  0799                     	;# 
  5392  079A                     	;# 
  5393  079B                     	;# 
  5394  079C                     	;# 
  5395  079D                     	;# 
  5396  080C                     	;# 
  5397  080D                     	;# 
  5398  080E                     	;# 
  5399  080F                     	;# 
  5400  0810                     	;# 
  5401  0811                     	;# 
  5402  0812                     	;# 
  5403  0813                     	;# 
  5404  0814                     	;# 
  5405  081A                     	;# 
  5406  081A                     	;# 
  5407  081B                     	;# 
  5408  081C                     	;# 
  5409  081C                     	;# 
  5410  081D                     	;# 
  5411  081E                     	;# 
  5412  081F                     	;# 
  5413  088C                     	;# 
  5414  088D                     	;# 
  5415  088E                     	;# 
  5416  088F                     	;# 
  5417  0890                     	;# 
  5418  0891                     	;# 
  5419  0892                     	;# 
  5420  0893                     	;# 
  5421  0895                     	;# 
  5422  0896                     	;# 
  5423  0897                     	;# 
  5424  0898                     	;# 
  5425  0899                     	;# 
  5426  089A                     	;# 
  5427  089B                     	;# 
  5428  090C                     	;# 
  5429  090E                     	;# 
  5430  090F                     	;# 
  5431  091F                     	;# 
  5432  098F                     	;# 
  5433  098F                     	;# 
  5434  0990                     	;# 
  5435  0991                     	;# 
  5436  0992                     	;# 
  5437  0993                     	;# 
  5438  0994                     	;# 
  5439  0995                     	;# 
  5440  0996                     	;# 
  5441  0997                     	;# 
  5442  1E0F                     	;# 
  5443  1E10                     	;# 
  5444  1E11                     	;# 
  5445  1E12                     	;# 
  5446  1E13                     	;# 
  5447  1E14                     	;# 
  5448  1E15                     	;# 
  5449  1E16                     	;# 
  5450  1E17                     	;# 
  5451  1E18                     	;# 
  5452  1E19                     	;# 
  5453  1E1A                     	;# 
  5454  1E1B                     	;# 
  5455  1E1C                     	;# 
  5456  1E1D                     	;# 
  5457  1E1E                     	;# 
  5458  1E1F                     	;# 
  5459  1E20                     	;# 
  5460  1E21                     	;# 
  5461  1E22                     	;# 
  5462  1E23                     	;# 
  5463  1E24                     	;# 
  5464  1E25                     	;# 
  5465  1E26                     	;# 
  5466  1E27                     	;# 
  5467  1E28                     	;# 
  5468  1E29                     	;# 
  5469  1E2A                     	;# 
  5470  1E2B                     	;# 
  5471  1E2C                     	;# 
  5472  1E2D                     	;# 
  5473  1E2E                     	;# 
  5474  1E2F                     	;# 
  5475  1E30                     	;# 
  5476  1E31                     	;# 
  5477  1E32                     	;# 
  5478  1E33                     	;# 
  5479  1E34                     	;# 
  5480  1E35                     	;# 
  5481  1E36                     	;# 
  5482  1E37                     	;# 
  5483  1E8F                     	;# 
  5484  1E90                     	;# 
  5485  1E91                     	;# 
  5486  1E92                     	;# 
  5487  1E93                     	;# 
  5488  1E94                     	;# 
  5489  1E95                     	;# 
  5490  1E96                     	;# 
  5491  1E97                     	;# 
  5492  1E9C                     	;# 
  5493  1E9D                     	;# 
  5494  1E9E                     	;# 
  5495  1EA1                     	;# 
  5496  1EA2                     	;# 
  5497  1EA3                     	;# 
  5498  1EA4                     	;# 
  5499  1EA9                     	;# 
  5500  1EAA                     	;# 
  5501  1EB1                     	;# 
  5502  1EB2                     	;# 
  5503  1EB8                     	;# 
  5504  1EB9                     	;# 
  5505  1EBA                     	;# 
  5506  1EBB                     	;# 
  5507  1EBC                     	;# 
  5508  1EBD                     	;# 
  5509  1EBE                     	;# 
  5510  1EC3                     	;# 
  5511  1EC5                     	;# 
  5512  1EC6                     	;# 
  5513  1EC7                     	;# 
  5514  1EC8                     	;# 
  5515  1EC9                     	;# 
  5516  1ECA                     	;# 
  5517  1ECB                     	;# 
  5518  1ECB                     	;# 
  5519  1ECB                     	;# 
  5520  1ECC                     	;# 
  5521  1ECC                     	;# 
  5522  1ECC                     	;# 
  5523  1F10                     	;# 
  5524  1F11                     	;# 
  5525  1F12                     	;# 
  5526  1F14                     	;# 
  5527  1F15                     	;# 
  5528  1F1C                     	;# 
  5529  1F1D                     	;# 
  5530  1F1E                     	;# 
  5531  1F1F                     	;# 
  5532  1F20                     	;# 
  5533  1F21                     	;# 
  5534  1F22                     	;# 
  5535  1F23                     	;# 
  5536  1F24                     	;# 
  5537  1F25                     	;# 
  5538  1F26                     	;# 
  5539  1F27                     	;# 
  5540  1F38                     	;# 
  5541  1F39                     	;# 
  5542  1F3A                     	;# 
  5543  1F3B                     	;# 
  5544  1F3C                     	;# 
  5545  1F3D                     	;# 
  5546  1F3E                     	;# 
  5547  1F3F                     	;# 
  5548  1F43                     	;# 
  5549  1F44                     	;# 
  5550  1F45                     	;# 
  5551  1F46                     	;# 
  5552  1F47                     	;# 
  5553  1F48                     	;# 
  5554  1F49                     	;# 
  5555  1F4A                     	;# 
  5556  1F4E                     	;# 
  5557  1F4F                     	;# 
  5558  1F50                     	;# 
  5559  1F51                     	;# 
  5560  1F52                     	;# 
  5561  1F53                     	;# 
  5562  1F54                     	;# 
  5563  1F55                     	;# 
  5564  1FE4                     	;# 
  5565  1FE5                     	;# 
  5566  1FE6                     	;# 
  5567  1FE7                     	;# 
  5568  1FE8                     	;# 
  5569  1FE8                     	;# 
  5570  1FE9                     	;# 
  5571  1FEA                     	;# 
  5572  1FEB                     	;# 
  5573  1FED                     	;# 
  5574  1FEE                     	;# 
  5575  1FEF                     	;# 
  5576  0000                     	;# 
  5577  0001                     	;# 
  5578  0002                     	;# 
  5579  0003                     	;# 
  5580  0004                     	;# 
  5581  0005                     	;# 
  5582  0006                     	;# 
  5583  0007                     	;# 
  5584  0008                     	;# 
  5585  0009                     	;# 
  5586  000A                     	;# 
  5587  000B                     	;# 
  5588  000C                     	;# 
  5589  000D                     	;# 
  5590  000E                     	;# 
  5591  0012                     	;# 
  5592  0013                     	;# 
  5593  0014                     	;# 
  5594  0018                     	;# 
  5595  0019                     	;# 
  5596  001A                     	;# 
  5597  008C                     	;# 
  5598  008C                     	;# 
  5599  008D                     	;# 
  5600  008E                     	;# 
  5601  008E                     	;# 
  5602  008F                     	;# 
  5603  0090                     	;# 
  5604  0090                     	;# 
  5605  0091                     	;# 
  5606  0092                     	;# 
  5607  0092                     	;# 
  5608  0093                     	;# 
  5609  0094                     	;# 
  5610  0094                     	;# 
  5611  0095                     	;# 
  5612  0096                     	;# 
  5613  0096                     	;# 
  5614  0097                     	;# 
  5615  0098                     	;# 
  5616  0099                     	;# 
  5617  009A                     	;# 
  5618  009B                     	;# 
  5619  009B                     	;# 
  5620  009C                     	;# 
  5621  009D                     	;# 
  5622  009D                     	;# 
  5623  009E                     	;# 
  5624  009F                     	;# 
  5625  010C                     	;# 
  5626  010C                     	;# 
  5627  010D                     	;# 
  5628  010E                     	;# 
  5629  010F                     	;# 
  5630  010F                     	;# 
  5631  0110                     	;# 
  5632  0111                     	;# 
  5633  0112                     	;# 
  5634  0113                     	;# 
  5635  0114                     	;# 
  5636  0115                     	;# 
  5637  0116                     	;# 
  5638  0117                     	;# 
  5639  0118                     	;# 
  5640  0119                     	;# 
  5641  0119                     	;# 
  5642  0119                     	;# 
  5643  011A                     	;# 
  5644  011A                     	;# 
  5645  011A                     	;# 
  5646  011B                     	;# 
  5647  011B                     	;# 
  5648  011B                     	;# 
  5649  011B                     	;# 
  5650  011B                     	;# 
  5651  011C                     	;# 
  5652  011C                     	;# 
  5653  011C                     	;# 
  5654  011D                     	;# 
  5655  011D                     	;# 
  5656  011D                     	;# 
  5657  011E                     	;# 
  5658  011E                     	;# 
  5659  011E                     	;# 
  5660  011F                     	;# 
  5661  011F                     	;# 
  5662  011F                     	;# 
  5663  011F                     	;# 
  5664  011F                     	;# 
  5665  018C                     	;# 
  5666  018D                     	;# 
  5667  018E                     	;# 
  5668  018F                     	;# 
  5669  0190                     	;# 
  5670  0191                     	;# 
  5671  0192                     	;# 
  5672  0196                     	;# 
  5673  0197                     	;# 
  5674  0198                     	;# 
  5675  0199                     	;# 
  5676  019A                     	;# 
  5677  019B                     	;# 
  5678  019C                     	;# 
  5679  020C                     	;# 
  5680  020D                     	;# 
  5681  020E                     	;# 
  5682  020E                     	;# 
  5683  020F                     	;# 
  5684  020F                     	;# 
  5685  0210                     	;# 
  5686  0210                     	;# 
  5687  0211                     	;# 
  5688  0211                     	;# 
  5689  0212                     	;# 
  5690  0213                     	;# 
  5691  0214                     	;# 
  5692  0214                     	;# 
  5693  0215                     	;# 
  5694  0215                     	;# 
  5695  0216                     	;# 
  5696  0216                     	;# 
  5697  0217                     	;# 
  5698  0217                     	;# 
  5699  0218                     	;# 
  5700  0219                     	;# 
  5701  021A                     	;# 
  5702  021A                     	;# 
  5703  021B                     	;# 
  5704  021B                     	;# 
  5705  021C                     	;# 
  5706  021C                     	;# 
  5707  021D                     	;# 
  5708  021D                     	;# 
  5709  021E                     	;# 
  5710  021F                     	;# 
  5711  028C                     	;# 
  5712  028C                     	;# 
  5713  028D                     	;# 
  5714  028D                     	;# 
  5715  028E                     	;# 
  5716  028F                     	;# 
  5717  0290                     	;# 
  5718  0291                     	;# 
  5719  0292                     	;# 
  5720  0292                     	;# 
  5721  0293                     	;# 
  5722  0293                     	;# 
  5723  0294                     	;# 
  5724  0295                     	;# 
  5725  0296                     	;# 
  5726  0297                     	;# 
  5727  0298                     	;# 
  5728  0298                     	;# 
  5729  0299                     	;# 
  5730  0299                     	;# 
  5731  029A                     	;# 
  5732  029B                     	;# 
  5733  029C                     	;# 
  5734  029D                     	;# 
  5735  029F                     	;# 
  5736  030C                     	;# 
  5737  030C                     	;# 
  5738  030D                     	;# 
  5739  030E                     	;# 
  5740  030F                     	;# 
  5741  0310                     	;# 
  5742  0310                     	;# 
  5743  0311                     	;# 
  5744  0312                     	;# 
  5745  0313                     	;# 
  5746  0314                     	;# 
  5747  0314                     	;# 
  5748  0315                     	;# 
  5749  0316                     	;# 
  5750  0317                     	;# 
  5751  0318                     	;# 
  5752  0318                     	;# 
  5753  0319                     	;# 
  5754  031A                     	;# 
  5755  031B                     	;# 
  5756  038C                     	;# 
  5757  038C                     	;# 
  5758  038D                     	;# 
  5759  038E                     	;# 
  5760  0390                     	;# 
  5761  0390                     	;# 
  5762  0391                     	;# 
  5763  0392                     	;# 
  5764  048C                     	;# 
  5765  048C                     	;# 
  5766  048D                     	;# 
  5767  048E                     	;# 
  5768  048F                     	;# 
  5769  048F                     	;# 
  5770  0490                     	;# 
  5771  0491                     	;# 
  5772  0492                     	;# 
  5773  0492                     	;# 
  5774  0493                     	;# 
  5775  0494                     	;# 
  5776  0495                     	;# 
  5777  0495                     	;# 
  5778  0496                     	;# 
  5779  0497                     	;# 
  5780  0498                     	;# 
  5781  0499                     	;# 
  5782  049A                     	;# 
  5783  049B                     	;# 
  5784  049C                     	;# 
  5785  049D                     	;# 
  5786  058C                     	;# 
  5787  058C                     	;# 
  5788  058D                     	;# 
  5789  058E                     	;# 
  5790  058F                     	;# 
  5791  058F                     	;# 
  5792  0590                     	;# 
  5793  0591                     	;# 
  5794  0592                     	;# 
  5795  0593                     	;# 
  5796  059C                     	;# 
  5797  059C                     	;# 
  5798  059D                     	;# 
  5799  059D                     	;# 
  5800  059E                     	;# 
  5801  059F                     	;# 
  5802  060C                     	;# 
  5803  060C                     	;# 
  5804  060D                     	;# 
  5805  060D                     	;# 
  5806  060E                     	;# 
  5807  060F                     	;# 
  5808  0610                     	;# 
  5809  0611                     	;# 
  5810  0612                     	;# 
  5811  0613                     	;# 
  5812  0614                     	;# 
  5813  0616                     	;# 
  5814  0616                     	;# 
  5815  0617                     	;# 
  5816  0617                     	;# 
  5817  0618                     	;# 
  5818  0619                     	;# 
  5819  061A                     	;# 
  5820  061B                     	;# 
  5821  061C                     	;# 
  5822  061D                     	;# 
  5823  061E                     	;# 
  5824  070C                     	;# 
  5825  070D                     	;# 
  5826  070E                     	;# 
  5827  070F                     	;# 
  5828  0710                     	;# 
  5829  0711                     	;# 
  5830  0712                     	;# 
  5831  0713                     	;# 
  5832  0714                     	;# 
  5833  0716                     	;# 
  5834  0717                     	;# 
  5835  0718                     	;# 
  5836  0719                     	;# 
  5837  071A                     	;# 
  5838  071B                     	;# 
  5839  071C                     	;# 
  5840  071D                     	;# 
  5841  071E                     	;# 
  5842  0796                     	;# 
  5843  0797                     	;# 
  5844  0798                     	;# 
  5845  0799                     	;# 
  5846  079A                     	;# 
  5847  079B                     	;# 
  5848  079C                     	;# 
  5849  079D                     	;# 
  5850  080C                     	;# 
  5851  080D                     	;# 
  5852  080E                     	;# 
  5853  080F                     	;# 
  5854  0810                     	;# 
  5855  0811                     	;# 
  5856  0812                     	;# 
  5857  0813                     	;# 
  5858  0814                     	;# 
  5859  081A                     	;# 
  5860  081A                     	;# 
  5861  081B                     	;# 
  5862  081C                     	;# 
  5863  081C                     	;# 
  5864  081D                     	;# 
  5865  081E                     	;# 
  5866  081F                     	;# 
  5867  088C                     	;# 
  5868  088D                     	;# 
  5869  088E                     	;# 
  5870  088F                     	;# 
  5871  0890                     	;# 
  5872  0891                     	;# 
  5873  0892                     	;# 
  5874  0893                     	;# 
  5875  0895                     	;# 
  5876  0896                     	;# 
  5877  0897                     	;# 
  5878  0898                     	;# 
  5879  0899                     	;# 
  5880  089A                     	;# 
  5881  089B                     	;# 
  5882  090C                     	;# 
  5883  090E                     	;# 
  5884  090F                     	;# 
  5885  091F                     	;# 
  5886  098F                     	;# 
  5887  098F                     	;# 
  5888  0990                     	;# 
  5889  0991                     	;# 
  5890  0992                     	;# 
  5891  0993                     	;# 
  5892  0994                     	;# 
  5893  0995                     	;# 
  5894  0996                     	;# 
  5895  0997                     	;# 
  5896  1E0F                     	;# 
  5897  1E10                     	;# 
  5898  1E11                     	;# 
  5899  1E12                     	;# 
  5900  1E13                     	;# 
  5901  1E14                     	;# 
  5902  1E15                     	;# 
  5903  1E16                     	;# 
  5904  1E17                     	;# 
  5905  1E18                     	;# 
  5906  1E19                     	;# 
  5907  1E1A                     	;# 
  5908  1E1B                     	;# 
  5909  1E1C                     	;# 
  5910  1E1D                     	;# 
  5911  1E1E                     	;# 
  5912  1E1F                     	;# 
  5913  1E20                     	;# 
  5914  1E21                     	;# 
  5915  1E22                     	;# 
  5916  1E23                     	;# 
  5917  1E24                     	;# 
  5918  1E25                     	;# 
  5919  1E26                     	;# 
  5920  1E27                     	;# 
  5921  1E28                     	;# 
  5922  1E29                     	;# 
  5923  1E2A                     	;# 
  5924  1E2B                     	;# 
  5925  1E2C                     	;# 
  5926  1E2D                     	;# 
  5927  1E2E                     	;# 
  5928  1E2F                     	;# 
  5929  1E30                     	;# 
  5930  1E31                     	;# 
  5931  1E32                     	;# 
  5932  1E33                     	;# 
  5933  1E34                     	;# 
  5934  1E35                     	;# 
  5935  1E36                     	;# 
  5936  1E37                     	;# 
  5937  1E8F                     	;# 
  5938  1E90                     	;# 
  5939  1E91                     	;# 
  5940  1E92                     	;# 
  5941  1E93                     	;# 
  5942  1E94                     	;# 
  5943  1E95                     	;# 
  5944  1E96                     	;# 
  5945  1E97                     	;# 
  5946  1E9C                     	;# 
  5947  1E9D                     	;# 
  5948  1E9E                     	;# 
  5949  1EA1                     	;# 
  5950  1EA2                     	;# 
  5951  1EA3                     	;# 
  5952  1EA4                     	;# 
  5953  1EA9                     	;# 
  5954  1EAA                     	;# 
  5955  1EB1                     	;# 
  5956  1EB2                     	;# 
  5957  1EB8                     	;# 
  5958  1EB9                     	;# 
  5959  1EBA                     	;# 
  5960  1EBB                     	;# 
  5961  1EBC                     	;# 
  5962  1EBD                     	;# 
  5963  1EBE                     	;# 
  5964  1EC3                     	;# 
  5965  1EC5                     	;# 
  5966  1EC6                     	;# 
  5967  1EC7                     	;# 
  5968  1EC8                     	;# 
  5969  1EC9                     	;# 
  5970  1ECA                     	;# 
  5971  1ECB                     	;# 
  5972  1ECB                     	;# 
  5973  1ECB                     	;# 
  5974  1ECC                     	;# 
  5975  1ECC                     	;# 
  5976  1ECC                     	;# 
  5977  1F10                     	;# 
  5978  1F11                     	;# 
  5979  1F12                     	;# 
  5980  1F14                     	;# 
  5981  1F15                     	;# 
  5982  1F1C                     	;# 
  5983  1F1D                     	;# 
  5984  1F1E                     	;# 
  5985  1F1F                     	;# 
  5986  1F20                     	;# 
  5987  1F21                     	;# 
  5988  1F22                     	;# 
  5989  1F23                     	;# 
  5990  1F24                     	;# 
  5991  1F25                     	;# 
  5992  1F26                     	;# 
  5993  1F27                     	;# 
  5994  1F38                     	;# 
  5995  1F39                     	;# 
  5996  1F3A                     	;# 
  5997  1F3B                     	;# 
  5998  1F3C                     	;# 
  5999  1F3D                     	;# 
  6000  1F3E                     	;# 
  6001  1F3F                     	;# 
  6002  1F43                     	;# 
  6003  1F44                     	;# 
  6004  1F45                     	;# 
  6005  1F46                     	;# 
  6006  1F47                     	;# 
  6007  1F48                     	;# 
  6008  1F49                     	;# 
  6009  1F4A                     	;# 
  6010  1F4E                     	;# 
  6011  1F4F                     	;# 
  6012  1F50                     	;# 
  6013  1F51                     	;# 
  6014  1F52                     	;# 
  6015  1F53                     	;# 
  6016  1F54                     	;# 
  6017  1F55                     	;# 
  6018  1FE4                     	;# 
  6019  1FE5                     	;# 
  6020  1FE6                     	;# 
  6021  1FE7                     	;# 
  6022  1FE8                     	;# 
  6023  1FE8                     	;# 
  6024  1FE9                     	;# 
  6025  1FEA                     	;# 
  6026  1FEB                     	;# 
  6027  1FED                     	;# 
  6028  1FEE                     	;# 
  6029  1FEF                     	;_dmxData
  6030                           
  6031                           	psect	idataBANK0
  6032  0E28                     __pidataBANK0:	
  6033                           
  6034                           ;initializer for _threshold
  6035  0E28  3490               	retlw	144
  6036  0E29  3406               	retlw	6
  6037                           
  6038                           ;initializer for _address
  6039  0E2A  3401               	retlw	1
  6040  0E2B  3400               	retlw	0
  6041                           
  6042                           	psect	idataBANK1
  6043  0002                     __pidataBANK1:	
  6044                           
  6045                           ;initializer for _delay
  6046  0002  340A               	retlw	10
  6047  0003  3400               	retlw	0
  6048                           
  6049                           	psect	stringtext1
  6050  0446                     __pstringtext1:	
  6051  0446                     _charTable:	
  6052  0446  3400               	retlw	0
  6053  0447  3482               	retlw	130
  6054  0448  3421               	retlw	33
  6055  0449  3400               	retlw	0
  6056  044A  3400               	retlw	0
  6057  044B  3400               	retlw	0
  6058  044C  3400               	retlw	0
  6059  044D  3402               	retlw	2
  6060  044E  3439               	retlw	57
  6061  044F  340F               	retlw	15
  6062  0450  3400               	retlw	0
  6063  0451  3400               	retlw	0
  6064  0452  3400               	retlw	0
  6065  0453  3440               	retlw	64
  6066  0454  3480               	retlw	128
  6067  0455  3400               	retlw	0
  6068  0456  343F               	retlw	63
  6069  0457  3406               	retlw	6
  6070  0458  345B               	retlw	91
  6071  0459  344F               	retlw	79
  6072  045A  3466               	retlw	102
  6073  045B  346D               	retlw	109
  6074  045C  347D               	retlw	125
  6075  045D  3407               	retlw	7
  6076  045E  347F               	retlw	127
  6077  045F  346F               	retlw	111
  6078  0460  3400               	retlw	0
  6079  0461  3400               	retlw	0
  6080  0462  3400               	retlw	0
  6081  0463  3448               	retlw	72
  6082  0464  3400               	retlw	0
  6083  0465  3453               	retlw	83
  6084  0466  3400               	retlw	0
  6085  0467  3477               	retlw	119
  6086  0468  347C               	retlw	124
  6087  0469  3439               	retlw	57
  6088  046A  345E               	retlw	94
  6089  046B  3479               	retlw	121
  6090  046C  3471               	retlw	113
  6091  046D  346F               	retlw	111
  6092  046E  3476               	retlw	118
  6093  046F  3406               	retlw	6
  6094  0470  341E               	retlw	30
  6095  0471  3400               	retlw	0
  6096  0472  3438               	retlw	56
  6097  0473  3400               	retlw	0
  6098  0474  3454               	retlw	84
  6099  0475  343F               	retlw	63
  6100  0476  3473               	retlw	115
  6101  0477  3467               	retlw	103
  6102  0478  3450               	retlw	80
  6103  0479  346D               	retlw	109
  6104  047A  3478               	retlw	120
  6105  047B  343E               	retlw	62
  6106  047C  3400               	retlw	0
  6107  047D  3400               	retlw	0
  6108  047E  3400               	retlw	0
  6109  047F  346E               	retlw	110
  6110  0480  3400               	retlw	0
  6111  0481  3439               	retlw	57
  6112  0482  3400               	retlw	0
  6113  0483  340F               	retlw	15
  6114  0484  3400               	retlw	0
  6115  0485  3408               	retlw	8
  6116  0486  3463               	retlw	99
  6117  0487  345F               	retlw	95
  6118  0488  347C               	retlw	124
  6119  0489  3458               	retlw	88
  6120  048A  345E               	retlw	94
  6121  048B  347B               	retlw	123
  6122  048C  3471               	retlw	113
  6123  048D  346F               	retlw	111
  6124  048E  3474               	retlw	116
  6125  048F  3402               	retlw	2
  6126  0490  341E               	retlw	30
  6127  0491  3400               	retlw	0
  6128  0492  3406               	retlw	6
  6129  0493  3400               	retlw	0
  6130  0494  3454               	retlw	84
  6131  0495  345C               	retlw	92
  6132  0496  3473               	retlw	115
  6133  0497  3467               	retlw	103
  6134  0498  3450               	retlw	80
  6135  0499  346D               	retlw	109
  6136  049A  3478               	retlw	120
  6137  049B  341C               	retlw	28
  6138  049C  3400               	retlw	0
  6139  049D  3400               	retlw	0
  6140  049E  3400               	retlw	0
  6141  049F  346E               	retlw	110
  6142  04A0  3400               	retlw	0
  6143  04A1  3439               	retlw	57
  6144  04A2  3430               	retlw	48
  6145  04A3  340F               	retlw	15
  6146  04A4  3400               	retlw	0
  6147  04A5  3400               	retlw	0
  6148  04A6                     __end_of_charTable:	
  6149                           
  6150                           	psect	nvBANK0
  6151  006F                     __pnvBANK0:	
  6152  006F                     _eusart1TxBufferRemaining:	
  6153  006F                     	ds	1
  6154                           
  6155                           	psect	nvBANK1
  6156  00CC                     __pnvBANK1:	
  6157  00CC                     _ADCC_ADTI_InterruptHandler:	
  6158  00CC                     	ds	2
  6159  00CE                     _TMR0_InterruptHandler:	
  6160  00CE                     	ds	2
  6161  00D0                     _EUSART1_ErrorHandler:	
  6162  00D0                     	ds	2
  6163  00D2                     _EUSART1_OverrunErrorHandler:	
  6164  00D2                     	ds	2
  6165  00D4                     _EUSART1_FramingErrorHandler:	
  6166  00D4                     	ds	2
  6167  00D6                     _EUSART1_RxDefaultInterruptHandler:	
  6168  00D6                     	ds	2
  6169  00D8                     _EUSART1_TxDefaultInterruptHandler:	
  6170  00D8                     	ds	2
  6171  000B                     _INTCONbits	set	11
  6172  0014                     _TRISC	set	20
  6173  0013                     _TRISB	set	19
  6174  0012                     _TRISA	set	18
  6175  001A                     _LATC	set	26
  6176  0019                     _LATB	set	25
  6177  0018                     _LATA	set	24
  6178  000C                     _PORTA	set	12
  6179  000E                     _PORTC	set	14
  6180  00A3                     _TRISC3	set	163
  6181  00A4                     _TRISC4	set	164
  6182  00A6                     _TRISC6	set	166
  6183  00A7                     _TRISC7	set	167
  6184  00CE                     _LATB6	set	206
  6185  009E                     _TRISB6	set	158
  6186  0090                     _ADERRL	set	144
  6187  0091                     _ADERRH	set	145
  6188  009B                     _ADPREVL	set	155
  6189  009C                     _ADPREVH	set	156
  6190  0094                     _ADFLTRL	set	148
  6191  0095                     _ADFLTRH	set	149
  6192  0096                     _ADACCL	set	150
  6193  0097                     _ADACCH	set	151
  6194  0099                     _ADCNT	set	153
  6195  009D                     _ADRESL	set	157
  6196  009E                     _ADRESH	set	158
  6197  009F                     _ADPCH	set	159
  6198  009A                     _ADRPT	set	154
  6199  0098                     _ADACCU	set	152
  6200  0093                     _ADSTPTH	set	147
  6201  0092                     _ADSTPTL	set	146
  6202  008F                     _ADUTHH	set	143
  6203  008E                     _ADUTHL	set	142
  6204  008D                     _ADLTHH	set	141
  6205  008C                     _ADLTHL	set	140
  6206  011A                     _TXREG	set	282
  6207  0112                     _ADCON1bits	set	274
  6208  0115                     _ADSTATbits	set	277
  6209  0113                     _ADCON2bits	set	275
  6210  0114                     _ADCON3bits	set	276
  6211  0111                     _ADCON0bits	set	273
  6212  0111                     _ADCON0	set	273
  6213  0118                     _ADCLK	set	280
  6214  0117                     _ADACT	set	279
  6215  0116                     _ADREF	set	278
  6216  0115                     _ADSTAT	set	277
  6217  0114                     _ADCON3	set	276
  6218  0113                     _ADCON2	set	275
  6219  0112                     _ADCON1	set	274
  6220  0110                     _ADPREH	set	272
  6221  010F                     _ADPREL	set	271
  6222  010E                     _ADCAP	set	270
  6223  010D                     _ADACQH	set	269
  6224  010C                     _ADACQL	set	268
  6225  0119                     _RC1REG	set	281
  6226  011D                     _RC1STAbits	set	285
  6227  011A                     _TX1REG	set	282
  6228  011E                     _TX1STAbits	set	286
  6229  011C                     _SP1BRGH	set	284
  6230  011B                     _SP1BRGL	set	283
  6231  011E                     _TX1STA	set	286
  6232  011D                     _RC1STA	set	285
  6233  011F                     _BAUD1CON	set	287
  6234  018C                     _SSP1BUF	set	396
  6235  0191                     _SSP1CON2bits	set	401
  6236  0190                     _SSP1CON1bits	set	400
  6237  018D                     _SSP1ADD	set	397
  6238  0192                     _SSP1CON3	set	402
  6239  0190                     _SSP1CON1	set	400
  6240  018F                     _SSP1STAT	set	399
  6241  028E                     _T2CONbits	set	654
  6242  0290                     _T2CLKCON	set	656
  6243  0318                     _CCPR4L	set	792
  6244  0319                     _CCPR4H	set	793
  6245  0314                     _CCPR3L	set	788
  6246  0315                     _CCPR3H	set	789
  6247  0310                     _CCPR2L	set	784
  6248  0311                     _CCPR2H	set	785
  6249  030C                     _CCPR1L	set	780
  6250  030D                     _CCPR1H	set	781
  6251  031A                     _CCP4CONbits	set	794
  6252  0316                     _CCP3CONbits	set	790
  6253  0312                     _CCP2CONbits	set	786
  6254  030E                     _CCP1CONbits	set	782
  6255  059E                     _T0CON0bits	set	1438
  6256  059E                     _T0CON0	set	1438
  6257  059C                     _TMR0L	set	1436
  6258  059D                     _TMR0H	set	1437
  6259  059F                     _T0CON1	set	1439
  6260  070D                     _PIR1bits	set	1805
  6261  0717                     _PIE1bits	set	1815
  6262  070F                     _PIR3bits	set	1807
  6263  070C                     _PIR0bits	set	1804
  6264  0716                     _PIE0bits	set	1814
  6265  0719                     _PIE3bits	set	1817
  6266  079D                     _PMD7	set	1949
  6267  079C                     _PMD6	set	1948
  6268  079B                     _PMD5	set	1947
  6269  079A                     _PMD4	set	1946
  6270  0799                     _PMD3	set	1945
  6271  0798                     _PMD2	set	1944
  6272  0797                     _PMD1	set	1943
  6273  0796                     _PMD0	set	1942
  6274  0892                     _OSCTUNE	set	2194
  6275  0893                     _OSCFRQ	set	2195
  6276  0891                     _OSCEN	set	2193
  6277  088F                     _OSCCON3	set	2191
  6278  088D                     _OSCCON1	set	2189
  6279  1ECB                     _RX1DTPPS	set	7883
  6280  1EC6                     _SSP1DATPPS	set	7878
  6281  1EC5                     _SSP1CLKPPS	set	7877
  6282  1F23                     _RC3PPS	set	7971
  6283  1F24                     _RC4PPS	set	7972
  6284  1F26                     _RC6PPS	set	7974
  6285  1F27                     _RC7PPS	set	7975
  6286  1F15                     _RA5PPS	set	7957
  6287  1F14                     _RA4PPS	set	7956
  6288  1F51                     _SLRCONC	set	8017
  6289  1F46                     _SLRCONB	set	8006
  6290  1F3B                     _SLRCONA	set	7995
  6291  1F50                     _ODCONC	set	8016
  6292  1F45                     _ODCONB	set	8005
  6293  1F3A                     _ODCONA	set	7994
  6294  1F4F                     _WPUC	set	8015
  6295  1F39                     _WPUA	set	7993
  6296  1F44                     _WPUB	set	8004
  6297  1F38                     _ANSELA	set	7992
  6298  1F43                     _ANSELB	set	8003
  6299  1F4E                     _ANSELC	set	8014
  6300                           
  6301                           ; #config settings
  6302  0000                     
  6303                           	psect	cinit
  6304  003B                     start_initialization:	
  6305  003B                     __initialization:		;BIGRAM
  6306                           
  6307                           ; Initialize objects allocated to BANK0
  6308  003B  318E  2628  3180   	fcall	__pidataBANK0	;fetch initializer
  6309  003E  00EB               	movwf	__pdataBANK0& (0+127)
  6310  003F  318E  2629  3180   	fcall	__pidataBANK0+1	;fetch initializer
  6311  0042  00EC               	movwf	(__pdataBANK0+1)& (0+127)
  6312  0043  318E  262A  3180   	fcall	__pidataBANK0+2	;fetch initializer
  6313  0046  00ED               	movwf	(__pdataBANK0+2)& (0+127)
  6314  0047  318E  262B  3180   	fcall	__pidataBANK0+3	;fetch initializer
  6315  004A  00EE               	movwf	(__pdataBANK0+3)& (0+127)
  6316                           
  6317                           ; Initialize objects allocated to BANK1
  6318  004B  0141               	movlb	1	; select bank1
  6319  004C  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  6320  004F  00DA               	movwf	__pdataBANK1& (0+127)
  6321  0050  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  6322  0053  00DB               	movwf	(__pdataBANK1+1)& (0+127)
  6323                           
  6324                           ; Clear objects allocated to BIGRAM
  6325  0054  30EF               	movlw	low (0+9711)
  6326  0055  0084               	movwf	4
  6327  0056  3025               	movlw	high (0+9711)
  6328  0057  0085               	movwf	5
  6329  0058  3001               	movlw	1
  6330  0059  00FE               	movwf	btemp
  6331  005A  3002               	movlw	2
  6332  005B  00FF               	movwf	btemp+1
  6333  005C  3187  27F4  3180   	fcall	clear_ram0
  6334                           
  6335                           ; Clear objects allocated to COMMON
  6336  005F  01F0               	clrf	__pbssCOMMON& (0+127)
  6337  0060  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  6338  0061  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  6339  0062  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  6340  0063  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  6341  0064  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  6342                           
  6343                           ; Clear objects allocated to BANK0
  6344  0065  3048               	movlw	low __pbssBANK0
  6345  0066  0084               	movwf	4
  6346  0067  3000               	movlw	high __pbssBANK0
  6347  0068  0085               	movwf	5
  6348  0069  3023               	movlw	35
  6349  006A  00FE               	movwf	btemp
  6350  006B  3000               	movlw	0
  6351  006C  00FF               	movwf	btemp+1
  6352  006D  3187  27F4  3180   	fcall	clear_ram0
  6353                           
  6354                           ; Clear objects allocated to BANK1
  6355  0070  30A0               	movlw	low __pbssBANK1
  6356  0071  0084               	movwf	4
  6357  0072  3000               	movlw	high __pbssBANK1
  6358  0073  0085               	movwf	5
  6359  0074  302C               	movlw	44
  6360  0075  00FE               	movwf	btemp
  6361  0076  3000               	movlw	0
  6362  0077  00FF               	movwf	btemp+1
  6363  0078  3187  27F4  3180   	fcall	clear_ram0
  6364                           
  6365                           ; Clear objects allocated to BANK2
  6366  007B  3020               	movlw	low __pbssBANK2
  6367  007C  0084               	movwf	4
  6368  007D  3001               	movlw	high __pbssBANK2
  6369  007E  0085               	movwf	5
  6370  007F  3020               	movlw	32
  6371  0080  00FE               	movwf	btemp
  6372  0081  3000               	movlw	0
  6373  0082  00FF               	movwf	btemp+1
  6374  0083  3187  27F4         	fcall	clear_ram0
  6375  0085                     end_of_initialization:	
  6376                           ;End of C runtime variable initialization code
  6377                           
  6378  0085                     __end_of__initialization:	
  6379  0085  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6380  0086  0140               	movlb	0
  6381  0087  3185  2DFD         	ljmp	_main	;jump to C main() function
  6382                           
  6383                           	psect	bssCOMMON
  6384  0070                     __pbssCOMMON:	
  6385  0070                     _eusart1RxTail:	
  6386  0070                     	ds	1
  6387  0071                     _eusart1RxHead:	
  6388  0071                     	ds	1
  6389  0072                     _eusart1TxTail:	
  6390  0072                     	ds	1
  6391  0073                     _eusart1TxHead:	
  6392  0073                     	ds	1
  6393  0074                     I2C1_ISR@i2c_address:	
  6394  0074                     	ds	2
  6395                           
  6396                           	psect	bssBANK0
  6397  0048                     __pbssBANK0:	
  6398  0048                     _i2c1_object:	
  6399  0048                     	ds	5
  6400  004D                     _lastBeat:	
  6401  004D                     	ds	2
  6402  004F                     controller@lastTime:	
  6403  004F                     	ds	2
  6404  0051                     buttons@lastTime:	
  6405  0051                     	ds	2
  6406  0053                     _currentTime:	
  6407  0053                     	ds	2
  6408  0055                     _lastTime:	
  6409  0055                     	ds	2
  6410  0057                     _lastDetected:	
  6411  0057                     	ds	1
  6412  0058                     _thresholdExceeded:	
  6413  0058                     	ds	1
  6414  0059                     _detected:	
  6415  0059                     	ds	1
  6416  005A                     _menu:	
  6417  005A                     	ds	1
  6418  005B                     _enter:	
  6419  005B                     	ds	1
  6420  005C                     _down:	
  6421  005C                     	ds	1
  6422  005D                     _up:	
  6423  005D                     	ds	1
  6424  005E                     _isOn:	
  6425  005E                     	ds	1
  6426  005F                     I2C1_ISR@i2c_10bit_address_restart:	
  6427  005F                     	ds	1
  6428  0060                     I2C1_ISR@i2c_bytes_left:	
  6429  0060                     	ds	1
  6430  0061                     I2C1_ISR@pi2c_buf_ptr:	
  6431  0061                     	ds	1
  6432  0062                     _p_i2c1_current:	
  6433  0062                     	ds	1
  6434  0063                     _p_i2c1_trb_current:	
  6435  0063                     	ds	1
  6436  0064                     _i2c1_trb_count:	
  6437  0064                     	ds	1
  6438  0065                     _i2c1_state:	
  6439  0065                     	ds	1
  6440  0066                     _eusart1RxLastError:	
  6441  0066                     	ds	1
  6442  0067                     _eusart1RxCount:	
  6443  0067                     	ds	1
  6444  0068                     _i2c1_tr_queue:	
  6445  0068                     	ds	3
  6446                           
  6447                           	psect	dataBANK0
  6448  006B                     __pdataBANK0:	
  6449  006B                     _threshold:	
  6450  006B                     	ds	2
  6451  006D                     _address:	
  6452  006D                     	ds	2
  6453                           
  6454                           	psect	bssBANK1
  6455  00A0                     __pbssBANK1:	
  6456  00A0                     _eusart1RxStatusBuffer:	
  6457  00A0                     	ds	8
  6458  00A8                     _eusart1RxBuffer:	
  6459  00A8                     	ds	8
  6460  00B0                     _eusart1TxBuffer:	
  6461  00B0                     	ds	8
  6462  00B8                     _dmxPointer:	
  6463  00B8                     	ds	2
  6464  00BA                     _thresholdCount:	
  6465  00BA                     	ds	2
  6466  00BC                     _lastRun:	
  6467  00BC                     	ds	2
  6468  00BE                     _bpm:	
  6469  00BE                     	ds	2
  6470  00C0                     _lastActiveTime:	
  6471  00C0                     	ds	2
  6472  00C2                     _count:	
  6473  00C2                     	ds	2
  6474  00C4                     I2C1_MasterRead@trBlock:	
  6475  00C4                     	ds	4
  6476  00C8                     I2C1_MasterWrite@trBlock:	
  6477  00C8                     	ds	4
  6478                           
  6479                           	psect	dataBANK1
  6480  00DA                     __pdataBANK1:	
  6481  00DA                     _delay:	
  6482  00DA                     	ds	2
  6483                           
  6484                           	psect	bssBANK2
  6485  0120                     __pbssBANK2:	
  6486  0120                     _buttons:	
  6487  0120                     	ds	32
  6488                           
  6489                           	psect	clrtext
  6490  07F4                     clear_ram0:	
  6491                           ;	Called with FSR0 containing the base address, and
  6492                           ;	btemp/btemp+1 has the size to clear
  6493                           
  6494  07F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  6495  07F5                     clrloop0:	
  6496  07F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  6497  07F6  3101               	addfsr 0,1
  6498  07F7  3001               	movlw	1
  6499  07F8  02FE               	subwf	126,f
  6500  07F9  3000               	movlw	0
  6501  07FA  3BFF               	subwfb	127,f
  6502  07FB  087F               	movf	127,w
  6503  07FC  047E               	iorwf	126,w
  6504  07FD  1903               	btfsc	3,2
  6505  07FE  3400               	retlw	0	;all done for this memory range, return
  6506  07FF  2FF5               	goto	clrloop0	;have we reached the end yet?
  6507                           
  6508                           	psect	cstackCOMMON
  6509  0076                     __pcstackCOMMON:	
  6510  0076                     ?_EUSART1_Receive_ISR:	
  6511  0076                     ?_EUSART1_Transmit_ISR:	
  6512                           ; 1 bytes @ 0x0
  6513                           
  6514  0076                     ??_EUSART1_Transmit_ISR:	
  6515                           ; 1 bytes @ 0x0
  6516                           
  6517  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  6518                           ; 1 bytes @ 0x0
  6519                           
  6520  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  6521                           ; 1 bytes @ 0x0
  6522                           
  6523  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  6524                           ; 1 bytes @ 0x0
  6525                           
  6526  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  6527                           ; 1 bytes @ 0x0
  6528                           
  6529  0076                     ?_EUSART1_DefaultErrorHandler:	
  6530                           ; 1 bytes @ 0x0
  6531                           
  6532  0076                     ?_EUSART1_RxDataHandler:	
  6533                           ; 1 bytes @ 0x0
  6534                           
  6535  0076                     ??_EUSART1_RxDataHandler:	
  6536                           ; 1 bytes @ 0x0
  6537                           
  6538  0076                     ?_PMD_Initialize:	
  6539                           ; 1 bytes @ 0x0
  6540                           
  6541  0076                     ?_PIN_MANAGER_Initialize:	
  6542                           ; 1 bytes @ 0x0
  6543                           
  6544  0076                     ?_OSCILLATOR_Initialize:	
  6545                           ; 1 bytes @ 0x0
  6546                           
  6547  0076                     ?_I2C1_Initialize:	
  6548                           ; 1 bytes @ 0x0
  6549                           
  6550  0076                     ?_ADCC_Initialize:	
  6551                           ; 1 bytes @ 0x0
  6552                           
  6553  0076                     ?_TMR0_Initialize:	
  6554                           ; 1 bytes @ 0x0
  6555                           
  6556  0076                     ?_TMR0_ISR:	
  6557                           ; 1 bytes @ 0x0
  6558                           
  6559  0076                     ??_TMR0_ISR:	
  6560                           ; 1 bytes @ 0x0
  6561                           
  6562  0076                     ?_I2C1_BusCollisionISR:	
  6563                           ; 1 bytes @ 0x0
  6564                           
  6565  0076                     ??_I2C1_BusCollisionISR:	
  6566                           ; 1 bytes @ 0x0
  6567                           
  6568  0076                     ?_I2C1_ISR:	
  6569                           ; 1 bytes @ 0x0
  6570                           
  6571  0076                     ?_ADCC_ThresholdISR:	
  6572                           ; 1 bytes @ 0x0
  6573                           
  6574  0076                     ??_ADCC_ThresholdISR:	
  6575                           ; 1 bytes @ 0x0
  6576                           
  6577  0076                     ?_TMR0_DefaultInterruptHandler:	
  6578                           ; 1 bytes @ 0x0
  6579                           
  6580  0076                     ??_TMR0_DefaultInterruptHandler:	
  6581                           ; 1 bytes @ 0x0
  6582                           
  6583  0076                     ?_I2C1_Stop:	
  6584                           ; 1 bytes @ 0x0
  6585                           
  6586  0076                     ??_I2C1_Stop:	
  6587                           ; 1 bytes @ 0x0
  6588                           
  6589  0076                     ?_I2C1_FunctionComplete:	
  6590                           ; 1 bytes @ 0x0
  6591                           
  6592  0076                     ??_I2C1_FunctionComplete:	
  6593                           ; 1 bytes @ 0x0
  6594                           
  6595  0076                     ?_ADCC_DefaultInterruptHandler:	
  6596                           ; 1 bytes @ 0x0
  6597                           
  6598  0076                     ??_ADCC_DefaultInterruptHandler:	
  6599                           ; 1 bytes @ 0x0
  6600                           
  6601  0076                     ?_CLOCK_init:	
  6602                           ; 1 bytes @ 0x0
  6603                           
  6604  0076                     ?_DMX_ISR:	
  6605                           ; 1 bytes @ 0x0
  6606                           
  6607  0076                     ??_DMX_ISR:	
  6608                           ; 1 bytes @ 0x0
  6609                           
  6610  0076                     ?_TM1650_init:	
  6611                           ; 1 bytes @ 0x0
  6612                           
  6613  0076                     ?_BUTTONS_init:	
  6614                           ; 1 bytes @ 0x0
  6615                           
  6616  0076                     ?_CONTROLLER_init:	
  6617                           ; 1 bytes @ 0x0
  6618                           
  6619  0076                     ?_initLED:	
  6620                           ; 1 bytes @ 0x0
  6621                           
  6622  0076                     ?_BEAT_init:	
  6623                           ; 1 bytes @ 0x0
  6624                           
  6625  0076                     ?_BEAT_task:	
  6626                           ; 1 bytes @ 0x0
  6627                           
  6628  0076                     ?_LED_task:	
  6629                           ; 1 bytes @ 0x0
  6630                           
  6631  0076                     ?_BUTTONS_task:	
  6632                           ; 1 bytes @ 0x0
  6633                           
  6634  0076                     ?_CONTROLLER_task:	
  6635                           ; 1 bytes @ 0x0
  6636                           
  6637  0076                     ?_BEAT_detected:	
  6638                           ; 1 bytes @ 0x0
  6639                           
  6640  0076                     ?_CLOCK_timerCallback:	
  6641                           ; 1 bytes @ 0x0
  6642                           
  6643  0076                     ??_CLOCK_timerCallback:	
  6644                           ; 1 bytes @ 0x0
  6645                           
  6646  0076                     ?_TM1650_enable:	
  6647                           ; 1 bytes @ 0x0
  6648                           
  6649  0076                     ?_EUSART1_Initialize:	
  6650                           ; 1 bytes @ 0x0
  6651                           
  6652  0076                     ?_SYSTEM_Initialize:	
  6653                           ; 1 bytes @ 0x0
  6654                           
  6655  0076                     ?_INTERRUPT_InterruptManager:	
  6656                           ; 1 bytes @ 0x0
  6657                           
  6658  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  6659                           ; 1 bytes @ 0x0
  6660                           
  6661  0076                     ?_ADCC_StartConversion:	
  6662                           ; 1 bytes @ 0x0
  6663                           
  6664  0076                     ?_main:	
  6665                           ; 1 bytes @ 0x0
  6666                           
  6667  0076                     ?_TM1650_isEnabled:	
  6668                           ; 1 bytes @ 0x0
  6669                           
  6670  0076                     ?_address_inc:	
  6671                           ; 1 bytes @ 0x0
  6672                           
  6673  0076                     ?_address_dec:	
  6674                           ; 1 bytes @ 0x0
  6675                           
  6676  0076                     ?_adcThresholdHandler:	
  6677                           ; 1 bytes @ 0x0
  6678                           
  6679  0076                     ??_adcThresholdHandler:	
  6680                           ; 1 bytes @ 0x0
  6681                           
  6682                           
  6683                           ; 1 bytes @ 0x0
  6684  0076                     	ds	1
  6685  0077                     ??_EUSART1_Receive_ISR:	
  6686  0077                     ??_EUSART1_DefaultErrorHandler:	
  6687                           ; 1 bytes @ 0x1
  6688                           
  6689  0077                     I2C1_Stop@completion_code:	
  6690                           ; 1 bytes @ 0x1
  6691                           
  6692                           
  6693                           ; 1 bytes @ 0x1
  6694  0077                     	ds	1
  6695  0078                     ??_I2C1_ISR:	
  6696                           
  6697                           ; 1 bytes @ 0x2
  6698  0078                     	ds	4
  6699  007C                     ??_INTERRUPT_InterruptManager:	
  6700                           
  6701                           	psect	cstackBANK0
  6702  0020                     __pcstackBANK0:	
  6703                           ; 1 bytes @ 0x6
  6704                           
  6705  0020                     ?_EUSART1_SetRxInterruptHandler:	
  6706  0020                     ?_EUSART1_SetTxInterruptHandler:	
  6707                           ; 1 bytes @ 0x0
  6708                           
  6709  0020                     ?_EUSART1_SetFramingErrorHandler:	
  6710                           ; 1 bytes @ 0x0
  6711                           
  6712  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  6713                           ; 1 bytes @ 0x0
  6714                           
  6715  0020                     ?_EUSART1_SetErrorHandler:	
  6716                           ; 1 bytes @ 0x0
  6717                           
  6718  0020                     ??_PMD_Initialize:	
  6719                           ; 1 bytes @ 0x0
  6720                           
  6721  0020                     ??_PIN_MANAGER_Initialize:	
  6722                           ; 1 bytes @ 0x0
  6723                           
  6724  0020                     ??_OSCILLATOR_Initialize:	
  6725                           ; 1 bytes @ 0x0
  6726                           
  6727  0020                     ??_I2C1_Initialize:	
  6728                           ; 1 bytes @ 0x0
  6729                           
  6730  0020                     ?_TMR0_SetInterruptHandler:	
  6731                           ; 1 bytes @ 0x0
  6732                           
  6733  0020                     ?_I2C1_MasterWriteTRBBuild:	
  6734                           ; 1 bytes @ 0x0
  6735                           
  6736  0020                     ?_I2C1_MasterTRBInsert:	
  6737                           ; 1 bytes @ 0x0
  6738                           
  6739  0020                     ?_ADCC_SetADTIInterruptHandler:	
  6740                           ; 1 bytes @ 0x0
  6741                           
  6742  0020                     ??_initLED:	
  6743                           ; 1 bytes @ 0x0
  6744                           
  6745  0020                     ?_LED_setColor:	
  6746                           ; 1 bytes @ 0x0
  6747                           
  6748  0020                     ??_BEAT_detected:	
  6749                           ; 1 bytes @ 0x0
  6750                           
  6751  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  6752                           ; 1 bytes @ 0x0
  6753                           
  6754  0020                     ??_ADCC_StartConversion:	
  6755                           ; 1 bytes @ 0x0
  6756                           
  6757  0020                     ?_ADCC_SetUpperThreshold:	
  6758                           ; 1 bytes @ 0x0
  6759                           
  6760  0020                     ??_TM1650_isEnabled:	
  6761                           ; 1 bytes @ 0x0
  6762                           
  6763  0020                     ?_init:	
  6764                           ; 1 bytes @ 0x0
  6765                           
  6766  0020                     ?_CLOCK_getTime:	
  6767                           ; 1 bytes @ 0x0
  6768                           
  6769  0020                     ?_BUTTONS_isClicked:	
  6770                           ; 2 bytes @ 0x0
  6771                           
  6772  0020                     ?___lwdiv:	
  6773                           ; 2 bytes @ 0x0
  6774                           
  6775  0020                     ?___lwmod:	
  6776                           ; 2 bytes @ 0x0
  6777                           
  6778  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  6779                           ; 2 bytes @ 0x0
  6780                           
  6781  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  6782                           ; 1 bytes @ 0x0
  6783                           
  6784  0020                     ADCC_StartConversion@channel:	
  6785                           ; 1 bytes @ 0x0
  6786                           
  6787  0020                     LED_setColor@green:	
  6788                           ; 1 bytes @ 0x0
  6789                           
  6790  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  6791                           ; 1 bytes @ 0x0
  6792                           
  6793  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  6794                           ; 2 bytes @ 0x0
  6795                           
  6796  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  6797                           ; 2 bytes @ 0x0
  6798                           
  6799  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  6800                           ; 2 bytes @ 0x0
  6801                           
  6802  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  6803                           ; 2 bytes @ 0x0
  6804                           
  6805  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  6806                           ; 2 bytes @ 0x0
  6807                           
  6808  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  6809                           ; 2 bytes @ 0x0
  6810                           
  6811  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  6812                           ; 2 bytes @ 0x0
  6813                           
  6814  0020                     init@port:	
  6815                           ; 2 bytes @ 0x0
  6816                           
  6817  0020                     ___lwdiv@divisor:	
  6818                           ; 2 bytes @ 0x0
  6819                           
  6820  0020                     ___lwmod@divisor:	
  6821                           ; 2 bytes @ 0x0
  6822                           
  6823                           
  6824                           ; 2 bytes @ 0x0
  6825  0020                     	ds	1
  6826  0021                     I2C1_MasterTRBInsert@pflag:	
  6827  0021                     I2C1_MasterWriteTRBBuild@length:	
  6828                           ; 1 bytes @ 0x1
  6829                           
  6830  0021                     LED_setColor@white:	
  6831                           ; 1 bytes @ 0x1
  6832                           
  6833                           
  6834                           ; 1 bytes @ 0x1
  6835  0021                     	ds	1
  6836  0022                     ??_EUSART1_SetRxInterruptHandler:	
  6837  0022                     ??_EUSART1_SetTxInterruptHandler:	
  6838                           ; 1 bytes @ 0x2
  6839                           
  6840  0022                     ??_EUSART1_SetFramingErrorHandler:	
  6841                           ; 1 bytes @ 0x2
  6842                           
  6843  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  6844                           ; 1 bytes @ 0x2
  6845                           
  6846  0022                     ??_EUSART1_SetErrorHandler:	
  6847                           ; 1 bytes @ 0x2
  6848                           
  6849  0022                     ??_ADCC_Initialize:	
  6850                           ; 1 bytes @ 0x2
  6851                           
  6852  0022                     ??_TMR0_Initialize:	
  6853                           ; 1 bytes @ 0x2
  6854                           
  6855  0022                     ??_TMR0_SetInterruptHandler:	
  6856                           ; 1 bytes @ 0x2
  6857                           
  6858  0022                     ??_I2C1_MasterTRBInsert:	
  6859                           ; 1 bytes @ 0x2
  6860                           
  6861  0022                     ??_ADCC_SetADTIInterruptHandler:	
  6862                           ; 1 bytes @ 0x2
  6863                           
  6864  0022                     ??_CLOCK_init:	
  6865                           ; 1 bytes @ 0x2
  6866                           
  6867  0022                     ??_BEAT_init:	
  6868                           ; 1 bytes @ 0x2
  6869                           
  6870  0022                     ??_BUTTONS_task:	
  6871                           ; 1 bytes @ 0x2
  6872                           
  6873  0022                     ??_CLOCK_getTime:	
  6874                           ; 1 bytes @ 0x2
  6875                           
  6876  0022                     ??_EUSART1_Initialize:	
  6877                           ; 1 bytes @ 0x2
  6878                           
  6879  0022                     ??_ADCC_SetUpperThreshold:	
  6880                           ; 1 bytes @ 0x2
  6881                           
  6882  0022                     LED_setColor@blue:	
  6883                           ; 1 bytes @ 0x2
  6884                           
  6885  0022                     init@pin:	
  6886                           ; 1 bytes @ 0x2
  6887                           
  6888  0022                     I2C1_MasterWriteTRBBuild@address:	
  6889                           ; 1 bytes @ 0x2
  6890                           
  6891  0022                     ___lwdiv@dividend:	
  6892                           ; 2 bytes @ 0x2
  6893                           
  6894  0022                     ___lwmod@dividend:	
  6895                           ; 2 bytes @ 0x2
  6896                           
  6897                           
  6898                           ; 2 bytes @ 0x2
  6899  0022                     	ds	1
  6900  0023                     ??_LED_setColor:	
  6901  0023                     ??_SYSTEM_Initialize:	
  6902                           ; 1 bytes @ 0x3
  6903                           
  6904  0023                     ??_init:	
  6905                           ; 1 bytes @ 0x3
  6906                           
  6907  0023                     ??_BUTTONS_isClicked:	
  6908                           ; 1 bytes @ 0x3
  6909                           
  6910  0023                     I2C1_MasterTRBInsert@count:	
  6911                           ; 1 bytes @ 0x3
  6912                           
  6913  0023                     BUTTONS_isClicked@button:	
  6914                           ; 1 bytes @ 0x3
  6915                           
  6916                           
  6917                           ; 1 bytes @ 0x3
  6918  0023                     	ds	1
  6919  0024                     ??_I2C1_MasterWriteTRBBuild:	
  6920  0024                     ??___lwdiv:	
  6921                           ; 1 bytes @ 0x4
  6922                           
  6923  0024                     ??___lwmod:	
  6924                           ; 1 bytes @ 0x4
  6925                           
  6926  0024                     init@btn:	
  6927                           ; 1 bytes @ 0x4
  6928                           
  6929                           
  6930                           ; 1 bytes @ 0x4
  6931  0024                     	ds	1
  6932  0025                     ??_BUTTONS_init:	
  6933  0025                     BUTTONS_task@i:	
  6934                           ; 1 bytes @ 0x5
  6935                           
  6936  0025                     ___lwdiv@counter:	
  6937                           ; 1 bytes @ 0x5
  6938                           
  6939  0025                     ___lwmod@counter:	
  6940                           ; 1 bytes @ 0x5
  6941                           
  6942                           
  6943                           ; 1 bytes @ 0x5
  6944  0025                     	ds	1
  6945  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  6946  0026                     BUTTONS_task@time:	
  6947                           ; 1 bytes @ 0x6
  6948                           
  6949  0026                     ___lwdiv@quotient:	
  6950                           ; 2 bytes @ 0x6
  6951                           
  6952                           
  6953                           ; 2 bytes @ 0x6
  6954  0026                     	ds	1
  6955  0027                     ?_I2C1_MasterWrite:	
  6956  0027                     I2C1_MasterWrite@length:	
  6957                           ; 1 bytes @ 0x7
  6958                           
  6959  0027                     LED_setColor@lo1:	
  6960                           ; 1 bytes @ 0x7
  6961                           
  6962                           
  6963                           ; 2 bytes @ 0x7
  6964  0027                     	ds	1
  6965  0028                     ??_BEAT_task:	
  6966  0028                     BUTTONS_task@btn:	
  6967                           ; 1 bytes @ 0x8
  6968                           
  6969  0028                     I2C1_MasterWrite@address:	
  6970                           ; 1 bytes @ 0x8
  6971                           
  6972                           
  6973                           ; 2 bytes @ 0x8
  6974  0028                     	ds	2
  6975  002A                     I2C1_MasterWrite@pflag:	
  6976  002A                     BEAT_task@offset:	
  6977                           ; 1 bytes @ 0xA
  6978                           
  6979                           
  6980                           ; 2 bytes @ 0xA
  6981  002A                     	ds	1
  6982  002B                     ??_I2C1_MasterWrite:	
  6983  002B                     LED_setColor@lo2:	
  6984                           ; 1 bytes @ 0xB
  6985                           
  6986                           
  6987                           ; 2 bytes @ 0xB
  6988  002B                     	ds	2
  6989  002D                     I2C1_MasterWrite@pdata:	
  6990                           
  6991                           ; 1 bytes @ 0xD
  6992  002D                     	ds	1
  6993  002E                     ?_writeData:	
  6994  002E                     writeData@data:	
  6995                           ; 1 bytes @ 0xE
  6996                           
  6997                           
  6998                           ; 1 bytes @ 0xE
  6999  002E                     	ds	1
  7000  002F                     ??_writeData:	
  7001  002F                     LED_setColor@lo3:	
  7002                           ; 1 bytes @ 0xF
  7003                           
  7004                           
  7005                           ; 2 bytes @ 0xF
  7006  002F                     	ds	3
  7007  0032                     writeData@address:	
  7008                           
  7009                           ; 1 bytes @ 0x12
  7010  0032                     	ds	1
  7011  0033                     writeData@status:	
  7012  0033                     LED_setColor@lo4:	
  7013                           ; 1 bytes @ 0x13
  7014                           
  7015                           
  7016                           ; 2 bytes @ 0x13
  7017  0033                     	ds	1
  7018  0034                     ??_TM1650_enable:	
  7019  0034                     ?_TM1650_setDigit:	
  7020                           ; 1 bytes @ 0x14
  7021                           
  7022  0034                     TM1650_setDigit@data:	
  7023                           ; 1 bytes @ 0x14
  7024                           
  7025  0034                     TM1650_enable@enable:	
  7026                           ; 1 bytes @ 0x14
  7027                           
  7028                           
  7029                           ; 1 bytes @ 0x14
  7030  0034                     	ds	1
  7031  0035                     ??_TM1650_init:	
  7032  0035                     LED_setColor@red:	
  7033                           ; 1 bytes @ 0x15
  7034                           
  7035  0035                     TM1650_setDigit@dp:	
  7036                           ; 1 bytes @ 0x15
  7037                           
  7038                           
  7039                           ; 2 bytes @ 0x15
  7040  0035                     	ds	1
  7041  0036                     ??_LED_task:	
  7042                           
  7043                           ; 1 bytes @ 0x16
  7044  0036                     	ds	1
  7045  0037                     ??_TM1650_setDigit:	
  7046                           
  7047                           ; 1 bytes @ 0x17
  7048  0037                     	ds	3
  7049  003A                     TM1650_setDigit@digit:	
  7050                           
  7051                           ; 1 bytes @ 0x1A
  7052  003A                     	ds	1
  7053  003B                     ?_TM1650_fastPrintNum:	
  7054  003B                     TM1650_fastPrintNum@num:	
  7055                           ; 1 bytes @ 0x1B
  7056                           
  7057                           
  7058                           ; 2 bytes @ 0x1B
  7059  003B                     	ds	2
  7060  003D                     ??_TM1650_fastPrintNum:	
  7061                           
  7062                           ; 1 bytes @ 0x1D
  7063  003D                     	ds	1
  7064  003E                     TM1650_fastPrintNum@numWrite:	
  7065                           
  7066                           ; 2 bytes @ 0x1E
  7067  003E                     	ds	2
  7068  0040                     TM1650_fastPrintNum@i:	
  7069                           
  7070                           ; 2 bytes @ 0x20
  7071  0040                     	ds	1
  7072  0041                     LED_task@time:	
  7073                           
  7074                           ; 2 bytes @ 0x21
  7075  0041                     	ds	1
  7076  0042                     ??_CONTROLLER_init:	
  7077  0042                     ??_CONTROLLER_task:	
  7078                           ; 1 bytes @ 0x22
  7079                           
  7080  0042                     ??_address_inc:	
  7081                           ; 1 bytes @ 0x22
  7082                           
  7083  0042                     ??_address_dec:	
  7084                           ; 1 bytes @ 0x22
  7085                           
  7086                           
  7087                           ; 1 bytes @ 0x22
  7088  0042                     	ds	2
  7089  0044                     CONTROLLER_task@time:	
  7090                           
  7091                           ; 2 bytes @ 0x24
  7092  0044                     	ds	2
  7093  0046                     ??_main:	
  7094                           
  7095                           ; 1 bytes @ 0x26
  7096  0046                     	ds	2
  7097                           
  7098                           	psect	maintext
  7099  05FD                     __pmaintext:	
  7100 ;;
  7101 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7102 ;;
  7103 ;; *************** function _main *****************
  7104 ;; Defined at:
  7105 ;;		line 20 in file "main.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;		None
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      void 
  7112 ;; Registers used:
  7113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : B3F/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7121 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7123 ;;Total ram usage:        2 bytes
  7124 ;; Hardware stack levels required when called:   12
  7125 ;; This function calls:
  7126 ;;		_BEAT_init
  7127 ;;		_BEAT_task
  7128 ;;		_BUTTONS_init
  7129 ;;		_BUTTONS_task
  7130 ;;		_CLOCK_init
  7131 ;;		_CONTROLLER_init
  7132 ;;		_CONTROLLER_task
  7133 ;;		_EUSART1_SetRxInterruptHandler
  7134 ;;		_LED_task
  7135 ;;		_SYSTEM_Initialize
  7136 ;;		_TM1650_init
  7137 ;;		_initLED
  7138 ;; This function is called by:
  7139 ;;		Startup code after reset
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           
  7144                           ;psect for function _main
  7145  05FD                     _main:	
  7146                           
  7147                           ;main.c: 22:     SYSTEM_Initialize();
  7148                           
  7149                           ;incstack = 0
  7150                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7151  05FD  318F  2737  3185   	fcall	_SYSTEM_Initialize
  7152                           
  7153                           ;main.c: 23:     CLOCK_init();
  7154  0600  318E  263D  3185   	fcall	_CLOCK_init
  7155                           
  7156                           ;main.c: 24:     TRISB6 = 0;
  7157  0603  0140               	movlb	0	; select bank0
  7158  0604  1313               	bcf	19,6	;volatile
  7159                           
  7160                           ;main.c: 25:     LATB6 = 0;
  7161  0605  1319               	bcf	25,6	;volatile
  7162                           
  7163                           ;main.c: 26:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  7164  0606  306E               	movlw	low _DMX_ISR
  7165  0607  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  7166  0608  3007               	movlw	high _DMX_ISR
  7167  0609  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  7168  060A  318E  2695  3185   	fcall	_EUSART1_SetRxInterruptHandler
  7169                           
  7170                           ;main.c: 32:     (INTCONbits.GIE = 1);
  7171  060D  178B               	bsf	11,7	;volatile
  7172                           
  7173                           ;main.c: 35:     (INTCONbits.PEIE = 1);
  7174  060E  170B               	bsf	11,6	;volatile
  7175                           
  7176                           ;main.c: 42:      _delay((unsigned long)((500)*(32000000/4000.0)));
  7177  060F  3015               	movlw	21
  7178  0610  0140               	movlb	0	; select bank0
  7179  0611  00C7               	movwf	??_main+1
  7180  0612  304B               	movlw	75
  7181  0613  00C6               	movwf	??_main
  7182  0614  30BE               	movlw	190
  7183  0615                     u2547:	
  7184  0615  0B89               	decfsz	9,f
  7185  0616  2E15               	goto	u2547
  7186  0617  0BC6               	decfsz	??_main,f
  7187  0618  2E15               	goto	u2547
  7188  0619  0BC7               	decfsz	??_main+1,f
  7189  061A  2E15               	goto	u2547
  7190  061B  0000               	nop
  7191                           
  7192                           ;main.c: 43:     TM1650_init();
  7193  061C  318E  2624  3185   	fcall	_TM1650_init
  7194                           
  7195                           ;main.c: 44:     BUTTONS_init();
  7196  061F  3185  2582  3185   	fcall	_BUTTONS_init
  7197                           
  7198                           ;main.c: 45:     CONTROLLER_init();
  7199  0622  318E  2645  3185   	fcall	_CONTROLLER_init
  7200                           
  7201                           ;main.c: 46:     initLED();
  7202  0625  3186  26F9  3185   	fcall	_initLED
  7203                           
  7204                           ;main.c: 47:     BEAT_init();
  7205  0628  318E  26E5  3185   	fcall	_BEAT_init
  7206  062B                     l4083:	
  7207                           
  7208                           ;main.c: 51:         BEAT_task();
  7209  062B  3182  229C  3185   	fcall	_BEAT_task
  7210                           
  7211                           ;main.c: 52:         LED_task();
  7212  062E  3184  24A6  3185   	fcall	_LED_task
  7213                           
  7214                           ;main.c: 53:         BUTTONS_task();
  7215  0631  3181  21D2  3185   	fcall	_BUTTONS_task
  7216                           
  7217                           ;main.c: 54:         CONTROLLER_task();
  7218  0634  3183  23D8  3185   	fcall	_CONTROLLER_task
  7219  0637  2E2B               	goto	l4083
  7220  0638                     __end_of_main:	
  7221                           
  7222                           	psect	text1
  7223  06F9                     __ptext1:	
  7224 ;; *************** function _initLED *****************
  7225 ;; Defined at:
  7226 ;;		line 76 in file "main.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;		None
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;		None
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  1    wreg      void 
  7233 ;; Registers used:
  7234 ;;		wreg, status,2, status,0
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7244 ;;Total ram usage:        0 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; Hardware stack levels required when called:    4
  7247 ;; This function calls:
  7248 ;;		Nothing
  7249 ;; This function is called by:
  7250 ;;		_main
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           
  7255                           ;psect for function _initLED
  7256  06F9                     _initLED:	
  7257                           
  7258                           ;main.c: 79:     TRISC7 = 0;
  7259                           
  7260                           ;incstack = 0
  7261                           ; Regs used in _initLED: [wreg+status,2+status,0]
  7262  06F9  0140               	movlb	0	; select bank0
  7263  06FA  1394               	bcf	20,7	;volatile
  7264                           
  7265                           ;main.c: 80:     TRISC6 = 0;
  7266  06FB  1314               	bcf	20,6	;volatile
  7267                           
  7268                           ;main.c: 81:     TRISC4 = 0;
  7269  06FC  1214               	bcf	20,4	;volatile
  7270                           
  7271                           ;main.c: 82:     TRISC3 = 0;
  7272  06FD  1194               	bcf	20,3	;volatile
  7273                           
  7274                           ;main.c: 84:     T2CLKCON = 0x01;
  7275  06FE  3001               	movlw	1
  7276  06FF  0145               	movlb	5	; select bank5
  7277  0700  0090               	movwf	16	;volatile
  7278                           
  7279                           ;main.c: 85:     T2CONbits.ON = 1;
  7280  0701  178E               	bsf	14,7	;volatile
  7281                           
  7282                           ;main.c: 87:     CCP1CONbits.CCP1EN = 1;
  7283  0702  0146               	movlb	6	; select bank6
  7284  0703  178E               	bsf	14,7	;volatile
  7285                           
  7286                           ;main.c: 88:     CCP1CONbits.MODE = 0b1100;
  7287  0704  080E               	movf	14,w	;volatile
  7288  0705  39F0               	andlw	-16
  7289  0706  380C               	iorlw	12
  7290  0707  008E               	movwf	14	;volatile
  7291                           
  7292                           ;main.c: 89:     CCP2CONbits.CCP2EN = 1;
  7293  0708  1792               	bsf	18,7	;volatile
  7294                           
  7295                           ;main.c: 90:     CCP2CONbits.MODE = 0b1100;
  7296  0709  0812               	movf	18,w	;volatile
  7297  070A  39F0               	andlw	-16
  7298  070B  380C               	iorlw	12
  7299  070C  0092               	movwf	18	;volatile
  7300                           
  7301                           ;main.c: 91:     CCP3CONbits.CCP3EN = 1;
  7302  070D  1796               	bsf	22,7	;volatile
  7303                           
  7304                           ;main.c: 92:     CCP3CONbits.MODE = 0b1100;
  7305  070E  0816               	movf	22,w	;volatile
  7306  070F  39F0               	andlw	-16
  7307  0710  380C               	iorlw	12
  7308  0711  0096               	movwf	22	;volatile
  7309                           
  7310                           ;main.c: 93:     CCP4CONbits.CCP4EN = 1;
  7311  0712  179A               	bsf	26,7	;volatile
  7312                           
  7313                           ;main.c: 94:     CCP4CONbits.MODE = 0b1100;
  7314  0713  081A               	movf	26,w	;volatile
  7315  0714  39F0               	andlw	-16
  7316  0715  380C               	iorlw	12
  7317  0716  009A               	movwf	26	;volatile
  7318                           
  7319                           ;main.c: 97:     RC7PPS = 0x09;
  7320  0717  3009               	movlw	9
  7321  0718  017E               	movlb	62	; select bank62
  7322  0719  00A7               	movwf	39	;volatile
  7323                           
  7324                           ;main.c: 98:     RC6PPS = 0x0A;
  7325  071A  300A               	movlw	10
  7326  071B  00A6               	movwf	38	;volatile
  7327                           
  7328                           ;main.c: 99:     RC4PPS = 0x0B;
  7329  071C  300B               	movlw	11
  7330  071D  00A4               	movwf	36	;volatile
  7331                           
  7332                           ;main.c: 100:     RC3PPS = 0x0C;
  7333  071E  300C               	movlw	12
  7334  071F  00A3               	movwf	35	;volatile
  7335  0720  0008               	return
  7336  0721                     __end_of_initLED:	
  7337                           
  7338                           	psect	text2
  7339  0E24                     __ptext2:	
  7340 ;; *************** function _TM1650_init *****************
  7341 ;; Defined at:
  7342 ;;		line 28 in file "tm1650.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;		None
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7360 ;;Total ram usage:        0 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    9
  7363 ;; This function calls:
  7364 ;;		_TM1650_enable
  7365 ;; This function is called by:
  7366 ;;		_main
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           
  7371                           ;psect for function _TM1650_init
  7372  0E24                     _TM1650_init:	
  7373                           
  7374                           ;tm1650.c: 29:     TM1650_enable(1);
  7375                           
  7376                           ;incstack = 0
  7377                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7378  0E24  3001               	movlw	1
  7379  0E25  318F  270D         	fcall	_TM1650_enable
  7380  0E27  0008               	return
  7381  0E28                     __end_of_TM1650_init:	
  7382                           
  7383                           	psect	text3
  7384  0F37                     __ptext3:	
  7385 ;; *************** function _SYSTEM_Initialize *****************
  7386 ;; Defined at:
  7387 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;		None
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      void 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2, status,0, pclath, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7405 ;;Total ram usage:        0 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    6
  7408 ;; This function calls:
  7409 ;;		_ADCC_Initialize
  7410 ;;		_EUSART1_Initialize
  7411 ;;		_I2C1_Initialize
  7412 ;;		_OSCILLATOR_Initialize
  7413 ;;		_PIN_MANAGER_Initialize
  7414 ;;		_PMD_Initialize
  7415 ;;		_TMR0_Initialize
  7416 ;; This function is called by:
  7417 ;;		_main
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           
  7422                           ;psect for function _SYSTEM_Initialize
  7423  0F37                     _SYSTEM_Initialize:	
  7424                           
  7425                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7426                           
  7427                           ;incstack = 0
  7428                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7429  0F37  318E  26B0  318F   	fcall	_PMD_Initialize
  7430                           
  7431                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7432  0F3A  3186  269F  318F   	fcall	_PIN_MANAGER_Initialize
  7433                           
  7434                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7435  0F3D  318E  26A7  318F   	fcall	_OSCILLATOR_Initialize
  7436                           
  7437                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  7438  0F40  318F  2791  318F   	fcall	_I2C1_Initialize
  7439                           
  7440                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  7441  0F43  3187  2748  318F   	fcall	_ADCC_Initialize
  7442                           
  7443                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  7444  0F46  318E  26F9  318F   	fcall	_TMR0_Initialize
  7445                           
  7446                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  7447  0F49  3185  253F         	fcall	_EUSART1_Initialize
  7448  0F4B  0008               	return
  7449  0F4C                     __end_of_SYSTEM_Initialize:	
  7450                           
  7451                           	psect	text4
  7452  0EF9                     __ptext4:	
  7453 ;; *************** function _TMR0_Initialize *****************
  7454 ;; Defined at:
  7455 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;		None
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg, status,2, status,0, pclath, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7473 ;;Total ram usage:        0 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    5
  7476 ;; This function calls:
  7477 ;;		_TMR0_SetInterruptHandler
  7478 ;; This function is called by:
  7479 ;;		_SYSTEM_Initialize
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function _TMR0_Initialize
  7485  0EF9                     _TMR0_Initialize:	
  7486                           
  7487                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7491  0EF9  3045               	movlw	69
  7492  0EFA  014B               	movlb	11	; select bank11
  7493  0EFB  009F               	movwf	31	;volatile
  7494                           
  7495                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  7496  0EFC  30F9               	movlw	249
  7497  0EFD  009D               	movwf	29	;volatile
  7498                           
  7499                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  7500  0EFE  019C               	clrf	28	;volatile
  7501                           
  7502                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  7503  0EFF  014E               	movlb	14	; select bank14
  7504  0F00  128C               	bcf	12,5	;volatile
  7505                           
  7506                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  7507  0F01  1696               	bsf	22,5	;volatile
  7508                           
  7509                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7510  0F02  3012               	movlw	low _TMR0_DefaultInterruptHandler
  7511  0F03  0140               	movlb	0	; select bank0
  7512  0F04  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7513  0F05  300E               	movlw	high _TMR0_DefaultInterruptHandler
  7514  0F06  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7515  0F07  318E  2668         	fcall	_TMR0_SetInterruptHandler
  7516                           
  7517                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  7518  0F09  3080               	movlw	128
  7519  0F0A  014B               	movlb	11	; select bank11
  7520  0F0B  009E               	movwf	30	;volatile
  7521  0F0C  0008               	return
  7522  0F0D                     __end_of_TMR0_Initialize:	
  7523                           
  7524                           	psect	text5
  7525  0EB0                     __ptext5:	
  7526 ;; *************** function _PMD_Initialize *****************
  7527 ;; Defined at:
  7528 ;;		line 75 in file "mcc_generated_files/mcc.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      void 
  7535 ;; Registers used:
  7536 ;;		status,2
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7546 ;;Total ram usage:        0 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    4
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_SYSTEM_Initialize
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           
  7557                           ;psect for function _PMD_Initialize
  7558  0EB0                     _PMD_Initialize:	
  7559                           
  7560                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  7561                           
  7562                           ;incstack = 0
  7563                           ; Regs used in _PMD_Initialize: [status,2]
  7564  0EB0  014F               	movlb	15	; select bank15
  7565  0EB1  0196               	clrf	22	;volatile
  7566                           
  7567                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  7568  0EB2  0197               	clrf	23	;volatile
  7569                           
  7570                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  7571  0EB3  0198               	clrf	24	;volatile
  7572                           
  7573                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  7574  0EB4  0199               	clrf	25	;volatile
  7575                           
  7576                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  7577  0EB5  019A               	clrf	26	;volatile
  7578                           
  7579                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  7580  0EB6  019B               	clrf	27	;volatile
  7581                           
  7582                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  7583  0EB7  019C               	clrf	28	;volatile
  7584                           
  7585                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  7586  0EB8  019D               	clrf	29	;volatile
  7587  0EB9  0008               	return
  7588  0EBA                     __end_of_PMD_Initialize:	
  7589                           
  7590                           	psect	text6
  7591  069F                     __ptext6:	
  7592 ;; *************** function _PIN_MANAGER_Initialize *****************
  7593 ;; Defined at:
  7594 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;		None
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1    wreg      void 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7612 ;;Total ram usage:        0 bytes
  7613 ;; Hardware stack levels used:    1
  7614 ;; Hardware stack levels required when called:    4
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_SYSTEM_Initialize
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           
  7623                           ;psect for function _PIN_MANAGER_Initialize
  7624  069F                     _PIN_MANAGER_Initialize:	
  7625                           
  7626                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7627                           
  7628                           ;incstack = 0
  7629                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7630  069F  0140               	movlb	0	; select bank0
  7631  06A0  0198               	clrf	24	;volatile
  7632                           
  7633                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7634  06A1  0199               	clrf	25	;volatile
  7635                           
  7636                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7637  06A2  019A               	clrf	26	;volatile
  7638                           
  7639                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  7640  06A3  303F               	movlw	63
  7641  06A4  0092               	movwf	18	;volatile
  7642                           
  7643                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  7644  06A5  30F0               	movlw	240
  7645  06A6  0093               	movwf	19	;volatile
  7646                           
  7647                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  7648  06A7  30FF               	movlw	255
  7649  06A8  0094               	movwf	20	;volatile
  7650                           
  7651                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  7652  06A9  30F8               	movlw	248
  7653  06AA  017E               	movlb	62	; select bank62
  7654  06AB  00CE               	movwf	78	;volatile
  7655                           
  7656                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  7657  06AC  30E0               	movlw	224
  7658  06AD  00C3               	movwf	67	;volatile
  7659                           
  7660                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  7661  06AE  3003               	movlw	3
  7662  06AF  00B8               	movwf	56	;volatile
  7663                           
  7664                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7665  06B0  01C4               	clrf	68	;volatile
  7666                           
  7667                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  7668  06B1  3004               	movlw	4
  7669  06B2  00B9               	movwf	57	;volatile
  7670                           
  7671                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  7672  06B3  3007               	movlw	7
  7673  06B4  00CF               	movwf	79	;volatile
  7674                           
  7675                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  7676  06B5  01BA               	clrf	58	;volatile
  7677                           
  7678                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  7679  06B6  01C5               	clrf	69	;volatile
  7680                           
  7681                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  7682  06B7  01D0               	clrf	80	;volatile
  7683                           
  7684                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  7685  06B8  3037               	movlw	55
  7686  06B9  00BB               	movwf	59	;volatile
  7687                           
  7688                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  7689  06BA  30F0               	movlw	240
  7690  06BB  00C6               	movwf	70	;volatile
  7691                           
  7692                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  7693  06BC  30FF               	movlw	255
  7694  06BD  00D1               	movwf	81	;volatile
  7695                           
  7696                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  7697  06BE  3005               	movlw	5
  7698  06BF  017D               	movlb	61	; select bank61
  7699  06C0  00C5               	movwf	69	;volatile
  7700                           
  7701                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  7702  06C1  3014               	movlw	20
  7703  06C2  017E               	movlb	62	; select bank62
  7704  06C3  0094               	movwf	20	;volatile
  7705                           
  7706                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  7707  06C4  3013               	movlw	19
  7708  06C5  0095               	movwf	21	;volatile
  7709                           
  7710                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  7711  06C6  3004               	movlw	4
  7712  06C7  017D               	movlb	61	; select bank61
  7713  06C8  00C6               	movwf	70	;volatile
  7714                           
  7715                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  7716  06C9  300C               	movlw	12
  7717  06CA  00CB               	movwf	75	;volatile
  7718  06CB  0008               	return
  7719  06CC                     __end_of_PIN_MANAGER_Initialize:	
  7720                           
  7721                           	psect	text7
  7722  0EA7                     __ptext7:	
  7723 ;; *************** function _OSCILLATOR_Initialize *****************
  7724 ;; Defined at:
  7725 ;;		line 61 in file "mcc_generated_files/mcc.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;		None
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  1    wreg      void 
  7732 ;; Registers used:
  7733 ;;		wreg, status,2
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7743 ;;Total ram usage:        0 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; Hardware stack levels required when called:    4
  7746 ;; This function calls:
  7747 ;;		Nothing
  7748 ;; This function is called by:
  7749 ;;		_SYSTEM_Initialize
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           
  7754                           ;psect for function _OSCILLATOR_Initialize
  7755  0EA7                     _OSCILLATOR_Initialize:	
  7756                           
  7757                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  7758                           
  7759                           ;incstack = 0
  7760                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7761  0EA7  3060               	movlw	96
  7762  0EA8  0151               	movlb	17	; select bank17
  7763  0EA9  008D               	movwf	13	;volatile
  7764                           
  7765                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  7766  0EAA  018F               	clrf	15	;volatile
  7767                           
  7768                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  7769  0EAB  0191               	clrf	17	;volatile
  7770                           
  7771                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  7772  0EAC  3006               	movlw	6
  7773  0EAD  0093               	movwf	19	;volatile
  7774                           
  7775                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  7776  0EAE  0192               	clrf	18	;volatile
  7777  0EAF  0008               	return
  7778  0EB0                     __end_of_OSCILLATOR_Initialize:	
  7779                           
  7780                           	psect	text8
  7781  0F91                     __ptext8:	
  7782 ;; *************** function _I2C1_Initialize *****************
  7783 ;; Defined at:
  7784 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;		None
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7801 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7802 ;;Total ram usage:        1 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    4
  7805 ;; This function calls:
  7806 ;;		Nothing
  7807 ;; This function is called by:
  7808 ;;		_SYSTEM_Initialize
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           
  7813                           ;psect for function _I2C1_Initialize
  7814  0F91                     _I2C1_Initialize:	
  7815                           
  7816                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  7817                           
  7818                           ;incstack = 0
  7819                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  7820  0F91  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7821  0F92  0140               	movlb	0	; select bank0
  7822  0F93  00A0               	movwf	??_I2C1_Initialize
  7823  0F94  0820               	movf	??_I2C1_Initialize,w
  7824  0F95  00C9               	movwf	low ((_i2c1_object| 0+1))
  7825                           
  7826                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  7827  0F96  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7828  0F97  00A0               	movwf	??_I2C1_Initialize
  7829  0F98  0820               	movf	??_I2C1_Initialize,w
  7830  0F99  00C8               	movwf	_i2c1_object
  7831                           
  7832                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  7833  0F9A  14CA               	bsf	_i2c1_object+2,1
  7834                           
  7835                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  7836  0F9B  104A               	bcf	_i2c1_object+2,0
  7837                           
  7838                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  7839  0F9C  01CC               	clrf	_i2c1_object+4
  7840                           
  7841                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  7842  0F9D  0143               	movlb	3	; select bank3
  7843  0F9E  018F               	clrf	15	;volatile
  7844                           
  7845                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  7846  0F9F  3028               	movlw	40
  7847  0FA0  0090               	movwf	16	;volatile
  7848                           
  7849                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  7850  0FA1  0192               	clrf	18	;volatile
  7851                           
  7852                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  7853  0FA2  3050               	movlw	80
  7854  0FA3  008D               	movwf	13	;volatile
  7855                           
  7856                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  7857  0FA4  014E               	movlb	14	; select bank14
  7858  0FA5  100F               	bcf	15,0	;volatile
  7859                           
  7860                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  7861  0FA6  108F               	bcf	15,1	;volatile
  7862                           
  7863                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  7864  0FA7  1419               	bsf	25,0	;volatile
  7865                           
  7866                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  7867  0FA8  1499               	bsf	25,1	;volatile
  7868  0FA9  0008               	return
  7869  0FAA                     __end_of_I2C1_Initialize:	
  7870                           
  7871                           	psect	text9
  7872  053F                     __ptext9:	
  7873 ;; *************** function _EUSART1_Initialize *****************
  7874 ;; Defined at:
  7875 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;		None
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;		None
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  1    wreg      void 
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0, pclath, cstack
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7891 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7893 ;;Total ram usage:        1 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; Hardware stack levels required when called:    5
  7896 ;; This function calls:
  7897 ;;		_EUSART1_SetErrorHandler
  7898 ;;		_EUSART1_SetFramingErrorHandler
  7899 ;;		_EUSART1_SetOverrunErrorHandler
  7900 ;;		_EUSART1_SetRxInterruptHandler
  7901 ;;		_EUSART1_SetTxInterruptHandler
  7902 ;; This function is called by:
  7903 ;;		_SYSTEM_Initialize
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           
  7908                           ;psect for function _EUSART1_Initialize
  7909  053F                     _EUSART1_Initialize:	
  7910                           
  7911                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  7912                           
  7913                           ;incstack = 0
  7914                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7915  053F  014E               	movlb	14	; select bank14
  7916  0540  1299               	bcf	25,5	;volatile
  7917                           
  7918                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  7919  0541  306D               	movlw	low _EUSART1_Receive_ISR
  7920  0542  0140               	movlb	0	; select bank0
  7921  0543  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  7922  0544  3006               	movlw	high _EUSART1_Receive_ISR
  7923  0545  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  7924  0546  318E  2695  3185   	fcall	_EUSART1_SetRxInterruptHandler
  7925                           
  7926                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  7927  0549  014E               	movlb	14	; select bank14
  7928  054A  1219               	bcf	25,4	;volatile
  7929                           
  7930                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  7931  054B  30C6               	movlw	low _EUSART1_Transmit_ISR
  7932  054C  0140               	movlb	0	; select bank0
  7933  054D  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  7934  054E  300F               	movlw	high _EUSART1_Transmit_ISR
  7935  054F  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  7936  0550  318E  269E  3185   	fcall	_EUSART1_SetTxInterruptHandler
  7937                           
  7938                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  7939  0553  3008               	movlw	8
  7940  0554  0142               	movlb	2	; select bank2
  7941  0555  009F               	movwf	31	;volatile
  7942                           
  7943                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  7944  0556  3090               	movlw	144
  7945  0557  009D               	movwf	29	;volatile
  7946                           
  7947                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  7948  0558  3004               	movlw	4
  7949  0559  009E               	movwf	30	;volatile
  7950                           
  7951                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  7952  055A  301F               	movlw	31
  7953  055B  009B               	movwf	27	;volatile
  7954                           
  7955                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  7956  055C  019C               	clrf	28	;volatile
  7957                           
  7958                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  7959  055D  3011               	movlw	low _EUSART1_DefaultFramingErrorHandler
  7960  055E  0140               	movlb	0	; select bank0
  7961  055F  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  7962  0560  300E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  7963  0561  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  7964  0562  318E  2683  3185   	fcall	_EUSART1_SetFramingErrorHandler
  7965                           
  7966                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  7967  0565  3020               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  7968  0566  0140               	movlb	0	; select bank0
  7969  0567  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  7970  0568  300E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  7971  0569  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  7972  056A  318E  268C  3185   	fcall	_EUSART1_SetOverrunErrorHandler
  7973                           
  7974                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  7975  056D  3013               	movlw	low _EUSART1_DefaultErrorHandler
  7976  056E  0140               	movlb	0	; select bank0
  7977  056F  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  7978  0570  300E               	movlw	high _EUSART1_DefaultErrorHandler
  7979  0571  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  7980  0572  318E  267A         	fcall	_EUSART1_SetErrorHandler
  7981                           
  7982                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  7983  0574  0140               	movlb	0	; select bank0
  7984  0575  01E6               	clrf	_eusart1RxLastError	;volatile
  7985                           
  7986                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  7987  0576  01F3               	clrf	_eusart1TxHead	;volatile
  7988                           
  7989                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  7990  0577  01F2               	clrf	_eusart1TxTail	;volatile
  7991                           
  7992                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  7993  0578  3008               	movlw	8
  7994  0579  00A2               	movwf	??_EUSART1_Initialize
  7995  057A  0822               	movf	??_EUSART1_Initialize,w
  7996  057B  00EF               	movwf	_eusart1TxBufferRemaining	;volatile
  7997                           
  7998                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  7999  057C  01F1               	clrf	_eusart1RxHead	;volatile
  8000                           
  8001                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8002  057D  01F0               	clrf	_eusart1RxTail	;volatile
  8003                           
  8004                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8005  057E  01E7               	clrf	_eusart1RxCount	;volatile
  8006                           
  8007                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8008  057F  014E               	movlb	14	; select bank14
  8009  0580  1699               	bsf	25,5	;volatile
  8010  0581  0008               	return
  8011  0582                     __end_of_EUSART1_Initialize:	
  8012                           
  8013                           	psect	text10
  8014  0E9E                     __ptext10:	
  8015 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8016 ;; Defined at:
  8017 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8020 ;;		 -> EUSART1_Transmit_ISR(1), 
  8021 ;; Auto vars:     Size  Location     Type
  8022 ;;		None
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      void 
  8025 ;; Registers used:
  8026 ;;		wreg
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8032 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8035 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8036 ;;Total ram usage:        2 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:    4
  8039 ;; This function calls:
  8040 ;;		Nothing
  8041 ;; This function is called by:
  8042 ;;		_EUSART1_Initialize
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           
  8047                           ;psect for function _EUSART1_SetTxInterruptHandler
  8048  0E9E                     _EUSART1_SetTxInterruptHandler:	
  8049                           
  8050                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8051                           
  8052                           ;incstack = 0
  8053                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  8054  0E9E  0140               	movlb	0	; select bank0
  8055  0E9F  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  8056  0EA0  0141               	movlb	1	; select bank1
  8057  0EA1  00D9               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128)
  8058  0EA2  0140               	movlb	0	; select bank0
  8059  0EA3  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  8060  0EA4  0141               	movlb	1	; select bank1
  8061  0EA5  00D8               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+128)
  8062  0EA6  0008               	return
  8063  0EA7                     __end_of_EUSART1_SetTxInterruptHandler:	
  8064                           
  8065                           	psect	text11
  8066  0E95                     __ptext11:	
  8067 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  8068 ;; Defined at:
  8069 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8072 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;		None
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  1    wreg      void 
  8077 ;; Registers used:
  8078 ;;		wreg
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8087 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8088 ;;Total ram usage:        2 bytes
  8089 ;; Hardware stack levels used:    1
  8090 ;; Hardware stack levels required when called:    4
  8091 ;; This function calls:
  8092 ;;		Nothing
  8093 ;; This function is called by:
  8094 ;;		_EUSART1_Initialize
  8095 ;;		_main
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           
  8100                           ;psect for function _EUSART1_SetRxInterruptHandler
  8101  0E95                     _EUSART1_SetRxInterruptHandler:	
  8102                           
  8103                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8104                           
  8105                           ;incstack = 0
  8106                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  8107  0E95  0140               	movlb	0	; select bank0
  8108  0E96  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  8109  0E97  0141               	movlb	1	; select bank1
  8110  0E98  00D7               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
  8111  0E99  0140               	movlb	0	; select bank0
  8112  0E9A  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  8113  0E9B  0141               	movlb	1	; select bank1
  8114  0E9C  00D6               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
  8115  0E9D  0008               	return
  8116  0E9E                     __end_of_EUSART1_SetRxInterruptHandler:	
  8117                           
  8118                           	psect	text12
  8119  0E8C                     __ptext12:	
  8120 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8121 ;; Defined at:
  8122 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8125 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8126 ;; Auto vars:     Size  Location     Type
  8127 ;;		None
  8128 ;; Return value:  Size  Location     Type
  8129 ;;                  1    wreg      void 
  8130 ;; Registers used:
  8131 ;;		wreg
  8132 ;; Tracked objects:
  8133 ;;		On entry : 0/0
  8134 ;;		On exit  : 0/0
  8135 ;;		Unchanged: 0/0
  8136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8137 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8140 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8141 ;;Total ram usage:        2 bytes
  8142 ;; Hardware stack levels used:    1
  8143 ;; Hardware stack levels required when called:    4
  8144 ;; This function calls:
  8145 ;;		Nothing
  8146 ;; This function is called by:
  8147 ;;		_EUSART1_Initialize
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           
  8152                           ;psect for function _EUSART1_SetOverrunErrorHandler
  8153  0E8C                     _EUSART1_SetOverrunErrorHandler:	
  8154                           
  8155                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  8156                           
  8157                           ;incstack = 0
  8158                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  8159  0E8C  0140               	movlb	0	; select bank0
  8160  0E8D  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  8161  0E8E  0141               	movlb	1	; select bank1
  8162  0E8F  00D3               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  8163  0E90  0140               	movlb	0	; select bank0
  8164  0E91  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  8165  0E92  0141               	movlb	1	; select bank1
  8166  0E93  00D2               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  8167  0E94  0008               	return
  8168  0E95                     __end_of_EUSART1_SetOverrunErrorHandler:	
  8169                           
  8170                           	psect	text13
  8171  0E83                     __ptext13:	
  8172 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8173 ;; Defined at:
  8174 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8177 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8189 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8192 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8193 ;;Total ram usage:        2 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    4
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		_EUSART1_Initialize
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           
  8204                           ;psect for function _EUSART1_SetFramingErrorHandler
  8205  0E83                     _EUSART1_SetFramingErrorHandler:	
  8206                           
  8207                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  8208                           
  8209                           ;incstack = 0
  8210                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  8211  0E83  0140               	movlb	0	; select bank0
  8212  0E84  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  8213  0E85  0141               	movlb	1	; select bank1
  8214  0E86  00D5               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  8215  0E87  0140               	movlb	0	; select bank0
  8216  0E88  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  8217  0E89  0141               	movlb	1	; select bank1
  8218  0E8A  00D4               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  8219  0E8B  0008               	return
  8220  0E8C                     __end_of_EUSART1_SetFramingErrorHandler:	
  8221                           
  8222                           	psect	text14
  8223  0E7A                     __ptext14:	
  8224 ;; *************** function _EUSART1_SetErrorHandler *****************
  8225 ;; Defined at:
  8226 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8229 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;		None
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      void 
  8234 ;; Registers used:
  8235 ;;		wreg
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8245 ;;Total ram usage:        2 bytes
  8246 ;; Hardware stack levels used:    1
  8247 ;; Hardware stack levels required when called:    4
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_EUSART1_Initialize
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           
  8256                           ;psect for function _EUSART1_SetErrorHandler
  8257  0E7A                     _EUSART1_SetErrorHandler:	
  8258                           
  8259                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  8260                           
  8261                           ;incstack = 0
  8262                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  8263  0E7A  0140               	movlb	0	; select bank0
  8264  0E7B  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  8265  0E7C  0141               	movlb	1	; select bank1
  8266  0E7D  00D1               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
  8267  0E7E  0140               	movlb	0	; select bank0
  8268  0E7F  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  8269  0E80  0141               	movlb	1	; select bank1
  8270  0E81  00D0               	movwf	_EUSART1_ErrorHandler^(0+128)
  8271  0E82  0008               	return
  8272  0E83                     __end_of_EUSART1_SetErrorHandler:	
  8273                           
  8274                           	psect	text15
  8275  0748                     __ptext15:	
  8276 ;; *************** function _ADCC_Initialize *****************
  8277 ;; Defined at:
  8278 ;;		line 64 in file "mcc_generated_files/adcc.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;		None
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;		None
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1    wreg      void 
  8285 ;; Registers used:
  8286 ;;		wreg, status,2, status,0, pclath, cstack
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8296 ;;Total ram usage:        0 bytes
  8297 ;; Hardware stack levels used:    1
  8298 ;; Hardware stack levels required when called:    5
  8299 ;; This function calls:
  8300 ;;		_ADCC_SetADTIInterruptHandler
  8301 ;; This function is called by:
  8302 ;;		_SYSTEM_Initialize
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           
  8307                           ;psect for function _ADCC_Initialize
  8308  0748                     _ADCC_Initialize:	
  8309                           
  8310                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  8311                           
  8312                           ;incstack = 0
  8313                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8314  0748  0141               	movlb	1	; select bank1
  8315  0749  018C               	clrf	12	;volatile
  8316                           
  8317                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  8318  074A  018D               	clrf	13	;volatile
  8319                           
  8320                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  8321  074B  018E               	clrf	14	;volatile
  8322                           
  8323                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  8324  074C  018F               	clrf	15	;volatile
  8325                           
  8326                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  8327  074D  0192               	clrf	18	;volatile
  8328                           
  8329                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  8330  074E  0193               	clrf	19	;volatile
  8331                           
  8332                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  8333  074F  0198               	clrf	24	;volatile
  8334                           
  8335                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  8336  0750  019A               	clrf	26	;volatile
  8337                           
  8338                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  8339  0751  019F               	clrf	31	;volatile
  8340                           
  8341                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  8342  0752  0142               	movlb	2	; select bank2
  8343  0753  018C               	clrf	12	;volatile
  8344                           
  8345                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  8346  0754  018D               	clrf	13	;volatile
  8347                           
  8348                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  8349  0755  018E               	clrf	14	;volatile
  8350                           
  8351                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  8352  0756  018F               	clrf	15	;volatile
  8353                           
  8354                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  8355  0757  0190               	clrf	16	;volatile
  8356                           
  8357                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  8358  0758  0192               	clrf	18	;volatile
  8359                           
  8360                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  8361  0759  3054               	movlw	84
  8362  075A  0093               	movwf	19	;volatile
  8363                           
  8364                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  8365  075B  3056               	movlw	86
  8366  075C  0094               	movwf	20	;volatile
  8367                           
  8368                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  8369  075D  0195               	clrf	21	;volatile
  8370                           
  8371                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  8372  075E  0196               	clrf	22	;volatile
  8373                           
  8374                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  8375  075F  0197               	clrf	23	;volatile
  8376                           
  8377                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  8378  0760  0198               	clrf	24	;volatile
  8379                           
  8380                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  8381  0761  30D4               	movlw	212
  8382  0762  0091               	movwf	17	;volatile
  8383                           
  8384                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  8385  0763  014E               	movlb	14	; select bank14
  8386  0764  108D               	bcf	13,1	;volatile
  8387                           
  8388                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  8389  0765  1497               	bsf	23,1	;volatile
  8390                           
  8391                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  8392  0766  3010               	movlw	low _ADCC_DefaultInterruptHandler
  8393  0767  0140               	movlb	0	; select bank0
  8394  0768  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  8395  0769  300E               	movlw	high _ADCC_DefaultInterruptHandler
  8396  076A  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  8397  076B  318E  264D         	fcall	_ADCC_SetADTIInterruptHandler
  8398  076D  0008               	return
  8399  076E                     __end_of_ADCC_Initialize:	
  8400                           
  8401                           	psect	text16
  8402  04A6                     __ptext16:	
  8403 ;; *************** function _LED_task *****************
  8404 ;; Defined at:
  8405 ;;		line 60 in file "main.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;		None
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  time            2   33[BANK0 ] unsigned short 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8421 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8422 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8423 ;;Total ram usage:       13 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    5
  8426 ;; This function calls:
  8427 ;;		_BEAT_detected
  8428 ;;		_CLOCK_getTime
  8429 ;;		_LED_setColor
  8430 ;; This function is called by:
  8431 ;;		_main
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           
  8436                           ;psect for function _LED_task
  8437  04A6                     _LED_task:	
  8438                           
  8439                           ;main.c: 61:     time_t time = CLOCK_getTime();
  8440                           
  8441                           ;incstack = 0
  8442                           ; Regs used in _LED_task: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8443  04A6  318E  2637  3184   	fcall	_CLOCK_getTime
  8444  04A9  0140               	movlb	0	; select bank0
  8445  04AA  0821               	movf	?_CLOCK_getTime+1,w
  8446  04AB  00C2               	movwf	LED_task@time+1
  8447  04AC  0820               	movf	?_CLOCK_getTime,w
  8448  04AD  00C1               	movwf	LED_task@time
  8449                           
  8450                           ;main.c: 63:     if (time - lastTime < 100)
  8451  04AE  0855               	movf	_lastTime,w
  8452  04AF  0241               	subwf	LED_task@time,w
  8453  04B0  00B6               	movwf	??_LED_task
  8454  04B1  0856               	movf	_lastTime+1,w
  8455  04B2  3B42               	subwfb	LED_task@time+1,w
  8456  04B3  00B7               	movwf	??_LED_task+1
  8457  04B4  3000               	movlw	0
  8458  04B5  0237               	subwf	??_LED_task+1,w
  8459  04B6  3064               	movlw	100
  8460  04B7  1903               	skipnz
  8461  04B8  0236               	subwf	??_LED_task,w
  8462  04B9  1C03               	btfss	3,0
  8463  04BA  0008               	return
  8464                           
  8465                           ;main.c: 66:     lastTime = time;
  8466  04BB  0842               	movf	LED_task@time+1,w
  8467  04BC  00D6               	movwf	_lastTime+1
  8468  04BD  0841               	movf	LED_task@time,w
  8469  04BE  00D5               	movwf	_lastTime
  8470                           
  8471                           ;main.c: 68:     LED_setColor(dmxData[address+1], dmxData[address+2], dmxData[address+3]
      +                          , dmxData[address+4]);
  8472  04BF  30F1               	movlw	241
  8473  04C0  00B6               	movwf	??_LED_task
  8474  04C1  3025               	movlw	37
  8475  04C2  00B7               	movwf	??_LED_task+1
  8476  04C3  086D               	movf	_address,w
  8477  04C4  0736               	addwf	??_LED_task,w
  8478  04C5  0086               	movwf	6
  8479  04C6  086E               	movf	_address+1,w
  8480  04C7  3D37               	addwfc	??_LED_task+1,w
  8481  04C8  0087               	movwf	7
  8482  04C9  0801               	movf	1,w
  8483  04CA  00B8               	movwf	??_LED_task+2
  8484  04CB  0838               	movf	??_LED_task+2,w
  8485  04CC  00A0               	movwf	LED_setColor@green
  8486  04CD  30F2               	movlw	242
  8487  04CE  00B9               	movwf	??_LED_task+3
  8488  04CF  3025               	movlw	37
  8489  04D0  00BA               	movwf	??_LED_task+4
  8490  04D1  086D               	movf	_address,w
  8491  04D2  0739               	addwf	??_LED_task+3,w
  8492  04D3  0086               	movwf	6
  8493  04D4  086E               	movf	_address+1,w
  8494  04D5  3D3A               	addwfc	??_LED_task+4,w
  8495  04D6  0087               	movwf	7
  8496  04D7  0801               	movf	1,w
  8497  04D8  00BB               	movwf	??_LED_task+5
  8498  04D9  083B               	movf	??_LED_task+5,w
  8499  04DA  00A1               	movwf	LED_setColor@white
  8500  04DB  30F3               	movlw	243
  8501  04DC  00BC               	movwf	??_LED_task+6
  8502  04DD  3025               	movlw	37
  8503  04DE  00BD               	movwf	??_LED_task+7
  8504  04DF  086D               	movf	_address,w
  8505  04E0  073C               	addwf	??_LED_task+6,w
  8506  04E1  0086               	movwf	6
  8507  04E2  086E               	movf	_address+1,w
  8508  04E3  3D3D               	addwfc	??_LED_task+7,w
  8509  04E4  0087               	movwf	7
  8510  04E5  0801               	movf	1,w
  8511  04E6  00BE               	movwf	??_LED_task+8
  8512  04E7  083E               	movf	??_LED_task+8,w
  8513  04E8  00A2               	movwf	LED_setColor@blue
  8514  04E9  30F0               	movlw	240
  8515  04EA  00BF               	movwf	??_LED_task+9
  8516  04EB  3025               	movlw	37
  8517  04EC  00C0               	movwf	??_LED_task+10
  8518  04ED  086D               	movf	_address,w
  8519  04EE  073F               	addwf	??_LED_task+9,w
  8520  04EF  0086               	movwf	6
  8521  04F0  086E               	movf	_address+1,w
  8522  04F1  3D40               	addwfc	??_LED_task+10,w
  8523  04F2  0087               	movwf	7
  8524  04F3  0801               	movf	1,w
  8525  04F4  3185  25C1  3184   	fcall	_LED_setColor
  8526                           
  8527                           ;main.c: 69:     if(BEAT_detected()) {
  8528  04F7  318E  2671         	fcall	_BEAT_detected
  8529  04F9  0008               	return
  8530  04FA                     __end_of_LED_task:	
  8531                           
  8532                           	psect	text17
  8533  05C1                     __ptext17:	
  8534 ;; *************** function _LED_setColor *****************
  8535 ;; Defined at:
  8536 ;;		line 104 in file "main.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  red             1    wreg     unsigned char 
  8539 ;;  green           1    0[BANK0 ] unsigned char 
  8540 ;;  white           1    1[BANK0 ] unsigned char 
  8541 ;;  blue            1    2[BANK0 ] unsigned char 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  red             1   21[BANK0 ] unsigned char 
  8544 ;;  lo4             2   19[BANK0 ] int 
  8545 ;;  hi4             2    0        int 
  8546 ;;  lo3             2   15[BANK0 ] int 
  8547 ;;  hi3             2    0        int 
  8548 ;;  lo2             2   11[BANK0 ] int 
  8549 ;;  hi2             2    0        int 
  8550 ;;  lo1             2    7[BANK0 ] int 
  8551 ;;  hi1             2    0        int 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      void 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8561 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8562 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8563 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8564 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8565 ;;Total ram usage:       22 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    4
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_LED_task
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           
  8576                           ;psect for function _LED_setColor
  8577  05C1                     _LED_setColor:	
  8578                           
  8579                           ;incstack = 0
  8580                           ; Regs used in _LED_setColor: [wreg+status,2]
  8581                           ;LED_setColor@red stored from wreg
  8582  05C1  0140               	movlb	0	; select bank0
  8583  05C2  00B5               	movwf	LED_setColor@red
  8584                           
  8585                           ;main.c: 105:     red/=2;
  8586  05C3  1003               	clrc
  8587  05C4  0CB5               	rrf	LED_setColor@red,f
  8588                           
  8589                           ;main.c: 106:     green/=2;
  8590  05C5  1003               	clrc
  8591  05C6  0CA0               	rrf	LED_setColor@green,f
  8592                           
  8593                           ;main.c: 107:     blue/=2;
  8594  05C7  1003               	clrc
  8595  05C8  0CA2               	rrf	LED_setColor@blue,f
  8596                           
  8597                           ;main.c: 108:     white/=2;
  8598  05C9  1003               	clrc
  8599  05CA  0CA1               	rrf	LED_setColor@white,f
  8600                           
  8601                           ;main.c: 110:     int lo1 = red & 0x00FF;
  8602  05CB  0835               	movf	LED_setColor@red,w
  8603  05CC  00A3               	movwf	??_LED_setColor
  8604  05CD  01A4               	clrf	??_LED_setColor+1
  8605  05CE  0823               	movf	??_LED_setColor,w
  8606  05CF  00A7               	movwf	LED_setColor@lo1
  8607  05D0  0824               	movf	??_LED_setColor+1,w
  8608  05D1  00A8               	movwf	LED_setColor@lo1+1
  8609                           
  8610                           ;main.c: 112:     int lo2 = green & 0x00FF;
  8611  05D2  0820               	movf	LED_setColor@green,w
  8612  05D3  00A3               	movwf	??_LED_setColor
  8613  05D4  01A4               	clrf	??_LED_setColor+1
  8614  05D5  0823               	movf	??_LED_setColor,w
  8615  05D6  00AB               	movwf	LED_setColor@lo2
  8616  05D7  0824               	movf	??_LED_setColor+1,w
  8617  05D8  00AC               	movwf	LED_setColor@lo2+1
  8618                           
  8619                           ;main.c: 114:     int lo3 = blue & 0x00FF;
  8620  05D9  0822               	movf	LED_setColor@blue,w
  8621  05DA  00A3               	movwf	??_LED_setColor
  8622  05DB  01A4               	clrf	??_LED_setColor+1
  8623  05DC  0823               	movf	??_LED_setColor,w
  8624  05DD  00AF               	movwf	LED_setColor@lo3
  8625  05DE  0824               	movf	??_LED_setColor+1,w
  8626  05DF  00B0               	movwf	LED_setColor@lo3+1
  8627                           
  8628                           ;main.c: 116:     int lo4 = white & 0x00FF;
  8629  05E0  0821               	movf	LED_setColor@white,w
  8630  05E1  00A3               	movwf	??_LED_setColor
  8631  05E2  01A4               	clrf	??_LED_setColor+1
  8632  05E3  0823               	movf	??_LED_setColor,w
  8633  05E4  00B3               	movwf	LED_setColor@lo4
  8634  05E5  0824               	movf	??_LED_setColor+1,w
  8635  05E6  00B4               	movwf	LED_setColor@lo4+1
  8636                           
  8637                           ;main.c: 118:     CCPR1H = hi1;
  8638  05E7  0146               	movlb	6	; select bank6
  8639  05E8  018D               	clrf	13	;volatile
  8640                           
  8641                           ;main.c: 119:     CCPR1L = lo1;
  8642  05E9  0140               	movlb	0	; select bank0
  8643  05EA  0827               	movf	LED_setColor@lo1,w
  8644  05EB  0146               	movlb	6	; select bank6
  8645  05EC  008C               	movwf	12	;volatile
  8646                           
  8647                           ;main.c: 121:     CCPR2H = hi2;
  8648  05ED  0191               	clrf	17	;volatile
  8649                           
  8650                           ;main.c: 122:     CCPR2L = lo2;
  8651  05EE  0140               	movlb	0	; select bank0
  8652  05EF  082B               	movf	LED_setColor@lo2,w
  8653  05F0  0146               	movlb	6	; select bank6
  8654  05F1  0090               	movwf	16	;volatile
  8655                           
  8656                           ;main.c: 124:     CCPR3H = hi3;
  8657  05F2  0195               	clrf	21	;volatile
  8658                           
  8659                           ;main.c: 125:     CCPR3L = lo3;
  8660  05F3  0140               	movlb	0	; select bank0
  8661  05F4  082F               	movf	LED_setColor@lo3,w
  8662  05F5  0146               	movlb	6	; select bank6
  8663  05F6  0094               	movwf	20	;volatile
  8664                           
  8665                           ;main.c: 127:     CCPR4H = hi4;
  8666  05F7  0199               	clrf	25	;volatile
  8667                           
  8668                           ;main.c: 128:     CCPR4L = lo4;
  8669  05F8  0140               	movlb	0	; select bank0
  8670  05F9  0833               	movf	LED_setColor@lo4,w
  8671  05FA  0146               	movlb	6	; select bank6
  8672  05FB  0098               	movwf	24	;volatile
  8673  05FC  0008               	return
  8674  05FD                     __end_of_LED_setColor:	
  8675                           
  8676                           	psect	text18
  8677  0E71                     __ptext18:	
  8678 ;; *************** function _BEAT_detected *****************
  8679 ;; Defined at:
  8680 ;;		line 41 in file "beat.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;		None
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      _Bool 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8698 ;;Total ram usage:        0 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:    4
  8701 ;; This function calls:
  8702 ;;		Nothing
  8703 ;; This function is called by:
  8704 ;;		_LED_task
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           
  8709                           ;psect for function _BEAT_detected
  8710  0E71                     _BEAT_detected:	
  8711                           
  8712                           ;beat.c: 42:     if (detected) {
  8713                           
  8714                           ;incstack = 0
  8715                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
  8716  0E71  0140               	movlb	0	; select bank0
  8717  0E72  0859               	movf	_detected,w
  8718  0E73  1903               	btfsc	3,2
  8719  0E74  2E78               	goto	l3797
  8720                           
  8721                           ;beat.c: 43:         detected = 0;
  8722  0E75  01D9               	clrf	_detected
  8723                           
  8724                           ;beat.c: 44:         return 1;
  8725  0E76  3001               	movlw	1
  8726  0E77  0008               	return
  8727  0E78                     l3797:	
  8728                           
  8729                           ;beat.c: 46:     return 0;
  8730  0E78  3000               	movlw	0
  8731  0E79  0008               	return
  8732  0E7A                     __end_of_BEAT_detected:	
  8733                           
  8734                           	psect	text19
  8735  03D8                     __ptext19:	
  8736 ;; *************** function _CONTROLLER_task *****************
  8737 ;; Defined at:
  8738 ;;		line 48 in file "controller.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;		None
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;  time            2   36[BANK0 ] unsigned short 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8753 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8754 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8755 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8756 ;;Total ram usage:        4 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:   11
  8759 ;; This function calls:
  8760 ;;		_BUTTONS_isClicked
  8761 ;;		_CLOCK_getTime
  8762 ;;		_TM1650_enable
  8763 ;;		_address_dec
  8764 ;;		_address_inc
  8765 ;; This function is called by:
  8766 ;;		_main
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           
  8771                           ;psect for function _CONTROLLER_task
  8772  03D8                     _CONTROLLER_task:	
  8773                           
  8774                           ;controller.c: 49:     time_t time = CLOCK_getTime();
  8775                           
  8776                           ;incstack = 0
  8777                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8778  03D8  318E  2637  3183   	fcall	_CLOCK_getTime
  8779  03DB  0140               	movlb	0	; select bank0
  8780  03DC  0821               	movf	?_CLOCK_getTime+1,w
  8781  03DD  00C5               	movwf	CONTROLLER_task@time+1
  8782  03DE  0820               	movf	?_CLOCK_getTime,w
  8783  03DF  00C4               	movwf	CONTROLLER_task@time
  8784                           
  8785                           ;controller.c: 51:     if (time - lastTime < 35)
  8786  03E0  084F               	movf	controller@lastTime,w
  8787  03E1  0244               	subwf	CONTROLLER_task@time,w
  8788  03E2  00C2               	movwf	??_CONTROLLER_task
  8789  03E3  0850               	movf	controller@lastTime+1,w
  8790  03E4  3B45               	subwfb	CONTROLLER_task@time+1,w
  8791  03E5  00C3               	movwf	??_CONTROLLER_task+1
  8792  03E6  3000               	movlw	0
  8793  03E7  0243               	subwf	??_CONTROLLER_task+1,w
  8794  03E8  3023               	movlw	35
  8795  03E9  1903               	skipnz
  8796  03EA  0242               	subwf	??_CONTROLLER_task,w
  8797  03EB  1C03               	btfss	3,0
  8798  03EC  0008               	return
  8799                           
  8800                           ;controller.c: 53:     lastTime = time;
  8801  03ED  0845               	movf	CONTROLLER_task@time+1,w
  8802  03EE  00D0               	movwf	controller@lastTime+1
  8803  03EF  0844               	movf	CONTROLLER_task@time,w
  8804  03F0  00CF               	movwf	controller@lastTime
  8805                           
  8806                           ;controller.c: 55:     if (BUTTONS_isClicked(up)) {
  8807  03F1  085D               	movf	_up,w
  8808  03F2  3187  2793  3183   	fcall	_BUTTONS_isClicked
  8809  03F5  0140               	movlb	0	; select bank0
  8810  03F6  0820               	movf	?_BUTTONS_isClicked,w
  8811  03F7  0421               	iorwf	?_BUTTONS_isClicked+1,w
  8812  03F8  1903               	btfsc	3,2
  8813  03F9  2C09               	goto	l4043
  8814                           
  8815                           ;controller.c: 56:         address_inc();
  8816  03FA  318F  274C  3183   	fcall	_address_inc
  8817                           
  8818                           ;controller.c: 57:         lastActiveTime = time;
  8819  03FD  0140               	movlb	0	; select bank0
  8820  03FE  0845               	movf	CONTROLLER_task@time+1,w
  8821  03FF  0141               	movlb	1	; select bank1
  8822  0400  00C1               	movwf	(_lastActiveTime+1)^(0+128)
  8823  0401  0140               	movlb	0	; select bank0
  8824  0402  0844               	movf	CONTROLLER_task@time,w
  8825  0403  0141               	movlb	1	; select bank1
  8826  0404  00C0               	movwf	_lastActiveTime^(0+128)
  8827                           
  8828                           ;controller.c: 58:         TM1650_enable(1);
  8829  0405  3001               	movlw	1
  8830  0406  318F  270D         	fcall	_TM1650_enable
  8831                           
  8832                           ;controller.c: 59:     } else if (BUTTONS_isClicked(down)) {
  8833  0408  0008               	return
  8834  0409                     l4043:	
  8835  0409  085C               	movf	_down,w
  8836  040A  3187  2793  3183   	fcall	_BUTTONS_isClicked
  8837  040D  0140               	movlb	0	; select bank0
  8838  040E  0820               	movf	?_BUTTONS_isClicked,w
  8839  040F  0421               	iorwf	?_BUTTONS_isClicked+1,w
  8840  0410  1903               	btfsc	3,2
  8841  0411  2C21               	goto	l4051
  8842                           
  8843                           ;controller.c: 60:         address_dec();
  8844  0412  318F  2722  3183   	fcall	_address_dec
  8845                           
  8846                           ;controller.c: 61:         lastActiveTime = time;
  8847  0415  0140               	movlb	0	; select bank0
  8848  0416  0845               	movf	CONTROLLER_task@time+1,w
  8849  0417  0141               	movlb	1	; select bank1
  8850  0418  00C1               	movwf	(_lastActiveTime+1)^(0+128)
  8851  0419  0140               	movlb	0	; select bank0
  8852  041A  0844               	movf	CONTROLLER_task@time,w
  8853  041B  0141               	movlb	1	; select bank1
  8854  041C  00C0               	movwf	_lastActiveTime^(0+128)
  8855                           
  8856                           ;controller.c: 62:         TM1650_enable(1);
  8857  041D  3001               	movlw	1
  8858  041E  318F  270D         	fcall	_TM1650_enable
  8859                           
  8860                           ;controller.c: 63:     } else {
  8861  0420  0008               	return
  8862  0421                     l4051:	
  8863                           
  8864                           ;controller.c: 64:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
  8865  0421  318E  2637  3183   	fcall	_CLOCK_getTime
  8866  0424  0141               	movlb	1	; select bank1
  8867  0425  0840               	movf	_lastActiveTime^(0+128),w
  8868  0426  0140               	movlb	0	; select bank0
  8869  0427  0220               	subwf	?_CLOCK_getTime,w
  8870  0428  00C2               	movwf	??_CONTROLLER_task
  8871  0429  0141               	movlb	1	; select bank1
  8872  042A  0841               	movf	(_lastActiveTime+1)^(0+128),w
  8873  042B  0140               	movlb	0	; select bank0
  8874  042C  3B21               	subwfb	?_CLOCK_getTime+1,w
  8875  042D  00C3               	movwf	??_CONTROLLER_task+1
  8876  042E  3013               	movlw	19
  8877  042F  0243               	subwf	??_CONTROLLER_task+1,w
  8878  0430  3088               	movlw	136
  8879  0431  1903               	skipnz
  8880  0432  0242               	subwf	??_CONTROLLER_task,w
  8881  0433  1C03               	skipc
  8882  0434  0008               	return
  8883                           
  8884                           ;controller.c: 65:             TM1650_enable(0);
  8885  0435  3000               	movlw	0
  8886  0436  318F  270D  3183   	fcall	_TM1650_enable
  8887                           
  8888                           ;controller.c: 66:             lastActiveTime = CLOCK_getTime() - 5001;
  8889  0439  318E  2637         	fcall	_CLOCK_getTime
  8890  043B  0140               	movlb	0	; select bank0
  8891  043C  0820               	movf	?_CLOCK_getTime,w
  8892  043D  3E77               	addlw	119
  8893  043E  0141               	movlb	1	; select bank1
  8894  043F  00C0               	movwf	_lastActiveTime^(0+128)
  8895  0440  30EC               	movlw	236
  8896  0441  0140               	movlb	0	; select bank0
  8897  0442  3D21               	addwfc	?_CLOCK_getTime+1,w
  8898  0443  0141               	movlb	1	; select bank1
  8899  0444  00C1               	movwf	(_lastActiveTime+1)^(0+128)
  8900  0445  0008               	return
  8901  0446                     __end_of_CONTROLLER_task:	
  8902                           
  8903                           	psect	text20
  8904  0F4C                     __ptext20:	
  8905 ;; *************** function _address_inc *****************
  8906 ;; Defined at:
  8907 ;;		line 19 in file "controller.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;		None
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8925 ;;Total ram usage:        0 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:   10
  8928 ;; This function calls:
  8929 ;;		_TM1650_fastPrintNum
  8930 ;; This function is called by:
  8931 ;;		_CONTROLLER_task
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           
  8936                           ;psect for function _address_inc
  8937  0F4C                     _address_inc:	
  8938                           
  8939                           ;controller.c: 21:     if(address == 512) {
  8940                           
  8941                           ;incstack = 0
  8942                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8943  0F4C  3002               	movlw	2
  8944  0F4D  0140               	movlb	0	; select bank0
  8945  0F4E  066E               	xorwf	_address+1,w
  8946  0F4F  046D               	iorwf	_address,w
  8947  0F50  1D03               	btfss	3,2
  8948  0F51  2F57               	goto	l3847
  8949                           
  8950                           ;controller.c: 22:         address = 1;
  8951  0F52  3001               	movlw	1
  8952  0F53  00ED               	movwf	_address
  8953  0F54  3000               	movlw	0
  8954  0F55  00EE               	movwf	_address+1
  8955                           
  8956                           ;controller.c: 23:     } else {
  8957  0F56  2F5B               	goto	l3849
  8958  0F57                     l3847:	
  8959                           
  8960                           ;controller.c: 24:         address++;
  8961  0F57  3001               	movlw	1
  8962  0F58  07ED               	addwf	_address,f
  8963  0F59  3000               	movlw	0
  8964  0F5A  3DEE               	addwfc	_address+1,f
  8965  0F5B                     l3849:	
  8966                           
  8967                           ;controller.c: 28:     TM1650_fastPrintNum(address);
  8968  0F5B  086E               	movf	_address+1,w
  8969  0F5C  00BC               	movwf	TM1650_fastPrintNum@num+1
  8970  0F5D  086D               	movf	_address,w
  8971  0F5E  00BB               	movwf	TM1650_fastPrintNum@num
  8972  0F5F  3183  235E         	fcall	_TM1650_fastPrintNum
  8973  0F61  0008               	return
  8974  0F62                     __end_of_address_inc:	
  8975                           
  8976                           	psect	text21
  8977  0F22                     __ptext21:	
  8978 ;; *************** function _address_dec *****************
  8979 ;; Defined at:
  8980 ;;		line 34 in file "controller.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;		None
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8998 ;;Total ram usage:        0 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:   10
  9001 ;; This function calls:
  9002 ;;		_TM1650_fastPrintNum
  9003 ;; This function is called by:
  9004 ;;		_CONTROLLER_task
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           
  9009                           ;psect for function _address_dec
  9010  0F22                     _address_dec:	
  9011                           
  9012                           ;controller.c: 36:     if(address == 1) {
  9013                           
  9014                           ;incstack = 0
  9015                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9016  0F22  0140               	movlb	0	; select bank0
  9017  0F23  036D               	decf	_address,w
  9018  0F24  046E               	iorwf	_address+1,w
  9019  0F25  1D03               	btfss	3,2
  9020  0F26  2F2C               	goto	l3855
  9021                           
  9022                           ;controller.c: 37:         address = 512;
  9023  0F27  3000               	movlw	0
  9024  0F28  00ED               	movwf	_address
  9025  0F29  3002               	movlw	2
  9026  0F2A  00EE               	movwf	_address+1
  9027                           
  9028                           ;controller.c: 38:     } else {
  9029  0F2B  2F30               	goto	l3857
  9030  0F2C                     l3855:	
  9031                           
  9032                           ;controller.c: 39:         address--;
  9033  0F2C  3001               	movlw	1
  9034  0F2D  02ED               	subwf	_address,f
  9035  0F2E  3000               	movlw	0
  9036  0F2F  3BEE               	subwfb	_address+1,f
  9037  0F30                     l3857:	
  9038                           
  9039                           ;controller.c: 43:     TM1650_fastPrintNum(address);
  9040  0F30  086E               	movf	_address+1,w
  9041  0F31  00BC               	movwf	TM1650_fastPrintNum@num+1
  9042  0F32  086D               	movf	_address,w
  9043  0F33  00BB               	movwf	TM1650_fastPrintNum@num
  9044  0F34  3183  235E         	fcall	_TM1650_fastPrintNum
  9045  0F36  0008               	return
  9046  0F37                     __end_of_address_dec:	
  9047                           
  9048                           	psect	text22
  9049  0F0D                     __ptext22:	
  9050 ;; *************** function _TM1650_enable *****************
  9051 ;; Defined at:
  9052 ;;		line 56 in file "tm1650.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  enable          1    wreg     _Bool 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  enable          1   20[BANK0 ] _Bool 
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9069 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9070 ;;Total ram usage:        1 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:    8
  9073 ;; This function calls:
  9074 ;;		_writeData
  9075 ;; This function is called by:
  9076 ;;		_TM1650_init
  9077 ;;		_CONTROLLER_task
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           
  9082                           ;psect for function _TM1650_enable
  9083  0F0D                     _TM1650_enable:	
  9084                           
  9085                           ;incstack = 0
  9086                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9087                           ;TM1650_enable@enable stored from wreg
  9088  0F0D  0140               	movlb	0	; select bank0
  9089  0F0E  00B4               	movwf	TM1650_enable@enable
  9090                           
  9091                           ;tm1650.c: 57:     if(enable) {
  9092  0F0F  0834               	movf	TM1650_enable@enable,w
  9093  0F10  1903               	btfsc	3,2
  9094  0F11  2F1B               	goto	l3807
  9095                           
  9096                           ;tm1650.c: 58:         writeData(0x24, 1);
  9097  0F12  01AE               	clrf	writeData@data
  9098  0F13  0AAE               	incf	writeData@data,f
  9099  0F14  3024               	movlw	36
  9100  0F15  318F  27E3         	fcall	_writeData
  9101                           
  9102                           ;tm1650.c: 59:         isOn = 1;
  9103  0F17  0140               	movlb	0	; select bank0
  9104  0F18  01DE               	clrf	_isOn
  9105  0F19  0ADE               	incf	_isOn,f
  9106                           
  9107                           ;tm1650.c: 60:     } else {
  9108  0F1A  0008               	return
  9109  0F1B                     l3807:	
  9110                           
  9111                           ;tm1650.c: 61:         writeData(0x24, 0);
  9112  0F1B  01AE               	clrf	writeData@data
  9113  0F1C  3024               	movlw	36
  9114  0F1D  318F  27E3         	fcall	_writeData
  9115                           
  9116                           ;tm1650.c: 62:         isOn = 0;
  9117  0F1F  0140               	movlb	0	; select bank0
  9118  0F20  01DE               	clrf	_isOn
  9119  0F21  0008               	return
  9120  0F22                     __end_of_TM1650_enable:	
  9121                           
  9122                           	psect	text23
  9123  0793                     __ptext23:	
  9124 ;; *************** function _BUTTONS_isClicked *****************
  9125 ;; Defined at:
  9126 ;;		line 71 in file "buttons.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  button          1    wreg     PTR struct .
  9129 ;;		 -> buttons(32), NULL(0), 
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;  button          1    3[BANK0 ] PTR struct .
  9132 ;;		 -> buttons(32), NULL(0), 
  9133 ;; Return value:  Size  Location     Type
  9134 ;;                  2    0[BANK0 ] int 
  9135 ;; Registers used:
  9136 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9137 ;; Tracked objects:
  9138 ;;		On entry : 0/0
  9139 ;;		On exit  : 0/0
  9140 ;;		Unchanged: 0/0
  9141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9142 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9145 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9146 ;;Total ram usage:        4 bytes
  9147 ;; Hardware stack levels used:    1
  9148 ;; Hardware stack levels required when called:    4
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_CONTROLLER_task
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           
  9157                           ;psect for function _BUTTONS_isClicked
  9158  0793                     _BUTTONS_isClicked:	
  9159                           
  9160                           ;incstack = 0
  9161                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
  9162                           ;BUTTONS_isClicked@button stored from wreg
  9163  0793  0140               	movlb	0	; select bank0
  9164  0794  00A3               	movwf	BUTTONS_isClicked@button
  9165                           
  9166                           ;buttons.c: 72:     if (button->event == EVENT_PRESSED) {
  9167  0795  0823               	movf	BUTTONS_isClicked@button,w
  9168  0796  3E05               	addlw	5
  9169  0797  0086               	movwf	6
  9170  0798  3001               	movlw	1	; select bank2/3
  9171  0799  0087               	movwf	7
  9172  079A  0301               	decf	1,w
  9173  079B  1D03               	btfss	3,2
  9174  079C  2FA8               	goto	l3833
  9175                           
  9176                           ;buttons.c: 73:         button->event = EVENT_IDLE;
  9177  079D  0823               	movf	BUTTONS_isClicked@button,w
  9178  079E  3E05               	addlw	5
  9179  079F  0086               	movwf	6
  9180  07A0  3001               	movlw	1	; select bank2/3
  9181  07A1  0087               	movwf	7
  9182  07A2  0181               	clrf	1
  9183  07A3                     l3827:	
  9184                           
  9185                           ;buttons.c: 74:         return 1;
  9186  07A3  3001               	movlw	1
  9187  07A4  00A0               	movwf	?_BUTTONS_isClicked
  9188  07A5  3000               	movlw	0
  9189  07A6  00A1               	movwf	?_BUTTONS_isClicked+1
  9190  07A7  0008               	return
  9191  07A8                     l3833:	
  9192  07A8  0823               	movf	BUTTONS_isClicked@button,w
  9193  07A9  3E05               	addlw	5
  9194  07AA  0086               	movwf	6
  9195  07AB  3001               	movlw	1	; select bank2/3
  9196  07AC  0087               	movwf	7
  9197  07AD  3002               	movlw	2
  9198  07AE  0601               	xorwf	1,w
  9199  07AF  1903               	btfsc	3,2
  9200  07B0  2FA3               	goto	l3827
  9201                           
  9202                           ;buttons.c: 78:     return 0;
  9203  07B1  01A0               	clrf	?_BUTTONS_isClicked
  9204  07B2  01A1               	clrf	?_BUTTONS_isClicked+1
  9205  07B3  0008               	return
  9206  07B4                     __end_of_BUTTONS_isClicked:	
  9207                           
  9208                           	psect	text24
  9209  0E45                     __ptext24:	
  9210 ;; *************** function _CONTROLLER_init *****************
  9211 ;; Defined at:
  9212 ;;		line 12 in file "controller.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;		None
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;		None
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      void 
  9219 ;; Registers used:
  9220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9230 ;;Total ram usage:        0 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:   10
  9233 ;; This function calls:
  9234 ;;		_TM1650_fastPrintNum
  9235 ;; This function is called by:
  9236 ;;		_main
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           
  9241                           ;psect for function _CONTROLLER_init
  9242  0E45                     _CONTROLLER_init:	
  9243                           
  9244                           ;controller.c: 13:     TM1650_fastPrintNum(address);
  9245                           
  9246                           ;incstack = 0
  9247                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9248  0E45  0140               	movlb	0	; select bank0
  9249  0E46  086E               	movf	_address+1,w
  9250  0E47  00BC               	movwf	TM1650_fastPrintNum@num+1
  9251  0E48  086D               	movf	_address,w
  9252  0E49  00BB               	movwf	TM1650_fastPrintNum@num
  9253  0E4A  3183  235E         	fcall	_TM1650_fastPrintNum
  9254  0E4C  0008               	return
  9255  0E4D                     __end_of_CONTROLLER_init:	
  9256                           
  9257                           	psect	text25
  9258  035E                     __ptext25:	
  9259 ;; *************** function _TM1650_fastPrintNum *****************
  9260 ;; Defined at:
  9261 ;;		line 36 in file "tm1650.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;  num             2   27[BANK0 ] unsigned short 
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;  numWrite        2   30[BANK0 ] int 
  9266 ;;  i               2   32[BANK0 ] int 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  1    wreg      void 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9276 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9277 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9278 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9279 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9280 ;;Total ram usage:        7 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:    9
  9283 ;; This function calls:
  9284 ;;		_TM1650_setDigit
  9285 ;;		___lwdiv
  9286 ;;		___lwmod
  9287 ;; This function is called by:
  9288 ;;		_CONTROLLER_init
  9289 ;;		_address_inc
  9290 ;;		_address_dec
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           
  9295                           ;psect for function _TM1650_fastPrintNum
  9296  035E                     _TM1650_fastPrintNum:	
  9297                           
  9298                           ;tm1650.c: 37:     if(num > 9999) {
  9299                           
  9300                           ;incstack = 0
  9301                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9302  035E  3027               	movlw	39
  9303  035F  0140               	movlb	0	; select bank0
  9304  0360  023C               	subwf	TM1650_fastPrintNum@num+1,w
  9305  0361  3010               	movlw	16
  9306  0362  1903               	skipnz
  9307  0363  023B               	subwf	TM1650_fastPrintNum@num,w
  9308  0364  1C03               	skipc
  9309  0365  2B95               	goto	l3605
  9310                           
  9311                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
  9312  0366  3045               	movlw	69
  9313  0367  00BD               	movwf	??_TM1650_fastPrintNum
  9314  0368  083D               	movf	??_TM1650_fastPrintNum,w
  9315  0369  00B4               	movwf	TM1650_setDigit@data
  9316  036A  3000               	movlw	0
  9317  036B  00B5               	movwf	TM1650_setDigit@dp
  9318  036C  00B6               	movwf	TM1650_setDigit@dp+1
  9319  036D  3000               	movlw	0
  9320  036E  318F  27AA  3183   	fcall	_TM1650_setDigit
  9321                           
  9322                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
  9323  0371  3045               	movlw	69
  9324  0372  0140               	movlb	0	; select bank0
  9325  0373  00BD               	movwf	??_TM1650_fastPrintNum
  9326  0374  083D               	movf	??_TM1650_fastPrintNum,w
  9327  0375  00B4               	movwf	TM1650_setDigit@data
  9328  0376  3000               	movlw	0
  9329  0377  00B5               	movwf	TM1650_setDigit@dp
  9330  0378  00B6               	movwf	TM1650_setDigit@dp+1
  9331  0379  3001               	movlw	1
  9332  037A  318F  27AA  3183   	fcall	_TM1650_setDigit
  9333                           
  9334                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
  9335  037D  3045               	movlw	69
  9336  037E  0140               	movlb	0	; select bank0
  9337  037F  00BD               	movwf	??_TM1650_fastPrintNum
  9338  0380  083D               	movf	??_TM1650_fastPrintNum,w
  9339  0381  00B4               	movwf	TM1650_setDigit@data
  9340  0382  3000               	movlw	0
  9341  0383  00B5               	movwf	TM1650_setDigit@dp
  9342  0384  00B6               	movwf	TM1650_setDigit@dp+1
  9343  0385  3002               	movlw	2
  9344  0386  318F  27AA  3183   	fcall	_TM1650_setDigit
  9345                           
  9346                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
  9347  0389  3045               	movlw	69
  9348  038A  0140               	movlb	0	; select bank0
  9349  038B  00BD               	movwf	??_TM1650_fastPrintNum
  9350  038C  083D               	movf	??_TM1650_fastPrintNum,w
  9351  038D  00B4               	movwf	TM1650_setDigit@data
  9352  038E  3000               	movlw	0
  9353  038F  00B5               	movwf	TM1650_setDigit@dp
  9354  0390  00B6               	movwf	TM1650_setDigit@dp+1
  9355  0391  3003               	movlw	3
  9356  0392  318F  27AA         	fcall	_TM1650_setDigit
  9357                           
  9358                           ;tm1650.c: 42:     } else {
  9359  0394  0008               	return
  9360  0395                     l3605:	
  9361                           
  9362                           ;tm1650.c: 43:         int i=0;
  9363  0395  01C0               	clrf	TM1650_fastPrintNum@i
  9364  0396  01C1               	clrf	TM1650_fastPrintNum@i+1
  9365                           
  9366                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
  9367  0397  01C0               	clrf	TM1650_fastPrintNum@i
  9368  0398  01C1               	clrf	TM1650_fastPrintNum@i+1
  9369  0399                     l3611:	
  9370                           
  9371                           ;tm1650.c: 45:             int numWrite = num %10;
  9372  0399  300A               	movlw	10
  9373  039A  0140               	movlb	0	; select bank0
  9374  039B  00A0               	movwf	___lwmod@divisor
  9375  039C  3000               	movlw	0
  9376  039D  00A1               	movwf	___lwmod@divisor+1
  9377  039E  083C               	movf	TM1650_fastPrintNum@num+1,w
  9378  039F  00A3               	movwf	___lwmod@dividend+1
  9379  03A0  083B               	movf	TM1650_fastPrintNum@num,w
  9380  03A1  00A2               	movwf	___lwmod@dividend
  9381  03A2  3186  26CC  3183   	fcall	___lwmod
  9382  03A5  0140               	movlb	0	; select bank0
  9383  03A6  0821               	movf	?___lwmod+1,w
  9384  03A7  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
  9385  03A8  0820               	movf	?___lwmod,w
  9386  03A9  00BE               	movwf	TM1650_fastPrintNum@numWrite
  9387                           
  9388                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
  9389  03AA  083E               	movf	TM1650_fastPrintNum@numWrite,w
  9390  03AB  3E30               	addlw	48
  9391  03AC  00BD               	movwf	??_TM1650_fastPrintNum
  9392  03AD  083D               	movf	??_TM1650_fastPrintNum,w
  9393  03AE  00B4               	movwf	TM1650_setDigit@data
  9394  03AF  3000               	movlw	0
  9395  03B0  00B5               	movwf	TM1650_setDigit@dp
  9396  03B1  00B6               	movwf	TM1650_setDigit@dp+1
  9397  03B2  0840               	movf	TM1650_fastPrintNum@i,w
  9398  03B3  3C03               	sublw	3
  9399  03B4  318F  27AA  3183   	fcall	_TM1650_setDigit
  9400                           
  9401                           ;tm1650.c: 47:             num = num/10;
  9402  03B7  300A               	movlw	10
  9403  03B8  0140               	movlb	0	; select bank0
  9404  03B9  00A0               	movwf	___lwdiv@divisor
  9405  03BA  3000               	movlw	0
  9406  03BB  00A1               	movwf	___lwdiv@divisor+1
  9407  03BC  083C               	movf	TM1650_fastPrintNum@num+1,w
  9408  03BD  00A3               	movwf	___lwdiv@dividend+1
  9409  03BE  083B               	movf	TM1650_fastPrintNum@num,w
  9410  03BF  00A2               	movwf	___lwdiv@dividend
  9411  03C0  3186  2638  3183   	fcall	___lwdiv
  9412  03C3  0140               	movlb	0	; select bank0
  9413  03C4  0821               	movf	?___lwdiv+1,w
  9414  03C5  00BC               	movwf	TM1650_fastPrintNum@num+1
  9415  03C6  0820               	movf	?___lwdiv,w
  9416  03C7  00BB               	movwf	TM1650_fastPrintNum@num
  9417                           
  9418                           ;tm1650.c: 48:         }
  9419  03C8  3001               	movlw	1
  9420  03C9  07C0               	addwf	TM1650_fastPrintNum@i,f
  9421  03CA  3000               	movlw	0
  9422  03CB  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
  9423  03CC  0841               	movf	TM1650_fastPrintNum@i+1,w
  9424  03CD  3A80               	xorlw	128
  9425  03CE  00BD               	movwf	??_TM1650_fastPrintNum
  9426  03CF  3080               	movlw	128
  9427  03D0  023D               	subwf	??_TM1650_fastPrintNum,w
  9428  03D1  1D03               	skipz
  9429  03D2  2BD5               	goto	u2215
  9430  03D3  3004               	movlw	4
  9431  03D4  0240               	subwf	TM1650_fastPrintNum@i,w
  9432  03D5                     u2215:	
  9433  03D5  1803               	btfsc	3,0
  9434  03D6  0008               	return
  9435  03D7  2B99               	goto	l3611
  9436  03D8                     __end_of_TM1650_fastPrintNum:	
  9437                           
  9438                           	psect	text26
  9439  06CC                     __ptext26:	
  9440 ;; *************** function ___lwmod *****************
  9441 ;; Defined at:
  9442 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  divisor         2    0[BANK0 ] unsigned int 
  9445 ;;  dividend        2    2[BANK0 ] unsigned int 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  counter         1    5[BANK0 ] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  2    0[BANK0 ] unsigned int 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9459 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9460 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9461 ;;Total ram usage:        6 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:    4
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_TM1650_fastPrintNum
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           
  9472                           ;psect for function ___lwmod
  9473  06CC                     ___lwmod:	
  9474                           
  9475                           ;incstack = 0
  9476                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9477  06CC  0140               	movlb	0	; select bank0
  9478  06CD  0820               	movf	___lwmod@divisor,w
  9479  06CE  0421               	iorwf	___lwmod@divisor+1,w
  9480  06CF  1903               	btfsc	3,2
  9481  06D0  2EF4               	goto	l3583
  9482  06D1  01A5               	clrf	___lwmod@counter
  9483  06D2  0AA5               	incf	___lwmod@counter,f
  9484  06D3                     l3573:	
  9485  06D3  1BA1               	btfsc	___lwmod@divisor+1,7
  9486  06D4  2EDF               	goto	l3575
  9487  06D5  3001               	movlw	1
  9488  06D6                     u2155:	
  9489  06D6  35A0               	lslf	___lwmod@divisor,f
  9490  06D7  0DA1               	rlf	___lwmod@divisor+1,f
  9491  06D8  0B89               	decfsz	9,f
  9492  06D9  2ED6               	goto	u2155
  9493  06DA  3001               	movlw	1
  9494  06DB  00A4               	movwf	??___lwmod
  9495  06DC  0824               	movf	??___lwmod,w
  9496  06DD  07A5               	addwf	___lwmod@counter,f
  9497  06DE  2ED3               	goto	l3573
  9498  06DF                     l3575:	
  9499  06DF  0821               	movf	___lwmod@divisor+1,w
  9500  06E0  0223               	subwf	___lwmod@dividend+1,w
  9501  06E1  1D03               	skipz
  9502  06E2  2EE5               	goto	u2175
  9503  06E3  0820               	movf	___lwmod@divisor,w
  9504  06E4  0222               	subwf	___lwmod@dividend,w
  9505  06E5                     u2175:	
  9506  06E5  1C03               	skipc
  9507  06E6  2EEB               	goto	l3579
  9508  06E7  0820               	movf	___lwmod@divisor,w
  9509  06E8  02A2               	subwf	___lwmod@dividend,f
  9510  06E9  0821               	movf	___lwmod@divisor+1,w
  9511  06EA  3BA3               	subwfb	___lwmod@dividend+1,f
  9512  06EB                     l3579:	
  9513  06EB  3001               	movlw	1
  9514  06EC                     u2185:	
  9515  06EC  36A1               	lsrf	___lwmod@divisor+1,f
  9516  06ED  0CA0               	rrf	___lwmod@divisor,f
  9517  06EE  0B89               	decfsz	9,f
  9518  06EF  2EEC               	goto	u2185
  9519  06F0  3001               	movlw	1
  9520  06F1  02A5               	subwf	___lwmod@counter,f
  9521  06F2  1D03               	btfss	3,2
  9522  06F3  2EDF               	goto	l3575
  9523  06F4                     l3583:	
  9524  06F4  0823               	movf	___lwmod@dividend+1,w
  9525  06F5  00A1               	movwf	?___lwmod+1
  9526  06F6  0822               	movf	___lwmod@dividend,w
  9527  06F7  00A0               	movwf	?___lwmod
  9528  06F8  0008               	return
  9529  06F9                     __end_of___lwmod:	
  9530                           
  9531                           	psect	text27
  9532  0FAA                     __ptext27:	
  9533 ;; *************** function _TM1650_setDigit *****************
  9534 ;; Defined at:
  9535 ;;		line 24 in file "tm1650.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  digit           1    wreg     unsigned char 
  9538 ;;  data            1   20[BANK0 ] unsigned char 
  9539 ;;  dp              2   21[BANK0 ] int 
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;  digit           1   26[BANK0 ] unsigned char 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9551 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9553 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9554 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9555 ;;Total ram usage:        7 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    8
  9558 ;; This function calls:
  9559 ;;		_writeData
  9560 ;; This function is called by:
  9561 ;;		_TM1650_fastPrintNum
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           
  9566                           ;psect for function _TM1650_setDigit
  9567  0FAA                     _TM1650_setDigit:	
  9568                           
  9569                           ;incstack = 0
  9570                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9571                           ;TM1650_setDigit@digit stored from wreg
  9572  0FAA  0140               	movlb	0	; select bank0
  9573  0FAB  00BA               	movwf	TM1650_setDigit@digit
  9574                           
  9575                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
  9576  0FAC  0834               	movf	TM1650_setDigit@data,w
  9577  0FAD  3E26               	addlw	low ((_charTable+65504)| (0+32768))
  9578  0FAE  0084               	movwf	4
  9579  0FAF  3084               	movlw	high ((_charTable+65504)| (0+32768))
  9580  0FB0  1803               	skipnc
  9581  0FB1  3E01               	addlw	1
  9582  0FB2  0085               	movwf	5
  9583  0FB3  0800               	movf	0,w	;code access
  9584  0FB4  00B7               	movwf	??_TM1650_setDigit
  9585  0FB5  0835               	movf	TM1650_setDigit@dp,w
  9586  0FB6  00B8               	movwf	??_TM1650_setDigit+1
  9587  0FB7  3006               	movlw	6
  9588  0FB8                     u2065:	
  9589  0FB8  35B8               	lslf	??_TM1650_setDigit+1,f
  9590  0FB9  3EFF               	addlw	-1
  9591  0FBA  1D03               	skipz
  9592  0FBB  2FB8               	goto	u2065
  9593  0FBC  3538               	lslf	??_TM1650_setDigit+1,w
  9594  0FBD  0437               	iorwf	??_TM1650_setDigit,w
  9595  0FBE  00B9               	movwf	??_TM1650_setDigit+2
  9596  0FBF  0839               	movf	??_TM1650_setDigit+2,w
  9597  0FC0  00AE               	movwf	writeData@data
  9598  0FC1  083A               	movf	TM1650_setDigit@digit,w
  9599  0FC2  3E34               	addlw	52
  9600  0FC3  318F  27E3         	fcall	_writeData
  9601  0FC5  0008               	return
  9602  0FC6                     __end_of_TM1650_setDigit:	
  9603                           
  9604                           	psect	text28
  9605  0FE3                     __ptext28:	
  9606 ;; *************** function _writeData *****************
  9607 ;; Defined at:
  9608 ;;		line 18 in file "tm1650.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  address         1    wreg     unsigned char 
  9611 ;;  data            1   14[BANK0 ] unsigned char 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  address         1   18[BANK0 ] unsigned char 
  9614 ;;  status          1   19[BANK0 ] volatile enum E10866
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      void 
  9617 ;; Registers used:
  9618 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9624 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9625 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9626 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9627 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9628 ;;Total ram usage:        6 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    7
  9631 ;; This function calls:
  9632 ;;		_I2C1_MasterWrite
  9633 ;; This function is called by:
  9634 ;;		_TM1650_setDigit
  9635 ;;		_TM1650_enable
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639                           
  9640                           ;psect for function _writeData
  9641  0FE3                     _writeData:	
  9642                           
  9643                           ;incstack = 0
  9644                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9645                           ;writeData@address stored from wreg
  9646  0FE3  0140               	movlb	0	; select bank0
  9647  0FE4  00B2               	movwf	writeData@address
  9648                           
  9649                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9650  0FE5  3002               	movlw	2
  9651  0FE6  00AF               	movwf	??_writeData
  9652  0FE7  082F               	movf	??_writeData,w
  9653  0FE8  00B3               	movwf	writeData@status	;volatile
  9654                           
  9655                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
  9656  0FE9  01A7               	clrf	I2C1_MasterWrite@length
  9657  0FEA  0AA7               	incf	I2C1_MasterWrite@length,f
  9658  0FEB  0832               	movf	writeData@address,w
  9659  0FEC  00AF               	movwf	??_writeData
  9660  0FED  01B0               	clrf	??_writeData+1
  9661  0FEE  082F               	movf	??_writeData,w
  9662  0FEF  00A8               	movwf	I2C1_MasterWrite@address
  9663  0FF0  0830               	movf	??_writeData+1,w
  9664  0FF1  00A9               	movwf	I2C1_MasterWrite@address+1
  9665  0FF2  3033               	movlw	(low (writeData@status| 0))& (0+255)
  9666  0FF3  00B1               	movwf	??_writeData+2
  9667  0FF4  0831               	movf	??_writeData+2,w
  9668  0FF5  00AA               	movwf	I2C1_MasterWrite@pflag
  9669  0FF6  302E               	movlw	(low (writeData@data| 0))& (0+255)
  9670  0FF7  3187  2721  318F   	fcall	_I2C1_MasterWrite
  9671  0FFA                     l3535:	
  9672                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
  9673                           
  9674  0FFA  3002               	movlw	2
  9675  0FFB  0140               	movlb	0	; select bank0
  9676  0FFC  0633               	xorwf	writeData@status,w	;volatile
  9677  0FFD  1D03               	btfss	3,2
  9678  0FFE  0008               	return
  9679  0FFF  2FFA               	goto	l3535
  9680  1000                     __end_of_writeData:	
  9681                           
  9682                           	psect	text29
  9683  0721                     __ptext29:	
  9684 ;; *************** function _I2C1_MasterWrite *****************
  9685 ;; Defined at:
  9686 ;;		line 600 in file "mcc_generated_files/i2c1.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  pdata           1    wreg     PTR unsigned char 
  9689 ;;		 -> writeData@data(1), 
  9690 ;;  length          1    7[BANK0 ] unsigned char 
  9691 ;;  address         2    8[BANK0 ] unsigned short 
  9692 ;;  pflag           1   10[BANK0 ] PTR enum E10866
  9693 ;;		 -> writeData@status(1), 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  9696 ;;		 -> writeData@data(1), 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9706 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9708 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9709 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9710 ;;Total ram usage:        7 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:    6
  9713 ;; This function calls:
  9714 ;;		_I2C1_MasterTRBInsert
  9715 ;;		_I2C1_MasterWriteTRBBuild
  9716 ;; This function is called by:
  9717 ;;		_writeData
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           
  9722                           ;psect for function _I2C1_MasterWrite
  9723  0721                     _I2C1_MasterWrite:	
  9724                           
  9725                           ;incstack = 0
  9726                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9727                           ;I2C1_MasterWrite@pdata stored from wreg
  9728  0721  0140               	movlb	0	; select bank0
  9729  0722  00AD               	movwf	I2C1_MasterWrite@pdata
  9730                           
  9731                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
  9732  0723  184A               	btfsc	_i2c1_object+2,0
  9733  0724  2F42               	goto	l3529
  9734                           
  9735                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
  9736  0725  082D               	movf	I2C1_MasterWrite@pdata,w
  9737  0726  00AB               	movwf	??_I2C1_MasterWrite
  9738  0727  082B               	movf	??_I2C1_MasterWrite,w
  9739  0728  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  9740  0729  0827               	movf	I2C1_MasterWrite@length,w
  9741  072A  00AC               	movwf	??_I2C1_MasterWrite+1
  9742  072B  082C               	movf	??_I2C1_MasterWrite+1,w
  9743  072C  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  9744  072D  0829               	movf	I2C1_MasterWrite@address+1,w
  9745  072E  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  9746  072F  0828               	movf	I2C1_MasterWrite@address,w
  9747  0730  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  9748  0731  30C8               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  9749  0732  3187  27B4  3187   	fcall	_I2C1_MasterWriteTRBBuild
  9750                           
  9751                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
  9752  0735  30C8               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  9753  0736  0140               	movlb	0	; select bank0
  9754  0737  00AB               	movwf	??_I2C1_MasterWrite
  9755  0738  082B               	movf	??_I2C1_MasterWrite,w
  9756  0739  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  9757  073A  082A               	movf	I2C1_MasterWrite@pflag,w
  9758  073B  00AC               	movwf	??_I2C1_MasterWrite+1
  9759  073C  082C               	movf	??_I2C1_MasterWrite+1,w
  9760  073D  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  9761  073E  3001               	movlw	1
  9762  073F  3184  24FA         	fcall	_I2C1_MasterTRBInsert
  9763                           
  9764                           ;mcc_generated_files/i2c1.c: 613:     }
  9765  0741  0008               	return
  9766  0742                     l3529:	
  9767                           
  9768                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
  9769  0742  082A               	movf	I2C1_MasterWrite@pflag,w
  9770  0743  0086               	movwf	6
  9771  0744  0187               	clrf	7
  9772  0745  0181               	clrf	1
  9773  0746  0A81               	incf	1,f
  9774  0747  0008               	return
  9775  0748                     __end_of_I2C1_MasterWrite:	
  9776                           
  9777                           	psect	text30
  9778  07B4                     __ptext30:	
  9779 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  9780 ;; Defined at:
  9781 ;;		line 721 in file "mcc_generated_files/i2c1.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  ptrb            1    wreg     PTR struct .
  9784 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  9785 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  9786 ;;		 -> writeData@data(1), 
  9787 ;;  length          1    1[BANK0 ] unsigned char 
  9788 ;;  address         2    2[BANK0 ] unsigned short 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  ptrb            1    6[BANK0 ] PTR struct .
  9791 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9801 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9802 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9804 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9805 ;;Total ram usage:        7 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    4
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_I2C1_MasterWrite
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           
  9816                           ;psect for function _I2C1_MasterWriteTRBBuild
  9817  07B4                     _I2C1_MasterWriteTRBBuild:	
  9818                           
  9819                           ;incstack = 0
  9820                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  9821                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
  9822  07B4  0140               	movlb	0	; select bank0
  9823  07B5  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  9824                           
  9825                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
  9826  07B6  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
  9827  07B7  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
  9828  07B8  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
  9829  07B9  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  9830  07BA  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
  9831  07BB  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
  9832  07BC  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  9833  07BD  0086               	movwf	6
  9834  07BE  0187               	clrf	7
  9835  07BF  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  9836  07C0  3FC0               	movwi [0]fsr1
  9837  07C1  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
  9838  07C2  3FC1               	movwi [1]fsr1
  9839                           
  9840                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
  9841  07C3  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
  9842  07C4  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  9843  07C5  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  9844  07C6  3E02               	addlw	2
  9845  07C7  0086               	movwf	6
  9846  07C8  0187               	clrf	7
  9847  07C9  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  9848  07CA  0081               	movwf	1
  9849                           
  9850                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
  9851  07CB  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
  9852  07CC  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  9853  07CD  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  9854  07CE  3E03               	addlw	3
  9855  07CF  0086               	movwf	6
  9856  07D0  0187               	clrf	7
  9857  07D1  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  9858  07D2  0081               	movwf	1
  9859  07D3  0008               	return
  9860  07D4                     __end_of_I2C1_MasterWriteTRBBuild:	
  9861                           
  9862                           	psect	text31
  9863  04FA                     __ptext31:	
  9864 ;; *************** function _I2C1_MasterTRBInsert *****************
  9865 ;; Defined at:
  9866 ;;		line 654 in file "mcc_generated_files/i2c1.c"
  9867 ;; Parameters:    Size  Location     Type
  9868 ;;  count           1    wreg     unsigned char 
  9869 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  9870 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
  9871 ;;  pflag           1    1[BANK0 ] PTR enum E10866
  9872 ;;		 -> writeData@status(1), 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;  count           1    3[BANK0 ] unsigned char 
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1    wreg      void 
  9877 ;; Registers used:
  9878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9884 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9886 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9887 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9888 ;;Total ram usage:        4 bytes
  9889 ;; Hardware stack levels used:    1
  9890 ;; Hardware stack levels required when called:    5
  9891 ;; This function calls:
  9892 ;;		_I2C1_WaitForLastPacketToComplete
  9893 ;; This function is called by:
  9894 ;;		_I2C1_MasterWrite
  9895 ;;		_I2C1_MasterRead
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           
  9900                           ;psect for function _I2C1_MasterTRBInsert
  9901  04FA                     _I2C1_MasterTRBInsert:	
  9902                           
  9903                           ;incstack = 0
  9904                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9905                           ;I2C1_MasterTRBInsert@count stored from wreg
  9906  04FA  0140               	movlb	0	; select bank0
  9907  04FB  00A3               	movwf	I2C1_MasterTRBInsert@count
  9908                           
  9909                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
  9910  04FC  184A               	btfsc	_i2c1_object+2,0
  9911  04FD  2D2E               	goto	l3517
  9912                           
  9913                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
  9914  04FE  3002               	movlw	2
  9915  04FF  00A2               	movwf	??_I2C1_MasterTRBInsert
  9916  0500  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  9917  0501  0086               	movwf	6
  9918  0502  0187               	clrf	7
  9919  0503  0822               	movf	??_I2C1_MasterTRBInsert,w
  9920  0504  0081               	movwf	1
  9921                           
  9922                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
  9923  0505  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
  9924  0506  00A2               	movwf	??_I2C1_MasterTRBInsert
  9925  0507  0A48               	incf	_i2c1_object,w
  9926  0508  0086               	movwf	6
  9927  0509  0187               	clrf	7
  9928  050A  0822               	movf	??_I2C1_MasterTRBInsert,w
  9929  050B  0081               	movwf	1
  9930                           
  9931                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
  9932  050C  0823               	movf	I2C1_MasterTRBInsert@count,w
  9933  050D  00A2               	movwf	??_I2C1_MasterTRBInsert
  9934  050E  0848               	movf	_i2c1_object,w
  9935  050F  0086               	movwf	6
  9936  0510  0187               	clrf	7
  9937  0511  0822               	movf	??_I2C1_MasterTRBInsert,w
  9938  0512  0081               	movwf	1
  9939                           
  9940                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
  9941  0513  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  9942  0514  00A2               	movwf	??_I2C1_MasterTRBInsert
  9943  0515  0848               	movf	_i2c1_object,w
  9944  0516  3E02               	addlw	2
  9945  0517  0086               	movwf	6
  9946  0518  0187               	clrf	7
  9947  0519  0822               	movf	??_I2C1_MasterTRBInsert,w
  9948  051A  0081               	movwf	1
  9949                           
  9950                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
  9951  051B  3003               	movlw	3
  9952  051C  00A2               	movwf	??_I2C1_MasterTRBInsert
  9953  051D  0822               	movf	??_I2C1_MasterTRBInsert,w
  9954  051E  07C8               	addwf	_i2c1_object,f
  9955                           
  9956                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
  9957  051F  0848               	movf	_i2c1_object,w
  9958  0520  3A6B               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  9959  0521  1D03               	skipz
  9960  0522  2D27               	goto	l3513
  9961                           
  9962                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
  9963  0523  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9964  0524  00A2               	movwf	??_I2C1_MasterTRBInsert
  9965  0525  0822               	movf	??_I2C1_MasterTRBInsert,w
  9966  0526  00C8               	movwf	_i2c1_object
  9967  0527                     l3513:	
  9968                           
  9969                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
  9970  0527  10CA               	bcf	_i2c1_object+2,1
  9971                           
  9972                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
  9973  0528  0849               	movf	low ((_i2c1_object| 0+1)),w
  9974  0529  0648               	xorwf	_i2c1_object,w
  9975  052A  1D03               	skipz
  9976  052B  2D33               	goto	l3519
  9977                           
  9978                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
  9979  052C  144A               	bsf	_i2c1_object+2,0
  9980  052D  2D33               	goto	l3519
  9981  052E                     l3517:	
  9982                           
  9983                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
  9984  052E  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  9985  052F  0086               	movwf	6
  9986  0530  0187               	clrf	7
  9987  0531  0181               	clrf	1
  9988  0532  0A81               	incf	1,f
  9989  0533                     l3519:	
  9990                           
  9991                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
  9992  0533  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  9993  0534  0086               	movwf	6
  9994  0535  0187               	clrf	7
  9995  0536  3002               	movlw	2
  9996  0537  0601               	xorwf	1,w
  9997  0538  1D03               	btfss	3,2
  9998  0539  0008               	return
  9999                           
 10000                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 10001  053A  318E  262C         	fcall	_I2C1_WaitForLastPacketToComplete
 10002                           
 10003                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 10004  053C  014E               	movlb	14	; select bank14
 10005  053D  140F               	bsf	15,0	;volatile
 10006  053E  0008               	return
 10007  053F                     __end_of_I2C1_MasterTRBInsert:	
 10008                           
 10009                           	psect	text32
 10010  0E2C                     __ptext32:	
 10011 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 10012 ;; Defined at:
 10013 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;		None
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;		None
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      void 
 10020 ;; Registers used:
 10021 ;;		wreg, status,2, status,0
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10031 ;;Total ram usage:        0 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; Hardware stack levels required when called:    4
 10034 ;; This function calls:
 10035 ;;		Nothing
 10036 ;; This function is called by:
 10037 ;;		_I2C1_MasterTRBInsert
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           
 10042                           ;psect for function _I2C1_WaitForLastPacketToComplete
 10043  0E2C                     _I2C1_WaitForLastPacketToComplete:	
 10044  0E2C                     l3499:	
 10045                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 10046                           
 10047                           ;incstack = 0
 10048                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 10049                           
 10050                           
 10051                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 10052  0E2C  0140               	movlb	0	; select bank0
 10053  0E2D  0865               	movf	_i2c1_state,w
 10054  0E2E  1903               	btfsc	3,2
 10055  0E2F  0008               	return
 10056  0E30  2E2C               	goto	l3499
 10057  0E31                     __end_of_I2C1_WaitForLastPacketToComplete:	
 10058                           
 10059                           	psect	text33
 10060  0E3D                     __ptext33:	
 10061 ;; *************** function _CLOCK_init *****************
 10062 ;; Defined at:
 10063 ;;		line 9 in file "clock.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;		None
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;		None
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  1    wreg      void 
 10070 ;; Registers used:
 10071 ;;		wreg, status,2, status,0, pclath, cstack
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10081 ;;Total ram usage:        0 bytes
 10082 ;; Hardware stack levels used:    1
 10083 ;; Hardware stack levels required when called:    5
 10084 ;; This function calls:
 10085 ;;		_TMR0_SetInterruptHandler
 10086 ;; This function is called by:
 10087 ;;		_main
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           
 10092                           ;psect for function _CLOCK_init
 10093  0E3D                     _CLOCK_init:	
 10094                           
 10095                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 10096                           
 10097                           ;incstack = 0
 10098                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 10099  0E3D  3031               	movlw	low _CLOCK_timerCallback
 10100  0E3E  0140               	movlb	0	; select bank0
 10101  0E3F  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10102  0E40  300E               	movlw	high _CLOCK_timerCallback
 10103  0E41  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10104  0E42  318E  2668         	fcall	_TMR0_SetInterruptHandler
 10105  0E44  0008               	return
 10106  0E45                     __end_of_CLOCK_init:	
 10107                           
 10108                           	psect	text34
 10109  0E68                     __ptext34:	
 10110 ;; *************** function _TMR0_SetInterruptHandler *****************
 10111 ;; Defined at:
 10112 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10115 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10130 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10131 ;;Total ram usage:        2 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    4
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_TMR0_Initialize
 10138 ;;		_CLOCK_init
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           
 10143                           ;psect for function _TMR0_SetInterruptHandler
 10144  0E68                     _TMR0_SetInterruptHandler:	
 10145                           
 10146                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 10147                           
 10148                           ;incstack = 0
 10149                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 10150  0E68  0140               	movlb	0	; select bank0
 10151  0E69  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 10152  0E6A  0141               	movlb	1	; select bank1
 10153  0E6B  00CF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 10154  0E6C  0140               	movlb	0	; select bank0
 10155  0E6D  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 10156  0E6E  0141               	movlb	1	; select bank1
 10157  0E6F  00CE               	movwf	_TMR0_InterruptHandler^(0+128)
 10158  0E70  0008               	return
 10159  0E71                     __end_of_TMR0_SetInterruptHandler:	
 10160                           
 10161                           	psect	text35
 10162  01D2                     __ptext35:	
 10163 ;; *************** function _BUTTONS_task *****************
 10164 ;; Defined at:
 10165 ;;		line 34 in file "buttons.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;		None
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  btn             1    8[BANK0 ] PTR struct .
 10170 ;;		 -> buttons(32), 
 10171 ;;  i               1    5[BANK0 ] unsigned char 
 10172 ;;  time            2    6[BANK0 ] unsigned short 
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      void 
 10175 ;; Registers used:
 10176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10183 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10184 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10185 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10186 ;;Total ram usage:        7 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:    5
 10189 ;; This function calls:
 10190 ;;		_CLOCK_getTime
 10191 ;; This function is called by:
 10192 ;;		_main
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196                           
 10197                           ;psect for function _BUTTONS_task
 10198  01D2                     _BUTTONS_task:	
 10199                           
 10200                           ;buttons.c: 35:     time_t time = CLOCK_getTime();
 10201                           
 10202                           ;incstack = 0
 10203                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10204  01D2  318E  2637  3181   	fcall	_CLOCK_getTime
 10205  01D5  0140               	movlb	0	; select bank0
 10206  01D6  0821               	movf	?_CLOCK_getTime+1,w
 10207  01D7  00A7               	movwf	BUTTONS_task@time+1
 10208  01D8  0820               	movf	?_CLOCK_getTime,w
 10209  01D9  00A6               	movwf	BUTTONS_task@time
 10210                           
 10211                           ;buttons.c: 38:     if (time - lastTime < 50)
 10212  01DA  0851               	movf	buttons@lastTime,w
 10213  01DB  0226               	subwf	BUTTONS_task@time,w
 10214  01DC  00A2               	movwf	??_BUTTONS_task
 10215  01DD  0852               	movf	buttons@lastTime+1,w
 10216  01DE  3B27               	subwfb	BUTTONS_task@time+1,w
 10217  01DF  00A3               	movwf	??_BUTTONS_task+1
 10218  01E0  3000               	movlw	0
 10219  01E1  0223               	subwf	??_BUTTONS_task+1,w
 10220  01E2  3032               	movlw	50
 10221  01E3  1903               	skipnz
 10222  01E4  0222               	subwf	??_BUTTONS_task,w
 10223  01E5  1C03               	btfss	3,0
 10224  01E6  0008               	return
 10225                           
 10226                           ;buttons.c: 41:     lastTime = time;
 10227  01E7  0827               	movf	BUTTONS_task@time+1,w
 10228  01E8  00D2               	movwf	buttons@lastTime+1
 10229  01E9  0826               	movf	BUTTONS_task@time,w
 10230  01EA  00D1               	movwf	buttons@lastTime
 10231                           
 10232                           ;buttons.c: 44:     for (uint8_t i = 0; i < 4; i++) {
 10233  01EB  01A5               	clrf	BUTTONS_task@i
 10234  01EC                     l3997:	
 10235                           
 10236                           ;buttons.c: 45:         button_t* btn = buttons + i;
 10237  01EC  0825               	movf	BUTTONS_task@i,w
 10238  01ED  00A2               	movwf	??_BUTTONS_task
 10239  01EE  3002               	movlw	2
 10240  01EF                     u2385:	
 10241  01EF  35A2               	lslf	??_BUTTONS_task,f
 10242  01F0  3EFF               	addlw	-1
 10243  01F1  1D03               	skipz
 10244  01F2  29EF               	goto	u2385
 10245  01F3  3522               	lslf	??_BUTTONS_task,w
 10246  01F4  3E20               	addlw	(low (_buttons| (0+256)))& (0+255)
 10247  01F5  00A3               	movwf	??_BUTTONS_task+1
 10248  01F6  0823               	movf	??_BUTTONS_task+1,w
 10249  01F7  00A8               	movwf	BUTTONS_task@btn
 10250                           
 10251                           ;buttons.c: 48:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 10252  01F8  0828               	movf	BUTTONS_task@btn,w
 10253  01F9  0086               	movwf	6
 10254  01FA  3001               	movlw	1	; select bank2/3
 10255  01FB  0087               	movwf	7
 10256  01FC  3F40               	moviw [0]fsr1
 10257  01FD  00A2               	movwf	??_BUTTONS_task
 10258  01FE  3F41               	moviw [1]fsr1
 10259  01FF  00A3               	movwf	??_BUTTONS_task+1
 10260  0200  0822               	movf	??_BUTTONS_task,w
 10261  0201  0086               	movwf	6
 10262  0202  0823               	movf	??_BUTTONS_task+1,w
 10263  0203  0087               	movwf	7
 10264  0204  3001               	movlw	1
 10265  0205  00A4               	movwf	??_BUTTONS_task+2
 10266  0206  0828               	movf	BUTTONS_task@btn,w
 10267  0207  3E02               	addlw	2
 10268  0208  0084               	movwf	4
 10269  0209  3001               	movlw	1	; select bank2/3
 10270  020A  0085               	movwf	5
 10271  020B  0A00               	incf	0,w
 10272  020C  2A0E               	goto	u2394
 10273  020D                     u2395:	
 10274  020D  35A4               	lslf	??_BUTTONS_task+2,f
 10275  020E                     u2394:	
 10276  020E  0B89               	decfsz	9,f
 10277  020F  2A0D               	goto	u2395
 10278  0210  0824               	movf	??_BUTTONS_task+2,w
 10279  0211  0501               	andwf	1,w
 10280  0212  1D03               	btfss	3,2
 10281  0213  2A1C               	goto	l4003
 10282                           
 10283                           ;buttons.c: 49:             btn->state = STATE_PRESSED;
 10284  0214  0828               	movf	BUTTONS_task@btn,w
 10285  0215  3E03               	addlw	3
 10286  0216  0086               	movwf	6
 10287  0217  3001               	movlw	1	; select bank2/3
 10288  0218  0087               	movwf	7
 10289  0219  0181               	clrf	1
 10290  021A  0A81               	incf	1,f
 10291                           
 10292                           ;buttons.c: 50:         } else {
 10293  021B  2A22               	goto	l874
 10294  021C                     l4003:	
 10295                           
 10296                           ;buttons.c: 51:             btn->state = STATE_UNPRESSED;
 10297  021C  0828               	movf	BUTTONS_task@btn,w
 10298  021D  3E03               	addlw	3
 10299  021E  0086               	movwf	6
 10300  021F  3001               	movlw	1	; select bank2/3
 10301  0220  0087               	movwf	7
 10302  0221  0181               	clrf	1
 10303  0222                     l874:	
 10304                           ;buttons.c: 52:         }
 10305                           
 10306                           
 10307                           ;buttons.c: 54:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
 10308  0222  0828               	movf	BUTTONS_task@btn,w
 10309  0223  3E03               	addlw	3
 10310  0224  0086               	movwf	6
 10311  0225  3001               	movlw	1	; select bank2/3
 10312  0226  0087               	movwf	7
 10313  0227  0301               	decf	1,w
 10314  0228  1D03               	btfss	3,2
 10315  0229  2A43               	goto	l4009
 10316  022A  0828               	movf	BUTTONS_task@btn,w
 10317  022B  3E04               	addlw	4
 10318  022C  0086               	movwf	6
 10319  022D  3001               	movlw	1	; select bank2/3
 10320  022E  0087               	movwf	7
 10321  022F  0801               	movf	1,w
 10322  0230  1D03               	btfss	3,2
 10323  0231  2A43               	goto	l4009
 10324                           
 10325                           ;buttons.c: 56:             btn->event = EVENT_PRESSED;
 10326  0232  0828               	movf	BUTTONS_task@btn,w
 10327  0233  3E05               	addlw	5
 10328  0234  0086               	movwf	6
 10329  0235  3001               	movlw	1	; select bank2/3
 10330  0236  0087               	movwf	7
 10331  0237  0181               	clrf	1
 10332  0238  0A81               	incf	1,f
 10333                           
 10334                           ;buttons.c: 57:             btn->pressTime = time;
 10335  0239  0828               	movf	BUTTONS_task@btn,w
 10336  023A  3E06               	addlw	6
 10337  023B  0086               	movwf	6
 10338  023C  3001               	movlw	1	; select bank2/3
 10339  023D  0087               	movwf	7
 10340  023E  0826               	movf	BUTTONS_task@time,w
 10341  023F  3FC0               	movwi [0]fsr1
 10342  0240  0827               	movf	BUTTONS_task@time+1,w
 10343  0241  3FC1               	movwi [1]fsr1
 10344                           
 10345                           ;buttons.c: 58:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 10346  0242  2A85               	goto	l876
 10347  0243                     l4009:	
 10348  0243  0828               	movf	BUTTONS_task@btn,w
 10349  0244  3E03               	addlw	3
 10350  0245  0086               	movwf	6
 10351  0246  3001               	movlw	1	; select bank2/3
 10352  0247  0087               	movwf	7
 10353  0248  0301               	decf	1,w
 10354  0249  1D03               	btfss	3,2
 10355  024A  2A6F               	goto	l4017
 10356  024B  0828               	movf	BUTTONS_task@btn,w
 10357  024C  3E04               	addlw	4
 10358  024D  0086               	movwf	6
 10359  024E  3001               	movlw	1	; select bank2/3
 10360  024F  0087               	movwf	7
 10361  0250  0301               	decf	1,w
 10362  0251  1D03               	btfss	3,2
 10363  0252  2A6F               	goto	l4017
 10364                           
 10365                           ;buttons.c: 60:             if(time - btn->pressTime > 500) {
 10366  0253  0828               	movf	BUTTONS_task@btn,w
 10367  0254  3E06               	addlw	6
 10368  0255  0086               	movwf	6
 10369  0256  3001               	movlw	1	; select bank2/3
 10370  0257  0087               	movwf	7
 10371  0258  3F40               	moviw [0]fsr1
 10372  0259  0226               	subwf	BUTTONS_task@time,w
 10373  025A  00A2               	movwf	??_BUTTONS_task
 10374  025B  3F41               	moviw [1]fsr1
 10375  025C  3B27               	subwfb	BUTTONS_task@time+1,w
 10376  025D  00A3               	movwf	??_BUTTONS_task+1
 10377  025E  3001               	movlw	1
 10378  025F  0223               	subwf	??_BUTTONS_task+1,w
 10379  0260  30F5               	movlw	245
 10380  0261  1903               	skipnz
 10381  0262  0222               	subwf	??_BUTTONS_task,w
 10382  0263  1C03               	skipc
 10383  0264  2A85               	goto	l876
 10384                           
 10385                           ;buttons.c: 61:                 btn->event = EVENT_HELD;
 10386  0265  3002               	movlw	2
 10387  0266  00A2               	movwf	??_BUTTONS_task
 10388  0267  0828               	movf	BUTTONS_task@btn,w
 10389  0268  3E05               	addlw	5
 10390  0269  0086               	movwf	6
 10391  026A  3001               	movlw	1	; select bank2/3
 10392  026B  0087               	movwf	7
 10393  026C  0822               	movf	??_BUTTONS_task,w
 10394  026D  0081               	movwf	1
 10395  026E  2A85               	goto	l876
 10396  026F                     l4017:	
 10397  026F  0828               	movf	BUTTONS_task@btn,w
 10398  0270  3E03               	addlw	3
 10399  0271  0086               	movwf	6
 10400  0272  3001               	movlw	1	; select bank2/3
 10401  0273  0087               	movwf	7
 10402  0274  0801               	movf	1,w
 10403  0275  1D03               	btfss	3,2
 10404  0276  2A85               	goto	l876
 10405  0277  0828               	movf	BUTTONS_task@btn,w
 10406  0278  3E04               	addlw	4
 10407  0279  0086               	movwf	6
 10408  027A  3001               	movlw	1	; select bank2/3
 10409  027B  0087               	movwf	7
 10410  027C  0301               	decf	1,w
 10411  027D  1D03               	btfss	3,2
 10412  027E  2A85               	goto	l876
 10413                           
 10414                           ;buttons.c: 64:             btn->event = EVENT_IDLE;
 10415  027F  0828               	movf	BUTTONS_task@btn,w
 10416  0280  3E05               	addlw	5
 10417  0281  0086               	movwf	6
 10418  0282  3001               	movlw	1	; select bank2/3
 10419  0283  0087               	movwf	7
 10420  0284  0181               	clrf	1
 10421  0285                     l876:	
 10422                           
 10423                           ;buttons.c: 67:         btn->lastState = btn->state;
 10424  0285  0828               	movf	BUTTONS_task@btn,w
 10425  0286  3E03               	addlw	3
 10426  0287  0086               	movwf	6
 10427  0288  3001               	movlw	1	; select bank2/3
 10428  0289  0087               	movwf	7
 10429  028A  0801               	movf	1,w
 10430  028B  00A2               	movwf	??_BUTTONS_task
 10431  028C  0828               	movf	BUTTONS_task@btn,w
 10432  028D  3E04               	addlw	4
 10433  028E  0086               	movwf	6
 10434  028F  3001               	movlw	1	; select bank2/3
 10435  0290  0087               	movwf	7
 10436  0291  0822               	movf	??_BUTTONS_task,w
 10437  0292  0081               	movwf	1
 10438                           
 10439                           ;buttons.c: 68:     }
 10440  0293  3001               	movlw	1
 10441  0294  00A2               	movwf	??_BUTTONS_task
 10442  0295  0822               	movf	??_BUTTONS_task,w
 10443  0296  07A5               	addwf	BUTTONS_task@i,f
 10444  0297  3004               	movlw	4
 10445  0298  0225               	subwf	BUTTONS_task@i,w
 10446  0299  1803               	btfsc	3,0
 10447  029A  0008               	return
 10448  029B  29EC               	goto	l3997
 10449  029C                     __end_of_BUTTONS_task:	
 10450                           
 10451                           	psect	text36
 10452  0582                     __ptext36:	
 10453 ;; *************** function _BUTTONS_init *****************
 10454 ;; Defined at:
 10455 ;;		line 21 in file "buttons.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;		None
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;		None
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      void 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10473 ;;Total ram usage:        1 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:    5
 10476 ;; This function calls:
 10477 ;;		_init
 10478 ;; This function is called by:
 10479 ;;		_main
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           
 10484                           ;psect for function _BUTTONS_init
 10485  0582                     _BUTTONS_init:	
 10486                           
 10487                           ;buttons.c: 22:     menu = &buttons[0];
 10488                           
 10489                           ;incstack = 0
 10490                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10491  0582  3020               	movlw	(low (_buttons| (0+256)))& (0+255)
 10492  0583  0140               	movlb	0	; select bank0
 10493  0584  00A5               	movwf	??_BUTTONS_init
 10494  0585  0825               	movf	??_BUTTONS_init,w
 10495  0586  00DA               	movwf	_menu
 10496                           
 10497                           ;buttons.c: 23:     up = &buttons[1];
 10498  0587  3028               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 10499  0588  00A5               	movwf	??_BUTTONS_init
 10500  0589  0825               	movf	??_BUTTONS_init,w
 10501  058A  00DD               	movwf	_up
 10502                           
 10503                           ;buttons.c: 24:     down = &buttons[2];
 10504  058B  3030               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 10505  058C  00A5               	movwf	??_BUTTONS_init
 10506  058D  0825               	movf	??_BUTTONS_init,w
 10507  058E  00DC               	movwf	_down
 10508                           
 10509                           ;buttons.c: 25:     enter = &buttons[3];
 10510  058F  3038               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 10511  0590  00A5               	movwf	??_BUTTONS_init
 10512  0591  0825               	movf	??_BUTTONS_init,w
 10513  0592  00DB               	movwf	_enter
 10514                           
 10515                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 10516  0593  300E               	movlw	14
 10517  0594  00A0               	movwf	init@port
 10518  0595  3000               	movlw	0
 10519  0596  00A1               	movwf	init@port+1
 10520  0597  3002               	movlw	2
 10521  0598  00A5               	movwf	??_BUTTONS_init
 10522  0599  0825               	movf	??_BUTTONS_init,w
 10523  059A  00A2               	movwf	init@pin
 10524  059B  085A               	movf	_menu,w
 10525  059C  3187  27D4  3185   	fcall	_init
 10526                           
 10527                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 10528  059F  300C               	movlw	12
 10529  05A0  0140               	movlb	0	; select bank0
 10530  05A1  00A0               	movwf	init@port
 10531  05A2  3000               	movlw	0
 10532  05A3  00A1               	movwf	init@port+1
 10533  05A4  3002               	movlw	2
 10534  05A5  00A5               	movwf	??_BUTTONS_init
 10535  05A6  0825               	movf	??_BUTTONS_init,w
 10536  05A7  00A2               	movwf	init@pin
 10537  05A8  085B               	movf	_enter,w
 10538  05A9  3187  27D4  3185   	fcall	_init
 10539                           
 10540                           ;buttons.c: 29:     init(down, &PORTC, 0);
 10541  05AC  300E               	movlw	14
 10542  05AD  0140               	movlb	0	; select bank0
 10543  05AE  00A0               	movwf	init@port
 10544  05AF  3000               	movlw	0
 10545  05B0  00A1               	movwf	init@port+1
 10546  05B1  01A2               	clrf	init@pin
 10547  05B2  085C               	movf	_down,w
 10548  05B3  3187  27D4  3185   	fcall	_init
 10549                           
 10550                           ;buttons.c: 30:     init(up, &PORTC, 1);
 10551  05B6  300E               	movlw	14
 10552  05B7  0140               	movlb	0	; select bank0
 10553  05B8  00A0               	movwf	init@port
 10554  05B9  3000               	movlw	0
 10555  05BA  00A1               	movwf	init@port+1
 10556  05BB  01A2               	clrf	init@pin
 10557  05BC  0AA2               	incf	init@pin,f
 10558  05BD  085D               	movf	_up,w
 10559  05BE  3187  27D4         	fcall	_init
 10560  05C0  0008               	return
 10561  05C1                     __end_of_BUTTONS_init:	
 10562                           
 10563                           	psect	text37
 10564  07D4                     __ptext37:	
 10565 ;; *************** function _init *****************
 10566 ;; Defined at:
 10567 ;;		line 14 in file "buttons.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  btn             1    wreg     PTR struct .
 10570 ;;		 -> buttons(32), NULL(0), 
 10571 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 10572 ;;		 -> PORTA(1), PORTC(1), 
 10573 ;;  pin             1    2[BANK0 ] unsigned char 
 10574 ;; Auto vars:     Size  Location     Type
 10575 ;;  btn             1    4[BANK0 ] PTR struct .
 10576 ;;		 -> buttons(32), NULL(0), 
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  1    wreg      void 
 10579 ;; Registers used:
 10580 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10586 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10588 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10589 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10590 ;;Total ram usage:        5 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:    4
 10593 ;; This function calls:
 10594 ;;		Nothing
 10595 ;; This function is called by:
 10596 ;;		_BUTTONS_init
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           
 10601                           ;psect for function _init
 10602  07D4                     _init:	
 10603                           
 10604                           ;incstack = 0
 10605                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 10606                           ;init@btn stored from wreg
 10607  07D4  0140               	movlb	0	; select bank0
 10608  07D5  00A4               	movwf	init@btn
 10609                           
 10610                           ;buttons.c: 15:     btn->port = port;
 10611  07D6  0824               	movf	init@btn,w
 10612  07D7  0086               	movwf	6
 10613  07D8  3001               	movlw	1	; select bank2/3
 10614  07D9  0087               	movwf	7
 10615  07DA  0820               	movf	init@port,w
 10616  07DB  3FC0               	movwi [0]fsr1
 10617  07DC  0821               	movf	init@port+1,w
 10618  07DD  3FC1               	movwi [1]fsr1
 10619                           
 10620                           ;buttons.c: 16:     btn->pin = pin;
 10621  07DE  0822               	movf	init@pin,w
 10622  07DF  00A3               	movwf	??_init
 10623  07E0  0824               	movf	init@btn,w
 10624  07E1  3E02               	addlw	2
 10625  07E2  0086               	movwf	6
 10626  07E3  3001               	movlw	1	; select bank2/3
 10627  07E4  0087               	movwf	7
 10628  07E5  0823               	movf	??_init,w
 10629  07E6  0081               	movwf	1
 10630                           
 10631                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 10632  07E7  0824               	movf	init@btn,w
 10633  07E8  3E03               	addlw	3
 10634  07E9  0086               	movwf	6
 10635  07EA  3001               	movlw	1	; select bank2/3
 10636  07EB  0087               	movwf	7
 10637  07EC  0181               	clrf	1
 10638                           
 10639                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 10640  07ED  0824               	movf	init@btn,w
 10641  07EE  3E05               	addlw	5
 10642  07EF  0086               	movwf	6
 10643  07F0  3001               	movlw	1	; select bank2/3
 10644  07F1  0087               	movwf	7
 10645  07F2  0181               	clrf	1
 10646  07F3  0008               	return
 10647  07F4                     __end_of_init:	
 10648                           
 10649                           	psect	text38
 10650  029C                     __ptext38:	
 10651 ;; *************** function _BEAT_task *****************
 10652 ;; Defined at:
 10653 ;;		line 57 in file "beat.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;		None
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;  offset          2   10[BANK0 ] unsigned short 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		wreg, status,2, status,0, pclath, cstack
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10668 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10669 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10670 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10671 ;;Total ram usage:        4 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    5
 10674 ;; This function calls:
 10675 ;;		_ADCC_SetUpperThreshold
 10676 ;;		_CLOCK_getTime
 10677 ;;		_TM1650_isEnabled
 10678 ;;		___lwdiv
 10679 ;; This function is called by:
 10680 ;;		_main
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           
 10685                           ;psect for function _BEAT_task
 10686  029C                     _BEAT_task:	
 10687                           
 10688                           ;beat.c: 59:     if (TM1650_isEnabled())
 10689                           
 10690                           ;incstack = 0
 10691                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 10692  029C  318E  2619  3182   	fcall	_TM1650_isEnabled
 10693  029F  3A00               	xorlw	0
 10694  02A0  1D03               	btfss	3,2
 10695  02A1  0008               	return
 10696                           
 10697                           ;beat.c: 62:     if (CLOCK_getTime() - lastRun < delay)
 10698  02A2  318E  2637  3182   	fcall	_CLOCK_getTime
 10699  02A5  0141               	movlb	1	; select bank1
 10700  02A6  083C               	movf	_lastRun^(0+128),w
 10701  02A7  0140               	movlb	0	; select bank0
 10702  02A8  0220               	subwf	?_CLOCK_getTime,w
 10703  02A9  00A8               	movwf	??_BEAT_task
 10704  02AA  0141               	movlb	1	; select bank1
 10705  02AB  083D               	movf	(_lastRun+1)^(0+128),w
 10706  02AC  0140               	movlb	0	; select bank0
 10707  02AD  3B21               	subwfb	?_CLOCK_getTime+1,w
 10708  02AE  00A9               	movwf	??_BEAT_task+1
 10709  02AF  0141               	movlb	1	; select bank1
 10710  02B0  085B               	movf	(_delay+1)^(0+128),w
 10711  02B1  0140               	movlb	0	; select bank0
 10712  02B2  0229               	subwf	??_BEAT_task+1,w
 10713  02B3  1D03               	skipz
 10714  02B4  2AB9               	goto	u2295
 10715  02B5  0141               	movlb	1	; select bank1
 10716  02B6  085A               	movf	_delay^(0+128),w
 10717  02B7  0140               	movlb	0	; select bank0
 10718  02B8  0228               	subwf	??_BEAT_task,w
 10719  02B9                     u2295:	
 10720  02B9  1C03               	btfss	3,0
 10721  02BA  0008               	return
 10722                           
 10723                           ;beat.c: 65:     lastRun = CLOCK_getTime();
 10724  02BB  318E  2637  3182   	fcall	_CLOCK_getTime
 10725  02BE  0140               	movlb	0	; select bank0
 10726  02BF  0821               	movf	?_CLOCK_getTime+1,w
 10727  02C0  0141               	movlb	1	; select bank1
 10728  02C1  00BD               	movwf	(_lastRun+1)^(0+128)
 10729  02C2  0140               	movlb	0	; select bank0
 10730  02C3  0820               	movf	?_CLOCK_getTime,w
 10731  02C4  0141               	movlb	1	; select bank1
 10732  02C5  00BC               	movwf	_lastRun^(0+128)
 10733                           
 10734                           ;beat.c: 67:     if (thresholdExceeded == 1) {
 10735  02C6  0140               	movlb	0	; select bank0
 10736  02C7  0358               	decf	_thresholdExceeded,w
 10737  02C8  1D03               	btfss	3,2
 10738  02C9  2AD0               	goto	l3927
 10739                           
 10740                           ;beat.c: 71:         thresholdCount++;
 10741  02CA  3001               	movlw	1
 10742  02CB  0141               	movlb	1	; select bank1
 10743  02CC  07BA               	addwf	_thresholdCount^(0+128),f
 10744  02CD  3000               	movlw	0
 10745  02CE  3DBB               	addwfc	(_thresholdCount+1)^(0+128),f
 10746                           
 10747                           ;beat.c: 72:     } else {
 10748  02CF  2AD7               	goto	l3931
 10749  02D0                     l3927:	
 10750                           
 10751                           ;beat.c: 74:         thresholdCount = 0;
 10752  02D0  0141               	movlb	1	; select bank1
 10753  02D1  01BA               	clrf	_thresholdCount^(0+128)
 10754  02D2  01BB               	clrf	(_thresholdCount+1)^(0+128)
 10755                           
 10756                           ;beat.c: 75:         delay = 20;
 10757  02D3  3014               	movlw	20
 10758  02D4  00DA               	movwf	_delay^(0+128)
 10759  02D5  3000               	movlw	0
 10760  02D6  00DB               	movwf	(_delay^(0+128)+1)
 10761  02D7                     l3931:	
 10762                           
 10763                           ;beat.c: 81:     if (thresholdExceeded == 1 && lastDetected == 0) {
 10764  02D7  0140               	movlb	0	; select bank0
 10765  02D8  0358               	decf	_thresholdExceeded,w
 10766  02D9  1D03               	btfss	3,2
 10767  02DA  2B17               	goto	l3949
 10768  02DB  0857               	movf	_lastDetected,w
 10769  02DC  1D03               	btfss	3,2
 10770  02DD  2B17               	goto	l3949
 10771                           
 10772                           ;beat.c: 83:         detected = 1;
 10773  02DE  01D9               	clrf	_detected
 10774  02DF  0AD9               	incf	_detected,f
 10775                           
 10776                           ;beat.c: 86:         delay = 100;
 10777  02E0  3064               	movlw	100
 10778  02E1  0141               	movlb	1	; select bank1
 10779  02E2  00DA               	movwf	_delay^(0+128)
 10780  02E3  3000               	movlw	0
 10781  02E4  00DB               	movwf	(_delay^(0+128)+1)
 10782                           
 10783                           ;beat.c: 89:         time_t offset = CLOCK_getTime() - lastBeat;
 10784  02E5  318E  2637  3182   	fcall	_CLOCK_getTime
 10785  02E8  0140               	movlb	0	; select bank0
 10786  02E9  084D               	movf	_lastBeat,w
 10787  02EA  0220               	subwf	?_CLOCK_getTime,w
 10788  02EB  00AA               	movwf	BEAT_task@offset
 10789  02EC  084E               	movf	_lastBeat+1,w
 10790  02ED  3B21               	subwfb	?_CLOCK_getTime+1,w
 10791  02EE  00AB               	movwf	BEAT_task@offset+1
 10792                           
 10793                           ;beat.c: 91:         lastBeat = CLOCK_getTime();
 10794  02EF  318E  2637  3182   	fcall	_CLOCK_getTime
 10795  02F2  0140               	movlb	0	; select bank0
 10796  02F3  0821               	movf	?_CLOCK_getTime+1,w
 10797  02F4  00CE               	movwf	_lastBeat+1
 10798  02F5  0820               	movf	?_CLOCK_getTime,w
 10799  02F6  00CD               	movwf	_lastBeat
 10800                           
 10801                           ;beat.c: 93:         if (offset < 150)
 10802  02F7  3000               	movlw	0
 10803  02F8  022B               	subwf	BEAT_task@offset+1,w
 10804  02F9  3096               	movlw	150
 10805  02FA  1903               	skipnz
 10806  02FB  022A               	subwf	BEAT_task@offset,w
 10807  02FC  1803               	skipnc
 10808  02FD  2B04               	goto	l3947
 10809                           
 10810                           ;beat.c: 94:             bpm = 400;
 10811  02FE  3090               	movlw	144
 10812  02FF  0141               	movlb	1	; select bank1
 10813  0300  00BE               	movwf	_bpm^(0+128)
 10814  0301  3001               	movlw	1
 10815  0302  00BF               	movwf	(_bpm^(0+128)+1)
 10816  0303  2B17               	goto	l3949
 10817  0304                     l3947:	
 10818                           
 10819                           ;beat.c: 96:             bpm = 60 * 1000 / offset;
 10820  0304  082B               	movf	BEAT_task@offset+1,w
 10821  0305  00A1               	movwf	___lwdiv@divisor+1
 10822  0306  082A               	movf	BEAT_task@offset,w
 10823  0307  00A0               	movwf	___lwdiv@divisor
 10824  0308  3060               	movlw	96
 10825  0309  00A2               	movwf	___lwdiv@dividend
 10826  030A  30EA               	movlw	234
 10827  030B  00A3               	movwf	___lwdiv@dividend+1
 10828  030C  3186  2638  3182   	fcall	___lwdiv
 10829  030F  0140               	movlb	0	; select bank0
 10830  0310  0821               	movf	?___lwdiv+1,w
 10831  0311  0141               	movlb	1	; select bank1
 10832  0312  00BF               	movwf	(_bpm+1)^(0+128)
 10833  0313  0140               	movlb	0	; select bank0
 10834  0314  0820               	movf	?___lwdiv,w
 10835  0315  0141               	movlb	1	; select bank1
 10836  0316  00BE               	movwf	_bpm^(0+128)
 10837  0317                     l3949:	
 10838                           
 10839                           ;beat.c: 102:     lastDetected = thresholdExceeded;
 10840  0317  0140               	movlb	0	; select bank0
 10841  0318  0858               	movf	_thresholdExceeded,w
 10842  0319  00A8               	movwf	??_BEAT_task
 10843  031A  0828               	movf	??_BEAT_task,w
 10844  031B  00D7               	movwf	_lastDetected
 10845                           
 10846                           ;beat.c: 103:     thresholdExceeded = 0;
 10847  031C  01D8               	clrf	_thresholdExceeded
 10848                           
 10849                           ;beat.c: 105:     if (thresholdCount > 3) {
 10850  031D  0141               	movlb	1	; select bank1
 10851  031E  083B               	movf	(_thresholdCount+1)^(0+128),w
 10852  031F  3A80               	xorlw	128
 10853  0320  0140               	movlb	0	; select bank0
 10854  0321  00A8               	movwf	??_BEAT_task
 10855  0322  3080               	movlw	128
 10856  0323  0228               	subwf	??_BEAT_task,w
 10857  0324  1D03               	skipz
 10858  0325  2B29               	goto	u2345
 10859  0326  3004               	movlw	4
 10860  0327  0141               	movlb	1	; select bank1
 10861  0328  023A               	subwf	_thresholdCount^(0+128),w
 10862  0329                     u2345:	
 10863  0329  1C03               	skipc
 10864  032A  2B42               	goto	l3963
 10865                           
 10866                           ;beat.c: 106:         threshold += 1;
 10867  032B  3001               	movlw	1
 10868  032C  0140               	movlb	0	; select bank0
 10869  032D  07EB               	addwf	_threshold,f
 10870  032E  3000               	movlw	0
 10871  032F  3DEC               	addwfc	_threshold+1,f
 10872                           
 10873                           ;beat.c: 107:         ADCC_SetUpperThreshold(threshold);
 10874  0330  086C               	movf	_threshold+1,w
 10875  0331  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 10876  0332  086B               	movf	_threshold,w
 10877  0333  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 10878  0334  318E  2656  3182   	fcall	_ADCC_SetUpperThreshold
 10879                           
 10880                           ;beat.c: 108:         thresholdCount = 0;
 10881  0337  0141               	movlb	1	; select bank1
 10882  0338  01BA               	clrf	_thresholdCount^(0+128)
 10883  0339  01BB               	clrf	(_thresholdCount+1)^(0+128)
 10884                           
 10885                           ;beat.c: 111:         lastBeat = CLOCK_getTime();
 10886  033A  318E  2637         	fcall	_CLOCK_getTime
 10887  033C  0140               	movlb	0	; select bank0
 10888  033D  0821               	movf	?_CLOCK_getTime+1,w
 10889  033E  00CE               	movwf	_lastBeat+1
 10890  033F  0820               	movf	?_CLOCK_getTime,w
 10891  0340  00CD               	movwf	_lastBeat
 10892                           
 10893                           ;beat.c: 112:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 10894  0341  0008               	return
 10895  0342                     l3963:	
 10896  0342  318E  2637  3182   	fcall	_CLOCK_getTime
 10897  0345  0140               	movlb	0	; select bank0
 10898  0346  084D               	movf	_lastBeat,w
 10899  0347  0220               	subwf	?_CLOCK_getTime,w
 10900  0348  00A8               	movwf	??_BEAT_task
 10901  0349  084E               	movf	_lastBeat+1,w
 10902  034A  3B21               	subwfb	?_CLOCK_getTime+1,w
 10903  034B  00A9               	movwf	??_BEAT_task+1
 10904  034C  3003               	movlw	3
 10905  034D  0229               	subwf	??_BEAT_task+1,w
 10906  034E  30E9               	movlw	233
 10907  034F  1903               	skipnz
 10908  0350  0228               	subwf	??_BEAT_task,w
 10909  0351  1C03               	skipc
 10910  0352  0008               	return
 10911                           
 10912                           ;beat.c: 113:         threshold -= 1;
 10913  0353  3001               	movlw	1
 10914  0354  02EB               	subwf	_threshold,f
 10915  0355  3000               	movlw	0
 10916  0356  3BEC               	subwfb	_threshold+1,f
 10917                           
 10918                           ;beat.c: 114:         ADCC_SetUpperThreshold(threshold);
 10919  0357  086C               	movf	_threshold+1,w
 10920  0358  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 10921  0359  086B               	movf	_threshold,w
 10922  035A  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 10923  035B  318E  2656         	fcall	_ADCC_SetUpperThreshold
 10924  035D  0008               	return
 10925  035E                     __end_of_BEAT_task:	
 10926                           
 10927                           	psect	text39
 10928  0638                     __ptext39:	
 10929 ;; *************** function ___lwdiv *****************
 10930 ;; Defined at:
 10931 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;  divisor         2    0[BANK0 ] unsigned int 
 10934 ;;  dividend        2    2[BANK0 ] unsigned int 
 10935 ;; Auto vars:     Size  Location     Type
 10936 ;;  quotient        2    6[BANK0 ] unsigned int 
 10937 ;;  counter         1    5[BANK0 ] unsigned char 
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  2    0[BANK0 ] unsigned int 
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10947 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10948 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10950 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10951 ;;Total ram usage:        8 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:    4
 10954 ;; This function calls:
 10955 ;;		Nothing
 10956 ;; This function is called by:
 10957 ;;		_TM1650_fastPrintNum
 10958 ;;		_BEAT_task
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           
 10963                           ;psect for function ___lwdiv
 10964  0638                     ___lwdiv:	
 10965                           
 10966                           ;incstack = 0
 10967                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10968  0638  0140               	movlb	0	; select bank0
 10969  0639  01A6               	clrf	___lwdiv@quotient
 10970  063A  01A7               	clrf	___lwdiv@quotient+1
 10971  063B  0820               	movf	___lwdiv@divisor,w
 10972  063C  0421               	iorwf	___lwdiv@divisor+1,w
 10973  063D  1903               	btfsc	3,2
 10974  063E  2E68               	goto	l3561
 10975  063F  01A5               	clrf	___lwdiv@counter
 10976  0640  0AA5               	incf	___lwdiv@counter,f
 10977  0641                     l3549:	
 10978  0641  1BA1               	btfsc	___lwdiv@divisor+1,7
 10979  0642  2E4D               	goto	l3551
 10980  0643  3001               	movlw	1
 10981  0644                     u2085:	
 10982  0644  35A0               	lslf	___lwdiv@divisor,f
 10983  0645  0DA1               	rlf	___lwdiv@divisor+1,f
 10984  0646  0B89               	decfsz	9,f
 10985  0647  2E44               	goto	u2085
 10986  0648  3001               	movlw	1
 10987  0649  00A4               	movwf	??___lwdiv
 10988  064A  0824               	movf	??___lwdiv,w
 10989  064B  07A5               	addwf	___lwdiv@counter,f
 10990  064C  2E41               	goto	l3549
 10991  064D                     l3551:	
 10992  064D  3001               	movlw	1
 10993  064E                     u2105:	
 10994  064E  35A6               	lslf	___lwdiv@quotient,f
 10995  064F  0DA7               	rlf	___lwdiv@quotient+1,f
 10996  0650  0B89               	decfsz	9,f
 10997  0651  2E4E               	goto	u2105
 10998  0652  0821               	movf	___lwdiv@divisor+1,w
 10999  0653  0223               	subwf	___lwdiv@dividend+1,w
 11000  0654  1D03               	skipz
 11001  0655  2E58               	goto	u2115
 11002  0656  0820               	movf	___lwdiv@divisor,w
 11003  0657  0222               	subwf	___lwdiv@dividend,w
 11004  0658                     u2115:	
 11005  0658  1C03               	skipc
 11006  0659  2E5F               	goto	l3557
 11007  065A  0820               	movf	___lwdiv@divisor,w
 11008  065B  02A2               	subwf	___lwdiv@dividend,f
 11009  065C  0821               	movf	___lwdiv@divisor+1,w
 11010  065D  3BA3               	subwfb	___lwdiv@dividend+1,f
 11011  065E  1426               	bsf	___lwdiv@quotient,0
 11012  065F                     l3557:	
 11013  065F  3001               	movlw	1
 11014  0660                     u2125:	
 11015  0660  36A1               	lsrf	___lwdiv@divisor+1,f
 11016  0661  0CA0               	rrf	___lwdiv@divisor,f
 11017  0662  0B89               	decfsz	9,f
 11018  0663  2E60               	goto	u2125
 11019  0664  3001               	movlw	1
 11020  0665  02A5               	subwf	___lwdiv@counter,f
 11021  0666  1D03               	btfss	3,2
 11022  0667  2E4D               	goto	l3551
 11023  0668                     l3561:	
 11024  0668  0827               	movf	___lwdiv@quotient+1,w
 11025  0669  00A1               	movwf	?___lwdiv+1
 11026  066A  0826               	movf	___lwdiv@quotient,w
 11027  066B  00A0               	movwf	?___lwdiv
 11028  066C  0008               	return
 11029  066D                     __end_of___lwdiv:	
 11030                           
 11031                           	psect	text40
 11032  0E19                     __ptext40:	
 11033 ;; *************** function _TM1650_isEnabled *****************
 11034 ;; Defined at:
 11035 ;;		line 70 in file "tm1650.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      _Bool 
 11042 ;; Registers used:
 11043 ;;		wreg
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11053 ;;Total ram usage:        0 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:    4
 11056 ;; This function calls:
 11057 ;;		Nothing
 11058 ;; This function is called by:
 11059 ;;		_BEAT_task
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           
 11064                           ;psect for function _TM1650_isEnabled
 11065  0E19                     _TM1650_isEnabled:	
 11066                           
 11067                           ;tm1650.c: 71:     return isOn;
 11068                           
 11069                           ;incstack = 0
 11070                           ; Regs used in _TM1650_isEnabled: [wreg]
 11071  0E19  0140               	movlb	0	; select bank0
 11072  0E1A  085E               	movf	_isOn,w
 11073  0E1B  0008               	return
 11074  0E1C                     __end_of_TM1650_isEnabled:	
 11075                           
 11076                           	psect	text41
 11077  0E37                     __ptext41:	
 11078 ;; *************** function _CLOCK_getTime *****************
 11079 ;; Defined at:
 11080 ;;		line 17 in file "clock.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;		None
 11083 ;; Auto vars:     Size  Location     Type
 11084 ;;		None
 11085 ;; Return value:  Size  Location     Type
 11086 ;;                  2    0[BANK0 ] unsigned short 
 11087 ;; Registers used:
 11088 ;;		wreg
 11089 ;; Tracked objects:
 11090 ;;		On entry : 0/0
 11091 ;;		On exit  : 0/0
 11092 ;;		Unchanged: 0/0
 11093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11094 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11097 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11098 ;;Total ram usage:        2 bytes
 11099 ;; Hardware stack levels used:    1
 11100 ;; Hardware stack levels required when called:    4
 11101 ;; This function calls:
 11102 ;;		Nothing
 11103 ;; This function is called by:
 11104 ;;		_LED_task
 11105 ;;		_BUTTONS_task
 11106 ;;		_CONTROLLER_task
 11107 ;;		_BEAT_task
 11108 ;; This function uses a non-reentrant model
 11109 ;;
 11110                           
 11111                           
 11112                           ;psect for function _CLOCK_getTime
 11113  0E37                     _CLOCK_getTime:	
 11114                           
 11115                           ;clock.c: 18:     return currentTime;
 11116                           
 11117                           ;incstack = 0
 11118                           ; Regs used in _CLOCK_getTime: [wreg]
 11119  0E37  0140               	movlb	0	; select bank0
 11120  0E38  0854               	movf	_currentTime+1,w
 11121  0E39  00A1               	movwf	?_CLOCK_getTime+1
 11122  0E3A  0853               	movf	_currentTime,w
 11123  0E3B  00A0               	movwf	?_CLOCK_getTime
 11124  0E3C  0008               	return
 11125  0E3D                     __end_of_CLOCK_getTime:	
 11126                           
 11127                           	psect	text42
 11128  0EE5                     __ptext42:	
 11129 ;; *************** function _BEAT_init *****************
 11130 ;; Defined at:
 11131 ;;		line 31 in file "beat.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;		None
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;		None
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      void 
 11138 ;; Registers used:
 11139 ;;		wreg, status,2, status,0, pclath, cstack
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11149 ;;Total ram usage:        0 bytes
 11150 ;; Hardware stack levels used:    1
 11151 ;; Hardware stack levels required when called:    5
 11152 ;; This function calls:
 11153 ;;		_ADCC_SetADTIInterruptHandler
 11154 ;;		_ADCC_SetUpperThreshold
 11155 ;;		_ADCC_StartConversion
 11156 ;; This function is called by:
 11157 ;;		_main
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           
 11162                           ;psect for function _BEAT_init
 11163  0EE5                     _BEAT_init:	
 11164                           
 11165                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 11166                           
 11167                           ;incstack = 0
 11168                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 11169  0EE5  0140               	movlb	0	; select bank0
 11170  0EE6  086C               	movf	_threshold+1,w
 11171  0EE7  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 11172  0EE8  086B               	movf	_threshold,w
 11173  0EE9  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 11174  0EEA  318E  2656  318E   	fcall	_ADCC_SetUpperThreshold
 11175                           
 11176                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 11177  0EED  301C               	movlw	low _adcThresholdHandler
 11178  0EEE  0140               	movlb	0	; select bank0
 11179  0EEF  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 11180  0EF0  300E               	movlw	high _adcThresholdHandler
 11181  0EF1  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 11182  0EF2  318E  264D  318E   	fcall	_ADCC_SetADTIInterruptHandler
 11183                           
 11184                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 11185  0EF5  300F               	movlw	15
 11186  0EF6  318E  265F         	fcall	_ADCC_StartConversion
 11187  0EF8  0008               	return
 11188  0EF9                     __end_of_BEAT_init:	
 11189                           
 11190                           	psect	text43
 11191  0E5F                     __ptext43:	
 11192 ;; *************** function _ADCC_StartConversion *****************
 11193 ;; Defined at:
 11194 ;;		line 121 in file "mcc_generated_files/adcc.c"
 11195 ;; Parameters:    Size  Location     Type
 11196 ;;  channel         1    wreg     enum E10867
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;  channel         1    0[BANK0 ] enum E10867
 11199 ;; Return value:  Size  Location     Type
 11200 ;;                  1    wreg      void 
 11201 ;; Registers used:
 11202 ;;		wreg
 11203 ;; Tracked objects:
 11204 ;;		On entry : 0/0
 11205 ;;		On exit  : 0/0
 11206 ;;		Unchanged: 0/0
 11207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11211 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11212 ;;Total ram usage:        1 bytes
 11213 ;; Hardware stack levels used:    1
 11214 ;; Hardware stack levels required when called:    4
 11215 ;; This function calls:
 11216 ;;		Nothing
 11217 ;; This function is called by:
 11218 ;;		_BEAT_init
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           
 11223                           ;psect for function _ADCC_StartConversion
 11224  0E5F                     _ADCC_StartConversion:	
 11225                           
 11226                           ;incstack = 0
 11227                           ; Regs used in _ADCC_StartConversion: [wreg]
 11228                           ;ADCC_StartConversion@channel stored from wreg
 11229  0E5F  0140               	movlb	0	; select bank0
 11230  0E60  00A0               	movwf	ADCC_StartConversion@channel
 11231                           
 11232                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 11233  0E61  0820               	movf	ADCC_StartConversion@channel,w
 11234  0E62  0141               	movlb	1	; select bank1
 11235  0E63  009F               	movwf	31	;volatile
 11236                           
 11237                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 11238  0E64  0142               	movlb	2	; select bank2
 11239  0E65  1791               	bsf	17,7	;volatile
 11240                           
 11241                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 11242  0E66  1411               	bsf	17,0	;volatile
 11243  0E67  0008               	return
 11244  0E68                     __end_of_ADCC_StartConversion:	
 11245                           
 11246                           	psect	text44
 11247  0E56                     __ptext44:	
 11248 ;; *************** function _ADCC_SetUpperThreshold *****************
 11249 ;; Defined at:
 11250 ;;		line 251 in file "mcc_generated_files/adcc.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;		None
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  1    wreg      void 
 11257 ;; Registers used:
 11258 ;;		wreg, status,2
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11268 ;;Total ram usage:        2 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:    4
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_BEAT_init
 11275 ;;		_BEAT_task
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           
 11280                           ;psect for function _ADCC_SetUpperThreshold
 11281  0E56                     _ADCC_SetUpperThreshold:	
 11282                           
 11283                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 11284                           
 11285                           ;incstack = 0
 11286                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 11287  0E56  0140               	movlb	0	; select bank0
 11288  0E57  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 11289  0E58  0141               	movlb	1	; select bank1
 11290  0E59  008F               	movwf	15	;volatile
 11291                           
 11292                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 11293  0E5A  0140               	movlb	0	; select bank0
 11294  0E5B  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 11295  0E5C  0141               	movlb	1	; select bank1
 11296  0E5D  008E               	movwf	14	;volatile
 11297  0E5E  0008               	return
 11298  0E5F                     __end_of_ADCC_SetUpperThreshold:	
 11299                           
 11300                           	psect	text45
 11301  0E4D                     __ptext45:	
 11302 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 11303 ;; Defined at:
 11304 ;;		line 317 in file "mcc_generated_files/adcc.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11307 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;		None
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1    wreg      void 
 11312 ;; Registers used:
 11313 ;;		wreg
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11319 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11322 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11323 ;;Total ram usage:        2 bytes
 11324 ;; Hardware stack levels used:    1
 11325 ;; Hardware stack levels required when called:    4
 11326 ;; This function calls:
 11327 ;;		Nothing
 11328 ;; This function is called by:
 11329 ;;		_ADCC_Initialize
 11330 ;;		_BEAT_init
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           
 11335                           ;psect for function _ADCC_SetADTIInterruptHandler
 11336  0E4D                     _ADCC_SetADTIInterruptHandler:	
 11337                           
 11338                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 11339                           
 11340                           ;incstack = 0
 11341                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 11342  0E4D  0140               	movlb	0	; select bank0
 11343  0E4E  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 11344  0E4F  0141               	movlb	1	; select bank1
 11345  0E50  00CD               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128)
 11346  0E51  0140               	movlb	0	; select bank0
 11347  0E52  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 11348  0E53  0141               	movlb	1	; select bank1
 11349  0E54  00CC               	movwf	_ADCC_ADTI_InterruptHandler^(0+128)
 11350  0E55  0008               	return
 11351  0E56                     __end_of_ADCC_SetADTIInterruptHandler:	
 11352                           
 11353                           	psect	intentry
 11354  0004                     __pintentry:	
 11355 ;; *************** function _INTERRUPT_InterruptManager *****************
 11356 ;; Defined at:
 11357 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;		None
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;		None
 11362 ;; Return value:  Size  Location     Type
 11363 ;;                  1    wreg      void 
 11364 ;; Registers used:
 11365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11366 ;; Tracked objects:
 11367 ;;		On entry : 0/0
 11368 ;;		On exit  : 0/0
 11369 ;;		Unchanged: 0/0
 11370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11375 ;;Total ram usage:        0 bytes
 11376 ;; Hardware stack levels used:    1
 11377 ;; Hardware stack levels required when called:    3
 11378 ;; This function calls:
 11379 ;;		Absolute function
 11380 ;;		_ADCC_ThresholdISR
 11381 ;;		_DMX_ISR
 11382 ;;		_EUSART1_Receive_ISR
 11383 ;;		_EUSART1_Transmit_ISR
 11384 ;;		_I2C1_BusCollisionISR
 11385 ;;		_I2C1_ISR
 11386 ;;		_TMR0_ISR
 11387 ;; This function is called by:
 11388 ;;		Interrupt level 1
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392  0004                     _INTERRUPT_InterruptManager:	
 11393                           
 11394                           ;incstack = 0
 11395  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11396                           
 11397                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11398  0005  3180               	pagesel	$
 11399                           
 11400                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 11401  0006  014E               	movlb	14	; select bank14
 11402  0007  1A96               	btfsc	22,5	;volatile
 11403  0008  1E8C               	btfss	12,5	;volatile
 11404  0009  280E               	goto	i1l280
 11405                           
 11406                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 11407  000A  318E  26C7  3180   	fcall	_TMR0_ISR
 11408                           
 11409                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 11410  000D  2837               	goto	i1l294
 11411  000E                     i1l280:	
 11412                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 11413                           
 11414  000E  1F0B               	btfss	11,6	;volatile
 11415  000F  2837               	goto	i1l294
 11416                           
 11417                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 11418  0010  1899               	btfsc	25,1	;volatile
 11419  0011  1C8F               	btfss	15,1	;volatile
 11420  0012  2817               	goto	i1l283
 11421                           
 11422                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 11423  0013  318E  2616  3180   	fcall	_I2C1_BusCollisionISR
 11424                           
 11425                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 11426  0016  2837               	goto	i1l294
 11427  0017                     i1l283:	
 11428                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 11429                           
 11430  0017  1819               	btfsc	25,0	;volatile
 11431  0018  1C0F               	btfss	15,0	;volatile
 11432  0019  281E               	goto	i1l285
 11433                           
 11434                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 11435  001A  3180  2089  3180   	fcall	_I2C1_ISR
 11436                           
 11437                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 11438  001D  2837               	goto	i1l294
 11439  001E                     i1l285:	
 11440                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 11441                           
 11442  001E  1A19               	btfsc	25,4	;volatile
 11443  001F  1E0F               	btfss	15,4	;volatile
 11444  0020  2828               	goto	i1l287
 11445                           
 11446                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 11447  0021  0141               	movlb	1	; select bank1
 11448  0022  0859               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128),w
 11449  0023  008A               	movwf	10
 11450  0024  0858               	movf	_EUSART1_TxDefaultInterruptHandler^(0+128),w
 11451  0025  000A               	callw
 11452  0026  3180               	pagesel	$
 11453                           
 11454                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 11455  0027  2837               	goto	i1l294
 11456  0028                     i1l287:	
 11457                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 11458                           
 11459  0028  1A99               	btfsc	25,5	;volatile
 11460  0029  1E8F               	btfss	15,5	;volatile
 11461  002A  2832               	goto	i1l289
 11462                           
 11463                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 11464  002B  0141               	movlb	1	; select bank1
 11465  002C  0857               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
 11466  002D  008A               	movwf	10
 11467  002E  0856               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
 11468  002F  000A               	callw
 11469  0030  3180               	pagesel	$
 11470                           
 11471                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 11472  0031  2837               	goto	i1l294
 11473  0032                     i1l289:	
 11474                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 11475                           
 11476  0032  1897               	btfsc	23,1	;volatile
 11477  0033  1C8D               	btfss	13,1	;volatile
 11478  0034  2837               	goto	i1l294
 11479                           
 11480                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 11481  0035  318E  26BA         	fcall	_ADCC_ThresholdISR
 11482  0037                     i1l294:	
 11483                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 11484                           
 11485  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11486  0038  0009               	retfie
 11487  0039                     __end_of_INTERRUPT_InterruptManager:	
 11488                           
 11489                           	psect	text47
 11490  0EC7                     __ptext47:	
 11491 ;; *************** function _TMR0_ISR *****************
 11492 ;; Defined at:
 11493 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;		None
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;		None
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      void 
 11500 ;; Registers used:
 11501 ;;		wreg, status,2, status,0, pclath, cstack
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11511 ;;Total ram usage:        0 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; Hardware stack levels required when called:    1
 11514 ;; This function calls:
 11515 ;;		Absolute function
 11516 ;;		_CLOCK_timerCallback
 11517 ;;		_TMR0_DefaultInterruptHandler
 11518 ;; This function is called by:
 11519 ;;		_INTERRUPT_InterruptManager
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           
 11524                           ;psect for function _TMR0_ISR
 11525  0EC7                     _TMR0_ISR:	
 11526                           
 11527                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 11528                           
 11529                           ;incstack = 0
 11530                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11531  0EC7  014E               	movlb	14	; select bank14
 11532  0EC8  128C               	bcf	12,5	;volatile
 11533                           
 11534                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 11535  0EC9  0141               	movlb	1	; select bank1
 11536  0ECA  084E               	movf	_TMR0_InterruptHandler^(0+128),w
 11537  0ECB  044F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 11538  0ECC  1903               	btfsc	3,2
 11539  0ECD  0008               	return
 11540                           
 11541                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 11542  0ECE  084F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 11543  0ECF  008A               	movwf	10
 11544  0ED0  084E               	movf	_TMR0_InterruptHandler^(0+128),w
 11545  0ED1  000A               	callw
 11546  0ED2  318E               	pagesel	$
 11547  0ED3  0008               	return
 11548  0ED4                     __end_of_TMR0_ISR:	
 11549                           
 11550                           	psect	text48
 11551  0E31                     __ptext48:	
 11552 ;; *************** function _CLOCK_timerCallback *****************
 11553 ;; Defined at:
 11554 ;;		line 21 in file "clock.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;		None
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;		None
 11559 ;; Return value:  Size  Location     Type
 11560 ;;                  1    wreg      void 
 11561 ;; Registers used:
 11562 ;;		wreg
 11563 ;; Tracked objects:
 11564 ;;		On entry : 0/0
 11565 ;;		On exit  : 0/0
 11566 ;;		Unchanged: 0/0
 11567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11572 ;;Total ram usage:        0 bytes
 11573 ;; Hardware stack levels used:    1
 11574 ;; This function calls:
 11575 ;;		Nothing
 11576 ;; This function is called by:
 11577 ;;		_CLOCK_init
 11578 ;;		_TMR0_ISR
 11579 ;; This function uses a non-reentrant model
 11580 ;;
 11581                           
 11582                           
 11583                           ;psect for function _CLOCK_timerCallback
 11584  0E31                     _CLOCK_timerCallback:	
 11585                           
 11586                           ;clock.c: 22:     currentTime++;
 11587                           
 11588                           ;incstack = 0
 11589                           ; Regs used in _CLOCK_timerCallback: [wreg]
 11590  0E31  3001               	movlw	1
 11591  0E32  0140               	movlb	0	; select bank0
 11592  0E33  07D3               	addwf	_currentTime,f
 11593  0E34  3000               	movlw	0
 11594  0E35  3DD4               	addwfc	_currentTime+1,f
 11595  0E36  0008               	return
 11596  0E37                     __end_of_CLOCK_timerCallback:	
 11597                           
 11598                           	psect	text49
 11599  0E12                     __ptext49:	
 11600 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 11601 ;; Defined at:
 11602 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;		None
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;		None
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      void 
 11609 ;; Registers used:
 11610 ;;		None
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11620 ;;Total ram usage:        0 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; This function calls:
 11623 ;;		Nothing
 11624 ;; This function is called by:
 11625 ;;		_TMR0_Initialize
 11626 ;;		_TMR0_ISR
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630                           
 11631                           ;psect for function _TMR0_DefaultInterruptHandler
 11632  0E12                     _TMR0_DefaultInterruptHandler:	
 11633                           
 11634                           ;incstack = 0
 11635                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 11636  0E12  0008               	return
 11637  0E13                     __end_of_TMR0_DefaultInterruptHandler:	
 11638                           
 11639                           	psect	text50
 11640  0089                     __ptext50:	
 11641 ;; *************** function _I2C1_ISR *****************
 11642 ;; Defined at:
 11643 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;		None
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;		None
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  1    wreg      void 
 11650 ;; Registers used:
 11651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11660 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11661 ;;Total ram usage:        4 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:    1
 11664 ;; This function calls:
 11665 ;;		_I2C1_FunctionComplete
 11666 ;;		_I2C1_Stop
 11667 ;; This function is called by:
 11668 ;;		_INTERRUPT_InterruptManager
 11669 ;; This function uses a non-reentrant model
 11670 ;;
 11671                           
 11672                           
 11673                           ;psect for function _I2C1_ISR
 11674  0089                     _I2C1_ISR:	
 11675                           
 11676                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 11677                           
 11678                           ;incstack = 0
 11679                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11680  0089  014E               	movlb	14	; select bank14
 11681  008A  100F               	bcf	15,0	;volatile
 11682                           
 11683                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 11684  008B  0143               	movlb	3	; select bank3
 11685  008C  1F90               	btfss	16,7	;volatile
 11686  008D  29A5               	goto	i1l3185
 11687                           
 11688                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 11689  008E  1390               	bcf	16,7	;volatile
 11690                           
 11691                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 11692  008F  0140               	movlb	0	; select bank0
 11693  0090  01E5               	clrf	_i2c1_state
 11694                           
 11695                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 11696  0091  0862               	movf	_p_i2c1_current,w
 11697  0092  3E02               	addlw	2
 11698  0093  0086               	movwf	6
 11699  0094  0187               	clrf	7
 11700  0095  0801               	movf	1,w
 11701  0096  0086               	movwf	6
 11702  0097  0187               	clrf	7
 11703  0098  0181               	clrf	1
 11704  0099  0A81               	incf	1,f
 11705                           
 11706                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 11707  009A  01E2               	clrf	_p_i2c1_current
 11708  009B  0008               	return
 11709  009C                     i1l402:	
 11710                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 11711                           
 11712                           
 11713                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 11714  009C  18CA               	btfsc	_i2c1_object+2,1
 11715  009D  0008               	return
 11716                           
 11717                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 11718  009E  0849               	movf	low ((_i2c1_object| 0+1)),w
 11719  009F  00F8               	movwf	??_I2C1_ISR
 11720  00A0  0878               	movf	??_I2C1_ISR,w
 11721  00A1  00E2               	movwf	_p_i2c1_current
 11722                           
 11723                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 11724  00A2  0849               	movf	low ((_i2c1_object| 0+1)),w
 11725  00A3  0086               	movwf	6
 11726  00A4  0187               	clrf	7
 11727  00A5  0801               	movf	1,w
 11728  00A6  00F8               	movwf	??_I2C1_ISR
 11729  00A7  0878               	movf	??_I2C1_ISR,w
 11730  00A8  00E4               	movwf	_i2c1_trb_count
 11731                           
 11732                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 11733  00A9  0849               	movf	low ((_i2c1_object| 0+1)),w
 11734  00AA  0086               	movwf	6
 11735  00AB  0187               	clrf	7
 11736  00AC  3F41               	moviw [1]fsr1
 11737  00AD  00E3               	movwf	_p_i2c1_trb_current
 11738                           
 11739                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 11740  00AE  3003               	movlw	3
 11741  00AF  00F8               	movwf	??_I2C1_ISR
 11742  00B0  0878               	movf	??_I2C1_ISR,w
 11743  00B1  07C9               	addwf	low ((_i2c1_object| 0+1)),f
 11744                           
 11745                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 11746  00B2  0849               	movf	low ((_i2c1_object| 0+1)),w
 11747  00B3  3A6B               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 11748  00B4  1D03               	skipz
 11749  00B5  28BA               	goto	i1l3073
 11750                           
 11751                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 11752  00B6  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 11753  00B7  00F8               	movwf	??_I2C1_ISR
 11754  00B8  0878               	movf	??_I2C1_ISR,w
 11755  00B9  00C9               	movwf	low ((_i2c1_object| 0+1))
 11756  00BA                     i1l3073:	
 11757                           
 11758                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 11759  00BA  104A               	bcf	_i2c1_object+2,0
 11760                           
 11761                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 11762  00BB  0849               	movf	low ((_i2c1_object| 0+1)),w
 11763  00BC  0648               	xorwf	_i2c1_object,w
 11764  00BD  1903               	btfsc	3,2
 11765                           
 11766                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 11767  00BE  14CA               	bsf	_i2c1_object+2,1
 11768                           
 11769                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 11770                           
 11771                           ;mcc_generated_files/i2c1.c: 290:                 }
 11772  00BF  0143               	movlb	3	; select bank3
 11773  00C0  1411               	bsf	17,0	;volatile
 11774  00C1                     i1l3077:	
 11775                           
 11776                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 11777  00C1  3002               	movlw	2
 11778  00C2  00F8               	movwf	??_I2C1_ISR
 11779  00C3  0878               	movf	??_I2C1_ISR,w
 11780  00C4  0140               	movlb	0	; select bank0
 11781  00C5  00E5               	movwf	_i2c1_state
 11782  00C6  0008               	return
 11783  00C7                     i1l407:	
 11784                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 11785                           
 11786  00C7  294E               	goto	i1l428
 11787  00C8                     i1l408:	
 11788                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 11789                           
 11790                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 11791                           
 11792                           
 11793                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 11794  00C8  0143               	movlb	3	; select bank3
 11795  00C9  1F11               	btfss	17,6	;volatile
 11796  00CA  28D4               	goto	i1l3085
 11797                           
 11798                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 11799  00CB  3001               	movlw	1
 11800  00CC  00F8               	movwf	??_I2C1_ISR
 11801  00CD  0878               	movf	??_I2C1_ISR,w
 11802  00CE  0140               	movlb	0	; select bank0
 11803  00CF  07CC               	addwf	_i2c1_object+4,f
 11804                           
 11805                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 11806  00D0  3004               	movlw	4
 11807  00D1  318F  2779         	fcall	_I2C1_Stop
 11808                           
 11809                           ;mcc_generated_files/i2c1.c: 319:             }
 11810  00D3  0008               	return
 11811  00D4                     i1l3085:	
 11812                           
 11813                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 11814  00D4  0875               	movf	I2C1_ISR@i2c_address+1,w
 11815  00D5  00F9               	movwf	??_I2C1_ISR+1
 11816  00D6  0874               	movf	I2C1_ISR@i2c_address,w
 11817  00D7  00F8               	movwf	??_I2C1_ISR
 11818  00D8  36F9               	lsrf	??_I2C1_ISR+1,f
 11819  00D9  0CF8               	rrf	??_I2C1_ISR,f
 11820  00DA  0878               	movf	??_I2C1_ISR,w
 11821  00DB  008C               	movwf	12	;volatile
 11822                           
 11823                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 11824  00DC  1C74               	btfss	I2C1_ISR@i2c_address,0
 11825  00DD  28E4               	goto	i1l3091
 11826                           
 11827                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 11828  00DE  300B               	movlw	11
 11829  00DF  00F8               	movwf	??_I2C1_ISR
 11830  00E0  0878               	movf	??_I2C1_ISR,w
 11831  00E1  0140               	movlb	0	; select bank0
 11832  00E2  00E5               	movwf	_i2c1_state
 11833                           
 11834                           ;mcc_generated_files/i2c1.c: 331:                 }
 11835  00E3  0008               	return
 11836  00E4                     i1l3091:	
 11837                           
 11838                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 11839  00E4  3003               	movlw	3
 11840  00E5  00F8               	movwf	??_I2C1_ISR
 11841  00E6  0878               	movf	??_I2C1_ISR,w
 11842  00E7  0140               	movlb	0	; select bank0
 11843  00E8  00E5               	movwf	_i2c1_state
 11844  00E9  0008               	return
 11845  00EA                     i1l413:	
 11846                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 11847                           
 11848                           
 11849                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 11850  00EA  0143               	movlb	3	; select bank3
 11851  00EB  1F11               	btfss	17,6	;volatile
 11852  00EC  28F6               	goto	i1l414
 11853                           
 11854                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 11855  00ED  3001               	movlw	1
 11856  00EE  00F8               	movwf	??_I2C1_ISR
 11857  00EF  0878               	movf	??_I2C1_ISR,w
 11858  00F0  0140               	movlb	0	; select bank0
 11859  00F1  07CC               	addwf	_i2c1_object+4,f
 11860                           
 11861                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 11862  00F2  3004               	movlw	4
 11863  00F3  318F  2779         	fcall	_I2C1_Stop
 11864                           
 11865                           ;mcc_generated_files/i2c1.c: 347:             }
 11866  00F5  0008               	return
 11867  00F6                     i1l414:	
 11868                           ;mcc_generated_files/i2c1.c: 348:             else
 11869                           
 11870                           
 11871                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 11872  00F6  1491               	bsf	17,1	;volatile
 11873                           
 11874                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 11875  00F7  0875               	movf	I2C1_ISR@i2c_address+1,w
 11876  00F8  00F9               	movwf	??_I2C1_ISR+1
 11877  00F9  0874               	movf	I2C1_ISR@i2c_address,w
 11878  00FA  00F8               	movwf	??_I2C1_ISR
 11879  00FB  0879               	movf	??_I2C1_ISR+1,w
 11880  00FC  00F8               	movwf	??_I2C1_ISR
 11881  00FD  01F9               	clrf	??_I2C1_ISR+1
 11882  00FE  3006               	movlw	6
 11883  00FF  0578               	andwf	??_I2C1_ISR,w
 11884  0100  00FA               	movwf	??_I2C1_ISR+2
 11885  0101  3000               	movlw	0
 11886  0102  0579               	andwf	??_I2C1_ISR+1,w
 11887  0103  00FB               	movwf	??_I2C1_ISR+3
 11888  0104  30F0               	movlw	240
 11889  0105  047A               	iorwf	??_I2C1_ISR+2,w
 11890  0106  00F4               	movwf	I2C1_ISR@i2c_address
 11891  0107  3000               	movlw	0
 11892  0108  047B               	iorwf	??_I2C1_ISR+3,w
 11893  0109  00F5               	movwf	I2C1_ISR@i2c_address+1
 11894                           
 11895                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 11896  010A  1474               	bsf	I2C1_ISR@i2c_address,0
 11897                           
 11898                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 11899  010B  0140               	movlb	0	; select bank0
 11900  010C  01DF               	clrf	I2C1_ISR@i2c_10bit_address_restart
 11901  010D  0ADF               	incf	I2C1_ISR@i2c_10bit_address_restart,f
 11902  010E  28C1               	goto	i1l3077
 11903  010F                     i1l3105:	
 11904                           
 11905                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 11906  010F  035F               	decf	I2C1_ISR@i2c_10bit_address_restart,w
 11907  0110  1903               	btfsc	3,2
 11908  0111  2923               	goto	i1l3125
 11909                           
 11910                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 11911  0112  0863               	movf	_p_i2c1_trb_current,w
 11912  0113  0086               	movwf	6
 11913  0114  0187               	clrf	7
 11914  0115  3F40               	moviw [0]fsr1
 11915  0116  00F4               	movwf	I2C1_ISR@i2c_address
 11916  0117  3F41               	moviw [1]fsr1
 11917  0118  00F5               	movwf	I2C1_ISR@i2c_address+1
 11918                           
 11919                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 11920  0119  0863               	movf	_p_i2c1_trb_current,w
 11921  011A  0086               	movwf	6
 11922  011B  0187               	clrf	7
 11923  011C  3F43               	moviw [3]fsr1
 11924  011D  00E1               	movwf	I2C1_ISR@pi2c_buf_ptr
 11925                           
 11926                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 11927  011E  0863               	movf	_p_i2c1_trb_current,w
 11928  011F  0086               	movwf	6
 11929  0120  0187               	clrf	7
 11930  0121  3F42               	moviw [2]fsr1
 11931  0122  00E0               	movwf	I2C1_ISR@i2c_bytes_left
 11932  0123                     i1l3125:	
 11933                           
 11934                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 11935  0123  0874               	movf	I2C1_ISR@i2c_address,w
 11936  0124  0143               	movlb	3	; select bank3
 11937  0125  008C               	movwf	12	;volatile
 11938                           
 11939                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 11940  0126  1C74               	btfss	I2C1_ISR@i2c_address,0
 11941  0127  28E4               	goto	i1l3091
 11942                           
 11943                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 11944  0128  3005               	movlw	5
 11945  0129  00F8               	movwf	??_I2C1_ISR
 11946  012A  0878               	movf	??_I2C1_ISR,w
 11947  012B  0140               	movlb	0	; select bank0
 11948  012C  00E5               	movwf	_i2c1_state
 11949                           
 11950                           ;mcc_generated_files/i2c1.c: 419:                 }
 11951  012D  0008               	return
 11952  012E                     i1l424:	
 11953                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 11954                           
 11955                           
 11956                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 11957  012E  0143               	movlb	3	; select bank3
 11958  012F  1F11               	btfss	17,6	;volatile
 11959  0130  293C               	goto	i1l3139
 11960                           
 11961                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 11962  0131  3001               	movlw	1
 11963  0132  00F8               	movwf	??_I2C1_ISR
 11964  0133  0878               	movf	??_I2C1_ISR,w
 11965  0134  0140               	movlb	0	; select bank0
 11966  0135  07CC               	addwf	_i2c1_object+4,f
 11967                           
 11968                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 11969  0136  0143               	movlb	3	; select bank3
 11970  0137  1311               	bcf	17,6	;volatile
 11971                           
 11972                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 11973  0138  3005               	movlw	5
 11974  0139  318F  2779         	fcall	_I2C1_Stop
 11975                           
 11976                           ;mcc_generated_files/i2c1.c: 442:             }
 11977  013B  0008               	return
 11978  013C                     i1l3139:	
 11979                           
 11980                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 11981  013C  3001               	movlw	1
 11982  013D  0140               	movlb	0	; select bank0
 11983  013E  02E0               	subwf	I2C1_ISR@i2c_bytes_left,f
 11984  013F  0A60               	incf	I2C1_ISR@i2c_bytes_left,w
 11985  0140  1D03               	btfss	3,2
 11986  0141  2951               	goto	i1l3147
 11987                           
 11988                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 11989  0142  3004               	movlw	4
 11990  0143  00F8               	movwf	??_I2C1_ISR
 11991  0144  0878               	movf	??_I2C1_ISR,w
 11992  0145  07E3               	addwf	_p_i2c1_trb_current,f
 11993                           
 11994                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 11995  0146  3001               	movlw	1
 11996  0147  02E4               	subwf	_i2c1_trb_count,f
 11997  0148  1D03               	btfss	3,2
 11998  0149  294E               	goto	i1l428
 11999                           
 12000                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12001  014A  3000               	movlw	0
 12002  014B  318F  2779         	fcall	_I2C1_Stop
 12003                           
 12004                           ;mcc_generated_files/i2c1.c: 457:                     }
 12005  014D  0008               	return
 12006  014E                     i1l428:	
 12007                           ;mcc_generated_files/i2c1.c: 458:                     else
 12008                           
 12009                           
 12010                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 12011  014E  0143               	movlb	3	; select bank3
 12012  014F  1491               	bsf	17,1	;volatile
 12013  0150  28C1               	goto	i1l3077
 12014  0151                     i1l3147:	
 12015                           
 12016                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 12017  0151  0861               	movf	I2C1_ISR@pi2c_buf_ptr,w
 12018  0152  0086               	movwf	6
 12019  0153  0187               	clrf	7
 12020  0154  0801               	movf	1,w
 12021  0155  0143               	movlb	3	; select bank3
 12022  0156  008C               	movwf	12	;volatile
 12023  0157  3001               	movlw	1
 12024  0158  00F8               	movwf	??_I2C1_ISR
 12025  0159  0878               	movf	??_I2C1_ISR,w
 12026  015A  0140               	movlb	0	; select bank0
 12027  015B  07E1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 12028  015C  0008               	return
 12029  015D                     i1l431:	
 12030                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 12031                           
 12032                           
 12033                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 12034  015D  0143               	movlb	3	; select bank3
 12035  015E  1F11               	btfss	17,6	;volatile
 12036  015F  296B               	goto	i1l432
 12037                           
 12038                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 12039  0160  3001               	movlw	1
 12040  0161  00F8               	movwf	??_I2C1_ISR
 12041  0162  0878               	movf	??_I2C1_ISR,w
 12042  0163  0140               	movlb	0	; select bank0
 12043  0164  07CC               	addwf	_i2c1_object+4,f
 12044                           
 12045                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12046  0165  3004               	movlw	4
 12047  0166  318F  2779         	fcall	_I2C1_Stop
 12048                           
 12049                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 12050  0168  0143               	movlb	3	; select bank3
 12051  0169  1311               	bcf	17,6	;volatile
 12052                           
 12053                           ;mcc_generated_files/i2c1.c: 495:             }
 12054  016A  0008               	return
 12055  016B                     i1l432:	
 12056                           ;mcc_generated_files/i2c1.c: 496:             else
 12057                           
 12058                           
 12059                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 12060  016B  1591               	bsf	17,3	;volatile
 12061                           
 12062                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 12063  016C  3008               	movlw	8
 12064  016D  00F8               	movwf	??_I2C1_ISR
 12065  016E  0878               	movf	??_I2C1_ISR,w
 12066  016F  0140               	movlb	0	; select bank0
 12067  0170  00E5               	movwf	_i2c1_state
 12068  0171  0008               	return
 12069  0172                     i1l3159:	
 12070                           
 12071                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 12072  0172  3008               	movlw	8
 12073  0173  00F8               	movwf	??_I2C1_ISR
 12074  0174  0878               	movf	??_I2C1_ISR,w
 12075  0175  00E5               	movwf	_i2c1_state
 12076                           
 12077                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 12078  0176  0143               	movlb	3	; select bank3
 12079  0177  1591               	bsf	17,3	;volatile
 12080                           
 12081                           ;mcc_generated_files/i2c1.c: 513:             break;
 12082  0178  0008               	return
 12083  0179                     i1l3163:	
 12084                           
 12085                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 12086  0179  0143               	movlb	3	; select bank3
 12087  017A  080C               	movf	12,w	;volatile
 12088  017B  00F8               	movwf	??_I2C1_ISR
 12089  017C  0140               	movlb	0	; select bank0
 12090  017D  0861               	movf	I2C1_ISR@pi2c_buf_ptr,w
 12091  017E  0086               	movwf	6
 12092  017F  0187               	clrf	7
 12093  0180  0878               	movf	??_I2C1_ISR,w
 12094  0181  0081               	movwf	1
 12095  0182  3001               	movlw	1
 12096  0183  00F8               	movwf	??_I2C1_ISR
 12097  0184  0878               	movf	??_I2C1_ISR,w
 12098  0185  07E1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 12099                           
 12100                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 12101  0186  3001               	movlw	1
 12102  0187  02E0               	subwf	I2C1_ISR@i2c_bytes_left,f
 12103  0188  1903               	btfsc	3,2
 12104  0189  2992               	goto	i1l436
 12105                           
 12106                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 12107  018A  0143               	movlb	3	; select bank3
 12108  018B  1291               	bcf	17,5	;volatile
 12109                           
 12110                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 12111  018C  3006               	movlw	6
 12112  018D  00F8               	movwf	??_I2C1_ISR
 12113  018E  0878               	movf	??_I2C1_ISR,w
 12114  018F  0140               	movlb	0	; select bank0
 12115  0190  00E5               	movwf	_i2c1_state
 12116                           
 12117                           ;mcc_generated_files/i2c1.c: 532:             }
 12118  0191  2996               	goto	i1l3175
 12119  0192                     i1l436:	
 12120                           ;mcc_generated_files/i2c1.c: 533:             else
 12121                           
 12122                           
 12123                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 12124  0192  0143               	movlb	3	; select bank3
 12125  0193  1691               	bsf	17,5	;volatile
 12126                           
 12127                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 12128  0194  318E  26D4         	fcall	_I2C1_FunctionComplete
 12129  0196                     i1l3175:	
 12130                           
 12131                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 12132  0196  0143               	movlb	3	; select bank3
 12133  0197  1611               	bsf	17,4	;volatile
 12134                           
 12135                           ;mcc_generated_files/i2c1.c: 545:             break;
 12136  0198  0008               	return
 12137  0199                     i1l3177:	
 12138                           
 12139                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12140  0199  3000               	movlw	0
 12141  019A  318F  2779         	fcall	_I2C1_Stop
 12142                           
 12143                           ;mcc_generated_files/i2c1.c: 552:             break;
 12144  019C  0008               	return
 12145  019D                     i1l3179:	
 12146                           
 12147                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 12148  019D  3001               	movlw	1
 12149  019E  00F8               	movwf	??_I2C1_ISR
 12150  019F  0878               	movf	??_I2C1_ISR,w
 12151  01A0  07CC               	addwf	_i2c1_object+4,f
 12152                           
 12153                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 12154  01A1  3006               	movlw	6
 12155  01A2  318F  2779         	fcall	_I2C1_Stop
 12156                           
 12157                           ;mcc_generated_files/i2c1.c: 560:             break;
 12158  01A4  0008               	return
 12159  01A5                     i1l3185:	
 12160  01A5  0140               	movlb	0	; select bank0
 12161  01A6  0865               	movf	_i2c1_state,w
 12162  01A7  00F8               	movwf	??_I2C1_ISR
 12163  01A8  01F9               	clrf	??_I2C1_ISR+1
 12164                           
 12165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12166                           ; Switch size 1, requested type "simple"
 12167                           ; Number of cases is 1, Range of values is 0 to 0
 12168                           ; switch strategies available:
 12169                           ; Name         Instructions Cycles
 12170                           ; simple_byte            4     3 (average)
 12171                           ; direct_byte            8     6 (fixed)
 12172                           ; jumptable            260     6 (fixed)
 12173                           ;	Chosen strategy is simple_byte
 12174  01A9  0879               	movf	??_I2C1_ISR+1,w
 12175  01AA  3A00               	xorlw	0	; case 0
 12176  01AB  1903               	skipnz
 12177  01AC  29AE               	goto	i1l4111
 12178  01AD  299D               	goto	i1l3179
 12179  01AE                     i1l4111:	
 12180                           
 12181                           ; Switch size 1, requested type "simple"
 12182                           ; Number of cases is 11, Range of values is 0 to 11
 12183                           ; switch strategies available:
 12184                           ; Name         Instructions Cycles
 12185                           ; direct_byte           30     6 (fixed)
 12186                           ; simple_byte           34    18 (average)
 12187                           ; jumptable            260     6 (fixed)
 12188                           ;	Chosen strategy is simple_byte
 12189  01AE  0878               	movf	??_I2C1_ISR,w
 12190  01AF  3A00               	xorlw	0	; case 0
 12191  01B0  1903               	skipnz
 12192  01B1  289C               	goto	i1l402
 12193  01B2  3A01               	xorlw	1	; case 1
 12194  01B3  1903               	skipnz
 12195  01B4  28C7               	goto	i1l407
 12196  01B5  3A03               	xorlw	3	; case 2
 12197  01B6  1903               	skipnz
 12198  01B7  290F               	goto	i1l3105
 12199  01B8  3A01               	xorlw	1	; case 3
 12200  01B9  1903               	skipnz
 12201  01BA  292E               	goto	i1l424
 12202  01BB  3A07               	xorlw	7	; case 4
 12203  01BC  1903               	skipnz
 12204  01BD  2999               	goto	i1l3177
 12205  01BE  3A01               	xorlw	1	; case 5
 12206  01BF  1903               	skipnz
 12207  01C0  295D               	goto	i1l431
 12208  01C1  3A03               	xorlw	3	; case 6
 12209  01C2  1903               	skipnz
 12210  01C3  2972               	goto	i1l3159
 12211  01C4  3A01               	xorlw	1	; case 7
 12212  01C5  1903               	skipnz
 12213  01C6  2999               	goto	i1l3177
 12214  01C7  3A0F               	xorlw	15	; case 8
 12215  01C8  1903               	skipnz
 12216  01C9  2979               	goto	i1l3163
 12217  01CA  3A02               	xorlw	2	; case 10
 12218  01CB  1903               	skipnz
 12219  01CC  28C8               	goto	i1l408
 12220  01CD  3A01               	xorlw	1	; case 11
 12221  01CE  1903               	skipnz
 12222  01CF  28EA               	goto	i1l413
 12223  01D0  299D               	goto	i1l3179
 12224  01D1  0008               	return
 12225  01D2                     __end_of_I2C1_ISR:	
 12226                           
 12227                           	psect	text51
 12228  0F79                     __ptext51:	
 12229 ;; *************** function _I2C1_Stop *****************
 12230 ;; Defined at:
 12231 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;  completion_c    1    wreg     enum E10866
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;  completion_c    1    1[COMMON] enum E10866
 12236 ;; Return value:  Size  Location     Type
 12237 ;;                  1    wreg      void 
 12238 ;; Registers used:
 12239 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12240 ;; Tracked objects:
 12241 ;;		On entry : 0/0
 12242 ;;		On exit  : 0/0
 12243 ;;		Unchanged: 0/0
 12244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12249 ;;Total ram usage:        2 bytes
 12250 ;; Hardware stack levels used:    1
 12251 ;; This function calls:
 12252 ;;		Nothing
 12253 ;; This function is called by:
 12254 ;;		_I2C1_ISR
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           
 12258                           
 12259                           ;psect for function _I2C1_Stop
 12260  0F79                     _I2C1_Stop:	
 12261                           
 12262                           ;incstack = 0
 12263                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 12264                           ;I2C1_Stop@completion_code stored from wreg
 12265  0F79  00F7               	movwf	I2C1_Stop@completion_code
 12266                           
 12267                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 12268  0F7A  0143               	movlb	3	; select bank3
 12269  0F7B  1511               	bsf	17,2	;volatile
 12270                           
 12271                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 12272  0F7C  0140               	movlb	0	; select bank0
 12273  0F7D  0862               	movf	_p_i2c1_current,w
 12274  0F7E  3E02               	addlw	2
 12275  0F7F  0086               	movwf	6
 12276  0F80  0187               	clrf	7
 12277  0F81  0801               	movf	1,w
 12278  0F82  1903               	btfsc	3,2
 12279  0F83  2F8F               	goto	i1l2871
 12280                           
 12281                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 12282  0F84  0877               	movf	I2C1_Stop@completion_code,w
 12283  0F85  00F6               	movwf	??_I2C1_Stop
 12284  0F86  0862               	movf	_p_i2c1_current,w
 12285  0F87  3E02               	addlw	2
 12286  0F88  0086               	movwf	6
 12287  0F89  0187               	clrf	7
 12288  0F8A  0801               	movf	1,w
 12289  0F8B  0086               	movwf	6
 12290  0F8C  0187               	clrf	7
 12291  0F8D  0876               	movf	??_I2C1_Stop,w
 12292  0F8E  0081               	movwf	1
 12293  0F8F                     i1l2871:	
 12294                           
 12295                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 12296  0F8F  01E5               	clrf	_i2c1_state
 12297  0F90  0008               	return
 12298  0F91                     __end_of_I2C1_Stop:	
 12299                           
 12300                           	psect	text52
 12301  0ED4                     __ptext52:	
 12302 ;; *************** function _I2C1_FunctionComplete *****************
 12303 ;; Defined at:
 12304 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 12305 ;; Parameters:    Size  Location     Type
 12306 ;;		None
 12307 ;; Auto vars:     Size  Location     Type
 12308 ;;		None
 12309 ;; Return value:  Size  Location     Type
 12310 ;;                  1    wreg      void 
 12311 ;; Registers used:
 12312 ;;		wreg, status,2, status,0
 12313 ;; Tracked objects:
 12314 ;;		On entry : 0/0
 12315 ;;		On exit  : 0/0
 12316 ;;		Unchanged: 0/0
 12317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12322 ;;Total ram usage:        1 bytes
 12323 ;; Hardware stack levels used:    1
 12324 ;; This function calls:
 12325 ;;		Nothing
 12326 ;; This function is called by:
 12327 ;;		_I2C1_ISR
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           
 12332                           ;psect for function _I2C1_FunctionComplete
 12333  0ED4                     _I2C1_FunctionComplete:	
 12334                           
 12335                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 12336                           
 12337                           ;incstack = 0
 12338                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 12339  0ED4  3004               	movlw	4
 12340  0ED5  00F6               	movwf	??_I2C1_FunctionComplete
 12341  0ED6  0876               	movf	??_I2C1_FunctionComplete,w
 12342  0ED7  0140               	movlb	0	; select bank0
 12343  0ED8  07E3               	addwf	_p_i2c1_trb_current,f
 12344                           
 12345                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 12346  0ED9  3001               	movlw	1
 12347  0EDA  02E4               	subwf	_i2c1_trb_count,f
 12348  0EDB  1D03               	btfss	3,2
 12349  0EDC  2EE2               	goto	i1l443
 12350                           
 12351                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 12352  0EDD  3004               	movlw	4
 12353  0EDE  00F6               	movwf	??_I2C1_FunctionComplete
 12354  0EDF  0876               	movf	??_I2C1_FunctionComplete,w
 12355  0EE0  00E5               	movwf	_i2c1_state
 12356                           
 12357                           ;mcc_generated_files/i2c1.c: 575:     }
 12358  0EE1  0008               	return
 12359  0EE2                     i1l443:	
 12360                           ;mcc_generated_files/i2c1.c: 576:     else
 12361                           
 12362                           
 12363                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 12364  0EE2  01E5               	clrf	_i2c1_state
 12365  0EE3  0AE5               	incf	_i2c1_state,f
 12366  0EE4  0008               	return
 12367  0EE5                     __end_of_I2C1_FunctionComplete:	
 12368                           
 12369                           	psect	text53
 12370  0E16                     __ptext53:	
 12371 ;; *************** function _I2C1_BusCollisionISR *****************
 12372 ;; Defined at:
 12373 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;		None
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;		None
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  1    wreg      void 
 12380 ;; Registers used:
 12381 ;;		None
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12391 ;;Total ram usage:        0 bytes
 12392 ;; Hardware stack levels used:    1
 12393 ;; This function calls:
 12394 ;;		Nothing
 12395 ;; This function is called by:
 12396 ;;		_INTERRUPT_InterruptManager
 12397 ;; This function uses a non-reentrant model
 12398 ;;
 12399                           
 12400                           
 12401                           ;psect for function _I2C1_BusCollisionISR
 12402  0E16                     _I2C1_BusCollisionISR:	
 12403                           
 12404                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 12405                           
 12406                           ;incstack = 0
 12407                           ; Regs used in _I2C1_BusCollisionISR: []
 12408  0E16  014E               	movlb	14	; select bank14
 12409  0E17  108F               	bcf	15,1	;volatile
 12410  0E18  0008               	return
 12411  0E19                     __end_of_I2C1_BusCollisionISR:	
 12412                           
 12413                           	psect	text54
 12414  0FC6                     __ptext54:	
 12415 ;; *************** function _EUSART1_Transmit_ISR *****************
 12416 ;; Defined at:
 12417 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 12418 ;; Parameters:    Size  Location     Type
 12419 ;;		None
 12420 ;; Auto vars:     Size  Location     Type
 12421 ;;		None
 12422 ;; Return value:  Size  Location     Type
 12423 ;;                  1    wreg      void 
 12424 ;; Registers used:
 12425 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12426 ;; Tracked objects:
 12427 ;;		On entry : 0/0
 12428 ;;		On exit  : 0/0
 12429 ;;		Unchanged: 0/0
 12430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12435 ;;Total ram usage:        1 bytes
 12436 ;; Hardware stack levels used:    1
 12437 ;; This function calls:
 12438 ;;		Nothing
 12439 ;; This function is called by:
 12440 ;;		_EUSART1_Initialize
 12441 ;;		_INTERRUPT_InterruptManager
 12442 ;; This function uses a non-reentrant model
 12443 ;;
 12444                           
 12445                           
 12446                           ;psect for function _EUSART1_Transmit_ISR
 12447  0FC6                     _EUSART1_Transmit_ISR:	
 12448                           
 12449                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 12450                           
 12451                           ;incstack = 0
 12452                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 12453  0FC6  3008               	movlw	8
 12454  0FC7  0140               	movlb	0	; select bank0
 12455  0FC8  026F               	subwf	_eusart1TxBufferRemaining,w	;volatile
 12456  0FC9  1803               	skipnc
 12457  0FCA  2FE0               	goto	i1l106
 12458                           
 12459                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 12460  0FCB  0872               	movf	_eusart1TxTail,w
 12461  0FCC  3EB0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 12462  0FCD  0086               	movwf	6
 12463  0FCE  0187               	clrf	7
 12464  0FCF  0801               	movf	1,w
 12465  0FD0  0142               	movlb	2	; select bank2
 12466  0FD1  009A               	movwf	26	;volatile
 12467  0FD2  3001               	movlw	1
 12468  0FD3  00F6               	movwf	??_EUSART1_Transmit_ISR
 12469  0FD4  0876               	movf	??_EUSART1_Transmit_ISR,w
 12470  0FD5  07F2               	addwf	_eusart1TxTail,f	;volatile
 12471                           
 12472                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 12473  0FD6  3008               	movlw	8
 12474  0FD7  0272               	subwf	_eusart1TxTail,w	;volatile
 12475  0FD8  1803               	btfsc	3,0
 12476                           
 12477                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 12478  0FD9  01F2               	clrf	_eusart1TxTail	;volatile
 12479                           
 12480                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 12481  0FDA  3001               	movlw	1
 12482  0FDB  00F6               	movwf	??_EUSART1_Transmit_ISR
 12483  0FDC  0876               	movf	??_EUSART1_Transmit_ISR,w
 12484  0FDD  0140               	movlb	0	; select bank0
 12485  0FDE  07EF               	addwf	_eusart1TxBufferRemaining,f	;volatile
 12486                           
 12487                           ;mcc_generated_files/eusart1.c: 206:     }
 12488  0FDF  0008               	return
 12489  0FE0                     i1l106:	
 12490                           ;mcc_generated_files/eusart1.c: 207:     else
 12491                           
 12492                           
 12493                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 12494  0FE0  014E               	movlb	14	; select bank14
 12495  0FE1  1219               	bcf	25,4	;volatile
 12496  0FE2  0008               	return
 12497  0FE3                     __end_of_EUSART1_Transmit_ISR:	
 12498                           
 12499                           	psect	text55
 12500  076E                     __ptext55:	
 12501 ;; *************** function _DMX_ISR *****************
 12502 ;; Defined at:
 12503 ;;		line 6 in file "dmx.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;		None
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;		None
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  1    wreg      void 
 12510 ;; Registers used:
 12511 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12521 ;;Total ram usage:        4 bytes
 12522 ;; Hardware stack levels used:    1
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_main
 12527 ;;		_INTERRUPT_InterruptManager
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           
 12532                           ;psect for function _DMX_ISR
 12533  076E                     _DMX_ISR:	
 12534                           
 12535                           ;dmx.c: 7:         LATB6 = 1;
 12536                           
 12537                           ;incstack = 0
 12538                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 12539  076E  0140               	movlb	0	; select bank0
 12540  076F  1719               	bsf	25,6	;volatile
 12541                           
 12542                           ;dmx.c: 8:         LATB6 = 0;
 12543  0770  1319               	bcf	25,6	;volatile
 12544                           
 12545                           ;dmx.c: 9:     if (RC1STAbits.FERR) {
 12546  0771  0142               	movlb	2	; select bank2
 12547  0772  1D1D               	btfss	29,2	;volatile
 12548  0773  2F78               	goto	i1l3363
 12549                           
 12550                           ;dmx.c: 11:         dmxPointer = 0;
 12551  0774  0141               	movlb	1	; select bank1
 12552  0775  01B8               	clrf	_dmxPointer^(0+128)
 12553  0776  01B9               	clrf	(_dmxPointer+1)^(0+128)
 12554                           
 12555                           ;dmx.c: 12:     } else {
 12556  0777  2F7D               	goto	i1l3365
 12557  0778                     i1l3363:	
 12558                           
 12559                           ;dmx.c: 13:         dmxPointer++;
 12560  0778  3001               	movlw	1
 12561  0779  0141               	movlb	1	; select bank1
 12562  077A  07B8               	addwf	_dmxPointer^(0+128),f
 12563  077B  3000               	movlw	0
 12564  077C  3DB9               	addwfc	(_dmxPointer+1)^(0+128),f
 12565  077D                     i1l3365:	
 12566                           
 12567                           ;dmx.c: 15:     dmxData[dmxPointer] = RC1REG;
 12568  077D  30EF               	movlw	239
 12569  077E  00F6               	movwf	??_DMX_ISR
 12570  077F  3025               	movlw	37
 12571  0780  00F7               	movwf	??_DMX_ISR+1
 12572  0781  0838               	movf	_dmxPointer^(0+128),w
 12573  0782  0776               	addwf	??_DMX_ISR,w
 12574  0783  00F8               	movwf	??_DMX_ISR+2
 12575  0784  0839               	movf	(_dmxPointer+1)^(0+128),w
 12576  0785  3D77               	addwfc	??_DMX_ISR+1,w
 12577  0786  00F9               	movwf	??_DMX_ISR+3
 12578  0787  0878               	movf	??_DMX_ISR+2,w
 12579  0788  0086               	movwf	6
 12580  0789  0879               	movf	??_DMX_ISR+3,w
 12581  078A  0087               	movwf	7
 12582  078B  0142               	movlb	2	; select bank2
 12583  078C  0819               	movf	25,w	;volatile
 12584  078D  0081               	movwf	1
 12585                           
 12586                           ;dmx.c: 17:     if (RC1STAbits.OERR) {
 12587  078E  1C9D               	btfss	29,1	;volatile
 12588  078F  0008               	return
 12589                           
 12590                           ;dmx.c: 18:         RC1STAbits.CREN = 0;
 12591  0790  121D               	bcf	29,4	;volatile
 12592                           
 12593                           ;dmx.c: 19:         RC1STAbits.CREN = 1;
 12594  0791  161D               	bsf	29,4	;volatile
 12595  0792  0008               	return
 12596  0793                     __end_of_DMX_ISR:	
 12597                           
 12598                           	psect	text56
 12599  066D                     __ptext56:	
 12600 ;; *************** function _EUSART1_Receive_ISR *****************
 12601 ;; Defined at:
 12602 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;		None
 12605 ;; Auto vars:     Size  Location     Type
 12606 ;;		None
 12607 ;; Return value:  Size  Location     Type
 12608 ;;                  1    wreg      void 
 12609 ;; Registers used:
 12610 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12611 ;; Tracked objects:
 12612 ;;		On entry : 0/0
 12613 ;;		On exit  : 0/0
 12614 ;;		Unchanged: 0/0
 12615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12620 ;;Total ram usage:        0 bytes
 12621 ;; Hardware stack levels used:    1
 12622 ;; Hardware stack levels required when called:    2
 12623 ;; This function calls:
 12624 ;;		Absolute function
 12625 ;;		_EUSART1_DefaultErrorHandler
 12626 ;;		_EUSART1_DefaultFramingErrorHandler
 12627 ;;		_EUSART1_DefaultOverrunErrorHandler
 12628 ;;		_EUSART1_RxDataHandler
 12629 ;; This function is called by:
 12630 ;;		_EUSART1_Initialize
 12631 ;;		_INTERRUPT_InterruptManager
 12632 ;; This function uses a non-reentrant model
 12633 ;;
 12634                           
 12635                           
 12636                           ;psect for function _EUSART1_Receive_ISR
 12637  066D                     _EUSART1_Receive_ISR:	
 12638                           
 12639                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 12640                           
 12641                           ;incstack = 0
 12642                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12643  066D  0871               	movf	_eusart1RxHead,w	;volatile
 12644  066E  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 12645  066F  0086               	movwf	6
 12646  0670  0187               	clrf	7
 12647  0671  0181               	clrf	1
 12648                           
 12649                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 12650  0672  0142               	movlb	2	; select bank2
 12651  0673  1D1D               	btfss	29,2	;volatile
 12652  0674  2E80               	goto	i1l3015
 12653                           
 12654                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 12655  0675  0871               	movf	_eusart1RxHead,w	;volatile
 12656  0676  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 12657  0677  0086               	movwf	6
 12658  0678  0187               	clrf	7
 12659  0679  1481               	bsf	1,1
 12660                           
 12661                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 12662  067A  0141               	movlb	1	; select bank1
 12663  067B  0855               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 12664  067C  008A               	movwf	10
 12665  067D  0854               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 12666  067E  000A               	callw
 12667  067F  3186               	pagesel	$
 12668  0680                     i1l3015:	
 12669                           
 12670                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 12671  0680  0142               	movlb	2	; select bank2
 12672  0681  1C9D               	btfss	29,1	;volatile
 12673  0682  2E8E               	goto	i1l3021
 12674                           
 12675                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 12676  0683  0871               	movf	_eusart1RxHead,w	;volatile
 12677  0684  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 12678  0685  0086               	movwf	6
 12679  0686  0187               	clrf	7
 12680  0687  1501               	bsf	1,2
 12681                           
 12682                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 12683  0688  0141               	movlb	1	; select bank1
 12684  0689  0853               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 12685  068A  008A               	movwf	10
 12686  068B  0852               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 12687  068C  000A               	callw
 12688  068D  3186               	pagesel	$
 12689  068E                     i1l3021:	
 12690                           
 12691                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 12692  068E  0871               	movf	_eusart1RxHead,w	;volatile
 12693  068F  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 12694  0690  0086               	movwf	6
 12695  0691  0187               	clrf	7
 12696  0692  0801               	movf	1,w
 12697  0693  1903               	btfsc	3,2
 12698  0694  2E9C               	goto	i1l3025
 12699                           
 12700                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 12701  0695  0141               	movlb	1	; select bank1
 12702  0696  0851               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 12703  0697  008A               	movwf	10
 12704  0698  0850               	movf	_EUSART1_ErrorHandler^(0+128),w
 12705  0699  000A               	callw
 12706  069A  3186               	pagesel	$
 12707                           
 12708                           ;mcc_generated_files/eusart1.c: 230:     } else {
 12709  069B  0008               	return
 12710  069C                     i1l3025:	
 12711                           
 12712                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 12713  069C  318F  2762         	fcall	_EUSART1_RxDataHandler
 12714  069E  0008               	return
 12715  069F                     __end_of_EUSART1_Receive_ISR:	
 12716                           
 12717                           	psect	text57
 12718  0E20                     __ptext57:	
 12719 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 12720 ;; Defined at:
 12721 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;		None
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;		None
 12726 ;; Return value:  Size  Location     Type
 12727 ;;                  1    wreg      void 
 12728 ;; Registers used:
 12729 ;;		None
 12730 ;; Tracked objects:
 12731 ;;		On entry : 0/0
 12732 ;;		On exit  : 0/0
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12739 ;;Total ram usage:        0 bytes
 12740 ;; Hardware stack levels used:    1
 12741 ;; This function calls:
 12742 ;;		Nothing
 12743 ;; This function is called by:
 12744 ;;		_EUSART1_Initialize
 12745 ;;		_EUSART1_Receive_ISR
 12746 ;; This function uses a non-reentrant model
 12747 ;;
 12748                           
 12749                           
 12750                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 12751  0E20                     _EUSART1_DefaultOverrunErrorHandler:	
 12752                           
 12753                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 12754                           
 12755                           ;incstack = 0
 12756                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 12757  0E20  0142               	movlb	2	; select bank2
 12758  0E21  121D               	bcf	29,4	;volatile
 12759                           
 12760                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 12761  0E22  161D               	bsf	29,4	;volatile
 12762  0E23  0008               	return
 12763  0E24                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 12764                           
 12765                           	psect	text58
 12766  0E11                     __ptext58:	
 12767 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 12768 ;; Defined at:
 12769 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 12770 ;; Parameters:    Size  Location     Type
 12771 ;;		None
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;		None
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  1    wreg      void 
 12776 ;; Registers used:
 12777 ;;		None
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12787 ;;Total ram usage:        0 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; This function calls:
 12790 ;;		Nothing
 12791 ;; This function is called by:
 12792 ;;		_EUSART1_Initialize
 12793 ;;		_EUSART1_Receive_ISR
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           
 12798                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 12799  0E11                     _EUSART1_DefaultFramingErrorHandler:	
 12800                           
 12801                           ;incstack = 0
 12802                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 12803  0E11  0008               	return
 12804  0E12                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 12805                           
 12806                           	psect	text59
 12807  0E13                     __ptext59:	
 12808 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 12809 ;; Defined at:
 12810 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;		None
 12813 ;; Auto vars:     Size  Location     Type
 12814 ;;		None
 12815 ;; Return value:  Size  Location     Type
 12816 ;;                  1    wreg      void 
 12817 ;; Registers used:
 12818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12819 ;; Tracked objects:
 12820 ;;		On entry : 0/0
 12821 ;;		On exit  : 0/0
 12822 ;;		Unchanged: 0/0
 12823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12828 ;;Total ram usage:        0 bytes
 12829 ;; Hardware stack levels used:    1
 12830 ;; Hardware stack levels required when called:    1
 12831 ;; This function calls:
 12832 ;;		_EUSART1_RxDataHandler
 12833 ;; This function is called by:
 12834 ;;		_EUSART1_Initialize
 12835 ;;		_EUSART1_Receive_ISR
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           
 12840                           ;psect for function _EUSART1_DefaultErrorHandler
 12841  0E13                     _EUSART1_DefaultErrorHandler:	
 12842                           
 12843                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 12844                           
 12845                           ;incstack = 0
 12846                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12847  0E13  318F  2762         	fcall	_EUSART1_RxDataHandler
 12848  0E15  0008               	return
 12849  0E16                     __end_of_EUSART1_DefaultErrorHandler:	
 12850                           
 12851                           	psect	text60
 12852  0F62                     __ptext60:	
 12853 ;; *************** function _EUSART1_RxDataHandler *****************
 12854 ;; Defined at:
 12855 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 12856 ;; Parameters:    Size  Location     Type
 12857 ;;		None
 12858 ;; Auto vars:     Size  Location     Type
 12859 ;;		None
 12860 ;; Return value:  Size  Location     Type
 12861 ;;                  1    wreg      void 
 12862 ;; Registers used:
 12863 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12864 ;; Tracked objects:
 12865 ;;		On entry : 0/0
 12866 ;;		On exit  : 0/0
 12867 ;;		Unchanged: 0/0
 12868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12873 ;;Total ram usage:        1 bytes
 12874 ;; Hardware stack levels used:    1
 12875 ;; This function calls:
 12876 ;;		Nothing
 12877 ;; This function is called by:
 12878 ;;		_EUSART1_Receive_ISR
 12879 ;;		_EUSART1_DefaultErrorHandler
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883                           
 12884                           ;psect for function _EUSART1_RxDataHandler
 12885  0F62                     _EUSART1_RxDataHandler:	
 12886                           
 12887                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 12888                           
 12889                           ;incstack = 0
 12890                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12891  0F62  0142               	movlb	2	; select bank2
 12892  0F63  0819               	movf	25,w	;volatile
 12893  0F64  00F6               	movwf	??_EUSART1_RxDataHandler
 12894  0F65  0871               	movf	_eusart1RxHead,w
 12895  0F66  3EA8               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 12896  0F67  0086               	movwf	6
 12897  0F68  0187               	clrf	7
 12898  0F69  0876               	movf	??_EUSART1_RxDataHandler,w
 12899  0F6A  0081               	movwf	1
 12900  0F6B  3001               	movlw	1
 12901  0F6C  00F6               	movwf	??_EUSART1_RxDataHandler
 12902  0F6D  0876               	movf	??_EUSART1_RxDataHandler,w
 12903  0F6E  07F1               	addwf	_eusart1RxHead,f	;volatile
 12904                           
 12905                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 12906  0F6F  3008               	movlw	8
 12907  0F70  0271               	subwf	_eusart1RxHead,w	;volatile
 12908  0F71  1803               	btfsc	3,0
 12909                           
 12910                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 12911  0F72  01F1               	clrf	_eusart1RxHead	;volatile
 12912                           
 12913                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 12914  0F73  3001               	movlw	1
 12915  0F74  00F6               	movwf	??_EUSART1_RxDataHandler
 12916  0F75  0876               	movf	??_EUSART1_RxDataHandler,w
 12917  0F76  0140               	movlb	0	; select bank0
 12918  0F77  07E7               	addwf	_eusart1RxCount,f	;volatile
 12919  0F78  0008               	return
 12920  0F79                     __end_of_EUSART1_RxDataHandler:	
 12921                           
 12922                           	psect	text61
 12923  0EBA                     __ptext61:	
 12924 ;; *************** function _ADCC_ThresholdISR *****************
 12925 ;; Defined at:
 12926 ;;		line 308 in file "mcc_generated_files/adcc.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;		None
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, status,2, status,0, pclath, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : 0/0
 12937 ;;		On exit  : 0/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12944 ;;Total ram usage:        0 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; Hardware stack levels required when called:    1
 12947 ;; This function calls:
 12948 ;;		Absolute function
 12949 ;;		_ADCC_DefaultInterruptHandler
 12950 ;;		_adcThresholdHandler
 12951 ;; This function is called by:
 12952 ;;		_INTERRUPT_InterruptManager
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           
 12957                           ;psect for function _ADCC_ThresholdISR
 12958  0EBA                     _ADCC_ThresholdISR:	
 12959                           
 12960                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 12961                           
 12962                           ;incstack = 0
 12963                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 12964  0EBA  014E               	movlb	14	; select bank14
 12965  0EBB  108D               	bcf	13,1	;volatile
 12966                           
 12967                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 12968  0EBC  0141               	movlb	1	; select bank1
 12969  0EBD  084C               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 12970  0EBE  044D               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 12971  0EBF  1903               	btfsc	3,2
 12972  0EC0  0008               	return
 12973                           
 12974                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 12975  0EC1  084D               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 12976  0EC2  008A               	movwf	10
 12977  0EC3  084C               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 12978  0EC4  000A               	callw
 12979  0EC5  318E               	pagesel	$
 12980  0EC6  0008               	return
 12981  0EC7                     __end_of_ADCC_ThresholdISR:	
 12982                           
 12983                           	psect	text62
 12984  0E10                     __ptext62:	
 12985 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 12986 ;; Defined at:
 12987 ;;		line 320 in file "mcc_generated_files/adcc.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;		None
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;		None
 12992 ;; Return value:  Size  Location     Type
 12993 ;;                  1    wreg      void 
 12994 ;; Registers used:
 12995 ;;		None
 12996 ;; Tracked objects:
 12997 ;;		On entry : 0/0
 12998 ;;		On exit  : 0/0
 12999 ;;		Unchanged: 0/0
 13000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13005 ;;Total ram usage:        0 bytes
 13006 ;; Hardware stack levels used:    1
 13007 ;; This function calls:
 13008 ;;		Nothing
 13009 ;; This function is called by:
 13010 ;;		_ADCC_Initialize
 13011 ;;		_ADCC_ThresholdISR
 13012 ;; This function uses a non-reentrant model
 13013 ;;
 13014                           
 13015                           
 13016                           ;psect for function _ADCC_DefaultInterruptHandler
 13017  0E10                     _ADCC_DefaultInterruptHandler:	
 13018                           
 13019                           ;incstack = 0
 13020                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 13021  0E10  0008               	return
 13022  0E11                     __end_of_ADCC_DefaultInterruptHandler:	
 13023                           
 13024                           	psect	text63
 13025  0E1C                     __ptext63:	
 13026 ;; *************** function _adcThresholdHandler *****************
 13027 ;; Defined at:
 13028 ;;		line 27 in file "beat.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;		None
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;		None
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  1    wreg      void 
 13035 ;; Registers used:
 13036 ;;		None
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13046 ;;Total ram usage:        0 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; This function calls:
 13049 ;;		Nothing
 13050 ;; This function is called by:
 13051 ;;		_BEAT_init
 13052 ;;		_ADCC_ThresholdISR
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           
 13057                           ;psect for function _adcThresholdHandler
 13058  0E1C                     _adcThresholdHandler:	
 13059                           
 13060                           ;beat.c: 28:     thresholdExceeded = 1;
 13061                           
 13062                           ;incstack = 0
 13063                           ; Regs used in _adcThresholdHandler: []
 13064  0E1C  0140               	movlb	0	; select bank0
 13065  0E1D  01D8               	clrf	_thresholdExceeded
 13066  0E1E  0AD8               	incf	_thresholdExceeded,f
 13067  0E1F  0008               	return
 13068  0E20                     __end_of_adcThresholdHandler:	
 13069  007E                     btemp	set	126	;btemp
 13070  007E                     int$flags	set	126
 13071  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        6
    BSS         117
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     40      80
    BANK1            80      0      60
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S1848$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_setColor
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23333
                                             38 BANK0      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
      _EUSART1_SetRxInterruptHandler
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                            13    13      0     743
                                             22 BANK0     13    13      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_setColor                                        22    19      3     678
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      4     4      0   11216
                                             34 BANK0      4     4      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    4     1      3     165
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum                                  7     5      2    4467
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _TM1650_setDigit                                      7     4      3    2952
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (11) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     _TM1650_isEnabled
     ___lwdiv
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
       ___lwmod
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
   _EUSART1_SetRxInterruptHandler
   _LED_task
     _BEAT_detected
     _CLOCK_getTime
     _LED_setColor
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      B8       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3C       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      B8      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 29 15:34:35 2019

                      _eusart1TxBufferRemaining 006F                        ??_ADCC_SetUpperThreshold 0022  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0076  
                                            _up 005D                              __size_of_BEAT_init 0014  
                            __size_of_BEAT_task 00C2                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 0E1C                                             l874 0222  
                                           l876 0285                                             _bpm 00BE  
                       __size_of_PMD_Initialize 000A                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                   __CFG_BBEN$OFF 0000  
                               __end_of_DMX_ISR 0793                                __end_of_I2C1_ISR 01D2  
                                          l4003 021C                                            l4017 026F  
                                          l4009 0243                                            l4051 0421  
                                          l4043 0409                                            l3513 0527  
                                          l3611 0399                                            l4083 062B  
                                          l3517 052E                                            l3605 0395  
                          _ADCC_StartConversion 0E5F                                            l3551 064D  
                                          l3519 0533                                            l3535 0FFA  
                                          l3561 0668                                            l3529 0742  
                                          l3557 065F                                            l3549 0641  
                                          l3573 06D3                                            l3575 06DF  
                                          l3583 06F4                                            l3807 0F1B  
                                          l3833 07A8                                            l3931 02D7  
                                          l3499 0E2C                                            l3579 06EB  
                                          l3827 07A3                                            l3927 02D0  
                                          l3855 0F2C                                            l3847 0F57  
                                          l3857 0F30                                            l3849 0F5B  
                                          l3963 0342                                            l3947 0304  
                                          l3949 0317                                            l3797 0E78  
                                          l3997 01EC                                  ?_TM1650_enable 0076  
                                          u2105 064E                                            u2115 0658  
                                          u2125 0660                                            _LATA 0018  
                                          _LATB 0019                                            u2215 03D5  
                                          _LATC 001A                                            u2065 0FB8  
                                          u2155 06D6                                            u2085 0644  
                                          u2175 06E5                                            u2345 0329  
                                          u2185 06EC                                            u2295 02B9  
                                          u2385 01EF                                            u2394 020E  
                                          u2395 020D                                            u2547 0615  
                                          _PMD0 0796                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _PMD6 079C                                            _PMD7 079D  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0076                                   ?_BUTTONS_task 0076  
                          ?_adcThresholdHandler 0076                                            _isOn 005E  
                                          _main 05FD                                            _down 005C  
                                          _init 07D4                                            _menu 005A  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0039  
                       __end_of_TM1650_setDigit 0FC6                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 0015                            __size_of_address_inc 0016  
                I2C1_MasterWriteTRBBuild@length 0021                         __end_of_TMR0_Initialize 0F0D  
                                    _i2c1_state 0065                  ??_TMR0_DefaultInterruptHandler 0076  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 0EB0                        __end_of_TM1650_isEnabled 0E1C  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 00A0  
                                         _ADCAP 010E                                           _ADACT 0117  
                              __end_of_LED_task 04FA                                           ?_main 0076  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                                         _ADREF 0116                               __end_of_I2C1_Stop 0F91  
                                 __CFG_WDTE$OFF 0000                                           _ADRPT 009A  
                                         _LATB6 00CE                                 __end_of___lwdiv 066D  
                    _ADCC_ADTI_InterruptHandler 00CC                                           i1l106 0FE0  
                                         i1l402 009C                                           i1l413 00EA  
                                         i1l414 00F6                                           i1l431 015D  
                                         i1l407 00C7                                           i1l432 016B  
                                         i1l424 012E                                           i1l408 00C8  
                                         i1l280 000E                                 __end_of___lwmod 06F9  
                                         i1l443 0EE2                                           i1l283 0017  
                                         i1l436 0192                                           i1l428 014E  
                                         i1l285 001E                                           i1l294 0037  
                                         i1l287 0028                                           i1l289 0032  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         _TXREG 011A               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 0E19                       ?_TMR0_SetInterruptHandler 0020  
                          _EUSART1_Transmit_ISR 0FC6                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 0ED4                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                               __end_of_initLED 0721                                           _delay 00DA  
                                         _count 00C2                                           _enter 005B  
                         ?_ADCC_StartConversion 0076                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0076                               __end_of_BEAT_init 0EF9  
                             __end_of_BEAT_task 035E                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0E12  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0076  
           ?_EUSART1_DefaultFramingErrorHandler 0076              _EUSART1_DefaultFramingErrorHandler 0E11  
               I2C1_MasterWriteTRBBuild@address 0022                                 __initialization 003B  
                          TM1650_setDigit@digit 003A                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                      __end_of_EUSART1_Initialize 0582  
                                  __end_of_main 0638                                    __end_of_init 07F4  
                               _CONTROLLER_init 0E45                                 _CONTROLLER_task 03D8  
                                 ?_LED_setColor 0020                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 0E3D                     ?_INTERRUPT_InterruptManager 0076  
                                   _i2c1_object 0048                                          ??_main 0046  
                                        ??_init 0023                                       ??_DMX_ISR 0076  
                         ?_EUSART1_Transmit_ISR 0076                                 ??_TM1650_enable 0034  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR1L 030C  
                                        _CCPR3H 0315                                          _CCPR2L 0310  
                                        _CCPR4H 0319                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                                        i1l3021 068E                                          i1l3015 0680  
                                        i1l3025 069C                                          i1l3105 010F  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        i1l3125 0123                                          i1l4111 01AE  
                                        i1l3073 00BA                                          i1l3163 0179  
                                        i1l3147 0151                                          i1l3139 013C  
                                        i1l3091 00E4                                          _RC7PPS 1F27  
                                        i1l3085 00D4                                          i1l3077 00C1  
                                        i1l3175 0196                                          i1l3159 0172  
                                        i1l3177 0199                                          i1l3185 01A5  
                                        i1l3363 0778                                          i1l3179 019D  
                                        i1l3365 077D                                          i1l2871 0F8F  
                                __CFG_WDTCCS$SC 0000                                          _OSCFRQ 0893  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                        _TRISC3 00A3                                          _TRISB6 009E  
                                        _TRISC4 00A4                                          _TRISC6 00A6  
                                        _TRISC7 00A7                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 0062  
                                ??_LED_setColor 0023                     __end_of_TM1650_fastPrintNum 03D8  
                             _ADCC_ThresholdISR 0EBA                                  __CFG_STVREN$ON 0000  
                                     ??___lwdiv 0024                                       ??___lwmod 0024  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                              ?_TMR0_Initialize 0076                              ?_ADCC_ThresholdISR 0076  
                                     ?_I2C1_ISR 0076                          __size_of_BEAT_detected 0009  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 00C0                            __size_of_TM1650_init 0004  
                                     ??_initLED 0020                                 _ADCC_Initialize 0748  
                                _PMD_Initialize 0EB0                                    ??_CLOCK_init 0022  
                           ??_ADCC_ThresholdISR 0076                          ??_ADCC_StartConversion 0020  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 0E56  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                 _eusart1RxBuffer 00A8  
                               _eusart1TxBuffer 00B0                               _SYSTEM_Initialize 0F37  
                       __end_of__initialization 0085                         __end_of_CONTROLLER_init 0E4D  
                       __end_of_CONTROLLER_task 0446                              ?_SYSTEM_Initialize 0076  
                                     ?_LED_task 0076                                  _i2c1_trb_count 0064  
                __size_of_EUSART1_RxDataHandler 0017                       __end_of_ADCC_ThresholdISR 0EC7  
                 __end_of_EUSART1_RxDataHandler 0F79                           _I2C1_FunctionComplete 0ED4  
                          _I2C1_BusCollisionISR 0E16                                  __pcstackCOMMON 0076  
                            __end_of_CLOCK_init 0E45                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK0 0E28                                    __pidataBANK1 0002  
                           ??_SYSTEM_Initialize 0023                                       ?_TMR0_ISR 0076  
                   TM1650_fastPrintNum@numWrite 003E                                      ??_I2C1_ISR 0078  
                          __end_of_BUTTONS_init 05C1                          __end_of_PMD_Initialize 0EBA  
                          __end_of_BUTTONS_task 029C                          ??_EUSART1_Transmit_ISR 0076  
                   __end_of_EUSART1_Receive_ISR 069F                               _thresholdExceeded 0058  
                   ADCC_StartConversion@channel 0020                               LED_setColor@green 0020  
                             LED_setColor@white 0021                       __end_of_SYSTEM_Initialize 0F4C  
                                 _eusart1RxHead 0071                                   _eusart1TxHead 0073  
                                 _eusart1RxTail 0070                                      __pbssBANK0 0048  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                 _eusart1TxTail 0072               _EUSART1_TxDefaultInterruptHandler 00D8  
               ??_EUSART1_SetRxInterruptHandler 0022                                   _BEAT_detected 0E71  
                                    ??_LED_task 0036                           ?_I2C1_BusCollisionISR 0076  
               __end_of_EUSART1_SetErrorHandler 0E83                                      __pmaintext 05FD  
              __end_of_TMR0_SetInterruptHandler 0E71                                      ??_TMR0_ISR 0076  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 076E                                      __pintentry 0004  
                               _I2C1_Initialize 0F91                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 0E56           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 0E4D                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0076                               ?_TM1650_isEnabled 0076  
        __end_of_EUSART1_SetFramingErrorHandler 0E8C         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 0E83                                    LED_task@time 0041  
                                       _DMX_ISR 076E                              ??_TM1650_isEnabled 0020  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       _I2C1_Stop 0F79  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                    _dmxPointer 00B8                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 05FD  
                             __end_of_charTable 04A6                             _CLOCK_timerCallback 0E31  
                                ?_BEAT_detected 0076                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0042  
                              ?_CONTROLLER_init 0076                                   ??_address_inc 0042  
                              ?_CONTROLLER_task 0076                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0076                                       _BEAT_init 0EE5  
                 __size_of_I2C1_MasterTRBInsert 0045                                       _BEAT_task 029C  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 0063  
                          ?_CLOCK_timerCallback 0076                                         ___lwdiv 0638  
                                       ___lwmod 06CC                                         _address 006D  
                                       _dmxData 25EF                                         __ptext1 06F9  
                                       __ptext2 0E24                                         __ptext3 0F37  
                                       __ptext4 0EF9                                         __ptext5 0EB0  
                                       __ptext6 069F                                         __ptext7 0EA7  
                                       __ptext8 0F91                                         __ptext9 053F  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                                       _initLED 06F9                                         _lastRun 00BC  
                         _OSCILLATOR_Initialize 0EA7                                       _T2CONbits 028E  
                                       _buttons 0120                              _EUSART1_Initialize 053F  
                      ??_PIN_MANAGER_Initialize 0020                                 __CFG_WRTSAF$OFF 0000  
                                    ?_I2C1_Stop 0076                     __end_of_adcThresholdHandler 0E20  
                 ??_EUSART1_DefaultErrorHandler 0077                      __size_of_SYSTEM_Initialize 0015  
                          I2C1_ISR@pi2c_buf_ptr 0061                                         clrloop0 07F5  
                          end_of_initialization 0085                             ?_EUSART1_Initialize 0076  
                                       init@btn 0024                                         init@pin 0022  
                   _EUSART1_OverrunErrorHandler 00D2                          ??_I2C1_BusCollisionISR 0076  
                       __end_of_I2C1_Initialize 0FAA           __end_of_EUSART1_SetRxInterruptHandler 0E9E  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 0E95  
                                    ?_BEAT_init 0076                                      ?_BEAT_task 0076  
                         __size_of_BUTTONS_init 003F                           __size_of_BUTTONS_task 00CA  
                         ??_CLOCK_timerCallback 0076                             __end_of_address_dec 0F37  
                           __end_of_address_inc 0F62                                ?_ADCC_Initialize 0076  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                      _TMR0_SetInterruptHandler 0E68                       __size_of_I2C1_MasterWrite 0027  
                             __size_of_I2C1_ISR 0149                               __end_of_writeData 1000  
                       ?_ADCC_SetUpperThreshold 0020                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 0F22               I2C1_ISR@i2c_10bit_address_restart 005F  
                        __size_of_CLOCK_getTime 0006                                    _BUTTONS_init 0582  
                                  _BUTTONS_task 01D2                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
          __size_of_EUSART1_DefaultErrorHandler 0003                               __size_of_LED_task 0054  
                ??_ADCC_DefaultInterruptHandler 0076                                   ??_TM1650_init 0035  
                       I2C1_MasterWrite@trBlock 00C8                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0077                        __size_of_TM1650_setDigit 001C  
                        ?_OSCILLATOR_Initialize 0076                  __end_of_ADCC_SetUpperThreshold 0E5F  
                  __size_of_TM1650_fastPrintNum 007A                           __size_of_LED_setColor 003C  
                                  _lastDetected 0057                             start_initialization 003B  
                                   ??_I2C1_Stop 0076                        __size_of_TMR0_Initialize 0014  
               __size_of_PIN_MANAGER_Initialize 002D                             TM1650_setDigit@data 0034  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020   EUSART1_SetTxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0020  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 0793  
                            ?_BUTTONS_isClicked 0020                                     _address_dec 0F22  
                                   _address_inc 0F4C                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0076                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                             ??_BUTTONS_isClicked 0023  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 0F62  
                                  _LED_setColor 05C1                  ?_EUSART1_SetRxInterruptHandler 0020  
                                   __pdataBANK0 006B                                     __pdataBANK1 00DA  
                                 _CLOCK_getTime 0E37                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 0067                                     __pbssBIGRAM 25EF  
                                      ?_DMX_ISR 0076                             __end_of_TM1650_init 0E28  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 00D6  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 001D  
                                 __pcstackBANK0 0020                                   _i2c1_tr_queue 0068  
                     __end_of_BUTTONS_isClicked 07B4                 ??_EUSART1_SetTxInterruptHandler 0022  
                               buttons@lastTime 0051                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0076  
                     __size_of_TM1650_isEnabled 0003                    __size_of_EUSART1_Receive_ISR 0032  
                              LED_setColor@blue 0022                                       _charTable 0446  
                         _TMR0_InterruptHandler 00CE                                       __pnvBANK0 006F  
                                     __pnvBANK1 00CC                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 069F                                        ?___lwdiv 0020  
                                      ?___lwmod 0020                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0089                    ??_INTERRUPT_InterruptManager 007C  
                               writeData@status 0033                                _I2C1_MasterWrite 0721  
                                      _BAUD1CON 011F                                        ?_initLED 0076  
                  __end_of_I2C1_MasterTRBInsert 053F      __end_of_EUSART1_DefaultOverrunErrorHandler 0E24  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 0E20  
                          _EUSART1_ErrorHandler 00D0                         _EUSART1_SetErrorHandler 0E7A  
                             ??_TM1650_setDigit 0037                                ___lwdiv@quotient 0026  
                                      _T2CLKCON 0290        __end_of_I2C1_WaitForLastPacketToComplete 0E31  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0076                _I2C1_WaitForLastPacketToComplete 0E2C  
                        I2C1_MasterRead@trBlock 00C4                               ??_TMR0_Initialize 0022  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0023  
                                     clear_ram0 07F4                                        _PIE0bits 0716  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _LED_task 04A6             __size_of_INTERRUPT_InterruptManager 0035  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                          TM1650_fastPrintNum@i 0040                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0076                             CONTROLLER_task@time 0044  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 0EC7  
                                      _SSP1STAT 018F                        __size_of_CONTROLLER_init 0008  
                      __size_of_CONTROLLER_task 006E                                     _TM1650_init 0E24  
                                     _threshold 006B                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                __size_of_DMX_ISR 0025  
                                     _writeData 0FE3                      __size_of_BUTTONS_isClicked 0021  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 0E37  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 035E  
                                    _ADSTATbits 0115                              controller@lastTime 004F  
         __end_of_EUSART1_SetTxInterruptHandler 0EA7          __size_of_EUSART1_SetTxInterruptHandler 0009  
                 _EUSART1_SetTxInterruptHandler 0E9E                   __size_of_I2C1_BusCollisionISR 0003  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 0060  
                       ??_OSCILLATOR_Initialize 0020                     __size_of_EUSART1_Initialize 0043  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
              __end_of_I2C1_MasterWriteTRBBuild 07D4                            ?_TM1650_fastPrintNum 003B  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                               LED_setColor@lo1 0027                                 LED_setColor@lo2 002B  
                           TM1650_enable@enable 0034                                 LED_setColor@lo3 002F  
                               LED_setColor@lo4 0033             __end_of_EUSART1_DefaultErrorHandler 0E16  
                   _EUSART1_DefaultErrorHandler 0E13                                 LED_setColor@red 0035  
                                   _currentTime 0053                                      _CLOCK_init 0E3D  
                              __size_of_initLED 0028                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0074                                 ___lwdiv@counter 0025  
                                      _detected 0059                                      ?_writeData 002E  
                                      __ptext10 0E9E                                        __ptext11 0E95  
                                      __ptext20 0F4C                                        __ptext12 0E8C  
                                      __ptext21 0F22                                        __ptext13 0E83  
                                      __ptext30 07B4                                        __ptext22 0F0D  
                                      __ptext14 0E7A                                        __ptext31 04FA  
                                      __ptext23 0793                                        __ptext15 0748  
                                      __ptext40 0E19                                        __ptext32 0E2C  
                                      __ptext24 0E45                                        __ptext16 04A6  
                                      __ptext41 0E37                                        __ptext33 0E3D  
                                      __ptext25 035E                                        __ptext17 05C1  
                                      __ptext50 0089                                        __ptext42 0EE5  
                                      __ptext34 0E68                                        __ptext26 06CC  
                                      __ptext18 0E71                                        __ptext51 0F79  
                                      __ptext43 0E5F                                        __ptext35 01D2  
                                      __ptext27 0FAA                                        __ptext19 03D8  
                                      __ptext60 0F62                                        __ptext52 0ED4  
                                      __ptext44 0E56                                        __ptext36 0582  
                                      __ptext28 0FE3                                        __ptext61 0EBA  
                                      __ptext53 0E16                                        __ptext45 0E4D  
                                      __ptext37 07D4                                        __ptext29 0721  
                                      __ptext62 0E10                                        __ptext54 0FC6  
                                      __ptext38 029C                                        __ptext63 0E1C  
                                      __ptext55 076E                                        __ptext47 0EC7  
                                      __ptext39 0638                                        __ptext56 066D  
                                      __ptext48 0E31                                        __ptext57 0E20  
                                      __ptext49 0E12                                        __ptext58 0E11  
                                      __ptext59 0E13                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                           __end_of_BEAT_detected 0E7A  
                                      _lastBeat 004D                                        _lastTime 0055  
                              _TM1650_isEnabled 0E19                                   __size_of_main 003B  
                                 __size_of_init 0020                                    ?_address_dec 0076  
          __end_of_TMR0_DefaultInterruptHandler 0E13           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 0E12                                    ?_address_inc 0076  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 04FA  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                  __end_of_ADCC_StartConversion 0E68                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 0039                      _INTERRUPT_InterruptManager 0004  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 00D4  
                           _EUSART1_Receive_ISR 066D                           ??_TM1650_fastPrintNum 003D  
                             TM1650_setDigit@dp 0035                                      _INTCONbits 000B  
                             ??_CONTROLLER_init 0042                               ??_CONTROLLER_task 0042  
                                      init@port 0020            __end_of_ADCC_DefaultInterruptHandler 0E11  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 0E10  
                                      intlevel1 0000                                  _thresholdCount 00BA  
                          ?_EUSART1_Receive_ISR 0076                                   writeData@data 002E  
                              ___lwmod@dividend 0022                         ?_PIN_MANAGER_Initialize 0076  
                      __end_of_I2C1_MasterWrite 0748                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 0E95  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 0E8C  
                 __end_of_I2C1_FunctionComplete 0EE5                           ?_I2C1_MasterTRBInsert 0020  
                  __end_of_EUSART1_Transmit_ISR 0FE3                   ?_TMR0_DefaultInterruptHandler 0076  
                        TM1650_fastPrintNum@num 003B  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 0FAA  
                      __size_of_I2C1_Initialize 0019                              _eusart1RxLastError 0066  
                                 __pstringtext1 0446                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0020  
                                   ?_CLOCK_init 0076                                 _TMR0_Initialize 0EF9  
                               ___lwmod@counter 0025                        _I2C1_MasterWriteTRBBuild 07B4  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 06CC                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 0F0D                              __size_of_I2C1_Stop 0018  
                 ?_ADCC_DefaultInterruptHandler 0076                         ??_EUSART1_RxDataHandler 0076  
