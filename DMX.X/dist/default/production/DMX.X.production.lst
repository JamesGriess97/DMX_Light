

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 20:59:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	intentry,global,class=CODE,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,delta=2
   107                           	dabs	1,0xCA0,32
   108                           	dabs	1,0xC20,80
   109                           	dabs	1,0xBA0,80
   110                           	dabs	1,0xB20,80
   111                           	dabs	1,0xAA0,80
   112                           	dabs	1,0xA20,80
   113                           	dabs	1,0x9A0,80
   114                           	dabs	1,0x96F,1
   115                           	dabs	1,0x25EF,0,_dmxData
   116                           	dabs	1,0x7E,2
   117  0000                     
   118                           ; Version 2.05
   119                           ; Generated 20/12/2018 GMT
   120                           ; 
   121                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   122                           ; All rights reserved.
   123                           ; 
   124                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   125                           ; 
   126                           ; Redistribution and use in source and binary forms, with or without modification, are
   127                           ; permitted provided that the following conditions are met:
   128                           ; 
   129                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   130                           ;        conditions and the following disclaimer.
   131                           ; 
   132                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   133                           ;        of conditions and the following disclaimer in the documentation and/or other
   134                           ;        materials provided with the distribution.
   135                           ; 
   136                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   137                           ;        software without specific prior written permission.
   138                           ; 
   139                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   140                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   141                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   142                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   143                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   144                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   145                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   146                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   147                           ; 
   148                           ; 
   149                           ; Code-generator required, PIC16F18446 Definitions
   150                           ; 
   151                           ; SFR Addresses
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  008C                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  010F                     	;# 
   207  0110                     	;# 
   208  0111                     	;# 
   209  0112                     	;# 
   210  0113                     	;# 
   211  0114                     	;# 
   212  0115                     	;# 
   213  0116                     	;# 
   214  0117                     	;# 
   215  0118                     	;# 
   216  0119                     	;# 
   217  0119                     	;# 
   218  0119                     	;# 
   219  011A                     	;# 
   220  011A                     	;# 
   221  011A                     	;# 
   222  011B                     	;# 
   223  011B                     	;# 
   224  011B                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011C                     	;# 
   228  011C                     	;# 
   229  011C                     	;# 
   230  011D                     	;# 
   231  011D                     	;# 
   232  011D                     	;# 
   233  011E                     	;# 
   234  011E                     	;# 
   235  011E                     	;# 
   236  011F                     	;# 
   237  011F                     	;# 
   238  011F                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  018E                     	;# 
   244  018F                     	;# 
   245  0190                     	;# 
   246  0191                     	;# 
   247  0192                     	;# 
   248  0196                     	;# 
   249  0197                     	;# 
   250  0198                     	;# 
   251  0199                     	;# 
   252  019A                     	;# 
   253  019B                     	;# 
   254  019C                     	;# 
   255  020C                     	;# 
   256  020D                     	;# 
   257  020E                     	;# 
   258  020E                     	;# 
   259  020F                     	;# 
   260  020F                     	;# 
   261  0210                     	;# 
   262  0210                     	;# 
   263  0211                     	;# 
   264  0211                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0214                     	;# 
   268  0214                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  0218                     	;# 
   276  0219                     	;# 
   277  021A                     	;# 
   278  021A                     	;# 
   279  021B                     	;# 
   280  021B                     	;# 
   281  021C                     	;# 
   282  021C                     	;# 
   283  021D                     	;# 
   284  021D                     	;# 
   285  021E                     	;# 
   286  021F                     	;# 
   287  028C                     	;# 
   288  028C                     	;# 
   289  028D                     	;# 
   290  028D                     	;# 
   291  028E                     	;# 
   292  028F                     	;# 
   293  0290                     	;# 
   294  0291                     	;# 
   295  0292                     	;# 
   296  0292                     	;# 
   297  0293                     	;# 
   298  0293                     	;# 
   299  0294                     	;# 
   300  0295                     	;# 
   301  0296                     	;# 
   302  0297                     	;# 
   303  0298                     	;# 
   304  0298                     	;# 
   305  0299                     	;# 
   306  0299                     	;# 
   307  029A                     	;# 
   308  029B                     	;# 
   309  029C                     	;# 
   310  029D                     	;# 
   311  029F                     	;# 
   312  030C                     	;# 
   313  030C                     	;# 
   314  030D                     	;# 
   315  030E                     	;# 
   316  030F                     	;# 
   317  0310                     	;# 
   318  0310                     	;# 
   319  0311                     	;# 
   320  0312                     	;# 
   321  0313                     	;# 
   322  0314                     	;# 
   323  0314                     	;# 
   324  0315                     	;# 
   325  0316                     	;# 
   326  0317                     	;# 
   327  0318                     	;# 
   328  0318                     	;# 
   329  0319                     	;# 
   330  031A                     	;# 
   331  031B                     	;# 
   332  038C                     	;# 
   333  038C                     	;# 
   334  038D                     	;# 
   335  038E                     	;# 
   336  0390                     	;# 
   337  0390                     	;# 
   338  0391                     	;# 
   339  0392                     	;# 
   340  048C                     	;# 
   341  048C                     	;# 
   342  048D                     	;# 
   343  048E                     	;# 
   344  048F                     	;# 
   345  048F                     	;# 
   346  0490                     	;# 
   347  0491                     	;# 
   348  0492                     	;# 
   349  0492                     	;# 
   350  0493                     	;# 
   351  0494                     	;# 
   352  0495                     	;# 
   353  0495                     	;# 
   354  0496                     	;# 
   355  0497                     	;# 
   356  0498                     	;# 
   357  0499                     	;# 
   358  049A                     	;# 
   359  049B                     	;# 
   360  049C                     	;# 
   361  049D                     	;# 
   362  058C                     	;# 
   363  058C                     	;# 
   364  058D                     	;# 
   365  058E                     	;# 
   366  058F                     	;# 
   367  058F                     	;# 
   368  0590                     	;# 
   369  0591                     	;# 
   370  0592                     	;# 
   371  0593                     	;# 
   372  059C                     	;# 
   373  059C                     	;# 
   374  059D                     	;# 
   375  059D                     	;# 
   376  059E                     	;# 
   377  059F                     	;# 
   378  060C                     	;# 
   379  060C                     	;# 
   380  060D                     	;# 
   381  060D                     	;# 
   382  060E                     	;# 
   383  060F                     	;# 
   384  0610                     	;# 
   385  0611                     	;# 
   386  0612                     	;# 
   387  0613                     	;# 
   388  0614                     	;# 
   389  0616                     	;# 
   390  0616                     	;# 
   391  0617                     	;# 
   392  0617                     	;# 
   393  0618                     	;# 
   394  0619                     	;# 
   395  061A                     	;# 
   396  061B                     	;# 
   397  061C                     	;# 
   398  061D                     	;# 
   399  061E                     	;# 
   400  070C                     	;# 
   401  070D                     	;# 
   402  070E                     	;# 
   403  070F                     	;# 
   404  0710                     	;# 
   405  0711                     	;# 
   406  0712                     	;# 
   407  0713                     	;# 
   408  0714                     	;# 
   409  0716                     	;# 
   410  0717                     	;# 
   411  0718                     	;# 
   412  0719                     	;# 
   413  071A                     	;# 
   414  071B                     	;# 
   415  071C                     	;# 
   416  071D                     	;# 
   417  071E                     	;# 
   418  0796                     	;# 
   419  0797                     	;# 
   420  0798                     	;# 
   421  0799                     	;# 
   422  079A                     	;# 
   423  079B                     	;# 
   424  079C                     	;# 
   425  079D                     	;# 
   426  080C                     	;# 
   427  080D                     	;# 
   428  080E                     	;# 
   429  080F                     	;# 
   430  0810                     	;# 
   431  0811                     	;# 
   432  0812                     	;# 
   433  0813                     	;# 
   434  0814                     	;# 
   435  081A                     	;# 
   436  081A                     	;# 
   437  081B                     	;# 
   438  081C                     	;# 
   439  081C                     	;# 
   440  081D                     	;# 
   441  081E                     	;# 
   442  081F                     	;# 
   443  088C                     	;# 
   444  088D                     	;# 
   445  088E                     	;# 
   446  088F                     	;# 
   447  0890                     	;# 
   448  0891                     	;# 
   449  0892                     	;# 
   450  0893                     	;# 
   451  0895                     	;# 
   452  0896                     	;# 
   453  0897                     	;# 
   454  0898                     	;# 
   455  0899                     	;# 
   456  089A                     	;# 
   457  089B                     	;# 
   458  090C                     	;# 
   459  090E                     	;# 
   460  090F                     	;# 
   461  091F                     	;# 
   462  098F                     	;# 
   463  098F                     	;# 
   464  0990                     	;# 
   465  0991                     	;# 
   466  0992                     	;# 
   467  0993                     	;# 
   468  0994                     	;# 
   469  0995                     	;# 
   470  0996                     	;# 
   471  0997                     	;# 
   472  1E0F                     	;# 
   473  1E10                     	;# 
   474  1E11                     	;# 
   475  1E12                     	;# 
   476  1E13                     	;# 
   477  1E14                     	;# 
   478  1E15                     	;# 
   479  1E16                     	;# 
   480  1E17                     	;# 
   481  1E18                     	;# 
   482  1E19                     	;# 
   483  1E1A                     	;# 
   484  1E1B                     	;# 
   485  1E1C                     	;# 
   486  1E1D                     	;# 
   487  1E1E                     	;# 
   488  1E1F                     	;# 
   489  1E20                     	;# 
   490  1E21                     	;# 
   491  1E22                     	;# 
   492  1E23                     	;# 
   493  1E24                     	;# 
   494  1E25                     	;# 
   495  1E26                     	;# 
   496  1E27                     	;# 
   497  1E28                     	;# 
   498  1E29                     	;# 
   499  1E2A                     	;# 
   500  1E2B                     	;# 
   501  1E2C                     	;# 
   502  1E2D                     	;# 
   503  1E2E                     	;# 
   504  1E2F                     	;# 
   505  1E30                     	;# 
   506  1E31                     	;# 
   507  1E32                     	;# 
   508  1E33                     	;# 
   509  1E34                     	;# 
   510  1E35                     	;# 
   511  1E36                     	;# 
   512  1E37                     	;# 
   513  1E8F                     	;# 
   514  1E90                     	;# 
   515  1E91                     	;# 
   516  1E92                     	;# 
   517  1E93                     	;# 
   518  1E94                     	;# 
   519  1E95                     	;# 
   520  1E96                     	;# 
   521  1E97                     	;# 
   522  1E9C                     	;# 
   523  1E9D                     	;# 
   524  1E9E                     	;# 
   525  1EA1                     	;# 
   526  1EA2                     	;# 
   527  1EA3                     	;# 
   528  1EA4                     	;# 
   529  1EA9                     	;# 
   530  1EAA                     	;# 
   531  1EB1                     	;# 
   532  1EB2                     	;# 
   533  1EB8                     	;# 
   534  1EB9                     	;# 
   535  1EBA                     	;# 
   536  1EBB                     	;# 
   537  1EBC                     	;# 
   538  1EBD                     	;# 
   539  1EBE                     	;# 
   540  1EC3                     	;# 
   541  1EC5                     	;# 
   542  1EC6                     	;# 
   543  1EC7                     	;# 
   544  1EC8                     	;# 
   545  1EC9                     	;# 
   546  1ECA                     	;# 
   547  1ECB                     	;# 
   548  1ECB                     	;# 
   549  1ECB                     	;# 
   550  1ECC                     	;# 
   551  1ECC                     	;# 
   552  1ECC                     	;# 
   553  1F10                     	;# 
   554  1F11                     	;# 
   555  1F12                     	;# 
   556  1F14                     	;# 
   557  1F15                     	;# 
   558  1F1C                     	;# 
   559  1F1D                     	;# 
   560  1F1E                     	;# 
   561  1F1F                     	;# 
   562  1F20                     	;# 
   563  1F21                     	;# 
   564  1F22                     	;# 
   565  1F23                     	;# 
   566  1F24                     	;# 
   567  1F25                     	;# 
   568  1F26                     	;# 
   569  1F27                     	;# 
   570  1F38                     	;# 
   571  1F39                     	;# 
   572  1F3A                     	;# 
   573  1F3B                     	;# 
   574  1F3C                     	;# 
   575  1F3D                     	;# 
   576  1F3E                     	;# 
   577  1F3F                     	;# 
   578  1F43                     	;# 
   579  1F44                     	;# 
   580  1F45                     	;# 
   581  1F46                     	;# 
   582  1F47                     	;# 
   583  1F48                     	;# 
   584  1F49                     	;# 
   585  1F4A                     	;# 
   586  1F4E                     	;# 
   587  1F4F                     	;# 
   588  1F50                     	;# 
   589  1F51                     	;# 
   590  1F52                     	;# 
   591  1F53                     	;# 
   592  1F54                     	;# 
   593  1F55                     	;# 
   594  1FE4                     	;# 
   595  1FE5                     	;# 
   596  1FE6                     	;# 
   597  1FE7                     	;# 
   598  1FE8                     	;# 
   599  1FE8                     	;# 
   600  1FE9                     	;# 
   601  1FEA                     	;# 
   602  1FEB                     	;# 
   603  1FED                     	;# 
   604  1FEE                     	;# 
   605  1FEF                     	;# 
   606  0000                     	;# 
   607  0001                     	;# 
   608  0002                     	;# 
   609  0003                     	;# 
   610  0004                     	;# 
   611  0005                     	;# 
   612  0006                     	;# 
   613  0007                     	;# 
   614  0008                     	;# 
   615  0009                     	;# 
   616  000A                     	;# 
   617  000B                     	;# 
   618  000C                     	;# 
   619  000D                     	;# 
   620  000E                     	;# 
   621  0012                     	;# 
   622  0013                     	;# 
   623  0014                     	;# 
   624  0018                     	;# 
   625  0019                     	;# 
   626  001A                     	;# 
   627  008C                     	;# 
   628  008C                     	;# 
   629  008D                     	;# 
   630  008E                     	;# 
   631  008E                     	;# 
   632  008F                     	;# 
   633  0090                     	;# 
   634  0090                     	;# 
   635  0091                     	;# 
   636  0092                     	;# 
   637  0092                     	;# 
   638  0093                     	;# 
   639  0094                     	;# 
   640  0094                     	;# 
   641  0095                     	;# 
   642  0096                     	;# 
   643  0096                     	;# 
   644  0097                     	;# 
   645  0098                     	;# 
   646  0099                     	;# 
   647  009A                     	;# 
   648  009B                     	;# 
   649  009B                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  009F                     	;# 
   655  010C                     	;# 
   656  010C                     	;# 
   657  010D                     	;# 
   658  010E                     	;# 
   659  010F                     	;# 
   660  010F                     	;# 
   661  0110                     	;# 
   662  0111                     	;# 
   663  0112                     	;# 
   664  0113                     	;# 
   665  0114                     	;# 
   666  0115                     	;# 
   667  0116                     	;# 
   668  0117                     	;# 
   669  0118                     	;# 
   670  0119                     	;# 
   671  0119                     	;# 
   672  0119                     	;# 
   673  011A                     	;# 
   674  011A                     	;# 
   675  011A                     	;# 
   676  011B                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011C                     	;# 
   682  011C                     	;# 
   683  011C                     	;# 
   684  011D                     	;# 
   685  011D                     	;# 
   686  011D                     	;# 
   687  011E                     	;# 
   688  011E                     	;# 
   689  011E                     	;# 
   690  011F                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  018C                     	;# 
   696  018D                     	;# 
   697  018E                     	;# 
   698  018F                     	;# 
   699  0190                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0196                     	;# 
   703  0197                     	;# 
   704  0198                     	;# 
   705  0199                     	;# 
   706  019A                     	;# 
   707  019B                     	;# 
   708  019C                     	;# 
   709  020C                     	;# 
   710  020D                     	;# 
   711  020E                     	;# 
   712  020E                     	;# 
   713  020F                     	;# 
   714  020F                     	;# 
   715  0210                     	;# 
   716  0210                     	;# 
   717  0211                     	;# 
   718  0211                     	;# 
   719  0212                     	;# 
   720  0213                     	;# 
   721  0214                     	;# 
   722  0214                     	;# 
   723  0215                     	;# 
   724  0215                     	;# 
   725  0216                     	;# 
   726  0216                     	;# 
   727  0217                     	;# 
   728  0217                     	;# 
   729  0218                     	;# 
   730  0219                     	;# 
   731  021A                     	;# 
   732  021A                     	;# 
   733  021B                     	;# 
   734  021B                     	;# 
   735  021C                     	;# 
   736  021C                     	;# 
   737  021D                     	;# 
   738  021D                     	;# 
   739  021E                     	;# 
   740  021F                     	;# 
   741  028C                     	;# 
   742  028C                     	;# 
   743  028D                     	;# 
   744  028D                     	;# 
   745  028E                     	;# 
   746  028F                     	;# 
   747  0290                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0292                     	;# 
   751  0293                     	;# 
   752  0293                     	;# 
   753  0294                     	;# 
   754  0295                     	;# 
   755  0296                     	;# 
   756  0297                     	;# 
   757  0298                     	;# 
   758  0298                     	;# 
   759  0299                     	;# 
   760  0299                     	;# 
   761  029A                     	;# 
   762  029B                     	;# 
   763  029C                     	;# 
   764  029D                     	;# 
   765  029F                     	;# 
   766  030C                     	;# 
   767  030C                     	;# 
   768  030D                     	;# 
   769  030E                     	;# 
   770  030F                     	;# 
   771  0310                     	;# 
   772  0310                     	;# 
   773  0311                     	;# 
   774  0312                     	;# 
   775  0313                     	;# 
   776  0314                     	;# 
   777  0314                     	;# 
   778  0315                     	;# 
   779  0316                     	;# 
   780  0317                     	;# 
   781  0318                     	;# 
   782  0318                     	;# 
   783  0319                     	;# 
   784  031A                     	;# 
   785  031B                     	;# 
   786  038C                     	;# 
   787  038C                     	;# 
   788  038D                     	;# 
   789  038E                     	;# 
   790  0390                     	;# 
   791  0390                     	;# 
   792  0391                     	;# 
   793  0392                     	;# 
   794  048C                     	;# 
   795  048C                     	;# 
   796  048D                     	;# 
   797  048E                     	;# 
   798  048F                     	;# 
   799  048F                     	;# 
   800  0490                     	;# 
   801  0491                     	;# 
   802  0492                     	;# 
   803  0492                     	;# 
   804  0493                     	;# 
   805  0494                     	;# 
   806  0495                     	;# 
   807  0495                     	;# 
   808  0496                     	;# 
   809  0497                     	;# 
   810  0498                     	;# 
   811  0499                     	;# 
   812  049A                     	;# 
   813  049B                     	;# 
   814  049C                     	;# 
   815  049D                     	;# 
   816  058C                     	;# 
   817  058C                     	;# 
   818  058D                     	;# 
   819  058E                     	;# 
   820  058F                     	;# 
   821  058F                     	;# 
   822  0590                     	;# 
   823  0591                     	;# 
   824  0592                     	;# 
   825  0593                     	;# 
   826  059C                     	;# 
   827  059C                     	;# 
   828  059D                     	;# 
   829  059D                     	;# 
   830  059E                     	;# 
   831  059F                     	;# 
   832  060C                     	;# 
   833  060C                     	;# 
   834  060D                     	;# 
   835  060D                     	;# 
   836  060E                     	;# 
   837  060F                     	;# 
   838  0610                     	;# 
   839  0611                     	;# 
   840  0612                     	;# 
   841  0613                     	;# 
   842  0614                     	;# 
   843  0616                     	;# 
   844  0616                     	;# 
   845  0617                     	;# 
   846  0617                     	;# 
   847  0618                     	;# 
   848  0619                     	;# 
   849  061A                     	;# 
   850  061B                     	;# 
   851  061C                     	;# 
   852  061D                     	;# 
   853  061E                     	;# 
   854  070C                     	;# 
   855  070D                     	;# 
   856  070E                     	;# 
   857  070F                     	;# 
   858  0710                     	;# 
   859  0711                     	;# 
   860  0712                     	;# 
   861  0713                     	;# 
   862  0714                     	;# 
   863  0716                     	;# 
   864  0717                     	;# 
   865  0718                     	;# 
   866  0719                     	;# 
   867  071A                     	;# 
   868  071B                     	;# 
   869  071C                     	;# 
   870  071D                     	;# 
   871  071E                     	;# 
   872  0796                     	;# 
   873  0797                     	;# 
   874  0798                     	;# 
   875  0799                     	;# 
   876  079A                     	;# 
   877  079B                     	;# 
   878  079C                     	;# 
   879  079D                     	;# 
   880  080C                     	;# 
   881  080D                     	;# 
   882  080E                     	;# 
   883  080F                     	;# 
   884  0810                     	;# 
   885  0811                     	;# 
   886  0812                     	;# 
   887  0813                     	;# 
   888  0814                     	;# 
   889  081A                     	;# 
   890  081A                     	;# 
   891  081B                     	;# 
   892  081C                     	;# 
   893  081C                     	;# 
   894  081D                     	;# 
   895  081E                     	;# 
   896  081F                     	;# 
   897  088C                     	;# 
   898  088D                     	;# 
   899  088E                     	;# 
   900  088F                     	;# 
   901  0890                     	;# 
   902  0891                     	;# 
   903  0892                     	;# 
   904  0893                     	;# 
   905  0895                     	;# 
   906  0896                     	;# 
   907  0897                     	;# 
   908  0898                     	;# 
   909  0899                     	;# 
   910  089A                     	;# 
   911  089B                     	;# 
   912  090C                     	;# 
   913  090E                     	;# 
   914  090F                     	;# 
   915  091F                     	;# 
   916  098F                     	;# 
   917  098F                     	;# 
   918  0990                     	;# 
   919  0991                     	;# 
   920  0992                     	;# 
   921  0993                     	;# 
   922  0994                     	;# 
   923  0995                     	;# 
   924  0996                     	;# 
   925  0997                     	;# 
   926  1E0F                     	;# 
   927  1E10                     	;# 
   928  1E11                     	;# 
   929  1E12                     	;# 
   930  1E13                     	;# 
   931  1E14                     	;# 
   932  1E15                     	;# 
   933  1E16                     	;# 
   934  1E17                     	;# 
   935  1E18                     	;# 
   936  1E19                     	;# 
   937  1E1A                     	;# 
   938  1E1B                     	;# 
   939  1E1C                     	;# 
   940  1E1D                     	;# 
   941  1E1E                     	;# 
   942  1E1F                     	;# 
   943  1E20                     	;# 
   944  1E21                     	;# 
   945  1E22                     	;# 
   946  1E23                     	;# 
   947  1E24                     	;# 
   948  1E25                     	;# 
   949  1E26                     	;# 
   950  1E27                     	;# 
   951  1E28                     	;# 
   952  1E29                     	;# 
   953  1E2A                     	;# 
   954  1E2B                     	;# 
   955  1E2C                     	;# 
   956  1E2D                     	;# 
   957  1E2E                     	;# 
   958  1E2F                     	;# 
   959  1E30                     	;# 
   960  1E31                     	;# 
   961  1E32                     	;# 
   962  1E33                     	;# 
   963  1E34                     	;# 
   964  1E35                     	;# 
   965  1E36                     	;# 
   966  1E37                     	;# 
   967  1E8F                     	;# 
   968  1E90                     	;# 
   969  1E91                     	;# 
   970  1E92                     	;# 
   971  1E93                     	;# 
   972  1E94                     	;# 
   973  1E95                     	;# 
   974  1E96                     	;# 
   975  1E97                     	;# 
   976  1E9C                     	;# 
   977  1E9D                     	;# 
   978  1E9E                     	;# 
   979  1EA1                     	;# 
   980  1EA2                     	;# 
   981  1EA3                     	;# 
   982  1EA4                     	;# 
   983  1EA9                     	;# 
   984  1EAA                     	;# 
   985  1EB1                     	;# 
   986  1EB2                     	;# 
   987  1EB8                     	;# 
   988  1EB9                     	;# 
   989  1EBA                     	;# 
   990  1EBB                     	;# 
   991  1EBC                     	;# 
   992  1EBD                     	;# 
   993  1EBE                     	;# 
   994  1EC3                     	;# 
   995  1EC5                     	;# 
   996  1EC6                     	;# 
   997  1EC7                     	;# 
   998  1EC8                     	;# 
   999  1EC9                     	;# 
  1000  1ECA                     	;# 
  1001  1ECB                     	;# 
  1002  1ECB                     	;# 
  1003  1ECB                     	;# 
  1004  1ECC                     	;# 
  1005  1ECC                     	;# 
  1006  1ECC                     	;# 
  1007  1F10                     	;# 
  1008  1F11                     	;# 
  1009  1F12                     	;# 
  1010  1F14                     	;# 
  1011  1F15                     	;# 
  1012  1F1C                     	;# 
  1013  1F1D                     	;# 
  1014  1F1E                     	;# 
  1015  1F1F                     	;# 
  1016  1F20                     	;# 
  1017  1F21                     	;# 
  1018  1F22                     	;# 
  1019  1F23                     	;# 
  1020  1F24                     	;# 
  1021  1F25                     	;# 
  1022  1F26                     	;# 
  1023  1F27                     	;# 
  1024  1F38                     	;# 
  1025  1F39                     	;# 
  1026  1F3A                     	;# 
  1027  1F3B                     	;# 
  1028  1F3C                     	;# 
  1029  1F3D                     	;# 
  1030  1F3E                     	;# 
  1031  1F3F                     	;# 
  1032  1F43                     	;# 
  1033  1F44                     	;# 
  1034  1F45                     	;# 
  1035  1F46                     	;# 
  1036  1F47                     	;# 
  1037  1F48                     	;# 
  1038  1F49                     	;# 
  1039  1F4A                     	;# 
  1040  1F4E                     	;# 
  1041  1F4F                     	;# 
  1042  1F50                     	;# 
  1043  1F51                     	;# 
  1044  1F52                     	;# 
  1045  1F53                     	;# 
  1046  1F54                     	;# 
  1047  1F55                     	;# 
  1048  1FE4                     	;# 
  1049  1FE5                     	;# 
  1050  1FE6                     	;# 
  1051  1FE7                     	;# 
  1052  1FE8                     	;# 
  1053  1FE8                     	;# 
  1054  1FE9                     	;# 
  1055  1FEA                     	;# 
  1056  1FEB                     	;# 
  1057  1FED                     	;# 
  1058  1FEE                     	;# 
  1059  1FEF                     	;# 
  1060  0000                     	;# 
  1061  0001                     	;# 
  1062  0002                     	;# 
  1063  0003                     	;# 
  1064  0004                     	;# 
  1065  0005                     	;# 
  1066  0006                     	;# 
  1067  0007                     	;# 
  1068  0008                     	;# 
  1069  0009                     	;# 
  1070  000A                     	;# 
  1071  000B                     	;# 
  1072  000C                     	;# 
  1073  000D                     	;# 
  1074  000E                     	;# 
  1075  0012                     	;# 
  1076  0013                     	;# 
  1077  0014                     	;# 
  1078  0018                     	;# 
  1079  0019                     	;# 
  1080  001A                     	;# 
  1081  008C                     	;# 
  1082  008C                     	;# 
  1083  008D                     	;# 
  1084  008E                     	;# 
  1085  008E                     	;# 
  1086  008F                     	;# 
  1087  0090                     	;# 
  1088  0090                     	;# 
  1089  0091                     	;# 
  1090  0092                     	;# 
  1091  0092                     	;# 
  1092  0093                     	;# 
  1093  0094                     	;# 
  1094  0094                     	;# 
  1095  0095                     	;# 
  1096  0096                     	;# 
  1097  0096                     	;# 
  1098  0097                     	;# 
  1099  0098                     	;# 
  1100  0099                     	;# 
  1101  009A                     	;# 
  1102  009B                     	;# 
  1103  009B                     	;# 
  1104  009C                     	;# 
  1105  009D                     	;# 
  1106  009D                     	;# 
  1107  009E                     	;# 
  1108  009F                     	;# 
  1109  010C                     	;# 
  1110  010C                     	;# 
  1111  010D                     	;# 
  1112  010E                     	;# 
  1113  010F                     	;# 
  1114  010F                     	;# 
  1115  0110                     	;# 
  1116  0111                     	;# 
  1117  0112                     	;# 
  1118  0113                     	;# 
  1119  0114                     	;# 
  1120  0115                     	;# 
  1121  0116                     	;# 
  1122  0117                     	;# 
  1123  0118                     	;# 
  1124  0119                     	;# 
  1125  0119                     	;# 
  1126  0119                     	;# 
  1127  011A                     	;# 
  1128  011A                     	;# 
  1129  011A                     	;# 
  1130  011B                     	;# 
  1131  011B                     	;# 
  1132  011B                     	;# 
  1133  011B                     	;# 
  1134  011B                     	;# 
  1135  011C                     	;# 
  1136  011C                     	;# 
  1137  011C                     	;# 
  1138  011D                     	;# 
  1139  011D                     	;# 
  1140  011D                     	;# 
  1141  011E                     	;# 
  1142  011E                     	;# 
  1143  011E                     	;# 
  1144  011F                     	;# 
  1145  011F                     	;# 
  1146  011F                     	;# 
  1147  011F                     	;# 
  1148  011F                     	;# 
  1149  018C                     	;# 
  1150  018D                     	;# 
  1151  018E                     	;# 
  1152  018F                     	;# 
  1153  0190                     	;# 
  1154  0191                     	;# 
  1155  0192                     	;# 
  1156  0196                     	;# 
  1157  0197                     	;# 
  1158  0198                     	;# 
  1159  0199                     	;# 
  1160  019A                     	;# 
  1161  019B                     	;# 
  1162  019C                     	;# 
  1163  020C                     	;# 
  1164  020D                     	;# 
  1165  020E                     	;# 
  1166  020E                     	;# 
  1167  020F                     	;# 
  1168  020F                     	;# 
  1169  0210                     	;# 
  1170  0210                     	;# 
  1171  0211                     	;# 
  1172  0211                     	;# 
  1173  0212                     	;# 
  1174  0213                     	;# 
  1175  0214                     	;# 
  1176  0214                     	;# 
  1177  0215                     	;# 
  1178  0215                     	;# 
  1179  0216                     	;# 
  1180  0216                     	;# 
  1181  0217                     	;# 
  1182  0217                     	;# 
  1183  0218                     	;# 
  1184  0219                     	;# 
  1185  021A                     	;# 
  1186  021A                     	;# 
  1187  021B                     	;# 
  1188  021B                     	;# 
  1189  021C                     	;# 
  1190  021C                     	;# 
  1191  021D                     	;# 
  1192  021D                     	;# 
  1193  021E                     	;# 
  1194  021F                     	;# 
  1195  028C                     	;# 
  1196  028C                     	;# 
  1197  028D                     	;# 
  1198  028D                     	;# 
  1199  028E                     	;# 
  1200  028F                     	;# 
  1201  0290                     	;# 
  1202  0291                     	;# 
  1203  0292                     	;# 
  1204  0292                     	;# 
  1205  0293                     	;# 
  1206  0293                     	;# 
  1207  0294                     	;# 
  1208  0295                     	;# 
  1209  0296                     	;# 
  1210  0297                     	;# 
  1211  0298                     	;# 
  1212  0298                     	;# 
  1213  0299                     	;# 
  1214  0299                     	;# 
  1215  029A                     	;# 
  1216  029B                     	;# 
  1217  029C                     	;# 
  1218  029D                     	;# 
  1219  029F                     	;# 
  1220  030C                     	;# 
  1221  030C                     	;# 
  1222  030D                     	;# 
  1223  030E                     	;# 
  1224  030F                     	;# 
  1225  0310                     	;# 
  1226  0310                     	;# 
  1227  0311                     	;# 
  1228  0312                     	;# 
  1229  0313                     	;# 
  1230  0314                     	;# 
  1231  0314                     	;# 
  1232  0315                     	;# 
  1233  0316                     	;# 
  1234  0317                     	;# 
  1235  0318                     	;# 
  1236  0318                     	;# 
  1237  0319                     	;# 
  1238  031A                     	;# 
  1239  031B                     	;# 
  1240  038C                     	;# 
  1241  038C                     	;# 
  1242  038D                     	;# 
  1243  038E                     	;# 
  1244  0390                     	;# 
  1245  0390                     	;# 
  1246  0391                     	;# 
  1247  0392                     	;# 
  1248  048C                     	;# 
  1249  048C                     	;# 
  1250  048D                     	;# 
  1251  048E                     	;# 
  1252  048F                     	;# 
  1253  048F                     	;# 
  1254  0490                     	;# 
  1255  0491                     	;# 
  1256  0492                     	;# 
  1257  0492                     	;# 
  1258  0493                     	;# 
  1259  0494                     	;# 
  1260  0495                     	;# 
  1261  0495                     	;# 
  1262  0496                     	;# 
  1263  0497                     	;# 
  1264  0498                     	;# 
  1265  0499                     	;# 
  1266  049A                     	;# 
  1267  049B                     	;# 
  1268  049C                     	;# 
  1269  049D                     	;# 
  1270  058C                     	;# 
  1271  058C                     	;# 
  1272  058D                     	;# 
  1273  058E                     	;# 
  1274  058F                     	;# 
  1275  058F                     	;# 
  1276  0590                     	;# 
  1277  0591                     	;# 
  1278  0592                     	;# 
  1279  0593                     	;# 
  1280  059C                     	;# 
  1281  059C                     	;# 
  1282  059D                     	;# 
  1283  059D                     	;# 
  1284  059E                     	;# 
  1285  059F                     	;# 
  1286  060C                     	;# 
  1287  060C                     	;# 
  1288  060D                     	;# 
  1289  060D                     	;# 
  1290  060E                     	;# 
  1291  060F                     	;# 
  1292  0610                     	;# 
  1293  0611                     	;# 
  1294  0612                     	;# 
  1295  0613                     	;# 
  1296  0614                     	;# 
  1297  0616                     	;# 
  1298  0616                     	;# 
  1299  0617                     	;# 
  1300  0617                     	;# 
  1301  0618                     	;# 
  1302  0619                     	;# 
  1303  061A                     	;# 
  1304  061B                     	;# 
  1305  061C                     	;# 
  1306  061D                     	;# 
  1307  061E                     	;# 
  1308  070C                     	;# 
  1309  070D                     	;# 
  1310  070E                     	;# 
  1311  070F                     	;# 
  1312  0710                     	;# 
  1313  0711                     	;# 
  1314  0712                     	;# 
  1315  0713                     	;# 
  1316  0714                     	;# 
  1317  0716                     	;# 
  1318  0717                     	;# 
  1319  0718                     	;# 
  1320  0719                     	;# 
  1321  071A                     	;# 
  1322  071B                     	;# 
  1323  071C                     	;# 
  1324  071D                     	;# 
  1325  071E                     	;# 
  1326  0796                     	;# 
  1327  0797                     	;# 
  1328  0798                     	;# 
  1329  0799                     	;# 
  1330  079A                     	;# 
  1331  079B                     	;# 
  1332  079C                     	;# 
  1333  079D                     	;# 
  1334  080C                     	;# 
  1335  080D                     	;# 
  1336  080E                     	;# 
  1337  080F                     	;# 
  1338  0810                     	;# 
  1339  0811                     	;# 
  1340  0812                     	;# 
  1341  0813                     	;# 
  1342  0814                     	;# 
  1343  081A                     	;# 
  1344  081A                     	;# 
  1345  081B                     	;# 
  1346  081C                     	;# 
  1347  081C                     	;# 
  1348  081D                     	;# 
  1349  081E                     	;# 
  1350  081F                     	;# 
  1351  088C                     	;# 
  1352  088D                     	;# 
  1353  088E                     	;# 
  1354  088F                     	;# 
  1355  0890                     	;# 
  1356  0891                     	;# 
  1357  0892                     	;# 
  1358  0893                     	;# 
  1359  0895                     	;# 
  1360  0896                     	;# 
  1361  0897                     	;# 
  1362  0898                     	;# 
  1363  0899                     	;# 
  1364  089A                     	;# 
  1365  089B                     	;# 
  1366  090C                     	;# 
  1367  090E                     	;# 
  1368  090F                     	;# 
  1369  091F                     	;# 
  1370  098F                     	;# 
  1371  098F                     	;# 
  1372  0990                     	;# 
  1373  0991                     	;# 
  1374  0992                     	;# 
  1375  0993                     	;# 
  1376  0994                     	;# 
  1377  0995                     	;# 
  1378  0996                     	;# 
  1379  0997                     	;# 
  1380  1E0F                     	;# 
  1381  1E10                     	;# 
  1382  1E11                     	;# 
  1383  1E12                     	;# 
  1384  1E13                     	;# 
  1385  1E14                     	;# 
  1386  1E15                     	;# 
  1387  1E16                     	;# 
  1388  1E17                     	;# 
  1389  1E18                     	;# 
  1390  1E19                     	;# 
  1391  1E1A                     	;# 
  1392  1E1B                     	;# 
  1393  1E1C                     	;# 
  1394  1E1D                     	;# 
  1395  1E1E                     	;# 
  1396  1E1F                     	;# 
  1397  1E20                     	;# 
  1398  1E21                     	;# 
  1399  1E22                     	;# 
  1400  1E23                     	;# 
  1401  1E24                     	;# 
  1402  1E25                     	;# 
  1403  1E26                     	;# 
  1404  1E27                     	;# 
  1405  1E28                     	;# 
  1406  1E29                     	;# 
  1407  1E2A                     	;# 
  1408  1E2B                     	;# 
  1409  1E2C                     	;# 
  1410  1E2D                     	;# 
  1411  1E2E                     	;# 
  1412  1E2F                     	;# 
  1413  1E30                     	;# 
  1414  1E31                     	;# 
  1415  1E32                     	;# 
  1416  1E33                     	;# 
  1417  1E34                     	;# 
  1418  1E35                     	;# 
  1419  1E36                     	;# 
  1420  1E37                     	;# 
  1421  1E8F                     	;# 
  1422  1E90                     	;# 
  1423  1E91                     	;# 
  1424  1E92                     	;# 
  1425  1E93                     	;# 
  1426  1E94                     	;# 
  1427  1E95                     	;# 
  1428  1E96                     	;# 
  1429  1E97                     	;# 
  1430  1E9C                     	;# 
  1431  1E9D                     	;# 
  1432  1E9E                     	;# 
  1433  1EA1                     	;# 
  1434  1EA2                     	;# 
  1435  1EA3                     	;# 
  1436  1EA4                     	;# 
  1437  1EA9                     	;# 
  1438  1EAA                     	;# 
  1439  1EB1                     	;# 
  1440  1EB2                     	;# 
  1441  1EB8                     	;# 
  1442  1EB9                     	;# 
  1443  1EBA                     	;# 
  1444  1EBB                     	;# 
  1445  1EBC                     	;# 
  1446  1EBD                     	;# 
  1447  1EBE                     	;# 
  1448  1EC3                     	;# 
  1449  1EC5                     	;# 
  1450  1EC6                     	;# 
  1451  1EC7                     	;# 
  1452  1EC8                     	;# 
  1453  1EC9                     	;# 
  1454  1ECA                     	;# 
  1455  1ECB                     	;# 
  1456  1ECB                     	;# 
  1457  1ECB                     	;# 
  1458  1ECC                     	;# 
  1459  1ECC                     	;# 
  1460  1ECC                     	;# 
  1461  1F10                     	;# 
  1462  1F11                     	;# 
  1463  1F12                     	;# 
  1464  1F14                     	;# 
  1465  1F15                     	;# 
  1466  1F1C                     	;# 
  1467  1F1D                     	;# 
  1468  1F1E                     	;# 
  1469  1F1F                     	;# 
  1470  1F20                     	;# 
  1471  1F21                     	;# 
  1472  1F22                     	;# 
  1473  1F23                     	;# 
  1474  1F24                     	;# 
  1475  1F25                     	;# 
  1476  1F26                     	;# 
  1477  1F27                     	;# 
  1478  1F38                     	;# 
  1479  1F39                     	;# 
  1480  1F3A                     	;# 
  1481  1F3B                     	;# 
  1482  1F3C                     	;# 
  1483  1F3D                     	;# 
  1484  1F3E                     	;# 
  1485  1F3F                     	;# 
  1486  1F43                     	;# 
  1487  1F44                     	;# 
  1488  1F45                     	;# 
  1489  1F46                     	;# 
  1490  1F47                     	;# 
  1491  1F48                     	;# 
  1492  1F49                     	;# 
  1493  1F4A                     	;# 
  1494  1F4E                     	;# 
  1495  1F4F                     	;# 
  1496  1F50                     	;# 
  1497  1F51                     	;# 
  1498  1F52                     	;# 
  1499  1F53                     	;# 
  1500  1F54                     	;# 
  1501  1F55                     	;# 
  1502  1FE4                     	;# 
  1503  1FE5                     	;# 
  1504  1FE6                     	;# 
  1505  1FE7                     	;# 
  1506  1FE8                     	;# 
  1507  1FE8                     	;# 
  1508  1FE9                     	;# 
  1509  1FEA                     	;# 
  1510  1FEB                     	;# 
  1511  1FED                     	;# 
  1512  1FEE                     	;# 
  1513  1FEF                     	;# 
  1514  0000                     	;# 
  1515  0001                     	;# 
  1516  0002                     	;# 
  1517  0003                     	;# 
  1518  0004                     	;# 
  1519  0005                     	;# 
  1520  0006                     	;# 
  1521  0007                     	;# 
  1522  0008                     	;# 
  1523  0009                     	;# 
  1524  000A                     	;# 
  1525  000B                     	;# 
  1526  000C                     	;# 
  1527  000D                     	;# 
  1528  000E                     	;# 
  1529  0012                     	;# 
  1530  0013                     	;# 
  1531  0014                     	;# 
  1532  0018                     	;# 
  1533  0019                     	;# 
  1534  001A                     	;# 
  1535  008C                     	;# 
  1536  008C                     	;# 
  1537  008D                     	;# 
  1538  008E                     	;# 
  1539  008E                     	;# 
  1540  008F                     	;# 
  1541  0090                     	;# 
  1542  0090                     	;# 
  1543  0091                     	;# 
  1544  0092                     	;# 
  1545  0092                     	;# 
  1546  0093                     	;# 
  1547  0094                     	;# 
  1548  0094                     	;# 
  1549  0095                     	;# 
  1550  0096                     	;# 
  1551  0096                     	;# 
  1552  0097                     	;# 
  1553  0098                     	;# 
  1554  0099                     	;# 
  1555  009A                     	;# 
  1556  009B                     	;# 
  1557  009B                     	;# 
  1558  009C                     	;# 
  1559  009D                     	;# 
  1560  009D                     	;# 
  1561  009E                     	;# 
  1562  009F                     	;# 
  1563  010C                     	;# 
  1564  010C                     	;# 
  1565  010D                     	;# 
  1566  010E                     	;# 
  1567  010F                     	;# 
  1568  010F                     	;# 
  1569  0110                     	;# 
  1570  0111                     	;# 
  1571  0112                     	;# 
  1572  0113                     	;# 
  1573  0114                     	;# 
  1574  0115                     	;# 
  1575  0116                     	;# 
  1576  0117                     	;# 
  1577  0118                     	;# 
  1578  0119                     	;# 
  1579  0119                     	;# 
  1580  0119                     	;# 
  1581  011A                     	;# 
  1582  011A                     	;# 
  1583  011A                     	;# 
  1584  011B                     	;# 
  1585  011B                     	;# 
  1586  011B                     	;# 
  1587  011B                     	;# 
  1588  011B                     	;# 
  1589  011C                     	;# 
  1590  011C                     	;# 
  1591  011C                     	;# 
  1592  011D                     	;# 
  1593  011D                     	;# 
  1594  011D                     	;# 
  1595  011E                     	;# 
  1596  011E                     	;# 
  1597  011E                     	;# 
  1598  011F                     	;# 
  1599  011F                     	;# 
  1600  011F                     	;# 
  1601  011F                     	;# 
  1602  011F                     	;# 
  1603  018C                     	;# 
  1604  018D                     	;# 
  1605  018E                     	;# 
  1606  018F                     	;# 
  1607  0190                     	;# 
  1608  0191                     	;# 
  1609  0192                     	;# 
  1610  0196                     	;# 
  1611  0197                     	;# 
  1612  0198                     	;# 
  1613  0199                     	;# 
  1614  019A                     	;# 
  1615  019B                     	;# 
  1616  019C                     	;# 
  1617  020C                     	;# 
  1618  020D                     	;# 
  1619  020E                     	;# 
  1620  020E                     	;# 
  1621  020F                     	;# 
  1622  020F                     	;# 
  1623  0210                     	;# 
  1624  0210                     	;# 
  1625  0211                     	;# 
  1626  0211                     	;# 
  1627  0212                     	;# 
  1628  0213                     	;# 
  1629  0214                     	;# 
  1630  0214                     	;# 
  1631  0215                     	;# 
  1632  0215                     	;# 
  1633  0216                     	;# 
  1634  0216                     	;# 
  1635  0217                     	;# 
  1636  0217                     	;# 
  1637  0218                     	;# 
  1638  0219                     	;# 
  1639  021A                     	;# 
  1640  021A                     	;# 
  1641  021B                     	;# 
  1642  021B                     	;# 
  1643  021C                     	;# 
  1644  021C                     	;# 
  1645  021D                     	;# 
  1646  021D                     	;# 
  1647  021E                     	;# 
  1648  021F                     	;# 
  1649  028C                     	;# 
  1650  028C                     	;# 
  1651  028D                     	;# 
  1652  028D                     	;# 
  1653  028E                     	;# 
  1654  028F                     	;# 
  1655  0290                     	;# 
  1656  0291                     	;# 
  1657  0292                     	;# 
  1658  0292                     	;# 
  1659  0293                     	;# 
  1660  0293                     	;# 
  1661  0294                     	;# 
  1662  0295                     	;# 
  1663  0296                     	;# 
  1664  0297                     	;# 
  1665  0298                     	;# 
  1666  0298                     	;# 
  1667  0299                     	;# 
  1668  0299                     	;# 
  1669  029A                     	;# 
  1670  029B                     	;# 
  1671  029C                     	;# 
  1672  029D                     	;# 
  1673  029F                     	;# 
  1674  030C                     	;# 
  1675  030C                     	;# 
  1676  030D                     	;# 
  1677  030E                     	;# 
  1678  030F                     	;# 
  1679  0310                     	;# 
  1680  0310                     	;# 
  1681  0311                     	;# 
  1682  0312                     	;# 
  1683  0313                     	;# 
  1684  0314                     	;# 
  1685  0314                     	;# 
  1686  0315                     	;# 
  1687  0316                     	;# 
  1688  0317                     	;# 
  1689  0318                     	;# 
  1690  0318                     	;# 
  1691  0319                     	;# 
  1692  031A                     	;# 
  1693  031B                     	;# 
  1694  038C                     	;# 
  1695  038C                     	;# 
  1696  038D                     	;# 
  1697  038E                     	;# 
  1698  0390                     	;# 
  1699  0390                     	;# 
  1700  0391                     	;# 
  1701  0392                     	;# 
  1702  048C                     	;# 
  1703  048C                     	;# 
  1704  048D                     	;# 
  1705  048E                     	;# 
  1706  048F                     	;# 
  1707  048F                     	;# 
  1708  0490                     	;# 
  1709  0491                     	;# 
  1710  0492                     	;# 
  1711  0492                     	;# 
  1712  0493                     	;# 
  1713  0494                     	;# 
  1714  0495                     	;# 
  1715  0495                     	;# 
  1716  0496                     	;# 
  1717  0497                     	;# 
  1718  0498                     	;# 
  1719  0499                     	;# 
  1720  049A                     	;# 
  1721  049B                     	;# 
  1722  049C                     	;# 
  1723  049D                     	;# 
  1724  058C                     	;# 
  1725  058C                     	;# 
  1726  058D                     	;# 
  1727  058E                     	;# 
  1728  058F                     	;# 
  1729  058F                     	;# 
  1730  0590                     	;# 
  1731  0591                     	;# 
  1732  0592                     	;# 
  1733  0593                     	;# 
  1734  059C                     	;# 
  1735  059C                     	;# 
  1736  059D                     	;# 
  1737  059D                     	;# 
  1738  059E                     	;# 
  1739  059F                     	;# 
  1740  060C                     	;# 
  1741  060C                     	;# 
  1742  060D                     	;# 
  1743  060D                     	;# 
  1744  060E                     	;# 
  1745  060F                     	;# 
  1746  0610                     	;# 
  1747  0611                     	;# 
  1748  0612                     	;# 
  1749  0613                     	;# 
  1750  0614                     	;# 
  1751  0616                     	;# 
  1752  0616                     	;# 
  1753  0617                     	;# 
  1754  0617                     	;# 
  1755  0618                     	;# 
  1756  0619                     	;# 
  1757  061A                     	;# 
  1758  061B                     	;# 
  1759  061C                     	;# 
  1760  061D                     	;# 
  1761  061E                     	;# 
  1762  070C                     	;# 
  1763  070D                     	;# 
  1764  070E                     	;# 
  1765  070F                     	;# 
  1766  0710                     	;# 
  1767  0711                     	;# 
  1768  0712                     	;# 
  1769  0713                     	;# 
  1770  0714                     	;# 
  1771  0716                     	;# 
  1772  0717                     	;# 
  1773  0718                     	;# 
  1774  0719                     	;# 
  1775  071A                     	;# 
  1776  071B                     	;# 
  1777  071C                     	;# 
  1778  071D                     	;# 
  1779  071E                     	;# 
  1780  0796                     	;# 
  1781  0797                     	;# 
  1782  0798                     	;# 
  1783  0799                     	;# 
  1784  079A                     	;# 
  1785  079B                     	;# 
  1786  079C                     	;# 
  1787  079D                     	;# 
  1788  080C                     	;# 
  1789  080D                     	;# 
  1790  080E                     	;# 
  1791  080F                     	;# 
  1792  0810                     	;# 
  1793  0811                     	;# 
  1794  0812                     	;# 
  1795  0813                     	;# 
  1796  0814                     	;# 
  1797  081A                     	;# 
  1798  081A                     	;# 
  1799  081B                     	;# 
  1800  081C                     	;# 
  1801  081C                     	;# 
  1802  081D                     	;# 
  1803  081E                     	;# 
  1804  081F                     	;# 
  1805  088C                     	;# 
  1806  088D                     	;# 
  1807  088E                     	;# 
  1808  088F                     	;# 
  1809  0890                     	;# 
  1810  0891                     	;# 
  1811  0892                     	;# 
  1812  0893                     	;# 
  1813  0895                     	;# 
  1814  0896                     	;# 
  1815  0897                     	;# 
  1816  0898                     	;# 
  1817  0899                     	;# 
  1818  089A                     	;# 
  1819  089B                     	;# 
  1820  090C                     	;# 
  1821  090E                     	;# 
  1822  090F                     	;# 
  1823  091F                     	;# 
  1824  098F                     	;# 
  1825  098F                     	;# 
  1826  0990                     	;# 
  1827  0991                     	;# 
  1828  0992                     	;# 
  1829  0993                     	;# 
  1830  0994                     	;# 
  1831  0995                     	;# 
  1832  0996                     	;# 
  1833  0997                     	;# 
  1834  1E0F                     	;# 
  1835  1E10                     	;# 
  1836  1E11                     	;# 
  1837  1E12                     	;# 
  1838  1E13                     	;# 
  1839  1E14                     	;# 
  1840  1E15                     	;# 
  1841  1E16                     	;# 
  1842  1E17                     	;# 
  1843  1E18                     	;# 
  1844  1E19                     	;# 
  1845  1E1A                     	;# 
  1846  1E1B                     	;# 
  1847  1E1C                     	;# 
  1848  1E1D                     	;# 
  1849  1E1E                     	;# 
  1850  1E1F                     	;# 
  1851  1E20                     	;# 
  1852  1E21                     	;# 
  1853  1E22                     	;# 
  1854  1E23                     	;# 
  1855  1E24                     	;# 
  1856  1E25                     	;# 
  1857  1E26                     	;# 
  1858  1E27                     	;# 
  1859  1E28                     	;# 
  1860  1E29                     	;# 
  1861  1E2A                     	;# 
  1862  1E2B                     	;# 
  1863  1E2C                     	;# 
  1864  1E2D                     	;# 
  1865  1E2E                     	;# 
  1866  1E2F                     	;# 
  1867  1E30                     	;# 
  1868  1E31                     	;# 
  1869  1E32                     	;# 
  1870  1E33                     	;# 
  1871  1E34                     	;# 
  1872  1E35                     	;# 
  1873  1E36                     	;# 
  1874  1E37                     	;# 
  1875  1E8F                     	;# 
  1876  1E90                     	;# 
  1877  1E91                     	;# 
  1878  1E92                     	;# 
  1879  1E93                     	;# 
  1880  1E94                     	;# 
  1881  1E95                     	;# 
  1882  1E96                     	;# 
  1883  1E97                     	;# 
  1884  1E9C                     	;# 
  1885  1E9D                     	;# 
  1886  1E9E                     	;# 
  1887  1EA1                     	;# 
  1888  1EA2                     	;# 
  1889  1EA3                     	;# 
  1890  1EA4                     	;# 
  1891  1EA9                     	;# 
  1892  1EAA                     	;# 
  1893  1EB1                     	;# 
  1894  1EB2                     	;# 
  1895  1EB8                     	;# 
  1896  1EB9                     	;# 
  1897  1EBA                     	;# 
  1898  1EBB                     	;# 
  1899  1EBC                     	;# 
  1900  1EBD                     	;# 
  1901  1EBE                     	;# 
  1902  1EC3                     	;# 
  1903  1EC5                     	;# 
  1904  1EC6                     	;# 
  1905  1EC7                     	;# 
  1906  1EC8                     	;# 
  1907  1EC9                     	;# 
  1908  1ECA                     	;# 
  1909  1ECB                     	;# 
  1910  1ECB                     	;# 
  1911  1ECB                     	;# 
  1912  1ECC                     	;# 
  1913  1ECC                     	;# 
  1914  1ECC                     	;# 
  1915  1F10                     	;# 
  1916  1F11                     	;# 
  1917  1F12                     	;# 
  1918  1F14                     	;# 
  1919  1F15                     	;# 
  1920  1F1C                     	;# 
  1921  1F1D                     	;# 
  1922  1F1E                     	;# 
  1923  1F1F                     	;# 
  1924  1F20                     	;# 
  1925  1F21                     	;# 
  1926  1F22                     	;# 
  1927  1F23                     	;# 
  1928  1F24                     	;# 
  1929  1F25                     	;# 
  1930  1F26                     	;# 
  1931  1F27                     	;# 
  1932  1F38                     	;# 
  1933  1F39                     	;# 
  1934  1F3A                     	;# 
  1935  1F3B                     	;# 
  1936  1F3C                     	;# 
  1937  1F3D                     	;# 
  1938  1F3E                     	;# 
  1939  1F3F                     	;# 
  1940  1F43                     	;# 
  1941  1F44                     	;# 
  1942  1F45                     	;# 
  1943  1F46                     	;# 
  1944  1F47                     	;# 
  1945  1F48                     	;# 
  1946  1F49                     	;# 
  1947  1F4A                     	;# 
  1948  1F4E                     	;# 
  1949  1F4F                     	;# 
  1950  1F50                     	;# 
  1951  1F51                     	;# 
  1952  1F52                     	;# 
  1953  1F53                     	;# 
  1954  1F54                     	;# 
  1955  1F55                     	;# 
  1956  1FE4                     	;# 
  1957  1FE5                     	;# 
  1958  1FE6                     	;# 
  1959  1FE7                     	;# 
  1960  1FE8                     	;# 
  1961  1FE8                     	;# 
  1962  1FE9                     	;# 
  1963  1FEA                     	;# 
  1964  1FEB                     	;# 
  1965  1FED                     	;# 
  1966  1FEE                     	;# 
  1967  1FEF                     	;# 
  1968  0000                     	;# 
  1969  0001                     	;# 
  1970  0002                     	;# 
  1971  0003                     	;# 
  1972  0004                     	;# 
  1973  0005                     	;# 
  1974  0006                     	;# 
  1975  0007                     	;# 
  1976  0008                     	;# 
  1977  0009                     	;# 
  1978  000A                     	;# 
  1979  000B                     	;# 
  1980  000C                     	;# 
  1981  000D                     	;# 
  1982  000E                     	;# 
  1983  0012                     	;# 
  1984  0013                     	;# 
  1985  0014                     	;# 
  1986  0018                     	;# 
  1987  0019                     	;# 
  1988  001A                     	;# 
  1989  008C                     	;# 
  1990  008C                     	;# 
  1991  008D                     	;# 
  1992  008E                     	;# 
  1993  008E                     	;# 
  1994  008F                     	;# 
  1995  0090                     	;# 
  1996  0090                     	;# 
  1997  0091                     	;# 
  1998  0092                     	;# 
  1999  0092                     	;# 
  2000  0093                     	;# 
  2001  0094                     	;# 
  2002  0094                     	;# 
  2003  0095                     	;# 
  2004  0096                     	;# 
  2005  0096                     	;# 
  2006  0097                     	;# 
  2007  0098                     	;# 
  2008  0099                     	;# 
  2009  009A                     	;# 
  2010  009B                     	;# 
  2011  009B                     	;# 
  2012  009C                     	;# 
  2013  009D                     	;# 
  2014  009D                     	;# 
  2015  009E                     	;# 
  2016  009F                     	;# 
  2017  010C                     	;# 
  2018  010C                     	;# 
  2019  010D                     	;# 
  2020  010E                     	;# 
  2021  010F                     	;# 
  2022  010F                     	;# 
  2023  0110                     	;# 
  2024  0111                     	;# 
  2025  0112                     	;# 
  2026  0113                     	;# 
  2027  0114                     	;# 
  2028  0115                     	;# 
  2029  0116                     	;# 
  2030  0117                     	;# 
  2031  0118                     	;# 
  2032  0119                     	;# 
  2033  0119                     	;# 
  2034  0119                     	;# 
  2035  011A                     	;# 
  2036  011A                     	;# 
  2037  011A                     	;# 
  2038  011B                     	;# 
  2039  011B                     	;# 
  2040  011B                     	;# 
  2041  011B                     	;# 
  2042  011B                     	;# 
  2043  011C                     	;# 
  2044  011C                     	;# 
  2045  011C                     	;# 
  2046  011D                     	;# 
  2047  011D                     	;# 
  2048  011D                     	;# 
  2049  011E                     	;# 
  2050  011E                     	;# 
  2051  011E                     	;# 
  2052  011F                     	;# 
  2053  011F                     	;# 
  2054  011F                     	;# 
  2055  011F                     	;# 
  2056  011F                     	;# 
  2057  018C                     	;# 
  2058  018D                     	;# 
  2059  018E                     	;# 
  2060  018F                     	;# 
  2061  0190                     	;# 
  2062  0191                     	;# 
  2063  0192                     	;# 
  2064  0196                     	;# 
  2065  0197                     	;# 
  2066  0198                     	;# 
  2067  0199                     	;# 
  2068  019A                     	;# 
  2069  019B                     	;# 
  2070  019C                     	;# 
  2071  020C                     	;# 
  2072  020D                     	;# 
  2073  020E                     	;# 
  2074  020E                     	;# 
  2075  020F                     	;# 
  2076  020F                     	;# 
  2077  0210                     	;# 
  2078  0210                     	;# 
  2079  0211                     	;# 
  2080  0211                     	;# 
  2081  0212                     	;# 
  2082  0213                     	;# 
  2083  0214                     	;# 
  2084  0214                     	;# 
  2085  0215                     	;# 
  2086  0215                     	;# 
  2087  0216                     	;# 
  2088  0216                     	;# 
  2089  0217                     	;# 
  2090  0217                     	;# 
  2091  0218                     	;# 
  2092  0219                     	;# 
  2093  021A                     	;# 
  2094  021A                     	;# 
  2095  021B                     	;# 
  2096  021B                     	;# 
  2097  021C                     	;# 
  2098  021C                     	;# 
  2099  021D                     	;# 
  2100  021D                     	;# 
  2101  021E                     	;# 
  2102  021F                     	;# 
  2103  028C                     	;# 
  2104  028C                     	;# 
  2105  028D                     	;# 
  2106  028D                     	;# 
  2107  028E                     	;# 
  2108  028F                     	;# 
  2109  0290                     	;# 
  2110  0291                     	;# 
  2111  0292                     	;# 
  2112  0292                     	;# 
  2113  0293                     	;# 
  2114  0293                     	;# 
  2115  0294                     	;# 
  2116  0295                     	;# 
  2117  0296                     	;# 
  2118  0297                     	;# 
  2119  0298                     	;# 
  2120  0298                     	;# 
  2121  0299                     	;# 
  2122  0299                     	;# 
  2123  029A                     	;# 
  2124  029B                     	;# 
  2125  029C                     	;# 
  2126  029D                     	;# 
  2127  029F                     	;# 
  2128  030C                     	;# 
  2129  030C                     	;# 
  2130  030D                     	;# 
  2131  030E                     	;# 
  2132  030F                     	;# 
  2133  0310                     	;# 
  2134  0310                     	;# 
  2135  0311                     	;# 
  2136  0312                     	;# 
  2137  0313                     	;# 
  2138  0314                     	;# 
  2139  0314                     	;# 
  2140  0315                     	;# 
  2141  0316                     	;# 
  2142  0317                     	;# 
  2143  0318                     	;# 
  2144  0318                     	;# 
  2145  0319                     	;# 
  2146  031A                     	;# 
  2147  031B                     	;# 
  2148  038C                     	;# 
  2149  038C                     	;# 
  2150  038D                     	;# 
  2151  038E                     	;# 
  2152  0390                     	;# 
  2153  0390                     	;# 
  2154  0391                     	;# 
  2155  0392                     	;# 
  2156  048C                     	;# 
  2157  048C                     	;# 
  2158  048D                     	;# 
  2159  048E                     	;# 
  2160  048F                     	;# 
  2161  048F                     	;# 
  2162  0490                     	;# 
  2163  0491                     	;# 
  2164  0492                     	;# 
  2165  0492                     	;# 
  2166  0493                     	;# 
  2167  0494                     	;# 
  2168  0495                     	;# 
  2169  0495                     	;# 
  2170  0496                     	;# 
  2171  0497                     	;# 
  2172  0498                     	;# 
  2173  0499                     	;# 
  2174  049A                     	;# 
  2175  049B                     	;# 
  2176  049C                     	;# 
  2177  049D                     	;# 
  2178  058C                     	;# 
  2179  058C                     	;# 
  2180  058D                     	;# 
  2181  058E                     	;# 
  2182  058F                     	;# 
  2183  058F                     	;# 
  2184  0590                     	;# 
  2185  0591                     	;# 
  2186  0592                     	;# 
  2187  0593                     	;# 
  2188  059C                     	;# 
  2189  059C                     	;# 
  2190  059D                     	;# 
  2191  059D                     	;# 
  2192  059E                     	;# 
  2193  059F                     	;# 
  2194  060C                     	;# 
  2195  060C                     	;# 
  2196  060D                     	;# 
  2197  060D                     	;# 
  2198  060E                     	;# 
  2199  060F                     	;# 
  2200  0610                     	;# 
  2201  0611                     	;# 
  2202  0612                     	;# 
  2203  0613                     	;# 
  2204  0614                     	;# 
  2205  0616                     	;# 
  2206  0616                     	;# 
  2207  0617                     	;# 
  2208  0617                     	;# 
  2209  0618                     	;# 
  2210  0619                     	;# 
  2211  061A                     	;# 
  2212  061B                     	;# 
  2213  061C                     	;# 
  2214  061D                     	;# 
  2215  061E                     	;# 
  2216  070C                     	;# 
  2217  070D                     	;# 
  2218  070E                     	;# 
  2219  070F                     	;# 
  2220  0710                     	;# 
  2221  0711                     	;# 
  2222  0712                     	;# 
  2223  0713                     	;# 
  2224  0714                     	;# 
  2225  0716                     	;# 
  2226  0717                     	;# 
  2227  0718                     	;# 
  2228  0719                     	;# 
  2229  071A                     	;# 
  2230  071B                     	;# 
  2231  071C                     	;# 
  2232  071D                     	;# 
  2233  071E                     	;# 
  2234  0796                     	;# 
  2235  0797                     	;# 
  2236  0798                     	;# 
  2237  0799                     	;# 
  2238  079A                     	;# 
  2239  079B                     	;# 
  2240  079C                     	;# 
  2241  079D                     	;# 
  2242  080C                     	;# 
  2243  080D                     	;# 
  2244  080E                     	;# 
  2245  080F                     	;# 
  2246  0810                     	;# 
  2247  0811                     	;# 
  2248  0812                     	;# 
  2249  0813                     	;# 
  2250  0814                     	;# 
  2251  081A                     	;# 
  2252  081A                     	;# 
  2253  081B                     	;# 
  2254  081C                     	;# 
  2255  081C                     	;# 
  2256  081D                     	;# 
  2257  081E                     	;# 
  2258  081F                     	;# 
  2259  088C                     	;# 
  2260  088D                     	;# 
  2261  088E                     	;# 
  2262  088F                     	;# 
  2263  0890                     	;# 
  2264  0891                     	;# 
  2265  0892                     	;# 
  2266  0893                     	;# 
  2267  0895                     	;# 
  2268  0896                     	;# 
  2269  0897                     	;# 
  2270  0898                     	;# 
  2271  0899                     	;# 
  2272  089A                     	;# 
  2273  089B                     	;# 
  2274  090C                     	;# 
  2275  090E                     	;# 
  2276  090F                     	;# 
  2277  091F                     	;# 
  2278  098F                     	;# 
  2279  098F                     	;# 
  2280  0990                     	;# 
  2281  0991                     	;# 
  2282  0992                     	;# 
  2283  0993                     	;# 
  2284  0994                     	;# 
  2285  0995                     	;# 
  2286  0996                     	;# 
  2287  0997                     	;# 
  2288  1E0F                     	;# 
  2289  1E10                     	;# 
  2290  1E11                     	;# 
  2291  1E12                     	;# 
  2292  1E13                     	;# 
  2293  1E14                     	;# 
  2294  1E15                     	;# 
  2295  1E16                     	;# 
  2296  1E17                     	;# 
  2297  1E18                     	;# 
  2298  1E19                     	;# 
  2299  1E1A                     	;# 
  2300  1E1B                     	;# 
  2301  1E1C                     	;# 
  2302  1E1D                     	;# 
  2303  1E1E                     	;# 
  2304  1E1F                     	;# 
  2305  1E20                     	;# 
  2306  1E21                     	;# 
  2307  1E22                     	;# 
  2308  1E23                     	;# 
  2309  1E24                     	;# 
  2310  1E25                     	;# 
  2311  1E26                     	;# 
  2312  1E27                     	;# 
  2313  1E28                     	;# 
  2314  1E29                     	;# 
  2315  1E2A                     	;# 
  2316  1E2B                     	;# 
  2317  1E2C                     	;# 
  2318  1E2D                     	;# 
  2319  1E2E                     	;# 
  2320  1E2F                     	;# 
  2321  1E30                     	;# 
  2322  1E31                     	;# 
  2323  1E32                     	;# 
  2324  1E33                     	;# 
  2325  1E34                     	;# 
  2326  1E35                     	;# 
  2327  1E36                     	;# 
  2328  1E37                     	;# 
  2329  1E8F                     	;# 
  2330  1E90                     	;# 
  2331  1E91                     	;# 
  2332  1E92                     	;# 
  2333  1E93                     	;# 
  2334  1E94                     	;# 
  2335  1E95                     	;# 
  2336  1E96                     	;# 
  2337  1E97                     	;# 
  2338  1E9C                     	;# 
  2339  1E9D                     	;# 
  2340  1E9E                     	;# 
  2341  1EA1                     	;# 
  2342  1EA2                     	;# 
  2343  1EA3                     	;# 
  2344  1EA4                     	;# 
  2345  1EA9                     	;# 
  2346  1EAA                     	;# 
  2347  1EB1                     	;# 
  2348  1EB2                     	;# 
  2349  1EB8                     	;# 
  2350  1EB9                     	;# 
  2351  1EBA                     	;# 
  2352  1EBB                     	;# 
  2353  1EBC                     	;# 
  2354  1EBD                     	;# 
  2355  1EBE                     	;# 
  2356  1EC3                     	;# 
  2357  1EC5                     	;# 
  2358  1EC6                     	;# 
  2359  1EC7                     	;# 
  2360  1EC8                     	;# 
  2361  1EC9                     	;# 
  2362  1ECA                     	;# 
  2363  1ECB                     	;# 
  2364  1ECB                     	;# 
  2365  1ECB                     	;# 
  2366  1ECC                     	;# 
  2367  1ECC                     	;# 
  2368  1ECC                     	;# 
  2369  1F10                     	;# 
  2370  1F11                     	;# 
  2371  1F12                     	;# 
  2372  1F14                     	;# 
  2373  1F15                     	;# 
  2374  1F1C                     	;# 
  2375  1F1D                     	;# 
  2376  1F1E                     	;# 
  2377  1F1F                     	;# 
  2378  1F20                     	;# 
  2379  1F21                     	;# 
  2380  1F22                     	;# 
  2381  1F23                     	;# 
  2382  1F24                     	;# 
  2383  1F25                     	;# 
  2384  1F26                     	;# 
  2385  1F27                     	;# 
  2386  1F38                     	;# 
  2387  1F39                     	;# 
  2388  1F3A                     	;# 
  2389  1F3B                     	;# 
  2390  1F3C                     	;# 
  2391  1F3D                     	;# 
  2392  1F3E                     	;# 
  2393  1F3F                     	;# 
  2394  1F43                     	;# 
  2395  1F44                     	;# 
  2396  1F45                     	;# 
  2397  1F46                     	;# 
  2398  1F47                     	;# 
  2399  1F48                     	;# 
  2400  1F49                     	;# 
  2401  1F4A                     	;# 
  2402  1F4E                     	;# 
  2403  1F4F                     	;# 
  2404  1F50                     	;# 
  2405  1F51                     	;# 
  2406  1F52                     	;# 
  2407  1F53                     	;# 
  2408  1F54                     	;# 
  2409  1F55                     	;# 
  2410  1FE4                     	;# 
  2411  1FE5                     	;# 
  2412  1FE6                     	;# 
  2413  1FE7                     	;# 
  2414  1FE8                     	;# 
  2415  1FE8                     	;# 
  2416  1FE9                     	;# 
  2417  1FEA                     	;# 
  2418  1FEB                     	;# 
  2419  1FED                     	;# 
  2420  1FEE                     	;# 
  2421  1FEF                     	;# 
  2422  0000                     	;# 
  2423  0001                     	;# 
  2424  0002                     	;# 
  2425  0003                     	;# 
  2426  0004                     	;# 
  2427  0005                     	;# 
  2428  0006                     	;# 
  2429  0007                     	;# 
  2430  0008                     	;# 
  2431  0009                     	;# 
  2432  000A                     	;# 
  2433  000B                     	;# 
  2434  000C                     	;# 
  2435  000D                     	;# 
  2436  000E                     	;# 
  2437  0012                     	;# 
  2438  0013                     	;# 
  2439  0014                     	;# 
  2440  0018                     	;# 
  2441  0019                     	;# 
  2442  001A                     	;# 
  2443  008C                     	;# 
  2444  008C                     	;# 
  2445  008D                     	;# 
  2446  008E                     	;# 
  2447  008E                     	;# 
  2448  008F                     	;# 
  2449  0090                     	;# 
  2450  0090                     	;# 
  2451  0091                     	;# 
  2452  0092                     	;# 
  2453  0092                     	;# 
  2454  0093                     	;# 
  2455  0094                     	;# 
  2456  0094                     	;# 
  2457  0095                     	;# 
  2458  0096                     	;# 
  2459  0096                     	;# 
  2460  0097                     	;# 
  2461  0098                     	;# 
  2462  0099                     	;# 
  2463  009A                     	;# 
  2464  009B                     	;# 
  2465  009B                     	;# 
  2466  009C                     	;# 
  2467  009D                     	;# 
  2468  009D                     	;# 
  2469  009E                     	;# 
  2470  009F                     	;# 
  2471  010C                     	;# 
  2472  010C                     	;# 
  2473  010D                     	;# 
  2474  010E                     	;# 
  2475  010F                     	;# 
  2476  010F                     	;# 
  2477  0110                     	;# 
  2478  0111                     	;# 
  2479  0112                     	;# 
  2480  0113                     	;# 
  2481  0114                     	;# 
  2482  0115                     	;# 
  2483  0116                     	;# 
  2484  0117                     	;# 
  2485  0118                     	;# 
  2486  0119                     	;# 
  2487  0119                     	;# 
  2488  0119                     	;# 
  2489  011A                     	;# 
  2490  011A                     	;# 
  2491  011A                     	;# 
  2492  011B                     	;# 
  2493  011B                     	;# 
  2494  011B                     	;# 
  2495  011B                     	;# 
  2496  011B                     	;# 
  2497  011C                     	;# 
  2498  011C                     	;# 
  2499  011C                     	;# 
  2500  011D                     	;# 
  2501  011D                     	;# 
  2502  011D                     	;# 
  2503  011E                     	;# 
  2504  011E                     	;# 
  2505  011E                     	;# 
  2506  011F                     	;# 
  2507  011F                     	;# 
  2508  011F                     	;# 
  2509  011F                     	;# 
  2510  011F                     	;# 
  2511  018C                     	;# 
  2512  018D                     	;# 
  2513  018E                     	;# 
  2514  018F                     	;# 
  2515  0190                     	;# 
  2516  0191                     	;# 
  2517  0192                     	;# 
  2518  0196                     	;# 
  2519  0197                     	;# 
  2520  0198                     	;# 
  2521  0199                     	;# 
  2522  019A                     	;# 
  2523  019B                     	;# 
  2524  019C                     	;# 
  2525  020C                     	;# 
  2526  020D                     	;# 
  2527  020E                     	;# 
  2528  020E                     	;# 
  2529  020F                     	;# 
  2530  020F                     	;# 
  2531  0210                     	;# 
  2532  0210                     	;# 
  2533  0211                     	;# 
  2534  0211                     	;# 
  2535  0212                     	;# 
  2536  0213                     	;# 
  2537  0214                     	;# 
  2538  0214                     	;# 
  2539  0215                     	;# 
  2540  0215                     	;# 
  2541  0216                     	;# 
  2542  0216                     	;# 
  2543  0217                     	;# 
  2544  0217                     	;# 
  2545  0218                     	;# 
  2546  0219                     	;# 
  2547  021A                     	;# 
  2548  021A                     	;# 
  2549  021B                     	;# 
  2550  021B                     	;# 
  2551  021C                     	;# 
  2552  021C                     	;# 
  2553  021D                     	;# 
  2554  021D                     	;# 
  2555  021E                     	;# 
  2556  021F                     	;# 
  2557  028C                     	;# 
  2558  028C                     	;# 
  2559  028D                     	;# 
  2560  028D                     	;# 
  2561  028E                     	;# 
  2562  028F                     	;# 
  2563  0290                     	;# 
  2564  0291                     	;# 
  2565  0292                     	;# 
  2566  0292                     	;# 
  2567  0293                     	;# 
  2568  0293                     	;# 
  2569  0294                     	;# 
  2570  0295                     	;# 
  2571  0296                     	;# 
  2572  0297                     	;# 
  2573  0298                     	;# 
  2574  0298                     	;# 
  2575  0299                     	;# 
  2576  0299                     	;# 
  2577  029A                     	;# 
  2578  029B                     	;# 
  2579  029C                     	;# 
  2580  029D                     	;# 
  2581  029F                     	;# 
  2582  030C                     	;# 
  2583  030C                     	;# 
  2584  030D                     	;# 
  2585  030E                     	;# 
  2586  030F                     	;# 
  2587  0310                     	;# 
  2588  0310                     	;# 
  2589  0311                     	;# 
  2590  0312                     	;# 
  2591  0313                     	;# 
  2592  0314                     	;# 
  2593  0314                     	;# 
  2594  0315                     	;# 
  2595  0316                     	;# 
  2596  0317                     	;# 
  2597  0318                     	;# 
  2598  0318                     	;# 
  2599  0319                     	;# 
  2600  031A                     	;# 
  2601  031B                     	;# 
  2602  038C                     	;# 
  2603  038C                     	;# 
  2604  038D                     	;# 
  2605  038E                     	;# 
  2606  0390                     	;# 
  2607  0390                     	;# 
  2608  0391                     	;# 
  2609  0392                     	;# 
  2610  048C                     	;# 
  2611  048C                     	;# 
  2612  048D                     	;# 
  2613  048E                     	;# 
  2614  048F                     	;# 
  2615  048F                     	;# 
  2616  0490                     	;# 
  2617  0491                     	;# 
  2618  0492                     	;# 
  2619  0492                     	;# 
  2620  0493                     	;# 
  2621  0494                     	;# 
  2622  0495                     	;# 
  2623  0495                     	;# 
  2624  0496                     	;# 
  2625  0497                     	;# 
  2626  0498                     	;# 
  2627  0499                     	;# 
  2628  049A                     	;# 
  2629  049B                     	;# 
  2630  049C                     	;# 
  2631  049D                     	;# 
  2632  058C                     	;# 
  2633  058C                     	;# 
  2634  058D                     	;# 
  2635  058E                     	;# 
  2636  058F                     	;# 
  2637  058F                     	;# 
  2638  0590                     	;# 
  2639  0591                     	;# 
  2640  0592                     	;# 
  2641  0593                     	;# 
  2642  059C                     	;# 
  2643  059C                     	;# 
  2644  059D                     	;# 
  2645  059D                     	;# 
  2646  059E                     	;# 
  2647  059F                     	;# 
  2648  060C                     	;# 
  2649  060C                     	;# 
  2650  060D                     	;# 
  2651  060D                     	;# 
  2652  060E                     	;# 
  2653  060F                     	;# 
  2654  0610                     	;# 
  2655  0611                     	;# 
  2656  0612                     	;# 
  2657  0613                     	;# 
  2658  0614                     	;# 
  2659  0616                     	;# 
  2660  0616                     	;# 
  2661  0617                     	;# 
  2662  0617                     	;# 
  2663  0618                     	;# 
  2664  0619                     	;# 
  2665  061A                     	;# 
  2666  061B                     	;# 
  2667  061C                     	;# 
  2668  061D                     	;# 
  2669  061E                     	;# 
  2670  070C                     	;# 
  2671  070D                     	;# 
  2672  070E                     	;# 
  2673  070F                     	;# 
  2674  0710                     	;# 
  2675  0711                     	;# 
  2676  0712                     	;# 
  2677  0713                     	;# 
  2678  0714                     	;# 
  2679  0716                     	;# 
  2680  0717                     	;# 
  2681  0718                     	;# 
  2682  0719                     	;# 
  2683  071A                     	;# 
  2684  071B                     	;# 
  2685  071C                     	;# 
  2686  071D                     	;# 
  2687  071E                     	;# 
  2688  0796                     	;# 
  2689  0797                     	;# 
  2690  0798                     	;# 
  2691  0799                     	;# 
  2692  079A                     	;# 
  2693  079B                     	;# 
  2694  079C                     	;# 
  2695  079D                     	;# 
  2696  080C                     	;# 
  2697  080D                     	;# 
  2698  080E                     	;# 
  2699  080F                     	;# 
  2700  0810                     	;# 
  2701  0811                     	;# 
  2702  0812                     	;# 
  2703  0813                     	;# 
  2704  0814                     	;# 
  2705  081A                     	;# 
  2706  081A                     	;# 
  2707  081B                     	;# 
  2708  081C                     	;# 
  2709  081C                     	;# 
  2710  081D                     	;# 
  2711  081E                     	;# 
  2712  081F                     	;# 
  2713  088C                     	;# 
  2714  088D                     	;# 
  2715  088E                     	;# 
  2716  088F                     	;# 
  2717  0890                     	;# 
  2718  0891                     	;# 
  2719  0892                     	;# 
  2720  0893                     	;# 
  2721  0895                     	;# 
  2722  0896                     	;# 
  2723  0897                     	;# 
  2724  0898                     	;# 
  2725  0899                     	;# 
  2726  089A                     	;# 
  2727  089B                     	;# 
  2728  090C                     	;# 
  2729  090E                     	;# 
  2730  090F                     	;# 
  2731  091F                     	;# 
  2732  098F                     	;# 
  2733  098F                     	;# 
  2734  0990                     	;# 
  2735  0991                     	;# 
  2736  0992                     	;# 
  2737  0993                     	;# 
  2738  0994                     	;# 
  2739  0995                     	;# 
  2740  0996                     	;# 
  2741  0997                     	;# 
  2742  1E0F                     	;# 
  2743  1E10                     	;# 
  2744  1E11                     	;# 
  2745  1E12                     	;# 
  2746  1E13                     	;# 
  2747  1E14                     	;# 
  2748  1E15                     	;# 
  2749  1E16                     	;# 
  2750  1E17                     	;# 
  2751  1E18                     	;# 
  2752  1E19                     	;# 
  2753  1E1A                     	;# 
  2754  1E1B                     	;# 
  2755  1E1C                     	;# 
  2756  1E1D                     	;# 
  2757  1E1E                     	;# 
  2758  1E1F                     	;# 
  2759  1E20                     	;# 
  2760  1E21                     	;# 
  2761  1E22                     	;# 
  2762  1E23                     	;# 
  2763  1E24                     	;# 
  2764  1E25                     	;# 
  2765  1E26                     	;# 
  2766  1E27                     	;# 
  2767  1E28                     	;# 
  2768  1E29                     	;# 
  2769  1E2A                     	;# 
  2770  1E2B                     	;# 
  2771  1E2C                     	;# 
  2772  1E2D                     	;# 
  2773  1E2E                     	;# 
  2774  1E2F                     	;# 
  2775  1E30                     	;# 
  2776  1E31                     	;# 
  2777  1E32                     	;# 
  2778  1E33                     	;# 
  2779  1E34                     	;# 
  2780  1E35                     	;# 
  2781  1E36                     	;# 
  2782  1E37                     	;# 
  2783  1E8F                     	;# 
  2784  1E90                     	;# 
  2785  1E91                     	;# 
  2786  1E92                     	;# 
  2787  1E93                     	;# 
  2788  1E94                     	;# 
  2789  1E95                     	;# 
  2790  1E96                     	;# 
  2791  1E97                     	;# 
  2792  1E9C                     	;# 
  2793  1E9D                     	;# 
  2794  1E9E                     	;# 
  2795  1EA1                     	;# 
  2796  1EA2                     	;# 
  2797  1EA3                     	;# 
  2798  1EA4                     	;# 
  2799  1EA9                     	;# 
  2800  1EAA                     	;# 
  2801  1EB1                     	;# 
  2802  1EB2                     	;# 
  2803  1EB8                     	;# 
  2804  1EB9                     	;# 
  2805  1EBA                     	;# 
  2806  1EBB                     	;# 
  2807  1EBC                     	;# 
  2808  1EBD                     	;# 
  2809  1EBE                     	;# 
  2810  1EC3                     	;# 
  2811  1EC5                     	;# 
  2812  1EC6                     	;# 
  2813  1EC7                     	;# 
  2814  1EC8                     	;# 
  2815  1EC9                     	;# 
  2816  1ECA                     	;# 
  2817  1ECB                     	;# 
  2818  1ECB                     	;# 
  2819  1ECB                     	;# 
  2820  1ECC                     	;# 
  2821  1ECC                     	;# 
  2822  1ECC                     	;# 
  2823  1F10                     	;# 
  2824  1F11                     	;# 
  2825  1F12                     	;# 
  2826  1F14                     	;# 
  2827  1F15                     	;# 
  2828  1F1C                     	;# 
  2829  1F1D                     	;# 
  2830  1F1E                     	;# 
  2831  1F1F                     	;# 
  2832  1F20                     	;# 
  2833  1F21                     	;# 
  2834  1F22                     	;# 
  2835  1F23                     	;# 
  2836  1F24                     	;# 
  2837  1F25                     	;# 
  2838  1F26                     	;# 
  2839  1F27                     	;# 
  2840  1F38                     	;# 
  2841  1F39                     	;# 
  2842  1F3A                     	;# 
  2843  1F3B                     	;# 
  2844  1F3C                     	;# 
  2845  1F3D                     	;# 
  2846  1F3E                     	;# 
  2847  1F3F                     	;# 
  2848  1F43                     	;# 
  2849  1F44                     	;# 
  2850  1F45                     	;# 
  2851  1F46                     	;# 
  2852  1F47                     	;# 
  2853  1F48                     	;# 
  2854  1F49                     	;# 
  2855  1F4A                     	;# 
  2856  1F4E                     	;# 
  2857  1F4F                     	;# 
  2858  1F50                     	;# 
  2859  1F51                     	;# 
  2860  1F52                     	;# 
  2861  1F53                     	;# 
  2862  1F54                     	;# 
  2863  1F55                     	;# 
  2864  1FE4                     	;# 
  2865  1FE5                     	;# 
  2866  1FE6                     	;# 
  2867  1FE7                     	;# 
  2868  1FE8                     	;# 
  2869  1FE8                     	;# 
  2870  1FE9                     	;# 
  2871  1FEA                     	;# 
  2872  1FEB                     	;# 
  2873  1FED                     	;# 
  2874  1FEE                     	;# 
  2875  1FEF                     	;# 
  2876  0000                     	;# 
  2877  0001                     	;# 
  2878  0002                     	;# 
  2879  0003                     	;# 
  2880  0004                     	;# 
  2881  0005                     	;# 
  2882  0006                     	;# 
  2883  0007                     	;# 
  2884  0008                     	;# 
  2885  0009                     	;# 
  2886  000A                     	;# 
  2887  000B                     	;# 
  2888  000C                     	;# 
  2889  000D                     	;# 
  2890  000E                     	;# 
  2891  0012                     	;# 
  2892  0013                     	;# 
  2893  0014                     	;# 
  2894  0018                     	;# 
  2895  0019                     	;# 
  2896  001A                     	;# 
  2897  008C                     	;# 
  2898  008C                     	;# 
  2899  008D                     	;# 
  2900  008E                     	;# 
  2901  008E                     	;# 
  2902  008F                     	;# 
  2903  0090                     	;# 
  2904  0090                     	;# 
  2905  0091                     	;# 
  2906  0092                     	;# 
  2907  0092                     	;# 
  2908  0093                     	;# 
  2909  0094                     	;# 
  2910  0094                     	;# 
  2911  0095                     	;# 
  2912  0096                     	;# 
  2913  0096                     	;# 
  2914  0097                     	;# 
  2915  0098                     	;# 
  2916  0099                     	;# 
  2917  009A                     	;# 
  2918  009B                     	;# 
  2919  009B                     	;# 
  2920  009C                     	;# 
  2921  009D                     	;# 
  2922  009D                     	;# 
  2923  009E                     	;# 
  2924  009F                     	;# 
  2925  010C                     	;# 
  2926  010C                     	;# 
  2927  010D                     	;# 
  2928  010E                     	;# 
  2929  010F                     	;# 
  2930  010F                     	;# 
  2931  0110                     	;# 
  2932  0111                     	;# 
  2933  0112                     	;# 
  2934  0113                     	;# 
  2935  0114                     	;# 
  2936  0115                     	;# 
  2937  0116                     	;# 
  2938  0117                     	;# 
  2939  0118                     	;# 
  2940  0119                     	;# 
  2941  0119                     	;# 
  2942  0119                     	;# 
  2943  011A                     	;# 
  2944  011A                     	;# 
  2945  011A                     	;# 
  2946  011B                     	;# 
  2947  011B                     	;# 
  2948  011B                     	;# 
  2949  011B                     	;# 
  2950  011B                     	;# 
  2951  011C                     	;# 
  2952  011C                     	;# 
  2953  011C                     	;# 
  2954  011D                     	;# 
  2955  011D                     	;# 
  2956  011D                     	;# 
  2957  011E                     	;# 
  2958  011E                     	;# 
  2959  011E                     	;# 
  2960  011F                     	;# 
  2961  011F                     	;# 
  2962  011F                     	;# 
  2963  011F                     	;# 
  2964  011F                     	;# 
  2965  018C                     	;# 
  2966  018D                     	;# 
  2967  018E                     	;# 
  2968  018F                     	;# 
  2969  0190                     	;# 
  2970  0191                     	;# 
  2971  0192                     	;# 
  2972  0196                     	;# 
  2973  0197                     	;# 
  2974  0198                     	;# 
  2975  0199                     	;# 
  2976  019A                     	;# 
  2977  019B                     	;# 
  2978  019C                     	;# 
  2979  020C                     	;# 
  2980  020D                     	;# 
  2981  020E                     	;# 
  2982  020E                     	;# 
  2983  020F                     	;# 
  2984  020F                     	;# 
  2985  0210                     	;# 
  2986  0210                     	;# 
  2987  0211                     	;# 
  2988  0211                     	;# 
  2989  0212                     	;# 
  2990  0213                     	;# 
  2991  0214                     	;# 
  2992  0214                     	;# 
  2993  0215                     	;# 
  2994  0215                     	;# 
  2995  0216                     	;# 
  2996  0216                     	;# 
  2997  0217                     	;# 
  2998  0217                     	;# 
  2999  0218                     	;# 
  3000  0219                     	;# 
  3001  021A                     	;# 
  3002  021A                     	;# 
  3003  021B                     	;# 
  3004  021B                     	;# 
  3005  021C                     	;# 
  3006  021C                     	;# 
  3007  021D                     	;# 
  3008  021D                     	;# 
  3009  021E                     	;# 
  3010  021F                     	;# 
  3011  028C                     	;# 
  3012  028C                     	;# 
  3013  028D                     	;# 
  3014  028D                     	;# 
  3015  028E                     	;# 
  3016  028F                     	;# 
  3017  0290                     	;# 
  3018  0291                     	;# 
  3019  0292                     	;# 
  3020  0292                     	;# 
  3021  0293                     	;# 
  3022  0293                     	;# 
  3023  0294                     	;# 
  3024  0295                     	;# 
  3025  0296                     	;# 
  3026  0297                     	;# 
  3027  0298                     	;# 
  3028  0298                     	;# 
  3029  0299                     	;# 
  3030  0299                     	;# 
  3031  029A                     	;# 
  3032  029B                     	;# 
  3033  029C                     	;# 
  3034  029D                     	;# 
  3035  029F                     	;# 
  3036  030C                     	;# 
  3037  030C                     	;# 
  3038  030D                     	;# 
  3039  030E                     	;# 
  3040  030F                     	;# 
  3041  0310                     	;# 
  3042  0310                     	;# 
  3043  0311                     	;# 
  3044  0312                     	;# 
  3045  0313                     	;# 
  3046  0314                     	;# 
  3047  0314                     	;# 
  3048  0315                     	;# 
  3049  0316                     	;# 
  3050  0317                     	;# 
  3051  0318                     	;# 
  3052  0318                     	;# 
  3053  0319                     	;# 
  3054  031A                     	;# 
  3055  031B                     	;# 
  3056  038C                     	;# 
  3057  038C                     	;# 
  3058  038D                     	;# 
  3059  038E                     	;# 
  3060  0390                     	;# 
  3061  0390                     	;# 
  3062  0391                     	;# 
  3063  0392                     	;# 
  3064  048C                     	;# 
  3065  048C                     	;# 
  3066  048D                     	;# 
  3067  048E                     	;# 
  3068  048F                     	;# 
  3069  048F                     	;# 
  3070  0490                     	;# 
  3071  0491                     	;# 
  3072  0492                     	;# 
  3073  0492                     	;# 
  3074  0493                     	;# 
  3075  0494                     	;# 
  3076  0495                     	;# 
  3077  0495                     	;# 
  3078  0496                     	;# 
  3079  0497                     	;# 
  3080  0498                     	;# 
  3081  0499                     	;# 
  3082  049A                     	;# 
  3083  049B                     	;# 
  3084  049C                     	;# 
  3085  049D                     	;# 
  3086  058C                     	;# 
  3087  058C                     	;# 
  3088  058D                     	;# 
  3089  058E                     	;# 
  3090  058F                     	;# 
  3091  058F                     	;# 
  3092  0590                     	;# 
  3093  0591                     	;# 
  3094  0592                     	;# 
  3095  0593                     	;# 
  3096  059C                     	;# 
  3097  059C                     	;# 
  3098  059D                     	;# 
  3099  059D                     	;# 
  3100  059E                     	;# 
  3101  059F                     	;# 
  3102  060C                     	;# 
  3103  060C                     	;# 
  3104  060D                     	;# 
  3105  060D                     	;# 
  3106  060E                     	;# 
  3107  060F                     	;# 
  3108  0610                     	;# 
  3109  0611                     	;# 
  3110  0612                     	;# 
  3111  0613                     	;# 
  3112  0614                     	;# 
  3113  0616                     	;# 
  3114  0616                     	;# 
  3115  0617                     	;# 
  3116  0617                     	;# 
  3117  0618                     	;# 
  3118  0619                     	;# 
  3119  061A                     	;# 
  3120  061B                     	;# 
  3121  061C                     	;# 
  3122  061D                     	;# 
  3123  061E                     	;# 
  3124  070C                     	;# 
  3125  070D                     	;# 
  3126  070E                     	;# 
  3127  070F                     	;# 
  3128  0710                     	;# 
  3129  0711                     	;# 
  3130  0712                     	;# 
  3131  0713                     	;# 
  3132  0714                     	;# 
  3133  0716                     	;# 
  3134  0717                     	;# 
  3135  0718                     	;# 
  3136  0719                     	;# 
  3137  071A                     	;# 
  3138  071B                     	;# 
  3139  071C                     	;# 
  3140  071D                     	;# 
  3141  071E                     	;# 
  3142  0796                     	;# 
  3143  0797                     	;# 
  3144  0798                     	;# 
  3145  0799                     	;# 
  3146  079A                     	;# 
  3147  079B                     	;# 
  3148  079C                     	;# 
  3149  079D                     	;# 
  3150  080C                     	;# 
  3151  080D                     	;# 
  3152  080E                     	;# 
  3153  080F                     	;# 
  3154  0810                     	;# 
  3155  0811                     	;# 
  3156  0812                     	;# 
  3157  0813                     	;# 
  3158  0814                     	;# 
  3159  081A                     	;# 
  3160  081A                     	;# 
  3161  081B                     	;# 
  3162  081C                     	;# 
  3163  081C                     	;# 
  3164  081D                     	;# 
  3165  081E                     	;# 
  3166  081F                     	;# 
  3167  088C                     	;# 
  3168  088D                     	;# 
  3169  088E                     	;# 
  3170  088F                     	;# 
  3171  0890                     	;# 
  3172  0891                     	;# 
  3173  0892                     	;# 
  3174  0893                     	;# 
  3175  0895                     	;# 
  3176  0896                     	;# 
  3177  0897                     	;# 
  3178  0898                     	;# 
  3179  0899                     	;# 
  3180  089A                     	;# 
  3181  089B                     	;# 
  3182  090C                     	;# 
  3183  090E                     	;# 
  3184  090F                     	;# 
  3185  091F                     	;# 
  3186  098F                     	;# 
  3187  098F                     	;# 
  3188  0990                     	;# 
  3189  0991                     	;# 
  3190  0992                     	;# 
  3191  0993                     	;# 
  3192  0994                     	;# 
  3193  0995                     	;# 
  3194  0996                     	;# 
  3195  0997                     	;# 
  3196  1E0F                     	;# 
  3197  1E10                     	;# 
  3198  1E11                     	;# 
  3199  1E12                     	;# 
  3200  1E13                     	;# 
  3201  1E14                     	;# 
  3202  1E15                     	;# 
  3203  1E16                     	;# 
  3204  1E17                     	;# 
  3205  1E18                     	;# 
  3206  1E19                     	;# 
  3207  1E1A                     	;# 
  3208  1E1B                     	;# 
  3209  1E1C                     	;# 
  3210  1E1D                     	;# 
  3211  1E1E                     	;# 
  3212  1E1F                     	;# 
  3213  1E20                     	;# 
  3214  1E21                     	;# 
  3215  1E22                     	;# 
  3216  1E23                     	;# 
  3217  1E24                     	;# 
  3218  1E25                     	;# 
  3219  1E26                     	;# 
  3220  1E27                     	;# 
  3221  1E28                     	;# 
  3222  1E29                     	;# 
  3223  1E2A                     	;# 
  3224  1E2B                     	;# 
  3225  1E2C                     	;# 
  3226  1E2D                     	;# 
  3227  1E2E                     	;# 
  3228  1E2F                     	;# 
  3229  1E30                     	;# 
  3230  1E31                     	;# 
  3231  1E32                     	;# 
  3232  1E33                     	;# 
  3233  1E34                     	;# 
  3234  1E35                     	;# 
  3235  1E36                     	;# 
  3236  1E37                     	;# 
  3237  1E8F                     	;# 
  3238  1E90                     	;# 
  3239  1E91                     	;# 
  3240  1E92                     	;# 
  3241  1E93                     	;# 
  3242  1E94                     	;# 
  3243  1E95                     	;# 
  3244  1E96                     	;# 
  3245  1E97                     	;# 
  3246  1E9C                     	;# 
  3247  1E9D                     	;# 
  3248  1E9E                     	;# 
  3249  1EA1                     	;# 
  3250  1EA2                     	;# 
  3251  1EA3                     	;# 
  3252  1EA4                     	;# 
  3253  1EA9                     	;# 
  3254  1EAA                     	;# 
  3255  1EB1                     	;# 
  3256  1EB2                     	;# 
  3257  1EB8                     	;# 
  3258  1EB9                     	;# 
  3259  1EBA                     	;# 
  3260  1EBB                     	;# 
  3261  1EBC                     	;# 
  3262  1EBD                     	;# 
  3263  1EBE                     	;# 
  3264  1EC3                     	;# 
  3265  1EC5                     	;# 
  3266  1EC6                     	;# 
  3267  1EC7                     	;# 
  3268  1EC8                     	;# 
  3269  1EC9                     	;# 
  3270  1ECA                     	;# 
  3271  1ECB                     	;# 
  3272  1ECB                     	;# 
  3273  1ECB                     	;# 
  3274  1ECC                     	;# 
  3275  1ECC                     	;# 
  3276  1ECC                     	;# 
  3277  1F10                     	;# 
  3278  1F11                     	;# 
  3279  1F12                     	;# 
  3280  1F14                     	;# 
  3281  1F15                     	;# 
  3282  1F1C                     	;# 
  3283  1F1D                     	;# 
  3284  1F1E                     	;# 
  3285  1F1F                     	;# 
  3286  1F20                     	;# 
  3287  1F21                     	;# 
  3288  1F22                     	;# 
  3289  1F23                     	;# 
  3290  1F24                     	;# 
  3291  1F25                     	;# 
  3292  1F26                     	;# 
  3293  1F27                     	;# 
  3294  1F38                     	;# 
  3295  1F39                     	;# 
  3296  1F3A                     	;# 
  3297  1F3B                     	;# 
  3298  1F3C                     	;# 
  3299  1F3D                     	;# 
  3300  1F3E                     	;# 
  3301  1F3F                     	;# 
  3302  1F43                     	;# 
  3303  1F44                     	;# 
  3304  1F45                     	;# 
  3305  1F46                     	;# 
  3306  1F47                     	;# 
  3307  1F48                     	;# 
  3308  1F49                     	;# 
  3309  1F4A                     	;# 
  3310  1F4E                     	;# 
  3311  1F4F                     	;# 
  3312  1F50                     	;# 
  3313  1F51                     	;# 
  3314  1F52                     	;# 
  3315  1F53                     	;# 
  3316  1F54                     	;# 
  3317  1F55                     	;# 
  3318  1FE4                     	;# 
  3319  1FE5                     	;# 
  3320  1FE6                     	;# 
  3321  1FE7                     	;# 
  3322  1FE8                     	;# 
  3323  1FE8                     	;# 
  3324  1FE9                     	;# 
  3325  1FEA                     	;# 
  3326  1FEB                     	;# 
  3327  1FED                     	;# 
  3328  1FEE                     	;# 
  3329  1FEF                     	;# 
  3330  0000                     	;# 
  3331  0001                     	;# 
  3332  0002                     	;# 
  3333  0003                     	;# 
  3334  0004                     	;# 
  3335  0005                     	;# 
  3336  0006                     	;# 
  3337  0007                     	;# 
  3338  0008                     	;# 
  3339  0009                     	;# 
  3340  000A                     	;# 
  3341  000B                     	;# 
  3342  000C                     	;# 
  3343  000D                     	;# 
  3344  000E                     	;# 
  3345  0012                     	;# 
  3346  0013                     	;# 
  3347  0014                     	;# 
  3348  0018                     	;# 
  3349  0019                     	;# 
  3350  001A                     	;# 
  3351  008C                     	;# 
  3352  008C                     	;# 
  3353  008D                     	;# 
  3354  008E                     	;# 
  3355  008E                     	;# 
  3356  008F                     	;# 
  3357  0090                     	;# 
  3358  0090                     	;# 
  3359  0091                     	;# 
  3360  0092                     	;# 
  3361  0092                     	;# 
  3362  0093                     	;# 
  3363  0094                     	;# 
  3364  0094                     	;# 
  3365  0095                     	;# 
  3366  0096                     	;# 
  3367  0096                     	;# 
  3368  0097                     	;# 
  3369  0098                     	;# 
  3370  0099                     	;# 
  3371  009A                     	;# 
  3372  009B                     	;# 
  3373  009B                     	;# 
  3374  009C                     	;# 
  3375  009D                     	;# 
  3376  009D                     	;# 
  3377  009E                     	;# 
  3378  009F                     	;# 
  3379  010C                     	;# 
  3380  010C                     	;# 
  3381  010D                     	;# 
  3382  010E                     	;# 
  3383  010F                     	;# 
  3384  010F                     	;# 
  3385  0110                     	;# 
  3386  0111                     	;# 
  3387  0112                     	;# 
  3388  0113                     	;# 
  3389  0114                     	;# 
  3390  0115                     	;# 
  3391  0116                     	;# 
  3392  0117                     	;# 
  3393  0118                     	;# 
  3394  0119                     	;# 
  3395  0119                     	;# 
  3396  0119                     	;# 
  3397  011A                     	;# 
  3398  011A                     	;# 
  3399  011A                     	;# 
  3400  011B                     	;# 
  3401  011B                     	;# 
  3402  011B                     	;# 
  3403  011B                     	;# 
  3404  011B                     	;# 
  3405  011C                     	;# 
  3406  011C                     	;# 
  3407  011C                     	;# 
  3408  011D                     	;# 
  3409  011D                     	;# 
  3410  011D                     	;# 
  3411  011E                     	;# 
  3412  011E                     	;# 
  3413  011E                     	;# 
  3414  011F                     	;# 
  3415  011F                     	;# 
  3416  011F                     	;# 
  3417  011F                     	;# 
  3418  011F                     	;# 
  3419  018C                     	;# 
  3420  018D                     	;# 
  3421  018E                     	;# 
  3422  018F                     	;# 
  3423  0190                     	;# 
  3424  0191                     	;# 
  3425  0192                     	;# 
  3426  0196                     	;# 
  3427  0197                     	;# 
  3428  0198                     	;# 
  3429  0199                     	;# 
  3430  019A                     	;# 
  3431  019B                     	;# 
  3432  019C                     	;# 
  3433  020C                     	;# 
  3434  020D                     	;# 
  3435  020E                     	;# 
  3436  020E                     	;# 
  3437  020F                     	;# 
  3438  020F                     	;# 
  3439  0210                     	;# 
  3440  0210                     	;# 
  3441  0211                     	;# 
  3442  0211                     	;# 
  3443  0212                     	;# 
  3444  0213                     	;# 
  3445  0214                     	;# 
  3446  0214                     	;# 
  3447  0215                     	;# 
  3448  0215                     	;# 
  3449  0216                     	;# 
  3450  0216                     	;# 
  3451  0217                     	;# 
  3452  0217                     	;# 
  3453  0218                     	;# 
  3454  0219                     	;# 
  3455  021A                     	;# 
  3456  021A                     	;# 
  3457  021B                     	;# 
  3458  021B                     	;# 
  3459  021C                     	;# 
  3460  021C                     	;# 
  3461  021D                     	;# 
  3462  021D                     	;# 
  3463  021E                     	;# 
  3464  021F                     	;# 
  3465  028C                     	;# 
  3466  028C                     	;# 
  3467  028D                     	;# 
  3468  028D                     	;# 
  3469  028E                     	;# 
  3470  028F                     	;# 
  3471  0290                     	;# 
  3472  0291                     	;# 
  3473  0292                     	;# 
  3474  0292                     	;# 
  3475  0293                     	;# 
  3476  0293                     	;# 
  3477  0294                     	;# 
  3478  0295                     	;# 
  3479  0296                     	;# 
  3480  0297                     	;# 
  3481  0298                     	;# 
  3482  0298                     	;# 
  3483  0299                     	;# 
  3484  0299                     	;# 
  3485  029A                     	;# 
  3486  029B                     	;# 
  3487  029C                     	;# 
  3488  029D                     	;# 
  3489  029F                     	;# 
  3490  030C                     	;# 
  3491  030C                     	;# 
  3492  030D                     	;# 
  3493  030E                     	;# 
  3494  030F                     	;# 
  3495  0310                     	;# 
  3496  0310                     	;# 
  3497  0311                     	;# 
  3498  0312                     	;# 
  3499  0313                     	;# 
  3500  0314                     	;# 
  3501  0314                     	;# 
  3502  0315                     	;# 
  3503  0316                     	;# 
  3504  0317                     	;# 
  3505  0318                     	;# 
  3506  0318                     	;# 
  3507  0319                     	;# 
  3508  031A                     	;# 
  3509  031B                     	;# 
  3510  038C                     	;# 
  3511  038C                     	;# 
  3512  038D                     	;# 
  3513  038E                     	;# 
  3514  0390                     	;# 
  3515  0390                     	;# 
  3516  0391                     	;# 
  3517  0392                     	;# 
  3518  048C                     	;# 
  3519  048C                     	;# 
  3520  048D                     	;# 
  3521  048E                     	;# 
  3522  048F                     	;# 
  3523  048F                     	;# 
  3524  0490                     	;# 
  3525  0491                     	;# 
  3526  0492                     	;# 
  3527  0492                     	;# 
  3528  0493                     	;# 
  3529  0494                     	;# 
  3530  0495                     	;# 
  3531  0495                     	;# 
  3532  0496                     	;# 
  3533  0497                     	;# 
  3534  0498                     	;# 
  3535  0499                     	;# 
  3536  049A                     	;# 
  3537  049B                     	;# 
  3538  049C                     	;# 
  3539  049D                     	;# 
  3540  058C                     	;# 
  3541  058C                     	;# 
  3542  058D                     	;# 
  3543  058E                     	;# 
  3544  058F                     	;# 
  3545  058F                     	;# 
  3546  0590                     	;# 
  3547  0591                     	;# 
  3548  0592                     	;# 
  3549  0593                     	;# 
  3550  059C                     	;# 
  3551  059C                     	;# 
  3552  059D                     	;# 
  3553  059D                     	;# 
  3554  059E                     	;# 
  3555  059F                     	;# 
  3556  060C                     	;# 
  3557  060C                     	;# 
  3558  060D                     	;# 
  3559  060D                     	;# 
  3560  060E                     	;# 
  3561  060F                     	;# 
  3562  0610                     	;# 
  3563  0611                     	;# 
  3564  0612                     	;# 
  3565  0613                     	;# 
  3566  0614                     	;# 
  3567  0616                     	;# 
  3568  0616                     	;# 
  3569  0617                     	;# 
  3570  0617                     	;# 
  3571  0618                     	;# 
  3572  0619                     	;# 
  3573  061A                     	;# 
  3574  061B                     	;# 
  3575  061C                     	;# 
  3576  061D                     	;# 
  3577  061E                     	;# 
  3578  070C                     	;# 
  3579  070D                     	;# 
  3580  070E                     	;# 
  3581  070F                     	;# 
  3582  0710                     	;# 
  3583  0711                     	;# 
  3584  0712                     	;# 
  3585  0713                     	;# 
  3586  0714                     	;# 
  3587  0716                     	;# 
  3588  0717                     	;# 
  3589  0718                     	;# 
  3590  0719                     	;# 
  3591  071A                     	;# 
  3592  071B                     	;# 
  3593  071C                     	;# 
  3594  071D                     	;# 
  3595  071E                     	;# 
  3596  0796                     	;# 
  3597  0797                     	;# 
  3598  0798                     	;# 
  3599  0799                     	;# 
  3600  079A                     	;# 
  3601  079B                     	;# 
  3602  079C                     	;# 
  3603  079D                     	;# 
  3604  080C                     	;# 
  3605  080D                     	;# 
  3606  080E                     	;# 
  3607  080F                     	;# 
  3608  0810                     	;# 
  3609  0811                     	;# 
  3610  0812                     	;# 
  3611  0813                     	;# 
  3612  0814                     	;# 
  3613  081A                     	;# 
  3614  081A                     	;# 
  3615  081B                     	;# 
  3616  081C                     	;# 
  3617  081C                     	;# 
  3618  081D                     	;# 
  3619  081E                     	;# 
  3620  081F                     	;# 
  3621  088C                     	;# 
  3622  088D                     	;# 
  3623  088E                     	;# 
  3624  088F                     	;# 
  3625  0890                     	;# 
  3626  0891                     	;# 
  3627  0892                     	;# 
  3628  0893                     	;# 
  3629  0895                     	;# 
  3630  0896                     	;# 
  3631  0897                     	;# 
  3632  0898                     	;# 
  3633  0899                     	;# 
  3634  089A                     	;# 
  3635  089B                     	;# 
  3636  090C                     	;# 
  3637  090E                     	;# 
  3638  090F                     	;# 
  3639  091F                     	;# 
  3640  098F                     	;# 
  3641  098F                     	;# 
  3642  0990                     	;# 
  3643  0991                     	;# 
  3644  0992                     	;# 
  3645  0993                     	;# 
  3646  0994                     	;# 
  3647  0995                     	;# 
  3648  0996                     	;# 
  3649  0997                     	;# 
  3650  1E0F                     	;# 
  3651  1E10                     	;# 
  3652  1E11                     	;# 
  3653  1E12                     	;# 
  3654  1E13                     	;# 
  3655  1E14                     	;# 
  3656  1E15                     	;# 
  3657  1E16                     	;# 
  3658  1E17                     	;# 
  3659  1E18                     	;# 
  3660  1E19                     	;# 
  3661  1E1A                     	;# 
  3662  1E1B                     	;# 
  3663  1E1C                     	;# 
  3664  1E1D                     	;# 
  3665  1E1E                     	;# 
  3666  1E1F                     	;# 
  3667  1E20                     	;# 
  3668  1E21                     	;# 
  3669  1E22                     	;# 
  3670  1E23                     	;# 
  3671  1E24                     	;# 
  3672  1E25                     	;# 
  3673  1E26                     	;# 
  3674  1E27                     	;# 
  3675  1E28                     	;# 
  3676  1E29                     	;# 
  3677  1E2A                     	;# 
  3678  1E2B                     	;# 
  3679  1E2C                     	;# 
  3680  1E2D                     	;# 
  3681  1E2E                     	;# 
  3682  1E2F                     	;# 
  3683  1E30                     	;# 
  3684  1E31                     	;# 
  3685  1E32                     	;# 
  3686  1E33                     	;# 
  3687  1E34                     	;# 
  3688  1E35                     	;# 
  3689  1E36                     	;# 
  3690  1E37                     	;# 
  3691  1E8F                     	;# 
  3692  1E90                     	;# 
  3693  1E91                     	;# 
  3694  1E92                     	;# 
  3695  1E93                     	;# 
  3696  1E94                     	;# 
  3697  1E95                     	;# 
  3698  1E96                     	;# 
  3699  1E97                     	;# 
  3700  1E9C                     	;# 
  3701  1E9D                     	;# 
  3702  1E9E                     	;# 
  3703  1EA1                     	;# 
  3704  1EA2                     	;# 
  3705  1EA3                     	;# 
  3706  1EA4                     	;# 
  3707  1EA9                     	;# 
  3708  1EAA                     	;# 
  3709  1EB1                     	;# 
  3710  1EB2                     	;# 
  3711  1EB8                     	;# 
  3712  1EB9                     	;# 
  3713  1EBA                     	;# 
  3714  1EBB                     	;# 
  3715  1EBC                     	;# 
  3716  1EBD                     	;# 
  3717  1EBE                     	;# 
  3718  1EC3                     	;# 
  3719  1EC5                     	;# 
  3720  1EC6                     	;# 
  3721  1EC7                     	;# 
  3722  1EC8                     	;# 
  3723  1EC9                     	;# 
  3724  1ECA                     	;# 
  3725  1ECB                     	;# 
  3726  1ECB                     	;# 
  3727  1ECB                     	;# 
  3728  1ECC                     	;# 
  3729  1ECC                     	;# 
  3730  1ECC                     	;# 
  3731  1F10                     	;# 
  3732  1F11                     	;# 
  3733  1F12                     	;# 
  3734  1F14                     	;# 
  3735  1F15                     	;# 
  3736  1F1C                     	;# 
  3737  1F1D                     	;# 
  3738  1F1E                     	;# 
  3739  1F1F                     	;# 
  3740  1F20                     	;# 
  3741  1F21                     	;# 
  3742  1F22                     	;# 
  3743  1F23                     	;# 
  3744  1F24                     	;# 
  3745  1F25                     	;# 
  3746  1F26                     	;# 
  3747  1F27                     	;# 
  3748  1F38                     	;# 
  3749  1F39                     	;# 
  3750  1F3A                     	;# 
  3751  1F3B                     	;# 
  3752  1F3C                     	;# 
  3753  1F3D                     	;# 
  3754  1F3E                     	;# 
  3755  1F3F                     	;# 
  3756  1F43                     	;# 
  3757  1F44                     	;# 
  3758  1F45                     	;# 
  3759  1F46                     	;# 
  3760  1F47                     	;# 
  3761  1F48                     	;# 
  3762  1F49                     	;# 
  3763  1F4A                     	;# 
  3764  1F4E                     	;# 
  3765  1F4F                     	;# 
  3766  1F50                     	;# 
  3767  1F51                     	;# 
  3768  1F52                     	;# 
  3769  1F53                     	;# 
  3770  1F54                     	;# 
  3771  1F55                     	;# 
  3772  1FE4                     	;# 
  3773  1FE5                     	;# 
  3774  1FE6                     	;# 
  3775  1FE7                     	;# 
  3776  1FE8                     	;# 
  3777  1FE8                     	;# 
  3778  1FE9                     	;# 
  3779  1FEA                     	;# 
  3780  1FEB                     	;# 
  3781  1FED                     	;# 
  3782  1FEE                     	;# 
  3783  1FEF                     	;# 
  3784  0000                     	;# 
  3785  0001                     	;# 
  3786  0002                     	;# 
  3787  0003                     	;# 
  3788  0004                     	;# 
  3789  0005                     	;# 
  3790  0006                     	;# 
  3791  0007                     	;# 
  3792  0008                     	;# 
  3793  0009                     	;# 
  3794  000A                     	;# 
  3795  000B                     	;# 
  3796  000C                     	;# 
  3797  000D                     	;# 
  3798  000E                     	;# 
  3799  0012                     	;# 
  3800  0013                     	;# 
  3801  0014                     	;# 
  3802  0018                     	;# 
  3803  0019                     	;# 
  3804  001A                     	;# 
  3805  008C                     	;# 
  3806  008C                     	;# 
  3807  008D                     	;# 
  3808  008E                     	;# 
  3809  008E                     	;# 
  3810  008F                     	;# 
  3811  0090                     	;# 
  3812  0090                     	;# 
  3813  0091                     	;# 
  3814  0092                     	;# 
  3815  0092                     	;# 
  3816  0093                     	;# 
  3817  0094                     	;# 
  3818  0094                     	;# 
  3819  0095                     	;# 
  3820  0096                     	;# 
  3821  0096                     	;# 
  3822  0097                     	;# 
  3823  0098                     	;# 
  3824  0099                     	;# 
  3825  009A                     	;# 
  3826  009B                     	;# 
  3827  009B                     	;# 
  3828  009C                     	;# 
  3829  009D                     	;# 
  3830  009D                     	;# 
  3831  009E                     	;# 
  3832  009F                     	;# 
  3833  010C                     	;# 
  3834  010C                     	;# 
  3835  010D                     	;# 
  3836  010E                     	;# 
  3837  010F                     	;# 
  3838  010F                     	;# 
  3839  0110                     	;# 
  3840  0111                     	;# 
  3841  0112                     	;# 
  3842  0113                     	;# 
  3843  0114                     	;# 
  3844  0115                     	;# 
  3845  0116                     	;# 
  3846  0117                     	;# 
  3847  0118                     	;# 
  3848  0119                     	;# 
  3849  0119                     	;# 
  3850  0119                     	;# 
  3851  011A                     	;# 
  3852  011A                     	;# 
  3853  011A                     	;# 
  3854  011B                     	;# 
  3855  011B                     	;# 
  3856  011B                     	;# 
  3857  011B                     	;# 
  3858  011B                     	;# 
  3859  011C                     	;# 
  3860  011C                     	;# 
  3861  011C                     	;# 
  3862  011D                     	;# 
  3863  011D                     	;# 
  3864  011D                     	;# 
  3865  011E                     	;# 
  3866  011E                     	;# 
  3867  011E                     	;# 
  3868  011F                     	;# 
  3869  011F                     	;# 
  3870  011F                     	;# 
  3871  011F                     	;# 
  3872  011F                     	;# 
  3873  018C                     	;# 
  3874  018D                     	;# 
  3875  018E                     	;# 
  3876  018F                     	;# 
  3877  0190                     	;# 
  3878  0191                     	;# 
  3879  0192                     	;# 
  3880  0196                     	;# 
  3881  0197                     	;# 
  3882  0198                     	;# 
  3883  0199                     	;# 
  3884  019A                     	;# 
  3885  019B                     	;# 
  3886  019C                     	;# 
  3887  020C                     	;# 
  3888  020D                     	;# 
  3889  020E                     	;# 
  3890  020E                     	;# 
  3891  020F                     	;# 
  3892  020F                     	;# 
  3893  0210                     	;# 
  3894  0210                     	;# 
  3895  0211                     	;# 
  3896  0211                     	;# 
  3897  0212                     	;# 
  3898  0213                     	;# 
  3899  0214                     	;# 
  3900  0214                     	;# 
  3901  0215                     	;# 
  3902  0215                     	;# 
  3903  0216                     	;# 
  3904  0216                     	;# 
  3905  0217                     	;# 
  3906  0217                     	;# 
  3907  0218                     	;# 
  3908  0219                     	;# 
  3909  021A                     	;# 
  3910  021A                     	;# 
  3911  021B                     	;# 
  3912  021B                     	;# 
  3913  021C                     	;# 
  3914  021C                     	;# 
  3915  021D                     	;# 
  3916  021D                     	;# 
  3917  021E                     	;# 
  3918  021F                     	;# 
  3919  028C                     	;# 
  3920  028C                     	;# 
  3921  028D                     	;# 
  3922  028D                     	;# 
  3923  028E                     	;# 
  3924  028F                     	;# 
  3925  0290                     	;# 
  3926  0291                     	;# 
  3927  0292                     	;# 
  3928  0292                     	;# 
  3929  0293                     	;# 
  3930  0293                     	;# 
  3931  0294                     	;# 
  3932  0295                     	;# 
  3933  0296                     	;# 
  3934  0297                     	;# 
  3935  0298                     	;# 
  3936  0298                     	;# 
  3937  0299                     	;# 
  3938  0299                     	;# 
  3939  029A                     	;# 
  3940  029B                     	;# 
  3941  029C                     	;# 
  3942  029D                     	;# 
  3943  029F                     	;# 
  3944  030C                     	;# 
  3945  030C                     	;# 
  3946  030D                     	;# 
  3947  030E                     	;# 
  3948  030F                     	;# 
  3949  0310                     	;# 
  3950  0310                     	;# 
  3951  0311                     	;# 
  3952  0312                     	;# 
  3953  0313                     	;# 
  3954  0314                     	;# 
  3955  0314                     	;# 
  3956  0315                     	;# 
  3957  0316                     	;# 
  3958  0317                     	;# 
  3959  0318                     	;# 
  3960  0318                     	;# 
  3961  0319                     	;# 
  3962  031A                     	;# 
  3963  031B                     	;# 
  3964  038C                     	;# 
  3965  038C                     	;# 
  3966  038D                     	;# 
  3967  038E                     	;# 
  3968  0390                     	;# 
  3969  0390                     	;# 
  3970  0391                     	;# 
  3971  0392                     	;# 
  3972  048C                     	;# 
  3973  048C                     	;# 
  3974  048D                     	;# 
  3975  048E                     	;# 
  3976  048F                     	;# 
  3977  048F                     	;# 
  3978  0490                     	;# 
  3979  0491                     	;# 
  3980  0492                     	;# 
  3981  0492                     	;# 
  3982  0493                     	;# 
  3983  0494                     	;# 
  3984  0495                     	;# 
  3985  0495                     	;# 
  3986  0496                     	;# 
  3987  0497                     	;# 
  3988  0498                     	;# 
  3989  0499                     	;# 
  3990  049A                     	;# 
  3991  049B                     	;# 
  3992  049C                     	;# 
  3993  049D                     	;# 
  3994  058C                     	;# 
  3995  058C                     	;# 
  3996  058D                     	;# 
  3997  058E                     	;# 
  3998  058F                     	;# 
  3999  058F                     	;# 
  4000  0590                     	;# 
  4001  0591                     	;# 
  4002  0592                     	;# 
  4003  0593                     	;# 
  4004  059C                     	;# 
  4005  059C                     	;# 
  4006  059D                     	;# 
  4007  059D                     	;# 
  4008  059E                     	;# 
  4009  059F                     	;# 
  4010  060C                     	;# 
  4011  060C                     	;# 
  4012  060D                     	;# 
  4013  060D                     	;# 
  4014  060E                     	;# 
  4015  060F                     	;# 
  4016  0610                     	;# 
  4017  0611                     	;# 
  4018  0612                     	;# 
  4019  0613                     	;# 
  4020  0614                     	;# 
  4021  0616                     	;# 
  4022  0616                     	;# 
  4023  0617                     	;# 
  4024  0617                     	;# 
  4025  0618                     	;# 
  4026  0619                     	;# 
  4027  061A                     	;# 
  4028  061B                     	;# 
  4029  061C                     	;# 
  4030  061D                     	;# 
  4031  061E                     	;# 
  4032  070C                     	;# 
  4033  070D                     	;# 
  4034  070E                     	;# 
  4035  070F                     	;# 
  4036  0710                     	;# 
  4037  0711                     	;# 
  4038  0712                     	;# 
  4039  0713                     	;# 
  4040  0714                     	;# 
  4041  0716                     	;# 
  4042  0717                     	;# 
  4043  0718                     	;# 
  4044  0719                     	;# 
  4045  071A                     	;# 
  4046  071B                     	;# 
  4047  071C                     	;# 
  4048  071D                     	;# 
  4049  071E                     	;# 
  4050  0796                     	;# 
  4051  0797                     	;# 
  4052  0798                     	;# 
  4053  0799                     	;# 
  4054  079A                     	;# 
  4055  079B                     	;# 
  4056  079C                     	;# 
  4057  079D                     	;# 
  4058  080C                     	;# 
  4059  080D                     	;# 
  4060  080E                     	;# 
  4061  080F                     	;# 
  4062  0810                     	;# 
  4063  0811                     	;# 
  4064  0812                     	;# 
  4065  0813                     	;# 
  4066  0814                     	;# 
  4067  081A                     	;# 
  4068  081A                     	;# 
  4069  081B                     	;# 
  4070  081C                     	;# 
  4071  081C                     	;# 
  4072  081D                     	;# 
  4073  081E                     	;# 
  4074  081F                     	;# 
  4075  088C                     	;# 
  4076  088D                     	;# 
  4077  088E                     	;# 
  4078  088F                     	;# 
  4079  0890                     	;# 
  4080  0891                     	;# 
  4081  0892                     	;# 
  4082  0893                     	;# 
  4083  0895                     	;# 
  4084  0896                     	;# 
  4085  0897                     	;# 
  4086  0898                     	;# 
  4087  0899                     	;# 
  4088  089A                     	;# 
  4089  089B                     	;# 
  4090  090C                     	;# 
  4091  090E                     	;# 
  4092  090F                     	;# 
  4093  091F                     	;# 
  4094  098F                     	;# 
  4095  098F                     	;# 
  4096  0990                     	;# 
  4097  0991                     	;# 
  4098  0992                     	;# 
  4099  0993                     	;# 
  4100  0994                     	;# 
  4101  0995                     	;# 
  4102  0996                     	;# 
  4103  0997                     	;# 
  4104  1E0F                     	;# 
  4105  1E10                     	;# 
  4106  1E11                     	;# 
  4107  1E12                     	;# 
  4108  1E13                     	;# 
  4109  1E14                     	;# 
  4110  1E15                     	;# 
  4111  1E16                     	;# 
  4112  1E17                     	;# 
  4113  1E18                     	;# 
  4114  1E19                     	;# 
  4115  1E1A                     	;# 
  4116  1E1B                     	;# 
  4117  1E1C                     	;# 
  4118  1E1D                     	;# 
  4119  1E1E                     	;# 
  4120  1E1F                     	;# 
  4121  1E20                     	;# 
  4122  1E21                     	;# 
  4123  1E22                     	;# 
  4124  1E23                     	;# 
  4125  1E24                     	;# 
  4126  1E25                     	;# 
  4127  1E26                     	;# 
  4128  1E27                     	;# 
  4129  1E28                     	;# 
  4130  1E29                     	;# 
  4131  1E2A                     	;# 
  4132  1E2B                     	;# 
  4133  1E2C                     	;# 
  4134  1E2D                     	;# 
  4135  1E2E                     	;# 
  4136  1E2F                     	;# 
  4137  1E30                     	;# 
  4138  1E31                     	;# 
  4139  1E32                     	;# 
  4140  1E33                     	;# 
  4141  1E34                     	;# 
  4142  1E35                     	;# 
  4143  1E36                     	;# 
  4144  1E37                     	;# 
  4145  1E8F                     	;# 
  4146  1E90                     	;# 
  4147  1E91                     	;# 
  4148  1E92                     	;# 
  4149  1E93                     	;# 
  4150  1E94                     	;# 
  4151  1E95                     	;# 
  4152  1E96                     	;# 
  4153  1E97                     	;# 
  4154  1E9C                     	;# 
  4155  1E9D                     	;# 
  4156  1E9E                     	;# 
  4157  1EA1                     	;# 
  4158  1EA2                     	;# 
  4159  1EA3                     	;# 
  4160  1EA4                     	;# 
  4161  1EA9                     	;# 
  4162  1EAA                     	;# 
  4163  1EB1                     	;# 
  4164  1EB2                     	;# 
  4165  1EB8                     	;# 
  4166  1EB9                     	;# 
  4167  1EBA                     	;# 
  4168  1EBB                     	;# 
  4169  1EBC                     	;# 
  4170  1EBD                     	;# 
  4171  1EBE                     	;# 
  4172  1EC3                     	;# 
  4173  1EC5                     	;# 
  4174  1EC6                     	;# 
  4175  1EC7                     	;# 
  4176  1EC8                     	;# 
  4177  1EC9                     	;# 
  4178  1ECA                     	;# 
  4179  1ECB                     	;# 
  4180  1ECB                     	;# 
  4181  1ECB                     	;# 
  4182  1ECC                     	;# 
  4183  1ECC                     	;# 
  4184  1ECC                     	;# 
  4185  1F10                     	;# 
  4186  1F11                     	;# 
  4187  1F12                     	;# 
  4188  1F14                     	;# 
  4189  1F15                     	;# 
  4190  1F1C                     	;# 
  4191  1F1D                     	;# 
  4192  1F1E                     	;# 
  4193  1F1F                     	;# 
  4194  1F20                     	;# 
  4195  1F21                     	;# 
  4196  1F22                     	;# 
  4197  1F23                     	;# 
  4198  1F24                     	;# 
  4199  1F25                     	;# 
  4200  1F26                     	;# 
  4201  1F27                     	;# 
  4202  1F38                     	;# 
  4203  1F39                     	;# 
  4204  1F3A                     	;# 
  4205  1F3B                     	;# 
  4206  1F3C                     	;# 
  4207  1F3D                     	;# 
  4208  1F3E                     	;# 
  4209  1F3F                     	;# 
  4210  1F43                     	;# 
  4211  1F44                     	;# 
  4212  1F45                     	;# 
  4213  1F46                     	;# 
  4214  1F47                     	;# 
  4215  1F48                     	;# 
  4216  1F49                     	;# 
  4217  1F4A                     	;# 
  4218  1F4E                     	;# 
  4219  1F4F                     	;# 
  4220  1F50                     	;# 
  4221  1F51                     	;# 
  4222  1F52                     	;# 
  4223  1F53                     	;# 
  4224  1F54                     	;# 
  4225  1F55                     	;# 
  4226  1FE4                     	;# 
  4227  1FE5                     	;# 
  4228  1FE6                     	;# 
  4229  1FE7                     	;# 
  4230  1FE8                     	;# 
  4231  1FE8                     	;# 
  4232  1FE9                     	;# 
  4233  1FEA                     	;# 
  4234  1FEB                     	;# 
  4235  1FED                     	;# 
  4236  1FEE                     	;# 
  4237  1FEF                     	;# 
  4238  0000                     	;# 
  4239  0001                     	;# 
  4240  0002                     	;# 
  4241  0003                     	;# 
  4242  0004                     	;# 
  4243  0005                     	;# 
  4244  0006                     	;# 
  4245  0007                     	;# 
  4246  0008                     	;# 
  4247  0009                     	;# 
  4248  000A                     	;# 
  4249  000B                     	;# 
  4250  000C                     	;# 
  4251  000D                     	;# 
  4252  000E                     	;# 
  4253  0012                     	;# 
  4254  0013                     	;# 
  4255  0014                     	;# 
  4256  0018                     	;# 
  4257  0019                     	;# 
  4258  001A                     	;# 
  4259  008C                     	;# 
  4260  008C                     	;# 
  4261  008D                     	;# 
  4262  008E                     	;# 
  4263  008E                     	;# 
  4264  008F                     	;# 
  4265  0090                     	;# 
  4266  0090                     	;# 
  4267  0091                     	;# 
  4268  0092                     	;# 
  4269  0092                     	;# 
  4270  0093                     	;# 
  4271  0094                     	;# 
  4272  0094                     	;# 
  4273  0095                     	;# 
  4274  0096                     	;# 
  4275  0096                     	;# 
  4276  0097                     	;# 
  4277  0098                     	;# 
  4278  0099                     	;# 
  4279  009A                     	;# 
  4280  009B                     	;# 
  4281  009B                     	;# 
  4282  009C                     	;# 
  4283  009D                     	;# 
  4284  009D                     	;# 
  4285  009E                     	;# 
  4286  009F                     	;# 
  4287  010C                     	;# 
  4288  010C                     	;# 
  4289  010D                     	;# 
  4290  010E                     	;# 
  4291  010F                     	;# 
  4292  010F                     	;# 
  4293  0110                     	;# 
  4294  0111                     	;# 
  4295  0112                     	;# 
  4296  0113                     	;# 
  4297  0114                     	;# 
  4298  0115                     	;# 
  4299  0116                     	;# 
  4300  0117                     	;# 
  4301  0118                     	;# 
  4302  0119                     	;# 
  4303  0119                     	;# 
  4304  0119                     	;# 
  4305  011A                     	;# 
  4306  011A                     	;# 
  4307  011A                     	;# 
  4308  011B                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011C                     	;# 
  4314  011C                     	;# 
  4315  011C                     	;# 
  4316  011D                     	;# 
  4317  011D                     	;# 
  4318  011D                     	;# 
  4319  011E                     	;# 
  4320  011E                     	;# 
  4321  011E                     	;# 
  4322  011F                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  018C                     	;# 
  4328  018D                     	;# 
  4329  018E                     	;# 
  4330  018F                     	;# 
  4331  0190                     	;# 
  4332  0191                     	;# 
  4333  0192                     	;# 
  4334  0196                     	;# 
  4335  0197                     	;# 
  4336  0198                     	;# 
  4337  0199                     	;# 
  4338  019A                     	;# 
  4339  019B                     	;# 
  4340  019C                     	;# 
  4341  020C                     	;# 
  4342  020D                     	;# 
  4343  020E                     	;# 
  4344  020E                     	;# 
  4345  020F                     	;# 
  4346  020F                     	;# 
  4347  0210                     	;# 
  4348  0210                     	;# 
  4349  0211                     	;# 
  4350  0211                     	;# 
  4351  0212                     	;# 
  4352  0213                     	;# 
  4353  0214                     	;# 
  4354  0214                     	;# 
  4355  0215                     	;# 
  4356  0215                     	;# 
  4357  0216                     	;# 
  4358  0216                     	;# 
  4359  0217                     	;# 
  4360  0217                     	;# 
  4361  0218                     	;# 
  4362  0219                     	;# 
  4363  021A                     	;# 
  4364  021A                     	;# 
  4365  021B                     	;# 
  4366  021B                     	;# 
  4367  021C                     	;# 
  4368  021C                     	;# 
  4369  021D                     	;# 
  4370  021D                     	;# 
  4371  021E                     	;# 
  4372  021F                     	;# 
  4373  028C                     	;# 
  4374  028C                     	;# 
  4375  028D                     	;# 
  4376  028D                     	;# 
  4377  028E                     	;# 
  4378  028F                     	;# 
  4379  0290                     	;# 
  4380  0291                     	;# 
  4381  0292                     	;# 
  4382  0292                     	;# 
  4383  0293                     	;# 
  4384  0293                     	;# 
  4385  0294                     	;# 
  4386  0295                     	;# 
  4387  0296                     	;# 
  4388  0297                     	;# 
  4389  0298                     	;# 
  4390  0298                     	;# 
  4391  0299                     	;# 
  4392  0299                     	;# 
  4393  029A                     	;# 
  4394  029B                     	;# 
  4395  029C                     	;# 
  4396  029D                     	;# 
  4397  029F                     	;# 
  4398  030C                     	;# 
  4399  030C                     	;# 
  4400  030D                     	;# 
  4401  030E                     	;# 
  4402  030F                     	;# 
  4403  0310                     	;# 
  4404  0310                     	;# 
  4405  0311                     	;# 
  4406  0312                     	;# 
  4407  0313                     	;# 
  4408  0314                     	;# 
  4409  0314                     	;# 
  4410  0315                     	;# 
  4411  0316                     	;# 
  4412  0317                     	;# 
  4413  0318                     	;# 
  4414  0318                     	;# 
  4415  0319                     	;# 
  4416  031A                     	;# 
  4417  031B                     	;# 
  4418  038C                     	;# 
  4419  038C                     	;# 
  4420  038D                     	;# 
  4421  038E                     	;# 
  4422  0390                     	;# 
  4423  0390                     	;# 
  4424  0391                     	;# 
  4425  0392                     	;# 
  4426  048C                     	;# 
  4427  048C                     	;# 
  4428  048D                     	;# 
  4429  048E                     	;# 
  4430  048F                     	;# 
  4431  048F                     	;# 
  4432  0490                     	;# 
  4433  0491                     	;# 
  4434  0492                     	;# 
  4435  0492                     	;# 
  4436  0493                     	;# 
  4437  0494                     	;# 
  4438  0495                     	;# 
  4439  0495                     	;# 
  4440  0496                     	;# 
  4441  0497                     	;# 
  4442  0498                     	;# 
  4443  0499                     	;# 
  4444  049A                     	;# 
  4445  049B                     	;# 
  4446  049C                     	;# 
  4447  049D                     	;# 
  4448  058C                     	;# 
  4449  058C                     	;# 
  4450  058D                     	;# 
  4451  058E                     	;# 
  4452  058F                     	;# 
  4453  058F                     	;# 
  4454  0590                     	;# 
  4455  0591                     	;# 
  4456  0592                     	;# 
  4457  0593                     	;# 
  4458  059C                     	;# 
  4459  059C                     	;# 
  4460  059D                     	;# 
  4461  059D                     	;# 
  4462  059E                     	;# 
  4463  059F                     	;# 
  4464  060C                     	;# 
  4465  060C                     	;# 
  4466  060D                     	;# 
  4467  060D                     	;# 
  4468  060E                     	;# 
  4469  060F                     	;# 
  4470  0610                     	;# 
  4471  0611                     	;# 
  4472  0612                     	;# 
  4473  0613                     	;# 
  4474  0614                     	;# 
  4475  0616                     	;# 
  4476  0616                     	;# 
  4477  0617                     	;# 
  4478  0617                     	;# 
  4479  0618                     	;# 
  4480  0619                     	;# 
  4481  061A                     	;# 
  4482  061B                     	;# 
  4483  061C                     	;# 
  4484  061D                     	;# 
  4485  061E                     	;# 
  4486  070C                     	;# 
  4487  070D                     	;# 
  4488  070E                     	;# 
  4489  070F                     	;# 
  4490  0710                     	;# 
  4491  0711                     	;# 
  4492  0712                     	;# 
  4493  0713                     	;# 
  4494  0714                     	;# 
  4495  0716                     	;# 
  4496  0717                     	;# 
  4497  0718                     	;# 
  4498  0719                     	;# 
  4499  071A                     	;# 
  4500  071B                     	;# 
  4501  071C                     	;# 
  4502  071D                     	;# 
  4503  071E                     	;# 
  4504  0796                     	;# 
  4505  0797                     	;# 
  4506  0798                     	;# 
  4507  0799                     	;# 
  4508  079A                     	;# 
  4509  079B                     	;# 
  4510  079C                     	;# 
  4511  079D                     	;# 
  4512  080C                     	;# 
  4513  080D                     	;# 
  4514  080E                     	;# 
  4515  080F                     	;# 
  4516  0810                     	;# 
  4517  0811                     	;# 
  4518  0812                     	;# 
  4519  0813                     	;# 
  4520  0814                     	;# 
  4521  081A                     	;# 
  4522  081A                     	;# 
  4523  081B                     	;# 
  4524  081C                     	;# 
  4525  081C                     	;# 
  4526  081D                     	;# 
  4527  081E                     	;# 
  4528  081F                     	;# 
  4529  088C                     	;# 
  4530  088D                     	;# 
  4531  088E                     	;# 
  4532  088F                     	;# 
  4533  0890                     	;# 
  4534  0891                     	;# 
  4535  0892                     	;# 
  4536  0893                     	;# 
  4537  0895                     	;# 
  4538  0896                     	;# 
  4539  0897                     	;# 
  4540  0898                     	;# 
  4541  0899                     	;# 
  4542  089A                     	;# 
  4543  089B                     	;# 
  4544  090C                     	;# 
  4545  090E                     	;# 
  4546  090F                     	;# 
  4547  091F                     	;# 
  4548  098F                     	;# 
  4549  098F                     	;# 
  4550  0990                     	;# 
  4551  0991                     	;# 
  4552  0992                     	;# 
  4553  0993                     	;# 
  4554  0994                     	;# 
  4555  0995                     	;# 
  4556  0996                     	;# 
  4557  0997                     	;# 
  4558  1E0F                     	;# 
  4559  1E10                     	;# 
  4560  1E11                     	;# 
  4561  1E12                     	;# 
  4562  1E13                     	;# 
  4563  1E14                     	;# 
  4564  1E15                     	;# 
  4565  1E16                     	;# 
  4566  1E17                     	;# 
  4567  1E18                     	;# 
  4568  1E19                     	;# 
  4569  1E1A                     	;# 
  4570  1E1B                     	;# 
  4571  1E1C                     	;# 
  4572  1E1D                     	;# 
  4573  1E1E                     	;# 
  4574  1E1F                     	;# 
  4575  1E20                     	;# 
  4576  1E21                     	;# 
  4577  1E22                     	;# 
  4578  1E23                     	;# 
  4579  1E24                     	;# 
  4580  1E25                     	;# 
  4581  1E26                     	;# 
  4582  1E27                     	;# 
  4583  1E28                     	;# 
  4584  1E29                     	;# 
  4585  1E2A                     	;# 
  4586  1E2B                     	;# 
  4587  1E2C                     	;# 
  4588  1E2D                     	;# 
  4589  1E2E                     	;# 
  4590  1E2F                     	;# 
  4591  1E30                     	;# 
  4592  1E31                     	;# 
  4593  1E32                     	;# 
  4594  1E33                     	;# 
  4595  1E34                     	;# 
  4596  1E35                     	;# 
  4597  1E36                     	;# 
  4598  1E37                     	;# 
  4599  1E8F                     	;# 
  4600  1E90                     	;# 
  4601  1E91                     	;# 
  4602  1E92                     	;# 
  4603  1E93                     	;# 
  4604  1E94                     	;# 
  4605  1E95                     	;# 
  4606  1E96                     	;# 
  4607  1E97                     	;# 
  4608  1E9C                     	;# 
  4609  1E9D                     	;# 
  4610  1E9E                     	;# 
  4611  1EA1                     	;# 
  4612  1EA2                     	;# 
  4613  1EA3                     	;# 
  4614  1EA4                     	;# 
  4615  1EA9                     	;# 
  4616  1EAA                     	;# 
  4617  1EB1                     	;# 
  4618  1EB2                     	;# 
  4619  1EB8                     	;# 
  4620  1EB9                     	;# 
  4621  1EBA                     	;# 
  4622  1EBB                     	;# 
  4623  1EBC                     	;# 
  4624  1EBD                     	;# 
  4625  1EBE                     	;# 
  4626  1EC3                     	;# 
  4627  1EC5                     	;# 
  4628  1EC6                     	;# 
  4629  1EC7                     	;# 
  4630  1EC8                     	;# 
  4631  1EC9                     	;# 
  4632  1ECA                     	;# 
  4633  1ECB                     	;# 
  4634  1ECB                     	;# 
  4635  1ECB                     	;# 
  4636  1ECC                     	;# 
  4637  1ECC                     	;# 
  4638  1ECC                     	;# 
  4639  1F10                     	;# 
  4640  1F11                     	;# 
  4641  1F12                     	;# 
  4642  1F14                     	;# 
  4643  1F15                     	;# 
  4644  1F1C                     	;# 
  4645  1F1D                     	;# 
  4646  1F1E                     	;# 
  4647  1F1F                     	;# 
  4648  1F20                     	;# 
  4649  1F21                     	;# 
  4650  1F22                     	;# 
  4651  1F23                     	;# 
  4652  1F24                     	;# 
  4653  1F25                     	;# 
  4654  1F26                     	;# 
  4655  1F27                     	;# 
  4656  1F38                     	;# 
  4657  1F39                     	;# 
  4658  1F3A                     	;# 
  4659  1F3B                     	;# 
  4660  1F3C                     	;# 
  4661  1F3D                     	;# 
  4662  1F3E                     	;# 
  4663  1F3F                     	;# 
  4664  1F43                     	;# 
  4665  1F44                     	;# 
  4666  1F45                     	;# 
  4667  1F46                     	;# 
  4668  1F47                     	;# 
  4669  1F48                     	;# 
  4670  1F49                     	;# 
  4671  1F4A                     	;# 
  4672  1F4E                     	;# 
  4673  1F4F                     	;# 
  4674  1F50                     	;# 
  4675  1F51                     	;# 
  4676  1F52                     	;# 
  4677  1F53                     	;# 
  4678  1F54                     	;# 
  4679  1F55                     	;# 
  4680  1FE4                     	;# 
  4681  1FE5                     	;# 
  4682  1FE6                     	;# 
  4683  1FE7                     	;# 
  4684  1FE8                     	;# 
  4685  1FE8                     	;# 
  4686  1FE9                     	;# 
  4687  1FEA                     	;# 
  4688  1FEB                     	;# 
  4689  1FED                     	;# 
  4690  1FEE                     	;# 
  4691  1FEF                     	;# 
  4692  0000                     	;# 
  4693  0001                     	;# 
  4694  0002                     	;# 
  4695  0003                     	;# 
  4696  0004                     	;# 
  4697  0005                     	;# 
  4698  0006                     	;# 
  4699  0007                     	;# 
  4700  0008                     	;# 
  4701  0009                     	;# 
  4702  000A                     	;# 
  4703  000B                     	;# 
  4704  000C                     	;# 
  4705  000D                     	;# 
  4706  000E                     	;# 
  4707  0012                     	;# 
  4708  0013                     	;# 
  4709  0014                     	;# 
  4710  0018                     	;# 
  4711  0019                     	;# 
  4712  001A                     	;# 
  4713  008C                     	;# 
  4714  008C                     	;# 
  4715  008D                     	;# 
  4716  008E                     	;# 
  4717  008E                     	;# 
  4718  008F                     	;# 
  4719  0090                     	;# 
  4720  0090                     	;# 
  4721  0091                     	;# 
  4722  0092                     	;# 
  4723  0092                     	;# 
  4724  0093                     	;# 
  4725  0094                     	;# 
  4726  0094                     	;# 
  4727  0095                     	;# 
  4728  0096                     	;# 
  4729  0096                     	;# 
  4730  0097                     	;# 
  4731  0098                     	;# 
  4732  0099                     	;# 
  4733  009A                     	;# 
  4734  009B                     	;# 
  4735  009B                     	;# 
  4736  009C                     	;# 
  4737  009D                     	;# 
  4738  009D                     	;# 
  4739  009E                     	;# 
  4740  009F                     	;# 
  4741  010C                     	;# 
  4742  010C                     	;# 
  4743  010D                     	;# 
  4744  010E                     	;# 
  4745  010F                     	;# 
  4746  010F                     	;# 
  4747  0110                     	;# 
  4748  0111                     	;# 
  4749  0112                     	;# 
  4750  0113                     	;# 
  4751  0114                     	;# 
  4752  0115                     	;# 
  4753  0116                     	;# 
  4754  0117                     	;# 
  4755  0118                     	;# 
  4756  0119                     	;# 
  4757  0119                     	;# 
  4758  0119                     	;# 
  4759  011A                     	;# 
  4760  011A                     	;# 
  4761  011A                     	;# 
  4762  011B                     	;# 
  4763  011B                     	;# 
  4764  011B                     	;# 
  4765  011B                     	;# 
  4766  011B                     	;# 
  4767  011C                     	;# 
  4768  011C                     	;# 
  4769  011C                     	;# 
  4770  011D                     	;# 
  4771  011D                     	;# 
  4772  011D                     	;# 
  4773  011E                     	;# 
  4774  011E                     	;# 
  4775  011E                     	;# 
  4776  011F                     	;# 
  4777  011F                     	;# 
  4778  011F                     	;# 
  4779  011F                     	;# 
  4780  011F                     	;# 
  4781  018C                     	;# 
  4782  018D                     	;# 
  4783  018E                     	;# 
  4784  018F                     	;# 
  4785  0190                     	;# 
  4786  0191                     	;# 
  4787  0192                     	;# 
  4788  0196                     	;# 
  4789  0197                     	;# 
  4790  0198                     	;# 
  4791  0199                     	;# 
  4792  019A                     	;# 
  4793  019B                     	;# 
  4794  019C                     	;# 
  4795  020C                     	;# 
  4796  020D                     	;# 
  4797  020E                     	;# 
  4798  020E                     	;# 
  4799  020F                     	;# 
  4800  020F                     	;# 
  4801  0210                     	;# 
  4802  0210                     	;# 
  4803  0211                     	;# 
  4804  0211                     	;# 
  4805  0212                     	;# 
  4806  0213                     	;# 
  4807  0214                     	;# 
  4808  0214                     	;# 
  4809  0215                     	;# 
  4810  0215                     	;# 
  4811  0216                     	;# 
  4812  0216                     	;# 
  4813  0217                     	;# 
  4814  0217                     	;# 
  4815  0218                     	;# 
  4816  0219                     	;# 
  4817  021A                     	;# 
  4818  021A                     	;# 
  4819  021B                     	;# 
  4820  021B                     	;# 
  4821  021C                     	;# 
  4822  021C                     	;# 
  4823  021D                     	;# 
  4824  021D                     	;# 
  4825  021E                     	;# 
  4826  021F                     	;# 
  4827  028C                     	;# 
  4828  028C                     	;# 
  4829  028D                     	;# 
  4830  028D                     	;# 
  4831  028E                     	;# 
  4832  028F                     	;# 
  4833  0290                     	;# 
  4834  0291                     	;# 
  4835  0292                     	;# 
  4836  0292                     	;# 
  4837  0293                     	;# 
  4838  0293                     	;# 
  4839  0294                     	;# 
  4840  0295                     	;# 
  4841  0296                     	;# 
  4842  0297                     	;# 
  4843  0298                     	;# 
  4844  0298                     	;# 
  4845  0299                     	;# 
  4846  0299                     	;# 
  4847  029A                     	;# 
  4848  029B                     	;# 
  4849  029C                     	;# 
  4850  029D                     	;# 
  4851  029F                     	;# 
  4852  030C                     	;# 
  4853  030C                     	;# 
  4854  030D                     	;# 
  4855  030E                     	;# 
  4856  030F                     	;# 
  4857  0310                     	;# 
  4858  0310                     	;# 
  4859  0311                     	;# 
  4860  0312                     	;# 
  4861  0313                     	;# 
  4862  0314                     	;# 
  4863  0314                     	;# 
  4864  0315                     	;# 
  4865  0316                     	;# 
  4866  0317                     	;# 
  4867  0318                     	;# 
  4868  0318                     	;# 
  4869  0319                     	;# 
  4870  031A                     	;# 
  4871  031B                     	;# 
  4872  038C                     	;# 
  4873  038C                     	;# 
  4874  038D                     	;# 
  4875  038E                     	;# 
  4876  0390                     	;# 
  4877  0390                     	;# 
  4878  0391                     	;# 
  4879  0392                     	;# 
  4880  048C                     	;# 
  4881  048C                     	;# 
  4882  048D                     	;# 
  4883  048E                     	;# 
  4884  048F                     	;# 
  4885  048F                     	;# 
  4886  0490                     	;# 
  4887  0491                     	;# 
  4888  0492                     	;# 
  4889  0492                     	;# 
  4890  0493                     	;# 
  4891  0494                     	;# 
  4892  0495                     	;# 
  4893  0495                     	;# 
  4894  0496                     	;# 
  4895  0497                     	;# 
  4896  0498                     	;# 
  4897  0499                     	;# 
  4898  049A                     	;# 
  4899  049B                     	;# 
  4900  049C                     	;# 
  4901  049D                     	;# 
  4902  058C                     	;# 
  4903  058C                     	;# 
  4904  058D                     	;# 
  4905  058E                     	;# 
  4906  058F                     	;# 
  4907  058F                     	;# 
  4908  0590                     	;# 
  4909  0591                     	;# 
  4910  0592                     	;# 
  4911  0593                     	;# 
  4912  059C                     	;# 
  4913  059C                     	;# 
  4914  059D                     	;# 
  4915  059D                     	;# 
  4916  059E                     	;# 
  4917  059F                     	;# 
  4918  060C                     	;# 
  4919  060C                     	;# 
  4920  060D                     	;# 
  4921  060D                     	;# 
  4922  060E                     	;# 
  4923  060F                     	;# 
  4924  0610                     	;# 
  4925  0611                     	;# 
  4926  0612                     	;# 
  4927  0613                     	;# 
  4928  0614                     	;# 
  4929  0616                     	;# 
  4930  0616                     	;# 
  4931  0617                     	;# 
  4932  0617                     	;# 
  4933  0618                     	;# 
  4934  0619                     	;# 
  4935  061A                     	;# 
  4936  061B                     	;# 
  4937  061C                     	;# 
  4938  061D                     	;# 
  4939  061E                     	;# 
  4940  070C                     	;# 
  4941  070D                     	;# 
  4942  070E                     	;# 
  4943  070F                     	;# 
  4944  0710                     	;# 
  4945  0711                     	;# 
  4946  0712                     	;# 
  4947  0713                     	;# 
  4948  0714                     	;# 
  4949  0716                     	;# 
  4950  0717                     	;# 
  4951  0718                     	;# 
  4952  0719                     	;# 
  4953  071A                     	;# 
  4954  071B                     	;# 
  4955  071C                     	;# 
  4956  071D                     	;# 
  4957  071E                     	;# 
  4958  0796                     	;# 
  4959  0797                     	;# 
  4960  0798                     	;# 
  4961  0799                     	;# 
  4962  079A                     	;# 
  4963  079B                     	;# 
  4964  079C                     	;# 
  4965  079D                     	;# 
  4966  080C                     	;# 
  4967  080D                     	;# 
  4968  080E                     	;# 
  4969  080F                     	;# 
  4970  0810                     	;# 
  4971  0811                     	;# 
  4972  0812                     	;# 
  4973  0813                     	;# 
  4974  0814                     	;# 
  4975  081A                     	;# 
  4976  081A                     	;# 
  4977  081B                     	;# 
  4978  081C                     	;# 
  4979  081C                     	;# 
  4980  081D                     	;# 
  4981  081E                     	;# 
  4982  081F                     	;# 
  4983  088C                     	;# 
  4984  088D                     	;# 
  4985  088E                     	;# 
  4986  088F                     	;# 
  4987  0890                     	;# 
  4988  0891                     	;# 
  4989  0892                     	;# 
  4990  0893                     	;# 
  4991  0895                     	;# 
  4992  0896                     	;# 
  4993  0897                     	;# 
  4994  0898                     	;# 
  4995  0899                     	;# 
  4996  089A                     	;# 
  4997  089B                     	;# 
  4998  090C                     	;# 
  4999  090E                     	;# 
  5000  090F                     	;# 
  5001  091F                     	;# 
  5002  098F                     	;# 
  5003  098F                     	;# 
  5004  0990                     	;# 
  5005  0991                     	;# 
  5006  0992                     	;# 
  5007  0993                     	;# 
  5008  0994                     	;# 
  5009  0995                     	;# 
  5010  0996                     	;# 
  5011  0997                     	;# 
  5012  1E0F                     	;# 
  5013  1E10                     	;# 
  5014  1E11                     	;# 
  5015  1E12                     	;# 
  5016  1E13                     	;# 
  5017  1E14                     	;# 
  5018  1E15                     	;# 
  5019  1E16                     	;# 
  5020  1E17                     	;# 
  5021  1E18                     	;# 
  5022  1E19                     	;# 
  5023  1E1A                     	;# 
  5024  1E1B                     	;# 
  5025  1E1C                     	;# 
  5026  1E1D                     	;# 
  5027  1E1E                     	;# 
  5028  1E1F                     	;# 
  5029  1E20                     	;# 
  5030  1E21                     	;# 
  5031  1E22                     	;# 
  5032  1E23                     	;# 
  5033  1E24                     	;# 
  5034  1E25                     	;# 
  5035  1E26                     	;# 
  5036  1E27                     	;# 
  5037  1E28                     	;# 
  5038  1E29                     	;# 
  5039  1E2A                     	;# 
  5040  1E2B                     	;# 
  5041  1E2C                     	;# 
  5042  1E2D                     	;# 
  5043  1E2E                     	;# 
  5044  1E2F                     	;# 
  5045  1E30                     	;# 
  5046  1E31                     	;# 
  5047  1E32                     	;# 
  5048  1E33                     	;# 
  5049  1E34                     	;# 
  5050  1E35                     	;# 
  5051  1E36                     	;# 
  5052  1E37                     	;# 
  5053  1E8F                     	;# 
  5054  1E90                     	;# 
  5055  1E91                     	;# 
  5056  1E92                     	;# 
  5057  1E93                     	;# 
  5058  1E94                     	;# 
  5059  1E95                     	;# 
  5060  1E96                     	;# 
  5061  1E97                     	;# 
  5062  1E9C                     	;# 
  5063  1E9D                     	;# 
  5064  1E9E                     	;# 
  5065  1EA1                     	;# 
  5066  1EA2                     	;# 
  5067  1EA3                     	;# 
  5068  1EA4                     	;# 
  5069  1EA9                     	;# 
  5070  1EAA                     	;# 
  5071  1EB1                     	;# 
  5072  1EB2                     	;# 
  5073  1EB8                     	;# 
  5074  1EB9                     	;# 
  5075  1EBA                     	;# 
  5076  1EBB                     	;# 
  5077  1EBC                     	;# 
  5078  1EBD                     	;# 
  5079  1EBE                     	;# 
  5080  1EC3                     	;# 
  5081  1EC5                     	;# 
  5082  1EC6                     	;# 
  5083  1EC7                     	;# 
  5084  1EC8                     	;# 
  5085  1EC9                     	;# 
  5086  1ECA                     	;# 
  5087  1ECB                     	;# 
  5088  1ECB                     	;# 
  5089  1ECB                     	;# 
  5090  1ECC                     	;# 
  5091  1ECC                     	;# 
  5092  1ECC                     	;# 
  5093  1F10                     	;# 
  5094  1F11                     	;# 
  5095  1F12                     	;# 
  5096  1F14                     	;# 
  5097  1F15                     	;# 
  5098  1F1C                     	;# 
  5099  1F1D                     	;# 
  5100  1F1E                     	;# 
  5101  1F1F                     	;# 
  5102  1F20                     	;# 
  5103  1F21                     	;# 
  5104  1F22                     	;# 
  5105  1F23                     	;# 
  5106  1F24                     	;# 
  5107  1F25                     	;# 
  5108  1F26                     	;# 
  5109  1F27                     	;# 
  5110  1F38                     	;# 
  5111  1F39                     	;# 
  5112  1F3A                     	;# 
  5113  1F3B                     	;# 
  5114  1F3C                     	;# 
  5115  1F3D                     	;# 
  5116  1F3E                     	;# 
  5117  1F3F                     	;# 
  5118  1F43                     	;# 
  5119  1F44                     	;# 
  5120  1F45                     	;# 
  5121  1F46                     	;# 
  5122  1F47                     	;# 
  5123  1F48                     	;# 
  5124  1F49                     	;# 
  5125  1F4A                     	;# 
  5126  1F4E                     	;# 
  5127  1F4F                     	;# 
  5128  1F50                     	;# 
  5129  1F51                     	;# 
  5130  1F52                     	;# 
  5131  1F53                     	;# 
  5132  1F54                     	;# 
  5133  1F55                     	;# 
  5134  1FE4                     	;# 
  5135  1FE5                     	;# 
  5136  1FE6                     	;# 
  5137  1FE7                     	;# 
  5138  1FE8                     	;# 
  5139  1FE8                     	;# 
  5140  1FE9                     	;# 
  5141  1FEA                     	;# 
  5142  1FEB                     	;# 
  5143  1FED                     	;# 
  5144  1FEE                     	;# 
  5145  1FEF                     	;# 
  5146  0000                     	;# 
  5147  0001                     	;# 
  5148  0002                     	;# 
  5149  0003                     	;# 
  5150  0004                     	;# 
  5151  0005                     	;# 
  5152  0006                     	;# 
  5153  0007                     	;# 
  5154  0008                     	;# 
  5155  0009                     	;# 
  5156  000A                     	;# 
  5157  000B                     	;# 
  5158  000C                     	;# 
  5159  000D                     	;# 
  5160  000E                     	;# 
  5161  0012                     	;# 
  5162  0013                     	;# 
  5163  0014                     	;# 
  5164  0018                     	;# 
  5165  0019                     	;# 
  5166  001A                     	;# 
  5167  008C                     	;# 
  5168  008C                     	;# 
  5169  008D                     	;# 
  5170  008E                     	;# 
  5171  008E                     	;# 
  5172  008F                     	;# 
  5173  0090                     	;# 
  5174  0090                     	;# 
  5175  0091                     	;# 
  5176  0092                     	;# 
  5177  0092                     	;# 
  5178  0093                     	;# 
  5179  0094                     	;# 
  5180  0094                     	;# 
  5181  0095                     	;# 
  5182  0096                     	;# 
  5183  0096                     	;# 
  5184  0097                     	;# 
  5185  0098                     	;# 
  5186  0099                     	;# 
  5187  009A                     	;# 
  5188  009B                     	;# 
  5189  009B                     	;# 
  5190  009C                     	;# 
  5191  009D                     	;# 
  5192  009D                     	;# 
  5193  009E                     	;# 
  5194  009F                     	;# 
  5195  010C                     	;# 
  5196  010C                     	;# 
  5197  010D                     	;# 
  5198  010E                     	;# 
  5199  010F                     	;# 
  5200  010F                     	;# 
  5201  0110                     	;# 
  5202  0111                     	;# 
  5203  0112                     	;# 
  5204  0113                     	;# 
  5205  0114                     	;# 
  5206  0115                     	;# 
  5207  0116                     	;# 
  5208  0117                     	;# 
  5209  0118                     	;# 
  5210  0119                     	;# 
  5211  0119                     	;# 
  5212  0119                     	;# 
  5213  011A                     	;# 
  5214  011A                     	;# 
  5215  011A                     	;# 
  5216  011B                     	;# 
  5217  011B                     	;# 
  5218  011B                     	;# 
  5219  011B                     	;# 
  5220  011B                     	;# 
  5221  011C                     	;# 
  5222  011C                     	;# 
  5223  011C                     	;# 
  5224  011D                     	;# 
  5225  011D                     	;# 
  5226  011D                     	;# 
  5227  011E                     	;# 
  5228  011E                     	;# 
  5229  011E                     	;# 
  5230  011F                     	;# 
  5231  011F                     	;# 
  5232  011F                     	;# 
  5233  011F                     	;# 
  5234  011F                     	;# 
  5235  018C                     	;# 
  5236  018D                     	;# 
  5237  018E                     	;# 
  5238  018F                     	;# 
  5239  0190                     	;# 
  5240  0191                     	;# 
  5241  0192                     	;# 
  5242  0196                     	;# 
  5243  0197                     	;# 
  5244  0198                     	;# 
  5245  0199                     	;# 
  5246  019A                     	;# 
  5247  019B                     	;# 
  5248  019C                     	;# 
  5249  020C                     	;# 
  5250  020D                     	;# 
  5251  020E                     	;# 
  5252  020E                     	;# 
  5253  020F                     	;# 
  5254  020F                     	;# 
  5255  0210                     	;# 
  5256  0210                     	;# 
  5257  0211                     	;# 
  5258  0211                     	;# 
  5259  0212                     	;# 
  5260  0213                     	;# 
  5261  0214                     	;# 
  5262  0214                     	;# 
  5263  0215                     	;# 
  5264  0215                     	;# 
  5265  0216                     	;# 
  5266  0216                     	;# 
  5267  0217                     	;# 
  5268  0217                     	;# 
  5269  0218                     	;# 
  5270  0219                     	;# 
  5271  021A                     	;# 
  5272  021A                     	;# 
  5273  021B                     	;# 
  5274  021B                     	;# 
  5275  021C                     	;# 
  5276  021C                     	;# 
  5277  021D                     	;# 
  5278  021D                     	;# 
  5279  021E                     	;# 
  5280  021F                     	;# 
  5281  028C                     	;# 
  5282  028C                     	;# 
  5283  028D                     	;# 
  5284  028D                     	;# 
  5285  028E                     	;# 
  5286  028F                     	;# 
  5287  0290                     	;# 
  5288  0291                     	;# 
  5289  0292                     	;# 
  5290  0292                     	;# 
  5291  0293                     	;# 
  5292  0293                     	;# 
  5293  0294                     	;# 
  5294  0295                     	;# 
  5295  0296                     	;# 
  5296  0297                     	;# 
  5297  0298                     	;# 
  5298  0298                     	;# 
  5299  0299                     	;# 
  5300  0299                     	;# 
  5301  029A                     	;# 
  5302  029B                     	;# 
  5303  029C                     	;# 
  5304  029D                     	;# 
  5305  029F                     	;# 
  5306  030C                     	;# 
  5307  030C                     	;# 
  5308  030D                     	;# 
  5309  030E                     	;# 
  5310  030F                     	;# 
  5311  0310                     	;# 
  5312  0310                     	;# 
  5313  0311                     	;# 
  5314  0312                     	;# 
  5315  0313                     	;# 
  5316  0314                     	;# 
  5317  0314                     	;# 
  5318  0315                     	;# 
  5319  0316                     	;# 
  5320  0317                     	;# 
  5321  0318                     	;# 
  5322  0318                     	;# 
  5323  0319                     	;# 
  5324  031A                     	;# 
  5325  031B                     	;# 
  5326  038C                     	;# 
  5327  038C                     	;# 
  5328  038D                     	;# 
  5329  038E                     	;# 
  5330  0390                     	;# 
  5331  0390                     	;# 
  5332  0391                     	;# 
  5333  0392                     	;# 
  5334  048C                     	;# 
  5335  048C                     	;# 
  5336  048D                     	;# 
  5337  048E                     	;# 
  5338  048F                     	;# 
  5339  048F                     	;# 
  5340  0490                     	;# 
  5341  0491                     	;# 
  5342  0492                     	;# 
  5343  0492                     	;# 
  5344  0493                     	;# 
  5345  0494                     	;# 
  5346  0495                     	;# 
  5347  0495                     	;# 
  5348  0496                     	;# 
  5349  0497                     	;# 
  5350  0498                     	;# 
  5351  0499                     	;# 
  5352  049A                     	;# 
  5353  049B                     	;# 
  5354  049C                     	;# 
  5355  049D                     	;# 
  5356  058C                     	;# 
  5357  058C                     	;# 
  5358  058D                     	;# 
  5359  058E                     	;# 
  5360  058F                     	;# 
  5361  058F                     	;# 
  5362  0590                     	;# 
  5363  0591                     	;# 
  5364  0592                     	;# 
  5365  0593                     	;# 
  5366  059C                     	;# 
  5367  059C                     	;# 
  5368  059D                     	;# 
  5369  059D                     	;# 
  5370  059E                     	;# 
  5371  059F                     	;# 
  5372  060C                     	;# 
  5373  060C                     	;# 
  5374  060D                     	;# 
  5375  060D                     	;# 
  5376  060E                     	;# 
  5377  060F                     	;# 
  5378  0610                     	;# 
  5379  0611                     	;# 
  5380  0612                     	;# 
  5381  0613                     	;# 
  5382  0614                     	;# 
  5383  0616                     	;# 
  5384  0616                     	;# 
  5385  0617                     	;# 
  5386  0617                     	;# 
  5387  0618                     	;# 
  5388  0619                     	;# 
  5389  061A                     	;# 
  5390  061B                     	;# 
  5391  061C                     	;# 
  5392  061D                     	;# 
  5393  061E                     	;# 
  5394  070C                     	;# 
  5395  070D                     	;# 
  5396  070E                     	;# 
  5397  070F                     	;# 
  5398  0710                     	;# 
  5399  0711                     	;# 
  5400  0712                     	;# 
  5401  0713                     	;# 
  5402  0714                     	;# 
  5403  0716                     	;# 
  5404  0717                     	;# 
  5405  0718                     	;# 
  5406  0719                     	;# 
  5407  071A                     	;# 
  5408  071B                     	;# 
  5409  071C                     	;# 
  5410  071D                     	;# 
  5411  071E                     	;# 
  5412  0796                     	;# 
  5413  0797                     	;# 
  5414  0798                     	;# 
  5415  0799                     	;# 
  5416  079A                     	;# 
  5417  079B                     	;# 
  5418  079C                     	;# 
  5419  079D                     	;# 
  5420  080C                     	;# 
  5421  080D                     	;# 
  5422  080E                     	;# 
  5423  080F                     	;# 
  5424  0810                     	;# 
  5425  0811                     	;# 
  5426  0812                     	;# 
  5427  0813                     	;# 
  5428  0814                     	;# 
  5429  081A                     	;# 
  5430  081A                     	;# 
  5431  081B                     	;# 
  5432  081C                     	;# 
  5433  081C                     	;# 
  5434  081D                     	;# 
  5435  081E                     	;# 
  5436  081F                     	;# 
  5437  088C                     	;# 
  5438  088D                     	;# 
  5439  088E                     	;# 
  5440  088F                     	;# 
  5441  0890                     	;# 
  5442  0891                     	;# 
  5443  0892                     	;# 
  5444  0893                     	;# 
  5445  0895                     	;# 
  5446  0896                     	;# 
  5447  0897                     	;# 
  5448  0898                     	;# 
  5449  0899                     	;# 
  5450  089A                     	;# 
  5451  089B                     	;# 
  5452  090C                     	;# 
  5453  090E                     	;# 
  5454  090F                     	;# 
  5455  091F                     	;# 
  5456  098F                     	;# 
  5457  098F                     	;# 
  5458  0990                     	;# 
  5459  0991                     	;# 
  5460  0992                     	;# 
  5461  0993                     	;# 
  5462  0994                     	;# 
  5463  0995                     	;# 
  5464  0996                     	;# 
  5465  0997                     	;# 
  5466  1E0F                     	;# 
  5467  1E10                     	;# 
  5468  1E11                     	;# 
  5469  1E12                     	;# 
  5470  1E13                     	;# 
  5471  1E14                     	;# 
  5472  1E15                     	;# 
  5473  1E16                     	;# 
  5474  1E17                     	;# 
  5475  1E18                     	;# 
  5476  1E19                     	;# 
  5477  1E1A                     	;# 
  5478  1E1B                     	;# 
  5479  1E1C                     	;# 
  5480  1E1D                     	;# 
  5481  1E1E                     	;# 
  5482  1E1F                     	;# 
  5483  1E20                     	;# 
  5484  1E21                     	;# 
  5485  1E22                     	;# 
  5486  1E23                     	;# 
  5487  1E24                     	;# 
  5488  1E25                     	;# 
  5489  1E26                     	;# 
  5490  1E27                     	;# 
  5491  1E28                     	;# 
  5492  1E29                     	;# 
  5493  1E2A                     	;# 
  5494  1E2B                     	;# 
  5495  1E2C                     	;# 
  5496  1E2D                     	;# 
  5497  1E2E                     	;# 
  5498  1E2F                     	;# 
  5499  1E30                     	;# 
  5500  1E31                     	;# 
  5501  1E32                     	;# 
  5502  1E33                     	;# 
  5503  1E34                     	;# 
  5504  1E35                     	;# 
  5505  1E36                     	;# 
  5506  1E37                     	;# 
  5507  1E8F                     	;# 
  5508  1E90                     	;# 
  5509  1E91                     	;# 
  5510  1E92                     	;# 
  5511  1E93                     	;# 
  5512  1E94                     	;# 
  5513  1E95                     	;# 
  5514  1E96                     	;# 
  5515  1E97                     	;# 
  5516  1E9C                     	;# 
  5517  1E9D                     	;# 
  5518  1E9E                     	;# 
  5519  1EA1                     	;# 
  5520  1EA2                     	;# 
  5521  1EA3                     	;# 
  5522  1EA4                     	;# 
  5523  1EA9                     	;# 
  5524  1EAA                     	;# 
  5525  1EB1                     	;# 
  5526  1EB2                     	;# 
  5527  1EB8                     	;# 
  5528  1EB9                     	;# 
  5529  1EBA                     	;# 
  5530  1EBB                     	;# 
  5531  1EBC                     	;# 
  5532  1EBD                     	;# 
  5533  1EBE                     	;# 
  5534  1EC3                     	;# 
  5535  1EC5                     	;# 
  5536  1EC6                     	;# 
  5537  1EC7                     	;# 
  5538  1EC8                     	;# 
  5539  1EC9                     	;# 
  5540  1ECA                     	;# 
  5541  1ECB                     	;# 
  5542  1ECB                     	;# 
  5543  1ECB                     	;# 
  5544  1ECC                     	;# 
  5545  1ECC                     	;# 
  5546  1ECC                     	;# 
  5547  1F10                     	;# 
  5548  1F11                     	;# 
  5549  1F12                     	;# 
  5550  1F14                     	;# 
  5551  1F15                     	;# 
  5552  1F1C                     	;# 
  5553  1F1D                     	;# 
  5554  1F1E                     	;# 
  5555  1F1F                     	;# 
  5556  1F20                     	;# 
  5557  1F21                     	;# 
  5558  1F22                     	;# 
  5559  1F23                     	;# 
  5560  1F24                     	;# 
  5561  1F25                     	;# 
  5562  1F26                     	;# 
  5563  1F27                     	;# 
  5564  1F38                     	;# 
  5565  1F39                     	;# 
  5566  1F3A                     	;# 
  5567  1F3B                     	;# 
  5568  1F3C                     	;# 
  5569  1F3D                     	;# 
  5570  1F3E                     	;# 
  5571  1F3F                     	;# 
  5572  1F43                     	;# 
  5573  1F44                     	;# 
  5574  1F45                     	;# 
  5575  1F46                     	;# 
  5576  1F47                     	;# 
  5577  1F48                     	;# 
  5578  1F49                     	;# 
  5579  1F4A                     	;# 
  5580  1F4E                     	;# 
  5581  1F4F                     	;# 
  5582  1F50                     	;# 
  5583  1F51                     	;# 
  5584  1F52                     	;# 
  5585  1F53                     	;# 
  5586  1F54                     	;# 
  5587  1F55                     	;# 
  5588  1FE4                     	;# 
  5589  1FE5                     	;# 
  5590  1FE6                     	;# 
  5591  1FE7                     	;# 
  5592  1FE8                     	;# 
  5593  1FE8                     	;# 
  5594  1FE9                     	;# 
  5595  1FEA                     	;# 
  5596  1FEB                     	;# 
  5597  1FED                     	;# 
  5598  1FEE                     	;# 
  5599  1FEF                     	;# 
  5600  0000                     	;# 
  5601  0001                     	;# 
  5602  0002                     	;# 
  5603  0003                     	;# 
  5604  0004                     	;# 
  5605  0005                     	;# 
  5606  0006                     	;# 
  5607  0007                     	;# 
  5608  0008                     	;# 
  5609  0009                     	;# 
  5610  000A                     	;# 
  5611  000B                     	;# 
  5612  000C                     	;# 
  5613  000D                     	;# 
  5614  000E                     	;# 
  5615  0012                     	;# 
  5616  0013                     	;# 
  5617  0014                     	;# 
  5618  0018                     	;# 
  5619  0019                     	;# 
  5620  001A                     	;# 
  5621  008C                     	;# 
  5622  008C                     	;# 
  5623  008D                     	;# 
  5624  008E                     	;# 
  5625  008E                     	;# 
  5626  008F                     	;# 
  5627  0090                     	;# 
  5628  0090                     	;# 
  5629  0091                     	;# 
  5630  0092                     	;# 
  5631  0092                     	;# 
  5632  0093                     	;# 
  5633  0094                     	;# 
  5634  0094                     	;# 
  5635  0095                     	;# 
  5636  0096                     	;# 
  5637  0096                     	;# 
  5638  0097                     	;# 
  5639  0098                     	;# 
  5640  0099                     	;# 
  5641  009A                     	;# 
  5642  009B                     	;# 
  5643  009B                     	;# 
  5644  009C                     	;# 
  5645  009D                     	;# 
  5646  009D                     	;# 
  5647  009E                     	;# 
  5648  009F                     	;# 
  5649  010C                     	;# 
  5650  010C                     	;# 
  5651  010D                     	;# 
  5652  010E                     	;# 
  5653  010F                     	;# 
  5654  010F                     	;# 
  5655  0110                     	;# 
  5656  0111                     	;# 
  5657  0112                     	;# 
  5658  0113                     	;# 
  5659  0114                     	;# 
  5660  0115                     	;# 
  5661  0116                     	;# 
  5662  0117                     	;# 
  5663  0118                     	;# 
  5664  0119                     	;# 
  5665  0119                     	;# 
  5666  0119                     	;# 
  5667  011A                     	;# 
  5668  011A                     	;# 
  5669  011A                     	;# 
  5670  011B                     	;# 
  5671  011B                     	;# 
  5672  011B                     	;# 
  5673  011B                     	;# 
  5674  011B                     	;# 
  5675  011C                     	;# 
  5676  011C                     	;# 
  5677  011C                     	;# 
  5678  011D                     	;# 
  5679  011D                     	;# 
  5680  011D                     	;# 
  5681  011E                     	;# 
  5682  011E                     	;# 
  5683  011E                     	;# 
  5684  011F                     	;# 
  5685  011F                     	;# 
  5686  011F                     	;# 
  5687  011F                     	;# 
  5688  011F                     	;# 
  5689  018C                     	;# 
  5690  018D                     	;# 
  5691  018E                     	;# 
  5692  018F                     	;# 
  5693  0190                     	;# 
  5694  0191                     	;# 
  5695  0192                     	;# 
  5696  0196                     	;# 
  5697  0197                     	;# 
  5698  0198                     	;# 
  5699  0199                     	;# 
  5700  019A                     	;# 
  5701  019B                     	;# 
  5702  019C                     	;# 
  5703  020C                     	;# 
  5704  020D                     	;# 
  5705  020E                     	;# 
  5706  020E                     	;# 
  5707  020F                     	;# 
  5708  020F                     	;# 
  5709  0210                     	;# 
  5710  0210                     	;# 
  5711  0211                     	;# 
  5712  0211                     	;# 
  5713  0212                     	;# 
  5714  0213                     	;# 
  5715  0214                     	;# 
  5716  0214                     	;# 
  5717  0215                     	;# 
  5718  0215                     	;# 
  5719  0216                     	;# 
  5720  0216                     	;# 
  5721  0217                     	;# 
  5722  0217                     	;# 
  5723  0218                     	;# 
  5724  0219                     	;# 
  5725  021A                     	;# 
  5726  021A                     	;# 
  5727  021B                     	;# 
  5728  021B                     	;# 
  5729  021C                     	;# 
  5730  021C                     	;# 
  5731  021D                     	;# 
  5732  021D                     	;# 
  5733  021E                     	;# 
  5734  021F                     	;# 
  5735  028C                     	;# 
  5736  028C                     	;# 
  5737  028D                     	;# 
  5738  028D                     	;# 
  5739  028E                     	;# 
  5740  028F                     	;# 
  5741  0290                     	;# 
  5742  0291                     	;# 
  5743  0292                     	;# 
  5744  0292                     	;# 
  5745  0293                     	;# 
  5746  0293                     	;# 
  5747  0294                     	;# 
  5748  0295                     	;# 
  5749  0296                     	;# 
  5750  0297                     	;# 
  5751  0298                     	;# 
  5752  0298                     	;# 
  5753  0299                     	;# 
  5754  0299                     	;# 
  5755  029A                     	;# 
  5756  029B                     	;# 
  5757  029C                     	;# 
  5758  029D                     	;# 
  5759  029F                     	;# 
  5760  030C                     	;# 
  5761  030C                     	;# 
  5762  030D                     	;# 
  5763  030E                     	;# 
  5764  030F                     	;# 
  5765  0310                     	;# 
  5766  0310                     	;# 
  5767  0311                     	;# 
  5768  0312                     	;# 
  5769  0313                     	;# 
  5770  0314                     	;# 
  5771  0314                     	;# 
  5772  0315                     	;# 
  5773  0316                     	;# 
  5774  0317                     	;# 
  5775  0318                     	;# 
  5776  0318                     	;# 
  5777  0319                     	;# 
  5778  031A                     	;# 
  5779  031B                     	;# 
  5780  038C                     	;# 
  5781  038C                     	;# 
  5782  038D                     	;# 
  5783  038E                     	;# 
  5784  0390                     	;# 
  5785  0390                     	;# 
  5786  0391                     	;# 
  5787  0392                     	;# 
  5788  048C                     	;# 
  5789  048C                     	;# 
  5790  048D                     	;# 
  5791  048E                     	;# 
  5792  048F                     	;# 
  5793  048F                     	;# 
  5794  0490                     	;# 
  5795  0491                     	;# 
  5796  0492                     	;# 
  5797  0492                     	;# 
  5798  0493                     	;# 
  5799  0494                     	;# 
  5800  0495                     	;# 
  5801  0495                     	;# 
  5802  0496                     	;# 
  5803  0497                     	;# 
  5804  0498                     	;# 
  5805  0499                     	;# 
  5806  049A                     	;# 
  5807  049B                     	;# 
  5808  049C                     	;# 
  5809  049D                     	;# 
  5810  058C                     	;# 
  5811  058C                     	;# 
  5812  058D                     	;# 
  5813  058E                     	;# 
  5814  058F                     	;# 
  5815  058F                     	;# 
  5816  0590                     	;# 
  5817  0591                     	;# 
  5818  0592                     	;# 
  5819  0593                     	;# 
  5820  059C                     	;# 
  5821  059C                     	;# 
  5822  059D                     	;# 
  5823  059D                     	;# 
  5824  059E                     	;# 
  5825  059F                     	;# 
  5826  060C                     	;# 
  5827  060C                     	;# 
  5828  060D                     	;# 
  5829  060D                     	;# 
  5830  060E                     	;# 
  5831  060F                     	;# 
  5832  0610                     	;# 
  5833  0611                     	;# 
  5834  0612                     	;# 
  5835  0613                     	;# 
  5836  0614                     	;# 
  5837  0616                     	;# 
  5838  0616                     	;# 
  5839  0617                     	;# 
  5840  0617                     	;# 
  5841  0618                     	;# 
  5842  0619                     	;# 
  5843  061A                     	;# 
  5844  061B                     	;# 
  5845  061C                     	;# 
  5846  061D                     	;# 
  5847  061E                     	;# 
  5848  070C                     	;# 
  5849  070D                     	;# 
  5850  070E                     	;# 
  5851  070F                     	;# 
  5852  0710                     	;# 
  5853  0711                     	;# 
  5854  0712                     	;# 
  5855  0713                     	;# 
  5856  0714                     	;# 
  5857  0716                     	;# 
  5858  0717                     	;# 
  5859  0718                     	;# 
  5860  0719                     	;# 
  5861  071A                     	;# 
  5862  071B                     	;# 
  5863  071C                     	;# 
  5864  071D                     	;# 
  5865  071E                     	;# 
  5866  0796                     	;# 
  5867  0797                     	;# 
  5868  0798                     	;# 
  5869  0799                     	;# 
  5870  079A                     	;# 
  5871  079B                     	;# 
  5872  079C                     	;# 
  5873  079D                     	;# 
  5874  080C                     	;# 
  5875  080D                     	;# 
  5876  080E                     	;# 
  5877  080F                     	;# 
  5878  0810                     	;# 
  5879  0811                     	;# 
  5880  0812                     	;# 
  5881  0813                     	;# 
  5882  0814                     	;# 
  5883  081A                     	;# 
  5884  081A                     	;# 
  5885  081B                     	;# 
  5886  081C                     	;# 
  5887  081C                     	;# 
  5888  081D                     	;# 
  5889  081E                     	;# 
  5890  081F                     	;# 
  5891  088C                     	;# 
  5892  088D                     	;# 
  5893  088E                     	;# 
  5894  088F                     	;# 
  5895  0890                     	;# 
  5896  0891                     	;# 
  5897  0892                     	;# 
  5898  0893                     	;# 
  5899  0895                     	;# 
  5900  0896                     	;# 
  5901  0897                     	;# 
  5902  0898                     	;# 
  5903  0899                     	;# 
  5904  089A                     	;# 
  5905  089B                     	;# 
  5906  090C                     	;# 
  5907  090E                     	;# 
  5908  090F                     	;# 
  5909  091F                     	;# 
  5910  098F                     	;# 
  5911  098F                     	;# 
  5912  0990                     	;# 
  5913  0991                     	;# 
  5914  0992                     	;# 
  5915  0993                     	;# 
  5916  0994                     	;# 
  5917  0995                     	;# 
  5918  0996                     	;# 
  5919  0997                     	;# 
  5920  1E0F                     	;# 
  5921  1E10                     	;# 
  5922  1E11                     	;# 
  5923  1E12                     	;# 
  5924  1E13                     	;# 
  5925  1E14                     	;# 
  5926  1E15                     	;# 
  5927  1E16                     	;# 
  5928  1E17                     	;# 
  5929  1E18                     	;# 
  5930  1E19                     	;# 
  5931  1E1A                     	;# 
  5932  1E1B                     	;# 
  5933  1E1C                     	;# 
  5934  1E1D                     	;# 
  5935  1E1E                     	;# 
  5936  1E1F                     	;# 
  5937  1E20                     	;# 
  5938  1E21                     	;# 
  5939  1E22                     	;# 
  5940  1E23                     	;# 
  5941  1E24                     	;# 
  5942  1E25                     	;# 
  5943  1E26                     	;# 
  5944  1E27                     	;# 
  5945  1E28                     	;# 
  5946  1E29                     	;# 
  5947  1E2A                     	;# 
  5948  1E2B                     	;# 
  5949  1E2C                     	;# 
  5950  1E2D                     	;# 
  5951  1E2E                     	;# 
  5952  1E2F                     	;# 
  5953  1E30                     	;# 
  5954  1E31                     	;# 
  5955  1E32                     	;# 
  5956  1E33                     	;# 
  5957  1E34                     	;# 
  5958  1E35                     	;# 
  5959  1E36                     	;# 
  5960  1E37                     	;# 
  5961  1E8F                     	;# 
  5962  1E90                     	;# 
  5963  1E91                     	;# 
  5964  1E92                     	;# 
  5965  1E93                     	;# 
  5966  1E94                     	;# 
  5967  1E95                     	;# 
  5968  1E96                     	;# 
  5969  1E97                     	;# 
  5970  1E9C                     	;# 
  5971  1E9D                     	;# 
  5972  1E9E                     	;# 
  5973  1EA1                     	;# 
  5974  1EA2                     	;# 
  5975  1EA3                     	;# 
  5976  1EA4                     	;# 
  5977  1EA9                     	;# 
  5978  1EAA                     	;# 
  5979  1EB1                     	;# 
  5980  1EB2                     	;# 
  5981  1EB8                     	;# 
  5982  1EB9                     	;# 
  5983  1EBA                     	;# 
  5984  1EBB                     	;# 
  5985  1EBC                     	;# 
  5986  1EBD                     	;# 
  5987  1EBE                     	;# 
  5988  1EC3                     	;# 
  5989  1EC5                     	;# 
  5990  1EC6                     	;# 
  5991  1EC7                     	;# 
  5992  1EC8                     	;# 
  5993  1EC9                     	;# 
  5994  1ECA                     	;# 
  5995  1ECB                     	;# 
  5996  1ECB                     	;# 
  5997  1ECB                     	;# 
  5998  1ECC                     	;# 
  5999  1ECC                     	;# 
  6000  1ECC                     	;# 
  6001  1F10                     	;# 
  6002  1F11                     	;# 
  6003  1F12                     	;# 
  6004  1F14                     	;# 
  6005  1F15                     	;# 
  6006  1F1C                     	;# 
  6007  1F1D                     	;# 
  6008  1F1E                     	;# 
  6009  1F1F                     	;# 
  6010  1F20                     	;# 
  6011  1F21                     	;# 
  6012  1F22                     	;# 
  6013  1F23                     	;# 
  6014  1F24                     	;# 
  6015  1F25                     	;# 
  6016  1F26                     	;# 
  6017  1F27                     	;# 
  6018  1F38                     	;# 
  6019  1F39                     	;# 
  6020  1F3A                     	;# 
  6021  1F3B                     	;# 
  6022  1F3C                     	;# 
  6023  1F3D                     	;# 
  6024  1F3E                     	;# 
  6025  1F3F                     	;# 
  6026  1F43                     	;# 
  6027  1F44                     	;# 
  6028  1F45                     	;# 
  6029  1F46                     	;# 
  6030  1F47                     	;# 
  6031  1F48                     	;# 
  6032  1F49                     	;# 
  6033  1F4A                     	;# 
  6034  1F4E                     	;# 
  6035  1F4F                     	;# 
  6036  1F50                     	;# 
  6037  1F51                     	;# 
  6038  1F52                     	;# 
  6039  1F53                     	;# 
  6040  1F54                     	;# 
  6041  1F55                     	;# 
  6042  1FE4                     	;# 
  6043  1FE5                     	;# 
  6044  1FE6                     	;# 
  6045  1FE7                     	;# 
  6046  1FE8                     	;# 
  6047  1FE8                     	;# 
  6048  1FE9                     	;# 
  6049  1FEA                     	;# 
  6050  1FEB                     	;# 
  6051  1FED                     	;# 
  6052  1FEE                     	;# 
  6053  1FEF                     	;# 
  6054  0000                     	;# 
  6055  0001                     	;# 
  6056  0002                     	;# 
  6057  0003                     	;# 
  6058  0004                     	;# 
  6059  0005                     	;# 
  6060  0006                     	;# 
  6061  0007                     	;# 
  6062  0008                     	;# 
  6063  0009                     	;# 
  6064  000A                     	;# 
  6065  000B                     	;# 
  6066  000C                     	;# 
  6067  000D                     	;# 
  6068  000E                     	;# 
  6069  0012                     	;# 
  6070  0013                     	;# 
  6071  0014                     	;# 
  6072  0018                     	;# 
  6073  0019                     	;# 
  6074  001A                     	;# 
  6075  008C                     	;# 
  6076  008C                     	;# 
  6077  008D                     	;# 
  6078  008E                     	;# 
  6079  008E                     	;# 
  6080  008F                     	;# 
  6081  0090                     	;# 
  6082  0090                     	;# 
  6083  0091                     	;# 
  6084  0092                     	;# 
  6085  0092                     	;# 
  6086  0093                     	;# 
  6087  0094                     	;# 
  6088  0094                     	;# 
  6089  0095                     	;# 
  6090  0096                     	;# 
  6091  0096                     	;# 
  6092  0097                     	;# 
  6093  0098                     	;# 
  6094  0099                     	;# 
  6095  009A                     	;# 
  6096  009B                     	;# 
  6097  009B                     	;# 
  6098  009C                     	;# 
  6099  009D                     	;# 
  6100  009D                     	;# 
  6101  009E                     	;# 
  6102  009F                     	;# 
  6103  010C                     	;# 
  6104  010C                     	;# 
  6105  010D                     	;# 
  6106  010E                     	;# 
  6107  010F                     	;# 
  6108  010F                     	;# 
  6109  0110                     	;# 
  6110  0111                     	;# 
  6111  0112                     	;# 
  6112  0113                     	;# 
  6113  0114                     	;# 
  6114  0115                     	;# 
  6115  0116                     	;# 
  6116  0117                     	;# 
  6117  0118                     	;# 
  6118  0119                     	;# 
  6119  0119                     	;# 
  6120  0119                     	;# 
  6121  011A                     	;# 
  6122  011A                     	;# 
  6123  011A                     	;# 
  6124  011B                     	;# 
  6125  011B                     	;# 
  6126  011B                     	;# 
  6127  011B                     	;# 
  6128  011B                     	;# 
  6129  011C                     	;# 
  6130  011C                     	;# 
  6131  011C                     	;# 
  6132  011D                     	;# 
  6133  011D                     	;# 
  6134  011D                     	;# 
  6135  011E                     	;# 
  6136  011E                     	;# 
  6137  011E                     	;# 
  6138  011F                     	;# 
  6139  011F                     	;# 
  6140  011F                     	;# 
  6141  011F                     	;# 
  6142  011F                     	;# 
  6143  018C                     	;# 
  6144  018D                     	;# 
  6145  018E                     	;# 
  6146  018F                     	;# 
  6147  0190                     	;# 
  6148  0191                     	;# 
  6149  0192                     	;# 
  6150  0196                     	;# 
  6151  0197                     	;# 
  6152  0198                     	;# 
  6153  0199                     	;# 
  6154  019A                     	;# 
  6155  019B                     	;# 
  6156  019C                     	;# 
  6157  020C                     	;# 
  6158  020D                     	;# 
  6159  020E                     	;# 
  6160  020E                     	;# 
  6161  020F                     	;# 
  6162  020F                     	;# 
  6163  0210                     	;# 
  6164  0210                     	;# 
  6165  0211                     	;# 
  6166  0211                     	;# 
  6167  0212                     	;# 
  6168  0213                     	;# 
  6169  0214                     	;# 
  6170  0214                     	;# 
  6171  0215                     	;# 
  6172  0215                     	;# 
  6173  0216                     	;# 
  6174  0216                     	;# 
  6175  0217                     	;# 
  6176  0217                     	;# 
  6177  0218                     	;# 
  6178  0219                     	;# 
  6179  021A                     	;# 
  6180  021A                     	;# 
  6181  021B                     	;# 
  6182  021B                     	;# 
  6183  021C                     	;# 
  6184  021C                     	;# 
  6185  021D                     	;# 
  6186  021D                     	;# 
  6187  021E                     	;# 
  6188  021F                     	;# 
  6189  028C                     	;# 
  6190  028C                     	;# 
  6191  028D                     	;# 
  6192  028D                     	;# 
  6193  028E                     	;# 
  6194  028F                     	;# 
  6195  0290                     	;# 
  6196  0291                     	;# 
  6197  0292                     	;# 
  6198  0292                     	;# 
  6199  0293                     	;# 
  6200  0293                     	;# 
  6201  0294                     	;# 
  6202  0295                     	;# 
  6203  0296                     	;# 
  6204  0297                     	;# 
  6205  0298                     	;# 
  6206  0298                     	;# 
  6207  0299                     	;# 
  6208  0299                     	;# 
  6209  029A                     	;# 
  6210  029B                     	;# 
  6211  029C                     	;# 
  6212  029D                     	;# 
  6213  029F                     	;# 
  6214  030C                     	;# 
  6215  030C                     	;# 
  6216  030D                     	;# 
  6217  030E                     	;# 
  6218  030F                     	;# 
  6219  0310                     	;# 
  6220  0310                     	;# 
  6221  0311                     	;# 
  6222  0312                     	;# 
  6223  0313                     	;# 
  6224  0314                     	;# 
  6225  0314                     	;# 
  6226  0315                     	;# 
  6227  0316                     	;# 
  6228  0317                     	;# 
  6229  0318                     	;# 
  6230  0318                     	;# 
  6231  0319                     	;# 
  6232  031A                     	;# 
  6233  031B                     	;# 
  6234  038C                     	;# 
  6235  038C                     	;# 
  6236  038D                     	;# 
  6237  038E                     	;# 
  6238  0390                     	;# 
  6239  0390                     	;# 
  6240  0391                     	;# 
  6241  0392                     	;# 
  6242  048C                     	;# 
  6243  048C                     	;# 
  6244  048D                     	;# 
  6245  048E                     	;# 
  6246  048F                     	;# 
  6247  048F                     	;# 
  6248  0490                     	;# 
  6249  0491                     	;# 
  6250  0492                     	;# 
  6251  0492                     	;# 
  6252  0493                     	;# 
  6253  0494                     	;# 
  6254  0495                     	;# 
  6255  0495                     	;# 
  6256  0496                     	;# 
  6257  0497                     	;# 
  6258  0498                     	;# 
  6259  0499                     	;# 
  6260  049A                     	;# 
  6261  049B                     	;# 
  6262  049C                     	;# 
  6263  049D                     	;# 
  6264  058C                     	;# 
  6265  058C                     	;# 
  6266  058D                     	;# 
  6267  058E                     	;# 
  6268  058F                     	;# 
  6269  058F                     	;# 
  6270  0590                     	;# 
  6271  0591                     	;# 
  6272  0592                     	;# 
  6273  0593                     	;# 
  6274  059C                     	;# 
  6275  059C                     	;# 
  6276  059D                     	;# 
  6277  059D                     	;# 
  6278  059E                     	;# 
  6279  059F                     	;# 
  6280  060C                     	;# 
  6281  060C                     	;# 
  6282  060D                     	;# 
  6283  060D                     	;# 
  6284  060E                     	;# 
  6285  060F                     	;# 
  6286  0610                     	;# 
  6287  0611                     	;# 
  6288  0612                     	;# 
  6289  0613                     	;# 
  6290  0614                     	;# 
  6291  0616                     	;# 
  6292  0616                     	;# 
  6293  0617                     	;# 
  6294  0617                     	;# 
  6295  0618                     	;# 
  6296  0619                     	;# 
  6297  061A                     	;# 
  6298  061B                     	;# 
  6299  061C                     	;# 
  6300  061D                     	;# 
  6301  061E                     	;# 
  6302  070C                     	;# 
  6303  070D                     	;# 
  6304  070E                     	;# 
  6305  070F                     	;# 
  6306  0710                     	;# 
  6307  0711                     	;# 
  6308  0712                     	;# 
  6309  0713                     	;# 
  6310  0714                     	;# 
  6311  0716                     	;# 
  6312  0717                     	;# 
  6313  0718                     	;# 
  6314  0719                     	;# 
  6315  071A                     	;# 
  6316  071B                     	;# 
  6317  071C                     	;# 
  6318  071D                     	;# 
  6319  071E                     	;# 
  6320  0796                     	;# 
  6321  0797                     	;# 
  6322  0798                     	;# 
  6323  0799                     	;# 
  6324  079A                     	;# 
  6325  079B                     	;# 
  6326  079C                     	;# 
  6327  079D                     	;# 
  6328  080C                     	;# 
  6329  080D                     	;# 
  6330  080E                     	;# 
  6331  080F                     	;# 
  6332  0810                     	;# 
  6333  0811                     	;# 
  6334  0812                     	;# 
  6335  0813                     	;# 
  6336  0814                     	;# 
  6337  081A                     	;# 
  6338  081A                     	;# 
  6339  081B                     	;# 
  6340  081C                     	;# 
  6341  081C                     	;# 
  6342  081D                     	;# 
  6343  081E                     	;# 
  6344  081F                     	;# 
  6345  088C                     	;# 
  6346  088D                     	;# 
  6347  088E                     	;# 
  6348  088F                     	;# 
  6349  0890                     	;# 
  6350  0891                     	;# 
  6351  0892                     	;# 
  6352  0893                     	;# 
  6353  0895                     	;# 
  6354  0896                     	;# 
  6355  0897                     	;# 
  6356  0898                     	;# 
  6357  0899                     	;# 
  6358  089A                     	;# 
  6359  089B                     	;# 
  6360  090C                     	;# 
  6361  090E                     	;# 
  6362  090F                     	;# 
  6363  091F                     	;# 
  6364  098F                     	;# 
  6365  098F                     	;# 
  6366  0990                     	;# 
  6367  0991                     	;# 
  6368  0992                     	;# 
  6369  0993                     	;# 
  6370  0994                     	;# 
  6371  0995                     	;# 
  6372  0996                     	;# 
  6373  0997                     	;# 
  6374  1E0F                     	;# 
  6375  1E10                     	;# 
  6376  1E11                     	;# 
  6377  1E12                     	;# 
  6378  1E13                     	;# 
  6379  1E14                     	;# 
  6380  1E15                     	;# 
  6381  1E16                     	;# 
  6382  1E17                     	;# 
  6383  1E18                     	;# 
  6384  1E19                     	;# 
  6385  1E1A                     	;# 
  6386  1E1B                     	;# 
  6387  1E1C                     	;# 
  6388  1E1D                     	;# 
  6389  1E1E                     	;# 
  6390  1E1F                     	;# 
  6391  1E20                     	;# 
  6392  1E21                     	;# 
  6393  1E22                     	;# 
  6394  1E23                     	;# 
  6395  1E24                     	;# 
  6396  1E25                     	;# 
  6397  1E26                     	;# 
  6398  1E27                     	;# 
  6399  1E28                     	;# 
  6400  1E29                     	;# 
  6401  1E2A                     	;# 
  6402  1E2B                     	;# 
  6403  1E2C                     	;# 
  6404  1E2D                     	;# 
  6405  1E2E                     	;# 
  6406  1E2F                     	;# 
  6407  1E30                     	;# 
  6408  1E31                     	;# 
  6409  1E32                     	;# 
  6410  1E33                     	;# 
  6411  1E34                     	;# 
  6412  1E35                     	;# 
  6413  1E36                     	;# 
  6414  1E37                     	;# 
  6415  1E8F                     	;# 
  6416  1E90                     	;# 
  6417  1E91                     	;# 
  6418  1E92                     	;# 
  6419  1E93                     	;# 
  6420  1E94                     	;# 
  6421  1E95                     	;# 
  6422  1E96                     	;# 
  6423  1E97                     	;# 
  6424  1E9C                     	;# 
  6425  1E9D                     	;# 
  6426  1E9E                     	;# 
  6427  1EA1                     	;# 
  6428  1EA2                     	;# 
  6429  1EA3                     	;# 
  6430  1EA4                     	;# 
  6431  1EA9                     	;# 
  6432  1EAA                     	;# 
  6433  1EB1                     	;# 
  6434  1EB2                     	;# 
  6435  1EB8                     	;# 
  6436  1EB9                     	;# 
  6437  1EBA                     	;# 
  6438  1EBB                     	;# 
  6439  1EBC                     	;# 
  6440  1EBD                     	;# 
  6441  1EBE                     	;# 
  6442  1EC3                     	;# 
  6443  1EC5                     	;# 
  6444  1EC6                     	;# 
  6445  1EC7                     	;# 
  6446  1EC8                     	;# 
  6447  1EC9                     	;# 
  6448  1ECA                     	;# 
  6449  1ECB                     	;# 
  6450  1ECB                     	;# 
  6451  1ECB                     	;# 
  6452  1ECC                     	;# 
  6453  1ECC                     	;# 
  6454  1ECC                     	;# 
  6455  1F10                     	;# 
  6456  1F11                     	;# 
  6457  1F12                     	;# 
  6458  1F14                     	;# 
  6459  1F15                     	;# 
  6460  1F1C                     	;# 
  6461  1F1D                     	;# 
  6462  1F1E                     	;# 
  6463  1F1F                     	;# 
  6464  1F20                     	;# 
  6465  1F21                     	;# 
  6466  1F22                     	;# 
  6467  1F23                     	;# 
  6468  1F24                     	;# 
  6469  1F25                     	;# 
  6470  1F26                     	;# 
  6471  1F27                     	;# 
  6472  1F38                     	;# 
  6473  1F39                     	;# 
  6474  1F3A                     	;# 
  6475  1F3B                     	;# 
  6476  1F3C                     	;# 
  6477  1F3D                     	;# 
  6478  1F3E                     	;# 
  6479  1F3F                     	;# 
  6480  1F43                     	;# 
  6481  1F44                     	;# 
  6482  1F45                     	;# 
  6483  1F46                     	;# 
  6484  1F47                     	;# 
  6485  1F48                     	;# 
  6486  1F49                     	;# 
  6487  1F4A                     	;# 
  6488  1F4E                     	;# 
  6489  1F4F                     	;# 
  6490  1F50                     	;# 
  6491  1F51                     	;# 
  6492  1F52                     	;# 
  6493  1F53                     	;# 
  6494  1F54                     	;# 
  6495  1F55                     	;# 
  6496  1FE4                     	;# 
  6497  1FE5                     	;# 
  6498  1FE6                     	;# 
  6499  1FE7                     	;# 
  6500  1FE8                     	;# 
  6501  1FE8                     	;# 
  6502  1FE9                     	;# 
  6503  1FEA                     	;# 
  6504  1FEB                     	;# 
  6505  1FED                     	;# 
  6506  1FEE                     	;# 
  6507  1FEF                     	;_dmxData
  6508                           
  6509                           	psect	idataCOMMON
  6510  0002                     __pidataCOMMON:	
  6511                           
  6512                           ;initializer for _address
  6513  0002  3401               	retlw	1
  6514  0003  3400               	retlw	0
  6515                           
  6516                           	psect	idataBANK2
  6517  1000                     __pidataBANK2:	
  6518                           
  6519                           ;initializer for _fadeAmmount
  6520  1000  3414               	retlw	20
  6521  1001  3400               	retlw	0
  6522                           
  6523                           ;initializer for _delay
  6524  1002  340A               	retlw	10
  6525  1003  3400               	retlw	0
  6526                           
  6527                           ;initializer for _threshold
  6528  1004  3490               	retlw	144
  6529  1005  3406               	retlw	6
  6530                           
  6531                           	psect	idataBANK3
  6532  1F80                     __pidataBANK3:	
  6533                           
  6534                           ;initializer for _pulseColor
  6535  1F80  3400               	retlw	0
  6536  1F81  3400               	retlw	0
  6537  1F82  3400               	retlw	0
  6538  1F83  3400               	retlw	0
  6539  1F84  3480               	retlw	128
  6540  1F85  343F               	retlw	63
  6541  1F86  3400               	retlw	0
  6542  1F87  3400               	retlw	0
  6543  1F88  3400               	retlw	0
  6544  1F89  343F               	retlw	63
  6545                           
  6546                           ;initializer for _color
  6547  1F8A  3400               	retlw	0
  6548  1F8B  3400               	retlw	0
  6549  1F8C  3400               	retlw	0
  6550  1F8D  3400               	retlw	0
  6551  1F8E  3480               	retlw	128
  6552  1F8F  343F               	retlw	63
  6553  1F90  3400               	retlw	0
  6554  1F91  3400               	retlw	0
  6555  1F92  3400               	retlw	0
  6556  1F93  343F               	retlw	63
  6557                           
  6558                           	psect	stringtext1
  6559  1800                     __pstringtext1:	
  6560  1800                     _charTable:	
  6561  1800  3400               	retlw	0
  6562  1801  3482               	retlw	130
  6563  1802  3421               	retlw	33
  6564  1803  3400               	retlw	0
  6565  1804  3400               	retlw	0
  6566  1805  3400               	retlw	0
  6567  1806  3400               	retlw	0
  6568  1807  3402               	retlw	2
  6569  1808  3439               	retlw	57
  6570  1809  340F               	retlw	15
  6571  180A  3400               	retlw	0
  6572  180B  3400               	retlw	0
  6573  180C  3400               	retlw	0
  6574  180D  3440               	retlw	64
  6575  180E  3480               	retlw	128
  6576  180F  3400               	retlw	0
  6577  1810  343F               	retlw	63
  6578  1811  3406               	retlw	6
  6579  1812  345B               	retlw	91
  6580  1813  344F               	retlw	79
  6581  1814  3466               	retlw	102
  6582  1815  346D               	retlw	109
  6583  1816  347D               	retlw	125
  6584  1817  3407               	retlw	7
  6585  1818  347F               	retlw	127
  6586  1819  346F               	retlw	111
  6587  181A  3400               	retlw	0
  6588  181B  3400               	retlw	0
  6589  181C  3400               	retlw	0
  6590  181D  3448               	retlw	72
  6591  181E  3400               	retlw	0
  6592  181F  3453               	retlw	83
  6593  1820  3400               	retlw	0
  6594  1821  3477               	retlw	119
  6595  1822  347C               	retlw	124
  6596  1823  3439               	retlw	57
  6597  1824  345E               	retlw	94
  6598  1825  3479               	retlw	121
  6599  1826  3471               	retlw	113
  6600  1827  346F               	retlw	111
  6601  1828  3476               	retlw	118
  6602  1829  3406               	retlw	6
  6603  182A  341E               	retlw	30
  6604  182B  3400               	retlw	0
  6605  182C  3438               	retlw	56
  6606  182D  3400               	retlw	0
  6607  182E  3454               	retlw	84
  6608  182F  343F               	retlw	63
  6609  1830  3473               	retlw	115
  6610  1831  3467               	retlw	103
  6611  1832  3450               	retlw	80
  6612  1833  346D               	retlw	109
  6613  1834  3478               	retlw	120
  6614  1835  343E               	retlw	62
  6615  1836  3400               	retlw	0
  6616  1837  3400               	retlw	0
  6617  1838  3400               	retlw	0
  6618  1839  346E               	retlw	110
  6619  183A  3400               	retlw	0
  6620  183B  3439               	retlw	57
  6621  183C  3400               	retlw	0
  6622  183D  340F               	retlw	15
  6623  183E  3400               	retlw	0
  6624  183F  3408               	retlw	8
  6625  1840  3463               	retlw	99
  6626  1841  345F               	retlw	95
  6627  1842  347C               	retlw	124
  6628  1843  3458               	retlw	88
  6629  1844  345E               	retlw	94
  6630  1845  347B               	retlw	123
  6631  1846  3471               	retlw	113
  6632  1847  346F               	retlw	111
  6633  1848  3474               	retlw	116
  6634  1849  3402               	retlw	2
  6635  184A  341E               	retlw	30
  6636  184B  3400               	retlw	0
  6637  184C  3406               	retlw	6
  6638  184D  3400               	retlw	0
  6639  184E  3454               	retlw	84
  6640  184F  345C               	retlw	92
  6641  1850  3473               	retlw	115
  6642  1851  3467               	retlw	103
  6643  1852  3450               	retlw	80
  6644  1853  346D               	retlw	109
  6645  1854  3478               	retlw	120
  6646  1855  341C               	retlw	28
  6647  1856  3400               	retlw	0
  6648  1857  3400               	retlw	0
  6649  1858  3400               	retlw	0
  6650  1859  346E               	retlw	110
  6651  185A  3400               	retlw	0
  6652  185B  3439               	retlw	57
  6653  185C  3430               	retlw	48
  6654  185D  340F               	retlw	15
  6655  185E  3400               	retlw	0
  6656  185F  3400               	retlw	0
  6657  1860                     __end_of_charTable:	
  6658                           
  6659                           	psect	nvBANK2
  6660  016A                     __pnvBANK2:	
  6661  016A                     _ADCC_ADTI_InterruptHandler:	
  6662  016A                     	ds	2
  6663  016C                     _TMR0_InterruptHandler:	
  6664  016C                     	ds	2
  6665  016E                     _eusart1TxBufferRemaining:	
  6666  016E                     	ds	1
  6667                           
  6668                           	psect	nvBANK3
  6669  01DA                     __pnvBANK3:	
  6670  01DA                     _EUSART1_ErrorHandler:	
  6671  01DA                     	ds	2
  6672  01DC                     _EUSART1_OverrunErrorHandler:	
  6673  01DC                     	ds	2
  6674  01DE                     _EUSART1_FramingErrorHandler:	
  6675  01DE                     	ds	2
  6676  01E0                     _EUSART1_RxDefaultInterruptHandler:	
  6677  01E0                     	ds	2
  6678  01E2                     _EUSART1_TxDefaultInterruptHandler:	
  6679  01E2                     	ds	2
  6680  000B                     _INTCONbits	set	11
  6681  0014                     _TRISC	set	20
  6682  0013                     _TRISB	set	19
  6683  0012                     _TRISA	set	18
  6684  001A                     _LATC	set	26
  6685  0019                     _LATB	set	25
  6686  0018                     _LATA	set	24
  6687  000C                     _PORTA	set	12
  6688  000E                     _PORTC	set	14
  6689  00A3                     _TRISC3	set	163
  6690  00A4                     _TRISC4	set	164
  6691  00A6                     _TRISC6	set	166
  6692  00A7                     _TRISC7	set	167
  6693  00CE                     _LATB6	set	206
  6694  009E                     _TRISB6	set	158
  6695  0090                     _ADERRL	set	144
  6696  0091                     _ADERRH	set	145
  6697  009B                     _ADPREVL	set	155
  6698  009C                     _ADPREVH	set	156
  6699  0094                     _ADFLTRL	set	148
  6700  0095                     _ADFLTRH	set	149
  6701  0096                     _ADACCL	set	150
  6702  0097                     _ADACCH	set	151
  6703  0099                     _ADCNT	set	153
  6704  009D                     _ADRESL	set	157
  6705  009E                     _ADRESH	set	158
  6706  009F                     _ADPCH	set	159
  6707  009A                     _ADRPT	set	154
  6708  0098                     _ADACCU	set	152
  6709  0093                     _ADSTPTH	set	147
  6710  0092                     _ADSTPTL	set	146
  6711  008F                     _ADUTHH	set	143
  6712  008E                     _ADUTHL	set	142
  6713  008D                     _ADLTHH	set	141
  6714  008C                     _ADLTHL	set	140
  6715  011A                     _TXREG	set	282
  6716  0112                     _ADCON1bits	set	274
  6717  0115                     _ADSTATbits	set	277
  6718  0113                     _ADCON2bits	set	275
  6719  0114                     _ADCON3bits	set	276
  6720  0111                     _ADCON0bits	set	273
  6721  0111                     _ADCON0	set	273
  6722  0118                     _ADCLK	set	280
  6723  0117                     _ADACT	set	279
  6724  0116                     _ADREF	set	278
  6725  0115                     _ADSTAT	set	277
  6726  0114                     _ADCON3	set	276
  6727  0113                     _ADCON2	set	275
  6728  0112                     _ADCON1	set	274
  6729  0110                     _ADPREH	set	272
  6730  010F                     _ADPREL	set	271
  6731  010E                     _ADCAP	set	270
  6732  010D                     _ADACQH	set	269
  6733  010C                     _ADACQL	set	268
  6734  0119                     _RC1REG	set	281
  6735  011D                     _RC1STAbits	set	285
  6736  011A                     _TX1REG	set	282
  6737  011E                     _TX1STAbits	set	286
  6738  011C                     _SP1BRGH	set	284
  6739  011B                     _SP1BRGL	set	283
  6740  011E                     _TX1STA	set	286
  6741  011D                     _RC1STA	set	285
  6742  011F                     _BAUD1CON	set	287
  6743  018C                     _SSP1BUF	set	396
  6744  0191                     _SSP1CON2bits	set	401
  6745  0190                     _SSP1CON1bits	set	400
  6746  018D                     _SSP1ADD	set	397
  6747  0192                     _SSP1CON3	set	402
  6748  0190                     _SSP1CON1	set	400
  6749  018F                     _SSP1STAT	set	399
  6750  028E                     _T2CONbits	set	654
  6751  0290                     _T2CLKCON	set	656
  6752  0318                     _CCPR4L	set	792
  6753  0319                     _CCPR4H	set	793
  6754  0314                     _CCPR3L	set	788
  6755  0315                     _CCPR3H	set	789
  6756  0310                     _CCPR2L	set	784
  6757  0311                     _CCPR2H	set	785
  6758  030C                     _CCPR1L	set	780
  6759  030D                     _CCPR1H	set	781
  6760  031A                     _CCP4CONbits	set	794
  6761  0316                     _CCP3CONbits	set	790
  6762  0312                     _CCP2CONbits	set	786
  6763  030E                     _CCP1CONbits	set	782
  6764  059E                     _T0CON0bits	set	1438
  6765  059E                     _T0CON0	set	1438
  6766  059C                     _TMR0L	set	1436
  6767  059D                     _TMR0H	set	1437
  6768  059F                     _T0CON1	set	1439
  6769  070D                     _PIR1bits	set	1805
  6770  0717                     _PIE1bits	set	1815
  6771  070F                     _PIR3bits	set	1807
  6772  070C                     _PIR0bits	set	1804
  6773  0716                     _PIE0bits	set	1814
  6774  0719                     _PIE3bits	set	1817
  6775  079D                     _PMD7	set	1949
  6776  079C                     _PMD6	set	1948
  6777  079B                     _PMD5	set	1947
  6778  079A                     _PMD4	set	1946
  6779  0799                     _PMD3	set	1945
  6780  0798                     _PMD2	set	1944
  6781  0797                     _PMD1	set	1943
  6782  0796                     _PMD0	set	1942
  6783  0892                     _OSCTUNE	set	2194
  6784  0893                     _OSCFRQ	set	2195
  6785  0891                     _OSCEN	set	2193
  6786  088F                     _OSCCON3	set	2191
  6787  088D                     _OSCCON1	set	2189
  6788  1ECB                     _RX1DTPPS	set	7883
  6789  1EC6                     _SSP1DATPPS	set	7878
  6790  1EC5                     _SSP1CLKPPS	set	7877
  6791  1F23                     _RC3PPS	set	7971
  6792  1F24                     _RC4PPS	set	7972
  6793  1F26                     _RC6PPS	set	7974
  6794  1F27                     _RC7PPS	set	7975
  6795  1F15                     _RA5PPS	set	7957
  6796  1F14                     _RA4PPS	set	7956
  6797  1F51                     _SLRCONC	set	8017
  6798  1F46                     _SLRCONB	set	8006
  6799  1F3B                     _SLRCONA	set	7995
  6800  1F50                     _ODCONC	set	8016
  6801  1F45                     _ODCONB	set	8005
  6802  1F3A                     _ODCONA	set	7994
  6803  1F4F                     _WPUC	set	8015
  6804  1F39                     _WPUA	set	7993
  6805  1F44                     _WPUB	set	8004
  6806  1F38                     _ANSELA	set	7992
  6807  1F43                     _ANSELB	set	8003
  6808  1F4E                     _ANSELC	set	8014
  6809                           
  6810                           ; #config settings
  6811  0000                     
  6812                           	psect	cinit
  6813  003B                     start_initialization:	
  6814  003B                     __initialization:		;BIGRAM
  6815                           
  6816                           ; Initialize objects allocated to COMMON
  6817  003B  3180  2002  3180   	fcall	__pidataCOMMON	;fetch initializer
  6818  003E  00FA               	movwf	__pdataCOMMON& (0+127)
  6819  003F  3180  2003  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  6820  0042  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  6821                           
  6822                           ; Initialize objects allocated to BANK2
  6823  0043  3000               	movlw	low __pidataBANK2
  6824  0044  0084               	movwf	4
  6825  0045  3090               	movlw	(high __pidataBANK2)| (0+128)
  6826  0046  0085               	movwf	5
  6827  0047  3064               	movlw	low __pdataBANK2
  6828  0048  0086               	movwf	6
  6829  0049  3001               	movlw	high __pdataBANK2
  6830  004A  0087               	movwf	7
  6831  004B  3000               	movlw	0
  6832  004C  00FF               	movwf	btemp+1
  6833  004D  3006               	movlw	6
  6834  004E  319F  274C  3180   	fcall	init_ram
  6835                           
  6836                           ; Initialize objects allocated to BANK3
  6837  0051  3080               	movlw	low __pidataBANK3
  6838  0052  0084               	movwf	4
  6839  0053  309F               	movlw	(high __pidataBANK3)| (0+128)
  6840  0054  0085               	movwf	5
  6841  0055  30C6               	movlw	low __pdataBANK3
  6842  0056  0086               	movwf	6
  6843  0057  3001               	movlw	high __pdataBANK3
  6844  0058  0087               	movwf	7
  6845  0059  3000               	movlw	0
  6846  005A  00FF               	movwf	btemp+1
  6847  005B  3014               	movlw	20
  6848  005C  319F  274C  3180   	fcall	init_ram
  6849                           
  6850                           ; Clear objects allocated to BIGRAM
  6851  005F  30EF               	movlw	low (0+9711)
  6852  0060  0084               	movwf	4
  6853  0061  3025               	movlw	high (0+9711)
  6854  0062  0085               	movwf	5
  6855  0063  3001               	movlw	1
  6856  0064  00FE               	movwf	btemp
  6857  0065  3002               	movlw	2
  6858  0066  00FF               	movwf	btemp+1
  6859  0067  319F  2740  3180   	fcall	clear_ram0
  6860                           
  6861                           ; Clear objects allocated to COMMON
  6862  006A  01F6               	clrf	__pbssCOMMON& (0+127)
  6863  006B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  6864  006C  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  6865  006D  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  6866                           
  6867                           ; Clear objects allocated to BANK1
  6868  006E  0141               	movlb	1	; select bank1
  6869  006F  01E9               	clrf	__pbssBANK1& (0+127)
  6870  0070  01EA               	clrf	(__pbssBANK1+1)& (0+127)
  6871  0071  01EB               	clrf	(__pbssBANK1+2)& (0+127)
  6872  0072  01EC               	clrf	(__pbssBANK1+3)& (0+127)
  6873  0073  01ED               	clrf	(__pbssBANK1+4)& (0+127)
  6874  0074  01EE               	clrf	(__pbssBANK1+5)& (0+127)
  6875  0075  01EF               	clrf	(__pbssBANK1+6)& (0+127)
  6876                           
  6877                           ; Clear objects allocated to BANK2
  6878  0076  3020               	movlw	low __pbssBANK2
  6879  0077  0084               	movwf	4
  6880  0078  3001               	movlw	high __pbssBANK2
  6881  0079  0085               	movwf	5
  6882  007A  3044               	movlw	68
  6883  007B  00FE               	movwf	btemp
  6884  007C  3000               	movlw	0
  6885  007D  00FF               	movwf	btemp+1
  6886  007E  319F  2740  3180   	fcall	clear_ram0
  6887                           
  6888                           ; Clear objects allocated to BANK3
  6889  0081  30A0               	movlw	low __pbssBANK3
  6890  0082  0084               	movwf	4
  6891  0083  3001               	movlw	high __pbssBANK3
  6892  0084  0085               	movwf	5
  6893  0085  3026               	movlw	38
  6894  0086  00FE               	movwf	btemp
  6895  0087  3000               	movlw	0
  6896  0088  00FF               	movwf	btemp+1
  6897  0089  319F  2740  3180   	fcall	clear_ram0
  6898                           
  6899                           ; Clear objects allocated to BANK4
  6900  008C  3020               	movlw	low __pbssBANK4
  6901  008D  0084               	movwf	4
  6902  008E  3002               	movlw	high __pbssBANK4
  6903  008F  0085               	movwf	5
  6904  0090  3020               	movlw	32
  6905  0091  00FE               	movwf	btemp
  6906  0092  3000               	movlw	0
  6907  0093  00FF               	movwf	btemp+1
  6908  0094  319F  2740         	fcall	clear_ram0
  6909  0096                     end_of_initialization:	
  6910                           ;End of C runtime variable initialization code
  6911                           
  6912  0096                     __end_of__initialization:	
  6913  0096  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6914  0097  0140               	movlb	0
  6915  0098  3192  2AA0         	ljmp	_main	;jump to C main() function
  6916                           
  6917                           	psect	bssCOMMON
  6918  0076                     __pbssCOMMON:	
  6919  0076                     _eusart1RxTail:	
  6920  0076                     	ds	1
  6921  0077                     _eusart1RxHead:	
  6922  0077                     	ds	1
  6923  0078                     I2C1_ISR@i2c_address:	
  6924  0078                     	ds	2
  6925                           
  6926                           	psect	dataCOMMON
  6927  007A                     __pdataCOMMON:	
  6928  007A                     _address:	
  6929  007A                     	ds	2
  6930                           
  6931                           	psect	bssBANK1
  6932  00E9                     __pbssBANK1:	
  6933  00E9                     _thresholdExceeded:	
  6934  00E9                     	ds	1
  6935  00EA                     _p_i2c1_current:	
  6936  00EA                     	ds	1
  6937  00EB                     _p_i2c1_trb_current:	
  6938  00EB                     	ds	1
  6939  00EC                     _i2c1_state:	
  6940  00EC                     	ds	1
  6941  00ED                     _eusart1RxCount:	
  6942  00ED                     	ds	1
  6943  00EE                     _eusart1TxTail:	
  6944  00EE                     	ds	1
  6945  00EF                     _eusart1TxHead:	
  6946  00EF                     	ds	1
  6947                           
  6948                           	psect	bssBANK2
  6949  0120                     __pbssBANK2:	
  6950  0120                     _i2c1_object:	
  6951  0120                     	ds	5
  6952  0125                     _fadeTime:	
  6953  0125                     	ds	4
  6954  0129                     controller@lastTime:	
  6955  0129                     	ds	2
  6956  012B                     _lastActiveTime:	
  6957  012B                     	ds	2
  6958  012D                     menu@lastTime:	
  6959  012D                     	ds	2
  6960  012F                     _hueValPulse:	
  6961  012F                     	ds	2
  6962  0131                     _lastTimePulse:	
  6963  0131                     	ds	2
  6964  0133                     _hueValCycle:	
  6965  0133                     	ds	2
  6966  0135                     _lastTimeCycle:	
  6967  0135                     	ds	2
  6968  0137                     _currentState:	
  6969  0137                     	ds	2
  6970  0139                     led@lastTime:	
  6971  0139                     	ds	2
  6972  013B                     dmx@lastTime:	
  6973  013B                     	ds	2
  6974  013D                     _dmxPointer:	
  6975  013D                     	ds	2
  6976  013F                     _thresholdCount:	
  6977  013F                     	ds	2
  6978  0141                     _lastRun:	
  6979  0141                     	ds	2
  6980  0143                     _bpm:	
  6981  0143                     	ds	2
  6982  0145                     _lastBeat:	
  6983  0145                     	ds	2
  6984  0147                     _lastTime:	
  6985  0147                     	ds	2
  6986  0149                     _count:	
  6987  0149                     	ds	2
  6988  014B                     _currentTime:	
  6989  014B                     	ds	2
  6990  014D                     _changeColor:	
  6991  014D                     	ds	1
  6992  014E                     _toggleCheck:	
  6993  014E                     	ds	1
  6994  014F                     _dmxOn:	
  6995  014F                     	ds	1
  6996  0150                     _offCheck:	
  6997  0150                     	ds	1
  6998  0151                     _lastDetected:	
  6999  0151                     	ds	1
  7000  0152                     _detected:	
  7001  0152                     	ds	1
  7002  0153                     _menu:	
  7003  0153                     	ds	1
  7004  0154                     _enter:	
  7005  0154                     	ds	1
  7006  0155                     _down:	
  7007  0155                     	ds	1
  7008  0156                     _up:	
  7009  0156                     	ds	1
  7010  0157                     _isOn:	
  7011  0157                     	ds	1
  7012  0158                     I2C1_ISR@i2c_10bit_address_restart:	
  7013  0158                     	ds	1
  7014  0159                     I2C1_ISR@i2c_bytes_left:	
  7015  0159                     	ds	1
  7016  015A                     I2C1_ISR@pi2c_buf_ptr:	
  7017  015A                     	ds	1
  7018  015B                     _i2c1_trb_count:	
  7019  015B                     	ds	1
  7020  015C                     _eusart1RxLastError:	
  7021  015C                     	ds	1
  7022  015D                     I2C1_MasterWrite@trBlock:	
  7023  015D                     	ds	4
  7024  0161                     _i2c1_tr_queue:	
  7025  0161                     	ds	3
  7026                           
  7027                           	psect	dataBANK2
  7028  0164                     __pdataBANK2:	
  7029  0164                     _fadeAmmount:	
  7030  0164                     	ds	2
  7031  0166                     _delay:	
  7032  0166                     	ds	2
  7033  0168                     _threshold:	
  7034  0168                     	ds	2
  7035                           
  7036                           	psect	bssBANK3
  7037  01A0                     __pbssBANK3:	
  7038  01A0                     cycleColors@F104:	
  7039  01A0                     	ds	10
  7040  01AA                     _eusart1RxStatusBuffer:	
  7041  01AA                     	ds	8
  7042  01B2                     _eusart1RxBuffer:	
  7043  01B2                     	ds	8
  7044  01BA                     _eusart1TxBuffer:	
  7045  01BA                     	ds	8
  7046  01C2                     I2C1_MasterRead@trBlock:	
  7047  01C2                     	ds	4
  7048                           
  7049                           	psect	dataBANK3
  7050  01C6                     __pdataBANK3:	
  7051  01C6                     _pulseColor:	
  7052  01C6                     	ds	10
  7053  01D0                     _color:	
  7054  01D0                     	ds	10
  7055                           
  7056                           	psect	bssBANK4
  7057  0220                     __pbssBANK4:	
  7058  0220                     _buttons:	
  7059  0220                     	ds	32
  7060                           
  7061                           	psect	inittext
  7062  1F4C                     init_ram:	
  7063  1F4C  00FE               	movwf	126
  7064  1F4D                     initloop:	
  7065  1F4D  0012               	moviw fsr0++
  7066  1F4E  001E               	movwi fsr1++
  7067  1F4F  3001               	movlw	1
  7068  1F50  02FE               	subwf	126,f
  7069  1F51  3000               	movlw	0
  7070  1F52  3BFF               	subwfb	127,f
  7071  1F53  087F               	movf	127,w
  7072  1F54  047E               	iorwf	126,w
  7073  1F55  1903               	btfsc	3,2
  7074  1F56  3400               	retlw	0
  7075  1F57  2F4D               	goto	initloop
  7076                           
  7077                           	psect	clrtext
  7078  1F40                     clear_ram0:	
  7079                           ;	Called with FSR0 containing the base address, and
  7080                           ;	btemp/btemp+1 has the size to clear
  7081                           
  7082  1F40  0064               	clrwdt	;clear the watchdog before getting into this loop
  7083  1F41                     clrloop0:	
  7084  1F41  0180               	clrf	0	;clear RAM location pointed to by FSR
  7085  1F42  3101               	addfsr 0,1
  7086  1F43  3001               	movlw	1
  7087  1F44  02FE               	subwf	126,f
  7088  1F45  3000               	movlw	0
  7089  1F46  3BFF               	subwfb	127,f
  7090  1F47  087F               	movf	127,w
  7091  1F48  047E               	iorwf	126,w
  7092  1F49  1903               	btfsc	3,2
  7093  1F4A  3400               	retlw	0	;all done for this memory range, return
  7094  1F4B  2F41               	goto	clrloop0	;have we reached the end yet?
  7095                           
  7096                           	psect	cstackBANK3
  7097  01E4                     __pcstackBANK3:	
  7098  01E4                     ??_main:	
  7099                           
  7100                           ; 1 bytes @ 0x0
  7101  01E4                     	ds	2
  7102                           
  7103                           	psect	cstackBANK1
  7104  00A0                     __pcstackBANK1:	
  7105  00A0                     _HueToRGB$2853:	
  7106                           
  7107                           ; 4 bytes @ 0x0
  7108  00A0                     	ds	4
  7109  00A4                     ?___fltol:	
  7110  00A4                     ___fltol@f1:	
  7111                           ; 4 bytes @ 0x4
  7112                           
  7113                           
  7114                           ; 4 bytes @ 0x4
  7115  00A4                     	ds	4
  7116  00A8                     ??___fltol:	
  7117                           
  7118                           ; 1 bytes @ 0x8
  7119  00A8                     	ds	5
  7120  00AD                     ___fltol@sign1:	
  7121                           
  7122                           ; 1 bytes @ 0xD
  7123  00AD                     	ds	1
  7124  00AE                     ___fltol@exp1:	
  7125                           
  7126                           ; 1 bytes @ 0xE
  7127  00AE                     	ds	1
  7128  00AF                     ?_LED_setHSL:	
  7129  00AF                     LED_setHSL@hsl:	
  7130                           ; 1 bytes @ 0xF
  7131                           
  7132                           
  7133                           ; 10 bytes @ 0xF
  7134  00AF                     	ds	10
  7135  00B9                     ??_LED_setHSL:	
  7136                           
  7137                           ; 1 bytes @ 0x19
  7138  00B9                     	ds	2
  7139  00BB                     _LED_setHSL$2854:	
  7140                           
  7141                           ; 4 bytes @ 0x1B
  7142  00BB                     	ds	4
  7143  00BF                     _LED_setHSL$2857:	
  7144                           
  7145                           ; 4 bytes @ 0x1F
  7146  00BF                     	ds	4
  7147  00C3                     _LED_setHSL$2855:	
  7148                           
  7149                           ; 4 bytes @ 0x23
  7150  00C3                     	ds	4
  7151  00C7                     _LED_setHSL$2856:	
  7152                           
  7153                           ; 4 bytes @ 0x27
  7154  00C7                     	ds	4
  7155  00CB                     LED_setHSL@v1:	
  7156                           
  7157                           ; 4 bytes @ 0x2B
  7158  00CB                     	ds	4
  7159  00CF                     LED_setHSL@hue:	
  7160                           
  7161                           ; 4 bytes @ 0x2F
  7162  00CF                     	ds	4
  7163  00D3                     LED_setHSL@v2:	
  7164                           
  7165                           ; 4 bytes @ 0x33
  7166  00D3                     	ds	4
  7167  00D7                     LED_setHSL@rgb:	
  7168                           
  7169                           ; 3 bytes @ 0x37
  7170  00D7                     	ds	3
  7171  00DA                     ??_fadeColor:	
  7172  00DA                     ??_cycleColors:	
  7173                           ; 1 bytes @ 0x3A
  7174                           
  7175                           
  7176                           ; 1 bytes @ 0x3A
  7177  00DA                     	ds	2
  7178  00DC                     fadeColor@time:	
  7179  00DC                     cycleColors@time:	
  7180                           ; 2 bytes @ 0x3C
  7181                           
  7182                           
  7183                           ; 2 bytes @ 0x3C
  7184  00DC                     	ds	2
  7185  00DE                     cycleColors@color:	
  7186                           
  7187                           ; 10 bytes @ 0x3E
  7188  00DE                     	ds	10
  7189  00E8                     ??_MENU_task:	
  7190                           
  7191                           ; 1 bytes @ 0x48
  7192  00E8                     	ds	1
  7193                           
  7194                           	psect	cstackCOMMON
  7195  0070                     __pcstackCOMMON:	
  7196  0070                     ?_EUSART1_Receive_ISR:	
  7197  0070                     ?_EUSART1_Transmit_ISR:	
  7198                           ; 1 bytes @ 0x0
  7199                           
  7200  0070                     ??_EUSART1_Transmit_ISR:	
  7201                           ; 1 bytes @ 0x0
  7202                           
  7203  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
  7204                           ; 1 bytes @ 0x0
  7205                           
  7206  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
  7207                           ; 1 bytes @ 0x0
  7208                           
  7209  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7210                           ; 1 bytes @ 0x0
  7211                           
  7212  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7213                           ; 1 bytes @ 0x0
  7214                           
  7215  0070                     ?_EUSART1_DefaultErrorHandler:	
  7216                           ; 1 bytes @ 0x0
  7217                           
  7218  0070                     ?_EUSART1_RxDataHandler:	
  7219                           ; 1 bytes @ 0x0
  7220                           
  7221  0070                     ??_EUSART1_RxDataHandler:	
  7222                           ; 1 bytes @ 0x0
  7223                           
  7224  0070                     ?_PMD_Initialize:	
  7225                           ; 1 bytes @ 0x0
  7226                           
  7227  0070                     ?_PIN_MANAGER_Initialize:	
  7228                           ; 1 bytes @ 0x0
  7229                           
  7230  0070                     ?_OSCILLATOR_Initialize:	
  7231                           ; 1 bytes @ 0x0
  7232                           
  7233  0070                     ?_I2C1_Initialize:	
  7234                           ; 1 bytes @ 0x0
  7235                           
  7236  0070                     ?_ADCC_Initialize:	
  7237                           ; 1 bytes @ 0x0
  7238                           
  7239  0070                     ?_TMR0_Initialize:	
  7240                           ; 1 bytes @ 0x0
  7241                           
  7242  0070                     ?_TMR0_ISR:	
  7243                           ; 1 bytes @ 0x0
  7244                           
  7245  0070                     ??_TMR0_ISR:	
  7246                           ; 1 bytes @ 0x0
  7247                           
  7248  0070                     ?_I2C1_BusCollisionISR:	
  7249                           ; 1 bytes @ 0x0
  7250                           
  7251  0070                     ??_I2C1_BusCollisionISR:	
  7252                           ; 1 bytes @ 0x0
  7253                           
  7254  0070                     ?_I2C1_ISR:	
  7255                           ; 1 bytes @ 0x0
  7256                           
  7257  0070                     ?_ADCC_ThresholdISR:	
  7258                           ; 1 bytes @ 0x0
  7259                           
  7260  0070                     ??_ADCC_ThresholdISR:	
  7261                           ; 1 bytes @ 0x0
  7262                           
  7263  0070                     ?_TMR0_DefaultInterruptHandler:	
  7264                           ; 1 bytes @ 0x0
  7265                           
  7266  0070                     ??_TMR0_DefaultInterruptHandler:	
  7267                           ; 1 bytes @ 0x0
  7268                           
  7269  0070                     ?_I2C1_Stop:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272  0070                     ??_I2C1_Stop:	
  7273                           ; 1 bytes @ 0x0
  7274                           
  7275  0070                     ?_I2C1_FunctionComplete:	
  7276                           ; 1 bytes @ 0x0
  7277                           
  7278  0070                     ??_I2C1_FunctionComplete:	
  7279                           ; 1 bytes @ 0x0
  7280                           
  7281  0070                     ?_ADCC_DefaultInterruptHandler:	
  7282                           ; 1 bytes @ 0x0
  7283                           
  7284  0070                     ??_ADCC_DefaultInterruptHandler:	
  7285                           ; 1 bytes @ 0x0
  7286                           
  7287  0070                     ?_CLOCK_init:	
  7288                           ; 1 bytes @ 0x0
  7289                           
  7290  0070                     ?_DMX_ISR:	
  7291                           ; 1 bytes @ 0x0
  7292                           
  7293  0070                     ??_DMX_ISR:	
  7294                           ; 1 bytes @ 0x0
  7295                           
  7296  0070                     ?_TM1650_init:	
  7297                           ; 1 bytes @ 0x0
  7298                           
  7299  0070                     ?_BUTTONS_init:	
  7300                           ; 1 bytes @ 0x0
  7301                           
  7302  0070                     ?_initLED:	
  7303                           ; 1 bytes @ 0x0
  7304                           
  7305  0070                     ?_BEAT_init:	
  7306                           ; 1 bytes @ 0x0
  7307                           
  7308  0070                     ?_MENU_task:	
  7309                           ; 1 bytes @ 0x0
  7310                           
  7311  0070                     ?_DMX_task:	
  7312                           ; 1 bytes @ 0x0
  7313                           
  7314  0070                     ?_BUTTONS_task:	
  7315                           ; 1 bytes @ 0x0
  7316                           
  7317  0070                     ?_CLOCK_timerCallback:	
  7318                           ; 1 bytes @ 0x0
  7319                           
  7320  0070                     ??_CLOCK_timerCallback:	
  7321                           ; 1 bytes @ 0x0
  7322                           
  7323  0070                     ?_TM1650_enable:	
  7324                           ; 1 bytes @ 0x0
  7325                           
  7326  0070                     ?_adrControl_DMX:	
  7327                           ; 1 bytes @ 0x0
  7328                           
  7329  0070                     ?_EUSART1_Initialize:	
  7330                           ; 1 bytes @ 0x0
  7331                           
  7332  0070                     ?_SYSTEM_Initialize:	
  7333                           ; 1 bytes @ 0x0
  7334                           
  7335  0070                     ?_INTERRUPT_InterruptManager:	
  7336                           ; 1 bytes @ 0x0
  7337                           
  7338  0070                     ?_I2C1_WaitForLastPacketToComplete:	
  7339                           ; 1 bytes @ 0x0
  7340                           
  7341  0070                     ?_ADCC_StartConversion:	
  7342                           ; 1 bytes @ 0x0
  7343                           
  7344  0070                     ?_main:	
  7345                           ; 1 bytes @ 0x0
  7346                           
  7347  0070                     ?_TM1650_isEnabled:	
  7348                           ; 1 bytes @ 0x0
  7349                           
  7350  0070                     ?_adcThresholdHandler:	
  7351                           ; 1 bytes @ 0x0
  7352                           
  7353  0070                     ??_adcThresholdHandler:	
  7354                           ; 1 bytes @ 0x0
  7355                           
  7356  0070                     ?_BEAT_detected:	
  7357                           ; 1 bytes @ 0x0
  7358                           
  7359  0070                     ?_BEAT_task:	
  7360                           ; 1 bytes @ 0x0
  7361                           
  7362  0070                     ?_isDMXOn:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365  0070                     ?_fadeColor:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368  0070                     ?_LED_DMX:	
  7369                           ; 1 bytes @ 0x0
  7370                           
  7371  0070                     ?_LED_Beat:	
  7372                           ; 1 bytes @ 0x0
  7373                           
  7374  0070                     ?_menuButtons:	
  7375                           ; 1 bytes @ 0x0
  7376                           
  7377  0070                     ?_cycleColors:	
  7378                           ; 1 bytes @ 0x0
  7379                           
  7380  0070                     ?_pulseColors:	
  7381                           ; 1 bytes @ 0x0
  7382                           
  7383  0070                     ?_address_inc:	
  7384                           ; 1 bytes @ 0x0
  7385                           
  7386  0070                     ?_address_dec:	
  7387                           ; 1 bytes @ 0x0
  7388                           
  7389                           
  7390                           ; 1 bytes @ 0x0
  7391  0070                     	ds	1
  7392  0071                     ??_EUSART1_Receive_ISR:	
  7393  0071                     ??_EUSART1_DefaultErrorHandler:	
  7394                           ; 1 bytes @ 0x1
  7395                           
  7396  0071                     I2C1_Stop@completion_code:	
  7397                           ; 1 bytes @ 0x1
  7398                           
  7399                           
  7400                           ; 1 bytes @ 0x1
  7401  0071                     	ds	1
  7402  0072                     ??_I2C1_ISR:	
  7403                           
  7404                           ; 1 bytes @ 0x2
  7405  0072                     	ds	4
  7406  0076                     ??_INTERRUPT_InterruptManager:	
  7407                           
  7408                           	psect	cstackBANK0
  7409  0020                     __pcstackBANK0:	
  7410                           ; 1 bytes @ 0x6
  7411                           
  7412  0020                     ?___fleq:	
  7413  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7414                           ; 1 bit 
  7415                           
  7416  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7417                           ; 1 bytes @ 0x0
  7418                           
  7419  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7420                           ; 1 bytes @ 0x0
  7421                           
  7422  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7423                           ; 1 bytes @ 0x0
  7424                           
  7425  0020                     ?_EUSART1_SetErrorHandler:	
  7426                           ; 1 bytes @ 0x0
  7427                           
  7428  0020                     ??_PMD_Initialize:	
  7429                           ; 1 bytes @ 0x0
  7430                           
  7431  0020                     ??_PIN_MANAGER_Initialize:	
  7432                           ; 1 bytes @ 0x0
  7433                           
  7434  0020                     ??_OSCILLATOR_Initialize:	
  7435                           ; 1 bytes @ 0x0
  7436                           
  7437  0020                     ??_I2C1_Initialize:	
  7438                           ; 1 bytes @ 0x0
  7439                           
  7440  0020                     ?_TMR0_SetInterruptHandler:	
  7441                           ; 1 bytes @ 0x0
  7442                           
  7443  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7444                           ; 1 bytes @ 0x0
  7445                           
  7446  0020                     ?_I2C1_MasterTRBInsert:	
  7447                           ; 1 bytes @ 0x0
  7448                           
  7449  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7450                           ; 1 bytes @ 0x0
  7451                           
  7452  0020                     ??_initLED:	
  7453                           ; 1 bytes @ 0x0
  7454                           
  7455  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7456                           ; 1 bytes @ 0x0
  7457                           
  7458  0020                     ??_ADCC_StartConversion:	
  7459                           ; 1 bytes @ 0x0
  7460                           
  7461  0020                     ?_ADCC_SetUpperThreshold:	
  7462                           ; 1 bytes @ 0x0
  7463                           
  7464  0020                     ??_TM1650_isEnabled:	
  7465                           ; 1 bytes @ 0x0
  7466                           
  7467  0020                     ?_init:	
  7468                           ; 1 bytes @ 0x0
  7469                           
  7470  0020                     ??_BEAT_detected:	
  7471                           ; 1 bytes @ 0x0
  7472                           
  7473  0020                     ??_isDMXOn:	
  7474                           ; 1 bytes @ 0x0
  7475                           
  7476  0020                     ?_LED_setColor:	
  7477                           ; 1 bytes @ 0x0
  7478                           
  7479  0020                     ?__Umul8_16:	
  7480                           ; 1 bytes @ 0x0
  7481                           
  7482  0020                     ?_CLOCK_getTime:	
  7483                           ; 2 bytes @ 0x0
  7484                           
  7485  0020                     ?_BUTTONS_isClicked:	
  7486                           ; 2 bytes @ 0x0
  7487                           
  7488  0020                     ?___lwdiv:	
  7489                           ; 2 bytes @ 0x0
  7490                           
  7491  0020                     ?___lwmod:	
  7492                           ; 2 bytes @ 0x0
  7493                           
  7494  0020                     ?___xxtofl:	
  7495                           ; 2 bytes @ 0x0
  7496                           
  7497  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7498                           ; 4 bytes @ 0x0
  7499                           
  7500  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7501                           ; 1 bytes @ 0x0
  7502                           
  7503  0020                     ADCC_StartConversion@channel:	
  7504                           ; 1 bytes @ 0x0
  7505                           
  7506  0020                     LED_setColor@green:	
  7507                           ; 1 bytes @ 0x0
  7508                           
  7509  0020                     __Umul8_16@multiplicand:	
  7510                           ; 1 bytes @ 0x0
  7511                           
  7512  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7513                           ; 1 bytes @ 0x0
  7514                           
  7515  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7516                           ; 2 bytes @ 0x0
  7517                           
  7518  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7519                           ; 2 bytes @ 0x0
  7520                           
  7521  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7522                           ; 2 bytes @ 0x0
  7523                           
  7524  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7525                           ; 2 bytes @ 0x0
  7526                           
  7527  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7528                           ; 2 bytes @ 0x0
  7529                           
  7530  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7531                           ; 2 bytes @ 0x0
  7532                           
  7533  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7534                           ; 2 bytes @ 0x0
  7535                           
  7536  0020                     init@port:	
  7537                           ; 2 bytes @ 0x0
  7538                           
  7539  0020                     ___lwdiv@divisor:	
  7540                           ; 2 bytes @ 0x0
  7541                           
  7542  0020                     ___lwmod@divisor:	
  7543                           ; 2 bytes @ 0x0
  7544                           
  7545  0020                     ___fleq@ff1:	
  7546                           ; 2 bytes @ 0x0
  7547                           
  7548  0020                     ___xxtofl@val:	
  7549                           ; 4 bytes @ 0x0
  7550                           
  7551                           
  7552                           ; 4 bytes @ 0x0
  7553  0020                     	ds	1
  7554  0021                     I2C1_MasterTRBInsert@pflag:	
  7555  0021                     I2C1_MasterWriteTRBBuild@length:	
  7556                           ; 1 bytes @ 0x1
  7557                           
  7558  0021                     LED_setColor@white:	
  7559                           ; 1 bytes @ 0x1
  7560                           
  7561                           
  7562                           ; 1 bytes @ 0x1
  7563  0021                     	ds	1
  7564  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7565  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7566                           ; 1 bytes @ 0x2
  7567                           
  7568  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7569                           ; 1 bytes @ 0x2
  7570                           
  7571  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7572                           ; 1 bytes @ 0x2
  7573                           
  7574  0022                     ??_EUSART1_SetErrorHandler:	
  7575                           ; 1 bytes @ 0x2
  7576                           
  7577  0022                     ??_ADCC_Initialize:	
  7578                           ; 1 bytes @ 0x2
  7579                           
  7580  0022                     ??_TMR0_Initialize:	
  7581                           ; 1 bytes @ 0x2
  7582                           
  7583  0022                     ??_TMR0_SetInterruptHandler:	
  7584                           ; 1 bytes @ 0x2
  7585                           
  7586  0022                     ??_I2C1_MasterTRBInsert:	
  7587                           ; 1 bytes @ 0x2
  7588                           
  7589  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7590                           ; 1 bytes @ 0x2
  7591                           
  7592  0022                     ??_CLOCK_init:	
  7593                           ; 1 bytes @ 0x2
  7594                           
  7595  0022                     ??_BEAT_init:	
  7596                           ; 1 bytes @ 0x2
  7597                           
  7598  0022                     ??_DMX_task:	
  7599                           ; 1 bytes @ 0x2
  7600                           
  7601  0022                     ??_BUTTONS_task:	
  7602                           ; 1 bytes @ 0x2
  7603                           
  7604  0022                     ??__Umul8_16:	
  7605                           ; 1 bytes @ 0x2
  7606                           
  7607  0022                     ??_EUSART1_Initialize:	
  7608                           ; 1 bytes @ 0x2
  7609                           
  7610  0022                     ??_ADCC_SetUpperThreshold:	
  7611                           ; 1 bytes @ 0x2
  7612                           
  7613  0022                     ??_CLOCK_getTime:	
  7614                           ; 1 bytes @ 0x2
  7615                           
  7616  0022                     init@pin:	
  7617                           ; 1 bytes @ 0x2
  7618                           
  7619  0022                     LED_setColor@blue:	
  7620                           ; 1 bytes @ 0x2
  7621                           
  7622  0022                     I2C1_MasterWriteTRBBuild@address:	
  7623                           ; 1 bytes @ 0x2
  7624                           
  7625  0022                     ___lwdiv@dividend:	
  7626                           ; 2 bytes @ 0x2
  7627                           
  7628  0022                     ___lwmod@dividend:	
  7629                           ; 2 bytes @ 0x2
  7630                           
  7631                           
  7632                           ; 2 bytes @ 0x2
  7633  0022                     	ds	1
  7634  0023                     ??_SYSTEM_Initialize:	
  7635  0023                     ??_init:	
  7636                           ; 1 bytes @ 0x3
  7637                           
  7638  0023                     ??_BUTTONS_isClicked:	
  7639                           ; 1 bytes @ 0x3
  7640                           
  7641  0023                     ??_LED_setColor:	
  7642                           ; 1 bytes @ 0x3
  7643                           
  7644  0023                     I2C1_MasterTRBInsert@count:	
  7645                           ; 1 bytes @ 0x3
  7646                           
  7647  0023                     BUTTONS_isClicked@button:	
  7648                           ; 1 bytes @ 0x3
  7649                           
  7650                           
  7651                           ; 1 bytes @ 0x3
  7652  0023                     	ds	1
  7653  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7654  0024                     ??_menuButtons:	
  7655                           ; 1 bytes @ 0x4
  7656                           
  7657  0024                     ??___lwdiv:	
  7658                           ; 1 bytes @ 0x4
  7659                           
  7660  0024                     ??___lwmod:	
  7661                           ; 1 bytes @ 0x4
  7662                           
  7663  0024                     ??___xxtofl:	
  7664                           ; 1 bytes @ 0x4
  7665                           
  7666  0024                     init@btn:	
  7667                           ; 1 bytes @ 0x4
  7668                           
  7669  0024                     DMX_task@time:	
  7670                           ; 1 bytes @ 0x4
  7671                           
  7672  0024                     __Umul8_16@product:	
  7673                           ; 2 bytes @ 0x4
  7674                           
  7675  0024                     ___fleq@ff2:	
  7676                           ; 2 bytes @ 0x4
  7677                           
  7678                           
  7679                           ; 4 bytes @ 0x4
  7680  0024                     	ds	1
  7681  0025                     ??_BUTTONS_init:	
  7682  0025                     BUTTONS_task@i:	
  7683                           ; 1 bytes @ 0x5
  7684                           
  7685  0025                     ___lwdiv@counter:	
  7686                           ; 1 bytes @ 0x5
  7687                           
  7688  0025                     ___lwmod@counter:	
  7689                           ; 1 bytes @ 0x5
  7690                           
  7691                           
  7692                           ; 1 bytes @ 0x5
  7693  0025                     	ds	1
  7694  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7695  0026                     BUTTONS_task@time:	
  7696                           ; 1 bytes @ 0x6
  7697                           
  7698  0026                     ___lwdiv@quotient:	
  7699                           ; 2 bytes @ 0x6
  7700                           
  7701  0026                     __Umul8_16@word_mpld:	
  7702                           ; 2 bytes @ 0x6
  7703                           
  7704                           
  7705                           ; 2 bytes @ 0x6
  7706  0026                     	ds	1
  7707  0027                     ?_I2C1_MasterWrite:	
  7708  0027                     I2C1_MasterWrite@length:	
  7709                           ; 1 bytes @ 0x7
  7710                           
  7711  0027                     LED_setColor@lo1:	
  7712                           ; 1 bytes @ 0x7
  7713                           
  7714                           
  7715                           ; 2 bytes @ 0x7
  7716  0027                     	ds	1
  7717  0028                     ??_BEAT_task:	
  7718  0028                     ??___fleq:	
  7719                           ; 1 bytes @ 0x8
  7720                           
  7721  0028                     BUTTONS_task@btn:	
  7722                           ; 1 bytes @ 0x8
  7723                           
  7724  0028                     ___xxtofl@sign:	
  7725                           ; 1 bytes @ 0x8
  7726                           
  7727  0028                     __Umul8_16@multiplier:	
  7728                           ; 1 bytes @ 0x8
  7729                           
  7730  0028                     I2C1_MasterWrite@address:	
  7731                           ; 1 bytes @ 0x8
  7732                           
  7733                           
  7734                           ; 2 bytes @ 0x8
  7735  0028                     	ds	1
  7736  0029                     ?___fladd:	
  7737  0029                     ___xxtofl@exp:	
  7738                           ; 4 bytes @ 0x9
  7739                           
  7740  0029                     ___fladd@b:	
  7741                           ; 1 bytes @ 0x9
  7742                           
  7743                           
  7744                           ; 4 bytes @ 0x9
  7745  0029                     	ds	1
  7746  002A                     I2C1_MasterWrite@pflag:	
  7747  002A                     BEAT_task@offset:	
  7748                           ; 1 bytes @ 0xA
  7749                           
  7750  002A                     ___xxtofl@arg:	
  7751                           ; 2 bytes @ 0xA
  7752                           
  7753                           
  7754                           ; 4 bytes @ 0xA
  7755  002A                     	ds	1
  7756  002B                     ??_I2C1_MasterWrite:	
  7757  002B                     LED_setColor@lo2:	
  7758                           ; 1 bytes @ 0xB
  7759                           
  7760                           
  7761                           ; 2 bytes @ 0xB
  7762  002B                     	ds	2
  7763  002D                     I2C1_MasterWrite@pdata:	
  7764  002D                     ___fladd@a:	
  7765                           ; 1 bytes @ 0xD
  7766                           
  7767                           
  7768                           ; 4 bytes @ 0xD
  7769  002D                     	ds	1
  7770  002E                     ?_writeData:	
  7771  002E                     ?___fldiv:	
  7772                           ; 1 bytes @ 0xE
  7773                           
  7774  002E                     writeData@data:	
  7775                           ; 4 bytes @ 0xE
  7776                           
  7777  002E                     ___fldiv@a:	
  7778                           ; 1 bytes @ 0xE
  7779                           
  7780                           
  7781                           ; 4 bytes @ 0xE
  7782  002E                     	ds	1
  7783  002F                     ??_writeData:	
  7784  002F                     LED_setColor@lo3:	
  7785                           ; 1 bytes @ 0xF
  7786                           
  7787                           
  7788                           ; 2 bytes @ 0xF
  7789  002F                     	ds	2
  7790  0031                     ??___fladd:	
  7791                           
  7792                           ; 1 bytes @ 0x11
  7793  0031                     	ds	1
  7794  0032                     writeData@address:	
  7795  0032                     ___fldiv@b:	
  7796                           ; 1 bytes @ 0x12
  7797                           
  7798                           
  7799                           ; 4 bytes @ 0x12
  7800  0032                     	ds	1
  7801  0033                     writeData@status:	
  7802  0033                     LED_setColor@lo4:	
  7803                           ; 1 bytes @ 0x13
  7804                           
  7805                           
  7806                           ; 2 bytes @ 0x13
  7807  0033                     	ds	1
  7808  0034                     ??_TM1650_enable:	
  7809  0034                     ?_TM1650_setDigit:	
  7810                           ; 1 bytes @ 0x14
  7811                           
  7812  0034                     TM1650_setDigit@data:	
  7813                           ; 1 bytes @ 0x14
  7814                           
  7815  0034                     TM1650_enable@enable:	
  7816                           ; 1 bytes @ 0x14
  7817                           
  7818                           
  7819                           ; 1 bytes @ 0x14
  7820  0034                     	ds	1
  7821  0035                     ??_TM1650_init:	
  7822  0035                     LED_setColor@red:	
  7823                           ; 1 bytes @ 0x15
  7824                           
  7825  0035                     TM1650_setDigit@dp:	
  7826                           ; 1 bytes @ 0x15
  7827                           
  7828                           
  7829                           ; 2 bytes @ 0x15
  7830  0035                     	ds	1
  7831  0036                     ??_LED_DMX:	
  7832  0036                     ??___fldiv:	
  7833                           ; 1 bytes @ 0x16
  7834                           
  7835                           
  7836                           ; 1 bytes @ 0x16
  7837  0036                     	ds	1
  7838  0037                     ??_TM1650_setDigit:	
  7839                           
  7840                           ; 1 bytes @ 0x17
  7841  0037                     	ds	2
  7842  0039                     ___fladd@signs:	
  7843                           
  7844                           ; 1 bytes @ 0x19
  7845  0039                     	ds	1
  7846  003A                     TM1650_setDigit@digit:	
  7847  003A                     ___fladd@aexp:	
  7848                           ; 1 bytes @ 0x1A
  7849                           
  7850                           
  7851                           ; 1 bytes @ 0x1A
  7852  003A                     	ds	1
  7853  003B                     ?_TM1650_fastPrintNum:	
  7854  003B                     ___fladd@bexp:	
  7855                           ; 1 bytes @ 0x1B
  7856                           
  7857  003B                     TM1650_fastPrintNum@num:	
  7858                           ; 1 bytes @ 0x1B
  7859                           
  7860  003B                     ___fldiv@rem:	
  7861                           ; 2 bytes @ 0x1B
  7862                           
  7863                           
  7864                           ; 4 bytes @ 0x1B
  7865  003B                     	ds	1
  7866  003C                     ___fladd@grs:	
  7867                           
  7868                           ; 1 bytes @ 0x1C
  7869  003C                     	ds	1
  7870  003D                     ??_TM1650_fastPrintNum:	
  7871  003D                     ?___flmul:	
  7872                           ; 1 bytes @ 0x1D
  7873                           
  7874  003D                     ___flmul@b:	
  7875                           ; 4 bytes @ 0x1D
  7876                           
  7877                           
  7878                           ; 4 bytes @ 0x1D
  7879  003D                     	ds	1
  7880  003E                     TM1650_fastPrintNum@numWrite:	
  7881                           
  7882                           ; 2 bytes @ 0x1E
  7883  003E                     	ds	1
  7884  003F                     ___fldiv@sign:	
  7885                           
  7886                           ; 1 bytes @ 0x1F
  7887  003F                     	ds	1
  7888  0040                     TM1650_fastPrintNum@i:	
  7889  0040                     ___fldiv@new_exp:	
  7890                           ; 2 bytes @ 0x20
  7891                           
  7892                           
  7893                           ; 2 bytes @ 0x20
  7894  0040                     	ds	1
  7895  0041                     ___flmul@a:	
  7896                           
  7897                           ; 4 bytes @ 0x21
  7898  0041                     	ds	1
  7899  0042                     ??_adrControl_DMX:	
  7900  0042                     ??_address_inc:	
  7901                           ; 1 bytes @ 0x22
  7902                           
  7903  0042                     ??_address_dec:	
  7904                           ; 1 bytes @ 0x22
  7905                           
  7906  0042                     ___fldiv@grs:	
  7907                           ; 1 bytes @ 0x22
  7908                           
  7909                           
  7910                           ; 4 bytes @ 0x22
  7911  0042                     	ds	2
  7912  0044                     adrControl_DMX@time:	
  7913                           
  7914                           ; 2 bytes @ 0x24
  7915  0044                     	ds	1
  7916  0045                     ??___flmul:	
  7917                           
  7918                           ; 1 bytes @ 0x25
  7919  0045                     	ds	1
  7920  0046                     ___fldiv@bexp:	
  7921                           
  7922                           ; 1 bytes @ 0x26
  7923  0046                     	ds	1
  7924  0047                     ___fldiv@aexp:	
  7925                           
  7926                           ; 1 bytes @ 0x27
  7927  0047                     	ds	3
  7928  004A                     ___flmul@sign:	
  7929                           
  7930                           ; 1 bytes @ 0x2A
  7931  004A                     	ds	1
  7932  004B                     ___flmul@aexp:	
  7933                           
  7934                           ; 1 bytes @ 0x2B
  7935  004B                     	ds	1
  7936  004C                     ___flmul@grs:	
  7937                           
  7938                           ; 4 bytes @ 0x2C
  7939  004C                     	ds	4
  7940  0050                     ___flmul@bexp:	
  7941                           
  7942                           ; 1 bytes @ 0x30
  7943  0050                     	ds	1
  7944  0051                     ___flmul@prod:	
  7945                           
  7946                           ; 4 bytes @ 0x31
  7947  0051                     	ds	4
  7948  0055                     ___flmul@temp:	
  7949                           
  7950                           ; 2 bytes @ 0x35
  7951  0055                     	ds	2
  7952  0057                     ?___flge:	
  7953  0057                     ?___flsub:	
  7954                           ; 1 bit 
  7955                           
  7956  0057                     ___flge@ff1:	
  7957                           ; 4 bytes @ 0x37
  7958                           
  7959  0057                     ___flsub@a:	
  7960                           ; 4 bytes @ 0x37
  7961                           
  7962                           
  7963                           ; 4 bytes @ 0x37
  7964  0057                     	ds	4
  7965  005B                     ___flge@ff2:	
  7966  005B                     ___flsub@b:	
  7967                           ; 4 bytes @ 0x3B
  7968                           
  7969                           
  7970                           ; 4 bytes @ 0x3B
  7971  005B                     	ds	4
  7972  005F                     ??___flge:	
  7973  005F                     ??___flsub:	
  7974                           ; 1 bytes @ 0x3F
  7975                           
  7976                           
  7977                           ; 1 bytes @ 0x3F
  7978  005F                     	ds	4
  7979  0063                     ?_HueToRGB:	
  7980  0063                     HueToRGB@v1:	
  7981                           ; 4 bytes @ 0x43
  7982                           
  7983                           
  7984                           ; 4 bytes @ 0x43
  7985  0063                     	ds	4
  7986  0067                     HueToRGB@v2:	
  7987                           
  7988                           ; 4 bytes @ 0x47
  7989  0067                     	ds	4
  7990  006B                     HueToRGB@vH:	
  7991                           
  7992                           ; 4 bytes @ 0x4B
  7993  006B                     	ds	4
  7994  006F                     ??_HueToRGB:	
  7995  006F                     ??_LED_Beat:	
  7996                           ; 1 bytes @ 0x4F
  7997                           
  7998  006F                     ??_pulseColors:	
  7999                           ; 1 bytes @ 0x4F
  8000                           
  8001                           
  8002                           ; 1 bytes @ 0x4F
  8003  006F                     	ds	1
  8004                           
  8005                           	psect	maintext
  8006  12A0                     __pmaintext:	
  8007 ;;
  8008 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8009 ;;
  8010 ;; *************** function _main *****************
  8011 ;; Defined at:
  8012 ;;		line 16 in file "main.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;		None
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : B3F/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8028 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8029 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8030 ;;Total ram usage:        2 bytes
  8031 ;; Hardware stack levels required when called:   13
  8032 ;; This function calls:
  8033 ;;		_BEAT_init
  8034 ;;		_BUTTONS_init
  8035 ;;		_BUTTONS_task
  8036 ;;		_CLOCK_init
  8037 ;;		_DMX_task
  8038 ;;		_EUSART1_SetRxInterruptHandler
  8039 ;;		_MENU_task
  8040 ;;		_SYSTEM_Initialize
  8041 ;;		_TM1650_init
  8042 ;;		_initLED
  8043 ;; This function is called by:
  8044 ;;		Startup code after reset
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           
  8049                           ;psect for function _main
  8050  12A0                     _main:	
  8051                           
  8052                           ;main.c: 18:     SYSTEM_Initialize();
  8053                           
  8054                           ;incstack = 0
  8055                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8056  12A0  319F  27BE  3192   	fcall	_SYSTEM_Initialize
  8057                           
  8058                           ;main.c: 19:     CLOCK_init();
  8059  12A3  319E  26C2  3192   	fcall	_CLOCK_init
  8060                           
  8061                           ;main.c: 20:     TRISB6 = 0;
  8062  12A6  0140               	movlb	0	; select bank0
  8063  12A7  1313               	bcf	19,6	;volatile
  8064                           
  8065                           ;main.c: 21:     LATB6 = 0;
  8066  12A8  1319               	bcf	25,6	;volatile
  8067                           
  8068                           ;main.c: 22:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  8069  12A9  3075               	movlw	low _DMX_ISR
  8070  12AA  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8071  12AB  3011               	movlw	high _DMX_ISR
  8072  12AC  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8073  12AD  319F  271B  3192   	fcall	_EUSART1_SetRxInterruptHandler
  8074                           
  8075                           ;main.c: 28:     (INTCONbits.GIE = 1);
  8076  12B0  178B               	bsf	11,7	;volatile
  8077                           
  8078                           ;main.c: 31:     (INTCONbits.PEIE = 1);
  8079  12B1  170B               	bsf	11,6	;volatile
  8080                           
  8081                           ;main.c: 38:      _delay((unsigned long)((500)*(32000000/4000.0)));
  8082  12B2  3015               	movlw	21
  8083  12B3  0143               	movlb	3	; select bank3
  8084  12B4  00E5               	movwf	(??_main^(0+384)+1)
  8085  12B5  304B               	movlw	75
  8086  12B6  00E4               	movwf	??_main^(0+384)
  8087  12B7  30BE               	movlw	190
  8088  12B8                     u6527:	
  8089  12B8  0B89               	decfsz	9,f
  8090  12B9  2AB8               	goto	u6527
  8091  12BA  0BE4               	decfsz	??_main^(0+384),f
  8092  12BB  2AB8               	goto	u6527
  8093  12BC  0BE5               	decfsz	(??_main^(0+384)+1),f
  8094  12BD  2AB8               	goto	u6527
  8095  12BE  0000               	nop
  8096                           
  8097                           ;main.c: 39:     TM1650_init();
  8098  12BF  319E  26B3  3192   	fcall	_TM1650_init
  8099                           
  8100                           ;main.c: 40:     BUTTONS_init();
  8101  12C2  3194  2447  3192   	fcall	_BUTTONS_init
  8102                           
  8103                           ;main.c: 41:     initLED();
  8104  12C5  3191  21BF  3192   	fcall	_initLED
  8105                           
  8106                           ;main.c: 42:     BEAT_init();
  8107  12C8  319F  27E9  3192   	fcall	_BEAT_init
  8108  12CB                     l6198:	
  8109                           
  8110                           ;main.c: 46:         MENU_task();
  8111  12CB  3197  2763  3192   	fcall	_MENU_task
  8112                           
  8113                           ;main.c: 47:         DMX_task();
  8114  12CE  3193  230B  3192   	fcall	_DMX_task
  8115                           
  8116                           ;main.c: 48:         BUTTONS_task();
  8117  12D1  3189  2130  3192   	fcall	_BUTTONS_task
  8118  12D4  2ACB               	goto	l6198
  8119  12D5                     __end_of_main:	
  8120                           
  8121                           	psect	text1
  8122  11BF                     __ptext1:	
  8123 ;; *************** function _initLED *****************
  8124 ;; Defined at:
  8125 ;;		line 13 in file "led.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;		None
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;		None
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1    wreg      void 
  8132 ;; Registers used:
  8133 ;;		wreg, status,2, status,0
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8143 ;;Total ram usage:        0 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; Hardware stack levels required when called:    4
  8146 ;; This function calls:
  8147 ;;		Nothing
  8148 ;; This function is called by:
  8149 ;;		_main
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           
  8154                           ;psect for function _initLED
  8155  11BF                     _initLED:	
  8156                           
  8157                           ;led.c: 16:     TRISC7 = 0;
  8158                           
  8159                           ;incstack = 0
  8160                           ; Regs used in _initLED: [wreg+status,2+status,0]
  8161  11BF  0140               	movlb	0	; select bank0
  8162  11C0  1394               	bcf	20,7	;volatile
  8163                           
  8164                           ;led.c: 17:     TRISC6 = 0;
  8165  11C1  1314               	bcf	20,6	;volatile
  8166                           
  8167                           ;led.c: 18:     TRISC4 = 0;
  8168  11C2  1214               	bcf	20,4	;volatile
  8169                           
  8170                           ;led.c: 19:     TRISC3 = 0;
  8171  11C3  1194               	bcf	20,3	;volatile
  8172                           
  8173                           ;led.c: 21:     T2CLKCON = 0x01;
  8174  11C4  3001               	movlw	1
  8175  11C5  0145               	movlb	5	; select bank5
  8176  11C6  0090               	movwf	16	;volatile
  8177                           
  8178                           ;led.c: 22:     T2CONbits.ON = 1;
  8179  11C7  178E               	bsf	14,7	;volatile
  8180                           
  8181                           ;led.c: 24:     CCP1CONbits.CCP1EN = 1;
  8182  11C8  0146               	movlb	6	; select bank6
  8183  11C9  178E               	bsf	14,7	;volatile
  8184                           
  8185                           ;led.c: 25:     CCP1CONbits.MODE = 0b1100;
  8186  11CA  080E               	movf	14,w	;volatile
  8187  11CB  39F0               	andlw	-16
  8188  11CC  380C               	iorlw	12
  8189  11CD  008E               	movwf	14	;volatile
  8190                           
  8191                           ;led.c: 26:     CCP2CONbits.CCP2EN = 1;
  8192  11CE  1792               	bsf	18,7	;volatile
  8193                           
  8194                           ;led.c: 27:     CCP2CONbits.MODE = 0b1100;
  8195  11CF  0812               	movf	18,w	;volatile
  8196  11D0  39F0               	andlw	-16
  8197  11D1  380C               	iorlw	12
  8198  11D2  0092               	movwf	18	;volatile
  8199                           
  8200                           ;led.c: 28:     CCP3CONbits.CCP3EN = 1;
  8201  11D3  1796               	bsf	22,7	;volatile
  8202                           
  8203                           ;led.c: 29:     CCP3CONbits.MODE = 0b1100;
  8204  11D4  0816               	movf	22,w	;volatile
  8205  11D5  39F0               	andlw	-16
  8206  11D6  380C               	iorlw	12
  8207  11D7  0096               	movwf	22	;volatile
  8208                           
  8209                           ;led.c: 30:     CCP4CONbits.CCP4EN = 1;
  8210  11D8  179A               	bsf	26,7	;volatile
  8211                           
  8212                           ;led.c: 31:     CCP4CONbits.MODE = 0b1100;
  8213  11D9  081A               	movf	26,w	;volatile
  8214  11DA  39F0               	andlw	-16
  8215  11DB  380C               	iorlw	12
  8216  11DC  009A               	movwf	26	;volatile
  8217                           
  8218                           ;led.c: 34:     RC7PPS = 0x09;
  8219  11DD  3009               	movlw	9
  8220  11DE  017E               	movlb	62	; select bank62
  8221  11DF  00A7               	movwf	39	;volatile
  8222                           
  8223                           ;led.c: 35:     RC6PPS = 0x0A;
  8224  11E0  300A               	movlw	10
  8225  11E1  00A6               	movwf	38	;volatile
  8226                           
  8227                           ;led.c: 36:     RC4PPS = 0x0B;
  8228  11E2  300B               	movlw	11
  8229  11E3  00A4               	movwf	36	;volatile
  8230                           
  8231                           ;led.c: 37:     RC3PPS = 0x0C;
  8232  11E4  300C               	movlw	12
  8233  11E5  00A3               	movwf	35	;volatile
  8234  11E6  0008               	return
  8235  11E7                     __end_of_initLED:	
  8236                           
  8237                           	psect	text2
  8238  1EB3                     __ptext2:	
  8239 ;; *************** function _TM1650_init *****************
  8240 ;; Defined at:
  8241 ;;		line 28 in file "tm1650.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;		None
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1    wreg      void 
  8248 ;; Registers used:
  8249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8259 ;;Total ram usage:        0 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; Hardware stack levels required when called:    9
  8262 ;; This function calls:
  8263 ;;		_TM1650_enable
  8264 ;; This function is called by:
  8265 ;;		_main
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           
  8270                           ;psect for function _TM1650_init
  8271  1EB3                     _TM1650_init:	
  8272                           
  8273                           ;tm1650.c: 29:     TM1650_enable(1);
  8274                           
  8275                           ;incstack = 0
  8276                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8277  1EB3  3001               	movlw	1
  8278  1EB4  319F  2794         	fcall	_TM1650_enable
  8279  1EB6  0008               	return
  8280  1EB7                     __end_of_TM1650_init:	
  8281                           
  8282                           	psect	text3
  8283  1FBE                     __ptext3:	
  8284 ;; *************** function _SYSTEM_Initialize *****************
  8285 ;; Defined at:
  8286 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  1    wreg      void 
  8293 ;; Registers used:
  8294 ;;		wreg, status,2, status,0, pclath, cstack
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8304 ;;Total ram usage:        0 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; Hardware stack levels required when called:    6
  8307 ;; This function calls:
  8308 ;;		_ADCC_Initialize
  8309 ;;		_EUSART1_Initialize
  8310 ;;		_I2C1_Initialize
  8311 ;;		_OSCILLATOR_Initialize
  8312 ;;		_PIN_MANAGER_Initialize
  8313 ;;		_PMD_Initialize
  8314 ;;		_TMR0_Initialize
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _SYSTEM_Initialize
  8322  1FBE                     _SYSTEM_Initialize:	
  8323                           
  8324                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8325                           
  8326                           ;incstack = 0
  8327                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8328  1FBE  319F  2736  319F   	fcall	_PMD_Initialize
  8329                           
  8330                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8331  1FC1  3192  223E  319F   	fcall	_PIN_MANAGER_Initialize
  8332                           
  8333                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8334  1FC4  319F  272D  319F   	fcall	_OSCILLATOR_Initialize
  8335                           
  8336                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  8337  1FC7  3190  2079  319F   	fcall	_I2C1_Initialize
  8338                           
  8339                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8340  1FCA  3191  2199  319F   	fcall	_ADCC_Initialize
  8341                           
  8342                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  8343  1FCD  319F  276C  319F   	fcall	_TMR0_Initialize
  8344                           
  8345                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  8346  1FD0  3193  23B7         	fcall	_EUSART1_Initialize
  8347  1FD2  0008               	return
  8348  1FD3                     __end_of_SYSTEM_Initialize:	
  8349                           
  8350                           	psect	text4
  8351  1F6C                     __ptext4:	
  8352 ;; *************** function _TMR0_Initialize *****************
  8353 ;; Defined at:
  8354 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;		None
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;		None
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  1    wreg      void 
  8361 ;; Registers used:
  8362 ;;		wreg, status,2, status,0, pclath, cstack
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8372 ;;Total ram usage:        0 bytes
  8373 ;; Hardware stack levels used:    1
  8374 ;; Hardware stack levels required when called:    5
  8375 ;; This function calls:
  8376 ;;		_TMR0_SetInterruptHandler
  8377 ;; This function is called by:
  8378 ;;		_SYSTEM_Initialize
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           
  8383                           ;psect for function _TMR0_Initialize
  8384  1F6C                     _TMR0_Initialize:	
  8385                           
  8386                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  8387                           
  8388                           ;incstack = 0
  8389                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8390  1F6C  3045               	movlw	69
  8391  1F6D  014B               	movlb	11	; select bank11
  8392  1F6E  009F               	movwf	31	;volatile
  8393                           
  8394                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8395  1F6F  30F9               	movlw	249
  8396  1F70  009D               	movwf	29	;volatile
  8397                           
  8398                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8399  1F71  019C               	clrf	28	;volatile
  8400                           
  8401                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8402  1F72  014E               	movlb	14	; select bank14
  8403  1F73  128C               	bcf	12,5	;volatile
  8404                           
  8405                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8406  1F74  1696               	bsf	22,5	;volatile
  8407                           
  8408                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8409  1F75  3001               	movlw	low _TMR0_DefaultInterruptHandler
  8410  1F76  0140               	movlb	0	; select bank0
  8411  1F77  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8412  1F78  3008               	movlw	high _TMR0_DefaultInterruptHandler
  8413  1F79  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8414  1F7A  319E  26EE         	fcall	_TMR0_SetInterruptHandler
  8415                           
  8416                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8417  1F7C  3080               	movlw	128
  8418  1F7D  014B               	movlb	11	; select bank11
  8419  1F7E  009E               	movwf	30	;volatile
  8420  1F7F  0008               	return
  8421  1F80                     __end_of_TMR0_Initialize:	
  8422                           
  8423                           	psect	text5
  8424  1F36                     __ptext5:	
  8425 ;; *************** function _PMD_Initialize *****************
  8426 ;; Defined at:
  8427 ;;		line 75 in file "mcc_generated_files/mcc.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;		None
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;		None
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      void 
  8434 ;; Registers used:
  8435 ;;		status,2
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8445 ;;Total ram usage:        0 bytes
  8446 ;; Hardware stack levels used:    1
  8447 ;; Hardware stack levels required when called:    4
  8448 ;; This function calls:
  8449 ;;		Nothing
  8450 ;; This function is called by:
  8451 ;;		_SYSTEM_Initialize
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           
  8455                           
  8456                           ;psect for function _PMD_Initialize
  8457  1F36                     _PMD_Initialize:	
  8458                           
  8459                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  8460                           
  8461                           ;incstack = 0
  8462                           ; Regs used in _PMD_Initialize: [status,2]
  8463  1F36  014F               	movlb	15	; select bank15
  8464  1F37  0196               	clrf	22	;volatile
  8465                           
  8466                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  8467  1F38  0197               	clrf	23	;volatile
  8468                           
  8469                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  8470  1F39  0198               	clrf	24	;volatile
  8471                           
  8472                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  8473  1F3A  0199               	clrf	25	;volatile
  8474                           
  8475                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  8476  1F3B  019A               	clrf	26	;volatile
  8477                           
  8478                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  8479  1F3C  019B               	clrf	27	;volatile
  8480                           
  8481                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  8482  1F3D  019C               	clrf	28	;volatile
  8483                           
  8484                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  8485  1F3E  019D               	clrf	29	;volatile
  8486  1F3F  0008               	return
  8487  1F40                     __end_of_PMD_Initialize:	
  8488                           
  8489                           	psect	text6
  8490  123E                     __ptext6:	
  8491 ;; *************** function _PIN_MANAGER_Initialize *****************
  8492 ;; Defined at:
  8493 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;		None
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      void 
  8500 ;; Registers used:
  8501 ;;		wreg, status,2
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8511 ;;Total ram usage:        0 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    4
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_SYSTEM_Initialize
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           
  8522                           ;psect for function _PIN_MANAGER_Initialize
  8523  123E                     _PIN_MANAGER_Initialize:	
  8524                           
  8525                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8526                           
  8527                           ;incstack = 0
  8528                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8529  123E  0140               	movlb	0	; select bank0
  8530  123F  0198               	clrf	24	;volatile
  8531                           
  8532                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8533  1240  0199               	clrf	25	;volatile
  8534                           
  8535                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8536  1241  019A               	clrf	26	;volatile
  8537                           
  8538                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8539  1242  303F               	movlw	63
  8540  1243  0092               	movwf	18	;volatile
  8541                           
  8542                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  8543  1244  30F0               	movlw	240
  8544  1245  0093               	movwf	19	;volatile
  8545                           
  8546                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8547  1246  30FF               	movlw	255
  8548  1247  0094               	movwf	20	;volatile
  8549                           
  8550                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8551  1248  30F8               	movlw	248
  8552  1249  017E               	movlb	62	; select bank62
  8553  124A  00CE               	movwf	78	;volatile
  8554                           
  8555                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8556  124B  30E0               	movlw	224
  8557  124C  00C3               	movwf	67	;volatile
  8558                           
  8559                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8560  124D  3003               	movlw	3
  8561  124E  00B8               	movwf	56	;volatile
  8562                           
  8563                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8564  124F  01C4               	clrf	68	;volatile
  8565                           
  8566                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8567  1250  3004               	movlw	4
  8568  1251  00B9               	movwf	57	;volatile
  8569                           
  8570                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8571  1252  3007               	movlw	7
  8572  1253  00CF               	movwf	79	;volatile
  8573                           
  8574                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8575  1254  01BA               	clrf	58	;volatile
  8576                           
  8577                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8578  1255  01C5               	clrf	69	;volatile
  8579                           
  8580                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8581  1256  01D0               	clrf	80	;volatile
  8582                           
  8583                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8584  1257  3037               	movlw	55
  8585  1258  00BB               	movwf	59	;volatile
  8586                           
  8587                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8588  1259  30F0               	movlw	240
  8589  125A  00C6               	movwf	70	;volatile
  8590                           
  8591                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8592  125B  30FF               	movlw	255
  8593  125C  00D1               	movwf	81	;volatile
  8594                           
  8595                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8596  125D  3005               	movlw	5
  8597  125E  017D               	movlb	61	; select bank61
  8598  125F  00C5               	movwf	69	;volatile
  8599                           
  8600                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8601  1260  3014               	movlw	20
  8602  1261  017E               	movlb	62	; select bank62
  8603  1262  0094               	movwf	20	;volatile
  8604                           
  8605                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  8606  1263  3013               	movlw	19
  8607  1264  0095               	movwf	21	;volatile
  8608                           
  8609                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  8610  1265  3004               	movlw	4
  8611  1266  017D               	movlb	61	; select bank61
  8612  1267  00C6               	movwf	70	;volatile
  8613                           
  8614                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  8615  1268  300C               	movlw	12
  8616  1269  00CB               	movwf	75	;volatile
  8617  126A  0008               	return
  8618  126B                     __end_of_PIN_MANAGER_Initialize:	
  8619                           
  8620                           	psect	text7
  8621  1F2D                     __ptext7:	
  8622 ;; *************** function _OSCILLATOR_Initialize *****************
  8623 ;; Defined at:
  8624 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, status,2
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8642 ;;Total ram usage:        0 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    4
  8645 ;; This function calls:
  8646 ;;		Nothing
  8647 ;; This function is called by:
  8648 ;;		_SYSTEM_Initialize
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           
  8653                           ;psect for function _OSCILLATOR_Initialize
  8654  1F2D                     _OSCILLATOR_Initialize:	
  8655                           
  8656                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8657                           
  8658                           ;incstack = 0
  8659                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8660  1F2D  3060               	movlw	96
  8661  1F2E  0151               	movlb	17	; select bank17
  8662  1F2F  008D               	movwf	13	;volatile
  8663                           
  8664                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8665  1F30  018F               	clrf	15	;volatile
  8666                           
  8667                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8668  1F31  0191               	clrf	17	;volatile
  8669                           
  8670                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8671  1F32  3006               	movlw	6
  8672  1F33  0093               	movwf	19	;volatile
  8673                           
  8674                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  8675  1F34  0192               	clrf	18	;volatile
  8676  1F35  0008               	return
  8677  1F36                     __end_of_OSCILLATOR_Initialize:	
  8678                           
  8679                           	psect	text8
  8680  1079                     __ptext8:	
  8681 ;; *************** function _I2C1_Initialize *****************
  8682 ;; Defined at:
  8683 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;		None
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;		None
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1    wreg      void 
  8690 ;; Registers used:
  8691 ;;		wreg, status,2
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8700 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8701 ;;Total ram usage:        1 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:    4
  8704 ;; This function calls:
  8705 ;;		Nothing
  8706 ;; This function is called by:
  8707 ;;		_SYSTEM_Initialize
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           
  8712                           ;psect for function _I2C1_Initialize
  8713  1079                     _I2C1_Initialize:	
  8714                           
  8715                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8716                           
  8717                           ;incstack = 0
  8718                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8719  1079  3061               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8720  107A  0140               	movlb	0	; select bank0
  8721  107B  00A0               	movwf	??_I2C1_Initialize
  8722  107C  0820               	movf	??_I2C1_Initialize,w
  8723  107D  0142               	movlb	2	; select bank2
  8724  107E  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
  8725                           
  8726                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8727  107F  3061               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8728  1080  0140               	movlb	0	; select bank0
  8729  1081  00A0               	movwf	??_I2C1_Initialize
  8730  1082  0820               	movf	??_I2C1_Initialize,w
  8731  1083  0142               	movlb	2	; select bank2
  8732  1084  00A0               	movwf	_i2c1_object^(0+256)
  8733                           
  8734                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8735  1085  14A2               	bsf	(_i2c1_object^(0+256)+2),1
  8736                           
  8737                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8738  1086  1022               	bcf	(_i2c1_object^(0+256)+2),0
  8739                           
  8740                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8741  1087  01A4               	clrf	(_i2c1_object^(0+256)+4)
  8742                           
  8743                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8744  1088  0143               	movlb	3	; select bank3
  8745  1089  018F               	clrf	15	;volatile
  8746                           
  8747                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8748  108A  3028               	movlw	40
  8749  108B  0090               	movwf	16	;volatile
  8750                           
  8751                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8752  108C  0192               	clrf	18	;volatile
  8753                           
  8754                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  8755  108D  3050               	movlw	80
  8756  108E  008D               	movwf	13	;volatile
  8757                           
  8758                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8759  108F  014E               	movlb	14	; select bank14
  8760  1090  100F               	bcf	15,0	;volatile
  8761                           
  8762                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8763  1091  108F               	bcf	15,1	;volatile
  8764                           
  8765                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8766  1092  1419               	bsf	25,0	;volatile
  8767                           
  8768                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8769  1093  1499               	bsf	25,1	;volatile
  8770  1094  0008               	return
  8771  1095                     __end_of_I2C1_Initialize:	
  8772                           
  8773                           	psect	text9
  8774  13B7                     __ptext9:	
  8775 ;; *************** function _EUSART1_Initialize *****************
  8776 ;; Defined at:
  8777 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;		None
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;		None
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      void 
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0, pclath, cstack
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8794 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8795 ;;Total ram usage:        1 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:    5
  8798 ;; This function calls:
  8799 ;;		_EUSART1_SetErrorHandler
  8800 ;;		_EUSART1_SetFramingErrorHandler
  8801 ;;		_EUSART1_SetOverrunErrorHandler
  8802 ;;		_EUSART1_SetRxInterruptHandler
  8803 ;;		_EUSART1_SetTxInterruptHandler
  8804 ;; This function is called by:
  8805 ;;		_SYSTEM_Initialize
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           
  8810                           ;psect for function _EUSART1_Initialize
  8811  13B7                     _EUSART1_Initialize:	
  8812                           
  8813                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8814                           
  8815                           ;incstack = 0
  8816                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8817  13B7  014E               	movlb	14	; select bank14
  8818  13B8  1299               	bcf	25,5	;volatile
  8819                           
  8820                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8821  13B9  30D5               	movlw	low _EUSART1_Receive_ISR
  8822  13BA  0140               	movlb	0	; select bank0
  8823  13BB  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8824  13BC  3012               	movlw	high _EUSART1_Receive_ISR
  8825  13BD  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8826  13BE  319F  271B  3193   	fcall	_EUSART1_SetRxInterruptHandler
  8827                           
  8828                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8829  13C1  014E               	movlb	14	; select bank14
  8830  13C2  1219               	bcf	25,4	;volatile
  8831                           
  8832                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8833  13C3  30D1               	movlw	low _EUSART1_Transmit_ISR
  8834  13C4  0140               	movlb	0	; select bank0
  8835  13C5  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8836  13C6  3010               	movlw	high _EUSART1_Transmit_ISR
  8837  13C7  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8838  13C8  319F  2724  3193   	fcall	_EUSART1_SetTxInterruptHandler
  8839                           
  8840                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8841  13CB  3008               	movlw	8
  8842  13CC  0142               	movlb	2	; select bank2
  8843  13CD  009F               	movwf	31	;volatile
  8844                           
  8845                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8846  13CE  3090               	movlw	144
  8847  13CF  009D               	movwf	29	;volatile
  8848                           
  8849                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8850  13D0  3004               	movlw	4
  8851  13D1  009E               	movwf	30	;volatile
  8852                           
  8853                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8854  13D2  301F               	movlw	31
  8855  13D3  009B               	movwf	27	;volatile
  8856                           
  8857                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8858  13D4  019C               	clrf	28	;volatile
  8859                           
  8860                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8861  13D5  3000               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8862  13D6  0140               	movlb	0	; select bank0
  8863  13D7  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8864  13D8  3008               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8865  13D9  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8866  13DA  319F  2709  3193   	fcall	_EUSART1_SetFramingErrorHandler
  8867                           
  8868                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8869  13DD  30AF               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8870  13DE  0140               	movlb	0	; select bank0
  8871  13DF  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8872  13E0  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8873  13E1  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8874  13E2  319F  2712  3193   	fcall	_EUSART1_SetOverrunErrorHandler
  8875                           
  8876                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8877  13E5  309F               	movlw	low _EUSART1_DefaultErrorHandler
  8878  13E6  0140               	movlb	0	; select bank0
  8879  13E7  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8880  13E8  301E               	movlw	high _EUSART1_DefaultErrorHandler
  8881  13E9  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8882  13EA  319F  2700         	fcall	_EUSART1_SetErrorHandler
  8883                           
  8884                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8885  13EC  0142               	movlb	2	; select bank2
  8886  13ED  01DC               	clrf	_eusart1RxLastError^(0+256)	;volatile
  8887                           
  8888                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8889  13EE  0141               	movlb	1	; select bank1
  8890  13EF  01EF               	clrf	_eusart1TxHead^(0+128)	;volatile
  8891                           
  8892                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8893  13F0  01EE               	clrf	_eusart1TxTail^(0+128)	;volatile
  8894                           
  8895                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8896  13F1  3008               	movlw	8
  8897  13F2  0140               	movlb	0	; select bank0
  8898  13F3  00A2               	movwf	??_EUSART1_Initialize
  8899  13F4  0822               	movf	??_EUSART1_Initialize,w
  8900  13F5  0142               	movlb	2	; select bank2
  8901  13F6  00EE               	movwf	_eusart1TxBufferRemaining^(0+256)	;volatile
  8902                           
  8903                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8904  13F7  01F7               	clrf	_eusart1RxHead	;volatile
  8905                           
  8906                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8907  13F8  01F6               	clrf	_eusart1RxTail	;volatile
  8908                           
  8909                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8910  13F9  0141               	movlb	1	; select bank1
  8911  13FA  01ED               	clrf	_eusart1RxCount^(0+128)	;volatile
  8912                           
  8913                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8914  13FB  014E               	movlb	14	; select bank14
  8915  13FC  1699               	bsf	25,5	;volatile
  8916  13FD  0008               	return
  8917  13FE                     __end_of_EUSART1_Initialize:	
  8918                           
  8919                           	psect	text10
  8920  1F24                     __ptext10:	
  8921 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8922 ;; Defined at:
  8923 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8926 ;;		 -> EUSART1_Transmit_ISR(1), 
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  1    wreg      void 
  8931 ;; Registers used:
  8932 ;;		wreg
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8938 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8941 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8942 ;;Total ram usage:        2 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:    4
  8945 ;; This function calls:
  8946 ;;		Nothing
  8947 ;; This function is called by:
  8948 ;;		_EUSART1_Initialize
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           
  8953                           ;psect for function _EUSART1_SetTxInterruptHandler
  8954  1F24                     _EUSART1_SetTxInterruptHandler:	
  8955                           
  8956                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8957                           
  8958                           ;incstack = 0
  8959                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  8960  1F24  0140               	movlb	0	; select bank0
  8961  1F25  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  8962  1F26  0143               	movlb	3	; select bank3
  8963  1F27  00E3               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384)
  8964  1F28  0140               	movlb	0	; select bank0
  8965  1F29  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  8966  1F2A  0143               	movlb	3	; select bank3
  8967  1F2B  00E2               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+384)
  8968  1F2C  0008               	return
  8969  1F2D                     __end_of_EUSART1_SetTxInterruptHandler:	
  8970                           
  8971                           	psect	text11
  8972  1F1B                     __ptext11:	
  8973 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  8974 ;; Defined at:
  8975 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8978 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8990 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8993 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8994 ;;Total ram usage:        2 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:    4
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_EUSART1_Initialize
  9001 ;;		_main
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           
  9006                           ;psect for function _EUSART1_SetRxInterruptHandler
  9007  1F1B                     _EUSART1_SetRxInterruptHandler:	
  9008                           
  9009                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9010                           
  9011                           ;incstack = 0
  9012                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9013  1F1B  0140               	movlb	0	; select bank0
  9014  1F1C  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9015  1F1D  0143               	movlb	3	; select bank3
  9016  1F1E  00E1               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
  9017  1F1F  0140               	movlb	0	; select bank0
  9018  1F20  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9019  1F21  0143               	movlb	3	; select bank3
  9020  1F22  00E0               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
  9021  1F23  0008               	return
  9022  1F24                     __end_of_EUSART1_SetRxInterruptHandler:	
  9023                           
  9024                           	psect	text12
  9025  1F12                     __ptext12:	
  9026 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9027 ;; Defined at:
  9028 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9031 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9046 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9047 ;;Total ram usage:        2 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    4
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_EUSART1_Initialize
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           
  9058                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9059  1F12                     _EUSART1_SetOverrunErrorHandler:	
  9060                           
  9061                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  9062                           
  9063                           ;incstack = 0
  9064                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9065  1F12  0140               	movlb	0	; select bank0
  9066  1F13  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9067  1F14  0143               	movlb	3	; select bank3
  9068  1F15  00DD               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
  9069  1F16  0140               	movlb	0	; select bank0
  9070  1F17  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9071  1F18  0143               	movlb	3	; select bank3
  9072  1F19  00DC               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
  9073  1F1A  0008               	return
  9074  1F1B                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9075                           
  9076                           	psect	text13
  9077  1F09                     __ptext13:	
  9078 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9079 ;; Defined at:
  9080 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9083 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9099 ;;Total ram usage:        2 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    4
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_EUSART1_Initialize
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           
  9110                           ;psect for function _EUSART1_SetFramingErrorHandler
  9111  1F09                     _EUSART1_SetFramingErrorHandler:	
  9112                           
  9113                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  9114                           
  9115                           ;incstack = 0
  9116                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9117  1F09  0140               	movlb	0	; select bank0
  9118  1F0A  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9119  1F0B  0143               	movlb	3	; select bank3
  9120  1F0C  00DF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
  9121  1F0D  0140               	movlb	0	; select bank0
  9122  1F0E  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9123  1F0F  0143               	movlb	3	; select bank3
  9124  1F10  00DE               	movwf	_EUSART1_FramingErrorHandler^(0+384)
  9125  1F11  0008               	return
  9126  1F12                     __end_of_EUSART1_SetFramingErrorHandler:	
  9127                           
  9128                           	psect	text14
  9129  1F00                     __ptext14:	
  9130 ;; *************** function _EUSART1_SetErrorHandler *****************
  9131 ;; Defined at:
  9132 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9135 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  1    wreg      void 
  9140 ;; Registers used:
  9141 ;;		wreg
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9150 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9151 ;;Total ram usage:        2 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; Hardware stack levels required when called:    4
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		_EUSART1_Initialize
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           
  9162                           ;psect for function _EUSART1_SetErrorHandler
  9163  1F00                     _EUSART1_SetErrorHandler:	
  9164                           
  9165                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  9166                           
  9167                           ;incstack = 0
  9168                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9169  1F00  0140               	movlb	0	; select bank0
  9170  1F01  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9171  1F02  0143               	movlb	3	; select bank3
  9172  1F03  00DB               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
  9173  1F04  0140               	movlb	0	; select bank0
  9174  1F05  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9175  1F06  0143               	movlb	3	; select bank3
  9176  1F07  00DA               	movwf	_EUSART1_ErrorHandler^(0+384)
  9177  1F08  0008               	return
  9178  1F09                     __end_of_EUSART1_SetErrorHandler:	
  9179                           
  9180                           	psect	text15
  9181  1199                     __ptext15:	
  9182 ;; *************** function _ADCC_Initialize *****************
  9183 ;; Defined at:
  9184 ;;		line 64 in file "mcc_generated_files/adcc.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;		None
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;		None
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      void 
  9191 ;; Registers used:
  9192 ;;		wreg, status,2, status,0, pclath, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9202 ;;Total ram usage:        0 bytes
  9203 ;; Hardware stack levels used:    1
  9204 ;; Hardware stack levels required when called:    5
  9205 ;; This function calls:
  9206 ;;		_ADCC_SetADTIInterruptHandler
  9207 ;; This function is called by:
  9208 ;;		_SYSTEM_Initialize
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           
  9213                           ;psect for function _ADCC_Initialize
  9214  1199                     _ADCC_Initialize:	
  9215                           
  9216                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  9217                           
  9218                           ;incstack = 0
  9219                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9220  1199  0141               	movlb	1	; select bank1
  9221  119A  018C               	clrf	12	;volatile
  9222                           
  9223                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  9224  119B  018D               	clrf	13	;volatile
  9225                           
  9226                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  9227  119C  018E               	clrf	14	;volatile
  9228                           
  9229                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  9230  119D  018F               	clrf	15	;volatile
  9231                           
  9232                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  9233  119E  0192               	clrf	18	;volatile
  9234                           
  9235                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  9236  119F  0193               	clrf	19	;volatile
  9237                           
  9238                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  9239  11A0  0198               	clrf	24	;volatile
  9240                           
  9241                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  9242  11A1  019A               	clrf	26	;volatile
  9243                           
  9244                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  9245  11A2  019F               	clrf	31	;volatile
  9246                           
  9247                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  9248  11A3  0142               	movlb	2	; select bank2
  9249  11A4  018C               	clrf	12	;volatile
  9250                           
  9251                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  9252  11A5  018D               	clrf	13	;volatile
  9253                           
  9254                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  9255  11A6  018E               	clrf	14	;volatile
  9256                           
  9257                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  9258  11A7  018F               	clrf	15	;volatile
  9259                           
  9260                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  9261  11A8  0190               	clrf	16	;volatile
  9262                           
  9263                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  9264  11A9  0192               	clrf	18	;volatile
  9265                           
  9266                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  9267  11AA  3054               	movlw	84
  9268  11AB  0093               	movwf	19	;volatile
  9269                           
  9270                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  9271  11AC  3056               	movlw	86
  9272  11AD  0094               	movwf	20	;volatile
  9273                           
  9274                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  9275  11AE  0195               	clrf	21	;volatile
  9276                           
  9277                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  9278  11AF  0196               	clrf	22	;volatile
  9279                           
  9280                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  9281  11B0  0197               	clrf	23	;volatile
  9282                           
  9283                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  9284  11B1  0198               	clrf	24	;volatile
  9285                           
  9286                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  9287  11B2  30D4               	movlw	212
  9288  11B3  0091               	movwf	17	;volatile
  9289                           
  9290                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  9291  11B4  014E               	movlb	14	; select bank14
  9292  11B5  108D               	bcf	13,1	;volatile
  9293                           
  9294                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  9295  11B6  1497               	bsf	23,1	;volatile
  9296                           
  9297                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  9298  11B7  309E               	movlw	low _ADCC_DefaultInterruptHandler
  9299  11B8  0140               	movlb	0	; select bank0
  9300  11B9  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  9301  11BA  301E               	movlw	high _ADCC_DefaultInterruptHandler
  9302  11BB  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  9303  11BC  319E  26CA         	fcall	_ADCC_SetADTIInterruptHandler
  9304  11BE  0008               	return
  9305  11BF                     __end_of_ADCC_Initialize:	
  9306                           
  9307                           	psect	text16
  9308  1763                     __ptext16:	
  9309 ;; *************** function _MENU_task *****************
  9310 ;; Defined at:
  9311 ;;		line 71 in file "menu.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;		None
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9327 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9328 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9329 ;;Total ram usage:        1 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; Hardware stack levels required when called:   12
  9332 ;; This function calls:
  9333 ;;		_BEAT_task
  9334 ;;		_LED_Beat
  9335 ;;		_LED_DMX
  9336 ;;		_TM1650_enable
  9337 ;;		_TM1650_setDigit
  9338 ;;		_adrControl_DMX
  9339 ;;		_cycleColors
  9340 ;;		_isDMXOn
  9341 ;;		_menuButtons
  9342 ;;		_pulseColors
  9343 ;; This function is called by:
  9344 ;;		_main
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           
  9349                           ;psect for function _MENU_task
  9350  1763                     _MENU_task:	
  9351                           
  9352                           ;menu.c: 72:     if(isDMXOn()) {
  9353                           
  9354                           ;incstack = 0
  9355                           ; Regs used in _MENU_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9356  1763  319E  26A8  3197   	fcall	_isDMXOn
  9357  1766  3A00               	xorlw	0
  9358  1767  1903               	skipnz
  9359  1768  2F6F               	goto	l6064
  9360                           
  9361                           ;menu.c: 73:         LED_DMX();
  9362  1769  3193  2342  3197   	fcall	_LED_DMX
  9363                           
  9364                           ;menu.c: 74:         adrControl_DMX();
  9365  176C  3195  2561         	fcall	_adrControl_DMX
  9366                           
  9367                           ;menu.c: 75:     } else {
  9368  176E  0008               	return
  9369  176F                     l6064:	
  9370                           
  9371                           ;menu.c: 76:         menuButtons();
  9372  176F  3190  202B  3197   	fcall	_menuButtons
  9373                           
  9374                           ;menu.c: 77:         if(currentState == 0) {
  9375  1772  0142               	movlb	2	; select bank2
  9376  1773  0837               	movf	_currentState^(0+256),w
  9377  1774  0438               	iorwf	(_currentState+1)^(0+256),w
  9378  1775  1D03               	btfss	3,2
  9379  1776  2F81               	goto	l6074
  9380                           
  9381                           ;menu.c: 78:             TM1650_enable(0);
  9382  1777  3000               	movlw	0
  9383  1778  319F  2794  3197   	fcall	_TM1650_enable
  9384                           
  9385                           ;menu.c: 79:             LED_Beat();
  9386  177B  3188  2002  3197   	fcall	_LED_Beat
  9387                           
  9388                           ;menu.c: 80:             BEAT_task();
  9389  177E  318A  2202         	fcall	_BEAT_task
  9390                           
  9391                           ;menu.c: 81:         } else if(currentState == 1) {
  9392  1780  0008               	return
  9393  1781                     l6074:	
  9394  1781  0337               	decf	_currentState^(0+256),w
  9395  1782  0438               	iorwf	(_currentState+1)^(0+256),w
  9396  1783  1D03               	btfss	3,2
  9397  1784  2FC0               	goto	l6088
  9398                           
  9399                           ;menu.c: 82:             TM1650_enable(1);
  9400  1785  3001               	movlw	1
  9401  1786  319F  2794  3197   	fcall	_TM1650_enable
  9402                           
  9403                           ;menu.c: 83:             TM1650_setDigit(0, 'P', 0);
  9404  1789  3050               	movlw	80
  9405  178A  0141               	movlb	1	; select bank1
  9406  178B  00E8               	movwf	??_MENU_task^(0+128)
  9407  178C  0868               	movf	??_MENU_task^(0+128),w
  9408  178D  0140               	movlb	0	; select bank0
  9409  178E  00B4               	movwf	TM1650_setDigit@data
  9410  178F  3000               	movlw	0
  9411  1790  00B5               	movwf	TM1650_setDigit@dp
  9412  1791  00B6               	movwf	TM1650_setDigit@dp+1
  9413  1792  3000               	movlw	0
  9414  1793  3190  205D  3197   	fcall	_TM1650_setDigit
  9415                           
  9416                           ;menu.c: 84:             TM1650_setDigit(1, 'L', 0);
  9417  1796  304C               	movlw	76
  9418  1797  0141               	movlb	1	; select bank1
  9419  1798  00E8               	movwf	??_MENU_task^(0+128)
  9420  1799  0868               	movf	??_MENU_task^(0+128),w
  9421  179A  0140               	movlb	0	; select bank0
  9422  179B  00B4               	movwf	TM1650_setDigit@data
  9423  179C  3000               	movlw	0
  9424  179D  00B5               	movwf	TM1650_setDigit@dp
  9425  179E  00B6               	movwf	TM1650_setDigit@dp+1
  9426  179F  3001               	movlw	1
  9427  17A0  3190  205D  3197   	fcall	_TM1650_setDigit
  9428                           
  9429                           ;menu.c: 85:             TM1650_setDigit(2, 'S', 0);
  9430  17A3  3053               	movlw	83
  9431  17A4  0141               	movlb	1	; select bank1
  9432  17A5  00E8               	movwf	??_MENU_task^(0+128)
  9433  17A6  0868               	movf	??_MENU_task^(0+128),w
  9434  17A7  0140               	movlb	0	; select bank0
  9435  17A8  00B4               	movwf	TM1650_setDigit@data
  9436  17A9  3000               	movlw	0
  9437  17AA  00B5               	movwf	TM1650_setDigit@dp
  9438  17AB  00B6               	movwf	TM1650_setDigit@dp+1
  9439  17AC  3002               	movlw	2
  9440  17AD  3190  205D  3197   	fcall	_TM1650_setDigit
  9441                           
  9442                           ;menu.c: 86:             TM1650_setDigit(3, 'E', 0);
  9443  17B0  3045               	movlw	69
  9444  17B1  0141               	movlb	1	; select bank1
  9445  17B2  00E8               	movwf	??_MENU_task^(0+128)
  9446  17B3  0868               	movf	??_MENU_task^(0+128),w
  9447  17B4  0140               	movlb	0	; select bank0
  9448  17B5  00B4               	movwf	TM1650_setDigit@data
  9449  17B6  3000               	movlw	0
  9450  17B7  00B5               	movwf	TM1650_setDigit@dp
  9451  17B8  00B6               	movwf	TM1650_setDigit@dp+1
  9452  17B9  3003               	movlw	3
  9453  17BA  3190  205D  3197   	fcall	_TM1650_setDigit
  9454                           
  9455                           ;menu.c: 87:             pulseColors();
  9456  17BD  3188  2064         	fcall	_pulseColors
  9457                           
  9458                           ;menu.c: 88:         } else if (currentState == 2) {
  9459  17BF  0008               	return
  9460  17C0                     l6088:	
  9461  17C0  3002               	movlw	2
  9462  17C1  0637               	xorwf	_currentState^(0+256),w
  9463  17C2  0438               	iorwf	(_currentState+1)^(0+256),w
  9464  17C3  1D03               	btfss	3,2
  9465  17C4  0008               	return
  9466                           
  9467                           ;menu.c: 89:             TM1650_enable(1);
  9468  17C5  3001               	movlw	1
  9469  17C6  319F  2794  3197   	fcall	_TM1650_enable
  9470                           
  9471                           ;menu.c: 90:             TM1650_setDigit(0, 'C', 0);
  9472  17C9  3043               	movlw	67
  9473  17CA  0141               	movlb	1	; select bank1
  9474  17CB  00E8               	movwf	??_MENU_task^(0+128)
  9475  17CC  0868               	movf	??_MENU_task^(0+128),w
  9476  17CD  0140               	movlb	0	; select bank0
  9477  17CE  00B4               	movwf	TM1650_setDigit@data
  9478  17CF  3000               	movlw	0
  9479  17D0  00B5               	movwf	TM1650_setDigit@dp
  9480  17D1  00B6               	movwf	TM1650_setDigit@dp+1
  9481  17D2  3000               	movlw	0
  9482  17D3  3190  205D  3197   	fcall	_TM1650_setDigit
  9483                           
  9484                           ;menu.c: 91:             TM1650_setDigit(1, 'Y', 0);
  9485  17D6  3059               	movlw	89
  9486  17D7  0141               	movlb	1	; select bank1
  9487  17D8  00E8               	movwf	??_MENU_task^(0+128)
  9488  17D9  0868               	movf	??_MENU_task^(0+128),w
  9489  17DA  0140               	movlb	0	; select bank0
  9490  17DB  00B4               	movwf	TM1650_setDigit@data
  9491  17DC  3000               	movlw	0
  9492  17DD  00B5               	movwf	TM1650_setDigit@dp
  9493  17DE  00B6               	movwf	TM1650_setDigit@dp+1
  9494  17DF  3001               	movlw	1
  9495  17E0  3190  205D  3197   	fcall	_TM1650_setDigit
  9496                           
  9497                           ;menu.c: 92:             TM1650_setDigit(2, 'C', 0);
  9498  17E3  3043               	movlw	67
  9499  17E4  0141               	movlb	1	; select bank1
  9500  17E5  00E8               	movwf	??_MENU_task^(0+128)
  9501  17E6  0868               	movf	??_MENU_task^(0+128),w
  9502  17E7  0140               	movlb	0	; select bank0
  9503  17E8  00B4               	movwf	TM1650_setDigit@data
  9504  17E9  3000               	movlw	0
  9505  17EA  00B5               	movwf	TM1650_setDigit@dp
  9506  17EB  00B6               	movwf	TM1650_setDigit@dp+1
  9507  17EC  3002               	movlw	2
  9508  17ED  3190  205D  3197   	fcall	_TM1650_setDigit
  9509                           
  9510                           ;menu.c: 93:             TM1650_setDigit(3, 'L', 0);
  9511  17F0  304C               	movlw	76
  9512  17F1  0141               	movlb	1	; select bank1
  9513  17F2  00E8               	movwf	??_MENU_task^(0+128)
  9514  17F3  0868               	movf	??_MENU_task^(0+128),w
  9515  17F4  0140               	movlb	0	; select bank0
  9516  17F5  00B4               	movwf	TM1650_setDigit@data
  9517  17F6  3000               	movlw	0
  9518  17F7  00B5               	movwf	TM1650_setDigit@dp
  9519  17F8  00B6               	movwf	TM1650_setDigit@dp+1
  9520  17F9  3003               	movlw	3
  9521  17FA  3190  205D  3197   	fcall	_TM1650_setDigit
  9522                           
  9523                           ;menu.c: 94:             cycleColors();
  9524  17FD  3194  24F8         	fcall	_cycleColors
  9525  17FF  0008               	return
  9526  1800                     __end_of_MENU_task:	
  9527                           
  9528                           	psect	text17
  9529  0864                     __ptext17:	
  9530 ;; *************** function _pulseColors *****************
  9531 ;; Defined at:
  9532 ;;		line 47 in file "menu.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;		None
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1    wreg      void 
  9539 ;; Registers used:
  9540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9548 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9549 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9550 ;;Total ram usage:        1 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    8
  9553 ;; This function calls:
  9554 ;;		_LED_setHSL
  9555 ;;		___fldiv
  9556 ;;		___fleq
  9557 ;;		___flge
  9558 ;;		___flsub
  9559 ;; This function is called by:
  9560 ;;		_MENU_task
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           
  9565                           ;psect for function _pulseColors
  9566  0864                     _pulseColors:	
  9567                           
  9568                           ;menu.c: 48:     if(fadeTime == -400/10) {
  9569                           
  9570                           ;incstack = 0
  9571                           ; Regs used in _pulseColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9572  0864  0142               	movlb	2	; select bank2
  9573  0865  0828               	movf	(_fadeTime+3)^(0+256),w
  9574  0866  0140               	movlb	0	; select bank0
  9575  0867  00A3               	movwf	___fleq@ff1+3
  9576  0868  0142               	movlb	2	; select bank2
  9577  0869  0827               	movf	(_fadeTime+2)^(0+256),w
  9578  086A  0140               	movlb	0	; select bank0
  9579  086B  00A2               	movwf	___fleq@ff1+2
  9580  086C  0142               	movlb	2	; select bank2
  9581  086D  0826               	movf	(_fadeTime+1)^(0+256),w
  9582  086E  0140               	movlb	0	; select bank0
  9583  086F  00A1               	movwf	___fleq@ff1+1
  9584  0870  0142               	movlb	2	; select bank2
  9585  0871  0825               	movf	_fadeTime^(0+256),w
  9586  0872  0140               	movlb	0	; select bank0
  9587  0873  00A0               	movwf	___fleq@ff1
  9588  0874  30C2               	movlw	194
  9589  0875  00A7               	movwf	___fleq@ff2+3
  9590  0876  3020               	movlw	32
  9591  0877  00A6               	movwf	___fleq@ff2+2
  9592  0878  3000               	movlw	0
  9593  0879  00A5               	movwf	___fleq@ff2+1
  9594  087A  3000               	movlw	0
  9595  087B  00A4               	movwf	___fleq@ff2
  9596  087C  3193  23FE  3188   	fcall	___fleq
  9597  087F  1C03               	btfss	3,0
  9598  0880  28A8               	goto	l5968
  9599                           
  9600                           ;menu.c: 50:         if(hueValPulse == 360) {
  9601  0881  3068               	movlw	104
  9602  0882  0142               	movlb	2	; select bank2
  9603  0883  062F               	xorwf	_hueValPulse^(0+256),w
  9604  0884  1D03               	skipz
  9605  0885  288C               	goto	l5966
  9606  0886  0330               	decf	(_hueValPulse+1)^(0+256),w
  9607  0887  1D03               	btfss	3,2
  9608  0888  288C               	goto	l5966
  9609                           
  9610                           ;menu.c: 51:             hueValPulse = 0;
  9611  0889  01AF               	clrf	_hueValPulse^(0+256)
  9612  088A  01B0               	clrf	(_hueValPulse+1)^(0+256)
  9613                           
  9614                           ;menu.c: 52:         } else {
  9615  088B  2890               	goto	l1064
  9616  088C                     l5966:	
  9617                           
  9618                           ;menu.c: 53:             hueValPulse += 36;
  9619  088C  3024               	movlw	36
  9620  088D  07AF               	addwf	_hueValPulse^(0+256),f
  9621  088E  3000               	movlw	0
  9622  088F  3DB0               	addwfc	(_hueValPulse+1)^(0+256),f
  9623  0890                     l1064:	
  9624                           ;menu.c: 54:         }
  9625                           
  9626                           
  9627                           ;menu.c: 55:         pulseColor.H = hueValPulse;
  9628  0890  0830               	movf	(_hueValPulse+1)^(0+256),w
  9629  0891  0143               	movlb	3	; select bank3
  9630  0892  00C7               	movwf	(_pulseColor+1)^(0+384)
  9631  0893  0142               	movlb	2	; select bank2
  9632  0894  082F               	movf	_hueValPulse^(0+256),w
  9633  0895  0143               	movlb	3	; select bank3
  9634  0896  00C6               	movwf	_pulseColor^(0+384)
  9635                           
  9636                           ;menu.c: 56:         pulseColor.L = 1;
  9637  0897  303F               	movlw	63
  9638  0898  00CF               	movwf	((_pulseColor+3)^(0+384)+6)
  9639  0899  3080               	movlw	128
  9640  089A  00CE               	movwf	((_pulseColor+2)^(0+384)+6)
  9641  089B  3000               	movlw	0
  9642  089C  00CD               	movwf	((_pulseColor+1)^(0+384)+6)
  9643  089D  3000               	movlw	0
  9644  089E  00CC               	movwf	(_pulseColor^(0+384)+6)
  9645                           
  9646                           ;menu.c: 57:         fadeTime = 400/2;
  9647  089F  3043               	movlw	67
  9648  08A0  0142               	movlb	2	; select bank2
  9649  08A1  00A8               	movwf	(_fadeTime+3)^(0+256)
  9650  08A2  3048               	movlw	72
  9651  08A3  00A7               	movwf	(_fadeTime+2)^(0+256)
  9652  08A4  3000               	movlw	0
  9653  08A5  00A6               	movwf	(_fadeTime+1)^(0+256)
  9654  08A6  3000               	movlw	0
  9655  08A7  291D               	goto	L1
  9656  08A8                     l5968:	
  9657                           ;menu.c: 58:     } else if(fadeTime > 0) {
  9658                           
  9659  08A8  3000               	movlw	0
  9660  08A9  0140               	movlb	0	; select bank0
  9661  08AA  00DA               	movwf	___flge@ff1+3
  9662  08AB  3000               	movlw	0
  9663  08AC  00D9               	movwf	___flge@ff1+2
  9664  08AD  3000               	movlw	0
  9665  08AE  00D8               	movwf	___flge@ff1+1
  9666  08AF  3000               	movlw	0
  9667  08B0  00D7               	movwf	___flge@ff1
  9668  08B1  0142               	movlb	2	; select bank2
  9669  08B2  0828               	movf	(_fadeTime+3)^(0+256),w
  9670  08B3  0140               	movlb	0	; select bank0
  9671  08B4  00DE               	movwf	___flge@ff2+3
  9672  08B5  0142               	movlb	2	; select bank2
  9673  08B6  0827               	movf	(_fadeTime+2)^(0+256),w
  9674  08B7  0140               	movlb	0	; select bank0
  9675  08B8  00DD               	movwf	___flge@ff2+2
  9676  08B9  0142               	movlb	2	; select bank2
  9677  08BA  0826               	movf	(_fadeTime+1)^(0+256),w
  9678  08BB  0140               	movlb	0	; select bank0
  9679  08BC  00DC               	movwf	___flge@ff2+1
  9680  08BD  0142               	movlb	2	; select bank2
  9681  08BE  0825               	movf	_fadeTime^(0+256),w
  9682  08BF  0140               	movlb	0	; select bank0
  9683  08C0  00DB               	movwf	___flge@ff2
  9684  08C1  3196  2651  3188   	fcall	___flge
  9685  08C4  1803               	btfsc	3,0
  9686  08C5  28F2               	goto	l5972
  9687                           
  9688                           ;menu.c: 59:         pulseColor.L = fadeTime/(400);
  9689  08C6  3043               	movlw	67
  9690  08C7  0140               	movlb	0	; select bank0
  9691  08C8  00B1               	movwf	___fldiv@a+3
  9692  08C9  30C8               	movlw	200
  9693  08CA  00B0               	movwf	___fldiv@a+2
  9694  08CB  3000               	movlw	0
  9695  08CC  00AF               	movwf	___fldiv@a+1
  9696  08CD  3000               	movlw	0
  9697  08CE  00AE               	movwf	___fldiv@a
  9698  08CF  0142               	movlb	2	; select bank2
  9699  08D0  0828               	movf	(_fadeTime+3)^(0+256),w
  9700  08D1  0140               	movlb	0	; select bank0
  9701  08D2  00B5               	movwf	___fldiv@b+3
  9702  08D3  0142               	movlb	2	; select bank2
  9703  08D4  0827               	movf	(_fadeTime+2)^(0+256),w
  9704  08D5  0140               	movlb	0	; select bank0
  9705  08D6  00B4               	movwf	___fldiv@b+2
  9706  08D7  0142               	movlb	2	; select bank2
  9707  08D8  0826               	movf	(_fadeTime+1)^(0+256),w
  9708  08D9  0140               	movlb	0	; select bank0
  9709  08DA  00B3               	movwf	___fldiv@b+1
  9710  08DB  0142               	movlb	2	; select bank2
  9711  08DC  0825               	movf	_fadeTime^(0+256),w
  9712  08DD  0140               	movlb	0	; select bank0
  9713  08DE  00B2               	movwf	___fldiv@b
  9714  08DF  3186  2624  3188   	fcall	___fldiv
  9715  08E2  0140               	movlb	0	; select bank0
  9716  08E3  0831               	movf	?___fldiv+3,w
  9717  08E4  0143               	movlb	3	; select bank3
  9718  08E5  00CF               	movwf	((_pulseColor+3)^(0+384)+6)
  9719  08E6  0140               	movlb	0	; select bank0
  9720  08E7  0830               	movf	?___fldiv+2,w
  9721  08E8  0143               	movlb	3	; select bank3
  9722  08E9  00CE               	movwf	((_pulseColor+2)^(0+384)+6)
  9723  08EA  0140               	movlb	0	; select bank0
  9724  08EB  082F               	movf	?___fldiv+1,w
  9725  08EC  0143               	movlb	3	; select bank3
  9726  08ED  00CD               	movwf	((_pulseColor+1)^(0+384)+6)
  9727  08EE  0140               	movlb	0	; select bank0
  9728  08EF  082E               	movf	?___fldiv,w
  9729  08F0  0143               	movlb	3	; select bank3
  9730  08F1  00CC               	movwf	(_pulseColor^(0+384)+6)
  9731  08F2                     l5972:	
  9732                           ;menu.c: 61:     } else {
  9733                           
  9734                           ;menu.c: 60:         fadeTime -= 1;
  9735                           
  9736                           
  9737                           ;menu.c: 62:         fadeTime -= 1;
  9738  08F2  303F               	movlw	63
  9739  08F3  0140               	movlb	0	; select bank0
  9740  08F4  00DA               	movwf	___flsub@a+3
  9741  08F5  3080               	movlw	128
  9742  08F6  00D9               	movwf	___flsub@a+2
  9743  08F7  3000               	movlw	0
  9744  08F8  00D8               	movwf	___flsub@a+1
  9745  08F9  3000               	movlw	0
  9746  08FA  00D7               	movwf	___flsub@a
  9747  08FB  0142               	movlb	2	; select bank2
  9748  08FC  0828               	movf	(_fadeTime+3)^(0+256),w
  9749  08FD  0140               	movlb	0	; select bank0
  9750  08FE  00DE               	movwf	___flsub@b+3
  9751  08FF  0142               	movlb	2	; select bank2
  9752  0900  0827               	movf	(_fadeTime+2)^(0+256),w
  9753  0901  0140               	movlb	0	; select bank0
  9754  0902  00DD               	movwf	___flsub@b+2
  9755  0903  0142               	movlb	2	; select bank2
  9756  0904  0826               	movf	(_fadeTime+1)^(0+256),w
  9757  0905  0140               	movlb	0	; select bank0
  9758  0906  00DC               	movwf	___flsub@b+1
  9759  0907  0142               	movlb	2	; select bank2
  9760  0908  0825               	movf	_fadeTime^(0+256),w
  9761  0909  0140               	movlb	0	; select bank0
  9762  090A  00DB               	movwf	___flsub@b
  9763  090B  3190  20B2  3188   	fcall	___flsub
  9764  090E  0140               	movlb	0	; select bank0
  9765  090F  085A               	movf	?___flsub+3,w
  9766  0910  0142               	movlb	2	; select bank2
  9767  0911  00A8               	movwf	(_fadeTime+3)^(0+256)
  9768  0912  0140               	movlb	0	; select bank0
  9769  0913  0859               	movf	?___flsub+2,w
  9770  0914  0142               	movlb	2	; select bank2
  9771  0915  00A7               	movwf	(_fadeTime+2)^(0+256)
  9772  0916  0140               	movlb	0	; select bank0
  9773  0917  0858               	movf	?___flsub+1,w
  9774  0918  0142               	movlb	2	; select bank2
  9775  0919  00A6               	movwf	(_fadeTime+1)^(0+256)
  9776  091A  0140               	movlb	0	; select bank0
  9777  091B  0857               	movf	?___flsub,w
  9778  091C  0142               	movlb	2	; select bank2
  9779  091D                     L1:	
  9780  091D  00A5               	movwf	_fadeTime^(0+256)
  9781                           
  9782                           ;menu.c: 65:     LED_setHSL(pulseColor);
  9783  091E  30C6               	movlw	low _pulseColor
  9784  091F  0086               	movwf	6
  9785  0920  3001               	movlw	high _pulseColor
  9786  0921  0087               	movwf	7
  9787  0922  30AF               	movlw	low LED_setHSL@hsl
  9788  0923  0084               	movwf	4
  9789  0924  3000               	movlw	high LED_setHSL@hsl
  9790  0925  0085               	movwf	5
  9791  0926  300A               	movlw	10
  9792  0927  0140               	movlb	0	; select bank0
  9793  0928  00EF               	movwf	??_pulseColors
  9794  0929                     u6250:	
  9795  0929  0016               	moviw fsr1++
  9796  092A  001A               	movwi fsr0++
  9797  092B  0BEF               	decfsz	??_pulseColors,f
  9798  092C  2929               	goto	u6250
  9799  092D  3180  209A         	fcall	_LED_setHSL
  9800  092F  0008               	return
  9801  0930                     __end_of_pulseColors:	
  9802                           
  9803                           	psect	text18
  9804  102B                     __ptext18:	
  9805 ;; *************** function _menuButtons *****************
  9806 ;; Defined at:
  9807 ;;		line 15 in file "menu.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;		None
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;		None
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1    wreg      void 
  9814 ;; Registers used:
  9815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9825 ;;Total ram usage:        0 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; Hardware stack levels required when called:    5
  9828 ;; This function calls:
  9829 ;;		_BUTTONS_isClicked
  9830 ;; This function is called by:
  9831 ;;		_MENU_task
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           
  9836                           ;psect for function _menuButtons
  9837  102B                     _menuButtons:	
  9838                           
  9839                           ;menu.c: 16:     if (BUTTONS_isClicked(menu)) {
  9840                           
  9841                           ;incstack = 0
  9842                           ; Regs used in _menuButtons: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9843  102B  0142               	movlb	2	; select bank2
  9844  102C  0853               	movf	_menu^(0+256),w
  9845  102D  3191  2131  3190   	fcall	_BUTTONS_isClicked
  9846  1030  0140               	movlb	0	; select bank0
  9847  1031  0820               	movf	?_BUTTONS_isClicked,w
  9848  1032  0421               	iorwf	?_BUTTONS_isClicked+1,w
  9849  1033  1903               	btfsc	3,2
  9850  1034  0008               	return
  9851                           
  9852                           ;menu.c: 17:         if(currentState == 2) {
  9853  1035  3002               	movlw	2
  9854  1036  0142               	movlb	2	; select bank2
  9855  1037  0637               	xorwf	_currentState^(0+256),w
  9856  1038  0438               	iorwf	(_currentState+1)^(0+256),w
  9857  1039  1D03               	btfss	3,2
  9858  103A  283E               	goto	l5934
  9859                           
  9860                           ;menu.c: 18:             currentState = 0;
  9861  103B  01B7               	clrf	_currentState^(0+256)
  9862  103C  01B8               	clrf	(_currentState+1)^(0+256)
  9863                           
  9864                           ;menu.c: 19:         } else {
  9865  103D  0008               	return
  9866  103E                     l5934:	
  9867                           
  9868                           ;menu.c: 20:             currentState += 1;
  9869  103E  3001               	movlw	1
  9870  103F  07B7               	addwf	_currentState^(0+256),f
  9871  1040  3000               	movlw	0
  9872  1041  3DB8               	addwfc	(_currentState+1)^(0+256),f
  9873  1042  0008               	return
  9874  1043                     __end_of_menuButtons:	
  9875                           
  9876                           	psect	text19
  9877  1EA8                     __ptext19:	
  9878 ;; *************** function _isDMXOn *****************
  9879 ;; Defined at:
  9880 ;;		line 60 in file "dmx.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;		None
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;		None
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  1    wreg      _Bool 
  9887 ;; Registers used:
  9888 ;;		wreg
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9898 ;;Total ram usage:        0 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; Hardware stack levels required when called:    4
  9901 ;; This function calls:
  9902 ;;		Nothing
  9903 ;; This function is called by:
  9904 ;;		_MENU_task
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908                           
  9909                           ;psect for function _isDMXOn
  9910  1EA8                     _isDMXOn:	
  9911                           
  9912                           ;dmx.c: 61:     return dmxOn;
  9913                           
  9914                           ;incstack = 0
  9915                           ; Regs used in _isDMXOn: [wreg]
  9916  1EA8  0142               	movlb	2	; select bank2
  9917  1EA9  084F               	movf	_dmxOn^(0+256),w
  9918  1EAA  0008               	return
  9919  1EAB                     __end_of_isDMXOn:	
  9920                           
  9921                           	psect	text20
  9922  14F8                     __ptext20:	
  9923 ;; *************** function _cycleColors *****************
  9924 ;; Defined at:
  9925 ;;		line 27 in file "menu.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;		None
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;  color          10   62[BANK1 ] struct HSL
  9930 ;;  time            2   60[BANK1 ] unsigned short 
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9941 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9942 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9943 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9944 ;;Total ram usage:       14 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; Hardware stack levels required when called:    8
  9947 ;; This function calls:
  9948 ;;		_CLOCK_getTime
  9949 ;;		_LED_setHSL
  9950 ;; This function is called by:
  9951 ;;		_MENU_task
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           
  9956                           ;psect for function _cycleColors
  9957  14F8                     _cycleColors:	
  9958                           
  9959                           ;menu.c: 28:     time_t time = CLOCK_getTime();
  9960                           
  9961                           ;incstack = 0
  9962                           ; Regs used in _cycleColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9963  14F8  319E  26E5  3194   	fcall	_CLOCK_getTime
  9964  14FB  0140               	movlb	0	; select bank0
  9965  14FC  0821               	movf	?_CLOCK_getTime+1,w
  9966  14FD  0141               	movlb	1	; select bank1
  9967  14FE  00DD               	movwf	(cycleColors@time+1)^(0+128)
  9968  14FF  0140               	movlb	0	; select bank0
  9969  1500  0820               	movf	?_CLOCK_getTime,w
  9970  1501  0141               	movlb	1	; select bank1
  9971  1502  00DC               	movwf	cycleColors@time^(0+128)
  9972                           
  9973                           ;menu.c: 30:     if (time - lastTimeCycle < 20)
  9974  1503  0142               	movlb	2	; select bank2
  9975  1504  0835               	movf	_lastTimeCycle^(0+256),w
  9976  1505  0141               	movlb	1	; select bank1
  9977  1506  025C               	subwf	cycleColors@time^(0+128),w
  9978  1507  00DA               	movwf	??_cycleColors^(0+128)
  9979  1508  0142               	movlb	2	; select bank2
  9980  1509  0836               	movf	(_lastTimeCycle+1)^(0+256),w
  9981  150A  0141               	movlb	1	; select bank1
  9982  150B  3B5D               	subwfb	(cycleColors@time+1)^(0+128),w
  9983  150C  00DB               	movwf	(??_cycleColors+1)^(0+128)
  9984  150D  3000               	movlw	0
  9985  150E  025B               	subwf	(??_cycleColors+1)^(0+128),w
  9986  150F  3014               	movlw	20
  9987  1510  1903               	skipnz
  9988  1511  025A               	subwf	??_cycleColors^(0+128),w
  9989  1512  1C03               	btfss	3,0
  9990  1513  0008               	return
  9991                           
  9992                           ;menu.c: 32:     lastTimeCycle = time;
  9993  1514  085D               	movf	(cycleColors@time+1)^(0+128),w
  9994  1515  0142               	movlb	2	; select bank2
  9995  1516  00B6               	movwf	(_lastTimeCycle+1)^(0+256)
  9996  1517  0141               	movlb	1	; select bank1
  9997  1518  085C               	movf	cycleColors@time^(0+128),w
  9998  1519  0142               	movlb	2	; select bank2
  9999  151A  00B5               	movwf	_lastTimeCycle^(0+256)
 10000                           
 10001                           ;menu.c: 34:     if(hueValCycle == 360) {
 10002  151B  3068               	movlw	104
 10003  151C  0633               	xorwf	_hueValCycle^(0+256),w
 10004  151D  1D03               	skipz
 10005  151E  2D25               	goto	l5948
 10006  151F  0334               	decf	(_hueValCycle+1)^(0+256),w
 10007  1520  1D03               	btfss	3,2
 10008  1521  2D25               	goto	l5948
 10009                           
 10010                           ;menu.c: 35:         hueValCycle = 0;
 10011  1522  01B3               	clrf	_hueValCycle^(0+256)
 10012  1523  01B4               	clrf	(_hueValCycle+1)^(0+256)
 10013                           
 10014                           ;menu.c: 36:     } else {
 10015  1524  2D29               	goto	l5950
 10016  1525                     l5948:	
 10017                           
 10018                           ;menu.c: 37:         hueValCycle += 1;
 10019  1525  3001               	movlw	1
 10020  1526  07B3               	addwf	_hueValCycle^(0+256),f
 10021  1527  3000               	movlw	0
 10022  1528  3DB4               	addwfc	(_hueValCycle+1)^(0+256),f
 10023  1529                     l5950:	
 10024                           
 10025                           ;menu.c: 39:     struct HSL color = {hueValCycle, 1, .5};
 10026  1529  30A0               	movlw	low cycleColors@F104
 10027  152A  0086               	movwf	6
 10028  152B  3001               	movlw	high cycleColors@F104
 10029  152C  0087               	movwf	7
 10030  152D  30DE               	movlw	low cycleColors@color
 10031  152E  0084               	movwf	4
 10032  152F  3000               	movlw	high cycleColors@color
 10033  1530  0085               	movwf	5
 10034  1531  300A               	movlw	10
 10035  1532  0141               	movlb	1	; select bank1
 10036  1533  00DA               	movwf	??_cycleColors^(0+128)
 10037  1534                     u6200:	
 10038  1534  0016               	moviw fsr1++
 10039  1535  001A               	movwi fsr0++
 10040  1536  0BDA               	decfsz	??_cycleColors^(0+128),f
 10041  1537  2D34               	goto	u6200
 10042  1538  0142               	movlb	2	; select bank2
 10043  1539  0834               	movf	(_hueValCycle+1)^(0+256),w
 10044  153A  0141               	movlb	1	; select bank1
 10045  153B  00DF               	movwf	(cycleColors@color+1)^(0+128)
 10046  153C  0142               	movlb	2	; select bank2
 10047  153D  0833               	movf	_hueValCycle^(0+256),w
 10048  153E  0141               	movlb	1	; select bank1
 10049  153F  00DE               	movwf	cycleColors@color^(0+128)
 10050  1540  303F               	movlw	63
 10051  1541  00E3               	movwf	((cycleColors@color+3)^(0+128)+2)
 10052  1542  3080               	movlw	128
 10053  1543  00E2               	movwf	((cycleColors@color+2)^(0+128)+2)
 10054  1544  3000               	movlw	0
 10055  1545  00E1               	movwf	((cycleColors@color+1)^(0+128)+2)
 10056  1546  3000               	movlw	0
 10057  1547  00E0               	movwf	(cycleColors@color^(0+128)+2)
 10058  1548  303F               	movlw	63
 10059  1549  00E7               	movwf	((cycleColors@color+3)^(0+128)+6)
 10060  154A  3000               	movlw	0
 10061  154B  00E6               	movwf	((cycleColors@color+2)^(0+128)+6)
 10062  154C  3000               	movlw	0
 10063  154D  00E5               	movwf	((cycleColors@color+1)^(0+128)+6)
 10064  154E  3000               	movlw	0
 10065  154F  00E4               	movwf	(cycleColors@color^(0+128)+6)
 10066                           
 10067                           ;menu.c: 40:     LED_setHSL(color);
 10068  1550  30DE               	movlw	low cycleColors@color
 10069  1551  0086               	movwf	6
 10070  1552  3000               	movlw	high cycleColors@color
 10071  1553  0087               	movwf	7
 10072  1554  30AF               	movlw	low LED_setHSL@hsl
 10073  1555  0084               	movwf	4
 10074  1556  3000               	movlw	high LED_setHSL@hsl
 10075  1557  0085               	movwf	5
 10076  1558  300A               	movlw	10
 10077  1559  00DA               	movwf	??_cycleColors^(0+128)
 10078  155A                     u6210:	
 10079  155A  0016               	moviw fsr1++
 10080  155B  001A               	movwi fsr0++
 10081  155C  0BDA               	decfsz	??_cycleColors^(0+128),f
 10082  155D  2D5A               	goto	u6210
 10083  155E  3180  209A         	fcall	_LED_setHSL
 10084  1560  0008               	return
 10085  1561                     __end_of_cycleColors:	
 10086                           
 10087                           	psect	text21
 10088  1561                     __ptext21:	
 10089 ;; *************** function _adrControl_DMX *****************
 10090 ;; Defined at:
 10091 ;;		line 51 in file "controller.c"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;		None
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;  time            2   36[BANK0 ] unsigned short 
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  1    wreg      void 
 10098 ;; Registers used:
 10099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10100 ;; Tracked objects:
 10101 ;;		On entry : 0/0
 10102 ;;		On exit  : 0/0
 10103 ;;		Unchanged: 0/0
 10104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10106 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10107 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10108 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10109 ;;Total ram usage:        4 bytes
 10110 ;; Hardware stack levels used:    1
 10111 ;; Hardware stack levels required when called:   11
 10112 ;; This function calls:
 10113 ;;		_BUTTONS_isClicked
 10114 ;;		_CLOCK_getTime
 10115 ;;		_TM1650_enable
 10116 ;;		_address_dec
 10117 ;;		_address_inc
 10118 ;; This function is called by:
 10119 ;;		_MENU_task
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           
 10124                           ;psect for function _adrControl_DMX
 10125  1561                     _adrControl_DMX:	
 10126                           
 10127                           ;controller.c: 52:     time_t time = CLOCK_getTime();
 10128                           
 10129                           ;incstack = 0
 10130                           ; Regs used in _adrControl_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10131  1561  319E  26E5  3195   	fcall	_CLOCK_getTime
 10132  1564  0140               	movlb	0	; select bank0
 10133  1565  0821               	movf	?_CLOCK_getTime+1,w
 10134  1566  00C5               	movwf	adrControl_DMX@time+1
 10135  1567  0820               	movf	?_CLOCK_getTime,w
 10136  1568  00C4               	movwf	adrControl_DMX@time
 10137                           
 10138                           ;controller.c: 54:     if (time - lastTime < 35)
 10139  1569  0142               	movlb	2	; select bank2
 10140  156A  0829               	movf	controller@lastTime^(0+256),w
 10141  156B  0140               	movlb	0	; select bank0
 10142  156C  0244               	subwf	adrControl_DMX@time,w
 10143  156D  00C2               	movwf	??_adrControl_DMX
 10144  156E  0142               	movlb	2	; select bank2
 10145  156F  082A               	movf	(controller@lastTime+1)^(0+256),w
 10146  1570  0140               	movlb	0	; select bank0
 10147  1571  3B45               	subwfb	adrControl_DMX@time+1,w
 10148  1572  00C3               	movwf	??_adrControl_DMX+1
 10149  1573  3000               	movlw	0
 10150  1574  0243               	subwf	??_adrControl_DMX+1,w
 10151  1575  3023               	movlw	35
 10152  1576  1903               	skipnz
 10153  1577  0242               	subwf	??_adrControl_DMX,w
 10154  1578  1C03               	btfss	3,0
 10155  1579  0008               	return
 10156                           
 10157                           ;controller.c: 56:     lastTime = time;
 10158  157A  0845               	movf	adrControl_DMX@time+1,w
 10159  157B  0142               	movlb	2	; select bank2
 10160  157C  00AA               	movwf	(controller@lastTime+1)^(0+256)
 10161  157D  0140               	movlb	0	; select bank0
 10162  157E  0844               	movf	adrControl_DMX@time,w
 10163  157F  0142               	movlb	2	; select bank2
 10164  1580  00A9               	movwf	controller@lastTime^(0+256)
 10165                           
 10166                           ;controller.c: 58:     if (BUTTONS_isClicked(up)) {
 10167  1581  0856               	movf	_up^(0+256),w
 10168  1582  3191  2131  3195   	fcall	_BUTTONS_isClicked
 10169  1585  0140               	movlb	0	; select bank0
 10170  1586  0820               	movf	?_BUTTONS_isClicked,w
 10171  1587  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10172  1588  1903               	btfsc	3,2
 10173  1589  2D99               	goto	l5992
 10174                           
 10175                           ;controller.c: 59:         address_inc();
 10176  158A  319F  27D3  3195   	fcall	_address_inc
 10177                           
 10178                           ;controller.c: 60:         lastActiveTime = time;
 10179  158D  0140               	movlb	0	; select bank0
 10180  158E  0845               	movf	adrControl_DMX@time+1,w
 10181  158F  0142               	movlb	2	; select bank2
 10182  1590  00AC               	movwf	(_lastActiveTime+1)^(0+256)
 10183  1591  0140               	movlb	0	; select bank0
 10184  1592  0844               	movf	adrControl_DMX@time,w
 10185  1593  0142               	movlb	2	; select bank2
 10186  1594  00AB               	movwf	_lastActiveTime^(0+256)
 10187                           
 10188                           ;controller.c: 61:         TM1650_enable(1);
 10189  1595  3001               	movlw	1
 10190  1596  319F  2794         	fcall	_TM1650_enable
 10191                           
 10192                           ;controller.c: 62:     } else if (BUTTONS_isClicked(down)) {
 10193  1598  0008               	return
 10194  1599                     l5992:	
 10195  1599  0142               	movlb	2	; select bank2
 10196  159A  0855               	movf	_down^(0+256),w
 10197  159B  3191  2131  3195   	fcall	_BUTTONS_isClicked
 10198  159E  0140               	movlb	0	; select bank0
 10199  159F  0820               	movf	?_BUTTONS_isClicked,w
 10200  15A0  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10201  15A1  1903               	btfsc	3,2
 10202  15A2  2DB2               	goto	l6000
 10203                           
 10204                           ;controller.c: 63:         address_dec();
 10205  15A3  319F  27A9  3195   	fcall	_address_dec
 10206                           
 10207                           ;controller.c: 64:         lastActiveTime = time;
 10208  15A6  0140               	movlb	0	; select bank0
 10209  15A7  0845               	movf	adrControl_DMX@time+1,w
 10210  15A8  0142               	movlb	2	; select bank2
 10211  15A9  00AC               	movwf	(_lastActiveTime+1)^(0+256)
 10212  15AA  0140               	movlb	0	; select bank0
 10213  15AB  0844               	movf	adrControl_DMX@time,w
 10214  15AC  0142               	movlb	2	; select bank2
 10215  15AD  00AB               	movwf	_lastActiveTime^(0+256)
 10216                           
 10217                           ;controller.c: 65:         TM1650_enable(1);
 10218  15AE  3001               	movlw	1
 10219  15AF  319F  2794         	fcall	_TM1650_enable
 10220                           
 10221                           ;controller.c: 66:     } else {
 10222  15B1  0008               	return
 10223  15B2                     l6000:	
 10224                           
 10225                           ;controller.c: 67:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
 10226  15B2  319E  26E5  3195   	fcall	_CLOCK_getTime
 10227  15B5  0142               	movlb	2	; select bank2
 10228  15B6  082B               	movf	_lastActiveTime^(0+256),w
 10229  15B7  0140               	movlb	0	; select bank0
 10230  15B8  0220               	subwf	?_CLOCK_getTime,w
 10231  15B9  00C2               	movwf	??_adrControl_DMX
 10232  15BA  0142               	movlb	2	; select bank2
 10233  15BB  082C               	movf	(_lastActiveTime+1)^(0+256),w
 10234  15BC  0140               	movlb	0	; select bank0
 10235  15BD  3B21               	subwfb	?_CLOCK_getTime+1,w
 10236  15BE  00C3               	movwf	??_adrControl_DMX+1
 10237  15BF  3013               	movlw	19
 10238  15C0  0243               	subwf	??_adrControl_DMX+1,w
 10239  15C1  3088               	movlw	136
 10240  15C2  1903               	skipnz
 10241  15C3  0242               	subwf	??_adrControl_DMX,w
 10242  15C4  1C03               	skipc
 10243  15C5  0008               	return
 10244                           
 10245                           ;controller.c: 68:             TM1650_enable(0);
 10246  15C6  3000               	movlw	0
 10247  15C7  319F  2794  3195   	fcall	_TM1650_enable
 10248                           
 10249                           ;controller.c: 69:             lastActiveTime = CLOCK_getTime() - 5001;
 10250  15CA  319E  26E5         	fcall	_CLOCK_getTime
 10251  15CC  0140               	movlb	0	; select bank0
 10252  15CD  0820               	movf	?_CLOCK_getTime,w
 10253  15CE  3E77               	addlw	119
 10254  15CF  0142               	movlb	2	; select bank2
 10255  15D0  00AB               	movwf	_lastActiveTime^(0+256)
 10256  15D1  30EC               	movlw	236
 10257  15D2  0140               	movlb	0	; select bank0
 10258  15D3  3D21               	addwfc	?_CLOCK_getTime+1,w
 10259  15D4  0142               	movlb	2	; select bank2
 10260  15D5  00AC               	movwf	(_lastActiveTime+1)^(0+256)
 10261  15D6  0008               	return
 10262  15D7                     __end_of_adrControl_DMX:	
 10263                           
 10264                           	psect	text22
 10265  1FD3                     __ptext22:	
 10266 ;; *************** function _address_inc *****************
 10267 ;; Defined at:
 10268 ;;		line 19 in file "controller.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;		None
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;		None
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  1    wreg      void 
 10275 ;; Registers used:
 10276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10286 ;;Total ram usage:        0 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:   10
 10289 ;; This function calls:
 10290 ;;		_TM1650_fastPrintNum
 10291 ;; This function is called by:
 10292 ;;		_adrControl_DMX
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           
 10297                           ;psect for function _address_inc
 10298  1FD3                     _address_inc:	
 10299                           
 10300                           ;controller.c: 21:     if(address == 512) {
 10301                           
 10302                           ;incstack = 0
 10303                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10304  1FD3  3002               	movlw	2
 10305  1FD4  067B               	xorwf	_address+1,w
 10306  1FD5  047A               	iorwf	_address,w
 10307  1FD6  1D03               	btfss	3,2
 10308  1FD7  2FDD               	goto	l5708
 10309                           
 10310                           ;controller.c: 22:         address = 1;
 10311  1FD8  3001               	movlw	1
 10312  1FD9  00FA               	movwf	_address
 10313  1FDA  3000               	movlw	0
 10314  1FDB  00FB               	movwf	_address+1
 10315                           
 10316                           ;controller.c: 23:     } else {
 10317  1FDC  2FE1               	goto	l5710
 10318  1FDD                     l5708:	
 10319                           
 10320                           ;controller.c: 24:         address++;
 10321  1FDD  3001               	movlw	1
 10322  1FDE  07FA               	addwf	_address,f
 10323  1FDF  3000               	movlw	0
 10324  1FE0  3DFB               	addwfc	_address+1,f
 10325  1FE1                     l5710:	
 10326                           
 10327                           ;controller.c: 28:     TM1650_fastPrintNum(address);
 10328  1FE1  087B               	movf	_address+1,w
 10329  1FE2  0140               	movlb	0	; select bank0
 10330  1FE3  00BC               	movwf	TM1650_fastPrintNum@num+1
 10331  1FE4  087A               	movf	_address,w
 10332  1FE5  00BB               	movwf	TM1650_fastPrintNum@num
 10333  1FE6  3195  25D7         	fcall	_TM1650_fastPrintNum
 10334  1FE8  0008               	return
 10335  1FE9                     __end_of_address_inc:	
 10336                           
 10337                           	psect	text23
 10338  1FA9                     __ptext23:	
 10339 ;; *************** function _address_dec *****************
 10340 ;; Defined at:
 10341 ;;		line 34 in file "controller.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;		None
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;		None
 10346 ;; Return value:  Size  Location     Type
 10347 ;;                  1    wreg      void 
 10348 ;; Registers used:
 10349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10350 ;; Tracked objects:
 10351 ;;		On entry : 0/0
 10352 ;;		On exit  : 0/0
 10353 ;;		Unchanged: 0/0
 10354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10359 ;;Total ram usage:        0 bytes
 10360 ;; Hardware stack levels used:    1
 10361 ;; Hardware stack levels required when called:   10
 10362 ;; This function calls:
 10363 ;;		_TM1650_fastPrintNum
 10364 ;; This function is called by:
 10365 ;;		_adrControl_DMX
 10366 ;; This function uses a non-reentrant model
 10367 ;;
 10368                           
 10369                           
 10370                           ;psect for function _address_dec
 10371  1FA9                     _address_dec:	
 10372                           
 10373                           ;controller.c: 36:     if(address == 1) {
 10374                           
 10375                           ;incstack = 0
 10376                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10377  1FA9  037A               	decf	_address,w
 10378  1FAA  047B               	iorwf	_address+1,w
 10379  1FAB  1D03               	btfss	3,2
 10380  1FAC  2FB2               	goto	l5716
 10381                           
 10382                           ;controller.c: 37:         address = 512;
 10383  1FAD  3000               	movlw	0
 10384  1FAE  00FA               	movwf	_address
 10385  1FAF  3002               	movlw	2
 10386  1FB0  00FB               	movwf	_address+1
 10387                           
 10388                           ;controller.c: 38:     } else {
 10389  1FB1  2FB6               	goto	l5718
 10390  1FB2                     l5716:	
 10391                           
 10392                           ;controller.c: 39:         address--;
 10393  1FB2  3001               	movlw	1
 10394  1FB3  02FA               	subwf	_address,f
 10395  1FB4  3000               	movlw	0
 10396  1FB5  3BFB               	subwfb	_address+1,f
 10397  1FB6                     l5718:	
 10398                           
 10399                           ;controller.c: 43:     TM1650_fastPrintNum(address);
 10400  1FB6  087B               	movf	_address+1,w
 10401  1FB7  0140               	movlb	0	; select bank0
 10402  1FB8  00BC               	movwf	TM1650_fastPrintNum@num+1
 10403  1FB9  087A               	movf	_address,w
 10404  1FBA  00BB               	movwf	TM1650_fastPrintNum@num
 10405  1FBB  3195  25D7         	fcall	_TM1650_fastPrintNum
 10406  1FBD  0008               	return
 10407  1FBE                     __end_of_address_dec:	
 10408                           
 10409                           	psect	text24
 10410  15D7                     __ptext24:	
 10411 ;; *************** function _TM1650_fastPrintNum *****************
 10412 ;; Defined at:
 10413 ;;		line 36 in file "tm1650.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;  num             2   27[BANK0 ] unsigned short 
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;  numWrite        2   30[BANK0 ] int 
 10418 ;;  i               2   32[BANK0 ] int 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      void 
 10421 ;; Registers used:
 10422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10429 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10430 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10431 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10432 ;;Total ram usage:        7 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    9
 10435 ;; This function calls:
 10436 ;;		_TM1650_setDigit
 10437 ;;		___lwdiv
 10438 ;;		___lwmod
 10439 ;; This function is called by:
 10440 ;;		_address_inc
 10441 ;;		_address_dec
 10442 ;;		_adrControl_init
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446                           
 10447                           ;psect for function _TM1650_fastPrintNum
 10448  15D7                     _TM1650_fastPrintNum:	
 10449                           
 10450                           ;tm1650.c: 37:     if(num > 9999) {
 10451                           
 10452                           ;incstack = 0
 10453                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10454  15D7  3027               	movlw	39
 10455  15D8  0140               	movlb	0	; select bank0
 10456  15D9  023C               	subwf	TM1650_fastPrintNum@num+1,w
 10457  15DA  3010               	movlw	16
 10458  15DB  1903               	skipnz
 10459  15DC  023B               	subwf	TM1650_fastPrintNum@num,w
 10460  15DD  1C03               	skipc
 10461  15DE  2E0E               	goto	l5572
 10462                           
 10463                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
 10464  15DF  3045               	movlw	69
 10465  15E0  00BD               	movwf	??_TM1650_fastPrintNum
 10466  15E1  083D               	movf	??_TM1650_fastPrintNum,w
 10467  15E2  00B4               	movwf	TM1650_setDigit@data
 10468  15E3  3000               	movlw	0
 10469  15E4  00B5               	movwf	TM1650_setDigit@dp
 10470  15E5  00B6               	movwf	TM1650_setDigit@dp+1
 10471  15E6  3000               	movlw	0
 10472  15E7  3190  205D  3195   	fcall	_TM1650_setDigit
 10473                           
 10474                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
 10475  15EA  3045               	movlw	69
 10476  15EB  0140               	movlb	0	; select bank0
 10477  15EC  00BD               	movwf	??_TM1650_fastPrintNum
 10478  15ED  083D               	movf	??_TM1650_fastPrintNum,w
 10479  15EE  00B4               	movwf	TM1650_setDigit@data
 10480  15EF  3000               	movlw	0
 10481  15F0  00B5               	movwf	TM1650_setDigit@dp
 10482  15F1  00B6               	movwf	TM1650_setDigit@dp+1
 10483  15F2  3001               	movlw	1
 10484  15F3  3190  205D  3195   	fcall	_TM1650_setDigit
 10485                           
 10486                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
 10487  15F6  3045               	movlw	69
 10488  15F7  0140               	movlb	0	; select bank0
 10489  15F8  00BD               	movwf	??_TM1650_fastPrintNum
 10490  15F9  083D               	movf	??_TM1650_fastPrintNum,w
 10491  15FA  00B4               	movwf	TM1650_setDigit@data
 10492  15FB  3000               	movlw	0
 10493  15FC  00B5               	movwf	TM1650_setDigit@dp
 10494  15FD  00B6               	movwf	TM1650_setDigit@dp+1
 10495  15FE  3002               	movlw	2
 10496  15FF  3190  205D  3195   	fcall	_TM1650_setDigit
 10497                           
 10498                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
 10499  1602  3045               	movlw	69
 10500  1603  0140               	movlb	0	; select bank0
 10501  1604  00BD               	movwf	??_TM1650_fastPrintNum
 10502  1605  083D               	movf	??_TM1650_fastPrintNum,w
 10503  1606  00B4               	movwf	TM1650_setDigit@data
 10504  1607  3000               	movlw	0
 10505  1608  00B5               	movwf	TM1650_setDigit@dp
 10506  1609  00B6               	movwf	TM1650_setDigit@dp+1
 10507  160A  3003               	movlw	3
 10508  160B  3190  205D         	fcall	_TM1650_setDigit
 10509                           
 10510                           ;tm1650.c: 42:     } else {
 10511  160D  0008               	return
 10512  160E                     l5572:	
 10513                           
 10514                           ;tm1650.c: 43:         int i=0;
 10515  160E  01C0               	clrf	TM1650_fastPrintNum@i
 10516  160F  01C1               	clrf	TM1650_fastPrintNum@i+1
 10517                           
 10518                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
 10519  1610  01C0               	clrf	TM1650_fastPrintNum@i
 10520  1611  01C1               	clrf	TM1650_fastPrintNum@i+1
 10521  1612                     l5578:	
 10522                           
 10523                           ;tm1650.c: 45:             int numWrite = num %10;
 10524  1612  300A               	movlw	10
 10525  1613  0140               	movlb	0	; select bank0
 10526  1614  00A0               	movwf	___lwmod@divisor
 10527  1615  3000               	movlw	0
 10528  1616  00A1               	movwf	___lwmod@divisor+1
 10529  1617  083C               	movf	TM1650_fastPrintNum@num+1,w
 10530  1618  00A3               	movwf	___lwmod@dividend+1
 10531  1619  083B               	movf	TM1650_fastPrintNum@num,w
 10532  161A  00A2               	movwf	___lwmod@dividend
 10533  161B  3192  2211  3195   	fcall	___lwmod
 10534  161E  0140               	movlb	0	; select bank0
 10535  161F  0821               	movf	?___lwmod+1,w
 10536  1620  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
 10537  1621  0820               	movf	?___lwmod,w
 10538  1622  00BE               	movwf	TM1650_fastPrintNum@numWrite
 10539                           
 10540                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
 10541  1623  083E               	movf	TM1650_fastPrintNum@numWrite,w
 10542  1624  3E30               	addlw	48
 10543  1625  00BD               	movwf	??_TM1650_fastPrintNum
 10544  1626  083D               	movf	??_TM1650_fastPrintNum,w
 10545  1627  00B4               	movwf	TM1650_setDigit@data
 10546  1628  3000               	movlw	0
 10547  1629  00B5               	movwf	TM1650_setDigit@dp
 10548  162A  00B6               	movwf	TM1650_setDigit@dp+1
 10549  162B  0840               	movf	TM1650_fastPrintNum@i,w
 10550  162C  3C03               	sublw	3
 10551  162D  3190  205D  3195   	fcall	_TM1650_setDigit
 10552                           
 10553                           ;tm1650.c: 47:             num = num/10;
 10554  1630  300A               	movlw	10
 10555  1631  0140               	movlb	0	; select bank0
 10556  1632  00A0               	movwf	___lwdiv@divisor
 10557  1633  3000               	movlw	0
 10558  1634  00A1               	movwf	___lwdiv@divisor+1
 10559  1635  083C               	movf	TM1650_fastPrintNum@num+1,w
 10560  1636  00A3               	movwf	___lwdiv@dividend+1
 10561  1637  083B               	movf	TM1650_fastPrintNum@num,w
 10562  1638  00A2               	movwf	___lwdiv@dividend
 10563  1639  3192  226B  3195   	fcall	___lwdiv
 10564  163C  0140               	movlb	0	; select bank0
 10565  163D  0821               	movf	?___lwdiv+1,w
 10566  163E  00BC               	movwf	TM1650_fastPrintNum@num+1
 10567  163F  0820               	movf	?___lwdiv,w
 10568  1640  00BB               	movwf	TM1650_fastPrintNum@num
 10569                           
 10570                           ;tm1650.c: 48:         }
 10571  1641  3001               	movlw	1
 10572  1642  07C0               	addwf	TM1650_fastPrintNum@i,f
 10573  1643  3000               	movlw	0
 10574  1644  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
 10575  1645  0841               	movf	TM1650_fastPrintNum@i+1,w
 10576  1646  3A80               	xorlw	128
 10577  1647  00BD               	movwf	??_TM1650_fastPrintNum
 10578  1648  3080               	movlw	128
 10579  1649  023D               	subwf	??_TM1650_fastPrintNum,w
 10580  164A  1D03               	skipz
 10581  164B  2E4E               	goto	u5935
 10582  164C  3004               	movlw	4
 10583  164D  0240               	subwf	TM1650_fastPrintNum@i,w
 10584  164E                     u5935:	
 10585  164E  1803               	btfsc	3,0
 10586  164F  0008               	return
 10587  1650  2E12               	goto	l5578
 10588  1651                     __end_of_TM1650_fastPrintNum:	
 10589                           
 10590                           	psect	text25
 10591  1211                     __ptext25:	
 10592 ;; *************** function ___lwmod *****************
 10593 ;; Defined at:
 10594 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;  divisor         2    0[BANK0 ] unsigned int 
 10597 ;;  dividend        2    2[BANK0 ] unsigned int 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  counter         1    5[BANK0 ] unsigned char 
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  2    0[BANK0 ] unsigned int 
 10602 ;; Registers used:
 10603 ;;		wreg, status,2, status,0
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10609 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10612 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10613 ;;Total ram usage:        6 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; Hardware stack levels required when called:    4
 10616 ;; This function calls:
 10617 ;;		Nothing
 10618 ;; This function is called by:
 10619 ;;		_TM1650_fastPrintNum
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           
 10624                           ;psect for function ___lwmod
 10625  1211                     ___lwmod:	
 10626                           
 10627                           ;incstack = 0
 10628                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10629  1211  0140               	movlb	0	; select bank0
 10630  1212  0820               	movf	___lwmod@divisor,w
 10631  1213  0421               	iorwf	___lwmod@divisor+1,w
 10632  1214  1903               	btfsc	3,2
 10633  1215  2A39               	goto	l5560
 10634  1216  01A5               	clrf	___lwmod@counter
 10635  1217  0AA5               	incf	___lwmod@counter,f
 10636  1218                     l5550:	
 10637  1218  1BA1               	btfsc	___lwmod@divisor+1,7
 10638  1219  2A24               	goto	l5552
 10639  121A  3001               	movlw	1
 10640  121B                     u5875:	
 10641  121B  35A0               	lslf	___lwmod@divisor,f
 10642  121C  0DA1               	rlf	___lwmod@divisor+1,f
 10643  121D  0B89               	decfsz	9,f
 10644  121E  2A1B               	goto	u5875
 10645  121F  3001               	movlw	1
 10646  1220  00A4               	movwf	??___lwmod
 10647  1221  0824               	movf	??___lwmod,w
 10648  1222  07A5               	addwf	___lwmod@counter,f
 10649  1223  2A18               	goto	l5550
 10650  1224                     l5552:	
 10651  1224  0821               	movf	___lwmod@divisor+1,w
 10652  1225  0223               	subwf	___lwmod@dividend+1,w
 10653  1226  1D03               	skipz
 10654  1227  2A2A               	goto	u5895
 10655  1228  0820               	movf	___lwmod@divisor,w
 10656  1229  0222               	subwf	___lwmod@dividend,w
 10657  122A                     u5895:	
 10658  122A  1C03               	skipc
 10659  122B  2A30               	goto	l5556
 10660  122C  0820               	movf	___lwmod@divisor,w
 10661  122D  02A2               	subwf	___lwmod@dividend,f
 10662  122E  0821               	movf	___lwmod@divisor+1,w
 10663  122F  3BA3               	subwfb	___lwmod@dividend+1,f
 10664  1230                     l5556:	
 10665  1230  3001               	movlw	1
 10666  1231                     u5905:	
 10667  1231  36A1               	lsrf	___lwmod@divisor+1,f
 10668  1232  0CA0               	rrf	___lwmod@divisor,f
 10669  1233  0B89               	decfsz	9,f
 10670  1234  2A31               	goto	u5905
 10671  1235  3001               	movlw	1
 10672  1236  02A5               	subwf	___lwmod@counter,f
 10673  1237  1D03               	btfss	3,2
 10674  1238  2A24               	goto	l5552
 10675  1239                     l5560:	
 10676  1239  0823               	movf	___lwmod@dividend+1,w
 10677  123A  00A1               	movwf	?___lwmod+1
 10678  123B  0822               	movf	___lwmod@dividend,w
 10679  123C  00A0               	movwf	?___lwmod
 10680  123D  0008               	return
 10681  123E                     __end_of___lwmod:	
 10682                           
 10683                           	psect	text26
 10684  105D                     __ptext26:	
 10685 ;; *************** function _TM1650_setDigit *****************
 10686 ;; Defined at:
 10687 ;;		line 24 in file "tm1650.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  digit           1    wreg     unsigned char 
 10690 ;;  data            1   20[BANK0 ] unsigned char 
 10691 ;;  dp              2   21[BANK0 ] int 
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;  digit           1   26[BANK0 ] unsigned char 
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  1    wreg      void 
 10696 ;; Registers used:
 10697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10703 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10704 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10705 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10706 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10707 ;;Total ram usage:        7 bytes
 10708 ;; Hardware stack levels used:    1
 10709 ;; Hardware stack levels required when called:    8
 10710 ;; This function calls:
 10711 ;;		_writeData
 10712 ;; This function is called by:
 10713 ;;		_TM1650_fastPrintNum
 10714 ;;		_MENU_task
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           
 10719                           ;psect for function _TM1650_setDigit
 10720  105D                     _TM1650_setDigit:	
 10721                           
 10722                           ;incstack = 0
 10723                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10724                           ;TM1650_setDigit@digit stored from wreg
 10725  105D  0140               	movlb	0	; select bank0
 10726  105E  00BA               	movwf	TM1650_setDigit@digit
 10727                           
 10728                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
 10729  105F  0834               	movf	TM1650_setDigit@data,w
 10730  1060  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 10731  1061  0084               	movwf	4
 10732  1062  3097               	movlw	high ((_charTable+65504)| (0+32768))
 10733  1063  1803               	skipnc
 10734  1064  3E01               	addlw	1
 10735  1065  0085               	movwf	5
 10736  1066  0800               	movf	0,w	;code access
 10737  1067  00B7               	movwf	??_TM1650_setDigit
 10738  1068  0835               	movf	TM1650_setDigit@dp,w
 10739  1069  00B8               	movwf	??_TM1650_setDigit+1
 10740  106A  3006               	movlw	6
 10741  106B                     u5635:	
 10742  106B  35B8               	lslf	??_TM1650_setDigit+1,f
 10743  106C  3EFF               	addlw	-1
 10744  106D  1D03               	skipz
 10745  106E  286B               	goto	u5635
 10746  106F  3538               	lslf	??_TM1650_setDigit+1,w
 10747  1070  0437               	iorwf	??_TM1650_setDigit,w
 10748  1071  00B9               	movwf	??_TM1650_setDigit+2
 10749  1072  0839               	movf	??_TM1650_setDigit+2,w
 10750  1073  00AE               	movwf	writeData@data
 10751  1074  083A               	movf	TM1650_setDigit@digit,w
 10752  1075  3E34               	addlw	52
 10753  1076  3190  2095         	fcall	_writeData
 10754  1078  0008               	return
 10755  1079                     __end_of_TM1650_setDigit:	
 10756                           
 10757                           	psect	text27
 10758  1F94                     __ptext27:	
 10759 ;; *************** function _TM1650_enable *****************
 10760 ;; Defined at:
 10761 ;;		line 56 in file "tm1650.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;  enable          1    wreg     _Bool 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  enable          1   20[BANK0 ] _Bool 
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  1    wreg      void 
 10768 ;; Registers used:
 10769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10778 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10779 ;;Total ram usage:        1 bytes
 10780 ;; Hardware stack levels used:    1
 10781 ;; Hardware stack levels required when called:    8
 10782 ;; This function calls:
 10783 ;;		_writeData
 10784 ;; This function is called by:
 10785 ;;		_TM1650_init
 10786 ;;		_MENU_task
 10787 ;;		_adrControl_DMX
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           
 10792                           ;psect for function _TM1650_enable
 10793  1F94                     _TM1650_enable:	
 10794                           
 10795                           ;incstack = 0
 10796                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10797                           ;TM1650_enable@enable stored from wreg
 10798  1F94  0140               	movlb	0	; select bank0
 10799  1F95  00B4               	movwf	TM1650_enable@enable
 10800                           
 10801                           ;tm1650.c: 57:     if(enable) {
 10802  1F96  0834               	movf	TM1650_enable@enable,w
 10803  1F97  1903               	btfsc	3,2
 10804  1F98  2FA2               	goto	l5642
 10805                           
 10806                           ;tm1650.c: 58:         writeData(0x24, 1);
 10807  1F99  01AE               	clrf	writeData@data
 10808  1F9A  0AAE               	incf	writeData@data,f
 10809  1F9B  3024               	movlw	36
 10810  1F9C  3190  2095         	fcall	_writeData
 10811                           
 10812                           ;tm1650.c: 59:         isOn = 1;
 10813  1F9E  0142               	movlb	2	; select bank2
 10814  1F9F  01D7               	clrf	_isOn^(0+256)
 10815  1FA0  0AD7               	incf	_isOn^(0+256),f
 10816                           
 10817                           ;tm1650.c: 60:     } else {
 10818  1FA1  0008               	return
 10819  1FA2                     l5642:	
 10820                           
 10821                           ;tm1650.c: 61:         writeData(0x24, 0);
 10822  1FA2  01AE               	clrf	writeData@data
 10823  1FA3  3024               	movlw	36
 10824  1FA4  3190  2095         	fcall	_writeData
 10825                           
 10826                           ;tm1650.c: 62:         isOn = 0;
 10827  1FA6  0142               	movlb	2	; select bank2
 10828  1FA7  01D7               	clrf	_isOn^(0+256)
 10829  1FA8  0008               	return
 10830  1FA9                     __end_of_TM1650_enable:	
 10831                           
 10832                           	psect	text28
 10833  1095                     __ptext28:	
 10834 ;; *************** function _writeData *****************
 10835 ;; Defined at:
 10836 ;;		line 18 in file "tm1650.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;  address         1    wreg     unsigned char 
 10839 ;;  data            1   14[BANK0 ] unsigned char 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  address         1   18[BANK0 ] unsigned char 
 10842 ;;  status          1   19[BANK0 ] volatile enum E10866
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1    wreg      void 
 10845 ;; Registers used:
 10846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10852 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10854 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10855 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10856 ;;Total ram usage:        6 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; Hardware stack levels required when called:    7
 10859 ;; This function calls:
 10860 ;;		_I2C1_MasterWrite
 10861 ;; This function is called by:
 10862 ;;		_TM1650_setDigit
 10863 ;;		_TM1650_enable
 10864 ;; This function uses a non-reentrant model
 10865 ;;
 10866                           
 10867                           
 10868                           ;psect for function _writeData
 10869  1095                     _writeData:	
 10870                           
 10871                           ;incstack = 0
 10872                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10873                           ;writeData@address stored from wreg
 10874  1095  0140               	movlb	0	; select bank0
 10875  1096  00B2               	movwf	writeData@address
 10876                           
 10877                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10878  1097  3002               	movlw	2
 10879  1098  00AF               	movwf	??_writeData
 10880  1099  082F               	movf	??_writeData,w
 10881  109A  00B3               	movwf	writeData@status	;volatile
 10882                           
 10883                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
 10884  109B  01A7               	clrf	I2C1_MasterWrite@length
 10885  109C  0AA7               	incf	I2C1_MasterWrite@length,f
 10886  109D  0832               	movf	writeData@address,w
 10887  109E  00AF               	movwf	??_writeData
 10888  109F  01B0               	clrf	??_writeData+1
 10889  10A0  082F               	movf	??_writeData,w
 10890  10A1  00A8               	movwf	I2C1_MasterWrite@address
 10891  10A2  0830               	movf	??_writeData+1,w
 10892  10A3  00A9               	movwf	I2C1_MasterWrite@address+1
 10893  10A4  3033               	movlw	(low (writeData@status| 0))& (0+255)
 10894  10A5  00B1               	movwf	??_writeData+2
 10895  10A6  0831               	movf	??_writeData+2,w
 10896  10A7  00AA               	movwf	I2C1_MasterWrite@pflag
 10897  10A8  302E               	movlw	(low (writeData@data| 0))& (0+255)
 10898  10A9  3191  21E7  3190   	fcall	_I2C1_MasterWrite
 10899  10AC                     l5278:	
 10900                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
 10901                           
 10902  10AC  3002               	movlw	2
 10903  10AD  0140               	movlb	0	; select bank0
 10904  10AE  0633               	xorwf	writeData@status,w	;volatile
 10905  10AF  1D03               	btfss	3,2
 10906  10B0  0008               	return
 10907  10B1  28AC               	goto	l5278
 10908  10B2                     __end_of_writeData:	
 10909                           
 10910                           	psect	text29
 10911  11E7                     __ptext29:	
 10912 ;; *************** function _I2C1_MasterWrite *****************
 10913 ;; Defined at:
 10914 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;  pdata           1    wreg     PTR unsigned char 
 10917 ;;		 -> writeData@data(1), 
 10918 ;;  length          1    7[BANK0 ] unsigned char 
 10919 ;;  address         2    8[BANK0 ] unsigned short 
 10920 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 10921 ;;		 -> writeData@status(1), 
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 10924 ;;		 -> writeData@data(1), 
 10925 ;; Return value:  Size  Location     Type
 10926 ;;                  1    wreg      void 
 10927 ;; Registers used:
 10928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10929 ;; Tracked objects:
 10930 ;;		On entry : 0/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10934 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10937 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10938 ;;Total ram usage:        7 bytes
 10939 ;; Hardware stack levels used:    1
 10940 ;; Hardware stack levels required when called:    6
 10941 ;; This function calls:
 10942 ;;		_I2C1_MasterTRBInsert
 10943 ;;		_I2C1_MasterWriteTRBBuild
 10944 ;; This function is called by:
 10945 ;;		_writeData
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           
 10950                           ;psect for function _I2C1_MasterWrite
 10951  11E7                     _I2C1_MasterWrite:	
 10952                           
 10953                           ;incstack = 0
 10954                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10955                           ;I2C1_MasterWrite@pdata stored from wreg
 10956  11E7  0140               	movlb	0	; select bank0
 10957  11E8  00AD               	movwf	I2C1_MasterWrite@pdata
 10958                           
 10959                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 10960  11E9  0142               	movlb	2	; select bank2
 10961  11EA  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 10962  11EB  2A0A               	goto	l5258
 10963                           
 10964                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 10965  11EC  0140               	movlb	0	; select bank0
 10966  11ED  082D               	movf	I2C1_MasterWrite@pdata,w
 10967  11EE  00AB               	movwf	??_I2C1_MasterWrite
 10968  11EF  082B               	movf	??_I2C1_MasterWrite,w
 10969  11F0  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 10970  11F1  0827               	movf	I2C1_MasterWrite@length,w
 10971  11F2  00AC               	movwf	??_I2C1_MasterWrite+1
 10972  11F3  082C               	movf	??_I2C1_MasterWrite+1,w
 10973  11F4  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 10974  11F5  0829               	movf	I2C1_MasterWrite@address+1,w
 10975  11F6  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 10976  11F7  0828               	movf	I2C1_MasterWrite@address,w
 10977  11F8  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 10978  11F9  305D               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 10979  11FA  3191  2152  3191   	fcall	_I2C1_MasterWriteTRBBuild
 10980                           
 10981                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 10982  11FD  305D               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 10983  11FE  0140               	movlb	0	; select bank0
 10984  11FF  00AB               	movwf	??_I2C1_MasterWrite
 10985  1200  082B               	movf	??_I2C1_MasterWrite,w
 10986  1201  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 10987  1202  082A               	movf	I2C1_MasterWrite@pflag,w
 10988  1203  00AC               	movwf	??_I2C1_MasterWrite+1
 10989  1204  082C               	movf	??_I2C1_MasterWrite+1,w
 10990  1205  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 10991  1206  3001               	movlw	1
 10992  1207  3187  279E         	fcall	_I2C1_MasterTRBInsert
 10993                           
 10994                           ;mcc_generated_files/i2c1.c: 613:     }
 10995  1209  0008               	return
 10996  120A                     l5258:	
 10997                           
 10998                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 10999  120A  0140               	movlb	0	; select bank0
 11000  120B  082A               	movf	I2C1_MasterWrite@pflag,w
 11001  120C  0086               	movwf	6
 11002  120D  0187               	clrf	7
 11003  120E  0181               	clrf	1
 11004  120F  0A81               	incf	1,f
 11005  1210  0008               	return
 11006  1211                     __end_of_I2C1_MasterWrite:	
 11007                           
 11008                           	psect	text30
 11009  1152                     __ptext30:	
 11010 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 11011 ;; Defined at:
 11012 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  ptrb            1    wreg     PTR struct .
 11015 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11016 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 11017 ;;		 -> writeData@data(1), 
 11018 ;;  length          1    1[BANK0 ] unsigned char 
 11019 ;;  address         2    2[BANK0 ] unsigned short 
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;  ptrb            1    6[BANK0 ] PTR struct .
 11022 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11023 ;; Return value:  Size  Location     Type
 11024 ;;                  1    wreg      void 
 11025 ;; Registers used:
 11026 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11027 ;; Tracked objects:
 11028 ;;		On entry : 0/0
 11029 ;;		On exit  : 0/0
 11030 ;;		Unchanged: 0/0
 11031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11033 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11034 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11035 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11036 ;;Total ram usage:        7 bytes
 11037 ;; Hardware stack levels used:    1
 11038 ;; Hardware stack levels required when called:    4
 11039 ;; This function calls:
 11040 ;;		Nothing
 11041 ;; This function is called by:
 11042 ;;		_I2C1_MasterWrite
 11043 ;; This function uses a non-reentrant model
 11044 ;;
 11045                           
 11046                           
 11047                           ;psect for function _I2C1_MasterWriteTRBBuild
 11048  1152                     _I2C1_MasterWriteTRBBuild:	
 11049                           
 11050                           ;incstack = 0
 11051                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 11052                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 11053  1152  0140               	movlb	0	; select bank0
 11054  1153  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 11055                           
 11056                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 11057  1154  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 11058  1155  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 11059  1156  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 11060  1157  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11061  1158  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 11062  1159  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 11063  115A  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11064  115B  0086               	movwf	6
 11065  115C  3001               	movlw	1	; select bank2/3
 11066  115D  0087               	movwf	7
 11067  115E  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11068  115F  3FC0               	movwi [0]fsr1
 11069  1160  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 11070  1161  3FC1               	movwi [1]fsr1
 11071                           
 11072                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 11073  1162  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 11074  1163  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11075  1164  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11076  1165  3E02               	addlw	2
 11077  1166  0086               	movwf	6
 11078  1167  3001               	movlw	1	; select bank2/3
 11079  1168  0087               	movwf	7
 11080  1169  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11081  116A  0081               	movwf	1
 11082                           
 11083                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 11084  116B  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 11085  116C  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11086  116D  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11087  116E  3E03               	addlw	3
 11088  116F  0086               	movwf	6
 11089  1170  3001               	movlw	1	; select bank2/3
 11090  1171  0087               	movwf	7
 11091  1172  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11092  1173  0081               	movwf	1
 11093  1174  0008               	return
 11094  1175                     __end_of_I2C1_MasterWriteTRBBuild:	
 11095                           
 11096                           	psect	text31
 11097  079E                     __ptext31:	
 11098 ;; *************** function _I2C1_MasterTRBInsert *****************
 11099 ;; Defined at:
 11100 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  count           1    wreg     unsigned char 
 11103 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 11104 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 11105 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 11106 ;;		 -> writeData@status(1), 
 11107 ;; Auto vars:     Size  Location     Type
 11108 ;;  count           1    3[BANK0 ] unsigned char 
 11109 ;; Return value:  Size  Location     Type
 11110 ;;                  1    wreg      void 
 11111 ;; Registers used:
 11112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11113 ;; Tracked objects:
 11114 ;;		On entry : 0/0
 11115 ;;		On exit  : 0/0
 11116 ;;		Unchanged: 0/0
 11117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11120 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11121 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11122 ;;Total ram usage:        4 bytes
 11123 ;; Hardware stack levels used:    1
 11124 ;; Hardware stack levels required when called:    5
 11125 ;; This function calls:
 11126 ;;		_I2C1_WaitForLastPacketToComplete
 11127 ;; This function is called by:
 11128 ;;		_I2C1_MasterWrite
 11129 ;;		_I2C1_MasterRead
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           
 11134                           ;psect for function _I2C1_MasterTRBInsert
 11135  079E                     _I2C1_MasterTRBInsert:	
 11136                           
 11137                           ;incstack = 0
 11138                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11139                           ;I2C1_MasterTRBInsert@count stored from wreg
 11140  079E  0140               	movlb	0	; select bank0
 11141  079F  00A3               	movwf	I2C1_MasterTRBInsert@count
 11142                           
 11143                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 11144  07A0  0142               	movlb	2	; select bank2
 11145  07A1  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 11146  07A2  2FE0               	goto	l5246
 11147                           
 11148                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 11149  07A3  3002               	movlw	2
 11150  07A4  0140               	movlb	0	; select bank0
 11151  07A5  00A2               	movwf	??_I2C1_MasterTRBInsert
 11152  07A6  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11153  07A7  0086               	movwf	6
 11154  07A8  0187               	clrf	7
 11155  07A9  0822               	movf	??_I2C1_MasterTRBInsert,w
 11156  07AA  0081               	movwf	1
 11157                           
 11158                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11159  07AB  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 11160  07AC  00A2               	movwf	??_I2C1_MasterTRBInsert
 11161  07AD  0142               	movlb	2	; select bank2
 11162  07AE  0A20               	incf	_i2c1_object^(0+256),w
 11163  07AF  0086               	movwf	6
 11164  07B0  3001               	movlw	1	; select bank2/3
 11165  07B1  0087               	movwf	7
 11166  07B2  0140               	movlb	0	; select bank0
 11167  07B3  0822               	movf	??_I2C1_MasterTRBInsert,w
 11168  07B4  0081               	movwf	1
 11169                           
 11170                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 11171  07B5  0823               	movf	I2C1_MasterTRBInsert@count,w
 11172  07B6  00A2               	movwf	??_I2C1_MasterTRBInsert
 11173  07B7  0142               	movlb	2	; select bank2
 11174  07B8  0820               	movf	_i2c1_object^(0+256),w
 11175  07B9  0086               	movwf	6
 11176  07BA  3001               	movlw	1	; select bank2/3
 11177  07BB  0087               	movwf	7
 11178  07BC  0140               	movlb	0	; select bank0
 11179  07BD  0822               	movf	??_I2C1_MasterTRBInsert,w
 11180  07BE  0081               	movwf	1
 11181                           
 11182                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 11183  07BF  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11184  07C0  00A2               	movwf	??_I2C1_MasterTRBInsert
 11185  07C1  0142               	movlb	2	; select bank2
 11186  07C2  0820               	movf	_i2c1_object^(0+256),w
 11187  07C3  3E02               	addlw	2
 11188  07C4  0086               	movwf	6
 11189  07C5  3001               	movlw	1	; select bank2/3
 11190  07C6  0087               	movwf	7
 11191  07C7  0140               	movlb	0	; select bank0
 11192  07C8  0822               	movf	??_I2C1_MasterTRBInsert,w
 11193  07C9  0081               	movwf	1
 11194                           
 11195                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 11196  07CA  3003               	movlw	3
 11197  07CB  00A2               	movwf	??_I2C1_MasterTRBInsert
 11198  07CC  0822               	movf	??_I2C1_MasterTRBInsert,w
 11199  07CD  0142               	movlb	2	; select bank2
 11200  07CE  07A0               	addwf	_i2c1_object^(0+256),f
 11201                           
 11202                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 11203  07CF  0820               	movf	_i2c1_object^(0+256),w
 11204  07D0  3A64               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 11205  07D1  1D03               	skipz
 11206  07D2  2FD9               	goto	l5242
 11207                           
 11208                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 11209  07D3  3061               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 11210  07D4  0140               	movlb	0	; select bank0
 11211  07D5  00A2               	movwf	??_I2C1_MasterTRBInsert
 11212  07D6  0822               	movf	??_I2C1_MasterTRBInsert,w
 11213  07D7  0142               	movlb	2	; select bank2
 11214  07D8  00A0               	movwf	_i2c1_object^(0+256)
 11215  07D9                     l5242:	
 11216                           
 11217                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 11218  07D9  10A2               	bcf	(_i2c1_object^(0+256)+2),1
 11219                           
 11220                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 11221  07DA  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 11222  07DB  0620               	xorwf	_i2c1_object^(0+256),w
 11223  07DC  1D03               	skipz
 11224  07DD  2FE6               	goto	l5248
 11225                           
 11226                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 11227  07DE  1422               	bsf	(_i2c1_object^(0+256)+2),0
 11228  07DF  2FE6               	goto	l5248
 11229  07E0                     l5246:	
 11230                           
 11231                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11232  07E0  0140               	movlb	0	; select bank0
 11233  07E1  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11234  07E2  0086               	movwf	6
 11235  07E3  0187               	clrf	7
 11236  07E4  0181               	clrf	1
 11237  07E5  0A81               	incf	1,f
 11238  07E6                     l5248:	
 11239                           
 11240                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 11241  07E6  0140               	movlb	0	; select bank0
 11242  07E7  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11243  07E8  0086               	movwf	6
 11244  07E9  0187               	clrf	7
 11245  07EA  3002               	movlw	2
 11246  07EB  0601               	xorwf	1,w
 11247  07EC  1D03               	btfss	3,2
 11248  07ED  0008               	return
 11249                           
 11250                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 11251  07EE  319E  26B7         	fcall	_I2C1_WaitForLastPacketToComplete
 11252                           
 11253                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 11254  07F0  014E               	movlb	14	; select bank14
 11255  07F1  140F               	bsf	15,0	;volatile
 11256  07F2  0008               	return
 11257  07F3                     __end_of_I2C1_MasterTRBInsert:	
 11258                           
 11259                           	psect	text32
 11260  1EB7                     __ptext32:	
 11261 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 11262 ;; Defined at:
 11263 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 11264 ;; Parameters:    Size  Location     Type
 11265 ;;		None
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;		None
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		wreg, status,2, status,0
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11281 ;;Total ram usage:        0 bytes
 11282 ;; Hardware stack levels used:    1
 11283 ;; Hardware stack levels required when called:    4
 11284 ;; This function calls:
 11285 ;;		Nothing
 11286 ;; This function is called by:
 11287 ;;		_I2C1_MasterTRBInsert
 11288 ;; This function uses a non-reentrant model
 11289 ;;
 11290                           
 11291                           
 11292                           ;psect for function _I2C1_WaitForLastPacketToComplete
 11293  1EB7                     _I2C1_WaitForLastPacketToComplete:	
 11294  1EB7                     l5228:	
 11295                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11296                           
 11297                           ;incstack = 0
 11298                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 11299                           
 11300                           
 11301                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11302  1EB7  0141               	movlb	1	; select bank1
 11303  1EB8  086C               	movf	_i2c1_state^(0+128),w
 11304  1EB9  1903               	btfsc	3,2
 11305  1EBA  0008               	return
 11306  1EBB  2EB7               	goto	l5228
 11307  1EBC                     __end_of_I2C1_WaitForLastPacketToComplete:	
 11308                           
 11309                           	psect	text33
 11310  1131                     __ptext33:	
 11311 ;; *************** function _BUTTONS_isClicked *****************
 11312 ;; Defined at:
 11313 ;;		line 74 in file "buttons.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  button          1    wreg     PTR struct .
 11316 ;;		 -> buttons(32), NULL(0), 
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;  button          1    3[BANK0 ] PTR struct .
 11319 ;;		 -> buttons(32), NULL(0), 
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  2    0[BANK0 ] int 
 11322 ;; Registers used:
 11323 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11324 ;; Tracked objects:
 11325 ;;		On entry : 0/0
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11329 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11332 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11333 ;;Total ram usage:        4 bytes
 11334 ;; Hardware stack levels used:    1
 11335 ;; Hardware stack levels required when called:    4
 11336 ;; This function calls:
 11337 ;;		Nothing
 11338 ;; This function is called by:
 11339 ;;		_menuButtons
 11340 ;;		_adrControl_DMX
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344                           
 11345                           ;psect for function _BUTTONS_isClicked
 11346  1131                     _BUTTONS_isClicked:	
 11347                           
 11348                           ;incstack = 0
 11349                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 11350                           ;BUTTONS_isClicked@button stored from wreg
 11351  1131  0140               	movlb	0	; select bank0
 11352  1132  00A3               	movwf	BUTTONS_isClicked@button
 11353                           
 11354                           ;buttons.c: 75:     if (button->event == EVENT_PRESSED) {
 11355  1133  0823               	movf	BUTTONS_isClicked@button,w
 11356  1134  3E05               	addlw	5
 11357  1135  0086               	movwf	6
 11358  1136  3002               	movlw	2	; select bank4/5
 11359  1137  0087               	movwf	7
 11360  1138  0301               	decf	1,w
 11361  1139  1D03               	btfss	3,2
 11362  113A  2946               	goto	l5660
 11363                           
 11364                           ;buttons.c: 76:         button->event = EVENT_IDLE;
 11365  113B  0823               	movf	BUTTONS_isClicked@button,w
 11366  113C  3E05               	addlw	5
 11367  113D  0086               	movwf	6
 11368  113E  3002               	movlw	2	; select bank4/5
 11369  113F  0087               	movwf	7
 11370  1140  0181               	clrf	1
 11371  1141                     l5654:	
 11372                           
 11373                           ;buttons.c: 77:         return 1;
 11374  1141  3001               	movlw	1
 11375  1142  00A0               	movwf	?_BUTTONS_isClicked
 11376  1143  3000               	movlw	0
 11377  1144  00A1               	movwf	?_BUTTONS_isClicked+1
 11378  1145  0008               	return
 11379  1146                     l5660:	
 11380  1146  0823               	movf	BUTTONS_isClicked@button,w
 11381  1147  3E05               	addlw	5
 11382  1148  0086               	movwf	6
 11383  1149  3002               	movlw	2	; select bank4/5
 11384  114A  0087               	movwf	7
 11385  114B  3002               	movlw	2
 11386  114C  0601               	xorwf	1,w
 11387  114D  1903               	btfsc	3,2
 11388  114E  2941               	goto	l5654
 11389                           
 11390                           ;buttons.c: 81:     return 0;
 11391  114F  01A0               	clrf	?_BUTTONS_isClicked
 11392  1150  01A1               	clrf	?_BUTTONS_isClicked+1
 11393  1151  0008               	return
 11394  1152                     __end_of_BUTTONS_isClicked:	
 11395                           
 11396                           	psect	text34
 11397  1342                     __ptext34:	
 11398 ;; *************** function _LED_DMX *****************
 11399 ;; Defined at:
 11400 ;;		line 139 in file "led.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;		None
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;		None
 11405 ;; Return value:  Size  Location     Type
 11406 ;;                  1    wreg      void 
 11407 ;; Registers used:
 11408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11409 ;; Tracked objects:
 11410 ;;		On entry : 0/0
 11411 ;;		On exit  : 0/0
 11412 ;;		Unchanged: 0/0
 11413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11416 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11417 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11418 ;;Total ram usage:       11 bytes
 11419 ;; Hardware stack levels used:    1
 11420 ;; Hardware stack levels required when called:    5
 11421 ;; This function calls:
 11422 ;;		_LED_setColor
 11423 ;; This function is called by:
 11424 ;;		_MENU_task
 11425 ;; This function uses a non-reentrant model
 11426 ;;
 11427                           
 11428                           
 11429                           ;psect for function _LED_DMX
 11430  1342                     _LED_DMX:	
 11431                           
 11432                           ;led.c: 140:     LED_setColor(dmxData[address+1], dmxData[address+2], dmxData[address+3]
      +                          , dmxData[address+4]);
 11433                           
 11434                           ;incstack = 0
 11435                           ; Regs used in _LED_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11436  1342  30F1               	movlw	241
 11437  1343  0140               	movlb	0	; select bank0
 11438  1344  00B6               	movwf	??_LED_DMX
 11439  1345  3025               	movlw	37
 11440  1346  00B7               	movwf	??_LED_DMX+1
 11441  1347  087A               	movf	_address,w
 11442  1348  0736               	addwf	??_LED_DMX,w
 11443  1349  0086               	movwf	6
 11444  134A  087B               	movf	_address+1,w
 11445  134B  3D37               	addwfc	??_LED_DMX+1,w
 11446  134C  0087               	movwf	7
 11447  134D  0801               	movf	1,w
 11448  134E  00B8               	movwf	??_LED_DMX+2
 11449  134F  0838               	movf	??_LED_DMX+2,w
 11450  1350  00A0               	movwf	LED_setColor@green
 11451  1351  30F2               	movlw	242
 11452  1352  00B9               	movwf	??_LED_DMX+3
 11453  1353  3025               	movlw	37
 11454  1354  00BA               	movwf	??_LED_DMX+4
 11455  1355  087A               	movf	_address,w
 11456  1356  0739               	addwf	??_LED_DMX+3,w
 11457  1357  0086               	movwf	6
 11458  1358  087B               	movf	_address+1,w
 11459  1359  3D3A               	addwfc	??_LED_DMX+4,w
 11460  135A  0087               	movwf	7
 11461  135B  0801               	movf	1,w
 11462  135C  00BB               	movwf	??_LED_DMX+5
 11463  135D  083B               	movf	??_LED_DMX+5,w
 11464  135E  00A1               	movwf	LED_setColor@white
 11465  135F  30F3               	movlw	243
 11466  1360  00BC               	movwf	??_LED_DMX+6
 11467  1361  3025               	movlw	37
 11468  1362  00BD               	movwf	??_LED_DMX+7
 11469  1363  087A               	movf	_address,w
 11470  1364  073C               	addwf	??_LED_DMX+6,w
 11471  1365  0086               	movwf	6
 11472  1366  087B               	movf	_address+1,w
 11473  1367  3D3D               	addwfc	??_LED_DMX+7,w
 11474  1368  0087               	movwf	7
 11475  1369  0801               	movf	1,w
 11476  136A  00BE               	movwf	??_LED_DMX+8
 11477  136B  083E               	movf	??_LED_DMX+8,w
 11478  136C  00A2               	movwf	LED_setColor@blue
 11479  136D  30F0               	movlw	240
 11480  136E  00BF               	movwf	??_LED_DMX+9
 11481  136F  3025               	movlw	37
 11482  1370  00C0               	movwf	??_LED_DMX+10
 11483  1371  087A               	movf	_address,w
 11484  1372  073F               	addwf	??_LED_DMX+9,w
 11485  1373  0086               	movwf	6
 11486  1374  087B               	movf	_address+1,w
 11487  1375  3D40               	addwfc	??_LED_DMX+10,w
 11488  1376  0087               	movwf	7
 11489  1377  0801               	movf	1,w
 11490  1378  3193  237B         	fcall	_LED_setColor
 11491  137A  0008               	return
 11492  137B                     __end_of_LED_DMX:	
 11493                           
 11494                           	psect	text35
 11495  0802                     __ptext35:	
 11496 ;; *************** function _LED_Beat *****************
 11497 ;; Defined at:
 11498 ;;		line 143 in file "led.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;		None
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;		None
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  1    wreg      void 
 11505 ;; Registers used:
 11506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11516 ;;Total ram usage:        0 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; Hardware stack levels required when called:    9
 11519 ;; This function calls:
 11520 ;;		_BEAT_detected
 11521 ;;		_fadeColor
 11522 ;; This function is called by:
 11523 ;;		_MENU_task
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           
 11528                           ;psect for function _LED_Beat
 11529  0802                     _LED_Beat:	
 11530                           
 11531                           ;led.c: 144:     if(BEAT_detected()) {
 11532                           
 11533                           ;incstack = 0
 11534                           ; Regs used in _LED_Beat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11535  0802  319E  26F7  3188   	fcall	_BEAT_detected
 11536  0805  3A00               	xorlw	0
 11537  0806  1903               	skipnz
 11538  0807  280B               	goto	l5924
 11539                           
 11540                           ;led.c: 145:         changeColor = 1;
 11541  0808  0142               	movlb	2	; select bank2
 11542  0809  01CD               	clrf	_changeColor^(0+256)
 11543  080A  0ACD               	incf	_changeColor^(0+256),f
 11544  080B                     l5924:	
 11545                           
 11546                           ;led.c: 147:     if(changeColor) {
 11547  080B  0142               	movlb	2	; select bank2
 11548  080C  084D               	movf	_changeColor^(0+256),w
 11549  080D  1903               	btfsc	3,2
 11550  080E  0008               	return
 11551                           
 11552                           ;led.c: 148:         fadeColor();
 11553  080F  3188  2012         	fcall	_fadeColor
 11554  0811  0008               	return
 11555  0812                     __end_of_LED_Beat:	
 11556                           
 11557                           	psect	text36
 11558  0812                     __ptext36:	
 11559 ;; *************** function _fadeColor *****************
 11560 ;; Defined at:
 11561 ;;		line 115 in file "led.c"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;		None
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;  time            2   60[BANK1 ] unsigned short 
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  1    wreg      void 
 11568 ;; Registers used:
 11569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11576 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11577 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11578 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11579 ;;Total ram usage:        4 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; Hardware stack levels required when called:    8
 11582 ;; This function calls:
 11583 ;;		_CLOCK_getTime
 11584 ;;		_LED_setHSL
 11585 ;; This function is called by:
 11586 ;;		_LED_Beat
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           
 11591                           ;psect for function _fadeColor
 11592  0812                     _fadeColor:	
 11593                           
 11594                           ;led.c: 116:     time_t time = CLOCK_getTime();
 11595                           
 11596                           ;incstack = 0
 11597                           ; Regs used in _fadeColor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11598  0812  319E  26E5  3188   	fcall	_CLOCK_getTime
 11599  0815  0140               	movlb	0	; select bank0
 11600  0816  0821               	movf	?_CLOCK_getTime+1,w
 11601  0817  0141               	movlb	1	; select bank1
 11602  0818  00DD               	movwf	(fadeColor@time+1)^(0+128)
 11603  0819  0140               	movlb	0	; select bank0
 11604  081A  0820               	movf	?_CLOCK_getTime,w
 11605  081B  0141               	movlb	1	; select bank1
 11606  081C  00DC               	movwf	fadeColor@time^(0+128)
 11607                           
 11608                           ;led.c: 118:     if (time - lastTime < 10)
 11609  081D  0142               	movlb	2	; select bank2
 11610  081E  0839               	movf	led@lastTime^(0+256),w
 11611  081F  0141               	movlb	1	; select bank1
 11612  0820  025C               	subwf	fadeColor@time^(0+128),w
 11613  0821  00DA               	movwf	??_fadeColor^(0+128)
 11614  0822  0142               	movlb	2	; select bank2
 11615  0823  083A               	movf	(led@lastTime+1)^(0+256),w
 11616  0824  0141               	movlb	1	; select bank1
 11617  0825  3B5D               	subwfb	(fadeColor@time+1)^(0+128),w
 11618  0826  00DB               	movwf	(??_fadeColor+1)^(0+128)
 11619  0827  3000               	movlw	0
 11620  0828  025B               	subwf	(??_fadeColor+1)^(0+128),w
 11621  0829  300A               	movlw	10
 11622  082A  1903               	skipnz
 11623  082B  025A               	subwf	??_fadeColor^(0+128),w
 11624  082C  1C03               	btfss	3,0
 11625  082D  0008               	return
 11626                           
 11627                           ;led.c: 121:     lastTime = time;
 11628  082E  085D               	movf	(fadeColor@time+1)^(0+128),w
 11629  082F  0142               	movlb	2	; select bank2
 11630  0830  00BA               	movwf	(led@lastTime+1)^(0+256)
 11631  0831  0141               	movlb	1	; select bank1
 11632  0832  085C               	movf	fadeColor@time^(0+128),w
 11633  0833  0142               	movlb	2	; select bank2
 11634  0834  00B9               	movwf	led@lastTime^(0+256)
 11635                           
 11636                           ;led.c: 123:     if(color.H == 360) {
 11637  0835  3068               	movlw	104
 11638  0836  0143               	movlb	3	; select bank3
 11639  0837  0650               	xorwf	_color^(0+384),w
 11640  0838  1D03               	skipz
 11641  0839  2840               	goto	l5694
 11642  083A  0351               	decf	(_color+1)^(0+384),w
 11643  083B  1D03               	btfss	3,2
 11644  083C  2840               	goto	l5694
 11645                           
 11646                           ;led.c: 124:         color.H = 0;
 11647  083D  01D0               	clrf	_color^(0+384)
 11648  083E  01D1               	clrf	(_color+1)^(0+384)
 11649                           
 11650                           ;led.c: 125:     } else {
 11651  083F  2844               	goto	l1000
 11652  0840                     l5694:	
 11653                           
 11654                           ;led.c: 126:         color.H += 1;
 11655  0840  3001               	movlw	1
 11656  0841  07D0               	addwf	_color^(0+384),f
 11657  0842  3000               	movlw	0
 11658  0843  3DD1               	addwfc	(_color+1)^(0+384),f
 11659  0844                     l1000:	
 11660                           ;led.c: 127:     }
 11661                           
 11662                           
 11663                           ;led.c: 128:     fadeAmmount -= 1;
 11664  0844  30FF               	movlw	255
 11665  0845  0142               	movlb	2	; select bank2
 11666  0846  07E4               	addwf	_fadeAmmount^(0+256),f
 11667  0847  30FF               	movlw	255
 11668  0848  3DE5               	addwfc	(_fadeAmmount+1)^(0+256),f
 11669                           
 11670                           ;led.c: 129:     if(fadeAmmount == 0) {
 11671  0849  0864               	movf	_fadeAmmount^(0+256),w
 11672  084A  0465               	iorwf	(_fadeAmmount+1)^(0+256),w
 11673  084B  1D03               	btfss	3,2
 11674  084C  2852               	goto	l5702
 11675                           
 11676                           ;led.c: 130:         fadeAmmount = 20;
 11677  084D  3014               	movlw	20
 11678  084E  00E4               	movwf	_fadeAmmount^(0+256)
 11679  084F  3000               	movlw	0
 11680  0850  00E5               	movwf	(_fadeAmmount^(0+256)+1)
 11681                           
 11682                           ;led.c: 131:         changeColor = 0;
 11683  0851  01CD               	clrf	_changeColor^(0+256)
 11684  0852                     l5702:	
 11685                           
 11686                           ;led.c: 133:     LED_setHSL(color);
 11687  0852  30D0               	movlw	low _color
 11688  0853  0086               	movwf	6
 11689  0854  3001               	movlw	high _color
 11690  0855  0087               	movwf	7
 11691  0856  30AF               	movlw	low LED_setHSL@hsl
 11692  0857  0084               	movwf	4
 11693  0858  3000               	movlw	high LED_setHSL@hsl
 11694  0859  0085               	movwf	5
 11695  085A  300A               	movlw	10
 11696  085B  0141               	movlb	1	; select bank1
 11697  085C  00DA               	movwf	??_fadeColor^(0+128)
 11698  085D                     u6030:	
 11699  085D  0016               	moviw fsr1++
 11700  085E  001A               	movwi fsr0++
 11701  085F  0BDA               	decfsz	??_fadeColor^(0+128),f
 11702  0860  285D               	goto	u6030
 11703  0861  3180  209A         	fcall	_LED_setHSL
 11704  0863  0008               	return
 11705  0864                     __end_of_fadeColor:	
 11706                           
 11707                           	psect	text37
 11708  009A                     __ptext37:	
 11709 ;; *************** function _LED_setHSL *****************
 11710 ;; Defined at:
 11711 ;;		line 86 in file "led.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;  hsl            10   15[BANK1 ] struct HSL
 11714 ;; Auto vars:     Size  Location     Type
 11715 ;;  v2              4   51[BANK1 ] float 
 11716 ;;  hue             4   47[BANK1 ] float 
 11717 ;;  v1              4   43[BANK1 ] float 
 11718 ;;  rgb             3   55[BANK1 ] struct RGB
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1    wreg      void 
 11721 ;; Registers used:
 11722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11723 ;; Tracked objects:
 11724 ;;		On entry : 0/0
 11725 ;;		On exit  : 0/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11728 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11729 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11730 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11731 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11732 ;;Total ram usage:       43 bytes
 11733 ;; Hardware stack levels used:    1
 11734 ;; Hardware stack levels required when called:    7
 11735 ;; This function calls:
 11736 ;;		_HueToRGB
 11737 ;;		_LED_setColor
 11738 ;;		___fladd
 11739 ;;		___fldiv
 11740 ;;		___fleq
 11741 ;;		___flge
 11742 ;;		___flmul
 11743 ;;		___flsub
 11744 ;;		___fltol
 11745 ;;		___xxtofl
 11746 ;; This function is called by:
 11747 ;;		_fadeColor
 11748 ;;		_cycleColors
 11749 ;;		_pulseColors
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           
 11754                           ;psect for function _LED_setHSL
 11755  009A                     _LED_setHSL:	
 11756                           
 11757                           ;led.c: 87:  struct RGB rgb;;led.c: 89:  if (hsl.S == 0)
 11758                           
 11759                           ;incstack = 0
 11760                           ; Regs used in _LED_setHSL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11761  009A  3002               	movlw	2
 11762  009B  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 11763  009C  0086               	movwf	6
 11764  009D  0187               	clrf	7
 11765  009E  3F40               	moviw [0]fsr1
 11766  009F  0140               	movlb	0	; select bank0
 11767  00A0  00A0               	movwf	___fleq@ff1
 11768  00A1  3F41               	moviw [1]fsr1
 11769  00A2  00A1               	movwf	___fleq@ff1+1
 11770  00A3  3F42               	moviw [2]fsr1
 11771  00A4  00A2               	movwf	___fleq@ff1+2
 11772  00A5  3F43               	moviw [3]fsr1
 11773  00A6  00A3               	movwf	___fleq@ff1+3
 11774  00A7  3000               	movlw	0
 11775  00A8  00A7               	movwf	___fleq@ff2+3
 11776  00A9  3000               	movlw	0
 11777  00AA  00A6               	movwf	___fleq@ff2+2
 11778  00AB  3000               	movlw	0
 11779  00AC  00A5               	movwf	___fleq@ff2+1
 11780  00AD  3000               	movlw	0
 11781  00AE  00A4               	movwf	___fleq@ff2
 11782  00AF  3193  23FE  3180   	fcall	___fleq
 11783  00B2  1C03               	btfss	3,0
 11784  00B3  28F2               	goto	l5592
 11785                           
 11786                           ;led.c: 90:  {;led.c: 91:   rgb.R = rgb.G = rgb.B = (unsigned char)(hsl.L * 255);
 11787  00B4  3001               	movlw	1
 11788  00B5  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 11789  00B6  0086               	movwf	6
 11790  00B7  0187               	clrf	7
 11791  00B8  3002               	movlw	2
 11792  00B9  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 11793  00BA  0084               	movwf	4
 11794  00BB  0185               	clrf	5
 11795  00BC  0141               	movlb	1	; select bank1
 11796  00BD  0838               	movf	((LED_setHSL@hsl+3)^(0+128)+6),w
 11797  00BE  0140               	movlb	0	; select bank0
 11798  00BF  00C4               	movwf	___flmul@a+3
 11799  00C0  0141               	movlb	1	; select bank1
 11800  00C1  0837               	movf	((LED_setHSL@hsl+2)^(0+128)+6),w
 11801  00C2  0140               	movlb	0	; select bank0
 11802  00C3  00C3               	movwf	___flmul@a+2
 11803  00C4  0141               	movlb	1	; select bank1
 11804  00C5  0836               	movf	((LED_setHSL@hsl+1)^(0+128)+6),w
 11805  00C6  0140               	movlb	0	; select bank0
 11806  00C7  00C2               	movwf	___flmul@a+1
 11807  00C8  0141               	movlb	1	; select bank1
 11808  00C9  0835               	movf	(LED_setHSL@hsl^(0+128)+6),w
 11809  00CA  0140               	movlb	0	; select bank0
 11810  00CB  00C1               	movwf	___flmul@a
 11811  00CC  3043               	movlw	67
 11812  00CD  00C0               	movwf	___flmul@b+3
 11813  00CE  307F               	movlw	127
 11814  00CF  00BF               	movwf	___flmul@b+2
 11815  00D0  3000               	movlw	0
 11816  00D1  00BE               	movwf	___flmul@b+1
 11817  00D2  3000               	movlw	0
 11818  00D3  00BD               	movwf	___flmul@b
 11819  00D4  3183  23F8  3180   	fcall	___flmul
 11820  00D7  0140               	movlb	0	; select bank0
 11821  00D8  0840               	movf	?___flmul+3,w
 11822  00D9  0141               	movlb	1	; select bank1
 11823  00DA  00A7               	movwf	(___fltol@f1+3)^(0+128)
 11824  00DB  0140               	movlb	0	; select bank0
 11825  00DC  083F               	movf	?___flmul+2,w
 11826  00DD  0141               	movlb	1	; select bank1
 11827  00DE  00A6               	movwf	(___fltol@f1+2)^(0+128)
 11828  00DF  0140               	movlb	0	; select bank0
 11829  00E0  083E               	movf	?___flmul+1,w
 11830  00E1  0141               	movlb	1	; select bank1
 11831  00E2  00A5               	movwf	(___fltol@f1+1)^(0+128)
 11832  00E3  0140               	movlb	0	; select bank0
 11833  00E4  083D               	movf	?___flmul,w
 11834  00E5  0141               	movlb	1	; select bank1
 11835  00E6  00A4               	movwf	___fltol@f1^(0+128)
 11836  00E7  3194  2492  3180   	fcall	___fltol
 11837  00EA  0141               	movlb	1	; select bank1
 11838  00EB  0824               	movf	?___fltol^(0+128),w
 11839  00EC  3F80               	movwi [0]fsr0
 11840  00ED  3FC0               	movwi [0]fsr1
 11841  00EE  00B9               	movwf	??_LED_setHSL^(0+128)
 11842  00EF  0839               	movf	??_LED_setHSL^(0+128),w
 11843  00F0  00D7               	movwf	LED_setHSL@rgb^(0+128)
 11844                           
 11845                           ;led.c: 92:  }
 11846  00F1  2BE7               	goto	l5616
 11847  00F2                     l5592:	
 11848                           
 11849                           ;led.c: 94:  {;led.c: 95:   float v1, v2;;led.c: 96:   float hue = (float)hsl.H / 360;
 11850  00F2  3043               	movlw	67
 11851  00F3  0140               	movlb	0	; select bank0
 11852  00F4  00B1               	movwf	___fldiv@a+3
 11853  00F5  30B4               	movlw	180
 11854  00F6  00B0               	movwf	___fldiv@a+2
 11855  00F7  3000               	movlw	0
 11856  00F8  00AF               	movwf	___fldiv@a+1
 11857  00F9  3000               	movlw	0
 11858  00FA  00AE               	movwf	___fldiv@a
 11859  00FB  0141               	movlb	1	; select bank1
 11860  00FC  082F               	movf	LED_setHSL@hsl^(0+128),w
 11861  00FD  0140               	movlb	0	; select bank0
 11862  00FE  00A0               	movwf	___xxtofl@val
 11863  00FF  0141               	movlb	1	; select bank1
 11864  0100  0830               	movf	(LED_setHSL@hsl+1)^(0+128),w
 11865  0101  0140               	movlb	0	; select bank0
 11866  0102  00A1               	movwf	___xxtofl@val+1
 11867  0103  0D89               	rlf	9,f
 11868  0104  3B89               	subwfb	9,f
 11869  0105  0989               	comf	9,f
 11870  0106  00A2               	movwf	___xxtofl@val+2
 11871  0107  00A3               	movwf	___xxtofl@val+3
 11872  0108  3001               	movlw	1
 11873  0109  3196  26CD  3180   	fcall	___xxtofl
 11874  010C  0140               	movlb	0	; select bank0
 11875  010D  0823               	movf	?___xxtofl+3,w
 11876  010E  00B5               	movwf	___fldiv@b+3
 11877  010F  0822               	movf	?___xxtofl+2,w
 11878  0110  00B4               	movwf	___fldiv@b+2
 11879  0111  0821               	movf	?___xxtofl+1,w
 11880  0112  00B3               	movwf	___fldiv@b+1
 11881  0113  0820               	movf	?___xxtofl,w
 11882  0114  00B2               	movwf	___fldiv@b
 11883  0115  3186  2624  3180   	fcall	___fldiv
 11884  0118  0140               	movlb	0	; select bank0
 11885  0119  0831               	movf	?___fldiv+3,w
 11886  011A  0141               	movlb	1	; select bank1
 11887  011B  00D2               	movwf	(LED_setHSL@hue+3)^(0+128)
 11888  011C  0140               	movlb	0	; select bank0
 11889  011D  0830               	movf	?___fldiv+2,w
 11890  011E  0141               	movlb	1	; select bank1
 11891  011F  00D1               	movwf	(LED_setHSL@hue+2)^(0+128)
 11892  0120  0140               	movlb	0	; select bank0
 11893  0121  082F               	movf	?___fldiv+1,w
 11894  0122  0141               	movlb	1	; select bank1
 11895  0123  00D0               	movwf	(LED_setHSL@hue+1)^(0+128)
 11896  0124  0140               	movlb	0	; select bank0
 11897  0125  082E               	movf	?___fldiv,w
 11898  0126  0141               	movlb	1	; select bank1
 11899  0127  00CF               	movwf	LED_setHSL@hue^(0+128)
 11900                           
 11901                           ;led.c: 98:   v2 = (hsl.L < 0.5) ? (hsl.L * (1 + hsl.S)) : ((hsl.L + hsl.S) - (hsl.L * h
      +                          sl.S));
 11902  0128  3006               	movlw	6
 11903  0129  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 11904  012A  0086               	movwf	6
 11905  012B  0187               	clrf	7
 11906  012C  3F40               	moviw [0]fsr1
 11907  012D  0140               	movlb	0	; select bank0
 11908  012E  00D7               	movwf	___flge@ff1
 11909  012F  3F41               	moviw [1]fsr1
 11910  0130  00D8               	movwf	___flge@ff1+1
 11911  0131  3F42               	moviw [2]fsr1
 11912  0132  00D9               	movwf	___flge@ff1+2
 11913  0133  3F43               	moviw [3]fsr1
 11914  0134  00DA               	movwf	___flge@ff1+3
 11915  0135  303F               	movlw	63
 11916  0136  00DE               	movwf	___flge@ff2+3
 11917  0137  3000               	movlw	0
 11918  0138  00DD               	movwf	___flge@ff2+2
 11919  0139  3000               	movlw	0
 11920  013A  00DC               	movwf	___flge@ff2+1
 11921  013B  3000               	movlw	0
 11922  013C  00DB               	movwf	___flge@ff2
 11923  013D  3196  2651  3180   	fcall	___flge
 11924  0140  1C03               	btfss	3,0
 11925  0141  29B5               	goto	l5598
 11926  0142  3002               	movlw	2
 11927  0143  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 11928  0144  0086               	movwf	6
 11929  0145  0187               	clrf	7
 11930  0146  3F40               	moviw [0]fsr1
 11931  0147  0140               	movlb	0	; select bank0
 11932  0148  00A9               	movwf	___fladd@b
 11933  0149  3F41               	moviw [1]fsr1
 11934  014A  00AA               	movwf	___fladd@b+1
 11935  014B  3F42               	moviw [2]fsr1
 11936  014C  00AB               	movwf	___fladd@b+2
 11937  014D  3F43               	moviw [3]fsr1
 11938  014E  00AC               	movwf	___fladd@b+3
 11939  014F  3006               	movlw	6
 11940  0150  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 11941  0151  0086               	movwf	6
 11942  0152  0187               	clrf	7
 11943  0153  3F40               	moviw [0]fsr1
 11944  0154  00AD               	movwf	___fladd@a
 11945  0155  3F41               	moviw [1]fsr1
 11946  0156  00AE               	movwf	___fladd@a+1
 11947  0157  3F42               	moviw [2]fsr1
 11948  0158  00AF               	movwf	___fladd@a+2
 11949  0159  3F43               	moviw [3]fsr1
 11950  015A  00B0               	movwf	___fladd@a+3
 11951  015B  318C  243A  3180   	fcall	___fladd
 11952  015E  0140               	movlb	0	; select bank0
 11953  015F  082C               	movf	?___fladd+3,w
 11954  0160  0141               	movlb	1	; select bank1
 11955  0161  00BE               	movwf	(_LED_setHSL$2854+3)^(0+128)
 11956  0162  0140               	movlb	0	; select bank0
 11957  0163  082B               	movf	?___fladd+2,w
 11958  0164  0141               	movlb	1	; select bank1
 11959  0165  00BD               	movwf	(_LED_setHSL$2854+2)^(0+128)
 11960  0166  0140               	movlb	0	; select bank0
 11961  0167  082A               	movf	?___fladd+1,w
 11962  0168  0141               	movlb	1	; select bank1
 11963  0169  00BC               	movwf	(_LED_setHSL$2854+1)^(0+128)
 11964  016A  0140               	movlb	0	; select bank0
 11965  016B  0829               	movf	?___fladd,w
 11966  016C  0141               	movlb	1	; select bank1
 11967  016D  00BB               	movwf	_LED_setHSL$2854^(0+128)
 11968  016E  3002               	movlw	2
 11969  016F  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 11970  0170  0086               	movwf	6
 11971  0171  0187               	clrf	7
 11972  0172  3F40               	moviw [0]fsr1
 11973  0173  0140               	movlb	0	; select bank0
 11974  0174  00BD               	movwf	___flmul@b
 11975  0175  3F41               	moviw [1]fsr1
 11976  0176  00BE               	movwf	___flmul@b+1
 11977  0177  3F42               	moviw [2]fsr1
 11978  0178  00BF               	movwf	___flmul@b+2
 11979  0179  3F43               	moviw [3]fsr1
 11980  017A  00C0               	movwf	___flmul@b+3
 11981  017B  3006               	movlw	6
 11982  017C  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 11983  017D  0086               	movwf	6
 11984  017E  0187               	clrf	7
 11985  017F  3F40               	moviw [0]fsr1
 11986  0180  00C1               	movwf	___flmul@a
 11987  0181  3F41               	moviw [1]fsr1
 11988  0182  00C2               	movwf	___flmul@a+1
 11989  0183  3F42               	moviw [2]fsr1
 11990  0184  00C3               	movwf	___flmul@a+2
 11991  0185  3F43               	moviw [3]fsr1
 11992  0186  00C4               	movwf	___flmul@a+3
 11993  0187  3183  23F8  3180   	fcall	___flmul
 11994  018A  0140               	movlb	0	; select bank0
 11995  018B  0840               	movf	?___flmul+3,w
 11996  018C  00DA               	movwf	___flsub@a+3
 11997  018D  083F               	movf	?___flmul+2,w
 11998  018E  00D9               	movwf	___flsub@a+2
 11999  018F  083E               	movf	?___flmul+1,w
 12000  0190  00D8               	movwf	___flsub@a+1
 12001  0191  083D               	movf	?___flmul,w
 12002  0192  00D7               	movwf	___flsub@a
 12003  0193  0141               	movlb	1	; select bank1
 12004  0194  083E               	movf	(_LED_setHSL$2854+3)^(0+128),w
 12005  0195  0140               	movlb	0	; select bank0
 12006  0196  00DE               	movwf	___flsub@b+3
 12007  0197  0141               	movlb	1	; select bank1
 12008  0198  083D               	movf	(_LED_setHSL$2854+2)^(0+128),w
 12009  0199  0140               	movlb	0	; select bank0
 12010  019A  00DD               	movwf	___flsub@b+2
 12011  019B  0141               	movlb	1	; select bank1
 12012  019C  083C               	movf	(_LED_setHSL$2854+1)^(0+128),w
 12013  019D  0140               	movlb	0	; select bank0
 12014  019E  00DC               	movwf	___flsub@b+1
 12015  019F  0141               	movlb	1	; select bank1
 12016  01A0  083B               	movf	_LED_setHSL$2854^(0+128),w
 12017  01A1  0140               	movlb	0	; select bank0
 12018  01A2  00DB               	movwf	___flsub@b
 12019  01A3  3190  20B2  3180   	fcall	___flsub
 12020  01A6  0140               	movlb	0	; select bank0
 12021  01A7  085A               	movf	?___flsub+3,w
 12022  01A8  0141               	movlb	1	; select bank1
 12023  01A9  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12024  01AA  0140               	movlb	0	; select bank0
 12025  01AB  0859               	movf	?___flsub+2,w
 12026  01AC  0141               	movlb	1	; select bank1
 12027  01AD  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12028  01AE  0140               	movlb	0	; select bank0
 12029  01AF  0858               	movf	?___flsub+1,w
 12030  01B0  0141               	movlb	1	; select bank1
 12031  01B1  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12032  01B2  0140               	movlb	0	; select bank0
 12033  01B3  0857               	movf	?___flsub,w
 12034  01B4  29F3               	goto	L2
 12035  01B5                     l5598:	
 12036  01B5  3006               	movlw	6
 12037  01B6  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12038  01B7  0086               	movwf	6
 12039  01B8  0187               	clrf	7
 12040  01B9  3F40               	moviw [0]fsr1
 12041  01BA  0140               	movlb	0	; select bank0
 12042  01BB  00BD               	movwf	___flmul@b
 12043  01BC  3F41               	moviw [1]fsr1
 12044  01BD  00BE               	movwf	___flmul@b+1
 12045  01BE  3F42               	moviw [2]fsr1
 12046  01BF  00BF               	movwf	___flmul@b+2
 12047  01C0  3F43               	moviw [3]fsr1
 12048  01C1  00C0               	movwf	___flmul@b+3
 12049  01C2  303F               	movlw	63
 12050  01C3  00AC               	movwf	___fladd@b+3
 12051  01C4  3080               	movlw	128
 12052  01C5  00AB               	movwf	___fladd@b+2
 12053  01C6  3000               	movlw	0
 12054  01C7  00AA               	movwf	___fladd@b+1
 12055  01C8  3000               	movlw	0
 12056  01C9  00A9               	movwf	___fladd@b
 12057  01CA  3002               	movlw	2
 12058  01CB  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12059  01CC  0086               	movwf	6
 12060  01CD  0187               	clrf	7
 12061  01CE  3F40               	moviw [0]fsr1
 12062  01CF  00AD               	movwf	___fladd@a
 12063  01D0  3F41               	moviw [1]fsr1
 12064  01D1  00AE               	movwf	___fladd@a+1
 12065  01D2  3F42               	moviw [2]fsr1
 12066  01D3  00AF               	movwf	___fladd@a+2
 12067  01D4  3F43               	moviw [3]fsr1
 12068  01D5  00B0               	movwf	___fladd@a+3
 12069  01D6  318C  243A  3180   	fcall	___fladd
 12070  01D9  0140               	movlb	0	; select bank0
 12071  01DA  082C               	movf	?___fladd+3,w
 12072  01DB  00C4               	movwf	___flmul@a+3
 12073  01DC  082B               	movf	?___fladd+2,w
 12074  01DD  00C3               	movwf	___flmul@a+2
 12075  01DE  082A               	movf	?___fladd+1,w
 12076  01DF  00C2               	movwf	___flmul@a+1
 12077  01E0  0829               	movf	?___fladd,w
 12078  01E1  00C1               	movwf	___flmul@a
 12079  01E2  3183  23F8  3180   	fcall	___flmul
 12080  01E5  0140               	movlb	0	; select bank0
 12081  01E6  0840               	movf	?___flmul+3,w
 12082  01E7  0141               	movlb	1	; select bank1
 12083  01E8  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12084  01E9  0140               	movlb	0	; select bank0
 12085  01EA  083F               	movf	?___flmul+2,w
 12086  01EB  0141               	movlb	1	; select bank1
 12087  01EC  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12088  01ED  0140               	movlb	0	; select bank0
 12089  01EE  083E               	movf	?___flmul+1,w
 12090  01EF  0141               	movlb	1	; select bank1
 12091  01F0  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12092  01F1  0140               	movlb	0	; select bank0
 12093  01F2  083D               	movf	?___flmul,w
 12094  01F3                     L2:	
 12095  01F3  0141               	movlb	1	; select bank1
 12096  01F4  00D3               	movwf	LED_setHSL@v2^(0+128)
 12097                           
 12098                           ;led.c: 99:   v1 = 2 * hsl.L - v2;
 12099  01F5  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12100  01F6  0140               	movlb	0	; select bank0
 12101  01F7  00DA               	movwf	___flsub@a+3
 12102  01F8  0141               	movlb	1	; select bank1
 12103  01F9  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12104  01FA  0140               	movlb	0	; select bank0
 12105  01FB  00D9               	movwf	___flsub@a+2
 12106  01FC  0141               	movlb	1	; select bank1
 12107  01FD  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12108  01FE  0140               	movlb	0	; select bank0
 12109  01FF  00D8               	movwf	___flsub@a+1
 12110  0200  0141               	movlb	1	; select bank1
 12111  0201  0853               	movf	LED_setHSL@v2^(0+128),w
 12112  0202  0140               	movlb	0	; select bank0
 12113  0203  00D7               	movwf	___flsub@a
 12114  0204  3040               	movlw	64
 12115  0205  00C0               	movwf	___flmul@b+3
 12116  0206  3000               	movlw	0
 12117  0207  00BF               	movwf	___flmul@b+2
 12118  0208  3000               	movlw	0
 12119  0209  00BE               	movwf	___flmul@b+1
 12120  020A  3000               	movlw	0
 12121  020B  00BD               	movwf	___flmul@b
 12122  020C  3006               	movlw	6
 12123  020D  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12124  020E  0086               	movwf	6
 12125  020F  0187               	clrf	7
 12126  0210  3F40               	moviw [0]fsr1
 12127  0211  00C1               	movwf	___flmul@a
 12128  0212  3F41               	moviw [1]fsr1
 12129  0213  00C2               	movwf	___flmul@a+1
 12130  0214  3F42               	moviw [2]fsr1
 12131  0215  00C3               	movwf	___flmul@a+2
 12132  0216  3F43               	moviw [3]fsr1
 12133  0217  00C4               	movwf	___flmul@a+3
 12134  0218  3183  23F8  3180   	fcall	___flmul
 12135  021B  0140               	movlb	0	; select bank0
 12136  021C  0840               	movf	?___flmul+3,w
 12137  021D  00DE               	movwf	___flsub@b+3
 12138  021E  083F               	movf	?___flmul+2,w
 12139  021F  00DD               	movwf	___flsub@b+2
 12140  0220  083E               	movf	?___flmul+1,w
 12141  0221  00DC               	movwf	___flsub@b+1
 12142  0222  083D               	movf	?___flmul,w
 12143  0223  00DB               	movwf	___flsub@b
 12144  0224  3190  20B2  3180   	fcall	___flsub
 12145  0227  0140               	movlb	0	; select bank0
 12146  0228  085A               	movf	?___flsub+3,w
 12147  0229  0141               	movlb	1	; select bank1
 12148  022A  00CE               	movwf	(LED_setHSL@v1+3)^(0+128)
 12149  022B  0140               	movlb	0	; select bank0
 12150  022C  0859               	movf	?___flsub+2,w
 12151  022D  0141               	movlb	1	; select bank1
 12152  022E  00CD               	movwf	(LED_setHSL@v1+2)^(0+128)
 12153  022F  0140               	movlb	0	; select bank0
 12154  0230  0858               	movf	?___flsub+1,w
 12155  0231  0141               	movlb	1	; select bank1
 12156  0232  00CC               	movwf	(LED_setHSL@v1+1)^(0+128)
 12157  0233  0140               	movlb	0	; select bank0
 12158  0234  0857               	movf	?___flsub,w
 12159  0235  0141               	movlb	1	; select bank1
 12160  0236  00CB               	movwf	LED_setHSL@v1^(0+128)
 12161                           
 12162                           ;led.c: 101:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12163  0237  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12164  0238  0140               	movlb	0	; select bank0
 12165  0239  00B0               	movwf	___fladd@a+3
 12166  023A  0141               	movlb	1	; select bank1
 12167  023B  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12168  023C  0140               	movlb	0	; select bank0
 12169  023D  00AF               	movwf	___fladd@a+2
 12170  023E  0141               	movlb	1	; select bank1
 12171  023F  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12172  0240  0140               	movlb	0	; select bank0
 12173  0241  00AE               	movwf	___fladd@a+1
 12174  0242  0141               	movlb	1	; select bank1
 12175  0243  084F               	movf	LED_setHSL@hue^(0+128),w
 12176  0244  0140               	movlb	0	; select bank0
 12177  0245  00AD               	movwf	___fladd@a
 12178  0246  303E               	movlw	62
 12179  0247  00AC               	movwf	___fladd@b+3
 12180  0248  30AA               	movlw	170
 12181  0249  00AB               	movwf	___fladd@b+2
 12182  024A  30AA               	movlw	170
 12183  024B  00AA               	movwf	___fladd@b+1
 12184  024C  30AB               	movlw	171
 12185  024D  00A9               	movwf	___fladd@b
 12186  024E  318C  243A  3180   	fcall	___fladd
 12187  0251  0140               	movlb	0	; select bank0
 12188  0252  082C               	movf	?___fladd+3,w
 12189  0253  0141               	movlb	1	; select bank1
 12190  0254  00C6               	movwf	(_LED_setHSL$2855+3)^(0+128)
 12191  0255  0140               	movlb	0	; select bank0
 12192  0256  082B               	movf	?___fladd+2,w
 12193  0257  0141               	movlb	1	; select bank1
 12194  0258  00C5               	movwf	(_LED_setHSL$2855+2)^(0+128)
 12195  0259  0140               	movlb	0	; select bank0
 12196  025A  082A               	movf	?___fladd+1,w
 12197  025B  0141               	movlb	1	; select bank1
 12198  025C  00C4               	movwf	(_LED_setHSL$2855+1)^(0+128)
 12199  025D  0140               	movlb	0	; select bank0
 12200  025E  0829               	movf	?___fladd,w
 12201  025F  0141               	movlb	1	; select bank1
 12202  0260  00C3               	movwf	_LED_setHSL$2855^(0+128)
 12203                           
 12204                           ;led.c: 101:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12205  0261  0846               	movf	(_LED_setHSL$2855+3)^(0+128),w
 12206  0262  0140               	movlb	0	; select bank0
 12207  0263  00EE               	movwf	HueToRGB@vH+3
 12208  0264  0141               	movlb	1	; select bank1
 12209  0265  0845               	movf	(_LED_setHSL$2855+2)^(0+128),w
 12210  0266  0140               	movlb	0	; select bank0
 12211  0267  00ED               	movwf	HueToRGB@vH+2
 12212  0268  0141               	movlb	1	; select bank1
 12213  0269  0844               	movf	(_LED_setHSL$2855+1)^(0+128),w
 12214  026A  0140               	movlb	0	; select bank0
 12215  026B  00EC               	movwf	HueToRGB@vH+1
 12216  026C  0141               	movlb	1	; select bank1
 12217  026D  0843               	movf	_LED_setHSL$2855^(0+128),w
 12218  026E  0140               	movlb	0	; select bank0
 12219  026F  00EB               	movwf	HueToRGB@vH
 12220  0270  0141               	movlb	1	; select bank1
 12221  0271  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12222  0272  0140               	movlb	0	; select bank0
 12223  0273  00EA               	movwf	HueToRGB@v2+3
 12224  0274  0141               	movlb	1	; select bank1
 12225  0275  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12226  0276  0140               	movlb	0	; select bank0
 12227  0277  00E9               	movwf	HueToRGB@v2+2
 12228  0278  0141               	movlb	1	; select bank1
 12229  0279  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12230  027A  0140               	movlb	0	; select bank0
 12231  027B  00E8               	movwf	HueToRGB@v2+1
 12232  027C  0141               	movlb	1	; select bank1
 12233  027D  0853               	movf	LED_setHSL@v2^(0+128),w
 12234  027E  0140               	movlb	0	; select bank0
 12235  027F  00E7               	movwf	HueToRGB@v2
 12236  0280  0141               	movlb	1	; select bank1
 12237  0281  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12238  0282  0140               	movlb	0	; select bank0
 12239  0283  00E6               	movwf	HueToRGB@v1+3
 12240  0284  0141               	movlb	1	; select bank1
 12241  0285  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12242  0286  0140               	movlb	0	; select bank0
 12243  0287  00E5               	movwf	HueToRGB@v1+2
 12244  0288  0141               	movlb	1	; select bank1
 12245  0289  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12246  028A  0140               	movlb	0	; select bank0
 12247  028B  00E4               	movwf	HueToRGB@v1+1
 12248  028C  0141               	movlb	1	; select bank1
 12249  028D  084B               	movf	LED_setHSL@v1^(0+128),w
 12250  028E  0140               	movlb	0	; select bank0
 12251  028F  00E3               	movwf	HueToRGB@v1
 12252  0290  318E  261C  3180   	fcall	_HueToRGB
 12253  0293  0140               	movlb	0	; select bank0
 12254  0294  0866               	movf	?_HueToRGB+3,w
 12255  0295  0141               	movlb	1	; select bank1
 12256  0296  00CA               	movwf	(_LED_setHSL$2856+3)^(0+128)
 12257  0297  0140               	movlb	0	; select bank0
 12258  0298  0865               	movf	?_HueToRGB+2,w
 12259  0299  0141               	movlb	1	; select bank1
 12260  029A  00C9               	movwf	(_LED_setHSL$2856+2)^(0+128)
 12261  029B  0140               	movlb	0	; select bank0
 12262  029C  0864               	movf	?_HueToRGB+1,w
 12263  029D  0141               	movlb	1	; select bank1
 12264  029E  00C8               	movwf	(_LED_setHSL$2856+1)^(0+128)
 12265  029F  0140               	movlb	0	; select bank0
 12266  02A0  0863               	movf	?_HueToRGB,w
 12267  02A1  0141               	movlb	1	; select bank1
 12268  02A2  00C7               	movwf	_LED_setHSL$2856^(0+128)
 12269                           
 12270                           ;led.c: 101:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12271  02A3  084A               	movf	(_LED_setHSL$2856+3)^(0+128),w
 12272  02A4  0140               	movlb	0	; select bank0
 12273  02A5  00C4               	movwf	___flmul@a+3
 12274  02A6  0141               	movlb	1	; select bank1
 12275  02A7  0849               	movf	(_LED_setHSL$2856+2)^(0+128),w
 12276  02A8  0140               	movlb	0	; select bank0
 12277  02A9  00C3               	movwf	___flmul@a+2
 12278  02AA  0141               	movlb	1	; select bank1
 12279  02AB  0848               	movf	(_LED_setHSL$2856+1)^(0+128),w
 12280  02AC  0140               	movlb	0	; select bank0
 12281  02AD  00C2               	movwf	___flmul@a+1
 12282  02AE  0141               	movlb	1	; select bank1
 12283  02AF  0847               	movf	_LED_setHSL$2856^(0+128),w
 12284  02B0  0140               	movlb	0	; select bank0
 12285  02B1  00C1               	movwf	___flmul@a
 12286  02B2  3043               	movlw	67
 12287  02B3  00C0               	movwf	___flmul@b+3
 12288  02B4  307F               	movlw	127
 12289  02B5  00BF               	movwf	___flmul@b+2
 12290  02B6  3000               	movlw	0
 12291  02B7  00BE               	movwf	___flmul@b+1
 12292  02B8  3000               	movlw	0
 12293  02B9  00BD               	movwf	___flmul@b
 12294  02BA  3183  23F8  3180   	fcall	___flmul
 12295  02BD  0140               	movlb	0	; select bank0
 12296  02BE  0840               	movf	?___flmul+3,w
 12297  02BF  0141               	movlb	1	; select bank1
 12298  02C0  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12299  02C1  0140               	movlb	0	; select bank0
 12300  02C2  083F               	movf	?___flmul+2,w
 12301  02C3  0141               	movlb	1	; select bank1
 12302  02C4  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12303  02C5  0140               	movlb	0	; select bank0
 12304  02C6  083E               	movf	?___flmul+1,w
 12305  02C7  0141               	movlb	1	; select bank1
 12306  02C8  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12307  02C9  0140               	movlb	0	; select bank0
 12308  02CA  083D               	movf	?___flmul,w
 12309  02CB  0141               	movlb	1	; select bank1
 12310  02CC  00A4               	movwf	___fltol@f1^(0+128)
 12311  02CD  3194  2492  3180   	fcall	___fltol
 12312  02D0  0141               	movlb	1	; select bank1
 12313  02D1  0824               	movf	?___fltol^(0+128),w
 12314  02D2  00B9               	movwf	??_LED_setHSL^(0+128)
 12315  02D3  0839               	movf	??_LED_setHSL^(0+128),w
 12316  02D4  00D7               	movwf	LED_setHSL@rgb^(0+128)
 12317                           
 12318                           ;led.c: 102:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12319  02D5  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12320  02D6  0140               	movlb	0	; select bank0
 12321  02D7  00EE               	movwf	HueToRGB@vH+3
 12322  02D8  0141               	movlb	1	; select bank1
 12323  02D9  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12324  02DA  0140               	movlb	0	; select bank0
 12325  02DB  00ED               	movwf	HueToRGB@vH+2
 12326  02DC  0141               	movlb	1	; select bank1
 12327  02DD  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12328  02DE  0140               	movlb	0	; select bank0
 12329  02DF  00EC               	movwf	HueToRGB@vH+1
 12330  02E0  0141               	movlb	1	; select bank1
 12331  02E1  084F               	movf	LED_setHSL@hue^(0+128),w
 12332  02E2  0140               	movlb	0	; select bank0
 12333  02E3  00EB               	movwf	HueToRGB@vH
 12334  02E4  0141               	movlb	1	; select bank1
 12335  02E5  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12336  02E6  0140               	movlb	0	; select bank0
 12337  02E7  00EA               	movwf	HueToRGB@v2+3
 12338  02E8  0141               	movlb	1	; select bank1
 12339  02E9  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12340  02EA  0140               	movlb	0	; select bank0
 12341  02EB  00E9               	movwf	HueToRGB@v2+2
 12342  02EC  0141               	movlb	1	; select bank1
 12343  02ED  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12344  02EE  0140               	movlb	0	; select bank0
 12345  02EF  00E8               	movwf	HueToRGB@v2+1
 12346  02F0  0141               	movlb	1	; select bank1
 12347  02F1  0853               	movf	LED_setHSL@v2^(0+128),w
 12348  02F2  0140               	movlb	0	; select bank0
 12349  02F3  00E7               	movwf	HueToRGB@v2
 12350  02F4  0141               	movlb	1	; select bank1
 12351  02F5  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12352  02F6  0140               	movlb	0	; select bank0
 12353  02F7  00E6               	movwf	HueToRGB@v1+3
 12354  02F8  0141               	movlb	1	; select bank1
 12355  02F9  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12356  02FA  0140               	movlb	0	; select bank0
 12357  02FB  00E5               	movwf	HueToRGB@v1+2
 12358  02FC  0141               	movlb	1	; select bank1
 12359  02FD  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12360  02FE  0140               	movlb	0	; select bank0
 12361  02FF  00E4               	movwf	HueToRGB@v1+1
 12362  0300  0141               	movlb	1	; select bank1
 12363  0301  084B               	movf	LED_setHSL@v1^(0+128),w
 12364  0302  0140               	movlb	0	; select bank0
 12365  0303  00E3               	movwf	HueToRGB@v1
 12366  0304  318E  261C  3180   	fcall	_HueToRGB
 12367  0307  0140               	movlb	0	; select bank0
 12368  0308  0866               	movf	?_HueToRGB+3,w
 12369  0309  0141               	movlb	1	; select bank1
 12370  030A  00C2               	movwf	(_LED_setHSL$2857+3)^(0+128)
 12371  030B  0140               	movlb	0	; select bank0
 12372  030C  0865               	movf	?_HueToRGB+2,w
 12373  030D  0141               	movlb	1	; select bank1
 12374  030E  00C1               	movwf	(_LED_setHSL$2857+2)^(0+128)
 12375  030F  0140               	movlb	0	; select bank0
 12376  0310  0864               	movf	?_HueToRGB+1,w
 12377  0311  0141               	movlb	1	; select bank1
 12378  0312  00C0               	movwf	(_LED_setHSL$2857+1)^(0+128)
 12379  0313  0140               	movlb	0	; select bank0
 12380  0314  0863               	movf	?_HueToRGB,w
 12381  0315  0141               	movlb	1	; select bank1
 12382  0316  00BF               	movwf	_LED_setHSL$2857^(0+128)
 12383                           
 12384                           ;led.c: 102:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12385  0317  0842               	movf	(_LED_setHSL$2857+3)^(0+128),w
 12386  0318  0140               	movlb	0	; select bank0
 12387  0319  00C4               	movwf	___flmul@a+3
 12388  031A  0141               	movlb	1	; select bank1
 12389  031B  0841               	movf	(_LED_setHSL$2857+2)^(0+128),w
 12390  031C  0140               	movlb	0	; select bank0
 12391  031D  00C3               	movwf	___flmul@a+2
 12392  031E  0141               	movlb	1	; select bank1
 12393  031F  0840               	movf	(_LED_setHSL$2857+1)^(0+128),w
 12394  0320  0140               	movlb	0	; select bank0
 12395  0321  00C2               	movwf	___flmul@a+1
 12396  0322  0141               	movlb	1	; select bank1
 12397  0323  083F               	movf	_LED_setHSL$2857^(0+128),w
 12398  0324  0140               	movlb	0	; select bank0
 12399  0325  00C1               	movwf	___flmul@a
 12400  0326  3043               	movlw	67
 12401  0327  00C0               	movwf	___flmul@b+3
 12402  0328  307F               	movlw	127
 12403  0329  00BF               	movwf	___flmul@b+2
 12404  032A  3000               	movlw	0
 12405  032B  00BE               	movwf	___flmul@b+1
 12406  032C  3000               	movlw	0
 12407  032D  00BD               	movwf	___flmul@b
 12408  032E  3183  23F8  3180   	fcall	___flmul
 12409  0331  0140               	movlb	0	; select bank0
 12410  0332  0840               	movf	?___flmul+3,w
 12411  0333  0141               	movlb	1	; select bank1
 12412  0334  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12413  0335  0140               	movlb	0	; select bank0
 12414  0336  083F               	movf	?___flmul+2,w
 12415  0337  0141               	movlb	1	; select bank1
 12416  0338  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12417  0339  0140               	movlb	0	; select bank0
 12418  033A  083E               	movf	?___flmul+1,w
 12419  033B  0141               	movlb	1	; select bank1
 12420  033C  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12421  033D  0140               	movlb	0	; select bank0
 12422  033E  083D               	movf	?___flmul,w
 12423  033F  0141               	movlb	1	; select bank1
 12424  0340  00A4               	movwf	___fltol@f1^(0+128)
 12425  0341  3194  2492  3180   	fcall	___fltol
 12426  0344  0141               	movlb	1	; select bank1
 12427  0345  0824               	movf	?___fltol^(0+128),w
 12428  0346  00B9               	movwf	??_LED_setHSL^(0+128)
 12429  0347  0839               	movf	??_LED_setHSL^(0+128),w
 12430  0348  00D8               	movwf	(LED_setHSL@rgb^(0+128)+1)
 12431                           
 12432                           ;led.c: 103:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12433  0349  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12434  034A  0140               	movlb	0	; select bank0
 12435  034B  00B0               	movwf	___fladd@a+3
 12436  034C  0141               	movlb	1	; select bank1
 12437  034D  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12438  034E  0140               	movlb	0	; select bank0
 12439  034F  00AF               	movwf	___fladd@a+2
 12440  0350  0141               	movlb	1	; select bank1
 12441  0351  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12442  0352  0140               	movlb	0	; select bank0
 12443  0353  00AE               	movwf	___fladd@a+1
 12444  0354  0141               	movlb	1	; select bank1
 12445  0355  084F               	movf	LED_setHSL@hue^(0+128),w
 12446  0356  0140               	movlb	0	; select bank0
 12447  0357  00AD               	movwf	___fladd@a
 12448  0358  30BE               	movlw	190
 12449  0359  00AC               	movwf	___fladd@b+3
 12450  035A  30AA               	movlw	170
 12451  035B  00AB               	movwf	___fladd@b+2
 12452  035C  30AA               	movlw	170
 12453  035D  00AA               	movwf	___fladd@b+1
 12454  035E  30AB               	movlw	171
 12455  035F  00A9               	movwf	___fladd@b
 12456  0360  318C  243A  3180   	fcall	___fladd
 12457  0363  0140               	movlb	0	; select bank0
 12458  0364  082C               	movf	?___fladd+3,w
 12459  0365  0141               	movlb	1	; select bank1
 12460  0366  00C6               	movwf	(_LED_setHSL$2855+3)^(0+128)
 12461  0367  0140               	movlb	0	; select bank0
 12462  0368  082B               	movf	?___fladd+2,w
 12463  0369  0141               	movlb	1	; select bank1
 12464  036A  00C5               	movwf	(_LED_setHSL$2855+2)^(0+128)
 12465  036B  0140               	movlb	0	; select bank0
 12466  036C  082A               	movf	?___fladd+1,w
 12467  036D  0141               	movlb	1	; select bank1
 12468  036E  00C4               	movwf	(_LED_setHSL$2855+1)^(0+128)
 12469  036F  0140               	movlb	0	; select bank0
 12470  0370  0829               	movf	?___fladd,w
 12471  0371  0141               	movlb	1	; select bank1
 12472  0372  00C3               	movwf	_LED_setHSL$2855^(0+128)
 12473                           
 12474                           ;led.c: 103:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12475  0373  0846               	movf	(_LED_setHSL$2855+3)^(0+128),w
 12476  0374  0140               	movlb	0	; select bank0
 12477  0375  00EE               	movwf	HueToRGB@vH+3
 12478  0376  0141               	movlb	1	; select bank1
 12479  0377  0845               	movf	(_LED_setHSL$2855+2)^(0+128),w
 12480  0378  0140               	movlb	0	; select bank0
 12481  0379  00ED               	movwf	HueToRGB@vH+2
 12482  037A  0141               	movlb	1	; select bank1
 12483  037B  0844               	movf	(_LED_setHSL$2855+1)^(0+128),w
 12484  037C  0140               	movlb	0	; select bank0
 12485  037D  00EC               	movwf	HueToRGB@vH+1
 12486  037E  0141               	movlb	1	; select bank1
 12487  037F  0843               	movf	_LED_setHSL$2855^(0+128),w
 12488  0380  0140               	movlb	0	; select bank0
 12489  0381  00EB               	movwf	HueToRGB@vH
 12490  0382  0141               	movlb	1	; select bank1
 12491  0383  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12492  0384  0140               	movlb	0	; select bank0
 12493  0385  00EA               	movwf	HueToRGB@v2+3
 12494  0386  0141               	movlb	1	; select bank1
 12495  0387  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12496  0388  0140               	movlb	0	; select bank0
 12497  0389  00E9               	movwf	HueToRGB@v2+2
 12498  038A  0141               	movlb	1	; select bank1
 12499  038B  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12500  038C  0140               	movlb	0	; select bank0
 12501  038D  00E8               	movwf	HueToRGB@v2+1
 12502  038E  0141               	movlb	1	; select bank1
 12503  038F  0853               	movf	LED_setHSL@v2^(0+128),w
 12504  0390  0140               	movlb	0	; select bank0
 12505  0391  00E7               	movwf	HueToRGB@v2
 12506  0392  0141               	movlb	1	; select bank1
 12507  0393  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12508  0394  0140               	movlb	0	; select bank0
 12509  0395  00E6               	movwf	HueToRGB@v1+3
 12510  0396  0141               	movlb	1	; select bank1
 12511  0397  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12512  0398  0140               	movlb	0	; select bank0
 12513  0399  00E5               	movwf	HueToRGB@v1+2
 12514  039A  0141               	movlb	1	; select bank1
 12515  039B  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12516  039C  0140               	movlb	0	; select bank0
 12517  039D  00E4               	movwf	HueToRGB@v1+1
 12518  039E  0141               	movlb	1	; select bank1
 12519  039F  084B               	movf	LED_setHSL@v1^(0+128),w
 12520  03A0  0140               	movlb	0	; select bank0
 12521  03A1  00E3               	movwf	HueToRGB@v1
 12522  03A2  318E  261C  3180   	fcall	_HueToRGB
 12523  03A5  0140               	movlb	0	; select bank0
 12524  03A6  0866               	movf	?_HueToRGB+3,w
 12525  03A7  0141               	movlb	1	; select bank1
 12526  03A8  00CA               	movwf	(_LED_setHSL$2856+3)^(0+128)
 12527  03A9  0140               	movlb	0	; select bank0
 12528  03AA  0865               	movf	?_HueToRGB+2,w
 12529  03AB  0141               	movlb	1	; select bank1
 12530  03AC  00C9               	movwf	(_LED_setHSL$2856+2)^(0+128)
 12531  03AD  0140               	movlb	0	; select bank0
 12532  03AE  0864               	movf	?_HueToRGB+1,w
 12533  03AF  0141               	movlb	1	; select bank1
 12534  03B0  00C8               	movwf	(_LED_setHSL$2856+1)^(0+128)
 12535  03B1  0140               	movlb	0	; select bank0
 12536  03B2  0863               	movf	?_HueToRGB,w
 12537  03B3  0141               	movlb	1	; select bank1
 12538  03B4  00C7               	movwf	_LED_setHSL$2856^(0+128)
 12539                           
 12540                           ;led.c: 103:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12541  03B5  084A               	movf	(_LED_setHSL$2856+3)^(0+128),w
 12542  03B6  0140               	movlb	0	; select bank0
 12543  03B7  00C4               	movwf	___flmul@a+3
 12544  03B8  0141               	movlb	1	; select bank1
 12545  03B9  0849               	movf	(_LED_setHSL$2856+2)^(0+128),w
 12546  03BA  0140               	movlb	0	; select bank0
 12547  03BB  00C3               	movwf	___flmul@a+2
 12548  03BC  0141               	movlb	1	; select bank1
 12549  03BD  0848               	movf	(_LED_setHSL$2856+1)^(0+128),w
 12550  03BE  0140               	movlb	0	; select bank0
 12551  03BF  00C2               	movwf	___flmul@a+1
 12552  03C0  0141               	movlb	1	; select bank1
 12553  03C1  0847               	movf	_LED_setHSL$2856^(0+128),w
 12554  03C2  0140               	movlb	0	; select bank0
 12555  03C3  00C1               	movwf	___flmul@a
 12556  03C4  3043               	movlw	67
 12557  03C5  00C0               	movwf	___flmul@b+3
 12558  03C6  307F               	movlw	127
 12559  03C7  00BF               	movwf	___flmul@b+2
 12560  03C8  3000               	movlw	0
 12561  03C9  00BE               	movwf	___flmul@b+1
 12562  03CA  3000               	movlw	0
 12563  03CB  00BD               	movwf	___flmul@b
 12564  03CC  3183  23F8  3180   	fcall	___flmul
 12565  03CF  0140               	movlb	0	; select bank0
 12566  03D0  0840               	movf	?___flmul+3,w
 12567  03D1  0141               	movlb	1	; select bank1
 12568  03D2  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12569  03D3  0140               	movlb	0	; select bank0
 12570  03D4  083F               	movf	?___flmul+2,w
 12571  03D5  0141               	movlb	1	; select bank1
 12572  03D6  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12573  03D7  0140               	movlb	0	; select bank0
 12574  03D8  083E               	movf	?___flmul+1,w
 12575  03D9  0141               	movlb	1	; select bank1
 12576  03DA  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12577  03DB  0140               	movlb	0	; select bank0
 12578  03DC  083D               	movf	?___flmul,w
 12579  03DD  0141               	movlb	1	; select bank1
 12580  03DE  00A4               	movwf	___fltol@f1^(0+128)
 12581  03DF  3194  2492  3180   	fcall	___fltol
 12582  03E2  0141               	movlb	1	; select bank1
 12583  03E3  0824               	movf	?___fltol^(0+128),w
 12584  03E4  00B9               	movwf	??_LED_setHSL^(0+128)
 12585  03E5  0839               	movf	??_LED_setHSL^(0+128),w
 12586  03E6  00D9               	movwf	(LED_setHSL@rgb^(0+128)+2)
 12587  03E7                     l5616:	
 12588                           
 12589                           ;led.c: 106:  LED_setColor(rgb.R, rgb.G, rgb.B, 0);
 12590  03E7  0858               	movf	(LED_setHSL@rgb^(0+128)+1),w
 12591  03E8  00B9               	movwf	??_LED_setHSL^(0+128)
 12592  03E9  0839               	movf	??_LED_setHSL^(0+128),w
 12593  03EA  0140               	movlb	0	; select bank0
 12594  03EB  00A0               	movwf	LED_setColor@green
 12595  03EC  0141               	movlb	1	; select bank1
 12596  03ED  0859               	movf	(LED_setHSL@rgb^(0+128)+2),w
 12597  03EE  00BA               	movwf	(??_LED_setHSL+1)^(0+128)
 12598  03EF  083A               	movf	(??_LED_setHSL+1)^(0+128),w
 12599  03F0  0140               	movlb	0	; select bank0
 12600  03F1  00A1               	movwf	LED_setColor@white
 12601  03F2  01A2               	clrf	LED_setColor@blue
 12602  03F3  0141               	movlb	1	; select bank1
 12603  03F4  0857               	movf	LED_setHSL@rgb^(0+128),w
 12604  03F5  3193  237B         	fcall	_LED_setColor
 12605  03F7  0008               	return
 12606  03F8                     __end_of_LED_setHSL:	
 12607                           
 12608                           	psect	text38
 12609  16CD                     __ptext38:	
 12610 ;; *************** function ___xxtofl *****************
 12611 ;; Defined at:
 12612 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;  sign            1    wreg     unsigned char 
 12615 ;;  val             4    0[BANK0 ] long 
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;  sign            1    8[BANK0 ] unsigned char 
 12618 ;;  arg             4   10[BANK0 ] unsigned long 
 12619 ;;  exp             1    9[BANK0 ] unsigned char 
 12620 ;; Return value:  Size  Location     Type
 12621 ;;                  4    0[BANK0 ] unsigned char 
 12622 ;; Registers used:
 12623 ;;		wreg, status,2, status,0
 12624 ;; Tracked objects:
 12625 ;;		On entry : 0/0
 12626 ;;		On exit  : 0/0
 12627 ;;		Unchanged: 0/0
 12628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12629 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12630 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12631 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12632 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12633 ;;Total ram usage:       14 bytes
 12634 ;; Hardware stack levels used:    1
 12635 ;; Hardware stack levels required when called:    4
 12636 ;; This function calls:
 12637 ;;		Nothing
 12638 ;; This function is called by:
 12639 ;;		_LED_setHSL
 12640 ;; This function uses a non-reentrant model
 12641 ;;
 12642                           
 12643                           
 12644                           ;psect for function ___xxtofl
 12645  16CD                     ___xxtofl:	
 12646                           
 12647                           ;incstack = 0
 12648                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12649                           ;___xxtofl@sign stored from wreg
 12650  16CD  0140               	movlb	0	; select bank0
 12651  16CE  00A8               	movwf	___xxtofl@sign
 12652  16CF  0828               	movf	___xxtofl@sign,w
 12653  16D0  1D03               	btfss	3,2
 12654  16D1  1FA3               	btfss	___xxtofl@val+3,7
 12655  16D2  2EE3               	goto	l4276
 12656  16D3  0920               	comf	___xxtofl@val,w
 12657  16D4  00AA               	movwf	___xxtofl@arg
 12658  16D5  0921               	comf	___xxtofl@val+1,w
 12659  16D6  00AB               	movwf	___xxtofl@arg+1
 12660  16D7  0922               	comf	___xxtofl@val+2,w
 12661  16D8  00AC               	movwf	___xxtofl@arg+2
 12662  16D9  0923               	comf	___xxtofl@val+3,w
 12663  16DA  00AD               	movwf	___xxtofl@arg+3
 12664  16DB  0AAA               	incf	___xxtofl@arg,f
 12665  16DC  1903               	skipnz
 12666  16DD  0AAB               	incf	___xxtofl@arg+1,f
 12667  16DE  1903               	skipnz
 12668  16DF  0AAC               	incf	___xxtofl@arg+2,f
 12669  16E0  1903               	skipnz
 12670  16E1  0AAD               	incf	___xxtofl@arg+3,f
 12671  16E2  2EEB               	goto	l1709
 12672  16E3                     l4276:	
 12673  16E3  0823               	movf	___xxtofl@val+3,w
 12674  16E4  00AD               	movwf	___xxtofl@arg+3
 12675  16E5  0822               	movf	___xxtofl@val+2,w
 12676  16E6  00AC               	movwf	___xxtofl@arg+2
 12677  16E7  0821               	movf	___xxtofl@val+1,w
 12678  16E8  00AB               	movwf	___xxtofl@arg+1
 12679  16E9  0820               	movf	___xxtofl@val,w
 12680  16EA  00AA               	movwf	___xxtofl@arg
 12681  16EB                     l1709:	
 12682  16EB  0823               	movf	___xxtofl@val+3,w
 12683  16EC  0422               	iorwf	___xxtofl@val+2,w
 12684  16ED  0421               	iorwf	___xxtofl@val+1,w
 12685  16EE  0420               	iorwf	___xxtofl@val,w
 12686  16EF  1D03               	skipz
 12687  16F0  2EFA               	goto	l4282
 12688  16F1  3000               	movlw	0
 12689  16F2  00A3               	movwf	?___xxtofl+3
 12690  16F3  3000               	movlw	0
 12691  16F4  00A2               	movwf	?___xxtofl+2
 12692  16F5  3000               	movlw	0
 12693  16F6  00A1               	movwf	?___xxtofl+1
 12694  16F7  3000               	movlw	0
 12695  16F8  00A0               	movwf	?___xxtofl
 12696  16F9  0008               	return
 12697  16FA                     l4282:	
 12698  16FA  3096               	movlw	150
 12699  16FB  00A4               	movwf	??___xxtofl
 12700  16FC  0824               	movf	??___xxtofl,w
 12701  16FD  00A9               	movwf	___xxtofl@exp
 12702  16FE                     l4286:	
 12703  16FE  30FE               	movlw	254
 12704  16FF  052D               	andwf	___xxtofl@arg+3,w
 12705  1700  1903               	btfsc	3,2
 12706  1701  2F21               	goto	l1715
 12707  1702  3001               	movlw	1
 12708  1703  00A4               	movwf	??___xxtofl
 12709  1704  0824               	movf	??___xxtofl,w
 12710  1705  07A9               	addwf	___xxtofl@exp,f
 12711  1706  3001               	movlw	1
 12712  1707                     u4125:	
 12713  1707  36AD               	lsrf	___xxtofl@arg+3,f
 12714  1708  0CAC               	rrf	___xxtofl@arg+2,f
 12715  1709  0CAB               	rrf	___xxtofl@arg+1,f
 12716  170A  0CAA               	rrf	___xxtofl@arg,f
 12717  170B  0B89               	decfsz	9,f
 12718  170C  2F07               	goto	u4125
 12719  170D  2EFE               	goto	l4286
 12720  170E                     l4288:	
 12721  170E  3001               	movlw	1
 12722  170F  00A4               	movwf	??___xxtofl
 12723  1710  0824               	movf	??___xxtofl,w
 12724  1711  07A9               	addwf	___xxtofl@exp,f
 12725  1712  3001               	movlw	1
 12726  1713  07AA               	addwf	___xxtofl@arg,f
 12727  1714  3000               	movlw	0
 12728  1715  3DAB               	addwfc	___xxtofl@arg+1,f
 12729  1716  3000               	movlw	0
 12730  1717  3DAC               	addwfc	___xxtofl@arg+2,f
 12731  1718  3000               	movlw	0
 12732  1719  3DAD               	addwfc	___xxtofl@arg+3,f
 12733  171A  3001               	movlw	1
 12734  171B                     u4145:	
 12735  171B  36AD               	lsrf	___xxtofl@arg+3,f
 12736  171C  0CAC               	rrf	___xxtofl@arg+2,f
 12737  171D  0CAB               	rrf	___xxtofl@arg+1,f
 12738  171E  0CAA               	rrf	___xxtofl@arg,f
 12739  171F  0B89               	decfsz	9,f
 12740  1720  2F1B               	goto	u4145
 12741  1721                     l1715:	
 12742  1721  30FF               	movlw	255
 12743  1722  052D               	andwf	___xxtofl@arg+3,w
 12744  1723  1903               	btfsc	3,2
 12745  1724  2F33               	goto	l4296
 12746  1725  2F0E               	goto	l4288
 12747  1726                     l4298:	
 12748  1726  3002               	movlw	2
 12749  1727  0229               	subwf	___xxtofl@exp,w
 12750  1728  1C03               	btfss	3,0
 12751  1729  2F35               	goto	l1722
 12752  172A  3001               	movlw	1
 12753  172B  02A9               	subwf	___xxtofl@exp,f
 12754  172C  3001               	movlw	1
 12755  172D                     u4165:	
 12756  172D  35AA               	lslf	___xxtofl@arg,f
 12757  172E  0DAB               	rlf	___xxtofl@arg+1,f
 12758  172F  0DAC               	rlf	___xxtofl@arg+2,f
 12759  1730  0DAD               	rlf	___xxtofl@arg+3,f
 12760  1731  0B89               	decfsz	9,f
 12761  1732  2F2D               	goto	u4165
 12762  1733                     l4296:	
 12763  1733  1FAC               	btfss	___xxtofl@arg+2,7
 12764  1734  2F26               	goto	l4298
 12765  1735                     l1722:	
 12766  1735  1829               	btfsc	___xxtofl@exp,0
 12767  1736  2F3F               	goto	l1723
 12768  1737  30FF               	movlw	255
 12769  1738  05AA               	andwf	___xxtofl@arg,f
 12770  1739  30FF               	movlw	255
 12771  173A  05AB               	andwf	___xxtofl@arg+1,f
 12772  173B  307F               	movlw	127
 12773  173C  05AC               	andwf	___xxtofl@arg+2,f
 12774  173D  30FF               	movlw	255
 12775  173E  05AD               	andwf	___xxtofl@arg+3,f
 12776  173F                     l1723:	
 12777  173F  1003               	clrc
 12778  1740  0CA9               	rrf	___xxtofl@exp,f
 12779  1741  0829               	movf	___xxtofl@exp,w
 12780  1742  00A4               	movwf	??___xxtofl
 12781  1743  01A5               	clrf	??___xxtofl+1
 12782  1744  01A6               	clrf	??___xxtofl+2
 12783  1745  01A7               	clrf	??___xxtofl+3
 12784  1746  3018               	movlw	24
 12785  1747                     u4205:	
 12786  1747  35A4               	lslf	??___xxtofl,f
 12787  1748  0DA5               	rlf	??___xxtofl+1,f
 12788  1749  0DA6               	rlf	??___xxtofl+2,f
 12789  174A  0DA7               	rlf	??___xxtofl+3,f
 12790  174B  0B89               	decfsz	9,f
 12791  174C  2F47               	goto	u4205
 12792  174D  0824               	movf	??___xxtofl,w
 12793  174E  04AA               	iorwf	___xxtofl@arg,f
 12794  174F  0825               	movf	??___xxtofl+1,w
 12795  1750  04AB               	iorwf	___xxtofl@arg+1,f
 12796  1751  0826               	movf	??___xxtofl+2,w
 12797  1752  04AC               	iorwf	___xxtofl@arg+2,f
 12798  1753  0827               	movf	??___xxtofl+3,w
 12799  1754  04AD               	iorwf	___xxtofl@arg+3,f
 12800  1755  0828               	movf	___xxtofl@sign,w
 12801  1756  1D03               	btfss	3,2
 12802  1757  1FA3               	btfss	___xxtofl@val+3,7
 12803  1758  2F5A               	goto	l4310
 12804  1759  17AD               	bsf	___xxtofl@arg+3,7
 12805  175A                     l4310:	
 12806  175A  082D               	movf	___xxtofl@arg+3,w
 12807  175B  00A3               	movwf	?___xxtofl+3
 12808  175C  082C               	movf	___xxtofl@arg+2,w
 12809  175D  00A2               	movwf	?___xxtofl+2
 12810  175E  082B               	movf	___xxtofl@arg+1,w
 12811  175F  00A1               	movwf	?___xxtofl+1
 12812  1760  082A               	movf	___xxtofl@arg,w
 12813  1761  00A0               	movwf	?___xxtofl
 12814  1762  0008               	return
 12815  1763                     __end_of___xxtofl:	
 12816                           
 12817                           	psect	text39
 12818  1492                     __ptext39:	
 12819 ;; *************** function ___fltol *****************
 12820 ;; Defined at:
 12821 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;  f1              4    4[BANK1 ] unsigned char 
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;  exp1            1   14[BANK1 ] unsigned char 
 12826 ;;  sign1           1   13[BANK1 ] unsigned char 
 12827 ;; Return value:  Size  Location     Type
 12828 ;;                  4    4[BANK1 ] long 
 12829 ;; Registers used:
 12830 ;;		wreg, status,2, status,0
 12831 ;; Tracked objects:
 12832 ;;		On entry : 0/0
 12833 ;;		On exit  : 0/0
 12834 ;;		Unchanged: 0/0
 12835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12836 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12837 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12838 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12839 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12840 ;;Total ram usage:       11 bytes
 12841 ;; Hardware stack levels used:    1
 12842 ;; Hardware stack levels required when called:    4
 12843 ;; This function calls:
 12844 ;;		Nothing
 12845 ;; This function is called by:
 12846 ;;		_LED_setHSL
 12847 ;; This function uses a non-reentrant model
 12848 ;;
 12849                           
 12850                           
 12851                           ;psect for function ___fltol
 12852  1492                     ___fltol:	
 12853                           
 12854                           ;incstack = 0
 12855                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12856  1492  1003               	clrc
 12857  1493  0141               	movlb	1	; select bank1
 12858  1494  0D26               	rlf	(___fltol@f1+2)^(0+128),w
 12859  1495  0D27               	rlf	(___fltol@f1+3)^(0+128),w
 12860  1496  00A8               	movwf	??___fltol^(0+128)
 12861  1497  0828               	movf	??___fltol^(0+128),w
 12862  1498  00AE               	movwf	___fltol@exp1^(0+128)
 12863  1499  082E               	movf	___fltol@exp1^(0+128),w
 12864  149A  1D03               	btfss	3,2
 12865  149B  2CA5               	goto	l5486
 12866  149C                     l5482:	
 12867  149C  3000               	movlw	0
 12868  149D  00A7               	movwf	(?___fltol+3)^(0+128)
 12869  149E  3000               	movlw	0
 12870  149F  00A6               	movwf	(?___fltol+2)^(0+128)
 12871  14A0  3000               	movlw	0
 12872  14A1  00A5               	movwf	(?___fltol+1)^(0+128)
 12873  14A2  3000               	movlw	0
 12874  14A3  00A4               	movwf	?___fltol^(0+128)
 12875  14A4  0008               	return
 12876  14A5                     l5486:	
 12877  14A5  0824               	movf	___fltol@f1^(0+128),w
 12878  14A6  00A8               	movwf	??___fltol^(0+128)
 12879  14A7  0825               	movf	(___fltol@f1+1)^(0+128),w
 12880  14A8  00A9               	movwf	(??___fltol^(0+128)+1)
 12881  14A9  0826               	movf	(___fltol@f1+2)^(0+128),w
 12882  14AA  00AA               	movwf	(??___fltol^(0+128)+2)
 12883  14AB  0827               	movf	(___fltol@f1+3)^(0+128),w
 12884  14AC  00AB               	movwf	(??___fltol^(0+128)+3)
 12885  14AD  301F               	movlw	31
 12886  14AE                     u5705:	
 12887  14AE  36AB               	lsrf	(??___fltol^(0+128)+3),f
 12888  14AF  0CAA               	rrf	(??___fltol^(0+128)+2),f
 12889  14B0  0CA9               	rrf	(??___fltol^(0+128)+1),f
 12890  14B1  0CA8               	rrf	??___fltol^(0+128),f
 12891  14B2  0B89               	decfsz	9,f
 12892  14B3  2CAE               	goto	u5705
 12893  14B4  0828               	movf	??___fltol^(0+128),w
 12894  14B5  00AC               	movwf	(??___fltol+4)^(0+128)
 12895  14B6  082C               	movf	(??___fltol+4)^(0+128),w
 12896  14B7  00AD               	movwf	___fltol@sign1^(0+128)
 12897  14B8  17A6               	bsf	(___fltol@f1^(0+128)+2),7
 12898  14B9  30FF               	movlw	255
 12899  14BA  05A4               	andwf	___fltol@f1^(0+128),f
 12900  14BB  30FF               	movlw	255
 12901  14BC  05A5               	andwf	(___fltol@f1+1)^(0+128),f
 12902  14BD  30FF               	movlw	255
 12903  14BE  05A6               	andwf	(___fltol@f1+2)^(0+128),f
 12904  14BF  3000               	movlw	0
 12905  14C0  05A7               	andwf	(___fltol@f1+3)^(0+128),f
 12906  14C1  3096               	movlw	150
 12907  14C2  02AE               	subwf	___fltol@exp1^(0+128),f
 12908  14C3  1FAE               	btfss	___fltol@exp1^(0+128),7
 12909  14C4  2CD8               	goto	l5504
 12910  14C5  082E               	movf	___fltol@exp1^(0+128),w
 12911  14C6  3A80               	xorlw	128
 12912  14C7  3E97               	addlw	151
 12913  14C8  1C03               	btfss	3,0
 12914  14C9  2C9C               	goto	l5482
 12915  14CA                     l5502:	
 12916  14CA  3001               	movlw	1
 12917  14CB                     u5735:	
 12918  14CB  36A7               	lsrf	(___fltol@f1+3)^(0+128),f
 12919  14CC  0CA6               	rrf	(___fltol@f1+2)^(0+128),f
 12920  14CD  0CA5               	rrf	(___fltol@f1+1)^(0+128),f
 12921  14CE  0CA4               	rrf	___fltol@f1^(0+128),f
 12922  14CF  0B89               	decfsz	9,f
 12923  14D0  2CCB               	goto	u5735
 12924  14D1  3001               	movlw	1
 12925  14D2  00A8               	movwf	??___fltol^(0+128)
 12926  14D3  0828               	movf	??___fltol^(0+128),w
 12927  14D4  07AE               	addwf	___fltol@exp1^(0+128),f
 12928  14D5  1903               	btfsc	3,2
 12929  14D6  2CE9               	goto	l5512
 12930  14D7  2CCA               	goto	l5502
 12931  14D8                     l5504:	
 12932  14D8  3020               	movlw	32
 12933  14D9  022E               	subwf	___fltol@exp1^(0+128),w
 12934  14DA  1803               	btfsc	3,0
 12935  14DB  2C9C               	goto	l5482
 12936  14DC                     l1475:	
 12937  14DC  082E               	movf	___fltol@exp1^(0+128),w
 12938  14DD  1903               	btfsc	3,2
 12939  14DE  2CE9               	goto	l5512
 12940  14DF  3001               	movlw	1
 12941  14E0                     u5765:	
 12942  14E0  35A4               	lslf	___fltol@f1^(0+128),f
 12943  14E1  0DA5               	rlf	(___fltol@f1+1)^(0+128),f
 12944  14E2  0DA6               	rlf	(___fltol@f1+2)^(0+128),f
 12945  14E3  0DA7               	rlf	(___fltol@f1+3)^(0+128),f
 12946  14E4  0B89               	decfsz	9,f
 12947  14E5  2CE0               	goto	u5765
 12948  14E6  3001               	movlw	1
 12949  14E7  02AE               	subwf	___fltol@exp1^(0+128),f
 12950  14E8  2CDC               	goto	l1475
 12951  14E9                     l5512:	
 12952  14E9  082D               	movf	___fltol@sign1^(0+128),w
 12953  14EA  1903               	btfsc	3,2
 12954  14EB  0008               	return
 12955  14EC  09A4               	comf	___fltol@f1^(0+128),f
 12956  14ED  09A5               	comf	(___fltol@f1+1)^(0+128),f
 12957  14EE  09A6               	comf	(___fltol@f1+2)^(0+128),f
 12958  14EF  09A7               	comf	(___fltol@f1+3)^(0+128),f
 12959  14F0  0AA4               	incf	___fltol@f1^(0+128),f
 12960  14F1  1903               	skipnz
 12961  14F2  0AA5               	incf	(___fltol@f1+1)^(0+128),f
 12962  14F3  1903               	skipnz
 12963  14F4  0AA6               	incf	(___fltol@f1+2)^(0+128),f
 12964  14F5  1903               	skipnz
 12965  14F6  0AA7               	incf	(___fltol@f1+3)^(0+128),f
 12966  14F7  0008               	return
 12967  14F8                     __end_of___fltol:	
 12968                           
 12969                           	psect	text40
 12970  13FE                     __ptext40:	
 12971 ;; *************** function ___fleq *****************
 12972 ;; Defined at:
 12973 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;  ff1             4    0[BANK0 ] long 
 12976 ;;  ff2             4    4[BANK0 ] long 
 12977 ;; Auto vars:     Size  Location     Type
 12978 ;;		None
 12979 ;; Return value:  Size  Location     Type
 12980 ;;		None               void
 12981 ;; Registers used:
 12982 ;;		wreg, status,2, status,0
 12983 ;; Tracked objects:
 12984 ;;		On entry : 0/0
 12985 ;;		On exit  : 0/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12988 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12991 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12992 ;;Total ram usage:       12 bytes
 12993 ;; Hardware stack levels used:    1
 12994 ;; Hardware stack levels required when called:    4
 12995 ;; This function calls:
 12996 ;;		Nothing
 12997 ;; This function is called by:
 12998 ;;		_LED_setHSL
 12999 ;;		_pulseColors
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           
 13004                           ;psect for function ___fleq
 13005  13FE                     ___fleq:	
 13006                           
 13007                           ;incstack = 0
 13008                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13009  13FE  3000               	movlw	0
 13010  13FF  0140               	movlb	0	; select bank0
 13011  1400  0520               	andwf	___fleq@ff1,w
 13012  1401  00A8               	movwf	??___fleq
 13013  1402  3000               	movlw	0
 13014  1403  0521               	andwf	___fleq@ff1+1,w
 13015  1404  00A9               	movwf	??___fleq+1
 13016  1405  3080               	movlw	128
 13017  1406  0522               	andwf	___fleq@ff1+2,w
 13018  1407  00AA               	movwf	??___fleq+2
 13019  1408  307F               	movlw	127
 13020  1409  0523               	andwf	___fleq@ff1+3,w
 13021  140A  00AB               	movwf	??___fleq+3
 13022  140B  082B               	movf	??___fleq+3,w
 13023  140C  042A               	iorwf	??___fleq+2,w
 13024  140D  0429               	iorwf	??___fleq+1,w
 13025  140E  0428               	iorwf	??___fleq,w
 13026  140F  1D03               	skipz
 13027  1410  2C19               	goto	l1443
 13028  1411  3000               	movlw	0
 13029  1412  00A3               	movwf	___fleq@ff1+3
 13030  1413  3000               	movlw	0
 13031  1414  00A2               	movwf	___fleq@ff1+2
 13032  1415  3000               	movlw	0
 13033  1416  00A1               	movwf	___fleq@ff1+1
 13034  1417  3000               	movlw	0
 13035  1418  00A0               	movwf	___fleq@ff1
 13036  1419                     l1443:	
 13037  1419  3000               	movlw	0
 13038  141A  0524               	andwf	___fleq@ff2,w
 13039  141B  00A8               	movwf	??___fleq
 13040  141C  3000               	movlw	0
 13041  141D  0525               	andwf	___fleq@ff2+1,w
 13042  141E  00A9               	movwf	??___fleq+1
 13043  141F  3080               	movlw	128
 13044  1420  0526               	andwf	___fleq@ff2+2,w
 13045  1421  00AA               	movwf	??___fleq+2
 13046  1422  307F               	movlw	127
 13047  1423  0527               	andwf	___fleq@ff2+3,w
 13048  1424  00AB               	movwf	??___fleq+3
 13049  1425  082B               	movf	??___fleq+3,w
 13050  1426  042A               	iorwf	??___fleq+2,w
 13051  1427  0429               	iorwf	??___fleq+1,w
 13052  1428  0428               	iorwf	??___fleq,w
 13053  1429  1D03               	skipz
 13054  142A  2C33               	goto	l1444
 13055  142B  3000               	movlw	0
 13056  142C  00A7               	movwf	___fleq@ff2+3
 13057  142D  3000               	movlw	0
 13058  142E  00A6               	movwf	___fleq@ff2+2
 13059  142F  3000               	movlw	0
 13060  1430  00A5               	movwf	___fleq@ff2+1
 13061  1431  3000               	movlw	0
 13062  1432  00A4               	movwf	___fleq@ff2
 13063  1433                     l1444:	
 13064  1433  0827               	movf	___fleq@ff2+3,w
 13065  1434  0623               	xorwf	___fleq@ff1+3,w
 13066  1435  1D03               	skipz
 13067  1436  2C41               	goto	u3565
 13068  1437  0826               	movf	___fleq@ff2+2,w
 13069  1438  0622               	xorwf	___fleq@ff1+2,w
 13070  1439  1D03               	skipz
 13071  143A  2C41               	goto	u3565
 13072  143B  0825               	movf	___fleq@ff2+1,w
 13073  143C  0621               	xorwf	___fleq@ff1+1,w
 13074  143D  1D03               	skipz
 13075  143E  2C41               	goto	u3565
 13076  143F  0824               	movf	___fleq@ff2,w
 13077  1440  0620               	xorwf	___fleq@ff1,w
 13078  1441                     u3565:	
 13079  1441  1903               	skipnz
 13080  1442  2C45               	goto	l4042
 13081  1443  1003               	clrc
 13082  1444  0008               	return
 13083  1445                     l4042:	
 13084  1445  1403               	setc
 13085  1446  0008               	return
 13086  1447                     __end_of___fleq:	
 13087                           
 13088                           	psect	text41
 13089  0624                     __ptext41:	
 13090 ;; *************** function ___fldiv *****************
 13091 ;; Defined at:
 13092 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13093 ;; Parameters:    Size  Location     Type
 13094 ;;  a               4   14[BANK0 ] long 
 13095 ;;  b               4   18[BANK0 ] long 
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;  grs             4   34[BANK0 ] unsigned long 
 13098 ;;  rem             4   27[BANK0 ] unsigned long 
 13099 ;;  new_exp         2   32[BANK0 ] int 
 13100 ;;  aexp            1   39[BANK0 ] unsigned char 
 13101 ;;  bexp            1   38[BANK0 ] unsigned char 
 13102 ;;  sign            1   31[BANK0 ] unsigned char 
 13103 ;; Return value:  Size  Location     Type
 13104 ;;                  4   14[BANK0 ] unsigned char 
 13105 ;; Registers used:
 13106 ;;		wreg, status,2, status,0
 13107 ;; Tracked objects:
 13108 ;;		On entry : 0/0
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13112 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13113 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13114 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13115 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13116 ;;Total ram usage:       26 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:    4
 13119 ;; This function calls:
 13120 ;;		Nothing
 13121 ;; This function is called by:
 13122 ;;		_LED_setHSL
 13123 ;;		_pulseColors
 13124 ;; This function uses a non-reentrant model
 13125 ;;
 13126                           
 13127                           
 13128                           ;psect for function ___fldiv
 13129  0624                     ___fldiv:	
 13130                           
 13131                           ;incstack = 0
 13132                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 13133  0624  0140               	movlb	0	; select bank0
 13134  0625  0835               	movf	___fldiv@b+3,w
 13135  0626  3980               	andlw	128
 13136  0627  00B6               	movwf	??___fldiv
 13137  0628  0836               	movf	??___fldiv,w
 13138  0629  00BF               	movwf	___fldiv@sign
 13139  062A  3535               	lslf	___fldiv@b+3,w
 13140  062B  00B6               	movwf	??___fldiv
 13141  062C  0836               	movf	??___fldiv,w
 13142  062D  00C6               	movwf	___fldiv@bexp
 13143  062E  1BB4               	btfsc	___fldiv@b+2,7
 13144  062F  1446               	bsf	___fldiv@bexp,0
 13145  0630  0846               	movf	___fldiv@bexp,w
 13146  0631  1903               	btfsc	3,2
 13147  0632  2E41               	goto	l4148
 13148  0633  0A46               	incf	___fldiv@bexp,w
 13149  0634  1D03               	btfss	3,2
 13150  0635  2E3E               	goto	l4144
 13151  0636  3000               	movlw	0
 13152  0637  00B5               	movwf	___fldiv@b+3
 13153  0638  3000               	movlw	0
 13154  0639  00B4               	movwf	___fldiv@b+2
 13155  063A  3000               	movlw	0
 13156  063B  00B3               	movwf	___fldiv@b+1
 13157  063C  3000               	movlw	0
 13158  063D  00B2               	movwf	___fldiv@b
 13159  063E                     l4144:	
 13160  063E  17B4               	bsf	___fldiv@b+2,7
 13161  063F  01B5               	clrf	___fldiv@b+3
 13162  0640  2E49               	goto	l4150
 13163  0641                     l4148:	
 13164  0641  3000               	movlw	0
 13165  0642  00B5               	movwf	___fldiv@b+3
 13166  0643  3000               	movlw	0
 13167  0644  00B4               	movwf	___fldiv@b+2
 13168  0645  3000               	movlw	0
 13169  0646  00B3               	movwf	___fldiv@b+1
 13170  0647  3000               	movlw	0
 13171  0648  00B2               	movwf	___fldiv@b
 13172  0649                     l4150:	
 13173  0649  0831               	movf	___fldiv@a+3,w
 13174  064A  3980               	andlw	128
 13175  064B  00B6               	movwf	??___fldiv
 13176  064C  0836               	movf	??___fldiv,w
 13177  064D  06BF               	xorwf	___fldiv@sign,f
 13178  064E  3531               	lslf	___fldiv@a+3,w
 13179  064F  00B6               	movwf	??___fldiv
 13180  0650  0836               	movf	??___fldiv,w
 13181  0651  00C7               	movwf	___fldiv@aexp
 13182  0652  1BB0               	btfsc	___fldiv@a+2,7
 13183  0653  1447               	bsf	___fldiv@aexp,0
 13184  0654  0847               	movf	___fldiv@aexp,w
 13185  0655  1903               	btfsc	3,2
 13186  0656  2E65               	goto	l4168
 13187  0657  0A47               	incf	___fldiv@aexp,w
 13188  0658  1D03               	btfss	3,2
 13189  0659  2E62               	goto	l4164
 13190  065A  3000               	movlw	0
 13191  065B  00B1               	movwf	___fldiv@a+3
 13192  065C  3000               	movlw	0
 13193  065D  00B0               	movwf	___fldiv@a+2
 13194  065E  3000               	movlw	0
 13195  065F  00AF               	movwf	___fldiv@a+1
 13196  0660  3000               	movlw	0
 13197  0661  00AE               	movwf	___fldiv@a
 13198  0662                     l4164:	
 13199  0662  17B0               	bsf	___fldiv@a+2,7
 13200  0663  01B1               	clrf	___fldiv@a+3
 13201  0664  2E6D               	goto	l1631
 13202  0665                     l4168:	
 13203  0665  3000               	movlw	0
 13204  0666  00B1               	movwf	___fldiv@a+3
 13205  0667  3000               	movlw	0
 13206  0668  00B0               	movwf	___fldiv@a+2
 13207  0669  3000               	movlw	0
 13208  066A  00AF               	movwf	___fldiv@a+1
 13209  066B  3000               	movlw	0
 13210  066C  00AE               	movwf	___fldiv@a
 13211  066D                     l1631:	
 13212  066D  0831               	movf	___fldiv@a+3,w
 13213  066E  0430               	iorwf	___fldiv@a+2,w
 13214  066F  042F               	iorwf	___fldiv@a+1,w
 13215  0670  042E               	iorwf	___fldiv@a,w
 13216  0671  1D03               	skipz
 13217  0672  2E8C               	goto	l4178
 13218  0673  3000               	movlw	0
 13219  0674  00B5               	movwf	___fldiv@b+3
 13220  0675  3000               	movlw	0
 13221  0676  00B4               	movwf	___fldiv@b+2
 13222  0677  3000               	movlw	0
 13223  0678  00B3               	movwf	___fldiv@b+1
 13224  0679  3000               	movlw	0
 13225  067A  00B2               	movwf	___fldiv@b
 13226  067B  3080               	movlw	128
 13227  067C  04B4               	iorwf	___fldiv@b+2,f
 13228  067D  307F               	movlw	127
 13229  067E  04B5               	iorwf	___fldiv@b+3,f
 13230  067F                     L3:	
 13231  067F  083F               	movf	___fldiv@sign,w
 13232  0680  00B6               	movwf	??___fldiv
 13233  0681  0836               	movf	??___fldiv,w
 13234  0682  04B5               	iorwf	___fldiv@b+3,f
 13235  0683  0835               	movf	___fldiv@b+3,w
 13236  0684  00B1               	movwf	?___fldiv+3
 13237  0685  0834               	movf	___fldiv@b+2,w
 13238  0686  00B0               	movwf	?___fldiv+2
 13239  0687  0833               	movf	___fldiv@b+1,w
 13240  0688  00AF               	movwf	?___fldiv+1
 13241  0689  0832               	movf	___fldiv@b,w
 13242  068A  00AE               	movwf	?___fldiv
 13243  068B  0008               	return
 13244  068C                     l4178:	
 13245  068C  0846               	movf	___fldiv@bexp,w
 13246  068D  1D03               	btfss	3,2
 13247  068E  2E98               	goto	l4184
 13248  068F  3000               	movlw	0
 13249  0690  00B1               	movwf	?___fldiv+3
 13250  0691  3000               	movlw	0
 13251  0692  00B0               	movwf	?___fldiv+2
 13252  0693  3000               	movlw	0
 13253  0694  00AF               	movwf	?___fldiv+1
 13254  0695  3000               	movlw	0
 13255  0696  00AE               	movwf	?___fldiv
 13256  0697  0008               	return
 13257  0698                     l4184:	
 13258  0698  0846               	movf	___fldiv@bexp,w
 13259  0699  00B6               	movwf	??___fldiv
 13260  069A  01B7               	clrf	??___fldiv+1
 13261  069B  0837               	movf	??___fldiv+1,w
 13262  069C  00B9               	movwf	??___fldiv+3
 13263  069D  0847               	movf	___fldiv@aexp,w
 13264  069E  0236               	subwf	??___fldiv,w
 13265  069F  00B8               	movwf	??___fldiv+2
 13266  06A0  1C03               	skipc
 13267  06A1  03B9               	decf	??___fldiv+3,f
 13268  06A2  0838               	movf	??___fldiv+2,w
 13269  06A3  3E7F               	addlw	127
 13270  06A4  00C0               	movwf	___fldiv@new_exp
 13271  06A5  3000               	movlw	0
 13272  06A6  3D39               	addwfc	??___fldiv+3,w
 13273  06A7  00C1               	movwf	___fldiv@new_exp+1
 13274  06A8  0835               	movf	___fldiv@b+3,w
 13275  06A9  00BE               	movwf	___fldiv@rem+3
 13276  06AA  0834               	movf	___fldiv@b+2,w
 13277  06AB  00BD               	movwf	___fldiv@rem+2
 13278  06AC  0833               	movf	___fldiv@b+1,w
 13279  06AD  00BC               	movwf	___fldiv@rem+1
 13280  06AE  0832               	movf	___fldiv@b,w
 13281  06AF  00BB               	movwf	___fldiv@rem
 13282  06B0  3000               	movlw	0
 13283  06B1  00B5               	movwf	___fldiv@b+3
 13284  06B2  3000               	movlw	0
 13285  06B3  00B4               	movwf	___fldiv@b+2
 13286  06B4  3000               	movlw	0
 13287  06B5  00B3               	movwf	___fldiv@b+1
 13288  06B6  3000               	movlw	0
 13289  06B7  00B2               	movwf	___fldiv@b
 13290  06B8  3000               	movlw	0
 13291  06B9  00C5               	movwf	___fldiv@grs+3
 13292  06BA  3000               	movlw	0
 13293  06BB  00C4               	movwf	___fldiv@grs+2
 13294  06BC  3000               	movlw	0
 13295  06BD  00C3               	movwf	___fldiv@grs+1
 13296  06BE  3000               	movlw	0
 13297  06BF  00C2               	movwf	___fldiv@grs
 13298  06C0  01C7               	clrf	___fldiv@aexp
 13299  06C1                     l4212:	
 13300  06C1  301A               	movlw	26
 13301  06C2  0247               	subwf	___fldiv@aexp,w
 13302  06C3  1803               	btfsc	3,0
 13303  06C4  2EFD               	goto	l4214
 13304  06C5  0847               	movf	___fldiv@aexp,w
 13305  06C6  1903               	btfsc	3,2
 13306  06C7  2EDF               	goto	l4204
 13307  06C8  3001               	movlw	1
 13308  06C9                     u3895:	
 13309  06C9  35BB               	lslf	___fldiv@rem,f
 13310  06CA  0DBC               	rlf	___fldiv@rem+1,f
 13311  06CB  0DBD               	rlf	___fldiv@rem+2,f
 13312  06CC  0DBE               	rlf	___fldiv@rem+3,f
 13313  06CD  0B89               	decfsz	9,f
 13314  06CE  2EC9               	goto	u3895
 13315  06CF  3001               	movlw	1
 13316  06D0                     u3905:	
 13317  06D0  35B2               	lslf	___fldiv@b,f
 13318  06D1  0DB3               	rlf	___fldiv@b+1,f
 13319  06D2  0DB4               	rlf	___fldiv@b+2,f
 13320  06D3  0DB5               	rlf	___fldiv@b+3,f
 13321  06D4  0B89               	decfsz	9,f
 13322  06D5  2ED0               	goto	u3905
 13323  06D6  1BC5               	btfsc	___fldiv@grs+3,7
 13324  06D7  1432               	bsf	___fldiv@b,0
 13325  06D8  3001               	movlw	1
 13326  06D9                     u3925:	
 13327  06D9  35C2               	lslf	___fldiv@grs,f
 13328  06DA  0DC3               	rlf	___fldiv@grs+1,f
 13329  06DB  0DC4               	rlf	___fldiv@grs+2,f
 13330  06DC  0DC5               	rlf	___fldiv@grs+3,f
 13331  06DD  0B89               	decfsz	9,f
 13332  06DE  2ED9               	goto	u3925
 13333  06DF                     l4204:	
 13334  06DF  0831               	movf	___fldiv@a+3,w
 13335  06E0  023E               	subwf	___fldiv@rem+3,w
 13336  06E1  1D03               	skipz
 13337  06E2  2EED               	goto	u3935
 13338  06E3  0830               	movf	___fldiv@a+2,w
 13339  06E4  023D               	subwf	___fldiv@rem+2,w
 13340  06E5  1D03               	skipz
 13341  06E6  2EED               	goto	u3935
 13342  06E7  082F               	movf	___fldiv@a+1,w
 13343  06E8  023C               	subwf	___fldiv@rem+1,w
 13344  06E9  1D03               	skipz
 13345  06EA  2EED               	goto	u3935
 13346  06EB  082E               	movf	___fldiv@a,w
 13347  06EC  023B               	subwf	___fldiv@rem,w
 13348  06ED                     u3935:	
 13349  06ED  1C03               	skipc
 13350  06EE  2EF8               	goto	l4210
 13351  06EF  1745               	bsf	___fldiv@grs+3,6
 13352  06F0  082E               	movf	___fldiv@a,w
 13353  06F1  02BB               	subwf	___fldiv@rem,f
 13354  06F2  082F               	movf	___fldiv@a+1,w
 13355  06F3  3BBC               	subwfb	___fldiv@rem+1,f
 13356  06F4  0830               	movf	___fldiv@a+2,w
 13357  06F5  3BBD               	subwfb	___fldiv@rem+2,f
 13358  06F6  0831               	movf	___fldiv@a+3,w
 13359  06F7  3BBE               	subwfb	___fldiv@rem+3,f
 13360  06F8                     l4210:	
 13361  06F8  3001               	movlw	1
 13362  06F9  00B6               	movwf	??___fldiv
 13363  06FA  0836               	movf	??___fldiv,w
 13364  06FB  07C7               	addwf	___fldiv@aexp,f
 13365  06FC  2EC1               	goto	l4212
 13366  06FD                     l4214:	
 13367  06FD  083E               	movf	___fldiv@rem+3,w
 13368  06FE  043D               	iorwf	___fldiv@rem+2,w
 13369  06FF  043C               	iorwf	___fldiv@rem+1,w
 13370  0700  043B               	iorwf	___fldiv@rem,w
 13371  0701  1D03               	btfss	3,2
 13372  0702  1442               	bsf	___fldiv@grs,0
 13373  0703                     l4228:	
 13374  0703  1BB4               	btfsc	___fldiv@b+2,7
 13375  0704  2F1A               	goto	l4230
 13376  0705  3001               	movlw	1
 13377  0706                     u3965:	
 13378  0706  35B2               	lslf	___fldiv@b,f
 13379  0707  0DB3               	rlf	___fldiv@b+1,f
 13380  0708  0DB4               	rlf	___fldiv@b+2,f
 13381  0709  0DB5               	rlf	___fldiv@b+3,f
 13382  070A  0B89               	decfsz	9,f
 13383  070B  2F06               	goto	u3965
 13384  070C  1BC5               	btfsc	___fldiv@grs+3,7
 13385  070D  1432               	bsf	___fldiv@b,0
 13386  070E  3001               	movlw	1
 13387  070F                     u3985:	
 13388  070F  35C2               	lslf	___fldiv@grs,f
 13389  0710  0DC3               	rlf	___fldiv@grs+1,f
 13390  0711  0DC4               	rlf	___fldiv@grs+2,f
 13391  0712  0DC5               	rlf	___fldiv@grs+3,f
 13392  0713  0B89               	decfsz	9,f
 13393  0714  2F0F               	goto	u3985
 13394  0715  30FF               	movlw	255
 13395  0716  07C0               	addwf	___fldiv@new_exp,f
 13396  0717  30FF               	movlw	255
 13397  0718  3DC1               	addwfc	___fldiv@new_exp+1,f
 13398  0719  2F03               	goto	l4228
 13399  071A                     l4230:	
 13400  071A  01C7               	clrf	___fldiv@aexp
 13401  071B  1FC5               	btfss	___fldiv@grs+3,7
 13402  071C  2F33               	goto	l4240
 13403  071D  30FF               	movlw	255
 13404  071E  0542               	andwf	___fldiv@grs,w
 13405  071F  00B6               	movwf	??___fldiv
 13406  0720  30FF               	movlw	255
 13407  0721  0543               	andwf	___fldiv@grs+1,w
 13408  0722  00B7               	movwf	??___fldiv+1
 13409  0723  30FF               	movlw	255
 13410  0724  0544               	andwf	___fldiv@grs+2,w
 13411  0725  00B8               	movwf	??___fldiv+2
 13412  0726  307F               	movlw	127
 13413  0727  0545               	andwf	___fldiv@grs+3,w
 13414  0728  00B9               	movwf	??___fldiv+3
 13415  0729  0839               	movf	??___fldiv+3,w
 13416  072A  0438               	iorwf	??___fldiv+2,w
 13417  072B  0437               	iorwf	??___fldiv+1,w
 13418  072C  0436               	iorwf	??___fldiv,w
 13419  072D  1903               	skipnz
 13420  072E  1832               	btfsc	___fldiv@b,0
 13421  072F  2F31               	goto	l4236
 13422  0730  2F33               	goto	l4240
 13423  0731                     l4236:	
 13424  0731  01C7               	clrf	___fldiv@aexp
 13425  0732  0AC7               	incf	___fldiv@aexp,f
 13426  0733                     l4240:	
 13427  0733  0847               	movf	___fldiv@aexp,w
 13428  0734  1903               	btfsc	3,2
 13429  0735  2F5C               	goto	l4250
 13430  0736  3001               	movlw	1
 13431  0737  07B2               	addwf	___fldiv@b,f
 13432  0738  3000               	movlw	0
 13433  0739  3DB3               	addwfc	___fldiv@b+1,f
 13434  073A  3000               	movlw	0
 13435  073B  3DB4               	addwfc	___fldiv@b+2,f
 13436  073C  3000               	movlw	0
 13437  073D  3DB5               	addwfc	___fldiv@b+3,f
 13438  073E  1C35               	btfss	___fldiv@b+3,0
 13439  073F  2F5C               	goto	l4250
 13440  0740  0832               	movf	___fldiv@b,w
 13441  0741  00B6               	movwf	??___fldiv
 13442  0742  0833               	movf	___fldiv@b+1,w
 13443  0743  00B7               	movwf	??___fldiv+1
 13444  0744  0834               	movf	___fldiv@b+2,w
 13445  0745  00B8               	movwf	??___fldiv+2
 13446  0746  0835               	movf	___fldiv@b+3,w
 13447  0747  00B9               	movwf	??___fldiv+3
 13448  0748  3001               	movlw	1
 13449  0749  00BA               	movwf	??___fldiv+4
 13450  074A                     u4055:	
 13451  074A  37B9               	asrf	??___fldiv+3,f
 13452  074B  0CB8               	rrf	??___fldiv+2,f
 13453  074C  0CB7               	rrf	??___fldiv+1,f
 13454  074D  0CB6               	rrf	??___fldiv,f
 13455  074E  0BBA               	decfsz	??___fldiv+4,f
 13456  074F  2F4A               	goto	u4055
 13457  0750  0839               	movf	??___fldiv+3,w
 13458  0751  00B5               	movwf	___fldiv@b+3
 13459  0752  0838               	movf	??___fldiv+2,w
 13460  0753  00B4               	movwf	___fldiv@b+2
 13461  0754  0837               	movf	??___fldiv+1,w
 13462  0755  00B3               	movwf	___fldiv@b+1
 13463  0756  0836               	movf	??___fldiv,w
 13464  0757  00B2               	movwf	___fldiv@b
 13465  0758  3001               	movlw	1
 13466  0759  07C0               	addwf	___fldiv@new_exp,f
 13467  075A  3000               	movlw	0
 13468  075B  3DC1               	addwfc	___fldiv@new_exp+1,f
 13469  075C                     l4250:	
 13470  075C  0841               	movf	___fldiv@new_exp+1,w
 13471  075D  3A80               	xorlw	128
 13472  075E  00B6               	movwf	??___fldiv
 13473  075F  3080               	movlw	128
 13474  0760  0236               	subwf	??___fldiv,w
 13475  0761  1D03               	skipz
 13476  0762  2F65               	goto	u4065
 13477  0763  30FF               	movlw	255
 13478  0764  0240               	subwf	___fldiv@new_exp,w
 13479  0765                     u4065:	
 13480  0765  1C03               	skipc
 13481  0766  2F74               	goto	l1652
 13482  0767  30FF               	movlw	255
 13483  0768  0140               	movlb	0	; select bank0
 13484  0769  00C0               	movwf	___fldiv@new_exp
 13485  076A  3000               	movlw	0
 13486  076B  00C1               	movwf	___fldiv@new_exp+1
 13487  076C  3000               	movlw	0
 13488  076D  00B5               	movwf	___fldiv@b+3
 13489  076E  3000               	movlw	0
 13490  076F  00B4               	movwf	___fldiv@b+2
 13491  0770  3000               	movlw	0
 13492  0771  00B3               	movwf	___fldiv@b+1
 13493  0772  3000               	movlw	0
 13494  0773  00B2               	movwf	___fldiv@b
 13495  0774                     l1652:	
 13496  0774  0140               	movlb	0	; select bank0
 13497  0775  0841               	movf	___fldiv@new_exp+1,w
 13498  0776  3A80               	xorlw	128
 13499  0777  00B6               	movwf	??___fldiv
 13500  0778  3080               	movlw	128
 13501  0779  0236               	subwf	??___fldiv,w
 13502  077A  1D03               	skipz
 13503  077B  2F7E               	goto	u4075
 13504  077C  3001               	movlw	1
 13505  077D  0240               	subwf	___fldiv@new_exp,w
 13506  077E                     u4075:	
 13507  077E  1803               	skipnc
 13508  077F  2F8C               	goto	l1653
 13509  0780  0140               	movlb	0	; select bank0
 13510  0781  01C0               	clrf	___fldiv@new_exp
 13511  0782  01C1               	clrf	___fldiv@new_exp+1
 13512  0783  3000               	movlw	0
 13513  0784  00B5               	movwf	___fldiv@b+3
 13514  0785  3000               	movlw	0
 13515  0786  00B4               	movwf	___fldiv@b+2
 13516  0787  3000               	movlw	0
 13517  0788  00B3               	movwf	___fldiv@b+1
 13518  0789  3000               	movlw	0
 13519  078A  00B2               	movwf	___fldiv@b
 13520  078B  01BF               	clrf	___fldiv@sign
 13521  078C                     l1653:	
 13522  078C  0140               	movlb	0	; select bank0
 13523  078D  0840               	movf	___fldiv@new_exp,w
 13524  078E  00B6               	movwf	??___fldiv
 13525  078F  0836               	movf	??___fldiv,w
 13526  0790  00C6               	movwf	___fldiv@bexp
 13527  0791  1C46               	btfss	___fldiv@bexp,0
 13528  0792  2F95               	goto	l4264
 13529  0793  17B4               	bsf	___fldiv@b+2,7
 13530  0794  2F99               	goto	l1655
 13531  0795                     l4264:	
 13532  0795  307F               	movlw	127
 13533  0796  00B6               	movwf	??___fldiv
 13534  0797  0836               	movf	??___fldiv,w
 13535  0798  05B4               	andwf	___fldiv@b+2,f
 13536  0799                     l1655:	
 13537  0799  3646               	lsrf	___fldiv@bexp,w
 13538  079A  00B6               	movwf	??___fldiv
 13539  079B  0836               	movf	??___fldiv,w
 13540  079C  00B5               	movwf	___fldiv@b+3
 13541  079D  2E7F               	goto	L3
 13542  079E                     __end_of___fldiv:	
 13543                           
 13544                           	psect	text42
 13545  137B                     __ptext42:	
 13546 ;; *************** function _LED_setColor *****************
 13547 ;; Defined at:
 13548 ;;		line 59 in file "led.c"
 13549 ;; Parameters:    Size  Location     Type
 13550 ;;  red             1    wreg     unsigned char 
 13551 ;;  green           1    0[BANK0 ] unsigned char 
 13552 ;;  white           1    1[BANK0 ] unsigned char 
 13553 ;;  blue            1    2[BANK0 ] unsigned char 
 13554 ;; Auto vars:     Size  Location     Type
 13555 ;;  red             1   21[BANK0 ] unsigned char 
 13556 ;;  lo4             2   19[BANK0 ] int 
 13557 ;;  hi4             2    0        int 
 13558 ;;  lo3             2   15[BANK0 ] int 
 13559 ;;  hi3             2    0        int 
 13560 ;;  lo2             2   11[BANK0 ] int 
 13561 ;;  hi2             2    0        int 
 13562 ;;  lo1             2    7[BANK0 ] int 
 13563 ;;  hi1             2    0        int 
 13564 ;; Return value:  Size  Location     Type
 13565 ;;                  1    wreg      void 
 13566 ;; Registers used:
 13567 ;;		wreg, status,2
 13568 ;; Tracked objects:
 13569 ;;		On entry : 0/0
 13570 ;;		On exit  : 0/0
 13571 ;;		Unchanged: 0/0
 13572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13573 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13574 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13575 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13576 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13577 ;;Total ram usage:       22 bytes
 13578 ;; Hardware stack levels used:    1
 13579 ;; Hardware stack levels required when called:    4
 13580 ;; This function calls:
 13581 ;;		Nothing
 13582 ;; This function is called by:
 13583 ;;		_LED_setHSL
 13584 ;;		_LED_DMX
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588                           
 13589                           ;psect for function _LED_setColor
 13590  137B                     _LED_setColor:	
 13591                           
 13592                           ;incstack = 0
 13593                           ; Regs used in _LED_setColor: [wreg+status,2]
 13594                           ;LED_setColor@red stored from wreg
 13595  137B  0140               	movlb	0	; select bank0
 13596  137C  00B5               	movwf	LED_setColor@red
 13597                           
 13598                           ;led.c: 60:     red/=2;
 13599  137D  1003               	clrc
 13600  137E  0CB5               	rrf	LED_setColor@red,f
 13601                           
 13602                           ;led.c: 61:     green/=2;
 13603  137F  1003               	clrc
 13604  1380  0CA0               	rrf	LED_setColor@green,f
 13605                           
 13606                           ;led.c: 62:     blue/=2;
 13607  1381  1003               	clrc
 13608  1382  0CA2               	rrf	LED_setColor@blue,f
 13609                           
 13610                           ;led.c: 63:     white/=2;
 13611  1383  1003               	clrc
 13612  1384  0CA1               	rrf	LED_setColor@white,f
 13613                           
 13614                           ;led.c: 65:     int lo1 = red & 0x00FF;
 13615  1385  0835               	movf	LED_setColor@red,w
 13616  1386  00A3               	movwf	??_LED_setColor
 13617  1387  01A4               	clrf	??_LED_setColor+1
 13618  1388  0823               	movf	??_LED_setColor,w
 13619  1389  00A7               	movwf	LED_setColor@lo1
 13620  138A  0824               	movf	??_LED_setColor+1,w
 13621  138B  00A8               	movwf	LED_setColor@lo1+1
 13622                           
 13623                           ;led.c: 67:     int lo2 = green & 0x00FF;
 13624  138C  0820               	movf	LED_setColor@green,w
 13625  138D  00A3               	movwf	??_LED_setColor
 13626  138E  01A4               	clrf	??_LED_setColor+1
 13627  138F  0823               	movf	??_LED_setColor,w
 13628  1390  00AB               	movwf	LED_setColor@lo2
 13629  1391  0824               	movf	??_LED_setColor+1,w
 13630  1392  00AC               	movwf	LED_setColor@lo2+1
 13631                           
 13632                           ;led.c: 69:     int lo3 = blue & 0x00FF;
 13633  1393  0822               	movf	LED_setColor@blue,w
 13634  1394  00A3               	movwf	??_LED_setColor
 13635  1395  01A4               	clrf	??_LED_setColor+1
 13636  1396  0823               	movf	??_LED_setColor,w
 13637  1397  00AF               	movwf	LED_setColor@lo3
 13638  1398  0824               	movf	??_LED_setColor+1,w
 13639  1399  00B0               	movwf	LED_setColor@lo3+1
 13640                           
 13641                           ;led.c: 71:     int lo4 = white & 0x00FF;
 13642  139A  0821               	movf	LED_setColor@white,w
 13643  139B  00A3               	movwf	??_LED_setColor
 13644  139C  01A4               	clrf	??_LED_setColor+1
 13645  139D  0823               	movf	??_LED_setColor,w
 13646  139E  00B3               	movwf	LED_setColor@lo4
 13647  139F  0824               	movf	??_LED_setColor+1,w
 13648  13A0  00B4               	movwf	LED_setColor@lo4+1
 13649                           
 13650                           ;led.c: 73:     CCPR1H = hi1;
 13651  13A1  0146               	movlb	6	; select bank6
 13652  13A2  018D               	clrf	13	;volatile
 13653                           
 13654                           ;led.c: 74:     CCPR1L = lo1;
 13655  13A3  0140               	movlb	0	; select bank0
 13656  13A4  0827               	movf	LED_setColor@lo1,w
 13657  13A5  0146               	movlb	6	; select bank6
 13658  13A6  008C               	movwf	12	;volatile
 13659                           
 13660                           ;led.c: 76:     CCPR2H = hi2;
 13661  13A7  0191               	clrf	17	;volatile
 13662                           
 13663                           ;led.c: 77:     CCPR2L = lo2;
 13664  13A8  0140               	movlb	0	; select bank0
 13665  13A9  082B               	movf	LED_setColor@lo2,w
 13666  13AA  0146               	movlb	6	; select bank6
 13667  13AB  0090               	movwf	16	;volatile
 13668                           
 13669                           ;led.c: 79:     CCPR3H = hi3;
 13670  13AC  0195               	clrf	21	;volatile
 13671                           
 13672                           ;led.c: 80:     CCPR3L = lo3;
 13673  13AD  0140               	movlb	0	; select bank0
 13674  13AE  082F               	movf	LED_setColor@lo3,w
 13675  13AF  0146               	movlb	6	; select bank6
 13676  13B0  0094               	movwf	20	;volatile
 13677                           
 13678                           ;led.c: 82:     CCPR4H = hi4;
 13679  13B1  0199               	clrf	25	;volatile
 13680                           
 13681                           ;led.c: 83:     CCPR4L = lo4;
 13682  13B2  0140               	movlb	0	; select bank0
 13683  13B3  0833               	movf	LED_setColor@lo4,w
 13684  13B4  0146               	movlb	6	; select bank6
 13685  13B5  0098               	movwf	24	;volatile
 13686  13B6  0008               	return
 13687  13B7                     __end_of_LED_setColor:	
 13688                           
 13689                           	psect	text43
 13690  0E1C                     __ptext43:	
 13691 ;; *************** function _HueToRGB *****************
 13692 ;; Defined at:
 13693 ;;		line 40 in file "led.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;  v1              4   67[BANK0 ] float 
 13696 ;;  v2              4   71[BANK0 ] float 
 13697 ;;  vH              4   75[BANK0 ] float 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;		None
 13700 ;; Return value:  Size  Location     Type
 13701 ;;                  4   67[BANK0 ] float 
 13702 ;; Registers used:
 13703 ;;		wreg, status,2, status,0, pclath, cstack
 13704 ;; Tracked objects:
 13705 ;;		On entry : 0/0
 13706 ;;		On exit  : 0/0
 13707 ;;		Unchanged: 0/0
 13708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13709 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13710 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13712 ;;      Totals:         0      12       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13713 ;;Total ram usage:       16 bytes
 13714 ;; Hardware stack levels used:    1
 13715 ;; Hardware stack levels required when called:    6
 13716 ;; This function calls:
 13717 ;;		___fladd
 13718 ;;		___flge
 13719 ;;		___flmul
 13720 ;;		___flsub
 13721 ;; This function is called by:
 13722 ;;		_LED_setHSL
 13723 ;; This function uses a non-reentrant model
 13724 ;;
 13725                           
 13726                           
 13727                           ;psect for function _HueToRGB
 13728  0E1C                     _HueToRGB:	
 13729                           
 13730                           ;led.c: 41:  if (vH < 0)
 13731                           
 13732                           ;incstack = 0
 13733                           ; Regs used in _HueToRGB: [wreg+status,2+status,0+pclath+cstack]
 13734  0E1C  0140               	movlb	0	; select bank0
 13735  0E1D  086E               	movf	HueToRGB@vH+3,w
 13736  0E1E  00DA               	movwf	___flge@ff1+3
 13737  0E1F  086D               	movf	HueToRGB@vH+2,w
 13738  0E20  00D9               	movwf	___flge@ff1+2
 13739  0E21  086C               	movf	HueToRGB@vH+1,w
 13740  0E22  00D8               	movwf	___flge@ff1+1
 13741  0E23  086B               	movf	HueToRGB@vH,w
 13742  0E24  00D7               	movwf	___flge@ff1
 13743  0E25  3000               	movlw	0
 13744  0E26  00DE               	movwf	___flge@ff2+3
 13745  0E27  3000               	movlw	0
 13746  0E28  00DD               	movwf	___flge@ff2+2
 13747  0E29  3000               	movlw	0
 13748  0E2A  00DC               	movwf	___flge@ff2+1
 13749  0E2B  3000               	movlw	0
 13750  0E2C  00DB               	movwf	___flge@ff2
 13751  0E2D  3196  2651  318E   	fcall	___flge
 13752  0E30  1803               	btfsc	3,0
 13753  0E31  2E4F               	goto	l969
 13754                           
 13755                           ;led.c: 42:   vH += 1;
 13756  0E32  303F               	movlw	63
 13757  0E33  0140               	movlb	0	; select bank0
 13758  0E34  00AC               	movwf	___fladd@b+3
 13759  0E35  3080               	movlw	128
 13760  0E36  00AB               	movwf	___fladd@b+2
 13761  0E37  3000               	movlw	0
 13762  0E38  00AA               	movwf	___fladd@b+1
 13763  0E39  3000               	movlw	0
 13764  0E3A  00A9               	movwf	___fladd@b
 13765  0E3B  086E               	movf	HueToRGB@vH+3,w
 13766  0E3C  00B0               	movwf	___fladd@a+3
 13767  0E3D  086D               	movf	HueToRGB@vH+2,w
 13768  0E3E  00AF               	movwf	___fladd@a+2
 13769  0E3F  086C               	movf	HueToRGB@vH+1,w
 13770  0E40  00AE               	movwf	___fladd@a+1
 13771  0E41  086B               	movf	HueToRGB@vH,w
 13772  0E42  00AD               	movwf	___fladd@a
 13773  0E43  318C  243A  318E   	fcall	___fladd
 13774  0E46  0140               	movlb	0	; select bank0
 13775  0E47  082C               	movf	?___fladd+3,w
 13776  0E48  00EE               	movwf	HueToRGB@vH+3
 13777  0E49  082B               	movf	?___fladd+2,w
 13778  0E4A  00ED               	movwf	HueToRGB@vH+2
 13779  0E4B  082A               	movf	?___fladd+1,w
 13780  0E4C  00EC               	movwf	HueToRGB@vH+1
 13781  0E4D  0829               	movf	?___fladd,w
 13782  0E4E  00EB               	movwf	HueToRGB@vH
 13783  0E4F                     l969:	
 13784                           
 13785                           ;led.c: 44:  if (vH > 1)
 13786  0E4F  303F               	movlw	63
 13787  0E50  0140               	movlb	0	; select bank0
 13788  0E51  00DA               	movwf	___flge@ff1+3
 13789  0E52  3080               	movlw	128
 13790  0E53  00D9               	movwf	___flge@ff1+2
 13791  0E54  3000               	movlw	0
 13792  0E55  00D8               	movwf	___flge@ff1+1
 13793  0E56  3000               	movlw	0
 13794  0E57  00D7               	movwf	___flge@ff1
 13795  0E58  086E               	movf	HueToRGB@vH+3,w
 13796  0E59  00DE               	movwf	___flge@ff2+3
 13797  0E5A  086D               	movf	HueToRGB@vH+2,w
 13798  0E5B  00DD               	movwf	___flge@ff2+2
 13799  0E5C  086C               	movf	HueToRGB@vH+1,w
 13800  0E5D  00DC               	movwf	___flge@ff2+1
 13801  0E5E  086B               	movf	HueToRGB@vH,w
 13802  0E5F  00DB               	movwf	___flge@ff2
 13803  0E60  3196  2651  318E   	fcall	___flge
 13804  0E63  1803               	btfsc	3,0
 13805  0E64  2E82               	goto	l970
 13806                           
 13807                           ;led.c: 45:   vH -= 1;
 13808  0E65  303F               	movlw	63
 13809  0E66  0140               	movlb	0	; select bank0
 13810  0E67  00DA               	movwf	___flsub@a+3
 13811  0E68  3080               	movlw	128
 13812  0E69  00D9               	movwf	___flsub@a+2
 13813  0E6A  3000               	movlw	0
 13814  0E6B  00D8               	movwf	___flsub@a+1
 13815  0E6C  3000               	movlw	0
 13816  0E6D  00D7               	movwf	___flsub@a
 13817  0E6E  086E               	movf	HueToRGB@vH+3,w
 13818  0E6F  00DE               	movwf	___flsub@b+3
 13819  0E70  086D               	movf	HueToRGB@vH+2,w
 13820  0E71  00DD               	movwf	___flsub@b+2
 13821  0E72  086C               	movf	HueToRGB@vH+1,w
 13822  0E73  00DC               	movwf	___flsub@b+1
 13823  0E74  086B               	movf	HueToRGB@vH,w
 13824  0E75  00DB               	movwf	___flsub@b
 13825  0E76  3190  20B2  318E   	fcall	___flsub
 13826  0E79  0140               	movlb	0	; select bank0
 13827  0E7A  085A               	movf	?___flsub+3,w
 13828  0E7B  00EE               	movwf	HueToRGB@vH+3
 13829  0E7C  0859               	movf	?___flsub+2,w
 13830  0E7D  00ED               	movwf	HueToRGB@vH+2
 13831  0E7E  0858               	movf	?___flsub+1,w
 13832  0E7F  00EC               	movwf	HueToRGB@vH+1
 13833  0E80  0857               	movf	?___flsub,w
 13834  0E81  00EB               	movwf	HueToRGB@vH
 13835  0E82                     l970:	
 13836                           
 13837                           ;led.c: 47:  if ((6 * vH) < 1)
 13838  0E82  3040               	movlw	64
 13839  0E83  0140               	movlb	0	; select bank0
 13840  0E84  00C0               	movwf	___flmul@b+3
 13841  0E85  30C0               	movlw	192
 13842  0E86  00BF               	movwf	___flmul@b+2
 13843  0E87  3000               	movlw	0
 13844  0E88  00BE               	movwf	___flmul@b+1
 13845  0E89  3000               	movlw	0
 13846  0E8A  00BD               	movwf	___flmul@b
 13847  0E8B  086E               	movf	HueToRGB@vH+3,w
 13848  0E8C  00C4               	movwf	___flmul@a+3
 13849  0E8D  086D               	movf	HueToRGB@vH+2,w
 13850  0E8E  00C3               	movwf	___flmul@a+2
 13851  0E8F  086C               	movf	HueToRGB@vH+1,w
 13852  0E90  00C2               	movwf	___flmul@a+1
 13853  0E91  086B               	movf	HueToRGB@vH,w
 13854  0E92  00C1               	movwf	___flmul@a
 13855  0E93  3183  23F8  318E   	fcall	___flmul
 13856  0E96  0140               	movlb	0	; select bank0
 13857  0E97  0840               	movf	?___flmul+3,w
 13858  0E98  00DA               	movwf	___flge@ff1+3
 13859  0E99  083F               	movf	?___flmul+2,w
 13860  0E9A  00D9               	movwf	___flge@ff1+2
 13861  0E9B  083E               	movf	?___flmul+1,w
 13862  0E9C  00D8               	movwf	___flge@ff1+1
 13863  0E9D  083D               	movf	?___flmul,w
 13864  0E9E  00D7               	movwf	___flge@ff1
 13865  0E9F  303F               	movlw	63
 13866  0EA0  00DE               	movwf	___flge@ff2+3
 13867  0EA1  3080               	movlw	128
 13868  0EA2  00DD               	movwf	___flge@ff2+2
 13869  0EA3  3000               	movlw	0
 13870  0EA4  00DC               	movwf	___flge@ff2+1
 13871  0EA5  3000               	movlw	0
 13872  0EA6  00DB               	movwf	___flge@ff2
 13873  0EA7  3196  2651  318E   	fcall	___flge
 13874  0EAA  1803               	btfsc	3,0
 13875  0EAB  2F1D               	goto	l5438
 13876                           
 13877                           ;led.c: 48:   return (v1 + (v2 - v1) * 6 * vH);
 13878  0EAC  3040               	movlw	64
 13879  0EAD  0140               	movlb	0	; select bank0
 13880  0EAE  00C0               	movwf	___flmul@b+3
 13881  0EAF  30C0               	movlw	192
 13882  0EB0  00BF               	movwf	___flmul@b+2
 13883  0EB1  3000               	movlw	0
 13884  0EB2  00BE               	movwf	___flmul@b+1
 13885  0EB3  3000               	movlw	0
 13886  0EB4  00BD               	movwf	___flmul@b
 13887  0EB5  0866               	movf	HueToRGB@v1+3,w
 13888  0EB6  00DA               	movwf	___flsub@a+3
 13889  0EB7  0865               	movf	HueToRGB@v1+2,w
 13890  0EB8  00D9               	movwf	___flsub@a+2
 13891  0EB9  0864               	movf	HueToRGB@v1+1,w
 13892  0EBA  00D8               	movwf	___flsub@a+1
 13893  0EBB  0863               	movf	HueToRGB@v1,w
 13894  0EBC  00D7               	movwf	___flsub@a
 13895  0EBD  086A               	movf	HueToRGB@v2+3,w
 13896  0EBE  00DE               	movwf	___flsub@b+3
 13897  0EBF  0869               	movf	HueToRGB@v2+2,w
 13898  0EC0  00DD               	movwf	___flsub@b+2
 13899  0EC1  0868               	movf	HueToRGB@v2+1,w
 13900  0EC2  00DC               	movwf	___flsub@b+1
 13901  0EC3  0867               	movf	HueToRGB@v2,w
 13902  0EC4  00DB               	movwf	___flsub@b
 13903  0EC5  3190  20B2  318E   	fcall	___flsub
 13904  0EC8  0140               	movlb	0	; select bank0
 13905  0EC9  085A               	movf	?___flsub+3,w
 13906  0ECA  00C4               	movwf	___flmul@a+3
 13907  0ECB  0859               	movf	?___flsub+2,w
 13908  0ECC  00C3               	movwf	___flmul@a+2
 13909  0ECD  0858               	movf	?___flsub+1,w
 13910  0ECE  00C2               	movwf	___flmul@a+1
 13911  0ECF  0857               	movf	?___flsub,w
 13912  0ED0  00C1               	movwf	___flmul@a
 13913  0ED1  3183  23F8  318E   	fcall	___flmul
 13914  0ED4  0140               	movlb	0	; select bank0
 13915  0ED5  0840               	movf	?___flmul+3,w
 13916  0ED6  0141               	movlb	1	; select bank1
 13917  0ED7  00A3               	movwf	(_HueToRGB$2853+3)^(0+128)
 13918  0ED8  0140               	movlb	0	; select bank0
 13919  0ED9  083F               	movf	?___flmul+2,w
 13920  0EDA  0141               	movlb	1	; select bank1
 13921  0EDB  00A2               	movwf	(_HueToRGB$2853+2)^(0+128)
 13922  0EDC  0140               	movlb	0	; select bank0
 13923  0EDD  083E               	movf	?___flmul+1,w
 13924  0EDE  0141               	movlb	1	; select bank1
 13925  0EDF  00A1               	movwf	(_HueToRGB$2853+1)^(0+128)
 13926  0EE0  0140               	movlb	0	; select bank0
 13927  0EE1  083D               	movf	?___flmul,w
 13928  0EE2  0141               	movlb	1	; select bank1
 13929  0EE3  00A0               	movwf	_HueToRGB$2853^(0+128)
 13930                           
 13931                           ;led.c: 48:   return (v1 + (v2 - v1) * 6 * vH);
 13932  0EE4  0140               	movlb	0	; select bank0
 13933  0EE5  0866               	movf	HueToRGB@v1+3,w
 13934  0EE6  00AC               	movwf	___fladd@b+3
 13935  0EE7  0865               	movf	HueToRGB@v1+2,w
 13936  0EE8  00AB               	movwf	___fladd@b+2
 13937  0EE9  0864               	movf	HueToRGB@v1+1,w
 13938  0EEA  00AA               	movwf	___fladd@b+1
 13939  0EEB  0863               	movf	HueToRGB@v1,w
 13940  0EEC  00A9               	movwf	___fladd@b
 13941  0EED  086E               	movf	HueToRGB@vH+3,w
 13942  0EEE  00C0               	movwf	___flmul@b+3
 13943  0EEF  086D               	movf	HueToRGB@vH+2,w
 13944  0EF0  00BF               	movwf	___flmul@b+2
 13945  0EF1  086C               	movf	HueToRGB@vH+1,w
 13946  0EF2  00BE               	movwf	___flmul@b+1
 13947  0EF3  086B               	movf	HueToRGB@vH,w
 13948  0EF4  00BD               	movwf	___flmul@b
 13949  0EF5  0141               	movlb	1	; select bank1
 13950  0EF6  0823               	movf	(_HueToRGB$2853+3)^(0+128),w
 13951  0EF7  0140               	movlb	0	; select bank0
 13952  0EF8  00C4               	movwf	___flmul@a+3
 13953  0EF9  0141               	movlb	1	; select bank1
 13954  0EFA  0822               	movf	(_HueToRGB$2853+2)^(0+128),w
 13955  0EFB  0140               	movlb	0	; select bank0
 13956  0EFC  00C3               	movwf	___flmul@a+2
 13957  0EFD  0141               	movlb	1	; select bank1
 13958  0EFE  0821               	movf	(_HueToRGB$2853+1)^(0+128),w
 13959  0EFF  0140               	movlb	0	; select bank0
 13960  0F00  00C2               	movwf	___flmul@a+1
 13961  0F01  0141               	movlb	1	; select bank1
 13962  0F02  0820               	movf	_HueToRGB$2853^(0+128),w
 13963  0F03  0140               	movlb	0	; select bank0
 13964  0F04  00C1               	movwf	___flmul@a
 13965  0F05  3183  23F8  318E   	fcall	___flmul
 13966  0F08  0140               	movlb	0	; select bank0
 13967  0F09  0840               	movf	?___flmul+3,w
 13968  0F0A  00B0               	movwf	___fladd@a+3
 13969  0F0B  083F               	movf	?___flmul+2,w
 13970  0F0C  00AF               	movwf	___fladd@a+2
 13971  0F0D  083E               	movf	?___flmul+1,w
 13972  0F0E  00AE               	movwf	___fladd@a+1
 13973  0F0F  083D               	movf	?___flmul,w
 13974  0F10  00AD               	movwf	___fladd@a
 13975  0F11  318C  243A         	fcall	___fladd
 13976  0F13  0140               	movlb	0	; select bank0
 13977  0F14  082C               	movf	?___fladd+3,w
 13978  0F15  00E6               	movwf	?_HueToRGB+3
 13979  0F16  082B               	movf	?___fladd+2,w
 13980  0F17  00E5               	movwf	?_HueToRGB+2
 13981  0F18  082A               	movf	?___fladd+1,w
 13982  0F19  00E4               	movwf	?_HueToRGB+1
 13983  0F1A  0829               	movf	?___fladd,w
 13984  0F1B  00E3               	movwf	?_HueToRGB
 13985  0F1C  0008               	return
 13986  0F1D                     l5438:	
 13987                           
 13988                           ;led.c: 50:  if ((2 * vH) < 1)
 13989  0F1D  3040               	movlw	64
 13990  0F1E  0140               	movlb	0	; select bank0
 13991  0F1F  00C0               	movwf	___flmul@b+3
 13992  0F20  3000               	movlw	0
 13993  0F21  00BF               	movwf	___flmul@b+2
 13994  0F22  3000               	movlw	0
 13995  0F23  00BE               	movwf	___flmul@b+1
 13996  0F24  3000               	movlw	0
 13997  0F25  00BD               	movwf	___flmul@b
 13998  0F26  086E               	movf	HueToRGB@vH+3,w
 13999  0F27  00C4               	movwf	___flmul@a+3
 14000  0F28  086D               	movf	HueToRGB@vH+2,w
 14001  0F29  00C3               	movwf	___flmul@a+2
 14002  0F2A  086C               	movf	HueToRGB@vH+1,w
 14003  0F2B  00C2               	movwf	___flmul@a+1
 14004  0F2C  086B               	movf	HueToRGB@vH,w
 14005  0F2D  00C1               	movwf	___flmul@a
 14006  0F2E  3183  23F8  318E   	fcall	___flmul
 14007  0F31  0140               	movlb	0	; select bank0
 14008  0F32  0840               	movf	?___flmul+3,w
 14009  0F33  00DA               	movwf	___flge@ff1+3
 14010  0F34  083F               	movf	?___flmul+2,w
 14011  0F35  00D9               	movwf	___flge@ff1+2
 14012  0F36  083E               	movf	?___flmul+1,w
 14013  0F37  00D8               	movwf	___flge@ff1+1
 14014  0F38  083D               	movf	?___flmul,w
 14015  0F39  00D7               	movwf	___flge@ff1
 14016  0F3A  303F               	movlw	63
 14017  0F3B  00DE               	movwf	___flge@ff2+3
 14018  0F3C  3080               	movlw	128
 14019  0F3D  00DD               	movwf	___flge@ff2+2
 14020  0F3E  3000               	movlw	0
 14021  0F3F  00DC               	movwf	___flge@ff2+1
 14022  0F40  3000               	movlw	0
 14023  0F41  00DB               	movwf	___flge@ff2
 14024  0F42  3196  2651  318E   	fcall	___flge
 14025  0F45  1803               	btfsc	3,0
 14026  0F46  2F51               	goto	l5444
 14027                           
 14028                           ;led.c: 51:   return v2;
 14029  0F47  0140               	movlb	0	; select bank0
 14030  0F48  086A               	movf	HueToRGB@v2+3,w
 14031  0F49  00E6               	movwf	?_HueToRGB+3
 14032  0F4A  0869               	movf	HueToRGB@v2+2,w
 14033  0F4B  00E5               	movwf	?_HueToRGB+2
 14034  0F4C  0868               	movf	HueToRGB@v2+1,w
 14035  0F4D  00E4               	movwf	?_HueToRGB+1
 14036  0F4E  0867               	movf	HueToRGB@v2,w
 14037  0F4F  00E3               	movwf	?_HueToRGB
 14038  0F50  0008               	return
 14039  0F51                     l5444:	
 14040                           
 14041                           ;led.c: 53:  if ((3 * vH) < 2)
 14042  0F51  3040               	movlw	64
 14043  0F52  0140               	movlb	0	; select bank0
 14044  0F53  00C0               	movwf	___flmul@b+3
 14045  0F54  3040               	movlw	64
 14046  0F55  00BF               	movwf	___flmul@b+2
 14047  0F56  3000               	movlw	0
 14048  0F57  00BE               	movwf	___flmul@b+1
 14049  0F58  3000               	movlw	0
 14050  0F59  00BD               	movwf	___flmul@b
 14051  0F5A  086E               	movf	HueToRGB@vH+3,w
 14052  0F5B  00C4               	movwf	___flmul@a+3
 14053  0F5C  086D               	movf	HueToRGB@vH+2,w
 14054  0F5D  00C3               	movwf	___flmul@a+2
 14055  0F5E  086C               	movf	HueToRGB@vH+1,w
 14056  0F5F  00C2               	movwf	___flmul@a+1
 14057  0F60  086B               	movf	HueToRGB@vH,w
 14058  0F61  00C1               	movwf	___flmul@a
 14059  0F62  3183  23F8  318E   	fcall	___flmul
 14060  0F65  0140               	movlb	0	; select bank0
 14061  0F66  0840               	movf	?___flmul+3,w
 14062  0F67  00DA               	movwf	___flge@ff1+3
 14063  0F68  083F               	movf	?___flmul+2,w
 14064  0F69  00D9               	movwf	___flge@ff1+2
 14065  0F6A  083E               	movf	?___flmul+1,w
 14066  0F6B  00D8               	movwf	___flge@ff1+1
 14067  0F6C  083D               	movf	?___flmul,w
 14068  0F6D  00D7               	movwf	___flge@ff1
 14069  0F6E  3040               	movlw	64
 14070  0F6F  00DE               	movwf	___flge@ff2+3
 14071  0F70  3000               	movlw	0
 14072  0F71  00DD               	movwf	___flge@ff2+2
 14073  0F72  3000               	movlw	0
 14074  0F73  00DC               	movwf	___flge@ff2+1
 14075  0F74  3000               	movlw	0
 14076  0F75  00DB               	movwf	___flge@ff2
 14077  0F76  3196  2651  318E   	fcall	___flge
 14078  0F79  1803               	btfsc	3,0
 14079  0F7A  0008               	return
 14080                           
 14081                           ;led.c: 54:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14082  0F7B  0140               	movlb	0	; select bank0
 14083  0F7C  086E               	movf	HueToRGB@vH+3,w
 14084  0F7D  00DA               	movwf	___flsub@a+3
 14085  0F7E  086D               	movf	HueToRGB@vH+2,w
 14086  0F7F  00D9               	movwf	___flsub@a+2
 14087  0F80  086C               	movf	HueToRGB@vH+1,w
 14088  0F81  00D8               	movwf	___flsub@a+1
 14089  0F82  086B               	movf	HueToRGB@vH,w
 14090  0F83  00D7               	movwf	___flsub@a
 14091  0F84  303F               	movlw	63
 14092  0F85  00DE               	movwf	___flsub@b+3
 14093  0F86  302A               	movlw	42
 14094  0F87  00DD               	movwf	___flsub@b+2
 14095  0F88  30AA               	movlw	170
 14096  0F89  00DC               	movwf	___flsub@b+1
 14097  0F8A  30AB               	movlw	171
 14098  0F8B  00DB               	movwf	___flsub@b
 14099  0F8C  3190  20B2  318E   	fcall	___flsub
 14100  0F8F  0140               	movlb	0	; select bank0
 14101  0F90  085A               	movf	?___flsub+3,w
 14102  0F91  00C0               	movwf	___flmul@b+3
 14103  0F92  0859               	movf	?___flsub+2,w
 14104  0F93  00BF               	movwf	___flmul@b+2
 14105  0F94  0858               	movf	?___flsub+1,w
 14106  0F95  00BE               	movwf	___flmul@b+1
 14107  0F96  0857               	movf	?___flsub,w
 14108  0F97  00BD               	movwf	___flmul@b
 14109  0F98  0866               	movf	HueToRGB@v1+3,w
 14110  0F99  00DA               	movwf	___flsub@a+3
 14111  0F9A  0865               	movf	HueToRGB@v1+2,w
 14112  0F9B  00D9               	movwf	___flsub@a+2
 14113  0F9C  0864               	movf	HueToRGB@v1+1,w
 14114  0F9D  00D8               	movwf	___flsub@a+1
 14115  0F9E  0863               	movf	HueToRGB@v1,w
 14116  0F9F  00D7               	movwf	___flsub@a
 14117  0FA0  086A               	movf	HueToRGB@v2+3,w
 14118  0FA1  00DE               	movwf	___flsub@b+3
 14119  0FA2  0869               	movf	HueToRGB@v2+2,w
 14120  0FA3  00DD               	movwf	___flsub@b+2
 14121  0FA4  0868               	movf	HueToRGB@v2+1,w
 14122  0FA5  00DC               	movwf	___flsub@b+1
 14123  0FA6  0867               	movf	HueToRGB@v2,w
 14124  0FA7  00DB               	movwf	___flsub@b
 14125  0FA8  3190  20B2  318E   	fcall	___flsub
 14126  0FAB  0140               	movlb	0	; select bank0
 14127  0FAC  085A               	movf	?___flsub+3,w
 14128  0FAD  00C4               	movwf	___flmul@a+3
 14129  0FAE  0859               	movf	?___flsub+2,w
 14130  0FAF  00C3               	movwf	___flmul@a+2
 14131  0FB0  0858               	movf	?___flsub+1,w
 14132  0FB1  00C2               	movwf	___flmul@a+1
 14133  0FB2  0857               	movf	?___flsub,w
 14134  0FB3  00C1               	movwf	___flmul@a
 14135  0FB4  3183  23F8  318E   	fcall	___flmul
 14136  0FB7  0140               	movlb	0	; select bank0
 14137  0FB8  0840               	movf	?___flmul+3,w
 14138  0FB9  0141               	movlb	1	; select bank1
 14139  0FBA  00A3               	movwf	(_HueToRGB$2853+3)^(0+128)
 14140  0FBB  0140               	movlb	0	; select bank0
 14141  0FBC  083F               	movf	?___flmul+2,w
 14142  0FBD  0141               	movlb	1	; select bank1
 14143  0FBE  00A2               	movwf	(_HueToRGB$2853+2)^(0+128)
 14144  0FBF  0140               	movlb	0	; select bank0
 14145  0FC0  083E               	movf	?___flmul+1,w
 14146  0FC1  0141               	movlb	1	; select bank1
 14147  0FC2  00A1               	movwf	(_HueToRGB$2853+1)^(0+128)
 14148  0FC3  0140               	movlb	0	; select bank0
 14149  0FC4  083D               	movf	?___flmul,w
 14150  0FC5  0141               	movlb	1	; select bank1
 14151  0FC6  00A0               	movwf	_HueToRGB$2853^(0+128)
 14152                           
 14153                           ;led.c: 54:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14154  0FC7  0140               	movlb	0	; select bank0
 14155  0FC8  0866               	movf	HueToRGB@v1+3,w
 14156  0FC9  00AC               	movwf	___fladd@b+3
 14157  0FCA  0865               	movf	HueToRGB@v1+2,w
 14158  0FCB  00AB               	movwf	___fladd@b+2
 14159  0FCC  0864               	movf	HueToRGB@v1+1,w
 14160  0FCD  00AA               	movwf	___fladd@b+1
 14161  0FCE  0863               	movf	HueToRGB@v1,w
 14162  0FCF  00A9               	movwf	___fladd@b
 14163  0FD0  3040               	movlw	64
 14164  0FD1  00C0               	movwf	___flmul@b+3
 14165  0FD2  30C0               	movlw	192
 14166  0FD3  00BF               	movwf	___flmul@b+2
 14167  0FD4  3000               	movlw	0
 14168  0FD5  00BE               	movwf	___flmul@b+1
 14169  0FD6  3000               	movlw	0
 14170  0FD7  00BD               	movwf	___flmul@b
 14171  0FD8  0141               	movlb	1	; select bank1
 14172  0FD9  0823               	movf	(_HueToRGB$2853+3)^(0+128),w
 14173  0FDA  0140               	movlb	0	; select bank0
 14174  0FDB  00C4               	movwf	___flmul@a+3
 14175  0FDC  0141               	movlb	1	; select bank1
 14176  0FDD  0822               	movf	(_HueToRGB$2853+2)^(0+128),w
 14177  0FDE  0140               	movlb	0	; select bank0
 14178  0FDF  00C3               	movwf	___flmul@a+2
 14179  0FE0  0141               	movlb	1	; select bank1
 14180  0FE1  0821               	movf	(_HueToRGB$2853+1)^(0+128),w
 14181  0FE2  0140               	movlb	0	; select bank0
 14182  0FE3  00C2               	movwf	___flmul@a+1
 14183  0FE4  0141               	movlb	1	; select bank1
 14184  0FE5  0820               	movf	_HueToRGB$2853^(0+128),w
 14185  0FE6  0140               	movlb	0	; select bank0
 14186  0FE7  00C1               	movwf	___flmul@a
 14187  0FE8  3183  23F8  318E   	fcall	___flmul
 14188  0FEB  0140               	movlb	0	; select bank0
 14189  0FEC  0840               	movf	?___flmul+3,w
 14190  0FED  00B0               	movwf	___fladd@a+3
 14191  0FEE  083F               	movf	?___flmul+2,w
 14192  0FEF  00AF               	movwf	___fladd@a+2
 14193  0FF0  083E               	movf	?___flmul+1,w
 14194  0FF1  00AE               	movwf	___fladd@a+1
 14195  0FF2  083D               	movf	?___flmul,w
 14196  0FF3  00AD               	movwf	___fladd@a
 14197  0FF4  318C  243A         	fcall	___fladd
 14198  0FF6  0140               	movlb	0	; select bank0
 14199  0FF7  082C               	movf	?___fladd+3,w
 14200  0FF8  00E6               	movwf	?_HueToRGB+3
 14201  0FF9  082B               	movf	?___fladd+2,w
 14202  0FFA  00E5               	movwf	?_HueToRGB+2
 14203  0FFB  082A               	movf	?___fladd+1,w
 14204  0FFC  00E4               	movwf	?_HueToRGB+1
 14205  0FFD  0829               	movf	?___fladd,w
 14206  0FFE  00E3               	movwf	?_HueToRGB
 14207  0FFF  0008               	return
 14208  1000                     __end_of_HueToRGB:	
 14209                           ;led.c: 56:  return v1;
 14210                           
 14211                           
 14212                           	psect	text44
 14213  10B2                     __ptext44:	
 14214 ;; *************** function ___flsub *****************
 14215 ;; Defined at:
 14216 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;  a               4   55[BANK0 ] float 
 14219 ;;  b               4   59[BANK0 ] float 
 14220 ;; Auto vars:     Size  Location     Type
 14221 ;;		None
 14222 ;; Return value:  Size  Location     Type
 14223 ;;                  4   55[BANK0 ] float 
 14224 ;; Registers used:
 14225 ;;		wreg, status,2, status,0, pclath, cstack
 14226 ;; Tracked objects:
 14227 ;;		On entry : 0/0
 14228 ;;		On exit  : 0/0
 14229 ;;		Unchanged: 0/0
 14230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14231 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14234 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14235 ;;Total ram usage:        8 bytes
 14236 ;; Hardware stack levels used:    1
 14237 ;; Hardware stack levels required when called:    5
 14238 ;; This function calls:
 14239 ;;		___fladd
 14240 ;; This function is called by:
 14241 ;;		_HueToRGB
 14242 ;;		_LED_setHSL
 14243 ;;		_pulseColors
 14244 ;; This function uses a non-reentrant model
 14245 ;;
 14246                           
 14247                           
 14248                           ;psect for function ___flsub
 14249  10B2                     ___flsub:	
 14250                           
 14251                           ;incstack = 0
 14252                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 14253  10B2  3080               	movlw	128
 14254  10B3  0140               	movlb	0	; select bank0
 14255  10B4  06DA               	xorwf	___flsub@a+3,f
 14256  10B5  085E               	movf	___flsub@b+3,w
 14257  10B6  00AC               	movwf	___fladd@b+3
 14258  10B7  085D               	movf	___flsub@b+2,w
 14259  10B8  00AB               	movwf	___fladd@b+2
 14260  10B9  085C               	movf	___flsub@b+1,w
 14261  10BA  00AA               	movwf	___fladd@b+1
 14262  10BB  085B               	movf	___flsub@b,w
 14263  10BC  00A9               	movwf	___fladd@b
 14264  10BD  085A               	movf	___flsub@a+3,w
 14265  10BE  00B0               	movwf	___fladd@a+3
 14266  10BF  0859               	movf	___flsub@a+2,w
 14267  10C0  00AF               	movwf	___fladd@a+2
 14268  10C1  0858               	movf	___flsub@a+1,w
 14269  10C2  00AE               	movwf	___fladd@a+1
 14270  10C3  0857               	movf	___flsub@a,w
 14271  10C4  00AD               	movwf	___fladd@a
 14272  10C5  318C  243A         	fcall	___fladd
 14273  10C7  0140               	movlb	0	; select bank0
 14274  10C8  082C               	movf	?___fladd+3,w
 14275  10C9  00DA               	movwf	?___flsub+3
 14276  10CA  082B               	movf	?___fladd+2,w
 14277  10CB  00D9               	movwf	?___flsub+2
 14278  10CC  082A               	movf	?___fladd+1,w
 14279  10CD  00D8               	movwf	?___flsub+1
 14280  10CE  0829               	movf	?___fladd,w
 14281  10CF  00D7               	movwf	?___flsub
 14282  10D0  0008               	return
 14283  10D1                     __end_of___flsub:	
 14284                           
 14285                           	psect	text45
 14286  0C3A                     __ptext45:	
 14287 ;; *************** function ___fladd *****************
 14288 ;; Defined at:
 14289 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14290 ;; Parameters:    Size  Location     Type
 14291 ;;  b               4    9[BANK0 ] float 
 14292 ;;  a               4   13[BANK0 ] float 
 14293 ;; Auto vars:     Size  Location     Type
 14294 ;;  grs             1   28[BANK0 ] unsigned char 
 14295 ;;  bexp            1   27[BANK0 ] unsigned char 
 14296 ;;  aexp            1   26[BANK0 ] unsigned char 
 14297 ;;  signs           1   25[BANK0 ] unsigned char 
 14298 ;; Return value:  Size  Location     Type
 14299 ;;                  4    9[BANK0 ] unsigned char 
 14300 ;; Registers used:
 14301 ;;		wreg, status,2, status,0
 14302 ;; Tracked objects:
 14303 ;;		On entry : 0/0
 14304 ;;		On exit  : 0/0
 14305 ;;		Unchanged: 0/0
 14306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14307 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14308 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14309 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14310 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14311 ;;Total ram usage:       20 bytes
 14312 ;; Hardware stack levels used:    1
 14313 ;; Hardware stack levels required when called:    4
 14314 ;; This function calls:
 14315 ;;		Nothing
 14316 ;; This function is called by:
 14317 ;;		_HueToRGB
 14318 ;;		_LED_setHSL
 14319 ;;		___flsub
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           
 14324                           ;psect for function ___fladd
 14325  0C3A                     ___fladd:	
 14326                           
 14327                           ;incstack = 0
 14328                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 14329  0C3A  0140               	movlb	0	; select bank0
 14330  0C3B  082C               	movf	___fladd@b+3,w
 14331  0C3C  3980               	andlw	128
 14332  0C3D  00B1               	movwf	??___fladd
 14333  0C3E  0831               	movf	??___fladd,w
 14334  0C3F  00B9               	movwf	___fladd@signs
 14335  0C40  352C               	lslf	___fladd@b+3,w
 14336  0C41  00B1               	movwf	??___fladd
 14337  0C42  0831               	movf	??___fladd,w
 14338  0C43  00BB               	movwf	___fladd@bexp
 14339  0C44  1BAB               	btfsc	___fladd@b+2,7
 14340  0C45  143B               	bsf	___fladd@bexp,0
 14341  0C46  083B               	movf	___fladd@bexp,w
 14342  0C47  1903               	btfsc	3,2
 14343  0C48  2C57               	goto	l3618
 14344  0C49  0A3B               	incf	___fladd@bexp,w
 14345  0C4A  1D03               	btfss	3,2
 14346  0C4B  2C54               	goto	l3614
 14347  0C4C  3000               	movlw	0
 14348  0C4D  00AC               	movwf	___fladd@b+3
 14349  0C4E  3000               	movlw	0
 14350  0C4F  00AB               	movwf	___fladd@b+2
 14351  0C50  3000               	movlw	0
 14352  0C51  00AA               	movwf	___fladd@b+1
 14353  0C52  3000               	movlw	0
 14354  0C53  00A9               	movwf	___fladd@b
 14355  0C54                     l3614:	
 14356  0C54  17AB               	bsf	___fladd@b+2,7
 14357  0C55  01AC               	clrf	___fladd@b+3
 14358  0C56  2C5F               	goto	l3620
 14359  0C57                     l3618:	
 14360  0C57  3000               	movlw	0
 14361  0C58  00AC               	movwf	___fladd@b+3
 14362  0C59  3000               	movlw	0
 14363  0C5A  00AB               	movwf	___fladd@b+2
 14364  0C5B  3000               	movlw	0
 14365  0C5C  00AA               	movwf	___fladd@b+1
 14366  0C5D  3000               	movlw	0
 14367  0C5E  00A9               	movwf	___fladd@b
 14368  0C5F                     l3620:	
 14369  0C5F  0830               	movf	___fladd@a+3,w
 14370  0C60  3980               	andlw	128
 14371  0C61  00B1               	movwf	??___fladd
 14372  0C62  0831               	movf	??___fladd,w
 14373  0C63  00BA               	movwf	___fladd@aexp
 14374  0C64  083A               	movf	___fladd@aexp,w
 14375  0C65  0639               	xorwf	___fladd@signs,w
 14376  0C66  1D03               	btfss	3,2
 14377  0C67  1739               	bsf	___fladd@signs,6
 14378  0C68  3530               	lslf	___fladd@a+3,w
 14379  0C69  00B1               	movwf	??___fladd
 14380  0C6A  0831               	movf	??___fladd,w
 14381  0C6B  00BA               	movwf	___fladd@aexp
 14382  0C6C  1BAF               	btfsc	___fladd@a+2,7
 14383  0C6D  143A               	bsf	___fladd@aexp,0
 14384  0C6E  083A               	movf	___fladd@aexp,w
 14385  0C6F  1903               	btfsc	3,2
 14386  0C70  2C7F               	goto	l3642
 14387  0C71  0A3A               	incf	___fladd@aexp,w
 14388  0C72  1D03               	btfss	3,2
 14389  0C73  2C7C               	goto	l3638
 14390  0C74  3000               	movlw	0
 14391  0C75  00B0               	movwf	___fladd@a+3
 14392  0C76  3000               	movlw	0
 14393  0C77  00AF               	movwf	___fladd@a+2
 14394  0C78  3000               	movlw	0
 14395  0C79  00AE               	movwf	___fladd@a+1
 14396  0C7A  3000               	movlw	0
 14397  0C7B  00AD               	movwf	___fladd@a
 14398  0C7C                     l3638:	
 14399  0C7C  17AF               	bsf	___fladd@a+2,7
 14400  0C7D  01B0               	clrf	___fladd@a+3
 14401  0C7E  2C87               	goto	l1575
 14402  0C7F                     l3642:	
 14403  0C7F  3000               	movlw	0
 14404  0C80  00B0               	movwf	___fladd@a+3
 14405  0C81  3000               	movlw	0
 14406  0C82  00AF               	movwf	___fladd@a+2
 14407  0C83  3000               	movlw	0
 14408  0C84  00AE               	movwf	___fladd@a+1
 14409  0C85  3000               	movlw	0
 14410  0C86  00AD               	movwf	___fladd@a
 14411  0C87                     l1575:	
 14412  0C87  083B               	movf	___fladd@bexp,w
 14413  0C88  023A               	subwf	___fladd@aexp,w
 14414  0C89  1803               	skipnc
 14415  0C8A  2CCD               	goto	l3678
 14416  0C8B  1F39               	btfss	___fladd@signs,6
 14417  0C8C  2C91               	goto	l3648
 14418  0C8D  3080               	movlw	128
 14419  0C8E  00B1               	movwf	??___fladd
 14420  0C8F  0831               	movf	??___fladd,w
 14421  0C90  06B9               	xorwf	___fladd@signs,f
 14422  0C91                     l3648:	
 14423  0C91  083B               	movf	___fladd@bexp,w
 14424  0C92  00B1               	movwf	??___fladd
 14425  0C93  0831               	movf	??___fladd,w
 14426  0C94  00BC               	movwf	___fladd@grs
 14427  0C95  083A               	movf	___fladd@aexp,w
 14428  0C96  00B1               	movwf	??___fladd
 14429  0C97  0831               	movf	??___fladd,w
 14430  0C98  00BB               	movwf	___fladd@bexp
 14431  0C99  083C               	movf	___fladd@grs,w
 14432  0C9A  00B1               	movwf	??___fladd
 14433  0C9B  0831               	movf	??___fladd,w
 14434  0C9C  00BA               	movwf	___fladd@aexp
 14435  0C9D  0829               	movf	___fladd@b,w
 14436  0C9E  00B1               	movwf	??___fladd
 14437  0C9F  0831               	movf	??___fladd,w
 14438  0CA0  00BC               	movwf	___fladd@grs
 14439  0CA1  082D               	movf	___fladd@a,w
 14440  0CA2  00B1               	movwf	??___fladd
 14441  0CA3  0831               	movf	??___fladd,w
 14442  0CA4  00A9               	movwf	___fladd@b
 14443  0CA5  083C               	movf	___fladd@grs,w
 14444  0CA6  00B1               	movwf	??___fladd
 14445  0CA7  0831               	movf	??___fladd,w
 14446  0CA8  00AD               	movwf	___fladd@a
 14447  0CA9  082A               	movf	___fladd@b+1,w
 14448  0CAA  00B1               	movwf	??___fladd
 14449  0CAB  0831               	movf	??___fladd,w
 14450  0CAC  00BC               	movwf	___fladd@grs
 14451  0CAD  082E               	movf	___fladd@a+1,w
 14452  0CAE  00B1               	movwf	??___fladd
 14453  0CAF  0831               	movf	??___fladd,w
 14454  0CB0  00AA               	movwf	___fladd@b+1
 14455  0CB1  083C               	movf	___fladd@grs,w
 14456  0CB2  00B1               	movwf	??___fladd
 14457  0CB3  0831               	movf	??___fladd,w
 14458  0CB4  00AE               	movwf	___fladd@a+1
 14459  0CB5  082B               	movf	___fladd@b+2,w
 14460  0CB6  00B1               	movwf	??___fladd
 14461  0CB7  0831               	movf	??___fladd,w
 14462  0CB8  00BC               	movwf	___fladd@grs
 14463  0CB9  082F               	movf	___fladd@a+2,w
 14464  0CBA  00B1               	movwf	??___fladd
 14465  0CBB  0831               	movf	??___fladd,w
 14466  0CBC  00AB               	movwf	___fladd@b+2
 14467  0CBD  083C               	movf	___fladd@grs,w
 14468  0CBE  00B1               	movwf	??___fladd
 14469  0CBF  0831               	movf	??___fladd,w
 14470  0CC0  00AF               	movwf	___fladd@a+2
 14471  0CC1  082C               	movf	___fladd@b+3,w
 14472  0CC2  00B1               	movwf	??___fladd
 14473  0CC3  0831               	movf	??___fladd,w
 14474  0CC4  00BC               	movwf	___fladd@grs
 14475  0CC5  0830               	movf	___fladd@a+3,w
 14476  0CC6  00B1               	movwf	??___fladd
 14477  0CC7  0831               	movf	??___fladd,w
 14478  0CC8  00AC               	movwf	___fladd@b+3
 14479  0CC9  083C               	movf	___fladd@grs,w
 14480  0CCA  00B1               	movwf	??___fladd
 14481  0CCB  0831               	movf	??___fladd,w
 14482  0CCC  00B0               	movwf	___fladd@a+3
 14483  0CCD                     l3678:	
 14484  0CCD  01BC               	clrf	___fladd@grs
 14485  0CCE  083A               	movf	___fladd@aexp,w
 14486  0CCF  00B1               	movwf	??___fladd
 14487  0CD0  01B2               	clrf	??___fladd+1
 14488  0CD1  0832               	movf	??___fladd+1,w
 14489  0CD2  00B4               	movwf	??___fladd+3
 14490  0CD3  083B               	movf	___fladd@bexp,w
 14491  0CD4  0231               	subwf	??___fladd,w
 14492  0CD5  00B3               	movwf	??___fladd+2
 14493  0CD6  1C03               	skipc
 14494  0CD7  03B4               	decf	??___fladd+3,f
 14495  0CD8  0834               	movf	??___fladd+3,w
 14496  0CD9  3A80               	xorlw	128
 14497  0CDA  00B5               	movwf	??___fladd+4
 14498  0CDB  3080               	movlw	128
 14499  0CDC  0235               	subwf	??___fladd+4,w
 14500  0CDD  1D03               	skipz
 14501  0CDE  2CE1               	goto	u2795
 14502  0CDF  301A               	movlw	26
 14503  0CE0  0233               	subwf	??___fladd+2,w
 14504  0CE1                     u2795:	
 14505  0CE1  1C03               	skipc
 14506  0CE2  2D15               	goto	l3696
 14507  0CE3  0140               	movlb	0	; select bank0
 14508  0CE4  082C               	movf	___fladd@b+3,w
 14509  0CE5  042B               	iorwf	___fladd@b+2,w
 14510  0CE6  042A               	iorwf	___fladd@b+1,w
 14511  0CE7  0429               	iorwf	___fladd@b,w
 14512  0CE8  1903               	btfsc	3,2
 14513  0CE9  2CEC               	goto	u2800
 14514  0CEA  3001               	movlw	1
 14515  0CEB  2CED               	goto	u2810
 14516  0CEC                     u2800:	
 14517  0CEC  3000               	movlw	0
 14518  0CED                     u2810:	
 14519  0CED  00B1               	movwf	??___fladd
 14520  0CEE  0831               	movf	??___fladd,w
 14521  0CEF  00BC               	movwf	___fladd@grs
 14522  0CF0  3000               	movlw	0
 14523  0CF1  00AC               	movwf	___fladd@b+3
 14524  0CF2  3000               	movlw	0
 14525  0CF3  00AB               	movwf	___fladd@b+2
 14526  0CF4  3000               	movlw	0
 14527  0CF5  00AA               	movwf	___fladd@b+1
 14528  0CF6  3000               	movlw	0
 14529  0CF7  00A9               	movwf	___fladd@b
 14530  0CF8  083A               	movf	___fladd@aexp,w
 14531  0CF9  00B1               	movwf	??___fladd
 14532  0CFA  0831               	movf	??___fladd,w
 14533  0CFB  00BB               	movwf	___fladd@bexp
 14534  0CFC  2D1A               	goto	l1579
 14535  0CFD                     l1581:	
 14536  0CFD  1C3C               	btfss	___fladd@grs,0
 14537  0CFE  2D05               	goto	l3686
 14538  0CFF  363C               	lsrf	___fladd@grs,w
 14539  0D00  3801               	iorlw	1
 14540  0D01  00B1               	movwf	??___fladd
 14541  0D02  0831               	movf	??___fladd,w
 14542  0D03  00BC               	movwf	___fladd@grs
 14543  0D04  2D07               	goto	l3688
 14544  0D05                     l3686:	
 14545  0D05  1003               	clrc
 14546  0D06  0CBC               	rrf	___fladd@grs,f
 14547  0D07                     l3688:	
 14548  0D07  1829               	btfsc	___fladd@b,0
 14549  0D08  17BC               	bsf	___fladd@grs,7
 14550  0D09  3001               	movlw	1
 14551  0D0A  00B1               	movwf	??___fladd
 14552  0D0B                     u2845:	
 14553  0D0B  37AC               	asrf	___fladd@b+3,f
 14554  0D0C  0CAB               	rrf	___fladd@b+2,f
 14555  0D0D  0CAA               	rrf	___fladd@b+1,f
 14556  0D0E  0CA9               	rrf	___fladd@b,f
 14557  0D0F  0BB1               	decfsz	??___fladd& (0+127),f
 14558  0D10  2D0B               	goto	u2845
 14559  0D11  3001               	movlw	1
 14560  0D12  00B1               	movwf	??___fladd
 14561  0D13  0831               	movf	??___fladd,w
 14562  0D14  07BB               	addwf	___fladd@bexp,f
 14563  0D15                     l3696:	
 14564  0D15  0140               	movlb	0	; select bank0
 14565  0D16  083A               	movf	___fladd@aexp,w
 14566  0D17  023B               	subwf	___fladd@bexp,w
 14567  0D18  1C03               	skipc
 14568  0D19  2CFD               	goto	l1581
 14569  0D1A                     l1579:	
 14570  0D1A  1B39               	btfsc	___fladd@signs,6
 14571  0D1B  2D4B               	goto	l3722
 14572  0D1C  083B               	movf	___fladd@bexp,w
 14573  0D1D  1D03               	btfss	3,2
 14574  0D1E  2D28               	goto	l3704
 14575  0D1F  3000               	movlw	0
 14576  0D20  00AC               	movwf	?___fladd+3
 14577  0D21  3000               	movlw	0
 14578  0D22  00AB               	movwf	?___fladd+2
 14579  0D23  3000               	movlw	0
 14580  0D24  00AA               	movwf	?___fladd+1
 14581  0D25  3000               	movlw	0
 14582  0D26  00A9               	movwf	?___fladd
 14583  0D27  0008               	return
 14584  0D28                     l3704:	
 14585  0D28  082D               	movf	___fladd@a,w
 14586  0D29  07A9               	addwf	___fladd@b,f
 14587  0D2A  082E               	movf	___fladd@a+1,w
 14588  0D2B  3DAA               	addwfc	___fladd@b+1,f
 14589  0D2C  082F               	movf	___fladd@a+2,w
 14590  0D2D  3DAB               	addwfc	___fladd@b+2,f
 14591  0D2E  0830               	movf	___fladd@a+3,w
 14592  0D2F  3DAC               	addwfc	___fladd@b+3,f
 14593  0D30  1C2C               	btfss	___fladd@b+3,0
 14594  0D31  2DC5               	goto	l3756
 14595  0D32  1C3C               	btfss	___fladd@grs,0
 14596  0D33  2D3A               	goto	l3712
 14597  0D34  363C               	lsrf	___fladd@grs,w
 14598  0D35  3801               	iorlw	1
 14599  0D36  00B1               	movwf	??___fladd
 14600  0D37  0831               	movf	??___fladd,w
 14601  0D38  00BC               	movwf	___fladd@grs
 14602  0D39  2D3C               	goto	l3714
 14603  0D3A                     l3712:	
 14604  0D3A  1003               	clrc
 14605  0D3B  0CBC               	rrf	___fladd@grs,f
 14606  0D3C                     l3714:	
 14607  0D3C  1829               	btfsc	___fladd@b,0
 14608  0D3D  17BC               	bsf	___fladd@grs,7
 14609  0D3E  3001               	movlw	1
 14610  0D3F  00B1               	movwf	??___fladd
 14611  0D40                     u2915:	
 14612  0D40  37AC               	asrf	___fladd@b+3,f
 14613  0D41  0CAB               	rrf	___fladd@b+2,f
 14614  0D42  0CAA               	rrf	___fladd@b+1,f
 14615  0D43  0CA9               	rrf	___fladd@b,f
 14616  0D44  0BB1               	decfsz	??___fladd& (0+127),f
 14617  0D45  2D40               	goto	u2915
 14618  0D46  3001               	movlw	1
 14619  0D47  00B1               	movwf	??___fladd
 14620  0D48  0831               	movf	??___fladd,w
 14621  0D49  07BB               	addwf	___fladd@bexp,f
 14622  0D4A  2DC5               	goto	l3756
 14623  0D4B                     l3722:	
 14624  0D4B  082C               	movf	___fladd@b+3,w
 14625  0D4C  3A80               	xorlw	128
 14626  0D4D  00B1               	movwf	??___fladd
 14627  0D4E  0830               	movf	___fladd@a+3,w
 14628  0D4F  3A80               	xorlw	128
 14629  0D50  0231               	subwf	??___fladd,w
 14630  0D51  1D03               	skipz
 14631  0D52  2D5D               	goto	u2923
 14632  0D53  082F               	movf	___fladd@a+2,w
 14633  0D54  022B               	subwf	___fladd@b+2,w
 14634  0D55  1D03               	skipz
 14635  0D56  2D5D               	goto	u2923
 14636  0D57  082E               	movf	___fladd@a+1,w
 14637  0D58  022A               	subwf	___fladd@b+1,w
 14638  0D59  1D03               	skipz
 14639  0D5A  2D5D               	goto	u2923
 14640  0D5B  082D               	movf	___fladd@a,w
 14641  0D5C  0229               	subwf	___fladd@b,w
 14642  0D5D                     u2923:	
 14643  0D5D  1803               	skipnc
 14644  0D5E  2D95               	goto	l3732
 14645  0D5F  30FF               	movlw	255
 14646  0D60  00B1               	movwf	??___fladd
 14647  0D61  30FF               	movlw	255
 14648  0D62  00B2               	movwf	??___fladd+1
 14649  0D63  30FF               	movlw	255
 14650  0D64  00B3               	movwf	??___fladd+2
 14651  0D65  30FF               	movlw	255
 14652  0D66  00B4               	movwf	??___fladd+3
 14653  0D67  0829               	movf	___fladd@b,w
 14654  0D68  022D               	subwf	___fladd@a,w
 14655  0D69  00B5               	movwf	??___fladd+4
 14656  0D6A  082A               	movf	___fladd@b+1,w
 14657  0D6B  3B2E               	subwfb	___fladd@a+1,w
 14658  0D6C  00B6               	movwf	??___fladd+5
 14659  0D6D  082B               	movf	___fladd@b+2,w
 14660  0D6E  3B2F               	subwfb	___fladd@a+2,w
 14661  0D6F  00B7               	movwf	??___fladd+6
 14662  0D70  082C               	movf	___fladd@b+3,w
 14663  0D71  3B30               	subwfb	___fladd@a+3,w
 14664  0D72  00B8               	movwf	??___fladd+7
 14665  0D73  0835               	movf	??___fladd+4,w
 14666  0D74  07B1               	addwf	??___fladd,f
 14667  0D75  0836               	movf	??___fladd+5,w
 14668  0D76  3DB2               	addwfc	??___fladd+1,f
 14669  0D77  0837               	movf	??___fladd+6,w
 14670  0D78  3DB3               	addwfc	??___fladd+2,f
 14671  0D79  0838               	movf	??___fladd+7,w
 14672  0D7A  3DB4               	addwfc	??___fladd+3,f
 14673  0D7B  0834               	movf	??___fladd+3,w
 14674  0D7C  00AC               	movwf	___fladd@b+3
 14675  0D7D  0833               	movf	??___fladd+2,w
 14676  0D7E  00AB               	movwf	___fladd@b+2
 14677  0D7F  0832               	movf	??___fladd+1,w
 14678  0D80  00AA               	movwf	___fladd@b+1
 14679  0D81  0831               	movf	??___fladd,w
 14680  0D82  00A9               	movwf	___fladd@b
 14681  0D83  3080               	movlw	128
 14682  0D84  00B1               	movwf	??___fladd
 14683  0D85  0831               	movf	??___fladd,w
 14684  0D86  06B9               	xorwf	___fladd@signs,f
 14685  0D87  09BC               	comf	___fladd@grs,f
 14686  0D88  0ABC               	incf	___fladd@grs,f
 14687  0D89  083C               	movf	___fladd@grs,w
 14688  0D8A  1D03               	btfss	3,2
 14689  0D8B  2D9D               	goto	l1596
 14690  0D8C  3001               	movlw	1
 14691  0D8D  07A9               	addwf	___fladd@b,f
 14692  0D8E  3000               	movlw	0
 14693  0D8F  3DAA               	addwfc	___fladd@b+1,f
 14694  0D90  3000               	movlw	0
 14695  0D91  3DAB               	addwfc	___fladd@b+2,f
 14696  0D92  3000               	movlw	0
 14697  0D93  3DAC               	addwfc	___fladd@b+3,f
 14698  0D94  2D9D               	goto	l1596
 14699  0D95                     l3732:	
 14700  0D95  082D               	movf	___fladd@a,w
 14701  0D96  02A9               	subwf	___fladd@b,f
 14702  0D97  082E               	movf	___fladd@a+1,w
 14703  0D98  3BAA               	subwfb	___fladd@b+1,f
 14704  0D99  082F               	movf	___fladd@a+2,w
 14705  0D9A  3BAB               	subwfb	___fladd@b+2,f
 14706  0D9B  0830               	movf	___fladd@a+3,w
 14707  0D9C  3BAC               	subwfb	___fladd@b+3,f
 14708  0D9D                     l1596:	
 14709  0D9D  082C               	movf	___fladd@b+3,w
 14710  0D9E  042B               	iorwf	___fladd@b+2,w
 14711  0D9F  042A               	iorwf	___fladd@b+1,w
 14712  0DA0  0429               	iorwf	___fladd@b,w
 14713  0DA1  1D03               	skipz
 14714  0DA2  2DC3               	goto	l3754
 14715  0DA3  083C               	movf	___fladd@grs,w
 14716  0DA4  1D03               	btfss	3,2
 14717  0DA5  2DC3               	goto	l3754
 14718  0DA6  3000               	movlw	0
 14719  0DA7  00AC               	movwf	?___fladd+3
 14720  0DA8  3000               	movlw	0
 14721  0DA9  00AB               	movwf	?___fladd+2
 14722  0DAA  3000               	movlw	0
 14723  0DAB  00AA               	movwf	?___fladd+1
 14724  0DAC  3000               	movlw	0
 14725  0DAD  00A9               	movwf	?___fladd
 14726  0DAE  0008               	return
 14727  0DAF                     l3740:	
 14728  0DAF  3001               	movlw	1
 14729  0DB0                     u2965:	
 14730  0DB0  35A9               	lslf	___fladd@b,f
 14731  0DB1  0DAA               	rlf	___fladd@b+1,f
 14732  0DB2  0DAB               	rlf	___fladd@b+2,f
 14733  0DB3  0DAC               	rlf	___fladd@b+3,f
 14734  0DB4  0B89               	decfsz	9,f
 14735  0DB5  2DB0               	goto	u2965
 14736  0DB6  1BBC               	btfsc	___fladd@grs,7
 14737  0DB7  1429               	bsf	___fladd@b,0
 14738  0DB8  1C3C               	btfss	___fladd@grs,0
 14739  0DB9  2DBC               	goto	l3748
 14740  0DBA  1403               	setc
 14741  0DBB  2DBD               	goto	L4
 14742  0DBC                     l3748:	
 14743  0DBC  1003               	clrc
 14744  0DBD                     L4:	
 14745  0DBD  0DBC               	rlf	___fladd@grs,f
 14746  0DBE  083B               	movf	___fladd@bexp,w
 14747  0DBF  1903               	btfsc	3,2
 14748  0DC0  2DC3               	goto	l3754
 14749  0DC1  3001               	movlw	1
 14750  0DC2  02BB               	subwf	___fladd@bexp,f
 14751  0DC3                     l3754:	
 14752  0DC3  1FAB               	btfss	___fladd@b+2,7
 14753  0DC4  2DAF               	goto	l3740
 14754  0DC5                     l3756:	
 14755  0DC5  01BA               	clrf	___fladd@aexp
 14756  0DC6  1FBC               	btfss	___fladd@grs,7
 14757  0DC7  2DD0               	goto	l3766
 14758  0DC8  083C               	movf	___fladd@grs,w
 14759  0DC9  397F               	andlw	127
 14760  0DCA  1903               	btfsc	3,2
 14761  0DCB  1829               	btfsc	___fladd@b,0
 14762  0DCC  2DCE               	goto	l3762
 14763  0DCD  2DD0               	goto	l3766
 14764  0DCE                     l3762:	
 14765  0DCE  01BA               	clrf	___fladd@aexp
 14766  0DCF  0ABA               	incf	___fladd@aexp,f
 14767  0DD0                     l3766:	
 14768  0DD0  083A               	movf	___fladd@aexp,w
 14769  0DD1  1903               	btfsc	3,2
 14770  0DD2  2DFC               	goto	l1609
 14771  0DD3  3001               	movlw	1
 14772  0DD4  07A9               	addwf	___fladd@b,f
 14773  0DD5  3000               	movlw	0
 14774  0DD6  3DAA               	addwfc	___fladd@b+1,f
 14775  0DD7  3000               	movlw	0
 14776  0DD8  3DAB               	addwfc	___fladd@b+2,f
 14777  0DD9  3000               	movlw	0
 14778  0DDA  3DAC               	addwfc	___fladd@b+3,f
 14779  0DDB  1C2C               	btfss	___fladd@b+3,0
 14780  0DDC  2DFC               	goto	l1609
 14781  0DDD  0829               	movf	___fladd@b,w
 14782  0DDE  00B1               	movwf	??___fladd
 14783  0DDF  082A               	movf	___fladd@b+1,w
 14784  0DE0  00B2               	movwf	??___fladd+1
 14785  0DE1  082B               	movf	___fladd@b+2,w
 14786  0DE2  00B3               	movwf	??___fladd+2
 14787  0DE3  082C               	movf	___fladd@b+3,w
 14788  0DE4  00B4               	movwf	??___fladd+3
 14789  0DE5  3001               	movlw	1
 14790  0DE6  00B5               	movwf	??___fladd+4
 14791  0DE7                     u3065:	
 14792  0DE7  37B4               	asrf	??___fladd+3,f
 14793  0DE8  0CB3               	rrf	??___fladd+2,f
 14794  0DE9  0CB2               	rrf	??___fladd+1,f
 14795  0DEA  0CB1               	rrf	??___fladd,f
 14796  0DEB  0BB5               	decfsz	??___fladd+4,f
 14797  0DEC  2DE7               	goto	u3065
 14798  0DED  0834               	movf	??___fladd+3,w
 14799  0DEE  00AC               	movwf	___fladd@b+3
 14800  0DEF  0833               	movf	??___fladd+2,w
 14801  0DF0  00AB               	movwf	___fladd@b+2
 14802  0DF1  0832               	movf	??___fladd+1,w
 14803  0DF2  00AA               	movwf	___fladd@b+1
 14804  0DF3  0831               	movf	??___fladd,w
 14805  0DF4  00A9               	movwf	___fladd@b
 14806  0DF5  0A3B               	incf	___fladd@bexp,w
 14807  0DF6  1903               	btfsc	3,2
 14808  0DF7  2DFC               	goto	l1609
 14809  0DF8  3001               	movlw	1
 14810  0DF9  00B1               	movwf	??___fladd
 14811  0DFA  0831               	movf	??___fladd,w
 14812  0DFB  07BB               	addwf	___fladd@bexp,f
 14813  0DFC                     l1609:	
 14814  0DFC  0A3B               	incf	___fladd@bexp,w
 14815  0DFD  1D03               	btfss	3,2
 14816  0DFE  083B               	movf	___fladd@bexp,w
 14817  0DFF  1D03               	btfss	3,2
 14818  0E00  2E0C               	goto	l3784
 14819  0E01  3000               	movlw	0
 14820  0E02  00AC               	movwf	___fladd@b+3
 14821  0E03  3000               	movlw	0
 14822  0E04  00AB               	movwf	___fladd@b+2
 14823  0E05  3000               	movlw	0
 14824  0E06  00AA               	movwf	___fladd@b+1
 14825  0E07  3000               	movlw	0
 14826  0E08  00A9               	movwf	___fladd@b
 14827  0E09  083B               	movf	___fladd@bexp,w
 14828  0E0A  1903               	btfsc	3,2
 14829  0E0B  01B9               	clrf	___fladd@signs
 14830  0E0C                     l3784:	
 14831  0E0C  1C3B               	btfss	___fladd@bexp,0
 14832  0E0D  2E10               	goto	l3788
 14833  0E0E  17AB               	bsf	___fladd@b+2,7
 14834  0E0F  2E14               	goto	l1617
 14835  0E10                     l3788:	
 14836  0E10  307F               	movlw	127
 14837  0E11  00B1               	movwf	??___fladd
 14838  0E12  0831               	movf	??___fladd,w
 14839  0E13  05AB               	andwf	___fladd@b+2,f
 14840  0E14                     l1617:	
 14841  0E14  363B               	lsrf	___fladd@bexp,w
 14842  0E15  00B1               	movwf	??___fladd
 14843  0E16  0831               	movf	??___fladd,w
 14844  0E17  00AC               	movwf	___fladd@b+3
 14845  0E18  1FB9               	btfss	___fladd@signs,7
 14846  0E19  0008               	return
 14847  0E1A  17AC               	bsf	___fladd@b+3,7
 14848  0E1B  0008               	return
 14849  0E1C                     __end_of___fladd:	
 14850                           
 14851                           	psect	text46
 14852  03F8                     __ptext46:	
 14853 ;; *************** function ___flmul *****************
 14854 ;; Defined at:
 14855 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 14856 ;; Parameters:    Size  Location     Type
 14857 ;;  b               4   29[BANK0 ] unsigned char 
 14858 ;;  a               4   33[BANK0 ] unsigned char 
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;  prod            4   49[BANK0 ] struct .
 14861 ;;  grs             4   44[BANK0 ] unsigned long 
 14862 ;;  temp            2   53[BANK0 ] struct .
 14863 ;;  bexp            1   48[BANK0 ] unsigned char 
 14864 ;;  aexp            1   43[BANK0 ] unsigned char 
 14865 ;;  sign            1   42[BANK0 ] unsigned char 
 14866 ;; Return value:  Size  Location     Type
 14867 ;;                  4   29[BANK0 ] unsigned char 
 14868 ;; Registers used:
 14869 ;;		wreg, status,2, status,0, pclath, cstack
 14870 ;; Tracked objects:
 14871 ;;		On entry : 0/0
 14872 ;;		On exit  : 0/0
 14873 ;;		Unchanged: 0/0
 14874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14875 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14876 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14877 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14878 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14879 ;;Total ram usage:       26 bytes
 14880 ;; Hardware stack levels used:    1
 14881 ;; Hardware stack levels required when called:    5
 14882 ;; This function calls:
 14883 ;;		__Umul8_16
 14884 ;; This function is called by:
 14885 ;;		_HueToRGB
 14886 ;;		_LED_setHSL
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           
 14890                           
 14891                           ;psect for function ___flmul
 14892  03F8                     ___flmul:	
 14893                           
 14894                           ;incstack = 0
 14895                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14896  03F8  0140               	movlb	0	; select bank0
 14897  03F9  0840               	movf	___flmul@b+3,w
 14898  03FA  3980               	andlw	128
 14899  03FB  00C5               	movwf	??___flmul
 14900  03FC  0845               	movf	??___flmul,w
 14901  03FD  00CA               	movwf	___flmul@sign
 14902  03FE  3540               	lslf	___flmul@b+3,w
 14903  03FF  00C5               	movwf	??___flmul
 14904  0400  0845               	movf	??___flmul,w
 14905  0401  00D0               	movwf	___flmul@bexp
 14906  0402  1BBF               	btfsc	___flmul@b+2,7
 14907  0403  1450               	bsf	___flmul@bexp,0
 14908  0404  0850               	movf	___flmul@bexp,w
 14909  0405  1903               	btfsc	3,2
 14910  0406  2C14               	goto	l5302
 14911  0407  0A50               	incf	___flmul@bexp,w
 14912  0408  1D03               	btfss	3,2
 14913  0409  2C12               	goto	l5300
 14914  040A  3000               	movlw	0
 14915  040B  00C0               	movwf	___flmul@b+3
 14916  040C  3000               	movlw	0
 14917  040D  00BF               	movwf	___flmul@b+2
 14918  040E  3000               	movlw	0
 14919  040F  00BE               	movwf	___flmul@b+1
 14920  0410  3000               	movlw	0
 14921  0411  00BD               	movwf	___flmul@b
 14922  0412                     l5300:	
 14923  0412  17BF               	bsf	___flmul@b+2,7
 14924  0413  2C1C               	goto	l5304
 14925  0414                     l5302:	
 14926  0414  3000               	movlw	0
 14927  0415  00C0               	movwf	___flmul@b+3
 14928  0416  3000               	movlw	0
 14929  0417  00BF               	movwf	___flmul@b+2
 14930  0418  3000               	movlw	0
 14931  0419  00BE               	movwf	___flmul@b+1
 14932  041A  3000               	movlw	0
 14933  041B  00BD               	movwf	___flmul@b
 14934  041C                     l5304:	
 14935  041C  0844               	movf	___flmul@a+3,w
 14936  041D  3980               	andlw	128
 14937  041E  00C5               	movwf	??___flmul
 14938  041F  0845               	movf	??___flmul,w
 14939  0420  06CA               	xorwf	___flmul@sign,f
 14940  0421  3544               	lslf	___flmul@a+3,w
 14941  0422  00C5               	movwf	??___flmul
 14942  0423  0845               	movf	??___flmul,w
 14943  0424  00CB               	movwf	___flmul@aexp
 14944  0425  1BC3               	btfsc	___flmul@a+2,7
 14945  0426  144B               	bsf	___flmul@aexp,0
 14946  0427  084B               	movf	___flmul@aexp,w
 14947  0428  1903               	btfsc	3,2
 14948  0429  2C37               	goto	l5320
 14949  042A  0A4B               	incf	___flmul@aexp,w
 14950  042B  1D03               	btfss	3,2
 14951  042C  2C35               	goto	l5318
 14952  042D  3000               	movlw	0
 14953  042E  00C4               	movwf	___flmul@a+3
 14954  042F  3000               	movlw	0
 14955  0430  00C3               	movwf	___flmul@a+2
 14956  0431  3000               	movlw	0
 14957  0432  00C2               	movwf	___flmul@a+1
 14958  0433  3000               	movlw	0
 14959  0434  00C1               	movwf	___flmul@a
 14960  0435                     l5318:	
 14961  0435  17C3               	bsf	___flmul@a+2,7
 14962  0436  2C3F               	goto	l5322
 14963  0437                     l5320:	
 14964  0437  3000               	movlw	0
 14965  0438  00C4               	movwf	___flmul@a+3
 14966  0439  3000               	movlw	0
 14967  043A  00C3               	movwf	___flmul@a+2
 14968  043B  3000               	movlw	0
 14969  043C  00C2               	movwf	___flmul@a+1
 14970  043D  3000               	movlw	0
 14971  043E  00C1               	movwf	___flmul@a
 14972  043F                     l5322:	
 14973  043F  084B               	movf	___flmul@aexp,w
 14974  0440  1D03               	btfss	3,2
 14975  0441  0850               	movf	___flmul@bexp,w
 14976  0442  1D03               	btfss	3,2
 14977  0443  2C4D               	goto	l5330
 14978  0444  3000               	movlw	0
 14979  0445  00C0               	movwf	?___flmul+3
 14980  0446  3000               	movlw	0
 14981  0447  00BF               	movwf	?___flmul+2
 14982  0448  3000               	movlw	0
 14983  0449  00BE               	movwf	?___flmul+1
 14984  044A  3000               	movlw	0
 14985  044B  00BD               	movwf	?___flmul
 14986  044C  0008               	return
 14987  044D                     l5330:	
 14988  044D  083D               	movf	___flmul@b,w
 14989  044E  00C5               	movwf	??___flmul
 14990  044F  0845               	movf	??___flmul,w
 14991  0450  00A0               	movwf	__Umul8_16@multiplicand
 14992  0451  0843               	movf	___flmul@a+2,w
 14993  0452  3191  2111  3183   	fcall	__Umul8_16
 14994  0455  0140               	movlb	0	; select bank0
 14995  0456  0821               	movf	?__Umul8_16+1,w
 14996  0457  00D6               	movwf	___flmul@temp+1
 14997  0458  0820               	movf	?__Umul8_16,w
 14998  0459  00D5               	movwf	___flmul@temp
 14999  045A  0855               	movf	___flmul@temp,w
 15000  045B  00C5               	movwf	??___flmul
 15001  045C  01C6               	clrf	??___flmul+1
 15002  045D  01C7               	clrf	??___flmul+2
 15003  045E  01C8               	clrf	??___flmul+3
 15004  045F  0848               	movf	??___flmul+3,w
 15005  0460  00CF               	movwf	___flmul@grs+3
 15006  0461  0847               	movf	??___flmul+2,w
 15007  0462  00CE               	movwf	___flmul@grs+2
 15008  0463  0846               	movf	??___flmul+1,w
 15009  0464  00CD               	movwf	___flmul@grs+1
 15010  0465  0845               	movf	??___flmul,w
 15011  0466  00CC               	movwf	___flmul@grs
 15012  0467  0856               	movf	___flmul@temp+1,w
 15013  0468  00C5               	movwf	??___flmul
 15014  0469  01C6               	clrf	??___flmul+1
 15015  046A  01C7               	clrf	??___flmul+2
 15016  046B  01C8               	clrf	??___flmul+3
 15017  046C  0848               	movf	??___flmul+3,w
 15018  046D  00D4               	movwf	___flmul@prod+3
 15019  046E  0847               	movf	??___flmul+2,w
 15020  046F  00D3               	movwf	___flmul@prod+2
 15021  0470  0846               	movf	??___flmul+1,w
 15022  0471  00D2               	movwf	___flmul@prod+1
 15023  0472  0845               	movf	??___flmul,w
 15024  0473  00D1               	movwf	___flmul@prod
 15025  0474  083E               	movf	___flmul@b+1,w
 15026  0475  00C5               	movwf	??___flmul
 15027  0476  0845               	movf	??___flmul,w
 15028  0477  00A0               	movwf	__Umul8_16@multiplicand
 15029  0478  0842               	movf	___flmul@a+1,w
 15030  0479  3191  2111  3183   	fcall	__Umul8_16
 15031  047C  0140               	movlb	0	; select bank0
 15032  047D  0821               	movf	?__Umul8_16+1,w
 15033  047E  00D6               	movwf	___flmul@temp+1
 15034  047F  0820               	movf	?__Umul8_16,w
 15035  0480  00D5               	movwf	___flmul@temp
 15036  0481  0855               	movf	___flmul@temp,w
 15037  0482  00C5               	movwf	??___flmul
 15038  0483  01C6               	clrf	??___flmul+1
 15039  0484  01C7               	clrf	??___flmul+2
 15040  0485  01C8               	clrf	??___flmul+3
 15041  0486  0845               	movf	??___flmul,w
 15042  0487  07CC               	addwf	___flmul@grs,f
 15043  0488  0846               	movf	??___flmul+1,w
 15044  0489  3DCD               	addwfc	___flmul@grs+1,f
 15045  048A  0847               	movf	??___flmul+2,w
 15046  048B  3DCE               	addwfc	___flmul@grs+2,f
 15047  048C  0848               	movf	??___flmul+3,w
 15048  048D  3DCF               	addwfc	___flmul@grs+3,f
 15049  048E  0856               	movf	___flmul@temp+1,w
 15050  048F  00C5               	movwf	??___flmul
 15051  0490  01C6               	clrf	??___flmul+1
 15052  0491  01C7               	clrf	??___flmul+2
 15053  0492  01C8               	clrf	??___flmul+3
 15054  0493  0845               	movf	??___flmul,w
 15055  0494  07D1               	addwf	___flmul@prod,f
 15056  0495  0846               	movf	??___flmul+1,w
 15057  0496  3DD2               	addwfc	___flmul@prod+1,f
 15058  0497  0847               	movf	??___flmul+2,w
 15059  0498  3DD3               	addwfc	___flmul@prod+2,f
 15060  0499  0848               	movf	??___flmul+3,w
 15061  049A  3DD4               	addwfc	___flmul@prod+3,f
 15062  049B  083F               	movf	___flmul@b+2,w
 15063  049C  00C5               	movwf	??___flmul
 15064  049D  0845               	movf	??___flmul,w
 15065  049E  00A0               	movwf	__Umul8_16@multiplicand
 15066  049F  0841               	movf	___flmul@a,w
 15067  04A0  3191  2111  3183   	fcall	__Umul8_16
 15068  04A3  0140               	movlb	0	; select bank0
 15069  04A4  0821               	movf	?__Umul8_16+1,w
 15070  04A5  00D6               	movwf	___flmul@temp+1
 15071  04A6  0820               	movf	?__Umul8_16,w
 15072  04A7  00D5               	movwf	___flmul@temp
 15073  04A8  0855               	movf	___flmul@temp,w
 15074  04A9  00C5               	movwf	??___flmul
 15075  04AA  01C6               	clrf	??___flmul+1
 15076  04AB  01C7               	clrf	??___flmul+2
 15077  04AC  01C8               	clrf	??___flmul+3
 15078  04AD  0845               	movf	??___flmul,w
 15079  04AE  07CC               	addwf	___flmul@grs,f
 15080  04AF  0846               	movf	??___flmul+1,w
 15081  04B0  3DCD               	addwfc	___flmul@grs+1,f
 15082  04B1  0847               	movf	??___flmul+2,w
 15083  04B2  3DCE               	addwfc	___flmul@grs+2,f
 15084  04B3  0848               	movf	??___flmul+3,w
 15085  04B4  3DCF               	addwfc	___flmul@grs+3,f
 15086  04B5  0856               	movf	___flmul@temp+1,w
 15087  04B6  00C5               	movwf	??___flmul
 15088  04B7  01C6               	clrf	??___flmul+1
 15089  04B8  01C7               	clrf	??___flmul+2
 15090  04B9  01C8               	clrf	??___flmul+3
 15091  04BA  0845               	movf	??___flmul,w
 15092  04BB  07D1               	addwf	___flmul@prod,f
 15093  04BC  0846               	movf	??___flmul+1,w
 15094  04BD  3DD2               	addwfc	___flmul@prod+1,f
 15095  04BE  0847               	movf	??___flmul+2,w
 15096  04BF  3DD3               	addwfc	___flmul@prod+2,f
 15097  04C0  0848               	movf	??___flmul+3,w
 15098  04C1  3DD4               	addwfc	___flmul@prod+3,f
 15099  04C2  3008               	movlw	8
 15100  04C3                     u5455:	
 15101  04C3  35CC               	lslf	___flmul@grs,f
 15102  04C4  0DCD               	rlf	___flmul@grs+1,f
 15103  04C5  0DCE               	rlf	___flmul@grs+2,f
 15104  04C6  0DCF               	rlf	___flmul@grs+3,f
 15105  04C7  0B89               	decfsz	9,f
 15106  04C8  2CC3               	goto	u5455
 15107  04C9  083E               	movf	___flmul@b+1,w
 15108  04CA  00C5               	movwf	??___flmul
 15109  04CB  0845               	movf	??___flmul,w
 15110  04CC  00A0               	movwf	__Umul8_16@multiplicand
 15111  04CD  0841               	movf	___flmul@a,w
 15112  04CE  3191  2111  3183   	fcall	__Umul8_16
 15113  04D1  0140               	movlb	0	; select bank0
 15114  04D2  0821               	movf	?__Umul8_16+1,w
 15115  04D3  00D6               	movwf	___flmul@temp+1
 15116  04D4  0820               	movf	?__Umul8_16,w
 15117  04D5  00D5               	movwf	___flmul@temp
 15118  04D6  0855               	movf	___flmul@temp,w
 15119  04D7  07CC               	addwf	___flmul@grs,f
 15120  04D8  0856               	movf	___flmul@temp+1,w
 15121  04D9  3DCD               	addwfc	___flmul@grs+1,f
 15122  04DA  3000               	movlw	0
 15123  04DB  3DCE               	addwfc	___flmul@grs+2,f
 15124  04DC  3DCF               	addwfc	___flmul@grs+3,f
 15125  04DD  083D               	movf	___flmul@b,w
 15126  04DE  00C5               	movwf	??___flmul
 15127  04DF  0845               	movf	??___flmul,w
 15128  04E0  00A0               	movwf	__Umul8_16@multiplicand
 15129  04E1  0842               	movf	___flmul@a+1,w
 15130  04E2  3191  2111  3183   	fcall	__Umul8_16
 15131  04E5  0140               	movlb	0	; select bank0
 15132  04E6  0821               	movf	?__Umul8_16+1,w
 15133  04E7  00D6               	movwf	___flmul@temp+1
 15134  04E8  0820               	movf	?__Umul8_16,w
 15135  04E9  00D5               	movwf	___flmul@temp
 15136  04EA  0855               	movf	___flmul@temp,w
 15137  04EB  07CC               	addwf	___flmul@grs,f
 15138  04EC  0856               	movf	___flmul@temp+1,w
 15139  04ED  3DCD               	addwfc	___flmul@grs+1,f
 15140  04EE  3000               	movlw	0
 15141  04EF  3DCE               	addwfc	___flmul@grs+2,f
 15142  04F0  3DCF               	addwfc	___flmul@grs+3,f
 15143  04F1  3008               	movlw	8
 15144  04F2                     u5465:	
 15145  04F2  35CC               	lslf	___flmul@grs,f
 15146  04F3  0DCD               	rlf	___flmul@grs+1,f
 15147  04F4  0DCE               	rlf	___flmul@grs+2,f
 15148  04F5  0DCF               	rlf	___flmul@grs+3,f
 15149  04F6  0B89               	decfsz	9,f
 15150  04F7  2CF2               	goto	u5465
 15151  04F8  083D               	movf	___flmul@b,w
 15152  04F9  00C5               	movwf	??___flmul
 15153  04FA  0845               	movf	??___flmul,w
 15154  04FB  00A0               	movwf	__Umul8_16@multiplicand
 15155  04FC  0841               	movf	___flmul@a,w
 15156  04FD  3191  2111  3183   	fcall	__Umul8_16
 15157  0500  0140               	movlb	0	; select bank0
 15158  0501  0821               	movf	?__Umul8_16+1,w
 15159  0502  00D6               	movwf	___flmul@temp+1
 15160  0503  0820               	movf	?__Umul8_16,w
 15161  0504  00D5               	movwf	___flmul@temp
 15162  0505  0855               	movf	___flmul@temp,w
 15163  0506  07CC               	addwf	___flmul@grs,f
 15164  0507  0856               	movf	___flmul@temp+1,w
 15165  0508  3DCD               	addwfc	___flmul@grs+1,f
 15166  0509  3000               	movlw	0
 15167  050A  3DCE               	addwfc	___flmul@grs+2,f
 15168  050B  3DCF               	addwfc	___flmul@grs+3,f
 15169  050C  083E               	movf	___flmul@b+1,w
 15170  050D  00C5               	movwf	??___flmul
 15171  050E  0845               	movf	??___flmul,w
 15172  050F  00A0               	movwf	__Umul8_16@multiplicand
 15173  0510  0843               	movf	___flmul@a+2,w
 15174  0511  3191  2111  3183   	fcall	__Umul8_16
 15175  0514  0140               	movlb	0	; select bank0
 15176  0515  0821               	movf	?__Umul8_16+1,w
 15177  0516  00D6               	movwf	___flmul@temp+1
 15178  0517  0820               	movf	?__Umul8_16,w
 15179  0518  00D5               	movwf	___flmul@temp
 15180  0519  0855               	movf	___flmul@temp,w
 15181  051A  07D1               	addwf	___flmul@prod,f
 15182  051B  0856               	movf	___flmul@temp+1,w
 15183  051C  3DD2               	addwfc	___flmul@prod+1,f
 15184  051D  3000               	movlw	0
 15185  051E  3DD3               	addwfc	___flmul@prod+2,f
 15186  051F  3DD4               	addwfc	___flmul@prod+3,f
 15187  0520  083F               	movf	___flmul@b+2,w
 15188  0521  00C5               	movwf	??___flmul
 15189  0522  0845               	movf	??___flmul,w
 15190  0523  00A0               	movwf	__Umul8_16@multiplicand
 15191  0524  0842               	movf	___flmul@a+1,w
 15192  0525  3191  2111  3183   	fcall	__Umul8_16
 15193  0528  0140               	movlb	0	; select bank0
 15194  0529  0821               	movf	?__Umul8_16+1,w
 15195  052A  00D6               	movwf	___flmul@temp+1
 15196  052B  0820               	movf	?__Umul8_16,w
 15197  052C  00D5               	movwf	___flmul@temp
 15198  052D  0855               	movf	___flmul@temp,w
 15199  052E  07D1               	addwf	___flmul@prod,f
 15200  052F  0856               	movf	___flmul@temp+1,w
 15201  0530  3DD2               	addwfc	___flmul@prod+1,f
 15202  0531  3000               	movlw	0
 15203  0532  3DD3               	addwfc	___flmul@prod+2,f
 15204  0533  3DD4               	addwfc	___flmul@prod+3,f
 15205  0534  083F               	movf	___flmul@b+2,w
 15206  0535  00C5               	movwf	??___flmul
 15207  0536  0845               	movf	??___flmul,w
 15208  0537  00A0               	movwf	__Umul8_16@multiplicand
 15209  0538  0843               	movf	___flmul@a+2,w
 15210  0539  3191  2111  3183   	fcall	__Umul8_16
 15211  053C  0140               	movlb	0	; select bank0
 15212  053D  0821               	movf	?__Umul8_16+1,w
 15213  053E  00D6               	movwf	___flmul@temp+1
 15214  053F  0820               	movf	?__Umul8_16,w
 15215  0540  00D5               	movwf	___flmul@temp
 15216  0541  0855               	movf	___flmul@temp,w
 15217  0542  00C5               	movwf	??___flmul
 15218  0543  0856               	movf	___flmul@temp+1,w
 15219  0544  00C6               	movwf	??___flmul+1
 15220  0545  01C7               	clrf	??___flmul+2
 15221  0546  01C8               	clrf	??___flmul+3
 15222  0547  3008               	movlw	8
 15223  0548                     u5475:	
 15224  0548  35C5               	lslf	??___flmul,f
 15225  0549  0DC6               	rlf	??___flmul+1,f
 15226  054A  0DC7               	rlf	??___flmul+2,f
 15227  054B  0DC8               	rlf	??___flmul+3,f
 15228  054C  0B89               	decfsz	9,f
 15229  054D  2D48               	goto	u5475
 15230  054E  0845               	movf	??___flmul,w
 15231  054F  07D1               	addwf	___flmul@prod,f
 15232  0550  0846               	movf	??___flmul+1,w
 15233  0551  3DD2               	addwfc	___flmul@prod+1,f
 15234  0552  0847               	movf	??___flmul+2,w
 15235  0553  3DD3               	addwfc	___flmul@prod+2,f
 15236  0554  0848               	movf	??___flmul+3,w
 15237  0555  3DD4               	addwfc	___flmul@prod+3,f
 15238  0556  084C               	movf	___flmul@grs,w
 15239  0557  00C5               	movwf	??___flmul
 15240  0558  084D               	movf	___flmul@grs+1,w
 15241  0559  00C6               	movwf	??___flmul+1
 15242  055A  084E               	movf	___flmul@grs+2,w
 15243  055B  00C7               	movwf	??___flmul+2
 15244  055C  084F               	movf	___flmul@grs+3,w
 15245  055D  00C8               	movwf	??___flmul+3
 15246  055E  3018               	movlw	24
 15247  055F                     u5485:	
 15248  055F  36C8               	lsrf	??___flmul+3,f
 15249  0560  0CC7               	rrf	??___flmul+2,f
 15250  0561  0CC6               	rrf	??___flmul+1,f
 15251  0562  0CC5               	rrf	??___flmul,f
 15252  0563  0B89               	decfsz	9,f
 15253  0564  2D5F               	goto	u5485
 15254  0565  0845               	movf	??___flmul,w
 15255  0566  07D1               	addwf	___flmul@prod,f
 15256  0567  0846               	movf	??___flmul+1,w
 15257  0568  3DD2               	addwfc	___flmul@prod+1,f
 15258  0569  0847               	movf	??___flmul+2,w
 15259  056A  3DD3               	addwfc	___flmul@prod+2,f
 15260  056B  0848               	movf	??___flmul+3,w
 15261  056C  3DD4               	addwfc	___flmul@prod+3,f
 15262  056D  3008               	movlw	8
 15263  056E                     u5495:	
 15264  056E  35CC               	lslf	___flmul@grs,f
 15265  056F  0DCD               	rlf	___flmul@grs+1,f
 15266  0570  0DCE               	rlf	___flmul@grs+2,f
 15267  0571  0DCF               	rlf	___flmul@grs+3,f
 15268  0572  0B89               	decfsz	9,f
 15269  0573  2D6E               	goto	u5495
 15270  0574  0850               	movf	___flmul@bexp,w
 15271  0575  074B               	addwf	___flmul@aexp,w
 15272  0576  00C5               	movwf	??___flmul
 15273  0577  01C6               	clrf	??___flmul+1
 15274  0578  0DC6               	rlf	??___flmul+1,f
 15275  0579  0845               	movf	??___flmul,w
 15276  057A  3E82               	addlw	130
 15277  057B  00D5               	movwf	___flmul@temp
 15278  057C  30FF               	movlw	255
 15279  057D  3D46               	addwfc	??___flmul+1,w
 15280  057E  00D6               	movwf	___flmul@temp+1
 15281  057F                     l5382:	
 15282  057F  1BD3               	btfsc	___flmul@prod+2,7
 15283  0580  2D96               	goto	l5384
 15284  0581  3001               	movlw	1
 15285  0582                     u5505:	
 15286  0582  35D1               	lslf	___flmul@prod,f
 15287  0583  0DD2               	rlf	___flmul@prod+1,f
 15288  0584  0DD3               	rlf	___flmul@prod+2,f
 15289  0585  0DD4               	rlf	___flmul@prod+3,f
 15290  0586  0B89               	decfsz	9,f
 15291  0587  2D82               	goto	u5505
 15292  0588  1BCF               	btfsc	___flmul@grs+3,7
 15293  0589  1451               	bsf	___flmul@prod,0
 15294  058A  3001               	movlw	1
 15295  058B                     u5525:	
 15296  058B  35CC               	lslf	___flmul@grs,f
 15297  058C  0DCD               	rlf	___flmul@grs+1,f
 15298  058D  0DCE               	rlf	___flmul@grs+2,f
 15299  058E  0DCF               	rlf	___flmul@grs+3,f
 15300  058F  0B89               	decfsz	9,f
 15301  0590  2D8B               	goto	u5525
 15302  0591  30FF               	movlw	255
 15303  0592  07D5               	addwf	___flmul@temp,f
 15304  0593  30FF               	movlw	255
 15305  0594  3DD6               	addwfc	___flmul@temp+1,f
 15306  0595  2D7F               	goto	l5382
 15307  0596                     l5384:	
 15308  0596  01CB               	clrf	___flmul@aexp
 15309  0597  1FCF               	btfss	___flmul@grs+3,7
 15310  0598  2DAF               	goto	l5394
 15311  0599  30FF               	movlw	255
 15312  059A  054C               	andwf	___flmul@grs,w
 15313  059B  00C5               	movwf	??___flmul
 15314  059C  30FF               	movlw	255
 15315  059D  054D               	andwf	___flmul@grs+1,w
 15316  059E  00C6               	movwf	??___flmul+1
 15317  059F  30FF               	movlw	255
 15318  05A0  054E               	andwf	___flmul@grs+2,w
 15319  05A1  00C7               	movwf	??___flmul+2
 15320  05A2  307F               	movlw	127
 15321  05A3  054F               	andwf	___flmul@grs+3,w
 15322  05A4  00C8               	movwf	??___flmul+3
 15323  05A5  0848               	movf	??___flmul+3,w
 15324  05A6  0447               	iorwf	??___flmul+2,w
 15325  05A7  0446               	iorwf	??___flmul+1,w
 15326  05A8  0445               	iorwf	??___flmul,w
 15327  05A9  1903               	skipnz
 15328  05AA  1851               	btfsc	___flmul@prod,0
 15329  05AB  2DAD               	goto	l5390
 15330  05AC  2DAF               	goto	l5394
 15331  05AD                     l5390:	
 15332  05AD  01CB               	clrf	___flmul@aexp
 15333  05AE  0ACB               	incf	___flmul@aexp,f
 15334  05AF                     l5394:	
 15335  05AF  084B               	movf	___flmul@aexp,w
 15336  05B0  1903               	btfsc	3,2
 15337  05B1  2DD8               	goto	l5404
 15338  05B2  3001               	movlw	1
 15339  05B3  07D1               	addwf	___flmul@prod,f
 15340  05B4  3000               	movlw	0
 15341  05B5  3DD2               	addwfc	___flmul@prod+1,f
 15342  05B6  3000               	movlw	0
 15343  05B7  3DD3               	addwfc	___flmul@prod+2,f
 15344  05B8  3000               	movlw	0
 15345  05B9  3DD4               	addwfc	___flmul@prod+3,f
 15346  05BA  1C54               	btfss	___flmul@prod+3,0
 15347  05BB  2DD8               	goto	l5404
 15348  05BC  0851               	movf	___flmul@prod,w
 15349  05BD  00C5               	movwf	??___flmul
 15350  05BE  0852               	movf	___flmul@prod+1,w
 15351  05BF  00C6               	movwf	??___flmul+1
 15352  05C0  0853               	movf	___flmul@prod+2,w
 15353  05C1  00C7               	movwf	??___flmul+2
 15354  05C2  0854               	movf	___flmul@prod+3,w
 15355  05C3  00C8               	movwf	??___flmul+3
 15356  05C4  3001               	movlw	1
 15357  05C5  00C9               	movwf	??___flmul+4
 15358  05C6                     u5595:	
 15359  05C6  37C8               	asrf	??___flmul+3,f
 15360  05C7  0CC7               	rrf	??___flmul+2,f
 15361  05C8  0CC6               	rrf	??___flmul+1,f
 15362  05C9  0CC5               	rrf	??___flmul,f
 15363  05CA  0BC9               	decfsz	??___flmul+4,f
 15364  05CB  2DC6               	goto	u5595
 15365  05CC  0848               	movf	??___flmul+3,w
 15366  05CD  00D4               	movwf	___flmul@prod+3
 15367  05CE  0847               	movf	??___flmul+2,w
 15368  05CF  00D3               	movwf	___flmul@prod+2
 15369  05D0  0846               	movf	??___flmul+1,w
 15370  05D1  00D2               	movwf	___flmul@prod+1
 15371  05D2  0845               	movf	??___flmul,w
 15372  05D3  00D1               	movwf	___flmul@prod
 15373  05D4  3001               	movlw	1
 15374  05D5  07D5               	addwf	___flmul@temp,f
 15375  05D6  3000               	movlw	0
 15376  05D7  3DD6               	addwfc	___flmul@temp+1,f
 15377  05D8                     l5404:	
 15378  05D8  0856               	movf	___flmul@temp+1,w
 15379  05D9  3A80               	xorlw	128
 15380  05DA  00C5               	movwf	??___flmul
 15381  05DB  3080               	movlw	128
 15382  05DC  0245               	subwf	??___flmul,w
 15383  05DD  1D03               	skipz
 15384  05DE  2DE1               	goto	u5605
 15385  05DF  30FF               	movlw	255
 15386  05E0  0255               	subwf	___flmul@temp,w
 15387  05E1                     u5605:	
 15388  05E1  1C03               	skipc
 15389  05E2  2DED               	goto	l5408
 15390  05E3  307F               	movlw	127
 15391  05E4  0140               	movlb	0	; select bank0
 15392  05E5  00D4               	movwf	___flmul@prod+3
 15393  05E6  3080               	movlw	128
 15394  05E7  00D3               	movwf	___flmul@prod+2
 15395  05E8  3000               	movlw	0
 15396  05E9  00D2               	movwf	___flmul@prod+1
 15397  05EA  3000               	movlw	0
 15398  05EB  00D1               	movwf	___flmul@prod
 15399  05EC  2E17               	goto	l1683
 15400  05ED                     l5408:	
 15401  05ED  0140               	movlb	0	; select bank0
 15402  05EE  0856               	movf	___flmul@temp+1,w
 15403  05EF  3A80               	xorlw	128
 15404  05F0  00C5               	movwf	??___flmul
 15405  05F1  3080               	movlw	128
 15406  05F2  0245               	subwf	??___flmul,w
 15407  05F3  1D03               	skipz
 15408  05F4  2DF7               	goto	u5615
 15409  05F5  3001               	movlw	1
 15410  05F6  0255               	subwf	___flmul@temp,w
 15411  05F7                     u5615:	
 15412  05F7  1803               	skipnc
 15413  05F8  2E04               	goto	l5414
 15414  05F9  3000               	movlw	0
 15415  05FA  0140               	movlb	0	; select bank0
 15416  05FB  00D4               	movwf	___flmul@prod+3
 15417  05FC  3000               	movlw	0
 15418  05FD  00D3               	movwf	___flmul@prod+2
 15419  05FE  3000               	movlw	0
 15420  05FF  00D2               	movwf	___flmul@prod+1
 15421  0600  3000               	movlw	0
 15422  0601  00D1               	movwf	___flmul@prod
 15423  0602  01CA               	clrf	___flmul@sign
 15424  0603  2E17               	goto	l1683
 15425  0604                     l5414:	
 15426  0604  0140               	movlb	0	; select bank0
 15427  0605  0855               	movf	___flmul@temp,w
 15428  0606  00C5               	movwf	??___flmul
 15429  0607  0845               	movf	??___flmul,w
 15430  0608  00D0               	movwf	___flmul@bexp
 15431  0609  30FF               	movlw	255
 15432  060A  05D1               	andwf	___flmul@prod,f
 15433  060B  30FF               	movlw	255
 15434  060C  05D2               	andwf	___flmul@prod+1,f
 15435  060D  307F               	movlw	127
 15436  060E  05D3               	andwf	___flmul@prod+2,f
 15437  060F  3000               	movlw	0
 15438  0610  05D4               	andwf	___flmul@prod+3,f
 15439  0611  1850               	btfsc	___flmul@bexp,0
 15440  0612  17D3               	bsf	___flmul@prod+2,7
 15441  0613  3650               	lsrf	___flmul@bexp,w
 15442  0614  00C5               	movwf	??___flmul
 15443  0615  0845               	movf	??___flmul,w
 15444  0616  00D4               	movwf	___flmul@prod+3
 15445  0617                     l1683:	
 15446  0617  084A               	movf	___flmul@sign,w
 15447  0618  00C5               	movwf	??___flmul
 15448  0619  0845               	movf	??___flmul,w
 15449  061A  04D4               	iorwf	___flmul@prod+3,f
 15450  061B  0854               	movf	___flmul@prod+3,w
 15451  061C  00C0               	movwf	?___flmul+3
 15452  061D  0853               	movf	___flmul@prod+2,w
 15453  061E  00BF               	movwf	?___flmul+2
 15454  061F  0852               	movf	___flmul@prod+1,w
 15455  0620  00BE               	movwf	?___flmul+1
 15456  0621  0851               	movf	___flmul@prod,w
 15457  0622  00BD               	movwf	?___flmul
 15458  0623  0008               	return
 15459  0624                     __end_of___flmul:	
 15460                           
 15461                           	psect	text47
 15462  1111                     __ptext47:	
 15463 ;; *************** function __Umul8_16 *****************
 15464 ;; Defined at:
 15465 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 15466 ;; Parameters:    Size  Location     Type
 15467 ;;  multiplier      1    wreg     unsigned char 
 15468 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15469 ;; Auto vars:     Size  Location     Type
 15470 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15471 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15472 ;;  product         2    4[BANK0 ] unsigned int 
 15473 ;; Return value:  Size  Location     Type
 15474 ;;                  2    0[BANK0 ] unsigned int 
 15475 ;; Registers used:
 15476 ;;		wreg, status,2, status,0
 15477 ;; Tracked objects:
 15478 ;;		On entry : 0/0
 15479 ;;		On exit  : 0/0
 15480 ;;		Unchanged: 0/0
 15481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15483 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15485 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15486 ;;Total ram usage:        9 bytes
 15487 ;; Hardware stack levels used:    1
 15488 ;; Hardware stack levels required when called:    4
 15489 ;; This function calls:
 15490 ;;		Nothing
 15491 ;; This function is called by:
 15492 ;;		___flmul
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           
 15496                           
 15497                           ;psect for function __Umul8_16
 15498  1111                     __Umul8_16:	
 15499                           
 15500                           ;incstack = 0
 15501                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15502                           ;__Umul8_16@multiplier stored from wreg
 15503  1111  0140               	movlb	0	; select bank0
 15504  1112  00A8               	movwf	__Umul8_16@multiplier
 15505  1113  01A4               	clrf	__Umul8_16@product
 15506  1114  01A5               	clrf	__Umul8_16@product+1
 15507  1115  0820               	movf	__Umul8_16@multiplicand,w
 15508  1116  00A2               	movwf	??__Umul8_16
 15509  1117  01A3               	clrf	??__Umul8_16+1
 15510  1118  0822               	movf	??__Umul8_16,w
 15511  1119  00A6               	movwf	__Umul8_16@word_mpld
 15512  111A  0823               	movf	??__Umul8_16+1,w
 15513  111B  00A7               	movwf	__Umul8_16@word_mpld+1
 15514  111C                     l5264:	
 15515  111C  1C28               	btfss	__Umul8_16@multiplier,0
 15516  111D  2922               	goto	l1728
 15517  111E  0826               	movf	__Umul8_16@word_mpld,w
 15518  111F  07A4               	addwf	__Umul8_16@product,f
 15519  1120  0827               	movf	__Umul8_16@word_mpld+1,w
 15520  1121  3DA5               	addwfc	__Umul8_16@product+1,f
 15521  1122                     l1728:	
 15522  1122  3001               	movlw	1
 15523  1123                     u5345:	
 15524  1123  35A6               	lslf	__Umul8_16@word_mpld,f
 15525  1124  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15526  1125  0B89               	decfsz	9,f
 15527  1126  2923               	goto	u5345
 15528  1127  1003               	clrc
 15529  1128  0CA8               	rrf	__Umul8_16@multiplier,f
 15530  1129  0828               	movf	__Umul8_16@multiplier,w
 15531  112A  1D03               	btfss	3,2
 15532  112B  291C               	goto	l5264
 15533  112C  0825               	movf	__Umul8_16@product+1,w
 15534  112D  00A1               	movwf	?__Umul8_16+1
 15535  112E  0824               	movf	__Umul8_16@product,w
 15536  112F  00A0               	movwf	?__Umul8_16
 15537  1130  0008               	return
 15538  1131                     __end_of__Umul8_16:	
 15539                           
 15540                           	psect	text48
 15541  1651                     __ptext48:	
 15542 ;; *************** function ___flge *****************
 15543 ;; Defined at:
 15544 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 15545 ;; Parameters:    Size  Location     Type
 15546 ;;  ff1             4   55[BANK0 ] unsigned int 
 15547 ;;  ff2             4   59[BANK0 ] unsigned int 
 15548 ;; Auto vars:     Size  Location     Type
 15549 ;;		None
 15550 ;; Return value:  Size  Location     Type
 15551 ;;		None               void
 15552 ;; Registers used:
 15553 ;;		wreg, status,2, status,0
 15554 ;; Tracked objects:
 15555 ;;		On entry : 0/0
 15556 ;;		On exit  : 0/0
 15557 ;;		Unchanged: 0/0
 15558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15559 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15561 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15562 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15563 ;;Total ram usage:       12 bytes
 15564 ;; Hardware stack levels used:    1
 15565 ;; Hardware stack levels required when called:    4
 15566 ;; This function calls:
 15567 ;;		Nothing
 15568 ;; This function is called by:
 15569 ;;		_HueToRGB
 15570 ;;		_LED_setHSL
 15571 ;;		_pulseColors
 15572 ;; This function uses a non-reentrant model
 15573 ;;
 15574                           
 15575                           
 15576                           ;psect for function ___flge
 15577  1651                     ___flge:	
 15578                           
 15579                           ;incstack = 0
 15580                           ; Regs used in ___flge: [wreg+status,2+status,0]
 15581  1651  3000               	movlw	0
 15582  1652  0140               	movlb	0	; select bank0
 15583  1653  0557               	andwf	___flge@ff1,w
 15584  1654  00DF               	movwf	??___flge
 15585  1655  3000               	movlw	0
 15586  1656  0558               	andwf	___flge@ff1+1,w
 15587  1657  00E0               	movwf	??___flge+1
 15588  1658  3080               	movlw	128
 15589  1659  0559               	andwf	___flge@ff1+2,w
 15590  165A  00E1               	movwf	??___flge+2
 15591  165B  307F               	movlw	127
 15592  165C  055A               	andwf	___flge@ff1+3,w
 15593  165D  00E2               	movwf	??___flge+3
 15594  165E  0862               	movf	??___flge+3,w
 15595  165F  0461               	iorwf	??___flge+2,w
 15596  1660  0460               	iorwf	??___flge+1,w
 15597  1661  045F               	iorwf	??___flge,w
 15598  1662  1D03               	skipz
 15599  1663  2E6C               	goto	l1452
 15600  1664  3000               	movlw	0
 15601  1665  00DA               	movwf	___flge@ff1+3
 15602  1666  3000               	movlw	0
 15603  1667  00D9               	movwf	___flge@ff1+2
 15604  1668  3000               	movlw	0
 15605  1669  00D8               	movwf	___flge@ff1+1
 15606  166A  3000               	movlw	0
 15607  166B  00D7               	movwf	___flge@ff1
 15608  166C                     l1452:	
 15609  166C  3000               	movlw	0
 15610  166D  055B               	andwf	___flge@ff2,w
 15611  166E  00DF               	movwf	??___flge
 15612  166F  3000               	movlw	0
 15613  1670  055C               	andwf	___flge@ff2+1,w
 15614  1671  00E0               	movwf	??___flge+1
 15615  1672  3080               	movlw	128
 15616  1673  055D               	andwf	___flge@ff2+2,w
 15617  1674  00E1               	movwf	??___flge+2
 15618  1675  307F               	movlw	127
 15619  1676  055E               	andwf	___flge@ff2+3,w
 15620  1677  00E2               	movwf	??___flge+3
 15621  1678  0862               	movf	??___flge+3,w
 15622  1679  0461               	iorwf	??___flge+2,w
 15623  167A  0460               	iorwf	??___flge+1,w
 15624  167B  045F               	iorwf	??___flge,w
 15625  167C  1D03               	skipz
 15626  167D  2E86               	goto	l3820
 15627  167E  3000               	movlw	0
 15628  167F  00DE               	movwf	___flge@ff2+3
 15629  1680  3000               	movlw	0
 15630  1681  00DD               	movwf	___flge@ff2+2
 15631  1682  3000               	movlw	0
 15632  1683  00DC               	movwf	___flge@ff2+1
 15633  1684  3000               	movlw	0
 15634  1685  00DB               	movwf	___flge@ff2
 15635  1686                     l3820:	
 15636  1686  1FDA               	btfss	___flge@ff1+3,7
 15637  1687  2EA0               	goto	l3824
 15638  1688  3000               	movlw	0
 15639  1689  00DF               	movwf	??___flge
 15640  168A  3000               	movlw	0
 15641  168B  00E0               	movwf	??___flge+1
 15642  168C  3000               	movlw	0
 15643  168D  00E1               	movwf	??___flge+2
 15644  168E  3080               	movlw	128
 15645  168F  00E2               	movwf	??___flge+3
 15646  1690  0857               	movf	___flge@ff1,w
 15647  1691  02DF               	subwf	??___flge,f
 15648  1692  0858               	movf	___flge@ff1+1,w
 15649  1693  3BE0               	subwfb	??___flge+1,f
 15650  1694  0859               	movf	___flge@ff1+2,w
 15651  1695  3BE1               	subwfb	??___flge+2,f
 15652  1696  085A               	movf	___flge@ff1+3,w
 15653  1697  3BE2               	subwfb	??___flge+3,f
 15654  1698  0862               	movf	??___flge+3,w
 15655  1699  00DA               	movwf	___flge@ff1+3
 15656  169A  0861               	movf	??___flge+2,w
 15657  169B  00D9               	movwf	___flge@ff1+2
 15658  169C  0860               	movf	??___flge+1,w
 15659  169D  00D8               	movwf	___flge@ff1+1
 15660  169E  085F               	movf	??___flge,w
 15661  169F  00D7               	movwf	___flge@ff1
 15662  16A0                     l3824:	
 15663  16A0  1FDE               	btfss	___flge@ff2+3,7
 15664  16A1  2EBA               	goto	l1455
 15665  16A2  3000               	movlw	0
 15666  16A3  00DF               	movwf	??___flge
 15667  16A4  3000               	movlw	0
 15668  16A5  00E0               	movwf	??___flge+1
 15669  16A6  3000               	movlw	0
 15670  16A7  00E1               	movwf	??___flge+2
 15671  16A8  3080               	movlw	128
 15672  16A9  00E2               	movwf	??___flge+3
 15673  16AA  085B               	movf	___flge@ff2,w
 15674  16AB  02DF               	subwf	??___flge,f
 15675  16AC  085C               	movf	___flge@ff2+1,w
 15676  16AD  3BE0               	subwfb	??___flge+1,f
 15677  16AE  085D               	movf	___flge@ff2+2,w
 15678  16AF  3BE1               	subwfb	??___flge+2,f
 15679  16B0  085E               	movf	___flge@ff2+3,w
 15680  16B1  3BE2               	subwfb	??___flge+3,f
 15681  16B2  0862               	movf	??___flge+3,w
 15682  16B3  00DE               	movwf	___flge@ff2+3
 15683  16B4  0861               	movf	??___flge+2,w
 15684  16B5  00DD               	movwf	___flge@ff2+2
 15685  16B6  0860               	movf	??___flge+1,w
 15686  16B7  00DC               	movwf	___flge@ff2+1
 15687  16B8  085F               	movf	??___flge,w
 15688  16B9  00DB               	movwf	___flge@ff2
 15689  16BA                     l1455:	
 15690  16BA  3080               	movlw	128
 15691  16BB  06DA               	xorwf	___flge@ff1+3,f
 15692  16BC  3080               	movlw	128
 15693  16BD  06DE               	xorwf	___flge@ff2+3,f
 15694  16BE  085E               	movf	___flge@ff2+3,w
 15695  16BF  025A               	subwf	___flge@ff1+3,w
 15696  16C0  1D03               	skipz
 15697  16C1  0008               	return
 15698  16C2  085D               	movf	___flge@ff2+2,w
 15699  16C3  0259               	subwf	___flge@ff1+2,w
 15700  16C4  1D03               	skipz
 15701  16C5  0008               	return
 15702  16C6  085C               	movf	___flge@ff2+1,w
 15703  16C7  0258               	subwf	___flge@ff1+1,w
 15704  16C8  1D03               	skipz
 15705  16C9  0008               	return
 15706  16CA  085B               	movf	___flge@ff2,w
 15707  16CB  0257               	subwf	___flge@ff1,w
 15708  16CC  0008               	return
 15709  16CD                     __end_of___flge:	
 15710                           
 15711                           	psect	text49
 15712  1EF7                     __ptext49:	
 15713 ;; *************** function _BEAT_detected *****************
 15714 ;; Defined at:
 15715 ;;		line 41 in file "beat.c"
 15716 ;; Parameters:    Size  Location     Type
 15717 ;;		None
 15718 ;; Auto vars:     Size  Location     Type
 15719 ;;		None
 15720 ;; Return value:  Size  Location     Type
 15721 ;;                  1    wreg      _Bool 
 15722 ;; Registers used:
 15723 ;;		wreg, status,2, status,0
 15724 ;; Tracked objects:
 15725 ;;		On entry : 0/0
 15726 ;;		On exit  : 0/0
 15727 ;;		Unchanged: 0/0
 15728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15733 ;;Total ram usage:        0 bytes
 15734 ;; Hardware stack levels used:    1
 15735 ;; Hardware stack levels required when called:    4
 15736 ;; This function calls:
 15737 ;;		Nothing
 15738 ;; This function is called by:
 15739 ;;		_LED_Beat
 15740 ;; This function uses a non-reentrant model
 15741 ;;
 15742                           
 15743                           
 15744                           ;psect for function _BEAT_detected
 15745  1EF7                     _BEAT_detected:	
 15746                           
 15747                           ;beat.c: 42:     if (detected) {
 15748                           
 15749                           ;incstack = 0
 15750                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 15751  1EF7  0142               	movlb	2	; select bank2
 15752  1EF8  0852               	movf	_detected^(0+256),w
 15753  1EF9  1903               	btfsc	3,2
 15754  1EFA  2EFE               	goto	l5678
 15755                           
 15756                           ;beat.c: 43:         detected = 0;
 15757  1EFB  01D2               	clrf	_detected^(0+256)
 15758                           
 15759                           ;beat.c: 44:         return 1;
 15760  1EFC  3001               	movlw	1
 15761  1EFD  0008               	return
 15762  1EFE                     l5678:	
 15763                           
 15764                           ;beat.c: 46:     return 0;
 15765  1EFE  3000               	movlw	0
 15766  1EFF  0008               	return
 15767  1F00                     __end_of_BEAT_detected:	
 15768                           
 15769                           	psect	text50
 15770  0A02                     __ptext50:	
 15771 ;; *************** function _BEAT_task *****************
 15772 ;; Defined at:
 15773 ;;		line 59 in file "beat.c"
 15774 ;; Parameters:    Size  Location     Type
 15775 ;;		None
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;  offset          2   10[BANK0 ] unsigned short 
 15778 ;; Return value:  Size  Location     Type
 15779 ;;                  1    wreg      void 
 15780 ;; Registers used:
 15781 ;;		wreg, status,2, status,0, pclath, cstack
 15782 ;; Tracked objects:
 15783 ;;		On entry : 0/0
 15784 ;;		On exit  : 0/0
 15785 ;;		Unchanged: 0/0
 15786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15788 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15789 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15790 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15791 ;;Total ram usage:        4 bytes
 15792 ;; Hardware stack levels used:    1
 15793 ;; Hardware stack levels required when called:    5
 15794 ;; This function calls:
 15795 ;;		_ADCC_SetUpperThreshold
 15796 ;;		_CLOCK_getTime
 15797 ;;		_TM1650_isEnabled
 15798 ;;		___lwdiv
 15799 ;; This function is called by:
 15800 ;;		_MENU_task
 15801 ;; This function uses a non-reentrant model
 15802 ;;
 15803                           
 15804                           
 15805                           ;psect for function _BEAT_task
 15806  0A02                     _BEAT_task:	
 15807                           
 15808                           ;beat.c: 61:     if (TM1650_isEnabled())
 15809                           
 15810                           ;incstack = 0
 15811                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 15812  0A02  319E  26A5  318A   	fcall	_TM1650_isEnabled
 15813  0A05  3A00               	xorlw	0
 15814  0A06  1D03               	btfss	3,2
 15815  0A07  0008               	return
 15816                           
 15817                           ;beat.c: 64:     if (CLOCK_getTime() - lastRun < delay)
 15818  0A08  319E  26E5  318A   	fcall	_CLOCK_getTime
 15819  0A0B  0142               	movlb	2	; select bank2
 15820  0A0C  0841               	movf	_lastRun^(0+256),w
 15821  0A0D  0140               	movlb	0	; select bank0
 15822  0A0E  0220               	subwf	?_CLOCK_getTime,w
 15823  0A0F  00A8               	movwf	??_BEAT_task
 15824  0A10  0142               	movlb	2	; select bank2
 15825  0A11  0842               	movf	(_lastRun+1)^(0+256),w
 15826  0A12  0140               	movlb	0	; select bank0
 15827  0A13  3B21               	subwfb	?_CLOCK_getTime+1,w
 15828  0A14  00A9               	movwf	??_BEAT_task+1
 15829  0A15  0142               	movlb	2	; select bank2
 15830  0A16  0867               	movf	(_delay+1)^(0+256),w
 15831  0A17  0140               	movlb	0	; select bank0
 15832  0A18  0229               	subwf	??_BEAT_task+1,w
 15833  0A19  1D03               	skipz
 15834  0A1A  2A1F               	goto	u6075
 15835  0A1B  0142               	movlb	2	; select bank2
 15836  0A1C  0866               	movf	_delay^(0+256),w
 15837  0A1D  0140               	movlb	0	; select bank0
 15838  0A1E  0228               	subwf	??_BEAT_task,w
 15839  0A1F                     u6075:	
 15840  0A1F  1C03               	btfss	3,0
 15841  0A20  0008               	return
 15842                           
 15843                           ;beat.c: 67:     lastRun = CLOCK_getTime();
 15844  0A21  319E  26E5  318A   	fcall	_CLOCK_getTime
 15845  0A24  0140               	movlb	0	; select bank0
 15846  0A25  0821               	movf	?_CLOCK_getTime+1,w
 15847  0A26  0142               	movlb	2	; select bank2
 15848  0A27  00C2               	movwf	(_lastRun+1)^(0+256)
 15849  0A28  0140               	movlb	0	; select bank0
 15850  0A29  0820               	movf	?_CLOCK_getTime,w
 15851  0A2A  0142               	movlb	2	; select bank2
 15852  0A2B  00C1               	movwf	_lastRun^(0+256)
 15853                           
 15854                           ;beat.c: 69:     if (thresholdExceeded == 1) {
 15855  0A2C  0141               	movlb	1	; select bank1
 15856  0A2D  0369               	decf	_thresholdExceeded^(0+128),w
 15857  0A2E  1D03               	btfss	3,2
 15858  0A2F  2A36               	goto	l5872
 15859                           
 15860                           ;beat.c: 73:         thresholdCount++;
 15861  0A30  3001               	movlw	1
 15862  0A31  0142               	movlb	2	; select bank2
 15863  0A32  07BF               	addwf	_thresholdCount^(0+256),f
 15864  0A33  3000               	movlw	0
 15865  0A34  3DC0               	addwfc	(_thresholdCount+1)^(0+256),f
 15866                           
 15867                           ;beat.c: 74:     } else {
 15868  0A35  2A3D               	goto	l5876
 15869  0A36                     l5872:	
 15870                           
 15871                           ;beat.c: 76:         thresholdCount = 0;
 15872  0A36  0142               	movlb	2	; select bank2
 15873  0A37  01BF               	clrf	_thresholdCount^(0+256)
 15874  0A38  01C0               	clrf	(_thresholdCount+1)^(0+256)
 15875                           
 15876                           ;beat.c: 77:         delay = 20;
 15877  0A39  3014               	movlw	20
 15878  0A3A  00E6               	movwf	_delay^(0+256)
 15879  0A3B  3000               	movlw	0
 15880  0A3C  00E7               	movwf	(_delay^(0+256)+1)
 15881  0A3D                     l5876:	
 15882                           
 15883                           ;beat.c: 83:     if (thresholdExceeded == 1 && lastDetected == 0) {
 15884  0A3D  0141               	movlb	1	; select bank1
 15885  0A3E  0369               	decf	_thresholdExceeded^(0+128),w
 15886  0A3F  1D03               	btfss	3,2
 15887  0A40  2A84               	goto	l5894
 15888  0A41  0142               	movlb	2	; select bank2
 15889  0A42  0851               	movf	_lastDetected^(0+256),w
 15890  0A43  1D03               	btfss	3,2
 15891  0A44  2A84               	goto	l5894
 15892                           
 15893                           ;beat.c: 85:         detected = 1;
 15894  0A45  01D2               	clrf	_detected^(0+256)
 15895  0A46  0AD2               	incf	_detected^(0+256),f
 15896                           
 15897                           ;beat.c: 88:         delay = 100;
 15898  0A47  3064               	movlw	100
 15899  0A48  00E6               	movwf	_delay^(0+256)
 15900  0A49  3000               	movlw	0
 15901  0A4A  00E7               	movwf	(_delay^(0+256)+1)
 15902                           
 15903                           ;beat.c: 91:         time_t offset = CLOCK_getTime() - lastBeat;
 15904  0A4B  319E  26E5  318A   	fcall	_CLOCK_getTime
 15905  0A4E  0142               	movlb	2	; select bank2
 15906  0A4F  0845               	movf	_lastBeat^(0+256),w
 15907  0A50  0140               	movlb	0	; select bank0
 15908  0A51  0220               	subwf	?_CLOCK_getTime,w
 15909  0A52  00AA               	movwf	BEAT_task@offset
 15910  0A53  0142               	movlb	2	; select bank2
 15911  0A54  0846               	movf	(_lastBeat+1)^(0+256),w
 15912  0A55  0140               	movlb	0	; select bank0
 15913  0A56  3B21               	subwfb	?_CLOCK_getTime+1,w
 15914  0A57  00AB               	movwf	BEAT_task@offset+1
 15915                           
 15916                           ;beat.c: 93:         lastBeat = CLOCK_getTime();
 15917  0A58  319E  26E5  318A   	fcall	_CLOCK_getTime
 15918  0A5B  0140               	movlb	0	; select bank0
 15919  0A5C  0821               	movf	?_CLOCK_getTime+1,w
 15920  0A5D  0142               	movlb	2	; select bank2
 15921  0A5E  00C6               	movwf	(_lastBeat+1)^(0+256)
 15922  0A5F  0140               	movlb	0	; select bank0
 15923  0A60  0820               	movf	?_CLOCK_getTime,w
 15924  0A61  0142               	movlb	2	; select bank2
 15925  0A62  00C5               	movwf	_lastBeat^(0+256)
 15926                           
 15927                           ;beat.c: 95:         if (offset < 150)
 15928  0A63  3000               	movlw	0
 15929  0A64  0140               	movlb	0	; select bank0
 15930  0A65  022B               	subwf	BEAT_task@offset+1,w
 15931  0A66  3096               	movlw	150
 15932  0A67  1903               	skipnz
 15933  0A68  022A               	subwf	BEAT_task@offset,w
 15934  0A69  1803               	skipnc
 15935  0A6A  2A71               	goto	l5892
 15936                           
 15937                           ;beat.c: 96:             bpm = 400;
 15938  0A6B  3090               	movlw	144
 15939  0A6C  0142               	movlb	2	; select bank2
 15940  0A6D  00C3               	movwf	_bpm^(0+256)
 15941  0A6E  3001               	movlw	1
 15942  0A6F  00C4               	movwf	(_bpm^(0+256)+1)
 15943  0A70  2A84               	goto	l5894
 15944  0A71                     l5892:	
 15945                           
 15946                           ;beat.c: 98:             bpm = 60 * 1000 / offset;
 15947  0A71  082B               	movf	BEAT_task@offset+1,w
 15948  0A72  00A1               	movwf	___lwdiv@divisor+1
 15949  0A73  082A               	movf	BEAT_task@offset,w
 15950  0A74  00A0               	movwf	___lwdiv@divisor
 15951  0A75  3060               	movlw	96
 15952  0A76  00A2               	movwf	___lwdiv@dividend
 15953  0A77  30EA               	movlw	234
 15954  0A78  00A3               	movwf	___lwdiv@dividend+1
 15955  0A79  3192  226B  318A   	fcall	___lwdiv
 15956  0A7C  0140               	movlb	0	; select bank0
 15957  0A7D  0821               	movf	?___lwdiv+1,w
 15958  0A7E  0142               	movlb	2	; select bank2
 15959  0A7F  00C4               	movwf	(_bpm+1)^(0+256)
 15960  0A80  0140               	movlb	0	; select bank0
 15961  0A81  0820               	movf	?___lwdiv,w
 15962  0A82  0142               	movlb	2	; select bank2
 15963  0A83  00C3               	movwf	_bpm^(0+256)
 15964  0A84                     l5894:	
 15965                           
 15966                           ;beat.c: 104:     lastDetected = thresholdExceeded;
 15967  0A84  0141               	movlb	1	; select bank1
 15968  0A85  0869               	movf	_thresholdExceeded^(0+128),w
 15969  0A86  0140               	movlb	0	; select bank0
 15970  0A87  00A8               	movwf	??_BEAT_task
 15971  0A88  0828               	movf	??_BEAT_task,w
 15972  0A89  0142               	movlb	2	; select bank2
 15973  0A8A  00D1               	movwf	_lastDetected^(0+256)
 15974                           
 15975                           ;beat.c: 105:     thresholdExceeded = 0;
 15976  0A8B  0141               	movlb	1	; select bank1
 15977  0A8C  01E9               	clrf	_thresholdExceeded^(0+128)
 15978                           
 15979                           ;beat.c: 107:     if (thresholdCount > 3) {
 15980  0A8D  0142               	movlb	2	; select bank2
 15981  0A8E  0840               	movf	(_thresholdCount+1)^(0+256),w
 15982  0A8F  3A80               	xorlw	128
 15983  0A90  0140               	movlb	0	; select bank0
 15984  0A91  00A8               	movwf	??_BEAT_task
 15985  0A92  3080               	movlw	128
 15986  0A93  0228               	subwf	??_BEAT_task,w
 15987  0A94  1D03               	skipz
 15988  0A95  2A99               	goto	u6125
 15989  0A96  3004               	movlw	4
 15990  0A97  0142               	movlb	2	; select bank2
 15991  0A98  023F               	subwf	_thresholdCount^(0+256),w
 15992  0A99                     u6125:	
 15993  0A99  1C03               	skipc
 15994  0A9A  2AB8               	goto	l5908
 15995                           
 15996                           ;beat.c: 108:         threshold += 1;
 15997  0A9B  3001               	movlw	1
 15998  0A9C  0142               	movlb	2	; select bank2
 15999  0A9D  07E8               	addwf	_threshold^(0+256),f
 16000  0A9E  3000               	movlw	0
 16001  0A9F  3DE9               	addwfc	(_threshold+1)^(0+256),f
 16002                           
 16003                           ;beat.c: 109:         ADCC_SetUpperThreshold(threshold);
 16004  0AA0  0869               	movf	(_threshold+1)^(0+256),w
 16005  0AA1  0140               	movlb	0	; select bank0
 16006  0AA2  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16007  0AA3  0142               	movlb	2	; select bank2
 16008  0AA4  0868               	movf	_threshold^(0+256),w
 16009  0AA5  0140               	movlb	0	; select bank0
 16010  0AA6  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16011  0AA7  319E  26D3  318A   	fcall	_ADCC_SetUpperThreshold
 16012                           
 16013                           ;beat.c: 110:         thresholdCount = 0;
 16014  0AAA  0142               	movlb	2	; select bank2
 16015  0AAB  01BF               	clrf	_thresholdCount^(0+256)
 16016  0AAC  01C0               	clrf	(_thresholdCount+1)^(0+256)
 16017                           
 16018                           ;beat.c: 113:         lastBeat = CLOCK_getTime();
 16019  0AAD  319E  26E5         	fcall	_CLOCK_getTime
 16020  0AAF  0140               	movlb	0	; select bank0
 16021  0AB0  0821               	movf	?_CLOCK_getTime+1,w
 16022  0AB1  0142               	movlb	2	; select bank2
 16023  0AB2  00C6               	movwf	(_lastBeat+1)^(0+256)
 16024  0AB3  0140               	movlb	0	; select bank0
 16025  0AB4  0820               	movf	?_CLOCK_getTime,w
 16026  0AB5  0142               	movlb	2	; select bank2
 16027  0AB6  00C5               	movwf	_lastBeat^(0+256)
 16028                           
 16029                           ;beat.c: 114:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 16030  0AB7  0008               	return
 16031  0AB8                     l5908:	
 16032  0AB8  319E  26E5  318A   	fcall	_CLOCK_getTime
 16033  0ABB  0142               	movlb	2	; select bank2
 16034  0ABC  0845               	movf	_lastBeat^(0+256),w
 16035  0ABD  0140               	movlb	0	; select bank0
 16036  0ABE  0220               	subwf	?_CLOCK_getTime,w
 16037  0ABF  00A8               	movwf	??_BEAT_task
 16038  0AC0  0142               	movlb	2	; select bank2
 16039  0AC1  0846               	movf	(_lastBeat+1)^(0+256),w
 16040  0AC2  0140               	movlb	0	; select bank0
 16041  0AC3  3B21               	subwfb	?_CLOCK_getTime+1,w
 16042  0AC4  00A9               	movwf	??_BEAT_task+1
 16043  0AC5  3003               	movlw	3
 16044  0AC6  0229               	subwf	??_BEAT_task+1,w
 16045  0AC7  30E9               	movlw	233
 16046  0AC8  1903               	skipnz
 16047  0AC9  0228               	subwf	??_BEAT_task,w
 16048  0ACA  1C03               	skipc
 16049  0ACB  0008               	return
 16050                           
 16051                           ;beat.c: 115:         threshold -= 1;
 16052  0ACC  3001               	movlw	1
 16053  0ACD  0142               	movlb	2	; select bank2
 16054  0ACE  02E8               	subwf	_threshold^(0+256),f
 16055  0ACF  3000               	movlw	0
 16056  0AD0  3BE9               	subwfb	(_threshold+1)^(0+256),f
 16057                           
 16058                           ;beat.c: 116:         ADCC_SetUpperThreshold(threshold);
 16059  0AD1  0869               	movf	(_threshold+1)^(0+256),w
 16060  0AD2  0140               	movlb	0	; select bank0
 16061  0AD3  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16062  0AD4  0142               	movlb	2	; select bank2
 16063  0AD5  0868               	movf	_threshold^(0+256),w
 16064  0AD6  0140               	movlb	0	; select bank0
 16065  0AD7  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16066  0AD8  319E  26D3         	fcall	_ADCC_SetUpperThreshold
 16067  0ADA  0008               	return
 16068  0ADB                     __end_of_BEAT_task:	
 16069                           
 16070                           	psect	text51
 16071  126B                     __ptext51:	
 16072 ;; *************** function ___lwdiv *****************
 16073 ;; Defined at:
 16074 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;  divisor         2    0[BANK0 ] unsigned int 
 16077 ;;  dividend        2    2[BANK0 ] unsigned int 
 16078 ;; Auto vars:     Size  Location     Type
 16079 ;;  quotient        2    6[BANK0 ] unsigned int 
 16080 ;;  counter         1    5[BANK0 ] unsigned char 
 16081 ;; Return value:  Size  Location     Type
 16082 ;;                  2    0[BANK0 ] unsigned int 
 16083 ;; Registers used:
 16084 ;;		wreg, status,2, status,0
 16085 ;; Tracked objects:
 16086 ;;		On entry : 0/0
 16087 ;;		On exit  : 0/0
 16088 ;;		Unchanged: 0/0
 16089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16090 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16091 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16093 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16094 ;;Total ram usage:        8 bytes
 16095 ;; Hardware stack levels used:    1
 16096 ;; Hardware stack levels required when called:    4
 16097 ;; This function calls:
 16098 ;;		Nothing
 16099 ;; This function is called by:
 16100 ;;		_TM1650_fastPrintNum
 16101 ;;		_BEAT_task
 16102 ;; This function uses a non-reentrant model
 16103 ;;
 16104                           
 16105                           
 16106                           ;psect for function ___lwdiv
 16107  126B                     ___lwdiv:	
 16108                           
 16109                           ;incstack = 0
 16110                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16111  126B  0140               	movlb	0	; select bank0
 16112  126C  01A6               	clrf	___lwdiv@quotient
 16113  126D  01A7               	clrf	___lwdiv@quotient+1
 16114  126E  0820               	movf	___lwdiv@divisor,w
 16115  126F  0421               	iorwf	___lwdiv@divisor+1,w
 16116  1270  1903               	btfsc	3,2
 16117  1271  2A9B               	goto	l5538
 16118  1272  01A5               	clrf	___lwdiv@counter
 16119  1273  0AA5               	incf	___lwdiv@counter,f
 16120  1274                     l5526:	
 16121  1274  1BA1               	btfsc	___lwdiv@divisor+1,7
 16122  1275  2A80               	goto	l5528
 16123  1276  3001               	movlw	1
 16124  1277                     u5805:	
 16125  1277  35A0               	lslf	___lwdiv@divisor,f
 16126  1278  0DA1               	rlf	___lwdiv@divisor+1,f
 16127  1279  0B89               	decfsz	9,f
 16128  127A  2A77               	goto	u5805
 16129  127B  3001               	movlw	1
 16130  127C  00A4               	movwf	??___lwdiv
 16131  127D  0824               	movf	??___lwdiv,w
 16132  127E  07A5               	addwf	___lwdiv@counter,f
 16133  127F  2A74               	goto	l5526
 16134  1280                     l5528:	
 16135  1280  3001               	movlw	1
 16136  1281                     u5825:	
 16137  1281  35A6               	lslf	___lwdiv@quotient,f
 16138  1282  0DA7               	rlf	___lwdiv@quotient+1,f
 16139  1283  0B89               	decfsz	9,f
 16140  1284  2A81               	goto	u5825
 16141  1285  0821               	movf	___lwdiv@divisor+1,w
 16142  1286  0223               	subwf	___lwdiv@dividend+1,w
 16143  1287  1D03               	skipz
 16144  1288  2A8B               	goto	u5835
 16145  1289  0820               	movf	___lwdiv@divisor,w
 16146  128A  0222               	subwf	___lwdiv@dividend,w
 16147  128B                     u5835:	
 16148  128B  1C03               	skipc
 16149  128C  2A92               	goto	l5534
 16150  128D  0820               	movf	___lwdiv@divisor,w
 16151  128E  02A2               	subwf	___lwdiv@dividend,f
 16152  128F  0821               	movf	___lwdiv@divisor+1,w
 16153  1290  3BA3               	subwfb	___lwdiv@dividend+1,f
 16154  1291  1426               	bsf	___lwdiv@quotient,0
 16155  1292                     l5534:	
 16156  1292  3001               	movlw	1
 16157  1293                     u5845:	
 16158  1293  36A1               	lsrf	___lwdiv@divisor+1,f
 16159  1294  0CA0               	rrf	___lwdiv@divisor,f
 16160  1295  0B89               	decfsz	9,f
 16161  1296  2A93               	goto	u5845
 16162  1297  3001               	movlw	1
 16163  1298  02A5               	subwf	___lwdiv@counter,f
 16164  1299  1D03               	btfss	3,2
 16165  129A  2A80               	goto	l5528
 16166  129B                     l5538:	
 16167  129B  0827               	movf	___lwdiv@quotient+1,w
 16168  129C  00A1               	movwf	?___lwdiv+1
 16169  129D  0826               	movf	___lwdiv@quotient,w
 16170  129E  00A0               	movwf	?___lwdiv
 16171  129F  0008               	return
 16172  12A0                     __end_of___lwdiv:	
 16173                           
 16174                           	psect	text52
 16175  1EA5                     __ptext52:	
 16176 ;; *************** function _TM1650_isEnabled *****************
 16177 ;; Defined at:
 16178 ;;		line 70 in file "tm1650.c"
 16179 ;; Parameters:    Size  Location     Type
 16180 ;;		None
 16181 ;; Auto vars:     Size  Location     Type
 16182 ;;		None
 16183 ;; Return value:  Size  Location     Type
 16184 ;;                  1    wreg      _Bool 
 16185 ;; Registers used:
 16186 ;;		wreg
 16187 ;; Tracked objects:
 16188 ;;		On entry : 0/0
 16189 ;;		On exit  : 0/0
 16190 ;;		Unchanged: 0/0
 16191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16196 ;;Total ram usage:        0 bytes
 16197 ;; Hardware stack levels used:    1
 16198 ;; Hardware stack levels required when called:    4
 16199 ;; This function calls:
 16200 ;;		Nothing
 16201 ;; This function is called by:
 16202 ;;		_BEAT_task
 16203 ;; This function uses a non-reentrant model
 16204 ;;
 16205                           
 16206                           
 16207                           ;psect for function _TM1650_isEnabled
 16208  1EA5                     _TM1650_isEnabled:	
 16209                           
 16210                           ;tm1650.c: 71:     return isOn;
 16211                           
 16212                           ;incstack = 0
 16213                           ; Regs used in _TM1650_isEnabled: [wreg]
 16214  1EA5  0142               	movlb	2	; select bank2
 16215  1EA6  0857               	movf	_isOn^(0+256),w
 16216  1EA7  0008               	return
 16217  1EA8                     __end_of_TM1650_isEnabled:	
 16218                           
 16219                           	psect	text53
 16220  130B                     __ptext53:	
 16221 ;; *************** function _DMX_task *****************
 16222 ;; Defined at:
 16223 ;;		line 38 in file "dmx.c"
 16224 ;; Parameters:    Size  Location     Type
 16225 ;;		None
 16226 ;; Auto vars:     Size  Location     Type
 16227 ;;  time            2    4[BANK0 ] unsigned short 
 16228 ;; Return value:  Size  Location     Type
 16229 ;;                  1    wreg      void 
 16230 ;; Registers used:
 16231 ;;		wreg, status,2, status,0, pclath, cstack
 16232 ;; Tracked objects:
 16233 ;;		On entry : 0/0
 16234 ;;		On exit  : 0/0
 16235 ;;		Unchanged: 0/0
 16236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16238 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16239 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16240 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16241 ;;Total ram usage:        4 bytes
 16242 ;; Hardware stack levels used:    1
 16243 ;; Hardware stack levels required when called:    5
 16244 ;; This function calls:
 16245 ;;		_CLOCK_getTime
 16246 ;; This function is called by:
 16247 ;;		_main
 16248 ;; This function uses a non-reentrant model
 16249 ;;
 16250                           
 16251                           
 16252                           ;psect for function _DMX_task
 16253  130B                     _DMX_task:	
 16254                           
 16255                           ;dmx.c: 39:     time_t time = CLOCK_getTime();
 16256                           
 16257                           ;incstack = 0
 16258                           ; Regs used in _DMX_task: [wreg+status,2+status,0+pclath+cstack]
 16259  130B  319E  26E5  3193   	fcall	_CLOCK_getTime
 16260  130E  0140               	movlb	0	; select bank0
 16261  130F  0821               	movf	?_CLOCK_getTime+1,w
 16262  1310  00A5               	movwf	DMX_task@time+1
 16263  1311  0820               	movf	?_CLOCK_getTime,w
 16264  1312  00A4               	movwf	DMX_task@time
 16265                           
 16266                           ;dmx.c: 40:     if (time - lastTime < 1000)
 16267  1313  0142               	movlb	2	; select bank2
 16268  1314  083B               	movf	dmx@lastTime^(0+256),w
 16269  1315  0140               	movlb	0	; select bank0
 16270  1316  0224               	subwf	DMX_task@time,w
 16271  1317  00A2               	movwf	??_DMX_task
 16272  1318  0142               	movlb	2	; select bank2
 16273  1319  083C               	movf	(dmx@lastTime+1)^(0+256),w
 16274  131A  0140               	movlb	0	; select bank0
 16275  131B  3B25               	subwfb	DMX_task@time+1,w
 16276  131C  00A3               	movwf	??_DMX_task+1
 16277  131D  3003               	movlw	3
 16278  131E  0223               	subwf	??_DMX_task+1,w
 16279  131F  30E8               	movlw	232
 16280  1320  1903               	skipnz
 16281  1321  0222               	subwf	??_DMX_task,w
 16282  1322  1C03               	btfss	3,0
 16283  1323  0008               	return
 16284                           
 16285                           ;dmx.c: 42:     lastTime = time;
 16286  1324  0825               	movf	DMX_task@time+1,w
 16287  1325  0142               	movlb	2	; select bank2
 16288  1326  00BC               	movwf	(dmx@lastTime+1)^(0+256)
 16289  1327  0140               	movlb	0	; select bank0
 16290  1328  0824               	movf	DMX_task@time,w
 16291  1329  0142               	movlb	2	; select bank2
 16292  132A  00BB               	movwf	dmx@lastTime^(0+256)
 16293                           
 16294                           ;dmx.c: 44:     if(offCheck && !toggleCheck) {
 16295  132B  0850               	movf	_offCheck^(0+256),w
 16296  132C  1903               	btfsc	3,2
 16297  132D  2B35               	goto	l6120
 16298  132E  084E               	movf	_toggleCheck^(0+256),w
 16299  132F  1D03               	btfss	3,2
 16300  1330  2B35               	goto	l6120
 16301                           
 16302                           ;dmx.c: 46:         toggleCheck = 1;
 16303  1331  01CE               	clrf	_toggleCheck^(0+256)
 16304  1332  0ACE               	incf	_toggleCheck^(0+256),f
 16305                           
 16306                           ;dmx.c: 47:         offCheck = 0;
 16307  1333  01D0               	clrf	_offCheck^(0+256)
 16308  1334  0008               	return
 16309  1335                     l6120:	
 16310                           
 16311                           ;dmx.c: 51:     if (offCheck && toggleCheck) {
 16312  1335  0850               	movf	_offCheck^(0+256),w
 16313  1336  1903               	btfsc	3,2
 16314  1337  2B40               	goto	l6128
 16315  1338  084E               	movf	_toggleCheck^(0+256),w
 16316  1339  1903               	btfsc	3,2
 16317  133A  2B40               	goto	l6128
 16318                           
 16319                           ;dmx.c: 52:         dmxOn = 1;
 16320  133B  01CF               	clrf	_dmxOn^(0+256)
 16321  133C  0ACF               	incf	_dmxOn^(0+256),f
 16322                           
 16323                           ;dmx.c: 53:         toggleCheck = 0;
 16324  133D  01CE               	clrf	_toggleCheck^(0+256)
 16325                           
 16326                           ;dmx.c: 54:         offCheck = 0;
 16327  133E  01D0               	clrf	_offCheck^(0+256)
 16328                           
 16329                           ;dmx.c: 55:     } else {
 16330  133F  0008               	return
 16331  1340                     l6128:	
 16332                           
 16333                           ;dmx.c: 56:         dmxOn = 0;
 16334  1340  01CF               	clrf	_dmxOn^(0+256)
 16335  1341  0008               	return
 16336  1342                     __end_of_DMX_task:	
 16337                           
 16338                           	psect	text54
 16339  1EC2                     __ptext54:	
 16340 ;; *************** function _CLOCK_init *****************
 16341 ;; Defined at:
 16342 ;;		line 9 in file "clock.c"
 16343 ;; Parameters:    Size  Location     Type
 16344 ;;		None
 16345 ;; Auto vars:     Size  Location     Type
 16346 ;;		None
 16347 ;; Return value:  Size  Location     Type
 16348 ;;                  1    wreg      void 
 16349 ;; Registers used:
 16350 ;;		wreg, status,2, status,0, pclath, cstack
 16351 ;; Tracked objects:
 16352 ;;		On entry : 0/0
 16353 ;;		On exit  : 0/0
 16354 ;;		Unchanged: 0/0
 16355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16360 ;;Total ram usage:        0 bytes
 16361 ;; Hardware stack levels used:    1
 16362 ;; Hardware stack levels required when called:    5
 16363 ;; This function calls:
 16364 ;;		_TMR0_SetInterruptHandler
 16365 ;; This function is called by:
 16366 ;;		_main
 16367 ;; This function uses a non-reentrant model
 16368 ;;
 16369                           
 16370                           
 16371                           ;psect for function _CLOCK_init
 16372  1EC2                     _CLOCK_init:	
 16373                           
 16374                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 16375                           
 16376                           ;incstack = 0
 16377                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 16378  1EC2  30BC               	movlw	low _CLOCK_timerCallback
 16379  1EC3  0140               	movlb	0	; select bank0
 16380  1EC4  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16381  1EC5  301E               	movlw	high _CLOCK_timerCallback
 16382  1EC6  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16383  1EC7  319E  26EE         	fcall	_TMR0_SetInterruptHandler
 16384  1EC9  0008               	return
 16385  1ECA                     __end_of_CLOCK_init:	
 16386                           
 16387                           	psect	text55
 16388  1EEE                     __ptext55:	
 16389 ;; *************** function _TMR0_SetInterruptHandler *****************
 16390 ;; Defined at:
 16391 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16392 ;; Parameters:    Size  Location     Type
 16393 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16394 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 16395 ;; Auto vars:     Size  Location     Type
 16396 ;;		None
 16397 ;; Return value:  Size  Location     Type
 16398 ;;                  1    wreg      void 
 16399 ;; Registers used:
 16400 ;;		wreg
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/0
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16410 ;;Total ram usage:        2 bytes
 16411 ;; Hardware stack levels used:    1
 16412 ;; Hardware stack levels required when called:    4
 16413 ;; This function calls:
 16414 ;;		Nothing
 16415 ;; This function is called by:
 16416 ;;		_TMR0_Initialize
 16417 ;;		_CLOCK_init
 16418 ;; This function uses a non-reentrant model
 16419 ;;
 16420                           
 16421                           
 16422                           ;psect for function _TMR0_SetInterruptHandler
 16423  1EEE                     _TMR0_SetInterruptHandler:	
 16424                           
 16425                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16426                           
 16427                           ;incstack = 0
 16428                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16429  1EEE  0140               	movlb	0	; select bank0
 16430  1EEF  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16431  1EF0  0142               	movlb	2	; select bank2
 16432  1EF1  00ED               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 16433  1EF2  0140               	movlb	0	; select bank0
 16434  1EF3  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16435  1EF4  0142               	movlb	2	; select bank2
 16436  1EF5  00EC               	movwf	_TMR0_InterruptHandler^(0+256)
 16437  1EF6  0008               	return
 16438  1EF7                     __end_of_TMR0_SetInterruptHandler:	
 16439                           
 16440                           	psect	text56
 16441  0930                     __ptext56:	
 16442 ;; *************** function _BUTTONS_task *****************
 16443 ;; Defined at:
 16444 ;;		line 37 in file "buttons.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;		None
 16447 ;; Auto vars:     Size  Location     Type
 16448 ;;  btn             1    8[BANK0 ] PTR struct .
 16449 ;;		 -> buttons(32), 
 16450 ;;  i               1    5[BANK0 ] unsigned char 
 16451 ;;  time            2    6[BANK0 ] unsigned short 
 16452 ;; Return value:  Size  Location     Type
 16453 ;;                  1    wreg      void 
 16454 ;; Registers used:
 16455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16456 ;; Tracked objects:
 16457 ;;		On entry : 0/0
 16458 ;;		On exit  : 0/0
 16459 ;;		Unchanged: 0/0
 16460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16462 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16463 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16464 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16465 ;;Total ram usage:        7 bytes
 16466 ;; Hardware stack levels used:    1
 16467 ;; Hardware stack levels required when called:    5
 16468 ;; This function calls:
 16469 ;;		_CLOCK_getTime
 16470 ;; This function is called by:
 16471 ;;		_main
 16472 ;; This function uses a non-reentrant model
 16473 ;;
 16474                           
 16475                           
 16476                           ;psect for function _BUTTONS_task
 16477  0930                     _BUTTONS_task:	
 16478                           
 16479                           ;buttons.c: 38:     time_t time = CLOCK_getTime();
 16480                           
 16481                           ;incstack = 0
 16482                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16483  0930  319E  26E5  3189   	fcall	_CLOCK_getTime
 16484  0933  0140               	movlb	0	; select bank0
 16485  0934  0821               	movf	?_CLOCK_getTime+1,w
 16486  0935  00A7               	movwf	BUTTONS_task@time+1
 16487  0936  0820               	movf	?_CLOCK_getTime,w
 16488  0937  00A6               	movwf	BUTTONS_task@time
 16489                           
 16490                           ;buttons.c: 41:     if (time - lastTime < 50)
 16491  0938  0142               	movlb	2	; select bank2
 16492  0939  0847               	movf	_lastTime^(0+256),w
 16493  093A  0140               	movlb	0	; select bank0
 16494  093B  0226               	subwf	BUTTONS_task@time,w
 16495  093C  00A2               	movwf	??_BUTTONS_task
 16496  093D  0142               	movlb	2	; select bank2
 16497  093E  0848               	movf	(_lastTime+1)^(0+256),w
 16498  093F  0140               	movlb	0	; select bank0
 16499  0940  3B27               	subwfb	BUTTONS_task@time+1,w
 16500  0941  00A3               	movwf	??_BUTTONS_task+1
 16501  0942  3000               	movlw	0
 16502  0943  0223               	subwf	??_BUTTONS_task+1,w
 16503  0944  3032               	movlw	50
 16504  0945  1903               	skipnz
 16505  0946  0222               	subwf	??_BUTTONS_task,w
 16506  0947  1C03               	btfss	3,0
 16507  0948  0008               	return
 16508                           
 16509                           ;buttons.c: 44:     lastTime = time;
 16510  0949  0827               	movf	BUTTONS_task@time+1,w
 16511  094A  0142               	movlb	2	; select bank2
 16512  094B  00C8               	movwf	(_lastTime+1)^(0+256)
 16513  094C  0140               	movlb	0	; select bank0
 16514  094D  0826               	movf	BUTTONS_task@time,w
 16515  094E  0142               	movlb	2	; select bank2
 16516  094F  00C7               	movwf	_lastTime^(0+256)
 16517                           
 16518                           ;buttons.c: 47:     for (uint8_t i = 0; i < 4; i++) {
 16519  0950  0140               	movlb	0	; select bank0
 16520  0951  01A5               	clrf	BUTTONS_task@i
 16521  0952                     l6144:	
 16522                           
 16523                           ;buttons.c: 48:         button_t* btn = buttons + i;
 16524  0952  0825               	movf	BUTTONS_task@i,w
 16525  0953  00A2               	movwf	??_BUTTONS_task
 16526  0954  3002               	movlw	2
 16527  0955                     u6405:	
 16528  0955  35A2               	lslf	??_BUTTONS_task,f
 16529  0956  3EFF               	addlw	-1
 16530  0957  1D03               	skipz
 16531  0958  2955               	goto	u6405
 16532  0959  3522               	lslf	??_BUTTONS_task,w
 16533  095A  3E20               	addlw	(low (_buttons| (0+512)))& (0+255)
 16534  095B  00A3               	movwf	??_BUTTONS_task+1
 16535  095C  0823               	movf	??_BUTTONS_task+1,w
 16536  095D  00A8               	movwf	BUTTONS_task@btn
 16537                           
 16538                           ;buttons.c: 51:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 16539  095E  0828               	movf	BUTTONS_task@btn,w
 16540  095F  0086               	movwf	6
 16541  0960  3002               	movlw	2	; select bank4/5
 16542  0961  0087               	movwf	7
 16543  0962  3F40               	moviw [0]fsr1
 16544  0963  00A2               	movwf	??_BUTTONS_task
 16545  0964  3F41               	moviw [1]fsr1
 16546  0965  00A3               	movwf	??_BUTTONS_task+1
 16547  0966  0822               	movf	??_BUTTONS_task,w
 16548  0967  0086               	movwf	6
 16549  0968  0823               	movf	??_BUTTONS_task+1,w
 16550  0969  0087               	movwf	7
 16551  096A  3001               	movlw	1
 16552  096B  00A4               	movwf	??_BUTTONS_task+2
 16553  096C  0828               	movf	BUTTONS_task@btn,w
 16554  096D  3E02               	addlw	2
 16555  096E  0084               	movwf	4
 16556  096F  3002               	movlw	2	; select bank4/5
 16557  0970  0085               	movwf	5
 16558  0971  0A00               	incf	0,w
 16559  0972  2974               	goto	u6414
 16560  0973                     u6415:	
 16561  0973  35A4               	lslf	??_BUTTONS_task+2,f
 16562  0974                     u6414:	
 16563  0974  0B89               	decfsz	9,f
 16564  0975  2973               	goto	u6415
 16565  0976  0824               	movf	??_BUTTONS_task+2,w
 16566  0977  0501               	andwf	1,w
 16567  0978  1D03               	btfss	3,2
 16568  0979  2982               	goto	l6150
 16569                           
 16570                           ;buttons.c: 52:             btn->state = STATE_PRESSED;
 16571  097A  0828               	movf	BUTTONS_task@btn,w
 16572  097B  3E03               	addlw	3
 16573  097C  0086               	movwf	6
 16574  097D  3002               	movlw	2	; select bank4/5
 16575  097E  0087               	movwf	7
 16576  097F  0181               	clrf	1
 16577  0980  0A81               	incf	1,f
 16578                           
 16579                           ;buttons.c: 53:         } else {
 16580  0981  2988               	goto	l802
 16581  0982                     l6150:	
 16582                           
 16583                           ;buttons.c: 54:             btn->state = STATE_UNPRESSED;
 16584  0982  0828               	movf	BUTTONS_task@btn,w
 16585  0983  3E03               	addlw	3
 16586  0984  0086               	movwf	6
 16587  0985  3002               	movlw	2	; select bank4/5
 16588  0986  0087               	movwf	7
 16589  0987  0181               	clrf	1
 16590  0988                     l802:	
 16591                           ;buttons.c: 55:         }
 16592                           
 16593                           
 16594                           ;buttons.c: 57:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
 16595  0988  0828               	movf	BUTTONS_task@btn,w
 16596  0989  3E03               	addlw	3
 16597  098A  0086               	movwf	6
 16598  098B  3002               	movlw	2	; select bank4/5
 16599  098C  0087               	movwf	7
 16600  098D  0301               	decf	1,w
 16601  098E  1D03               	btfss	3,2
 16602  098F  29A9               	goto	l6156
 16603  0990  0828               	movf	BUTTONS_task@btn,w
 16604  0991  3E04               	addlw	4
 16605  0992  0086               	movwf	6
 16606  0993  3002               	movlw	2	; select bank4/5
 16607  0994  0087               	movwf	7
 16608  0995  0801               	movf	1,w
 16609  0996  1D03               	btfss	3,2
 16610  0997  29A9               	goto	l6156
 16611                           
 16612                           ;buttons.c: 59:             btn->event = EVENT_PRESSED;
 16613  0998  0828               	movf	BUTTONS_task@btn,w
 16614  0999  3E05               	addlw	5
 16615  099A  0086               	movwf	6
 16616  099B  3002               	movlw	2	; select bank4/5
 16617  099C  0087               	movwf	7
 16618  099D  0181               	clrf	1
 16619  099E  0A81               	incf	1,f
 16620                           
 16621                           ;buttons.c: 60:             btn->pressTime = time;
 16622  099F  0828               	movf	BUTTONS_task@btn,w
 16623  09A0  3E06               	addlw	6
 16624  09A1  0086               	movwf	6
 16625  09A2  3002               	movlw	2	; select bank4/5
 16626  09A3  0087               	movwf	7
 16627  09A4  0826               	movf	BUTTONS_task@time,w
 16628  09A5  3FC0               	movwi [0]fsr1
 16629  09A6  0827               	movf	BUTTONS_task@time+1,w
 16630  09A7  3FC1               	movwi [1]fsr1
 16631                           
 16632                           ;buttons.c: 61:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 16633  09A8  29EB               	goto	l804
 16634  09A9                     l6156:	
 16635  09A9  0828               	movf	BUTTONS_task@btn,w
 16636  09AA  3E03               	addlw	3
 16637  09AB  0086               	movwf	6
 16638  09AC  3002               	movlw	2	; select bank4/5
 16639  09AD  0087               	movwf	7
 16640  09AE  0301               	decf	1,w
 16641  09AF  1D03               	btfss	3,2
 16642  09B0  29D5               	goto	l6164
 16643  09B1  0828               	movf	BUTTONS_task@btn,w
 16644  09B2  3E04               	addlw	4
 16645  09B3  0086               	movwf	6
 16646  09B4  3002               	movlw	2	; select bank4/5
 16647  09B5  0087               	movwf	7
 16648  09B6  0301               	decf	1,w
 16649  09B7  1D03               	btfss	3,2
 16650  09B8  29D5               	goto	l6164
 16651                           
 16652                           ;buttons.c: 63:             if(time - btn->pressTime > 500) {
 16653  09B9  0828               	movf	BUTTONS_task@btn,w
 16654  09BA  3E06               	addlw	6
 16655  09BB  0086               	movwf	6
 16656  09BC  3002               	movlw	2	; select bank4/5
 16657  09BD  0087               	movwf	7
 16658  09BE  3F40               	moviw [0]fsr1
 16659  09BF  0226               	subwf	BUTTONS_task@time,w
 16660  09C0  00A2               	movwf	??_BUTTONS_task
 16661  09C1  3F41               	moviw [1]fsr1
 16662  09C2  3B27               	subwfb	BUTTONS_task@time+1,w
 16663  09C3  00A3               	movwf	??_BUTTONS_task+1
 16664  09C4  3001               	movlw	1
 16665  09C5  0223               	subwf	??_BUTTONS_task+1,w
 16666  09C6  30F5               	movlw	245
 16667  09C7  1903               	skipnz
 16668  09C8  0222               	subwf	??_BUTTONS_task,w
 16669  09C9  1C03               	skipc
 16670  09CA  29EB               	goto	l804
 16671                           
 16672                           ;buttons.c: 64:                 btn->event = EVENT_HELD;
 16673  09CB  3002               	movlw	2
 16674  09CC  00A2               	movwf	??_BUTTONS_task
 16675  09CD  0828               	movf	BUTTONS_task@btn,w
 16676  09CE  3E05               	addlw	5
 16677  09CF  0086               	movwf	6
 16678  09D0  3002               	movlw	2	; select bank4/5
 16679  09D1  0087               	movwf	7
 16680  09D2  0822               	movf	??_BUTTONS_task,w
 16681  09D3  0081               	movwf	1
 16682  09D4  29EB               	goto	l804
 16683  09D5                     l6164:	
 16684  09D5  0828               	movf	BUTTONS_task@btn,w
 16685  09D6  3E03               	addlw	3
 16686  09D7  0086               	movwf	6
 16687  09D8  3002               	movlw	2	; select bank4/5
 16688  09D9  0087               	movwf	7
 16689  09DA  0801               	movf	1,w
 16690  09DB  1D03               	btfss	3,2
 16691  09DC  29EB               	goto	l804
 16692  09DD  0828               	movf	BUTTONS_task@btn,w
 16693  09DE  3E04               	addlw	4
 16694  09DF  0086               	movwf	6
 16695  09E0  3002               	movlw	2	; select bank4/5
 16696  09E1  0087               	movwf	7
 16697  09E2  0301               	decf	1,w
 16698  09E3  1D03               	btfss	3,2
 16699  09E4  29EB               	goto	l804
 16700                           
 16701                           ;buttons.c: 67:             btn->event = EVENT_IDLE;
 16702  09E5  0828               	movf	BUTTONS_task@btn,w
 16703  09E6  3E05               	addlw	5
 16704  09E7  0086               	movwf	6
 16705  09E8  3002               	movlw	2	; select bank4/5
 16706  09E9  0087               	movwf	7
 16707  09EA  0181               	clrf	1
 16708  09EB                     l804:	
 16709                           
 16710                           ;buttons.c: 70:         btn->lastState = btn->state;
 16711  09EB  0828               	movf	BUTTONS_task@btn,w
 16712  09EC  3E03               	addlw	3
 16713  09ED  0086               	movwf	6
 16714  09EE  3002               	movlw	2	; select bank4/5
 16715  09EF  0087               	movwf	7
 16716  09F0  0801               	movf	1,w
 16717  09F1  00A2               	movwf	??_BUTTONS_task
 16718  09F2  0828               	movf	BUTTONS_task@btn,w
 16719  09F3  3E04               	addlw	4
 16720  09F4  0086               	movwf	6
 16721  09F5  3002               	movlw	2	; select bank4/5
 16722  09F6  0087               	movwf	7
 16723  09F7  0822               	movf	??_BUTTONS_task,w
 16724  09F8  0081               	movwf	1
 16725                           
 16726                           ;buttons.c: 71:     }
 16727  09F9  3001               	movlw	1
 16728  09FA  00A2               	movwf	??_BUTTONS_task
 16729  09FB  0822               	movf	??_BUTTONS_task,w
 16730  09FC  07A5               	addwf	BUTTONS_task@i,f
 16731  09FD  3004               	movlw	4
 16732  09FE  0225               	subwf	BUTTONS_task@i,w
 16733  09FF  1803               	btfsc	3,0
 16734  0A00  0008               	return
 16735  0A01  2952               	goto	l6144
 16736  0A02                     __end_of_BUTTONS_task:	
 16737                           
 16738                           	psect	text57
 16739  1EE5                     __ptext57:	
 16740 ;; *************** function _CLOCK_getTime *****************
 16741 ;; Defined at:
 16742 ;;		line 17 in file "clock.c"
 16743 ;; Parameters:    Size  Location     Type
 16744 ;;		None
 16745 ;; Auto vars:     Size  Location     Type
 16746 ;;		None
 16747 ;; Return value:  Size  Location     Type
 16748 ;;                  2    0[BANK0 ] unsigned short 
 16749 ;; Registers used:
 16750 ;;		wreg
 16751 ;; Tracked objects:
 16752 ;;		On entry : 0/0
 16753 ;;		On exit  : 0/0
 16754 ;;		Unchanged: 0/0
 16755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16756 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16759 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16760 ;;Total ram usage:        2 bytes
 16761 ;; Hardware stack levels used:    1
 16762 ;; Hardware stack levels required when called:    4
 16763 ;; This function calls:
 16764 ;;		Nothing
 16765 ;; This function is called by:
 16766 ;;		_BUTTONS_task
 16767 ;;		_BEAT_task
 16768 ;;		_DMX_task
 16769 ;;		_fadeColor
 16770 ;;		_cycleColors
 16771 ;;		_adrControl_DMX
 16772 ;; This function uses a non-reentrant model
 16773 ;;
 16774                           
 16775                           
 16776                           ;psect for function _CLOCK_getTime
 16777  1EE5                     _CLOCK_getTime:	
 16778                           
 16779                           ;clock.c: 18:     return currentTime;
 16780                           
 16781                           ;incstack = 0
 16782                           ; Regs used in _CLOCK_getTime: [wreg]
 16783  1EE5  0142               	movlb	2	; select bank2
 16784  1EE6  084C               	movf	(_currentTime+1)^(0+256),w
 16785  1EE7  0140               	movlb	0	; select bank0
 16786  1EE8  00A1               	movwf	?_CLOCK_getTime+1
 16787  1EE9  0142               	movlb	2	; select bank2
 16788  1EEA  084B               	movf	_currentTime^(0+256),w
 16789  1EEB  0140               	movlb	0	; select bank0
 16790  1EEC  00A0               	movwf	?_CLOCK_getTime
 16791  1EED  0008               	return
 16792  1EEE                     __end_of_CLOCK_getTime:	
 16793                           
 16794                           	psect	text58
 16795  1447                     __ptext58:	
 16796 ;; *************** function _BUTTONS_init *****************
 16797 ;; Defined at:
 16798 ;;		line 21 in file "buttons.c"
 16799 ;; Parameters:    Size  Location     Type
 16800 ;;		None
 16801 ;; Auto vars:     Size  Location     Type
 16802 ;;		None
 16803 ;; Return value:  Size  Location     Type
 16804 ;;                  1    wreg      void 
 16805 ;; Registers used:
 16806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16807 ;; Tracked objects:
 16808 ;;		On entry : 0/0
 16809 ;;		On exit  : 0/0
 16810 ;;		Unchanged: 0/0
 16811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16815 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16816 ;;Total ram usage:        1 bytes
 16817 ;; Hardware stack levels used:    1
 16818 ;; Hardware stack levels required when called:    5
 16819 ;; This function calls:
 16820 ;;		_init
 16821 ;; This function is called by:
 16822 ;;		_main
 16823 ;; This function uses a non-reentrant model
 16824 ;;
 16825                           
 16826                           
 16827                           ;psect for function _BUTTONS_init
 16828  1447                     _BUTTONS_init:	
 16829                           
 16830                           ;buttons.c: 22:     menu = &buttons[0];
 16831                           
 16832                           ;incstack = 0
 16833                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16834  1447  3020               	movlw	(low (_buttons| (0+512)))& (0+255)
 16835  1448  0140               	movlb	0	; select bank0
 16836  1449  00A5               	movwf	??_BUTTONS_init
 16837  144A  0825               	movf	??_BUTTONS_init,w
 16838  144B  0142               	movlb	2	; select bank2
 16839  144C  00D3               	movwf	_menu^(0+256)
 16840                           
 16841                           ;buttons.c: 23:     up = &buttons[1];
 16842  144D  3028               	movlw	(low ((_buttons| (0+512)+8)))& (0+255)
 16843  144E  0140               	movlb	0	; select bank0
 16844  144F  00A5               	movwf	??_BUTTONS_init
 16845  1450  0825               	movf	??_BUTTONS_init,w
 16846  1451  0142               	movlb	2	; select bank2
 16847  1452  00D6               	movwf	_up^(0+256)
 16848                           
 16849                           ;buttons.c: 24:     down = &buttons[2];
 16850  1453  3030               	movlw	(low ((_buttons| (0+512)+16)))& (0+255)
 16851  1454  0140               	movlb	0	; select bank0
 16852  1455  00A5               	movwf	??_BUTTONS_init
 16853  1456  0825               	movf	??_BUTTONS_init,w
 16854  1457  0142               	movlb	2	; select bank2
 16855  1458  00D5               	movwf	_down^(0+256)
 16856                           
 16857                           ;buttons.c: 25:     enter = &buttons[3];
 16858  1459  3038               	movlw	(low ((_buttons| (0+512)+24)))& (0+255)
 16859  145A  0140               	movlb	0	; select bank0
 16860  145B  00A5               	movwf	??_BUTTONS_init
 16861  145C  0825               	movf	??_BUTTONS_init,w
 16862  145D  0142               	movlb	2	; select bank2
 16863  145E  00D4               	movwf	_enter^(0+256)
 16864                           
 16865                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 16866  145F  300E               	movlw	14
 16867  1460  0140               	movlb	0	; select bank0
 16868  1461  00A0               	movwf	init@port
 16869  1462  3000               	movlw	0
 16870  1463  00A1               	movwf	init@port+1
 16871  1464  3002               	movlw	2
 16872  1465  00A5               	movwf	??_BUTTONS_init
 16873  1466  0825               	movf	??_BUTTONS_init,w
 16874  1467  00A2               	movwf	init@pin
 16875  1468  0142               	movlb	2	; select bank2
 16876  1469  0853               	movf	_menu^(0+256),w
 16877  146A  3190  20F1  3194   	fcall	_init
 16878                           
 16879                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 16880  146D  300C               	movlw	12
 16881  146E  0140               	movlb	0	; select bank0
 16882  146F  00A0               	movwf	init@port
 16883  1470  3000               	movlw	0
 16884  1471  00A1               	movwf	init@port+1
 16885  1472  3002               	movlw	2
 16886  1473  00A5               	movwf	??_BUTTONS_init
 16887  1474  0825               	movf	??_BUTTONS_init,w
 16888  1475  00A2               	movwf	init@pin
 16889  1476  0142               	movlb	2	; select bank2
 16890  1477  0854               	movf	_enter^(0+256),w
 16891  1478  3190  20F1  3194   	fcall	_init
 16892                           
 16893                           ;buttons.c: 29:     init(down, &PORTC, 0);
 16894  147B  300E               	movlw	14
 16895  147C  0140               	movlb	0	; select bank0
 16896  147D  00A0               	movwf	init@port
 16897  147E  3000               	movlw	0
 16898  147F  00A1               	movwf	init@port+1
 16899  1480  01A2               	clrf	init@pin
 16900  1481  0142               	movlb	2	; select bank2
 16901  1482  0855               	movf	_down^(0+256),w
 16902  1483  3190  20F1  3194   	fcall	_init
 16903                           
 16904                           ;buttons.c: 30:     init(up, &PORTC, 1);
 16905  1486  300E               	movlw	14
 16906  1487  0140               	movlb	0	; select bank0
 16907  1488  00A0               	movwf	init@port
 16908  1489  3000               	movlw	0
 16909  148A  00A1               	movwf	init@port+1
 16910  148B  01A2               	clrf	init@pin
 16911  148C  0AA2               	incf	init@pin,f
 16912  148D  0142               	movlb	2	; select bank2
 16913  148E  0856               	movf	_up^(0+256),w
 16914  148F  3190  20F1         	fcall	_init
 16915  1491  0008               	return
 16916  1492                     __end_of_BUTTONS_init:	
 16917                           
 16918                           	psect	text59
 16919  10F1                     __ptext59:	
 16920 ;; *************** function _init *****************
 16921 ;; Defined at:
 16922 ;;		line 14 in file "buttons.c"
 16923 ;; Parameters:    Size  Location     Type
 16924 ;;  btn             1    wreg     PTR struct .
 16925 ;;		 -> buttons(32), NULL(0), 
 16926 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 16927 ;;		 -> PORTA(1), PORTC(1), 
 16928 ;;  pin             1    2[BANK0 ] unsigned char 
 16929 ;; Auto vars:     Size  Location     Type
 16930 ;;  btn             1    4[BANK0 ] PTR struct .
 16931 ;;		 -> buttons(32), NULL(0), 
 16932 ;; Return value:  Size  Location     Type
 16933 ;;                  1    wreg      void 
 16934 ;; Registers used:
 16935 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16936 ;; Tracked objects:
 16937 ;;		On entry : 0/0
 16938 ;;		On exit  : 0/0
 16939 ;;		Unchanged: 0/0
 16940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16941 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16942 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16943 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16944 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16945 ;;Total ram usage:        5 bytes
 16946 ;; Hardware stack levels used:    1
 16947 ;; Hardware stack levels required when called:    4
 16948 ;; This function calls:
 16949 ;;		Nothing
 16950 ;; This function is called by:
 16951 ;;		_BUTTONS_init
 16952 ;; This function uses a non-reentrant model
 16953 ;;
 16954                           
 16955                           
 16956                           ;psect for function _init
 16957  10F1                     _init:	
 16958                           
 16959                           ;incstack = 0
 16960                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 16961                           ;init@btn stored from wreg
 16962  10F1  0140               	movlb	0	; select bank0
 16963  10F2  00A4               	movwf	init@btn
 16964                           
 16965                           ;buttons.c: 15:     btn->port = port;
 16966  10F3  0824               	movf	init@btn,w
 16967  10F4  0086               	movwf	6
 16968  10F5  3002               	movlw	2	; select bank4/5
 16969  10F6  0087               	movwf	7
 16970  10F7  0820               	movf	init@port,w
 16971  10F8  3FC0               	movwi [0]fsr1
 16972  10F9  0821               	movf	init@port+1,w
 16973  10FA  3FC1               	movwi [1]fsr1
 16974                           
 16975                           ;buttons.c: 16:     btn->pin = pin;
 16976  10FB  0822               	movf	init@pin,w
 16977  10FC  00A3               	movwf	??_init
 16978  10FD  0824               	movf	init@btn,w
 16979  10FE  3E02               	addlw	2
 16980  10FF  0086               	movwf	6
 16981  1100  3002               	movlw	2	; select bank4/5
 16982  1101  0087               	movwf	7
 16983  1102  0823               	movf	??_init,w
 16984  1103  0081               	movwf	1
 16985                           
 16986                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 16987  1104  0824               	movf	init@btn,w
 16988  1105  3E03               	addlw	3
 16989  1106  0086               	movwf	6
 16990  1107  3002               	movlw	2	; select bank4/5
 16991  1108  0087               	movwf	7
 16992  1109  0181               	clrf	1
 16993                           
 16994                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 16995  110A  0824               	movf	init@btn,w
 16996  110B  3E05               	addlw	5
 16997  110C  0086               	movwf	6
 16998  110D  3002               	movlw	2	; select bank4/5
 16999  110E  0087               	movwf	7
 17000  110F  0181               	clrf	1
 17001  1110  0008               	return
 17002  1111                     __end_of_init:	
 17003                           
 17004                           	psect	text60
 17005  1FE9                     __ptext60:	
 17006 ;; *************** function _BEAT_init *****************
 17007 ;; Defined at:
 17008 ;;		line 31 in file "beat.c"
 17009 ;; Parameters:    Size  Location     Type
 17010 ;;		None
 17011 ;; Auto vars:     Size  Location     Type
 17012 ;;		None
 17013 ;; Return value:  Size  Location     Type
 17014 ;;                  1    wreg      void 
 17015 ;; Registers used:
 17016 ;;		wreg, status,2, status,0, pclath, cstack
 17017 ;; Tracked objects:
 17018 ;;		On entry : 0/0
 17019 ;;		On exit  : 0/0
 17020 ;;		Unchanged: 0/0
 17021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17026 ;;Total ram usage:        0 bytes
 17027 ;; Hardware stack levels used:    1
 17028 ;; Hardware stack levels required when called:    5
 17029 ;; This function calls:
 17030 ;;		_ADCC_SetADTIInterruptHandler
 17031 ;;		_ADCC_SetUpperThreshold
 17032 ;;		_ADCC_StartConversion
 17033 ;; This function is called by:
 17034 ;;		_main
 17035 ;; This function uses a non-reentrant model
 17036 ;;
 17037                           
 17038                           
 17039                           ;psect for function _BEAT_init
 17040  1FE9                     _BEAT_init:	
 17041                           
 17042                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 17043                           
 17044                           ;incstack = 0
 17045                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 17046  1FE9  0142               	movlb	2	; select bank2
 17047  1FEA  0869               	movf	(_threshold+1)^(0+256),w
 17048  1FEB  0140               	movlb	0	; select bank0
 17049  1FEC  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17050  1FED  0142               	movlb	2	; select bank2
 17051  1FEE  0868               	movf	_threshold^(0+256),w
 17052  1FEF  0140               	movlb	0	; select bank0
 17053  1FF0  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17054  1FF1  319E  26D3  319F   	fcall	_ADCC_SetUpperThreshold
 17055                           
 17056                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 17057  1FF4  30AB               	movlw	low _adcThresholdHandler
 17058  1FF5  0140               	movlb	0	; select bank0
 17059  1FF6  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 17060  1FF7  301E               	movlw	high _adcThresholdHandler
 17061  1FF8  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 17062  1FF9  319E  26CA  319F   	fcall	_ADCC_SetADTIInterruptHandler
 17063                           
 17064                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 17065  1FFC  300F               	movlw	15
 17066  1FFD  319E  26DC         	fcall	_ADCC_StartConversion
 17067  1FFF  0008               	return
 17068  2000                     __end_of_BEAT_init:	
 17069                           
 17070                           	psect	text61
 17071  1EDC                     __ptext61:	
 17072 ;; *************** function _ADCC_StartConversion *****************
 17073 ;; Defined at:
 17074 ;;		line 121 in file "mcc_generated_files/adcc.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;  channel         1    wreg     enum E10867
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;  channel         1    0[BANK0 ] enum E10867
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  1    wreg      void 
 17081 ;; Registers used:
 17082 ;;		wreg
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17091 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17092 ;;Total ram usage:        1 bytes
 17093 ;; Hardware stack levels used:    1
 17094 ;; Hardware stack levels required when called:    4
 17095 ;; This function calls:
 17096 ;;		Nothing
 17097 ;; This function is called by:
 17098 ;;		_BEAT_init
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102                           
 17103                           ;psect for function _ADCC_StartConversion
 17104  1EDC                     _ADCC_StartConversion:	
 17105                           
 17106                           ;incstack = 0
 17107                           ; Regs used in _ADCC_StartConversion: [wreg]
 17108                           ;ADCC_StartConversion@channel stored from wreg
 17109  1EDC  0140               	movlb	0	; select bank0
 17110  1EDD  00A0               	movwf	ADCC_StartConversion@channel
 17111                           
 17112                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 17113  1EDE  0820               	movf	ADCC_StartConversion@channel,w
 17114  1EDF  0141               	movlb	1	; select bank1
 17115  1EE0  009F               	movwf	31	;volatile
 17116                           
 17117                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 17118  1EE1  0142               	movlb	2	; select bank2
 17119  1EE2  1791               	bsf	17,7	;volatile
 17120                           
 17121                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 17122  1EE3  1411               	bsf	17,0	;volatile
 17123  1EE4  0008               	return
 17124  1EE5                     __end_of_ADCC_StartConversion:	
 17125                           
 17126                           	psect	text62
 17127  1ED3                     __ptext62:	
 17128 ;; *************** function _ADCC_SetUpperThreshold *****************
 17129 ;; Defined at:
 17130 ;;		line 251 in file "mcc_generated_files/adcc.c"
 17131 ;; Parameters:    Size  Location     Type
 17132 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 17133 ;; Auto vars:     Size  Location     Type
 17134 ;;		None
 17135 ;; Return value:  Size  Location     Type
 17136 ;;                  1    wreg      void 
 17137 ;; Registers used:
 17138 ;;		wreg, status,2
 17139 ;; Tracked objects:
 17140 ;;		On entry : 0/0
 17141 ;;		On exit  : 0/0
 17142 ;;		Unchanged: 0/0
 17143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17147 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17148 ;;Total ram usage:        2 bytes
 17149 ;; Hardware stack levels used:    1
 17150 ;; Hardware stack levels required when called:    4
 17151 ;; This function calls:
 17152 ;;		Nothing
 17153 ;; This function is called by:
 17154 ;;		_BEAT_init
 17155 ;;		_BEAT_task
 17156 ;; This function uses a non-reentrant model
 17157 ;;
 17158                           
 17159                           
 17160                           ;psect for function _ADCC_SetUpperThreshold
 17161  1ED3                     _ADCC_SetUpperThreshold:	
 17162                           
 17163                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 17164                           
 17165                           ;incstack = 0
 17166                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 17167  1ED3  0140               	movlb	0	; select bank0
 17168  1ED4  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 17169  1ED5  0141               	movlb	1	; select bank1
 17170  1ED6  008F               	movwf	15	;volatile
 17171                           
 17172                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 17173  1ED7  0140               	movlb	0	; select bank0
 17174  1ED8  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 17175  1ED9  0141               	movlb	1	; select bank1
 17176  1EDA  008E               	movwf	14	;volatile
 17177  1EDB  0008               	return
 17178  1EDC                     __end_of_ADCC_SetUpperThreshold:	
 17179                           
 17180                           	psect	text63
 17181  1ECA                     __ptext63:	
 17182 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17183 ;; Defined at:
 17184 ;;		line 317 in file "mcc_generated_files/adcc.c"
 17185 ;; Parameters:    Size  Location     Type
 17186 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 17187 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 17188 ;; Auto vars:     Size  Location     Type
 17189 ;;		None
 17190 ;; Return value:  Size  Location     Type
 17191 ;;                  1    wreg      void 
 17192 ;; Registers used:
 17193 ;;		wreg
 17194 ;; Tracked objects:
 17195 ;;		On entry : 0/0
 17196 ;;		On exit  : 0/0
 17197 ;;		Unchanged: 0/0
 17198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17202 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17203 ;;Total ram usage:        2 bytes
 17204 ;; Hardware stack levels used:    1
 17205 ;; Hardware stack levels required when called:    4
 17206 ;; This function calls:
 17207 ;;		Nothing
 17208 ;; This function is called by:
 17209 ;;		_ADCC_Initialize
 17210 ;;		_BEAT_init
 17211 ;; This function uses a non-reentrant model
 17212 ;;
 17213                           
 17214                           
 17215                           ;psect for function _ADCC_SetADTIInterruptHandler
 17216  1ECA                     _ADCC_SetADTIInterruptHandler:	
 17217                           
 17218                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 17219                           
 17220                           ;incstack = 0
 17221                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 17222  1ECA  0140               	movlb	0	; select bank0
 17223  1ECB  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 17224  1ECC  0142               	movlb	2	; select bank2
 17225  1ECD  00EB               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 17226  1ECE  0140               	movlb	0	; select bank0
 17227  1ECF  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 17228  1ED0  0142               	movlb	2	; select bank2
 17229  1ED1  00EA               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 17230  1ED2  0008               	return
 17231  1ED3                     __end_of_ADCC_SetADTIInterruptHandler:	
 17232                           
 17233                           	psect	intentry
 17234  0004                     __pintentry:	
 17235 ;; *************** function _INTERRUPT_InterruptManager *****************
 17236 ;; Defined at:
 17237 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17238 ;; Parameters:    Size  Location     Type
 17239 ;;		None
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;		None
 17242 ;; Return value:  Size  Location     Type
 17243 ;;                  1    wreg      void 
 17244 ;; Registers used:
 17245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17246 ;; Tracked objects:
 17247 ;;		On entry : 0/0
 17248 ;;		On exit  : 0/0
 17249 ;;		Unchanged: 0/0
 17250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17255 ;;Total ram usage:        0 bytes
 17256 ;; Hardware stack levels used:    1
 17257 ;; Hardware stack levels required when called:    3
 17258 ;; This function calls:
 17259 ;;		Absolute function
 17260 ;;		_ADCC_ThresholdISR
 17261 ;;		_DMX_ISR
 17262 ;;		_EUSART1_Receive_ISR
 17263 ;;		_EUSART1_Transmit_ISR
 17264 ;;		_I2C1_BusCollisionISR
 17265 ;;		_I2C1_ISR
 17266 ;;		_TMR0_ISR
 17267 ;; This function is called by:
 17268 ;;		Interrupt level 1
 17269 ;; This function uses a non-reentrant model
 17270 ;;
 17271                           
 17272  0004                     _INTERRUPT_InterruptManager:	
 17273                           
 17274                           ;incstack = 0
 17275  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17276                           
 17277                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17278  0005  3180               	pagesel	$
 17279                           
 17280                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17281  0006  014E               	movlb	14	; select bank14
 17282  0007  1A96               	btfsc	22,5	;volatile
 17283  0008  1E8C               	btfss	12,5	;volatile
 17284  0009  280E               	goto	i1l280
 17285                           
 17286                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17287  000A  3187  27F3  3180   	fcall	_TMR0_ISR
 17288                           
 17289                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17290  000D  2837               	goto	i1l294
 17291  000E                     i1l280:	
 17292                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17293                           
 17294  000E  1F0B               	btfss	11,6	;volatile
 17295  000F  2837               	goto	i1l294
 17296                           
 17297                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17298  0010  1899               	btfsc	25,1	;volatile
 17299  0011  1C8F               	btfss	15,1	;volatile
 17300  0012  2817               	goto	i1l283
 17301                           
 17302                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 17303  0013  319E  26A2  3180   	fcall	_I2C1_BusCollisionISR
 17304                           
 17305                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17306  0016  2837               	goto	i1l294
 17307  0017                     i1l283:	
 17308                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17309                           
 17310  0017  1819               	btfsc	25,0	;volatile
 17311  0018  1C0F               	btfss	15,0	;volatile
 17312  0019  281E               	goto	i1l285
 17313                           
 17314                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 17315  001A  318A  22DB  3180   	fcall	_I2C1_ISR
 17316                           
 17317                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17318  001D  2837               	goto	i1l294
 17319  001E                     i1l285:	
 17320                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 17321                           
 17322  001E  1A19               	btfsc	25,4	;volatile
 17323  001F  1E0F               	btfss	15,4	;volatile
 17324  0020  2828               	goto	i1l287
 17325                           
 17326                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 17327  0021  0143               	movlb	3	; select bank3
 17328  0022  0863               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384),w
 17329  0023  008A               	movwf	10
 17330  0024  0862               	movf	_EUSART1_TxDefaultInterruptHandler^(0+384),w
 17331  0025  000A               	callw
 17332  0026  3180               	pagesel	$
 17333                           
 17334                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17335  0027  2837               	goto	i1l294
 17336  0028                     i1l287:	
 17337                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 17338                           
 17339  0028  1A99               	btfsc	25,5	;volatile
 17340  0029  1E8F               	btfss	15,5	;volatile
 17341  002A  2832               	goto	i1l289
 17342                           
 17343                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 17344  002B  0143               	movlb	3	; select bank3
 17345  002C  0861               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 17346  002D  008A               	movwf	10
 17347  002E  0860               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 17348  002F  000A               	callw
 17349  0030  3180               	pagesel	$
 17350                           
 17351                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17352  0031  2837               	goto	i1l294
 17353  0032                     i1l289:	
 17354                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 17355                           
 17356  0032  1897               	btfsc	23,1	;volatile
 17357  0033  1C8D               	btfss	13,1	;volatile
 17358  0034  2837               	goto	i1l294
 17359                           
 17360                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 17361  0035  3190  2006         	fcall	_ADCC_ThresholdISR
 17362  0037                     i1l294:	
 17363                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17364                           
 17365  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17366  0038  0009               	retfie
 17367  0039                     __end_of_INTERRUPT_InterruptManager:	
 17368                           
 17369                           	psect	text65
 17370  07F3                     __ptext65:	
 17371 ;; *************** function _TMR0_ISR *****************
 17372 ;; Defined at:
 17373 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 17374 ;; Parameters:    Size  Location     Type
 17375 ;;		None
 17376 ;; Auto vars:     Size  Location     Type
 17377 ;;		None
 17378 ;; Return value:  Size  Location     Type
 17379 ;;                  1    wreg      void 
 17380 ;; Registers used:
 17381 ;;		wreg, status,2, status,0, pclath, cstack
 17382 ;; Tracked objects:
 17383 ;;		On entry : 0/0
 17384 ;;		On exit  : 0/0
 17385 ;;		Unchanged: 0/0
 17386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17391 ;;Total ram usage:        0 bytes
 17392 ;; Hardware stack levels used:    1
 17393 ;; Hardware stack levels required when called:    1
 17394 ;; This function calls:
 17395 ;;		Absolute function
 17396 ;;		_CLOCK_timerCallback
 17397 ;;		_TMR0_DefaultInterruptHandler
 17398 ;; This function is called by:
 17399 ;;		_INTERRUPT_InterruptManager
 17400 ;; This function uses a non-reentrant model
 17401 ;;
 17402                           
 17403                           
 17404                           ;psect for function _TMR0_ISR
 17405  07F3                     _TMR0_ISR:	
 17406                           
 17407                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 17408                           
 17409                           ;incstack = 0
 17410                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17411  07F3  014E               	movlb	14	; select bank14
 17412  07F4  128C               	bcf	12,5	;volatile
 17413                           
 17414                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 17415  07F5  0142               	movlb	2	; select bank2
 17416  07F6  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 17417  07F7  046D               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 17418  07F8  1903               	btfsc	3,2
 17419  07F9  0008               	return
 17420                           
 17421                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 17422  07FA  086D               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 17423  07FB  008A               	movwf	10
 17424  07FC  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 17425  07FD  000A               	callw
 17426  07FE  3187               	pagesel	$
 17427  07FF  0008               	return
 17428  0800                     __end_of_TMR0_ISR:	
 17429                           
 17430                           	psect	text66
 17431  1EBC                     __ptext66:	
 17432 ;; *************** function _CLOCK_timerCallback *****************
 17433 ;; Defined at:
 17434 ;;		line 21 in file "clock.c"
 17435 ;; Parameters:    Size  Location     Type
 17436 ;;		None
 17437 ;; Auto vars:     Size  Location     Type
 17438 ;;		None
 17439 ;; Return value:  Size  Location     Type
 17440 ;;                  1    wreg      void 
 17441 ;; Registers used:
 17442 ;;		wreg
 17443 ;; Tracked objects:
 17444 ;;		On entry : 0/0
 17445 ;;		On exit  : 0/0
 17446 ;;		Unchanged: 0/0
 17447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17452 ;;Total ram usage:        0 bytes
 17453 ;; Hardware stack levels used:    1
 17454 ;; This function calls:
 17455 ;;		Nothing
 17456 ;; This function is called by:
 17457 ;;		_CLOCK_init
 17458 ;;		_TMR0_ISR
 17459 ;; This function uses a non-reentrant model
 17460 ;;
 17461                           
 17462                           
 17463                           ;psect for function _CLOCK_timerCallback
 17464  1EBC                     _CLOCK_timerCallback:	
 17465                           
 17466                           ;clock.c: 22:     currentTime++;
 17467                           
 17468                           ;incstack = 0
 17469                           ; Regs used in _CLOCK_timerCallback: [wreg]
 17470  1EBC  3001               	movlw	1
 17471  1EBD  0142               	movlb	2	; select bank2
 17472  1EBE  07CB               	addwf	_currentTime^(0+256),f
 17473  1EBF  3000               	movlw	0
 17474  1EC0  3DCC               	addwfc	(_currentTime+1)^(0+256),f
 17475  1EC1  0008               	return
 17476  1EC2                     __end_of_CLOCK_timerCallback:	
 17477                           
 17478                           	psect	text67
 17479  0801                     __ptext67:	
 17480 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17481 ;; Defined at:
 17482 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 17483 ;; Parameters:    Size  Location     Type
 17484 ;;		None
 17485 ;; Auto vars:     Size  Location     Type
 17486 ;;		None
 17487 ;; Return value:  Size  Location     Type
 17488 ;;                  1    wreg      void 
 17489 ;; Registers used:
 17490 ;;		None
 17491 ;; Tracked objects:
 17492 ;;		On entry : 0/0
 17493 ;;		On exit  : 0/0
 17494 ;;		Unchanged: 0/0
 17495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17500 ;;Total ram usage:        0 bytes
 17501 ;; Hardware stack levels used:    1
 17502 ;; This function calls:
 17503 ;;		Nothing
 17504 ;; This function is called by:
 17505 ;;		_TMR0_Initialize
 17506 ;;		_TMR0_ISR
 17507 ;; This function uses a non-reentrant model
 17508 ;;
 17509                           
 17510                           
 17511                           ;psect for function _TMR0_DefaultInterruptHandler
 17512  0801                     _TMR0_DefaultInterruptHandler:	
 17513                           
 17514                           ;incstack = 0
 17515                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17516  0801  0008               	return
 17517  0802                     __end_of_TMR0_DefaultInterruptHandler:	
 17518                           
 17519                           	psect	text68
 17520  0ADB                     __ptext68:	
 17521 ;; *************** function _I2C1_ISR *****************
 17522 ;; Defined at:
 17523 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 17524 ;; Parameters:    Size  Location     Type
 17525 ;;		None
 17526 ;; Auto vars:     Size  Location     Type
 17527 ;;		None
 17528 ;; Return value:  Size  Location     Type
 17529 ;;                  1    wreg      void 
 17530 ;; Registers used:
 17531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17532 ;; Tracked objects:
 17533 ;;		On entry : 0/0
 17534 ;;		On exit  : 0/0
 17535 ;;		Unchanged: 0/0
 17536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17539 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17540 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17541 ;;Total ram usage:        4 bytes
 17542 ;; Hardware stack levels used:    1
 17543 ;; Hardware stack levels required when called:    1
 17544 ;; This function calls:
 17545 ;;		_I2C1_FunctionComplete
 17546 ;;		_I2C1_Stop
 17547 ;; This function is called by:
 17548 ;;		_INTERRUPT_InterruptManager
 17549 ;; This function uses a non-reentrant model
 17550 ;;
 17551                           
 17552                           
 17553                           ;psect for function _I2C1_ISR
 17554  0ADB                     _I2C1_ISR:	
 17555                           
 17556                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 17557                           
 17558                           ;incstack = 0
 17559                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17560  0ADB  014E               	movlb	14	; select bank14
 17561  0ADC  100F               	bcf	15,0	;volatile
 17562                           
 17563                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 17564  0ADD  0143               	movlb	3	; select bank3
 17565  0ADE  1F90               	btfss	16,7	;volatile
 17566  0ADF  2C0D               	goto	i1l4932
 17567                           
 17568                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 17569  0AE0  1390               	bcf	16,7	;volatile
 17570                           
 17571                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 17572  0AE1  0141               	movlb	1	; select bank1
 17573  0AE2  01EC               	clrf	_i2c1_state^(0+128)
 17574                           
 17575                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 17576  0AE3  086A               	movf	_p_i2c1_current^(0+128),w
 17577  0AE4  3E02               	addlw	2
 17578  0AE5  0086               	movwf	6
 17579  0AE6  3001               	movlw	1	; select bank2/3
 17580  0AE7  0087               	movwf	7
 17581  0AE8  0801               	movf	1,w
 17582  0AE9  0086               	movwf	6
 17583  0AEA  0187               	clrf	7
 17584  0AEB  0181               	clrf	1
 17585  0AEC  0A81               	incf	1,f
 17586                           
 17587                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 17588  0AED  01EA               	clrf	_p_i2c1_current^(0+128)
 17589  0AEE  0008               	return
 17590  0AEF                     i1l402:	
 17591                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 17592                           
 17593                           
 17594                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 17595  0AEF  0142               	movlb	2	; select bank2
 17596  0AF0  18A2               	btfsc	(_i2c1_object^(0+256)+2),1
 17597  0AF1  0008               	return
 17598                           
 17599                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 17600  0AF2  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17601  0AF3  00F2               	movwf	??_I2C1_ISR
 17602  0AF4  0872               	movf	??_I2C1_ISR,w
 17603  0AF5  0141               	movlb	1	; select bank1
 17604  0AF6  00EA               	movwf	_p_i2c1_current^(0+128)
 17605                           
 17606                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 17607  0AF7  0142               	movlb	2	; select bank2
 17608  0AF8  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17609  0AF9  0086               	movwf	6
 17610  0AFA  3001               	movlw	1	; select bank2/3
 17611  0AFB  0087               	movwf	7
 17612  0AFC  0801               	movf	1,w
 17613  0AFD  00F2               	movwf	??_I2C1_ISR
 17614  0AFE  0872               	movf	??_I2C1_ISR,w
 17615  0AFF  00DB               	movwf	_i2c1_trb_count^(0+256)
 17616                           
 17617                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 17618  0B00  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17619  0B01  0086               	movwf	6
 17620  0B02  3001               	movlw	1	; select bank2/3
 17621  0B03  0087               	movwf	7
 17622  0B04  3001               	movlw	1	; select bank2/3
 17623  0B05  3F41               	moviw [1]fsr1
 17624  0B06  0141               	movlb	1	; select bank1
 17625  0B07  00EB               	movwf	_p_i2c1_trb_current^(0+128)
 17626                           
 17627                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 17628  0B08  3003               	movlw	3
 17629  0B09  00F2               	movwf	??_I2C1_ISR
 17630  0B0A  0872               	movf	??_I2C1_ISR,w
 17631  0B0B  0142               	movlb	2	; select bank2
 17632  0B0C  07A1               	addwf	(low ((_i2c1_object| (0+256)+1)))^0,f
 17633                           
 17634                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 17635  0B0D  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17636  0B0E  3A64               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 17637  0B0F  1D03               	skipz
 17638  0B10  2B15               	goto	i1l4820
 17639                           
 17640                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 17641  0B11  3061               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 17642  0B12  00F2               	movwf	??_I2C1_ISR
 17643  0B13  0872               	movf	??_I2C1_ISR,w
 17644  0B14  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
 17645  0B15                     i1l4820:	
 17646                           
 17647                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 17648  0B15  1022               	bcf	(_i2c1_object^(0+256)+2),0
 17649                           
 17650                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 17651  0B16  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17652  0B17  0620               	xorwf	_i2c1_object^(0+256),w
 17653  0B18  1903               	btfsc	3,2
 17654                           
 17655                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 17656  0B19  14A2               	bsf	(_i2c1_object^(0+256)+2),1
 17657                           
 17658                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 17659                           
 17660                           ;mcc_generated_files/i2c1.c: 290:                 }
 17661  0B1A  0143               	movlb	3	; select bank3
 17662  0B1B  1411               	bsf	17,0	;volatile
 17663  0B1C                     i1l4824:	
 17664                           
 17665                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 17666  0B1C  3002               	movlw	2
 17667  0B1D  00F2               	movwf	??_I2C1_ISR
 17668  0B1E  0872               	movf	??_I2C1_ISR,w
 17669  0B1F  0141               	movlb	1	; select bank1
 17670  0B20  00EC               	movwf	_i2c1_state^(0+128)
 17671  0B21  0008               	return
 17672  0B22                     i1l407:	
 17673                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 17674                           
 17675  0B22  2BB5               	goto	i1l428
 17676  0B23                     i1l408:	
 17677                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 17678                           
 17679                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 17680                           
 17681                           
 17682                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 17683  0B23  0143               	movlb	3	; select bank3
 17684  0B24  1F11               	btfss	17,6	;volatile
 17685  0B25  2B2F               	goto	i1l4832
 17686                           
 17687                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 17688  0B26  3001               	movlw	1
 17689  0B27  00F2               	movwf	??_I2C1_ISR
 17690  0B28  0872               	movf	??_I2C1_ISR,w
 17691  0B29  0142               	movlb	2	; select bank2
 17692  0B2A  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 17693                           
 17694                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17695  0B2B  3004               	movlw	4
 17696  0B2C  3190  2043         	fcall	_I2C1_Stop
 17697                           
 17698                           ;mcc_generated_files/i2c1.c: 319:             }
 17699  0B2E  0008               	return
 17700  0B2F                     i1l4832:	
 17701                           
 17702                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 17703  0B2F  0879               	movf	I2C1_ISR@i2c_address+1,w
 17704  0B30  00F3               	movwf	??_I2C1_ISR+1
 17705  0B31  0878               	movf	I2C1_ISR@i2c_address,w
 17706  0B32  00F2               	movwf	??_I2C1_ISR
 17707  0B33  36F3               	lsrf	??_I2C1_ISR+1,f
 17708  0B34  0CF2               	rrf	??_I2C1_ISR,f
 17709  0B35  0872               	movf	??_I2C1_ISR,w
 17710  0B36  008C               	movwf	12	;volatile
 17711                           
 17712                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 17713  0B37  1C78               	btfss	I2C1_ISR@i2c_address,0
 17714  0B38  2B3F               	goto	i1l4838
 17715                           
 17716                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 17717  0B39  300B               	movlw	11
 17718  0B3A  00F2               	movwf	??_I2C1_ISR
 17719  0B3B  0872               	movf	??_I2C1_ISR,w
 17720  0B3C  0141               	movlb	1	; select bank1
 17721  0B3D  00EC               	movwf	_i2c1_state^(0+128)
 17722                           
 17723                           ;mcc_generated_files/i2c1.c: 331:                 }
 17724  0B3E  0008               	return
 17725  0B3F                     i1l4838:	
 17726                           
 17727                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 17728  0B3F  3003               	movlw	3
 17729  0B40  00F2               	movwf	??_I2C1_ISR
 17730  0B41  0872               	movf	??_I2C1_ISR,w
 17731  0B42  0141               	movlb	1	; select bank1
 17732  0B43  00EC               	movwf	_i2c1_state^(0+128)
 17733  0B44  0008               	return
 17734  0B45                     i1l413:	
 17735                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 17736                           
 17737                           
 17738                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 17739  0B45  0143               	movlb	3	; select bank3
 17740  0B46  1F11               	btfss	17,6	;volatile
 17741  0B47  2B51               	goto	i1l414
 17742                           
 17743                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 17744  0B48  3001               	movlw	1
 17745  0B49  00F2               	movwf	??_I2C1_ISR
 17746  0B4A  0872               	movf	??_I2C1_ISR,w
 17747  0B4B  0142               	movlb	2	; select bank2
 17748  0B4C  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 17749                           
 17750                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17751  0B4D  3004               	movlw	4
 17752  0B4E  3190  2043         	fcall	_I2C1_Stop
 17753                           
 17754                           ;mcc_generated_files/i2c1.c: 347:             }
 17755  0B50  0008               	return
 17756  0B51                     i1l414:	
 17757                           ;mcc_generated_files/i2c1.c: 348:             else
 17758                           
 17759                           
 17760                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 17761  0B51  1491               	bsf	17,1	;volatile
 17762                           
 17763                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 17764  0B52  0879               	movf	I2C1_ISR@i2c_address+1,w
 17765  0B53  00F3               	movwf	??_I2C1_ISR+1
 17766  0B54  0878               	movf	I2C1_ISR@i2c_address,w
 17767  0B55  00F2               	movwf	??_I2C1_ISR
 17768  0B56  0873               	movf	??_I2C1_ISR+1,w
 17769  0B57  00F2               	movwf	??_I2C1_ISR
 17770  0B58  01F3               	clrf	??_I2C1_ISR+1
 17771  0B59  3006               	movlw	6
 17772  0B5A  0572               	andwf	??_I2C1_ISR,w
 17773  0B5B  00F4               	movwf	??_I2C1_ISR+2
 17774  0B5C  3000               	movlw	0
 17775  0B5D  0573               	andwf	??_I2C1_ISR+1,w
 17776  0B5E  00F5               	movwf	??_I2C1_ISR+3
 17777  0B5F  30F0               	movlw	240
 17778  0B60  0474               	iorwf	??_I2C1_ISR+2,w
 17779  0B61  00F8               	movwf	I2C1_ISR@i2c_address
 17780  0B62  3000               	movlw	0
 17781  0B63  0475               	iorwf	??_I2C1_ISR+3,w
 17782  0B64  00F9               	movwf	I2C1_ISR@i2c_address+1
 17783                           
 17784                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 17785  0B65  1478               	bsf	I2C1_ISR@i2c_address,0
 17786                           
 17787                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 17788  0B66  0142               	movlb	2	; select bank2
 17789  0B67  01D8               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+256)
 17790  0B68  0AD8               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+256),f
 17791  0B69  2B1C               	goto	i1l4824
 17792  0B6A                     i1l4852:	
 17793                           
 17794                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 17795  0B6A  0142               	movlb	2	; select bank2
 17796  0B6B  0358               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+256),w
 17797  0B6C  1903               	btfsc	3,2
 17798  0B6D  2B88               	goto	i1l4872
 17799                           
 17800                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 17801  0B6E  0141               	movlb	1	; select bank1
 17802  0B6F  086B               	movf	_p_i2c1_trb_current^(0+128),w
 17803  0B70  0086               	movwf	6
 17804  0B71  3001               	movlw	1	; select bank2/3
 17805  0B72  0087               	movwf	7
 17806  0B73  3F40               	moviw [0]fsr1
 17807  0B74  00F8               	movwf	I2C1_ISR@i2c_address
 17808  0B75  3F41               	moviw [1]fsr1
 17809  0B76  00F9               	movwf	I2C1_ISR@i2c_address+1
 17810                           
 17811                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 17812  0B77  086B               	movf	_p_i2c1_trb_current^(0+128),w
 17813  0B78  0086               	movwf	6
 17814  0B79  3001               	movlw	1	; select bank2/3
 17815  0B7A  0087               	movwf	7
 17816  0B7B  3001               	movlw	1	; select bank2/3
 17817  0B7C  3F43               	moviw [3]fsr1
 17818  0B7D  0142               	movlb	2	; select bank2
 17819  0B7E  00DA               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+256)
 17820                           
 17821                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 17822  0B7F  0141               	movlb	1	; select bank1
 17823  0B80  086B               	movf	_p_i2c1_trb_current^(0+128),w
 17824  0B81  0086               	movwf	6
 17825  0B82  3001               	movlw	1	; select bank2/3
 17826  0B83  0087               	movwf	7
 17827  0B84  3001               	movlw	1	; select bank2/3
 17828  0B85  3F42               	moviw [2]fsr1
 17829  0B86  0142               	movlb	2	; select bank2
 17830  0B87  00D9               	movwf	I2C1_ISR@i2c_bytes_left^(0+256)
 17831  0B88                     i1l4872:	
 17832                           
 17833                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 17834  0B88  0878               	movf	I2C1_ISR@i2c_address,w
 17835  0B89  0143               	movlb	3	; select bank3
 17836  0B8A  008C               	movwf	12	;volatile
 17837                           
 17838                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 17839  0B8B  1C78               	btfss	I2C1_ISR@i2c_address,0
 17840  0B8C  2B3F               	goto	i1l4838
 17841                           
 17842                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 17843  0B8D  3005               	movlw	5
 17844  0B8E  00F2               	movwf	??_I2C1_ISR
 17845  0B8F  0872               	movf	??_I2C1_ISR,w
 17846  0B90  0141               	movlb	1	; select bank1
 17847  0B91  00EC               	movwf	_i2c1_state^(0+128)
 17848                           
 17849                           ;mcc_generated_files/i2c1.c: 419:                 }
 17850  0B92  0008               	return
 17851  0B93                     i1l424:	
 17852                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 17853                           
 17854                           
 17855                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 17856  0B93  0143               	movlb	3	; select bank3
 17857  0B94  1F11               	btfss	17,6	;volatile
 17858  0B95  2BA1               	goto	i1l4886
 17859                           
 17860                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 17861  0B96  3001               	movlw	1
 17862  0B97  00F2               	movwf	??_I2C1_ISR
 17863  0B98  0872               	movf	??_I2C1_ISR,w
 17864  0B99  0142               	movlb	2	; select bank2
 17865  0B9A  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 17866                           
 17867                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 17868  0B9B  0143               	movlb	3	; select bank3
 17869  0B9C  1311               	bcf	17,6	;volatile
 17870                           
 17871                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 17872  0B9D  3005               	movlw	5
 17873  0B9E  3190  2043         	fcall	_I2C1_Stop
 17874                           
 17875                           ;mcc_generated_files/i2c1.c: 442:             }
 17876  0BA0  0008               	return
 17877  0BA1                     i1l4886:	
 17878                           
 17879                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 17880  0BA1  3001               	movlw	1
 17881  0BA2  0142               	movlb	2	; select bank2
 17882  0BA3  02D9               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 17883  0BA4  0A59               	incf	I2C1_ISR@i2c_bytes_left^(0+256),w
 17884  0BA5  1D03               	btfss	3,2
 17885  0BA6  2BB8               	goto	i1l4894
 17886                           
 17887                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 17888  0BA7  3004               	movlw	4
 17889  0BA8  00F2               	movwf	??_I2C1_ISR
 17890  0BA9  0872               	movf	??_I2C1_ISR,w
 17891  0BAA  0141               	movlb	1	; select bank1
 17892  0BAB  07EB               	addwf	_p_i2c1_trb_current^(0+128),f
 17893                           
 17894                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 17895  0BAC  3001               	movlw	1
 17896  0BAD  0142               	movlb	2	; select bank2
 17897  0BAE  02DB               	subwf	_i2c1_trb_count^(0+256),f
 17898  0BAF  1D03               	btfss	3,2
 17899  0BB0  2BB5               	goto	i1l428
 17900                           
 17901                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 17902  0BB1  3000               	movlw	0
 17903  0BB2  3190  2043         	fcall	_I2C1_Stop
 17904                           
 17905                           ;mcc_generated_files/i2c1.c: 457:                     }
 17906  0BB4  0008               	return
 17907  0BB5                     i1l428:	
 17908                           ;mcc_generated_files/i2c1.c: 458:                     else
 17909                           
 17910                           
 17911                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 17912  0BB5  0143               	movlb	3	; select bank3
 17913  0BB6  1491               	bsf	17,1	;volatile
 17914  0BB7  2B1C               	goto	i1l4824
 17915  0BB8                     i1l4894:	
 17916                           
 17917                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 17918  0BB8  085A               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 17919  0BB9  0086               	movwf	6
 17920  0BBA  0187               	clrf	7
 17921  0BBB  0801               	movf	1,w
 17922  0BBC  0143               	movlb	3	; select bank3
 17923  0BBD  008C               	movwf	12	;volatile
 17924  0BBE  3001               	movlw	1
 17925  0BBF  00F2               	movwf	??_I2C1_ISR
 17926  0BC0  0872               	movf	??_I2C1_ISR,w
 17927  0BC1  0142               	movlb	2	; select bank2
 17928  0BC2  07DA               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 17929  0BC3  0008               	return
 17930  0BC4                     i1l431:	
 17931                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 17932                           
 17933                           
 17934                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 17935  0BC4  0143               	movlb	3	; select bank3
 17936  0BC5  1F11               	btfss	17,6	;volatile
 17937  0BC6  2BD2               	goto	i1l432
 17938                           
 17939                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 17940  0BC7  3001               	movlw	1
 17941  0BC8  00F2               	movwf	??_I2C1_ISR
 17942  0BC9  0872               	movf	??_I2C1_ISR,w
 17943  0BCA  0142               	movlb	2	; select bank2
 17944  0BCB  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 17945                           
 17946                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17947  0BCC  3004               	movlw	4
 17948  0BCD  3190  2043         	fcall	_I2C1_Stop
 17949                           
 17950                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 17951  0BCF  0143               	movlb	3	; select bank3
 17952  0BD0  1311               	bcf	17,6	;volatile
 17953                           
 17954                           ;mcc_generated_files/i2c1.c: 495:             }
 17955  0BD1  0008               	return
 17956  0BD2                     i1l432:	
 17957                           ;mcc_generated_files/i2c1.c: 496:             else
 17958                           
 17959                           
 17960                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 17961  0BD2  1591               	bsf	17,3	;volatile
 17962                           
 17963                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 17964  0BD3  3008               	movlw	8
 17965  0BD4  00F2               	movwf	??_I2C1_ISR
 17966  0BD5  0872               	movf	??_I2C1_ISR,w
 17967  0BD6  0141               	movlb	1	; select bank1
 17968  0BD7  00EC               	movwf	_i2c1_state^(0+128)
 17969  0BD8  0008               	return
 17970  0BD9                     i1l4906:	
 17971                           
 17972                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 17973  0BD9  3008               	movlw	8
 17974  0BDA  00F2               	movwf	??_I2C1_ISR
 17975  0BDB  0872               	movf	??_I2C1_ISR,w
 17976  0BDC  00EC               	movwf	_i2c1_state^(0+128)
 17977                           
 17978                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 17979  0BDD  0143               	movlb	3	; select bank3
 17980  0BDE  1591               	bsf	17,3	;volatile
 17981                           
 17982                           ;mcc_generated_files/i2c1.c: 513:             break;
 17983  0BDF  0008               	return
 17984  0BE0                     i1l4910:	
 17985                           
 17986                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 17987  0BE0  0143               	movlb	3	; select bank3
 17988  0BE1  080C               	movf	12,w	;volatile
 17989  0BE2  00F2               	movwf	??_I2C1_ISR
 17990  0BE3  0142               	movlb	2	; select bank2
 17991  0BE4  085A               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 17992  0BE5  0086               	movwf	6
 17993  0BE6  0187               	clrf	7
 17994  0BE7  0872               	movf	??_I2C1_ISR,w
 17995  0BE8  0081               	movwf	1
 17996  0BE9  3001               	movlw	1
 17997  0BEA  00F2               	movwf	??_I2C1_ISR
 17998  0BEB  0872               	movf	??_I2C1_ISR,w
 17999  0BEC  07DA               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 18000                           
 18001                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 18002  0BED  3001               	movlw	1
 18003  0BEE  02D9               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 18004  0BEF  1903               	btfsc	3,2
 18005  0BF0  2BF9               	goto	i1l436
 18006                           
 18007                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 18008  0BF1  0143               	movlb	3	; select bank3
 18009  0BF2  1291               	bcf	17,5	;volatile
 18010                           
 18011                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 18012  0BF3  3006               	movlw	6
 18013  0BF4  00F2               	movwf	??_I2C1_ISR
 18014  0BF5  0872               	movf	??_I2C1_ISR,w
 18015  0BF6  0141               	movlb	1	; select bank1
 18016  0BF7  00EC               	movwf	_i2c1_state^(0+128)
 18017                           
 18018                           ;mcc_generated_files/i2c1.c: 532:             }
 18019  0BF8  2BFD               	goto	i1l4922
 18020  0BF9                     i1l436:	
 18021                           ;mcc_generated_files/i2c1.c: 533:             else
 18022                           
 18023                           
 18024                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 18025  0BF9  0143               	movlb	3	; select bank3
 18026  0BFA  1691               	bsf	17,5	;volatile
 18027                           
 18028                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 18029  0BFB  319F  2758         	fcall	_I2C1_FunctionComplete
 18030  0BFD                     i1l4922:	
 18031                           
 18032                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 18033  0BFD  0143               	movlb	3	; select bank3
 18034  0BFE  1611               	bsf	17,4	;volatile
 18035                           
 18036                           ;mcc_generated_files/i2c1.c: 545:             break;
 18037  0BFF  0008               	return
 18038  0C00                     i1l4924:	
 18039                           
 18040                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18041  0C00  3000               	movlw	0
 18042  0C01  3190  2043         	fcall	_I2C1_Stop
 18043                           
 18044                           ;mcc_generated_files/i2c1.c: 552:             break;
 18045  0C03  0008               	return
 18046  0C04                     i1l4926:	
 18047                           
 18048                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 18049  0C04  3001               	movlw	1
 18050  0C05  00F2               	movwf	??_I2C1_ISR
 18051  0C06  0872               	movf	??_I2C1_ISR,w
 18052  0C07  0142               	movlb	2	; select bank2
 18053  0C08  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18054                           
 18055                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 18056  0C09  3006               	movlw	6
 18057  0C0A  3190  2043         	fcall	_I2C1_Stop
 18058                           
 18059                           ;mcc_generated_files/i2c1.c: 560:             break;
 18060  0C0C  0008               	return
 18061  0C0D                     i1l4932:	
 18062  0C0D  0141               	movlb	1	; select bank1
 18063  0C0E  086C               	movf	_i2c1_state^(0+128),w
 18064  0C0F  00F2               	movwf	??_I2C1_ISR
 18065  0C10  01F3               	clrf	??_I2C1_ISR+1
 18066                           
 18067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18068                           ; Switch size 1, requested type "simple"
 18069                           ; Number of cases is 1, Range of values is 0 to 0
 18070                           ; switch strategies available:
 18071                           ; Name         Instructions Cycles
 18072                           ; simple_byte            4     3 (average)
 18073                           ; direct_byte            8     6 (fixed)
 18074                           ; jumptable            260     6 (fixed)
 18075                           ;	Chosen strategy is simple_byte
 18076  0C11  0873               	movf	??_I2C1_ISR+1,w
 18077  0C12  3A00               	xorlw	0	; case 0
 18078  0C13  1903               	skipnz
 18079  0C14  2C16               	goto	i1l6236
 18080  0C15  2C04               	goto	i1l4926
 18081  0C16                     i1l6236:	
 18082                           
 18083                           ; Switch size 1, requested type "simple"
 18084                           ; Number of cases is 11, Range of values is 0 to 11
 18085                           ; switch strategies available:
 18086                           ; Name         Instructions Cycles
 18087                           ; direct_byte           30     6 (fixed)
 18088                           ; simple_byte           34    18 (average)
 18089                           ; jumptable            260     6 (fixed)
 18090                           ;	Chosen strategy is simple_byte
 18091  0C16  0872               	movf	??_I2C1_ISR,w
 18092  0C17  3A00               	xorlw	0	; case 0
 18093  0C18  1903               	skipnz
 18094  0C19  2AEF               	goto	i1l402
 18095  0C1A  3A01               	xorlw	1	; case 1
 18096  0C1B  1903               	skipnz
 18097  0C1C  2B22               	goto	i1l407
 18098  0C1D  3A03               	xorlw	3	; case 2
 18099  0C1E  1903               	skipnz
 18100  0C1F  2B6A               	goto	i1l4852
 18101  0C20  3A01               	xorlw	1	; case 3
 18102  0C21  1903               	skipnz
 18103  0C22  2B93               	goto	i1l424
 18104  0C23  3A07               	xorlw	7	; case 4
 18105  0C24  1903               	skipnz
 18106  0C25  2C00               	goto	i1l4924
 18107  0C26  3A01               	xorlw	1	; case 5
 18108  0C27  1903               	skipnz
 18109  0C28  2BC4               	goto	i1l431
 18110  0C29  3A03               	xorlw	3	; case 6
 18111  0C2A  1903               	skipnz
 18112  0C2B  2BD9               	goto	i1l4906
 18113  0C2C  3A01               	xorlw	1	; case 7
 18114  0C2D  1903               	skipnz
 18115  0C2E  2C00               	goto	i1l4924
 18116  0C2F  3A0F               	xorlw	15	; case 8
 18117  0C30  1903               	skipnz
 18118  0C31  2BE0               	goto	i1l4910
 18119  0C32  3A02               	xorlw	2	; case 10
 18120  0C33  1903               	skipnz
 18121  0C34  2B23               	goto	i1l408
 18122  0C35  3A01               	xorlw	1	; case 11
 18123  0C36  1903               	skipnz
 18124  0C37  2B45               	goto	i1l413
 18125  0C38  2C04               	goto	i1l4926
 18126  0C39  0008               	return
 18127  0C3A                     __end_of_I2C1_ISR:	
 18128                           
 18129                           	psect	text69
 18130  1043                     __ptext69:	
 18131 ;; *************** function _I2C1_Stop *****************
 18132 ;; Defined at:
 18133 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 18134 ;; Parameters:    Size  Location     Type
 18135 ;;  completion_c    1    wreg     enum E10866
 18136 ;; Auto vars:     Size  Location     Type
 18137 ;;  completion_c    1    1[COMMON] enum E10866
 18138 ;; Return value:  Size  Location     Type
 18139 ;;                  1    wreg      void 
 18140 ;; Registers used:
 18141 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18142 ;; Tracked objects:
 18143 ;;		On entry : 0/0
 18144 ;;		On exit  : 0/0
 18145 ;;		Unchanged: 0/0
 18146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18151 ;;Total ram usage:        2 bytes
 18152 ;; Hardware stack levels used:    1
 18153 ;; This function calls:
 18154 ;;		Nothing
 18155 ;; This function is called by:
 18156 ;;		_I2C1_ISR
 18157 ;; This function uses a non-reentrant model
 18158 ;;
 18159                           
 18160                           
 18161                           ;psect for function _I2C1_Stop
 18162  1043                     _I2C1_Stop:	
 18163                           
 18164                           ;incstack = 0
 18165                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 18166                           ;I2C1_Stop@completion_code stored from wreg
 18167  1043  00F1               	movwf	I2C1_Stop@completion_code
 18168                           
 18169                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 18170  1044  0143               	movlb	3	; select bank3
 18171  1045  1511               	bsf	17,2	;volatile
 18172                           
 18173                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 18174  1046  0141               	movlb	1	; select bank1
 18175  1047  086A               	movf	_p_i2c1_current^(0+128),w
 18176  1048  3E02               	addlw	2
 18177  1049  0086               	movwf	6
 18178  104A  3001               	movlw	1	; select bank2/3
 18179  104B  0087               	movwf	7
 18180  104C  0801               	movf	1,w
 18181  104D  1903               	btfsc	3,2
 18182  104E  285B               	goto	i1l4570
 18183                           
 18184                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 18185  104F  0871               	movf	I2C1_Stop@completion_code,w
 18186  1050  00F0               	movwf	??_I2C1_Stop
 18187  1051  086A               	movf	_p_i2c1_current^(0+128),w
 18188  1052  3E02               	addlw	2
 18189  1053  0086               	movwf	6
 18190  1054  3001               	movlw	1	; select bank2/3
 18191  1055  0087               	movwf	7
 18192  1056  0801               	movf	1,w
 18193  1057  0086               	movwf	6
 18194  1058  0187               	clrf	7
 18195  1059  0870               	movf	??_I2C1_Stop,w
 18196  105A  0081               	movwf	1
 18197  105B                     i1l4570:	
 18198                           
 18199                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 18200  105B  01EC               	clrf	_i2c1_state^(0+128)
 18201  105C  0008               	return
 18202  105D                     __end_of_I2C1_Stop:	
 18203                           
 18204                           	psect	text70
 18205  1F58                     __ptext70:	
 18206 ;; *************** function _I2C1_FunctionComplete *****************
 18207 ;; Defined at:
 18208 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 18209 ;; Parameters:    Size  Location     Type
 18210 ;;		None
 18211 ;; Auto vars:     Size  Location     Type
 18212 ;;		None
 18213 ;; Return value:  Size  Location     Type
 18214 ;;                  1    wreg      void 
 18215 ;; Registers used:
 18216 ;;		wreg, status,2, status,0
 18217 ;; Tracked objects:
 18218 ;;		On entry : 0/0
 18219 ;;		On exit  : 0/0
 18220 ;;		Unchanged: 0/0
 18221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18226 ;;Total ram usage:        1 bytes
 18227 ;; Hardware stack levels used:    1
 18228 ;; This function calls:
 18229 ;;		Nothing
 18230 ;; This function is called by:
 18231 ;;		_I2C1_ISR
 18232 ;; This function uses a non-reentrant model
 18233 ;;
 18234                           
 18235                           
 18236                           ;psect for function _I2C1_FunctionComplete
 18237  1F58                     _I2C1_FunctionComplete:	
 18238                           
 18239                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 18240                           
 18241                           ;incstack = 0
 18242                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 18243  1F58  3004               	movlw	4
 18244  1F59  00F0               	movwf	??_I2C1_FunctionComplete
 18245  1F5A  0870               	movf	??_I2C1_FunctionComplete,w
 18246  1F5B  0141               	movlb	1	; select bank1
 18247  1F5C  07EB               	addwf	_p_i2c1_trb_current^(0+128),f
 18248                           
 18249                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 18250  1F5D  3001               	movlw	1
 18251  1F5E  0142               	movlb	2	; select bank2
 18252  1F5F  02DB               	subwf	_i2c1_trb_count^(0+256),f
 18253  1F60  1D03               	btfss	3,2
 18254  1F61  2F68               	goto	i1l443
 18255                           
 18256                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 18257  1F62  3004               	movlw	4
 18258  1F63  00F0               	movwf	??_I2C1_FunctionComplete
 18259  1F64  0870               	movf	??_I2C1_FunctionComplete,w
 18260  1F65  0141               	movlb	1	; select bank1
 18261  1F66  00EC               	movwf	_i2c1_state^(0+128)
 18262                           
 18263                           ;mcc_generated_files/i2c1.c: 575:     }
 18264  1F67  0008               	return
 18265  1F68                     i1l443:	
 18266                           ;mcc_generated_files/i2c1.c: 576:     else
 18267                           
 18268                           
 18269                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 18270  1F68  0141               	movlb	1	; select bank1
 18271  1F69  01EC               	clrf	_i2c1_state^(0+128)
 18272  1F6A  0AEC               	incf	_i2c1_state^(0+128),f
 18273  1F6B  0008               	return
 18274  1F6C                     __end_of_I2C1_FunctionComplete:	
 18275                           
 18276                           	psect	text71
 18277  1EA2                     __ptext71:	
 18278 ;; *************** function _I2C1_BusCollisionISR *****************
 18279 ;; Defined at:
 18280 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 18281 ;; Parameters:    Size  Location     Type
 18282 ;;		None
 18283 ;; Auto vars:     Size  Location     Type
 18284 ;;		None
 18285 ;; Return value:  Size  Location     Type
 18286 ;;                  1    wreg      void 
 18287 ;; Registers used:
 18288 ;;		None
 18289 ;; Tracked objects:
 18290 ;;		On entry : 0/0
 18291 ;;		On exit  : 0/0
 18292 ;;		Unchanged: 0/0
 18293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18298 ;;Total ram usage:        0 bytes
 18299 ;; Hardware stack levels used:    1
 18300 ;; This function calls:
 18301 ;;		Nothing
 18302 ;; This function is called by:
 18303 ;;		_INTERRUPT_InterruptManager
 18304 ;; This function uses a non-reentrant model
 18305 ;;
 18306                           
 18307                           
 18308                           ;psect for function _I2C1_BusCollisionISR
 18309  1EA2                     _I2C1_BusCollisionISR:	
 18310                           
 18311                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 18312                           
 18313                           ;incstack = 0
 18314                           ; Regs used in _I2C1_BusCollisionISR: []
 18315  1EA2  014E               	movlb	14	; select bank14
 18316  1EA3  108F               	bcf	15,1	;volatile
 18317  1EA4  0008               	return
 18318  1EA5                     __end_of_I2C1_BusCollisionISR:	
 18319                           
 18320                           	psect	text72
 18321  10D1                     __ptext72:	
 18322 ;; *************** function _EUSART1_Transmit_ISR *****************
 18323 ;; Defined at:
 18324 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 18325 ;; Parameters:    Size  Location     Type
 18326 ;;		None
 18327 ;; Auto vars:     Size  Location     Type
 18328 ;;		None
 18329 ;; Return value:  Size  Location     Type
 18330 ;;                  1    wreg      void 
 18331 ;; Registers used:
 18332 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18333 ;; Tracked objects:
 18334 ;;		On entry : 0/0
 18335 ;;		On exit  : 0/0
 18336 ;;		Unchanged: 0/0
 18337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18342 ;;Total ram usage:        1 bytes
 18343 ;; Hardware stack levels used:    1
 18344 ;; This function calls:
 18345 ;;		Nothing
 18346 ;; This function is called by:
 18347 ;;		_EUSART1_Initialize
 18348 ;;		_INTERRUPT_InterruptManager
 18349 ;; This function uses a non-reentrant model
 18350 ;;
 18351                           
 18352                           
 18353                           ;psect for function _EUSART1_Transmit_ISR
 18354  10D1                     _EUSART1_Transmit_ISR:	
 18355                           
 18356                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 18357                           
 18358                           ;incstack = 0
 18359                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18360  10D1  3008               	movlw	8
 18361  10D2  0142               	movlb	2	; select bank2
 18362  10D3  026E               	subwf	_eusart1TxBufferRemaining^(0+256),w	;volatile
 18363  10D4  1803               	skipnc
 18364  10D5  28EE               	goto	i1l106
 18365                           
 18366                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 18367  10D6  0141               	movlb	1	; select bank1
 18368  10D7  086E               	movf	_eusart1TxTail^(0+128),w
 18369  10D8  3EBA               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 18370  10D9  0086               	movwf	6
 18371  10DA  3001               	movlw	1	; select bank3/4
 18372  10DB  0087               	movwf	7
 18373  10DC  0801               	movf	1,w
 18374  10DD  0142               	movlb	2	; select bank2
 18375  10DE  009A               	movwf	26	;volatile
 18376  10DF  3001               	movlw	1
 18377  10E0  00F0               	movwf	??_EUSART1_Transmit_ISR
 18378  10E1  0870               	movf	??_EUSART1_Transmit_ISR,w
 18379  10E2  0141               	movlb	1	; select bank1
 18380  10E3  07EE               	addwf	_eusart1TxTail^(0+128),f	;volatile
 18381                           
 18382                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 18383  10E4  3008               	movlw	8
 18384  10E5  026E               	subwf	_eusart1TxTail^(0+128),w	;volatile
 18385  10E6  1803               	btfsc	3,0
 18386                           
 18387                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 18388  10E7  01EE               	clrf	_eusart1TxTail^(0+128)	;volatile
 18389                           
 18390                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 18391  10E8  3001               	movlw	1
 18392  10E9  00F0               	movwf	??_EUSART1_Transmit_ISR
 18393  10EA  0870               	movf	??_EUSART1_Transmit_ISR,w
 18394  10EB  0142               	movlb	2	; select bank2
 18395  10EC  07EE               	addwf	_eusart1TxBufferRemaining^(0+256),f	;volatile
 18396                           
 18397                           ;mcc_generated_files/eusart1.c: 206:     }
 18398  10ED  0008               	return
 18399  10EE                     i1l106:	
 18400                           ;mcc_generated_files/eusart1.c: 207:     else
 18401                           
 18402                           
 18403                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 18404  10EE  014E               	movlb	14	; select bank14
 18405  10EF  1219               	bcf	25,4	;volatile
 18406  10F0  0008               	return
 18407  10F1                     __end_of_EUSART1_Transmit_ISR:	
 18408                           
 18409                           	psect	text73
 18410  1175                     __ptext73:	
 18411 ;; *************** function _DMX_ISR *****************
 18412 ;; Defined at:
 18413 ;;		line 13 in file "dmx.c"
 18414 ;; Parameters:    Size  Location     Type
 18415 ;;		None
 18416 ;; Auto vars:     Size  Location     Type
 18417 ;;		None
 18418 ;; Return value:  Size  Location     Type
 18419 ;;                  1    wreg      void 
 18420 ;; Registers used:
 18421 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18422 ;; Tracked objects:
 18423 ;;		On entry : 0/0
 18424 ;;		On exit  : 0/0
 18425 ;;		Unchanged: 0/0
 18426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18429 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18430 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18431 ;;Total ram usage:        4 bytes
 18432 ;; Hardware stack levels used:    1
 18433 ;; This function calls:
 18434 ;;		Nothing
 18435 ;; This function is called by:
 18436 ;;		_main
 18437 ;;		_INTERRUPT_InterruptManager
 18438 ;; This function uses a non-reentrant model
 18439 ;;
 18440                           
 18441                           
 18442                           ;psect for function _DMX_ISR
 18443  1175                     _DMX_ISR:	
 18444                           
 18445                           ;dmx.c: 14:         LATB6 = 1;
 18446                           
 18447                           ;incstack = 0
 18448                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18449  1175  0140               	movlb	0	; select bank0
 18450  1176  1719               	bsf	25,6	;volatile
 18451                           
 18452                           ;dmx.c: 15:         LATB6 = 0;
 18453  1177  1319               	bcf	25,6	;volatile
 18454                           
 18455                           ;dmx.c: 16:     if (RC1STAbits.FERR) {
 18456  1178  0142               	movlb	2	; select bank2
 18457  1179  1D1D               	btfss	29,2	;volatile
 18458  117A  2980               	goto	i1l5084
 18459                           
 18460                           ;dmx.c: 18:         dmxPointer = 0;
 18461  117B  01BD               	clrf	_dmxPointer^(0+256)
 18462  117C  01BE               	clrf	(_dmxPointer+1)^(0+256)
 18463                           
 18464                           ;dmx.c: 19:         offCheck = 1;
 18465  117D  01D0               	clrf	_offCheck^(0+256)
 18466  117E  0AD0               	incf	_offCheck^(0+256),f
 18467                           
 18468                           ;dmx.c: 20:     } else {
 18469  117F  2984               	goto	i1l5086
 18470  1180                     i1l5084:	
 18471                           
 18472                           ;dmx.c: 21:         dmxPointer++;
 18473  1180  3001               	movlw	1
 18474  1181  07BD               	addwf	_dmxPointer^(0+256),f
 18475  1182  3000               	movlw	0
 18476  1183  3DBE               	addwfc	(_dmxPointer+1)^(0+256),f
 18477  1184                     i1l5086:	
 18478                           
 18479                           ;dmx.c: 23:     dmxData[dmxPointer] = RC1REG;
 18480  1184  30EF               	movlw	239
 18481  1185  00F0               	movwf	??_DMX_ISR
 18482  1186  3025               	movlw	37
 18483  1187  00F1               	movwf	??_DMX_ISR+1
 18484  1188  083D               	movf	_dmxPointer^(0+256),w
 18485  1189  0770               	addwf	??_DMX_ISR,w
 18486  118A  00F2               	movwf	??_DMX_ISR+2
 18487  118B  083E               	movf	(_dmxPointer+1)^(0+256),w
 18488  118C  3D71               	addwfc	??_DMX_ISR+1,w
 18489  118D  00F3               	movwf	??_DMX_ISR+3
 18490  118E  0872               	movf	??_DMX_ISR+2,w
 18491  118F  0086               	movwf	6
 18492  1190  0873               	movf	??_DMX_ISR+3,w
 18493  1191  0087               	movwf	7
 18494  1192  0819               	movf	25,w	;volatile
 18495  1193  0081               	movwf	1
 18496                           
 18497                           ;dmx.c: 25:     if (RC1STAbits.OERR) {
 18498  1194  1C9D               	btfss	29,1	;volatile
 18499  1195  0008               	return
 18500                           
 18501                           ;dmx.c: 26:         RC1STAbits.CREN = 0;
 18502  1196  121D               	bcf	29,4	;volatile
 18503                           
 18504                           ;dmx.c: 27:         RC1STAbits.CREN = 1;
 18505  1197  161D               	bsf	29,4	;volatile
 18506  1198  0008               	return
 18507  1199                     __end_of_DMX_ISR:	
 18508                           
 18509                           	psect	text74
 18510  12D5                     __ptext74:	
 18511 ;; *************** function _EUSART1_Receive_ISR *****************
 18512 ;; Defined at:
 18513 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 18514 ;; Parameters:    Size  Location     Type
 18515 ;;		None
 18516 ;; Auto vars:     Size  Location     Type
 18517 ;;		None
 18518 ;; Return value:  Size  Location     Type
 18519 ;;                  1    wreg      void 
 18520 ;; Registers used:
 18521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18522 ;; Tracked objects:
 18523 ;;		On entry : 0/0
 18524 ;;		On exit  : 0/0
 18525 ;;		Unchanged: 0/0
 18526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18531 ;;Total ram usage:        0 bytes
 18532 ;; Hardware stack levels used:    1
 18533 ;; Hardware stack levels required when called:    2
 18534 ;; This function calls:
 18535 ;;		Absolute function
 18536 ;;		_EUSART1_DefaultErrorHandler
 18537 ;;		_EUSART1_DefaultFramingErrorHandler
 18538 ;;		_EUSART1_DefaultOverrunErrorHandler
 18539 ;;		_EUSART1_RxDataHandler
 18540 ;; This function is called by:
 18541 ;;		_EUSART1_Initialize
 18542 ;;		_INTERRUPT_InterruptManager
 18543 ;; This function uses a non-reentrant model
 18544 ;;
 18545                           
 18546                           
 18547                           ;psect for function _EUSART1_Receive_ISR
 18548  12D5                     _EUSART1_Receive_ISR:	
 18549                           
 18550                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 18551                           
 18552                           ;incstack = 0
 18553                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18554  12D5  0877               	movf	_eusart1RxHead,w	;volatile
 18555  12D6  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18556  12D7  0086               	movwf	6
 18557  12D8  3001               	movlw	1	; select bank3/4
 18558  12D9  0087               	movwf	7
 18559  12DA  0181               	clrf	1
 18560                           
 18561                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 18562  12DB  0142               	movlb	2	; select bank2
 18563  12DC  1D1D               	btfss	29,2	;volatile
 18564  12DD  2AEA               	goto	i1l4762
 18565                           
 18566                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 18567  12DE  0877               	movf	_eusart1RxHead,w	;volatile
 18568  12DF  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18569  12E0  0086               	movwf	6
 18570  12E1  3001               	movlw	1	; select bank3/4
 18571  12E2  0087               	movwf	7
 18572  12E3  1481               	bsf	1,1
 18573                           
 18574                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 18575  12E4  0143               	movlb	3	; select bank3
 18576  12E5  085F               	movf	(_EUSART1_FramingErrorHandler+1)^(0+384),w
 18577  12E6  008A               	movwf	10
 18578  12E7  085E               	movf	_EUSART1_FramingErrorHandler^(0+384),w
 18579  12E8  000A               	callw
 18580  12E9  3192               	pagesel	$
 18581  12EA                     i1l4762:	
 18582                           
 18583                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 18584  12EA  0142               	movlb	2	; select bank2
 18585  12EB  1C9D               	btfss	29,1	;volatile
 18586  12EC  2AF9               	goto	i1l4768
 18587                           
 18588                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 18589  12ED  0877               	movf	_eusart1RxHead,w	;volatile
 18590  12EE  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18591  12EF  0086               	movwf	6
 18592  12F0  3001               	movlw	1	; select bank3/4
 18593  12F1  0087               	movwf	7
 18594  12F2  1501               	bsf	1,2
 18595                           
 18596                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 18597  12F3  0143               	movlb	3	; select bank3
 18598  12F4  085D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+384),w
 18599  12F5  008A               	movwf	10
 18600  12F6  085C               	movf	_EUSART1_OverrunErrorHandler^(0+384),w
 18601  12F7  000A               	callw
 18602  12F8  3192               	pagesel	$
 18603  12F9                     i1l4768:	
 18604                           
 18605                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 18606  12F9  0877               	movf	_eusart1RxHead,w	;volatile
 18607  12FA  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18608  12FB  0086               	movwf	6
 18609  12FC  3001               	movlw	1	; select bank3/4
 18610  12FD  0087               	movwf	7
 18611  12FE  0801               	movf	1,w
 18612  12FF  1903               	btfsc	3,2
 18613  1300  2B08               	goto	i1l4772
 18614                           
 18615                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 18616  1301  0143               	movlb	3	; select bank3
 18617  1302  085B               	movf	(_EUSART1_ErrorHandler+1)^(0+384),w
 18618  1303  008A               	movwf	10
 18619  1304  085A               	movf	_EUSART1_ErrorHandler^(0+384),w
 18620  1305  000A               	callw
 18621  1306  3192               	pagesel	$
 18622                           
 18623                           ;mcc_generated_files/eusart1.c: 230:     } else {
 18624  1307  0008               	return
 18625  1308                     i1l4772:	
 18626                           
 18627                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 18628  1308  3190  2013         	fcall	_EUSART1_RxDataHandler
 18629  130A  0008               	return
 18630  130B                     __end_of_EUSART1_Receive_ISR:	
 18631                           
 18632                           	psect	text75
 18633  1EAF                     __ptext75:	
 18634 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 18635 ;; Defined at:
 18636 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 18637 ;; Parameters:    Size  Location     Type
 18638 ;;		None
 18639 ;; Auto vars:     Size  Location     Type
 18640 ;;		None
 18641 ;; Return value:  Size  Location     Type
 18642 ;;                  1    wreg      void 
 18643 ;; Registers used:
 18644 ;;		None
 18645 ;; Tracked objects:
 18646 ;;		On entry : 0/0
 18647 ;;		On exit  : 0/0
 18648 ;;		Unchanged: 0/0
 18649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18654 ;;Total ram usage:        0 bytes
 18655 ;; Hardware stack levels used:    1
 18656 ;; This function calls:
 18657 ;;		Nothing
 18658 ;; This function is called by:
 18659 ;;		_EUSART1_Initialize
 18660 ;;		_EUSART1_Receive_ISR
 18661 ;; This function uses a non-reentrant model
 18662 ;;
 18663                           
 18664                           
 18665                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 18666  1EAF                     _EUSART1_DefaultOverrunErrorHandler:	
 18667                           
 18668                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 18669                           
 18670                           ;incstack = 0
 18671                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 18672  1EAF  0142               	movlb	2	; select bank2
 18673  1EB0  121D               	bcf	29,4	;volatile
 18674                           
 18675                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 18676  1EB1  161D               	bsf	29,4	;volatile
 18677  1EB2  0008               	return
 18678  1EB3                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 18679                           
 18680                           	psect	text76
 18681  0800                     __ptext76:	
 18682 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 18683 ;; Defined at:
 18684 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 18685 ;; Parameters:    Size  Location     Type
 18686 ;;		None
 18687 ;; Auto vars:     Size  Location     Type
 18688 ;;		None
 18689 ;; Return value:  Size  Location     Type
 18690 ;;                  1    wreg      void 
 18691 ;; Registers used:
 18692 ;;		None
 18693 ;; Tracked objects:
 18694 ;;		On entry : 0/0
 18695 ;;		On exit  : 0/0
 18696 ;;		Unchanged: 0/0
 18697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18702 ;;Total ram usage:        0 bytes
 18703 ;; Hardware stack levels used:    1
 18704 ;; This function calls:
 18705 ;;		Nothing
 18706 ;; This function is called by:
 18707 ;;		_EUSART1_Initialize
 18708 ;;		_EUSART1_Receive_ISR
 18709 ;; This function uses a non-reentrant model
 18710 ;;
 18711                           
 18712                           
 18713                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 18714  0800                     _EUSART1_DefaultFramingErrorHandler:	
 18715                           
 18716                           ;incstack = 0
 18717                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 18718  0800  0008               	return
 18719  0801                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 18720                           
 18721                           	psect	text77
 18722  1E9F                     __ptext77:	
 18723 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 18724 ;; Defined at:
 18725 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 18726 ;; Parameters:    Size  Location     Type
 18727 ;;		None
 18728 ;; Auto vars:     Size  Location     Type
 18729 ;;		None
 18730 ;; Return value:  Size  Location     Type
 18731 ;;                  1    wreg      void 
 18732 ;; Registers used:
 18733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18734 ;; Tracked objects:
 18735 ;;		On entry : 0/0
 18736 ;;		On exit  : 0/0
 18737 ;;		Unchanged: 0/0
 18738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18743 ;;Total ram usage:        0 bytes
 18744 ;; Hardware stack levels used:    1
 18745 ;; Hardware stack levels required when called:    1
 18746 ;; This function calls:
 18747 ;;		_EUSART1_RxDataHandler
 18748 ;; This function is called by:
 18749 ;;		_EUSART1_Initialize
 18750 ;;		_EUSART1_Receive_ISR
 18751 ;; This function uses a non-reentrant model
 18752 ;;
 18753                           
 18754                           
 18755                           ;psect for function _EUSART1_DefaultErrorHandler
 18756  1E9F                     _EUSART1_DefaultErrorHandler:	
 18757                           
 18758                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 18759                           
 18760                           ;incstack = 0
 18761                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 18762  1E9F  3190  2013         	fcall	_EUSART1_RxDataHandler
 18763  1EA1  0008               	return
 18764  1EA2                     __end_of_EUSART1_DefaultErrorHandler:	
 18765                           
 18766                           	psect	text78
 18767  1013                     __ptext78:	
 18768 ;; *************** function _EUSART1_RxDataHandler *****************
 18769 ;; Defined at:
 18770 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 18771 ;; Parameters:    Size  Location     Type
 18772 ;;		None
 18773 ;; Auto vars:     Size  Location     Type
 18774 ;;		None
 18775 ;; Return value:  Size  Location     Type
 18776 ;;                  1    wreg      void 
 18777 ;; Registers used:
 18778 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18779 ;; Tracked objects:
 18780 ;;		On entry : 0/0
 18781 ;;		On exit  : 0/0
 18782 ;;		Unchanged: 0/0
 18783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18788 ;;Total ram usage:        1 bytes
 18789 ;; Hardware stack levels used:    1
 18790 ;; This function calls:
 18791 ;;		Nothing
 18792 ;; This function is called by:
 18793 ;;		_EUSART1_Receive_ISR
 18794 ;;		_EUSART1_DefaultErrorHandler
 18795 ;; This function uses a non-reentrant model
 18796 ;;
 18797                           
 18798                           
 18799                           ;psect for function _EUSART1_RxDataHandler
 18800  1013                     _EUSART1_RxDataHandler:	
 18801                           
 18802                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 18803                           
 18804                           ;incstack = 0
 18805                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 18806  1013  0142               	movlb	2	; select bank2
 18807  1014  0819               	movf	25,w	;volatile
 18808  1015  00F0               	movwf	??_EUSART1_RxDataHandler
 18809  1016  0877               	movf	_eusart1RxHead,w
 18810  1017  3EB2               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 18811  1018  0086               	movwf	6
 18812  1019  3001               	movlw	1	; select bank3/4
 18813  101A  0087               	movwf	7
 18814  101B  0870               	movf	??_EUSART1_RxDataHandler,w
 18815  101C  0081               	movwf	1
 18816  101D  3001               	movlw	1
 18817  101E  00F0               	movwf	??_EUSART1_RxDataHandler
 18818  101F  0870               	movf	??_EUSART1_RxDataHandler,w
 18819  1020  07F7               	addwf	_eusart1RxHead,f	;volatile
 18820                           
 18821                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 18822  1021  3008               	movlw	8
 18823  1022  0277               	subwf	_eusart1RxHead,w	;volatile
 18824  1023  1803               	btfsc	3,0
 18825                           
 18826                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 18827  1024  01F7               	clrf	_eusart1RxHead	;volatile
 18828                           
 18829                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 18830  1025  3001               	movlw	1
 18831  1026  00F0               	movwf	??_EUSART1_RxDataHandler
 18832  1027  0870               	movf	??_EUSART1_RxDataHandler,w
 18833  1028  0141               	movlb	1	; select bank1
 18834  1029  07ED               	addwf	_eusart1RxCount^(0+128),f	;volatile
 18835  102A  0008               	return
 18836  102B                     __end_of_EUSART1_RxDataHandler:	
 18837                           
 18838                           	psect	text79
 18839  1006                     __ptext79:	
 18840 ;; *************** function _ADCC_ThresholdISR *****************
 18841 ;; Defined at:
 18842 ;;		line 308 in file "mcc_generated_files/adcc.c"
 18843 ;; Parameters:    Size  Location     Type
 18844 ;;		None
 18845 ;; Auto vars:     Size  Location     Type
 18846 ;;		None
 18847 ;; Return value:  Size  Location     Type
 18848 ;;                  1    wreg      void 
 18849 ;; Registers used:
 18850 ;;		wreg, status,2, status,0, pclath, cstack
 18851 ;; Tracked objects:
 18852 ;;		On entry : 0/0
 18853 ;;		On exit  : 0/0
 18854 ;;		Unchanged: 0/0
 18855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18860 ;;Total ram usage:        0 bytes
 18861 ;; Hardware stack levels used:    1
 18862 ;; Hardware stack levels required when called:    1
 18863 ;; This function calls:
 18864 ;;		Absolute function
 18865 ;;		_ADCC_DefaultInterruptHandler
 18866 ;;		_adcThresholdHandler
 18867 ;; This function is called by:
 18868 ;;		_INTERRUPT_InterruptManager
 18869 ;; This function uses a non-reentrant model
 18870 ;;
 18871                           
 18872                           
 18873                           ;psect for function _ADCC_ThresholdISR
 18874  1006                     _ADCC_ThresholdISR:	
 18875                           
 18876                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 18877                           
 18878                           ;incstack = 0
 18879                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 18880  1006  014E               	movlb	14	; select bank14
 18881  1007  108D               	bcf	13,1	;volatile
 18882                           
 18883                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 18884  1008  0142               	movlb	2	; select bank2
 18885  1009  086A               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 18886  100A  046B               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 18887  100B  1903               	btfsc	3,2
 18888  100C  0008               	return
 18889                           
 18890                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 18891  100D  086B               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 18892  100E  008A               	movwf	10
 18893  100F  086A               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 18894  1010  000A               	callw
 18895  1011  3190               	pagesel	$
 18896  1012  0008               	return
 18897  1013                     __end_of_ADCC_ThresholdISR:	
 18898                           
 18899                           	psect	text80
 18900  1E9E                     __ptext80:	
 18901 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 18902 ;; Defined at:
 18903 ;;		line 320 in file "mcc_generated_files/adcc.c"
 18904 ;; Parameters:    Size  Location     Type
 18905 ;;		None
 18906 ;; Auto vars:     Size  Location     Type
 18907 ;;		None
 18908 ;; Return value:  Size  Location     Type
 18909 ;;                  1    wreg      void 
 18910 ;; Registers used:
 18911 ;;		None
 18912 ;; Tracked objects:
 18913 ;;		On entry : 0/0
 18914 ;;		On exit  : 0/0
 18915 ;;		Unchanged: 0/0
 18916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18921 ;;Total ram usage:        0 bytes
 18922 ;; Hardware stack levels used:    1
 18923 ;; This function calls:
 18924 ;;		Nothing
 18925 ;; This function is called by:
 18926 ;;		_ADCC_Initialize
 18927 ;;		_ADCC_ThresholdISR
 18928 ;; This function uses a non-reentrant model
 18929 ;;
 18930                           
 18931                           
 18932                           ;psect for function _ADCC_DefaultInterruptHandler
 18933  1E9E                     _ADCC_DefaultInterruptHandler:	
 18934                           
 18935                           ;incstack = 0
 18936                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 18937  1E9E  0008               	return
 18938  1E9F                     __end_of_ADCC_DefaultInterruptHandler:	
 18939                           
 18940                           	psect	text81
 18941  1EAB                     __ptext81:	
 18942 ;; *************** function _adcThresholdHandler *****************
 18943 ;; Defined at:
 18944 ;;		line 27 in file "beat.c"
 18945 ;; Parameters:    Size  Location     Type
 18946 ;;		None
 18947 ;; Auto vars:     Size  Location     Type
 18948 ;;		None
 18949 ;; Return value:  Size  Location     Type
 18950 ;;                  1    wreg      void 
 18951 ;; Registers used:
 18952 ;;		None
 18953 ;; Tracked objects:
 18954 ;;		On entry : 0/0
 18955 ;;		On exit  : 0/0
 18956 ;;		Unchanged: 0/0
 18957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18962 ;;Total ram usage:        0 bytes
 18963 ;; Hardware stack levels used:    1
 18964 ;; This function calls:
 18965 ;;		Nothing
 18966 ;; This function is called by:
 18967 ;;		_BEAT_init
 18968 ;;		_ADCC_ThresholdISR
 18969 ;; This function uses a non-reentrant model
 18970 ;;
 18971                           
 18972                           
 18973                           ;psect for function _adcThresholdHandler
 18974  1EAB                     _adcThresholdHandler:	
 18975                           
 18976                           ;beat.c: 28:     thresholdExceeded = 1;
 18977                           
 18978                           ;incstack = 0
 18979                           ; Regs used in _adcThresholdHandler: []
 18980  1EAB  0141               	movlb	1	; select bank1
 18981  1EAC  01E9               	clrf	_thresholdExceeded^(0+128)
 18982  1EAD  0AE9               	incf	_thresholdExceeded^(0+128),f
 18983  1EAE  0008               	return
 18984  1EAF                     __end_of_adcThresholdHandler:	
 18985  007E                     btemp	set	126	;btemp
 18986  007E                     int$flags	set	126
 18987  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        28
    BSS         149
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     73      80
    BANK2            80      0      79
    BANK3            80      2      70
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    S1461$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MENU_task->_pulseColors
    _menuButtons->_BUTTONS_isClicked
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _LED_DMX->_LED_setColor
    _LED_setHSL->_HueToRGB
    ___fltol->_HueToRGB
    ___fldiv->___xxtofl
    _HueToRGB->___flge
    ___flsub->___flmul
    ___fladd->__Umul8_16
    ___flmul->___fladd
    ___flge->___flmul
    _BEAT_task->___lwdiv
    _DMX_task->_CLOCK_getTime
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MENU_task
    _MENU_task->_cycleColors
    _pulseColors->_LED_setHSL
    _cycleColors->_LED_setHSL
    _LED_Beat->_fadeColor
    _fadeColor->_LED_setHSL
    _LED_setHSL->___fltol
    ___fltol->_HueToRGB

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  145789
                                              0 BANK3      2     2      0
                          _BEAT_init
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                           _DMX_task
      _EUSART1_SetRxInterruptHandler
                          _MENU_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MENU_task                                            1     1      0  139815
                                             72 BANK1      1     1      0
                          _BEAT_task
                           _LED_Beat
                            _LED_DMX
                      _TM1650_enable
                    _TM1650_setDigit
                     _adrControl_DMX
                        _cycleColors
                            _isDMXOn
                        _menuButtons
                        _pulseColors
 ---------------------------------------------------------------------------------
 (2) _pulseColors                                          1     1      0   44151
                                             79 BANK0      1     1      0
                         _LED_setHSL
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _menuButtons                                          0     0      0     201
                  _BUTTONS_isClicked
 ---------------------------------------------------------------------------------
 (2) _isDMXOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cycleColors                                         14    14      0   36557
                                             58 BANK1     14    14      0
                      _CLOCK_getTime
                         _LED_setHSL
 ---------------------------------------------------------------------------------
 (2) _adrControl_DMX                                       4     4      0   14132
                                             34 BANK0      4     4      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    5907
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    5907
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (4) _TM1650_fastPrintNum                                  7     5      2    5907
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _TM1650_setDigit                                      7     4      3    4392
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isClicked                                    4     1      3     201
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _LED_DMX                                             11    11      0     948
                                             22 BANK0     11    11      0
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_Beat                                             0     0      0   36446
                      _BEAT_detected
                          _fadeColor
 ---------------------------------------------------------------------------------
 (3) _fadeColor                                            4     4      0   36446
                                             58 BANK1      4     4      0
                      _CLOCK_getTime
                         _LED_setHSL
 ---------------------------------------------------------------------------------
 (3) _LED_setHSL                                          43    33     10   36381
                                             15 BANK1     43    33     10
                           _HueToRGB
                       _LED_setColor
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     697
                                              4 BANK1     11     7      4
                           _HueToRGB (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _LED_setColor                                        22    19      3     948
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (4) _HueToRGB                                            16     4     12   16255
                                             67 BANK0     12     0     12
                                              0 BANK1      4     4      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4705
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3200
                                              9 BANK0     20    12      8
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    5693
                                             29 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1246
                                             55 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_task                                             4     4      0      65
                                              2 BANK0      4     4      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (12) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (11) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (12) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _DMX_task
     _CLOCK_getTime
   _EUSART1_SetRxInterruptHandler
   _MENU_task
     _BEAT_task
       _ADCC_SetUpperThreshold
       _CLOCK_getTime
       _TM1650_isEnabled
       ___lwdiv
     _LED_Beat
       _BEAT_detected
       _fadeColor
         _CLOCK_getTime
         _LED_setHSL
           _HueToRGB
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           _LED_setColor
           ___fladd
             __Umul8_16 (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___xxtofl
     _LED_DMX
       _LED_setColor
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _TM1650_setDigit
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _adrControl_DMX
       _BUTTONS_isClicked
       _CLOCK_getTime
       _TM1650_enable
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       _address_dec
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
       _address_inc
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
     _cycleColors
       _CLOCK_getTime
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fleq
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
     _isDMXOn
     _menuButtons
       _BUTTONS_isClicked
     _pulseColors
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fleq
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
       ___fldiv
         ___xxtofl (ARG)
       ___fleq
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     161       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     49      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      2      46      12       87.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      20      14       40.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     161      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 20:59:30 2019

                                   _pulseColors 0864                        _eusart1TxBufferRemaining 016E  
                                  ___fldiv@aexp 0047                                    ___fldiv@bexp 0046  
                      ??_ADCC_SetUpperThreshold 0022                                    ___fldiv@sign 003F  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0070  
                                    HueToRGB@v1 0063                                      HueToRGB@v2 0067  
                                    HueToRGB@vH 006B                                              _up 0156  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00D9  
                           __Umul8_16@word_mpld 0026                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 1EAB                                             l802 0988  
                                           l804 09EB                                             l970 0E82  
                                           l969 0E4F                                             _bpm 0143  
                       __size_of_PMD_Initialize 000A                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                    ?_cycleColors 0070  
                                  ___flmul@aexp 004B                                    ___flmul@bexp 0050  
                                   ?_LED_setHSL 00AF                                    ___flmul@sign 004A  
                                  ___flmul@temp 0055                                    ___flmul@prod 0051  
                                 __CFG_BBEN$OFF 0000                                 __end_of_LED_DMX 137B  
                               __end_of_DMX_ISR 1199                                __end_of_I2C1_ISR 0C3A  
                                  ___fltol@exp1 00AE                                            l1000 0844  
                                          l1064 0890                                            l1443 1419  
                                          l1452 166C                                            l1444 1433  
                                          l1455 16BA                                            l1631 066D  
                                          l1617 0E14                                            l1609 0DFC  
                                          l4210 06F8                                            l4042 1445  
                                          l1722 1735                                            l1475 14DC  
                                          l1723 173F                                            l1715 1721  
                                          l1652 0774                                            l4204 06DF  
                                          l4212 06C1                                            l1581 0CFD  
                                          l1653 078C                                            l1709 16EB  
                                          l4230 071A                                            l4214 06FD  
                                          l4150 0649                                            l4310 175A  
                                          l1575 0C87                                            l1655 0799  
                                          l1728 1122                                            l4240 0733  
                                          l4144 063E                                            l6000 15B2  
                                          l4250 075C                                            l1683 0617  
                                          l1579 0D1A                                            l5300 0412  
                                          l1596 0D9D                                            l3620 0C5F  
                                          l4236 0731                                            l4228 0703  
                                          l4164 0662                                            l4148 0641  
                                          l5302 0414                                            l3614 0C54  
                          _ADCC_StartConversion 1EDC                                            l6120 1335  
                                          l5320 0437                                            l5304 041C  
                                          l3712 0D3A                                            l3704 0D28  
                                          l4264 0795                                            l4184 0698  
                                          l4168 0665                                            l5330 044D  
                                          l5322 043F                                            l3714 0D3C  
                                          l3722 0D4B                                            l3642 0C7F  
                                          l3618 0C57                                            l4178 068C  
                                          l4282 16FA                                            l5242 07D9  
                                          l3820 1686                                            l5404 05D8  
                                          l3740 0DAF                                            l3732 0D95  
                                          l4276 16E3                                            l5228 1EB7  
                                          l6150 0982                                            l5414 0604  
                                          l5318 0435                                            l3638 0C7C  
                                          l5502 14CA                                            l4286 16FE  
                                          l5246 07E0                                            l6144 0952  
                                          l6128 1340                                            l3824 16A0  
                                          l5264 111C                                            l5408 05ED  
                                          l3648 0C91                                            l5512 14E9  
                                          l5504 14D8                                            l4296 1733  
                                          l4288 170E                                            l5248 07E6  
                                          l6064 176F                                            l3762 0DCE  
                                          l3754 0DC3                                            l4298 1726  
                                          l5258 120A                                            l6074 1781  
                                          l6164 09D5                                            l6156 09A9  
                                          l3748 0DBC                                            l3756 0DC5  
                                          l5444 0F51                                            l5534 1292  
                                          l5526 1274                                            l5390 05AD  
                                          l5382 057F                                            l3766 0DD0  
                                          l3686 0D05                                            l3678 0CCD  
                                          l5438 0F1D                                            l5702 0852  
                                          l5278 10AC                                            l5550 1218  
                                          l5710 1FE1                                            l5528 1280  
                                          l5384 0596                                            l3784 0E0C  
                                          l3688 0D07                                            l3696 0D15  
                                          l5616 03E7                                            l5552 1224  
                                          l5560 1239                                            l6088 17C0  
                                          l5538 129B                                            l5394 05AF  
                                          l5482 149C                                            l5642 1FA2  
                                          l3788 0E10                                            l5660 1146  
                                          l5556 1230                                            l5572 160E  
                                          l5716 1FB2                                            l5708 1FDD  
                                          l5486 14A5                                            l5654 1141  
                                          l5718 1FB6                                            l6198 12CB  
                                          l5592 00F2                                            l5578 1612  
                                          l5908 0AB8                                            l5924 080B  
                                          l5678 1EFE                                            l5598 01B5  
                                          l5694 0840                                            l5950 1529  
                                          l5934 103E                                            l5872 0A36  
                                          l5892 0A71                                            l5876 0A3D  
                                          l5948 1525                                            l5972 08F2  
                                          l5894 0A84                                            l5966 088C  
                                          l5992 1599                                            l5968 08A8  
                                ?_TM1650_enable 0070                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u3065 0DE7                                            u4205 1747  
                                          u4125 1707                                            u4055 074A  
                                          u2800 0CEC                                            u4065 0765  
                                          u4145 171B                                            u2810 0CED  
                                          u4075 077E                                            u4165 172D  
                                          u6030 085D                                            u6200 1534  
                                          u6210 155A                                            u2923 0D5D  
                                          u2915 0D40                                            _PMD0 0796  
                                          u6125 0A99                                            u2845 0D0B  
                                          u3565 1441                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            u5345 1123  
                                          u5505 0582                                            u3905 06D0  
                                          _PMD5 079B                                            u6250 0929  
                                          _PMD6 079C                                            u6075 0A1F  
                                          u2795 0CE1                                            _PMD7 079D  
                                          u6405 0955                                            u5605 05E1  
                                          u5525 058B                                            u2965 0DB0  
                                          u3925 06D9                                            u6414 0974  
                                          u6415 0973                                            u5615 05F7  
                                          u5455 04C3                                            u3935 06ED  
                                          u5465 04F2                                            u5705 14AE  
                                          u5475 0548                                            u5635 106B  
                                          u5805 1277                                            u5485 055F  
                                          u3965 0706                                            u5495 056E  
                                          u3895 06C9                                            u5735 14CB  
                                          u6527 12B8                                            u5825 1281  
                                          u3985 070F                                            u5905 1231  
                                          u5835 128B                                            u5595 05C6  
                                          u5845 1293                                            u5765 14E0  
                                          u5935 164E                                            u5875 121B  
                                          u5895 122A                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 __CFG_FCMEN$ON 0000                                   ?_BUTTONS_init 0070  
                                 ?_BUTTONS_task 0070                            ?_adcThresholdHandler 0070  
                                          _isOn 0157                                            _main 12A0  
                                          _down 0155                                            _init 10F1  
                                          _menu 0153                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                              cycleColors@color 00DE                                            start 0039  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 1079  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0015  
                          __size_of_address_inc 0016                  I2C1_MasterWriteTRBBuild@length 0021  
                            __size_of_MENU_task 009D                         __end_of_TMR0_Initialize 1F80  
                                    _i2c1_state 00EC                                __end_of_LED_Beat 0812  
                ??_TMR0_DefaultInterruptHandler 0070                  __size_of_OSCILLATOR_Initialize 0009  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 1F36  
                      __end_of_TM1650_isEnabled 1EA8                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 01AA                                   ___fltol@sign1 00AD  
                                         _ADCAP 010E                                           _ADACT 0117  
                               __end_of___fladd 0E1C                                           ?_main 0070  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 079E                                           _ADREF 0116  
                             __end_of_I2C1_Stop 105D                                    ?_menuButtons 0070  
                                 __CFG_WDTE$OFF 0000                                           _ADRPT 009A  
                               __end_of___flmul 0624                                 __end_of___flsub 10D1  
                               __end_of___fltol 14F8                                __end_of_DMX_task 1342  
                                         _LATB6 00CE                                 __end_of___lwdiv 12A0  
                    _ADCC_ADTI_InterruptHandler 016A                                           i1l106 10EE  
                                         i1l402 0AEF                                           i1l413 0B45  
                                         i1l414 0B51                                           i1l431 0BC4  
                                         i1l407 0B22                                           i1l432 0BD2  
                                         i1l424 0B93                                           i1l408 0B23  
                                         i1l280 000E                                 __end_of___lwmod 123E  
                                         i1l443 1F68                                           i1l283 0017  
                                         i1l436 0BF9                                           i1l428 0BB5  
                                         i1l285 001E                                           i1l294 0037  
                                         i1l287 0028                                           i1l289 0032  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                 __end_of_isDMXOn 1EAB  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                           _TXREG 011A  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1EA5  
                     ?_TMR0_SetInterruptHandler 0020                            _EUSART1_Transmit_ISR 10D1  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 0800  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                 __end_of_initLED 11E7  
                                         _delay 0166                                           _dmxOn 014F  
                                         _color 01D0                                           _count 0149  
                                         _enter 0154                           ?_ADCC_StartConversion 0070  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0070  
                             __end_of_BEAT_init 2000                               __end_of_BEAT_task 0ADB  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0801     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0070             ?_EUSART1_DefaultFramingErrorHandler 0070  
            _EUSART1_DefaultFramingErrorHandler 0800                 I2C1_MasterWriteTRBBuild@address 0022  
                               __initialization 003B                            TM1650_setDigit@digit 003A  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                    __end_of_EUSART1_Initialize 13FE                                    __end_of_main 12D5  
                                  __end_of_init 1111                             __size_of_LED_setHSL 035E  
                              __end_of_HueToRGB 1000                                   ?_LED_setColor 0020  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1EEE  
                   ?_INTERRUPT_InterruptManager 0070                                     _i2c1_object 0120  
                                        ??_main 01E4                                          ??_init 0023  
                                     ??_LED_DMX 0036                                       ??_DMX_ISR 0070  
                         ?_EUSART1_Transmit_ISR 0070                                 ??_TM1650_enable 0034  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR1L 030C  
                                        _CCPR3H 0315                                          _CCPR2L 0310  
                                        _CCPR4H 0319                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                             __end_of_MENU_task 1800                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5084 1180                                          i1l5086 1184  
                                __CFG_WDTCCS$SC 0000                                          i1l4570 105B  
                                        i1l6236 0C16                                          i1l4820 0B15  
                                        i1l4910 0BE0                                          i1l4832 0B2F  
                                        i1l4824 0B1C                                          i1l4762 12EA  
                                        i1l4922 0BFD                                          i1l4906 0BD9  
                                        i1l4772 1308                                          i1l4924 0C00  
                                        i1l4852 0B6A                                          i1l4932 0C0D  
                                        i1l4926 0C04                                          i1l4838 0B3F  
                                        i1l4768 12F9                                          i1l4872 0B88  
                                        i1l4894 0BB8                                          i1l4886 0BA1  
                                        _OSCFRQ 0893                                   _lastTimeCycle 0135  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                        _TRISC3 00A3                                          _TRISB6 009E  
                                        _TRISC4 00A4                                          _TRISC6 00A6  
                                        _TRISC7 00A7                                   _lastTimePulse 0131  
                              __end_of___xxtofl 1763                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00EA  
                                        ___flge 1651                                          ___fleq 13FE  
                                ??_LED_setColor 0023                     __end_of_TM1650_fastPrintNum 1651  
                             _ADCC_ThresholdISR 1006                                       ??___fladd 0031  
                                     ??___fldiv 0036                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0045                                       ??___flsub 005F  
                                     ??___fltol 00A8                                       ??___lwdiv 0024  
                                     ??___lwmod 0024                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                       ??_isDMXOn 0020  
                              ?_TMR0_Initialize 0070                              ?_ADCC_ThresholdISR 0070  
                                     ?_I2C1_ISR 0070                          __size_of_BEAT_detected 0009  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 012B                            __size_of_TM1650_init 0004  
                                     ??_initLED 0020                                 _ADCC_Initialize 1199  
                                _PMD_Initialize 1F36                                    ??_CLOCK_init 0022  
                                  __pdataCOMMON 007A                              __size_of__Umul8_16 0020  
                           ??_ADCC_ThresholdISR 0070                          ??_ADCC_StartConversion 0020  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                            __size_of_cycleColors 0069  
                        _ADCC_SetUpperThreshold 1ED3                   I2C1_MasterWriteTRBBuild@pdata 0020  
                               _eusart1RxBuffer 01B2                                 _eusart1TxBuffer 01BA  
                                    ___flge@ff1 0057                                      ___flge@ff2 005B  
                                  ___xxtofl@arg 002A                                    ___xxtofl@exp 0029  
                             _SYSTEM_Initialize 1FBE                                    ___xxtofl@val 0020  
                                    ___fleq@ff1 0020                                      ___fleq@ff2 0024  
                       __end_of__initialization 0096                                       ?_LED_Beat 0070  
                            ?_SYSTEM_Initialize 0070                                      ___fltol@f1 00A4  
                                     ?_DMX_task 0070                                  _i2c1_trb_count 015B  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1013  
                 __end_of_EUSART1_RxDataHandler 102B                              __size_of_fadeColor 0052  
                         _I2C1_FunctionComplete 1F58                            _I2C1_BusCollisionISR 1EA2  
                                __pcstackCOMMON 0070                              __end_of_CLOCK_init 1ECA  
                                  ?_pulseColors 0070                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK2 1000                                    __pidataBANK3 1F80  
                           ??_SYSTEM_Initialize 0023                                       ?_TMR0_ISR 0070  
                   TM1650_fastPrintNum@numWrite 003E                                      ??_I2C1_ISR 0072  
                          __end_of_BUTTONS_init 1492                          __end_of_PMD_Initialize 1F40  
                          __end_of_BUTTONS_task 0A02                          ??_EUSART1_Transmit_ISR 0070  
                          __size_of_menuButtons 0018                     __end_of_EUSART1_Receive_ISR 130B  
                                  ??_LED_setHSL 00B9                               _thresholdExceeded 00E9  
                   ADCC_StartConversion@channel 0020                               LED_setColor@green 0020  
                             LED_setColor@white 0021                       __end_of_SYSTEM_Initialize 1FD3  
                                 _eusart1RxHead 0077                                   _eusart1TxHead 00EF  
                                 _eusart1RxTail 0076                                      __pbssBANK1 00E9  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                     ?_HueToRGB 0063                                      __pbssBANK4 0220  
                                 _eusart1TxTail 00EE               _EUSART1_TxDefaultInterruptHandler 01E2  
                       __size_of_adrControl_DMX 0076                 ??_EUSART1_SetRxInterruptHandler 0022  
                                 _BEAT_detected 1EF7                                      ??_LED_Beat 006F  
                                    ??_DMX_task 0022                               __end_of__Umul8_16 1131  
                         ?_I2C1_BusCollisionISR 0070                 __end_of_EUSART1_SetErrorHandler 1F09  
                                    __pmaintext 12A0                                         ?___flge 0057  
                                       ?___fleq 0020                __end_of_TMR0_SetInterruptHandler 1EF7  
                                    ??_TMR0_ISR 0070                                 __CFG_PPS1WAY$ON 0000  
                                  LED_setHSL@v1 00CB                                    LED_setHSL@v2 00D3  
                              writeData@address 0032                         __end_of_ADCC_Initialize 11BF  
                            __end_of_LED_setHSL 03F8                                      __pintentry 0004  
                               _I2C1_Initialize 1079                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 1ED3           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 1ECA                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0070                               ?_TM1650_isEnabled 0070  
        __end_of_EUSART1_SetFramingErrorHandler 1F12         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 1F09                                         _LED_DMX 1342  
                                       _DMX_ISR 1175                                       ?___xxtofl 0020  
                            ??_TM1650_isEnabled 0020                    ?_EUSART1_DefaultErrorHandler 0070  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                     _I2C1_Stop 1043                               __end_of_fadeColor 0864  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                    _dmxPointer 013D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                                    menu@lastTime 012D  
                          __end_of_LED_setColor 13B7                               __end_of_charTable 1860  
                           _CLOCK_timerCallback 1EBC                                      ??_HueToRGB 006F  
                                ?_BEAT_detected 0070                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0042  
                                 ??_address_inc 0042                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0070                                       _BEAT_init 1FE9  
                 __size_of_I2C1_MasterTRBInsert 0055                                       _BEAT_task 0A02  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 00EB  
                               __size_of___flge 007C                                 __size_of___fleq 0049  
                                       ___fladd 0C3A                                         ___fldiv 0624  
                          ?_CLOCK_timerCallback 0070                                         ___flmul 03F8  
                                       ___flsub 10B2                                         ___fltol 1492  
                                       ___lwdiv 126B                                         ___lwmod 1211  
                                       _address 007A                                         _isDMXOn 1EA8  
                                       _dmxData 25EF                                         __ptext1 11BF  
                                       __ptext2 1EB3                                         __ptext3 1FBE  
                                       __ptext4 1F6C                                         __ptext5 1F36  
                                       __ptext6 123E                                         __ptext7 1F2D  
                                       __ptext8 1079                                         __ptext9 13B7  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                                       _initLED 11BF                                         _lastRun 0141  
                                  DMX_task@time 0024                           _OSCILLATOR_Initialize 1F2D  
                                     _T2CONbits 028E                                         _buttons 0220  
                                    ??___xxtofl 0024                              _EUSART1_Initialize 13B7  
                      ??_PIN_MANAGER_Initialize 0020                                 __CFG_WRTSAF$OFF 0000  
                                    ?_I2C1_Stop 0070                     __end_of_adcThresholdHandler 1EAF  
                 ??_EUSART1_DefaultErrorHandler 0071                      __size_of_SYSTEM_Initialize 0015  
                          I2C1_ISR@pi2c_buf_ptr 015A                                         clrloop0 1F41  
                          end_of_initialization 0096                             ?_EUSART1_Initialize 0070  
                                       init@btn 0024                                         init@pin 0022  
                                       init_ram 1F4C                     _EUSART1_OverrunErrorHandler 01DC  
                                       initloop 1F4D                                       _MENU_task 1763  
                        ??_I2C1_BusCollisionISR 0070                         __end_of_I2C1_Initialize 1095  
         __end_of_EUSART1_SetRxInterruptHandler 1F24          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 1F1B                                      ?_BEAT_init 0070  
                                    ?_BEAT_task 0070                           __size_of_BUTTONS_init 004B  
                         __size_of_BUTTONS_task 00D2                           ??_CLOCK_timerCallback 0070  
                           __end_of_address_dec 1FBE                             __end_of_address_inc 1FE9  
                              ?_ADCC_Initialize 0070                            ??_EUSART1_Initialize 0022  
                          __size_of_pulseColors 00CC                           __CFG_WDTCPS$WDTCPS_31 0000  
                      _TMR0_SetInterruptHandler 1EEE                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 015F                               __end_of_writeData 10B2  
                                   ___fladd@grs 003C                         ?_ADCC_SetUpperThreshold 0020  
                                 ___xxtofl@sign 0028                                      _pulseColor 01C6  
                                   ___fldiv@grs 0042                                     ___fldiv@rem 003B  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 1FA9  
             I2C1_ISR@i2c_10bit_address_restart 0158                                  _adrControl_DMX 1561  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 004C  
                               cycleColors@F104 01A0                                    _BUTTONS_init 1447  
                                  _BUTTONS_task 0930                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                      ?_MENU_task 0070  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                             __size_of_LED_Beat 0010                         I2C1_MasterWrite@address 0028  
                               cycleColors@time 00DC            __size_of_EUSART1_DefaultErrorHandler 0003  
                             __size_of_DMX_task 0037                  ??_ADCC_DefaultInterruptHandler 0070  
                                __end_of___flge 16CD                                  __end_of___fleq 1447  
                                 ??_TM1650_init 0035                         I2C1_MasterWrite@trBlock 015D  
                                 __pidataCOMMON 0002                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0071                        __size_of_TM1650_setDigit 001C  
                        ?_OSCILLATOR_Initialize 0070                  __end_of_ADCC_SetUpperThreshold 1EDC  
                  __size_of_TM1650_fastPrintNum 007A                           __size_of_LED_setColor 003C  
                                  _lastDetected 0151                                   ??_cycleColors 00DA  
                           start_initialization 003B                                     ??_I2C1_Stop 0070  
                      __size_of_TMR0_Initialize 0014                 __size_of_PIN_MANAGER_Initialize 002D  
                           TM1650_setDigit@data 0034                          __end_of_adrControl_DMX 15D7  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020   EUSART1_SetTxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 1131  
                                   _fadeAmmount 0164                              ?_BUTTONS_isClicked 0020  
                             __size_of_HueToRGB 01E4                                     _address_dec 1FA9  
                                   _address_inc 1FD3                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0070                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                                        ??___flge 005F  
                                      ??___fleq 0028                             ??_BUTTONS_isClicked 0023  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 1013  
                                  _LED_setColor 137B                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 1111                                     __pdataBANK2 0164  
                                   __pdataBANK3 01C6                                   _CLOCK_getTime 1EE5  
                                 ??_menuButtons 0024                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00ED                                       ___fladd@a 002D  
                                     ___fladd@b 0029                                     _changeColor 014D  
                                      ?_LED_DMX 0070                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 25EF  
                                      ?_DMX_ISR 0070                             __end_of_TM1650_init 1EB7  
                                     ___flmul@a 0041                                       ___flmul@b 003D  
                                   __pbssCOMMON 0076                                       ___flsub@a 0057  
                                     ___flsub@b 005B               _EUSART1_RxDefaultInterruptHandler 01E0  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 0020  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00A0  
                                 __pcstackBANK3 01E4                                   _i2c1_tr_queue 0161  
                               ?_adrControl_DMX 0070                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 1152                             __end_of_cycleColors 1561  
                                     _fadeColor 0812                 ??_EUSART1_SetTxInterruptHandler 0022  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0070                       __size_of_TM1650_isEnabled 0003  
                  __size_of_EUSART1_Receive_ISR 0036                                LED_setColor@blue 0022  
                                  _currentState 0137                                       _charTable 1800  
                                   ??_MENU_task 00E8                           _TMR0_InterruptHandler 016C  
                                     __pnvBANK2 016A                                       __pnvBANK3 01DA  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 123E  
                                      ?___fladd 0029                                        ?___fldiv 002E  
                                      ?___flmul 003D                                        ?___flsub 0057  
                                      ?___fltol 00A4                                      ?__Umul8_16 0020  
                                      ?___lwdiv 0020                                        ?___lwmod 0020  
                                ?_CLOCK_getTime 0020                                        ?_isDMXOn 0070  
                                      _I2C1_ISR 0ADB                                   LED_setHSL@hue 00CF  
                                 LED_setHSL@hsl 00AF                                   LED_setHSL@rgb 00D7  
                  ??_INTERRUPT_InterruptManager 0076                                 writeData@status 0033  
                              _I2C1_MasterWrite 11E7                                        _BAUD1CON 011F  
                                      ?_initLED 0070                    __end_of_I2C1_MasterTRBInsert 07F3  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1EB3     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0070             ?_EUSART1_DefaultOverrunErrorHandler 0070  
            _EUSART1_DefaultOverrunErrorHandler 1EAF                            _EUSART1_ErrorHandler 01DA  
                       _EUSART1_SetErrorHandler 1F00                               ??_TM1650_setDigit 0037  
                           __end_of_menuButtons 1043                                ___lwdiv@quotient 0026  
                                      _T2CLKCON 0290                                      ?_fadeColor 0070  
      __end_of_I2C1_WaitForLastPacketToComplete 1EBC       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0070  
              _I2C1_WaitForLastPacketToComplete 1EB7                          I2C1_MasterRead@trBlock 01C2  
                             ??_TMR0_Initialize 0022                                        _LED_Beat 0802  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0023  
                                     clear_ram0 1F40                                        _PIE0bits 0716  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _DMX_task 130B             __size_of_INTERRUPT_InterruptManager 0035  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                          TM1650_fastPrintNum@i 0040                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0070                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 07F3                                        _SSP1STAT 018F  
                                   _TM1650_init 1EB3                                       _threshold 0168  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                              __size_of_LED_DMX 0039                                     _cycleColors 14F8  
                              __size_of_DMX_ISR 0024                                       _writeData 1095  
                    __size_of_BUTTONS_isClicked 0021                                        _HueToRGB 0E1C  
                                   _hueValCycle 0133                    __size_of_adcThresholdHandler 0004  
                                   _hueValPulse 012F                     __end_of_CLOCK_timerCallback 1EC2  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 15D7  
                                    _ADSTATbits 0115                              controller@lastTime 0129  
         __end_of_EUSART1_SetTxInterruptHandler 1F2D          __size_of_EUSART1_SetTxInterruptHandler 0009  
                 _EUSART1_SetTxInterruptHandler 1F24                   __size_of_I2C1_BusCollisionISR 0003  
                                 ??_pulseColors 006F                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 0159                                 _LED_setHSL$2854 00BB  
                               _LED_setHSL$2855 00C3                                 _LED_setHSL$2856 00C7  
                               _LED_setHSL$2857 00BF                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fladd 01E2  
                              __size_of___fldiv 017A                                __size_of___flmul 022C  
                              __size_of___flsub 001F                                __size_of___fltol 0066  
                   __size_of_EUSART1_Initialize 0047                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                                __size_of_isDMXOn 0003  
              __end_of_I2C1_MasterWriteTRBBuild 1175                                     _menuButtons 102B  
                          ?_TM1650_fastPrintNum 003B                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                                        _fadeTime 0125  
                               LED_setColor@lo1 0027                                 LED_setColor@lo2 002B  
                           TM1650_enable@enable 0034                                 LED_setColor@lo3 002F  
                               LED_setColor@lo4 0033             __end_of_EUSART1_DefaultErrorHandler 1EA2  
                   _EUSART1_DefaultErrorHandler 1E9F                                 LED_setColor@red 0035  
                                   _currentTime 014B                                      _CLOCK_init 1EC2  
                              __size_of_initLED 0028                                        ___xxtofl 16CD  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                               ___lwdiv@divisor 0020                             I2C1_ISR@i2c_address 0078  
                               ___lwdiv@counter 0025                                        _detected 0152  
                                    ?_writeData 002E                                        __ptext10 1F24  
                                      __ptext11 1F1B                                        __ptext20 14F8  
                                      __ptext12 1F12                                        __ptext21 1561  
                                      __ptext13 1F09                                        __ptext30 1152  
                                      __ptext22 1FD3                                        __ptext14 1F00  
                                      __ptext31 079E                                        __ptext23 1FA9  
                                      __ptext15 1199                                        __ptext40 13FE  
                                      __ptext32 1EB7                                        __ptext24 15D7  
                                      __ptext16 1763                                        __ptext41 0624  
                                      __ptext33 1131                                        __ptext25 1211  
                                      __ptext17 0864                                        __ptext50 0A02  
                                      __ptext42 137B                                        __ptext34 1342  
                                      __ptext26 105D                                        __ptext18 102B  
                                      __ptext51 126B                                        __ptext43 0E1C  
                                      __ptext35 0802                                        __ptext27 1F94  
                                      __ptext19 1EA8                                        __ptext60 1FE9  
                                      __ptext52 1EA5                                        __ptext44 10B2  
                                      __ptext36 0812                                        __ptext28 1095  
                                      __ptext61 1EDC                                        __ptext53 130B  
                                      __ptext45 0C3A                                        __ptext37 009A  
                                      __ptext29 11E7                                        __ptext70 1F58  
                                      __ptext62 1ED3                                        __ptext54 1EC2  
                                      __ptext46 03F8                                        __ptext38 16CD  
                                      __ptext71 1EA2                                        __ptext63 1ECA  
                                      __ptext55 1EEE                                        __ptext47 1111  
                                      __ptext39 1492                                        __ptext80 1E9E  
                                      __ptext72 10D1                                        __ptext56 0930  
                                      __ptext48 1651                                        __ptext81 1EAB  
                                      __ptext73 1175                                        __ptext65 07F3  
                                      __ptext57 1EE5                                        __ptext49 1EF7  
                                      __ptext74 12D5                                        __ptext66 1EBC  
                                      __ptext58 1447                                        __ptext75 1EAF  
                                      __ptext67 0801                                        __ptext59 10F1  
                                      __ptext76 0800                                        __ptext68 0ADB  
                                      __ptext77 1E9F                                        __ptext69 1043  
                                      __ptext78 1013                                        __ptext79 1006  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _offCheck 0150                                     ??_fadeColor 00DA  
                         __end_of_BEAT_detected 1F00                                        _lastBeat 0145  
                                      _lastTime 0147                                _TM1650_isEnabled 1EA5  
                                 __size_of_main 0035                                   __size_of_init 0020  
                                  ?_address_dec 0070            __end_of_TMR0_DefaultInterruptHandler 0802  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 0801  
                                  ?_address_inc 0070                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 079E                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                    __end_of_ADCC_StartConversion 1EE5  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0039  
                    _INTERRUPT_InterruptManager 0004                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 01DE                             _EUSART1_Receive_ISR 12D5  
                           __end_of_pulseColors 0930                           ??_TM1650_fastPrintNum 003D  
                              ??_adrControl_DMX 0042                               TM1650_setDigit@dp 0035  
                                    _INTCONbits 000B                                        init@port 0020  
                                 _HueToRGB$2853 00A0                                      _LED_setHSL 009A  
          __end_of_ADCC_DefaultInterruptHandler 1E9F           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1E9E                                        intlevel1 0000  
                                _thresholdCount 013F                            ?_EUSART1_Receive_ISR 0070  
                                 writeData@data 002E                                ___lwmod@dividend 0022  
                       ?_PIN_MANAGER_Initialize 0070                        __end_of_I2C1_MasterWrite 1211  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0014  
        __end_of_EUSART1_SetOverrunErrorHandler 1F1B         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1F12                   __end_of_I2C1_FunctionComplete 1F6C  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 10F1  
                                   led@lastTime 0139                   ?_TMR0_DefaultInterruptHandler 0070  
                        TM1650_fastPrintNum@num 003B  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 105D  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 015C  
                                 __pstringtext1 1800                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0020                                     ?_CLOCK_init 0070  
                               _TMR0_Initialize 1F6C                                 ___lwmod@counter 0025  
                                   dmx@lastTime 013B                                   fadeColor@time 00DC  
                      _I2C1_MasterWriteTRBBuild 1152                                     ??_writeData 002F  
                                    _TX1STAbits 011E                                   ___fladd@signs 0039  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0071  
                __end_of_PIN_MANAGER_Initialize 126B                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1F94                                    ___fladd@aexp 003A  
                                  ___fladd@bexp 003B                              __size_of_I2C1_Stop 001A  
                 ?_ADCC_DefaultInterruptHandler 0070                                     _toggleCheck 014E  
                          __Umul8_16@multiplier 0028                         ??_EUSART1_RxDataHandler 0070  
                             __Umul8_16@product 0024                              adrControl_DMX@time 0044  
