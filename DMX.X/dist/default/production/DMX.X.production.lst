

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 01 00:42:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	intentry,global,class=CODE,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,delta=2
   108                           	psect	text83,local,class=CODE,merge=1,delta=2
   109                           	dabs	1,0xCA0,32
   110                           	dabs	1,0xC20,80
   111                           	dabs	1,0xBA0,80
   112                           	dabs	1,0xB20,80
   113                           	dabs	1,0xAA0,80
   114                           	dabs	1,0xA20,80
   115                           	dabs	1,0x9A0,80
   116                           	dabs	1,0x96F,1
   117                           	dabs	1,0x25EF,0,_dmxData
   118                           	dabs	1,0x7E,2
   119  0000                     
   120                           ; Version 2.05
   121                           ; Generated 20/12/2018 GMT
   122                           ; 
   123                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC16F18446 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  008C                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  010F                     	;# 
   209  0110                     	;# 
   210  0111                     	;# 
   211  0112                     	;# 
   212  0113                     	;# 
   213  0114                     	;# 
   214  0115                     	;# 
   215  0116                     	;# 
   216  0117                     	;# 
   217  0118                     	;# 
   218  0119                     	;# 
   219  0119                     	;# 
   220  0119                     	;# 
   221  011A                     	;# 
   222  011A                     	;# 
   223  011A                     	;# 
   224  011B                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011B                     	;# 
   229  011C                     	;# 
   230  011C                     	;# 
   231  011C                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  011E                     	;# 
   236  011E                     	;# 
   237  011E                     	;# 
   238  011F                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  011F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  018E                     	;# 
   246  018F                     	;# 
   247  0190                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0196                     	;# 
   251  0197                     	;# 
   252  0198                     	;# 
   253  0199                     	;# 
   254  019A                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  020C                     	;# 
   258  020D                     	;# 
   259  020E                     	;# 
   260  020E                     	;# 
   261  020F                     	;# 
   262  020F                     	;# 
   263  0210                     	;# 
   264  0210                     	;# 
   265  0211                     	;# 
   266  0211                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0214                     	;# 
   270  0214                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0218                     	;# 
   278  0219                     	;# 
   279  021A                     	;# 
   280  021A                     	;# 
   281  021B                     	;# 
   282  021B                     	;# 
   283  021C                     	;# 
   284  021C                     	;# 
   285  021D                     	;# 
   286  021D                     	;# 
   287  021E                     	;# 
   288  021F                     	;# 
   289  028C                     	;# 
   290  028C                     	;# 
   291  028D                     	;# 
   292  028D                     	;# 
   293  028E                     	;# 
   294  028F                     	;# 
   295  0290                     	;# 
   296  0291                     	;# 
   297  0292                     	;# 
   298  0292                     	;# 
   299  0293                     	;# 
   300  0293                     	;# 
   301  0294                     	;# 
   302  0295                     	;# 
   303  0296                     	;# 
   304  0297                     	;# 
   305  0298                     	;# 
   306  0298                     	;# 
   307  0299                     	;# 
   308  0299                     	;# 
   309  029A                     	;# 
   310  029B                     	;# 
   311  029C                     	;# 
   312  029D                     	;# 
   313  029F                     	;# 
   314  030C                     	;# 
   315  030C                     	;# 
   316  030D                     	;# 
   317  030E                     	;# 
   318  030F                     	;# 
   319  0310                     	;# 
   320  0310                     	;# 
   321  0311                     	;# 
   322  0312                     	;# 
   323  0313                     	;# 
   324  0314                     	;# 
   325  0314                     	;# 
   326  0315                     	;# 
   327  0316                     	;# 
   328  0317                     	;# 
   329  0318                     	;# 
   330  0318                     	;# 
   331  0319                     	;# 
   332  031A                     	;# 
   333  031B                     	;# 
   334  038C                     	;# 
   335  038C                     	;# 
   336  038D                     	;# 
   337  038E                     	;# 
   338  0390                     	;# 
   339  0390                     	;# 
   340  0391                     	;# 
   341  0392                     	;# 
   342  048C                     	;# 
   343  048C                     	;# 
   344  048D                     	;# 
   345  048E                     	;# 
   346  048F                     	;# 
   347  048F                     	;# 
   348  0490                     	;# 
   349  0491                     	;# 
   350  0492                     	;# 
   351  0492                     	;# 
   352  0493                     	;# 
   353  0494                     	;# 
   354  0495                     	;# 
   355  0495                     	;# 
   356  0496                     	;# 
   357  0497                     	;# 
   358  0498                     	;# 
   359  0499                     	;# 
   360  049A                     	;# 
   361  049B                     	;# 
   362  049C                     	;# 
   363  049D                     	;# 
   364  058C                     	;# 
   365  058C                     	;# 
   366  058D                     	;# 
   367  058E                     	;# 
   368  058F                     	;# 
   369  058F                     	;# 
   370  0590                     	;# 
   371  0591                     	;# 
   372  0592                     	;# 
   373  0593                     	;# 
   374  059C                     	;# 
   375  059C                     	;# 
   376  059D                     	;# 
   377  059D                     	;# 
   378  059E                     	;# 
   379  059F                     	;# 
   380  060C                     	;# 
   381  060C                     	;# 
   382  060D                     	;# 
   383  060D                     	;# 
   384  060E                     	;# 
   385  060F                     	;# 
   386  0610                     	;# 
   387  0611                     	;# 
   388  0612                     	;# 
   389  0613                     	;# 
   390  0614                     	;# 
   391  0616                     	;# 
   392  0616                     	;# 
   393  0617                     	;# 
   394  0617                     	;# 
   395  0618                     	;# 
   396  0619                     	;# 
   397  061A                     	;# 
   398  061B                     	;# 
   399  061C                     	;# 
   400  061D                     	;# 
   401  061E                     	;# 
   402  070C                     	;# 
   403  070D                     	;# 
   404  070E                     	;# 
   405  070F                     	;# 
   406  0710                     	;# 
   407  0711                     	;# 
   408  0712                     	;# 
   409  0713                     	;# 
   410  0714                     	;# 
   411  0716                     	;# 
   412  0717                     	;# 
   413  0718                     	;# 
   414  0719                     	;# 
   415  071A                     	;# 
   416  071B                     	;# 
   417  071C                     	;# 
   418  071D                     	;# 
   419  071E                     	;# 
   420  0796                     	;# 
   421  0797                     	;# 
   422  0798                     	;# 
   423  0799                     	;# 
   424  079A                     	;# 
   425  079B                     	;# 
   426  079C                     	;# 
   427  079D                     	;# 
   428  080C                     	;# 
   429  080D                     	;# 
   430  080E                     	;# 
   431  080F                     	;# 
   432  0810                     	;# 
   433  0811                     	;# 
   434  0812                     	;# 
   435  0813                     	;# 
   436  0814                     	;# 
   437  081A                     	;# 
   438  081A                     	;# 
   439  081B                     	;# 
   440  081C                     	;# 
   441  081C                     	;# 
   442  081D                     	;# 
   443  081E                     	;# 
   444  081F                     	;# 
   445  088C                     	;# 
   446  088D                     	;# 
   447  088E                     	;# 
   448  088F                     	;# 
   449  0890                     	;# 
   450  0891                     	;# 
   451  0892                     	;# 
   452  0893                     	;# 
   453  0895                     	;# 
   454  0896                     	;# 
   455  0897                     	;# 
   456  0898                     	;# 
   457  0899                     	;# 
   458  089A                     	;# 
   459  089B                     	;# 
   460  090C                     	;# 
   461  090E                     	;# 
   462  090F                     	;# 
   463  091F                     	;# 
   464  098F                     	;# 
   465  098F                     	;# 
   466  0990                     	;# 
   467  0991                     	;# 
   468  0992                     	;# 
   469  0993                     	;# 
   470  0994                     	;# 
   471  0995                     	;# 
   472  0996                     	;# 
   473  0997                     	;# 
   474  1E0F                     	;# 
   475  1E10                     	;# 
   476  1E11                     	;# 
   477  1E12                     	;# 
   478  1E13                     	;# 
   479  1E14                     	;# 
   480  1E15                     	;# 
   481  1E16                     	;# 
   482  1E17                     	;# 
   483  1E18                     	;# 
   484  1E19                     	;# 
   485  1E1A                     	;# 
   486  1E1B                     	;# 
   487  1E1C                     	;# 
   488  1E1D                     	;# 
   489  1E1E                     	;# 
   490  1E1F                     	;# 
   491  1E20                     	;# 
   492  1E21                     	;# 
   493  1E22                     	;# 
   494  1E23                     	;# 
   495  1E24                     	;# 
   496  1E25                     	;# 
   497  1E26                     	;# 
   498  1E27                     	;# 
   499  1E28                     	;# 
   500  1E29                     	;# 
   501  1E2A                     	;# 
   502  1E2B                     	;# 
   503  1E2C                     	;# 
   504  1E2D                     	;# 
   505  1E2E                     	;# 
   506  1E2F                     	;# 
   507  1E30                     	;# 
   508  1E31                     	;# 
   509  1E32                     	;# 
   510  1E33                     	;# 
   511  1E34                     	;# 
   512  1E35                     	;# 
   513  1E36                     	;# 
   514  1E37                     	;# 
   515  1E8F                     	;# 
   516  1E90                     	;# 
   517  1E91                     	;# 
   518  1E92                     	;# 
   519  1E93                     	;# 
   520  1E94                     	;# 
   521  1E95                     	;# 
   522  1E96                     	;# 
   523  1E97                     	;# 
   524  1E9C                     	;# 
   525  1E9D                     	;# 
   526  1E9E                     	;# 
   527  1EA1                     	;# 
   528  1EA2                     	;# 
   529  1EA3                     	;# 
   530  1EA4                     	;# 
   531  1EA9                     	;# 
   532  1EAA                     	;# 
   533  1EB1                     	;# 
   534  1EB2                     	;# 
   535  1EB8                     	;# 
   536  1EB9                     	;# 
   537  1EBA                     	;# 
   538  1EBB                     	;# 
   539  1EBC                     	;# 
   540  1EBD                     	;# 
   541  1EBE                     	;# 
   542  1EC3                     	;# 
   543  1EC5                     	;# 
   544  1EC6                     	;# 
   545  1EC7                     	;# 
   546  1EC8                     	;# 
   547  1EC9                     	;# 
   548  1ECA                     	;# 
   549  1ECB                     	;# 
   550  1ECB                     	;# 
   551  1ECB                     	;# 
   552  1ECC                     	;# 
   553  1ECC                     	;# 
   554  1ECC                     	;# 
   555  1F10                     	;# 
   556  1F11                     	;# 
   557  1F12                     	;# 
   558  1F14                     	;# 
   559  1F15                     	;# 
   560  1F1C                     	;# 
   561  1F1D                     	;# 
   562  1F1E                     	;# 
   563  1F1F                     	;# 
   564  1F20                     	;# 
   565  1F21                     	;# 
   566  1F22                     	;# 
   567  1F23                     	;# 
   568  1F24                     	;# 
   569  1F25                     	;# 
   570  1F26                     	;# 
   571  1F27                     	;# 
   572  1F38                     	;# 
   573  1F39                     	;# 
   574  1F3A                     	;# 
   575  1F3B                     	;# 
   576  1F3C                     	;# 
   577  1F3D                     	;# 
   578  1F3E                     	;# 
   579  1F3F                     	;# 
   580  1F43                     	;# 
   581  1F44                     	;# 
   582  1F45                     	;# 
   583  1F46                     	;# 
   584  1F47                     	;# 
   585  1F48                     	;# 
   586  1F49                     	;# 
   587  1F4A                     	;# 
   588  1F4E                     	;# 
   589  1F4F                     	;# 
   590  1F50                     	;# 
   591  1F51                     	;# 
   592  1F52                     	;# 
   593  1F53                     	;# 
   594  1F54                     	;# 
   595  1F55                     	;# 
   596  1FE4                     	;# 
   597  1FE5                     	;# 
   598  1FE6                     	;# 
   599  1FE7                     	;# 
   600  1FE8                     	;# 
   601  1FE8                     	;# 
   602  1FE9                     	;# 
   603  1FEA                     	;# 
   604  1FEB                     	;# 
   605  1FED                     	;# 
   606  1FEE                     	;# 
   607  1FEF                     	;# 
   608  0000                     	;# 
   609  0001                     	;# 
   610  0002                     	;# 
   611  0003                     	;# 
   612  0004                     	;# 
   613  0005                     	;# 
   614  0006                     	;# 
   615  0007                     	;# 
   616  0008                     	;# 
   617  0009                     	;# 
   618  000A                     	;# 
   619  000B                     	;# 
   620  000C                     	;# 
   621  000D                     	;# 
   622  000E                     	;# 
   623  0012                     	;# 
   624  0013                     	;# 
   625  0014                     	;# 
   626  0018                     	;# 
   627  0019                     	;# 
   628  001A                     	;# 
   629  008C                     	;# 
   630  008C                     	;# 
   631  008D                     	;# 
   632  008E                     	;# 
   633  008E                     	;# 
   634  008F                     	;# 
   635  0090                     	;# 
   636  0090                     	;# 
   637  0091                     	;# 
   638  0092                     	;# 
   639  0092                     	;# 
   640  0093                     	;# 
   641  0094                     	;# 
   642  0094                     	;# 
   643  0095                     	;# 
   644  0096                     	;# 
   645  0096                     	;# 
   646  0097                     	;# 
   647  0098                     	;# 
   648  0099                     	;# 
   649  009A                     	;# 
   650  009B                     	;# 
   651  009B                     	;# 
   652  009C                     	;# 
   653  009D                     	;# 
   654  009D                     	;# 
   655  009E                     	;# 
   656  009F                     	;# 
   657  010C                     	;# 
   658  010C                     	;# 
   659  010D                     	;# 
   660  010E                     	;# 
   661  010F                     	;# 
   662  010F                     	;# 
   663  0110                     	;# 
   664  0111                     	;# 
   665  0112                     	;# 
   666  0113                     	;# 
   667  0114                     	;# 
   668  0115                     	;# 
   669  0116                     	;# 
   670  0117                     	;# 
   671  0118                     	;# 
   672  0119                     	;# 
   673  0119                     	;# 
   674  0119                     	;# 
   675  011A                     	;# 
   676  011A                     	;# 
   677  011A                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011B                     	;# 
   682  011B                     	;# 
   683  011C                     	;# 
   684  011C                     	;# 
   685  011C                     	;# 
   686  011D                     	;# 
   687  011D                     	;# 
   688  011D                     	;# 
   689  011E                     	;# 
   690  011E                     	;# 
   691  011E                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  011F                     	;# 
   696  011F                     	;# 
   697  018C                     	;# 
   698  018D                     	;# 
   699  018E                     	;# 
   700  018F                     	;# 
   701  0190                     	;# 
   702  0191                     	;# 
   703  0192                     	;# 
   704  0196                     	;# 
   705  0197                     	;# 
   706  0198                     	;# 
   707  0199                     	;# 
   708  019A                     	;# 
   709  019B                     	;# 
   710  019C                     	;# 
   711  020C                     	;# 
   712  020D                     	;# 
   713  020E                     	;# 
   714  020E                     	;# 
   715  020F                     	;# 
   716  020F                     	;# 
   717  0210                     	;# 
   718  0210                     	;# 
   719  0211                     	;# 
   720  0211                     	;# 
   721  0212                     	;# 
   722  0213                     	;# 
   723  0214                     	;# 
   724  0214                     	;# 
   725  0215                     	;# 
   726  0215                     	;# 
   727  0216                     	;# 
   728  0216                     	;# 
   729  0217                     	;# 
   730  0217                     	;# 
   731  0218                     	;# 
   732  0219                     	;# 
   733  021A                     	;# 
   734  021A                     	;# 
   735  021B                     	;# 
   736  021B                     	;# 
   737  021C                     	;# 
   738  021C                     	;# 
   739  021D                     	;# 
   740  021D                     	;# 
   741  021E                     	;# 
   742  021F                     	;# 
   743  028C                     	;# 
   744  028C                     	;# 
   745  028D                     	;# 
   746  028D                     	;# 
   747  028E                     	;# 
   748  028F                     	;# 
   749  0290                     	;# 
   750  0291                     	;# 
   751  0292                     	;# 
   752  0292                     	;# 
   753  0293                     	;# 
   754  0293                     	;# 
   755  0294                     	;# 
   756  0295                     	;# 
   757  0296                     	;# 
   758  0297                     	;# 
   759  0298                     	;# 
   760  0298                     	;# 
   761  0299                     	;# 
   762  0299                     	;# 
   763  029A                     	;# 
   764  029B                     	;# 
   765  029C                     	;# 
   766  029D                     	;# 
   767  029F                     	;# 
   768  030C                     	;# 
   769  030C                     	;# 
   770  030D                     	;# 
   771  030E                     	;# 
   772  030F                     	;# 
   773  0310                     	;# 
   774  0310                     	;# 
   775  0311                     	;# 
   776  0312                     	;# 
   777  0313                     	;# 
   778  0314                     	;# 
   779  0314                     	;# 
   780  0315                     	;# 
   781  0316                     	;# 
   782  0317                     	;# 
   783  0318                     	;# 
   784  0318                     	;# 
   785  0319                     	;# 
   786  031A                     	;# 
   787  031B                     	;# 
   788  038C                     	;# 
   789  038C                     	;# 
   790  038D                     	;# 
   791  038E                     	;# 
   792  0390                     	;# 
   793  0390                     	;# 
   794  0391                     	;# 
   795  0392                     	;# 
   796  048C                     	;# 
   797  048C                     	;# 
   798  048D                     	;# 
   799  048E                     	;# 
   800  048F                     	;# 
   801  048F                     	;# 
   802  0490                     	;# 
   803  0491                     	;# 
   804  0492                     	;# 
   805  0492                     	;# 
   806  0493                     	;# 
   807  0494                     	;# 
   808  0495                     	;# 
   809  0495                     	;# 
   810  0496                     	;# 
   811  0497                     	;# 
   812  0498                     	;# 
   813  0499                     	;# 
   814  049A                     	;# 
   815  049B                     	;# 
   816  049C                     	;# 
   817  049D                     	;# 
   818  058C                     	;# 
   819  058C                     	;# 
   820  058D                     	;# 
   821  058E                     	;# 
   822  058F                     	;# 
   823  058F                     	;# 
   824  0590                     	;# 
   825  0591                     	;# 
   826  0592                     	;# 
   827  0593                     	;# 
   828  059C                     	;# 
   829  059C                     	;# 
   830  059D                     	;# 
   831  059D                     	;# 
   832  059E                     	;# 
   833  059F                     	;# 
   834  060C                     	;# 
   835  060C                     	;# 
   836  060D                     	;# 
   837  060D                     	;# 
   838  060E                     	;# 
   839  060F                     	;# 
   840  0610                     	;# 
   841  0611                     	;# 
   842  0612                     	;# 
   843  0613                     	;# 
   844  0614                     	;# 
   845  0616                     	;# 
   846  0616                     	;# 
   847  0617                     	;# 
   848  0617                     	;# 
   849  0618                     	;# 
   850  0619                     	;# 
   851  061A                     	;# 
   852  061B                     	;# 
   853  061C                     	;# 
   854  061D                     	;# 
   855  061E                     	;# 
   856  070C                     	;# 
   857  070D                     	;# 
   858  070E                     	;# 
   859  070F                     	;# 
   860  0710                     	;# 
   861  0711                     	;# 
   862  0712                     	;# 
   863  0713                     	;# 
   864  0714                     	;# 
   865  0716                     	;# 
   866  0717                     	;# 
   867  0718                     	;# 
   868  0719                     	;# 
   869  071A                     	;# 
   870  071B                     	;# 
   871  071C                     	;# 
   872  071D                     	;# 
   873  071E                     	;# 
   874  0796                     	;# 
   875  0797                     	;# 
   876  0798                     	;# 
   877  0799                     	;# 
   878  079A                     	;# 
   879  079B                     	;# 
   880  079C                     	;# 
   881  079D                     	;# 
   882  080C                     	;# 
   883  080D                     	;# 
   884  080E                     	;# 
   885  080F                     	;# 
   886  0810                     	;# 
   887  0811                     	;# 
   888  0812                     	;# 
   889  0813                     	;# 
   890  0814                     	;# 
   891  081A                     	;# 
   892  081A                     	;# 
   893  081B                     	;# 
   894  081C                     	;# 
   895  081C                     	;# 
   896  081D                     	;# 
   897  081E                     	;# 
   898  081F                     	;# 
   899  088C                     	;# 
   900  088D                     	;# 
   901  088E                     	;# 
   902  088F                     	;# 
   903  0890                     	;# 
   904  0891                     	;# 
   905  0892                     	;# 
   906  0893                     	;# 
   907  0895                     	;# 
   908  0896                     	;# 
   909  0897                     	;# 
   910  0898                     	;# 
   911  0899                     	;# 
   912  089A                     	;# 
   913  089B                     	;# 
   914  090C                     	;# 
   915  090E                     	;# 
   916  090F                     	;# 
   917  091F                     	;# 
   918  098F                     	;# 
   919  098F                     	;# 
   920  0990                     	;# 
   921  0991                     	;# 
   922  0992                     	;# 
   923  0993                     	;# 
   924  0994                     	;# 
   925  0995                     	;# 
   926  0996                     	;# 
   927  0997                     	;# 
   928  1E0F                     	;# 
   929  1E10                     	;# 
   930  1E11                     	;# 
   931  1E12                     	;# 
   932  1E13                     	;# 
   933  1E14                     	;# 
   934  1E15                     	;# 
   935  1E16                     	;# 
   936  1E17                     	;# 
   937  1E18                     	;# 
   938  1E19                     	;# 
   939  1E1A                     	;# 
   940  1E1B                     	;# 
   941  1E1C                     	;# 
   942  1E1D                     	;# 
   943  1E1E                     	;# 
   944  1E1F                     	;# 
   945  1E20                     	;# 
   946  1E21                     	;# 
   947  1E22                     	;# 
   948  1E23                     	;# 
   949  1E24                     	;# 
   950  1E25                     	;# 
   951  1E26                     	;# 
   952  1E27                     	;# 
   953  1E28                     	;# 
   954  1E29                     	;# 
   955  1E2A                     	;# 
   956  1E2B                     	;# 
   957  1E2C                     	;# 
   958  1E2D                     	;# 
   959  1E2E                     	;# 
   960  1E2F                     	;# 
   961  1E30                     	;# 
   962  1E31                     	;# 
   963  1E32                     	;# 
   964  1E33                     	;# 
   965  1E34                     	;# 
   966  1E35                     	;# 
   967  1E36                     	;# 
   968  1E37                     	;# 
   969  1E8F                     	;# 
   970  1E90                     	;# 
   971  1E91                     	;# 
   972  1E92                     	;# 
   973  1E93                     	;# 
   974  1E94                     	;# 
   975  1E95                     	;# 
   976  1E96                     	;# 
   977  1E97                     	;# 
   978  1E9C                     	;# 
   979  1E9D                     	;# 
   980  1E9E                     	;# 
   981  1EA1                     	;# 
   982  1EA2                     	;# 
   983  1EA3                     	;# 
   984  1EA4                     	;# 
   985  1EA9                     	;# 
   986  1EAA                     	;# 
   987  1EB1                     	;# 
   988  1EB2                     	;# 
   989  1EB8                     	;# 
   990  1EB9                     	;# 
   991  1EBA                     	;# 
   992  1EBB                     	;# 
   993  1EBC                     	;# 
   994  1EBD                     	;# 
   995  1EBE                     	;# 
   996  1EC3                     	;# 
   997  1EC5                     	;# 
   998  1EC6                     	;# 
   999  1EC7                     	;# 
  1000  1EC8                     	;# 
  1001  1EC9                     	;# 
  1002  1ECA                     	;# 
  1003  1ECB                     	;# 
  1004  1ECB                     	;# 
  1005  1ECB                     	;# 
  1006  1ECC                     	;# 
  1007  1ECC                     	;# 
  1008  1ECC                     	;# 
  1009  1F10                     	;# 
  1010  1F11                     	;# 
  1011  1F12                     	;# 
  1012  1F14                     	;# 
  1013  1F15                     	;# 
  1014  1F1C                     	;# 
  1015  1F1D                     	;# 
  1016  1F1E                     	;# 
  1017  1F1F                     	;# 
  1018  1F20                     	;# 
  1019  1F21                     	;# 
  1020  1F22                     	;# 
  1021  1F23                     	;# 
  1022  1F24                     	;# 
  1023  1F25                     	;# 
  1024  1F26                     	;# 
  1025  1F27                     	;# 
  1026  1F38                     	;# 
  1027  1F39                     	;# 
  1028  1F3A                     	;# 
  1029  1F3B                     	;# 
  1030  1F3C                     	;# 
  1031  1F3D                     	;# 
  1032  1F3E                     	;# 
  1033  1F3F                     	;# 
  1034  1F43                     	;# 
  1035  1F44                     	;# 
  1036  1F45                     	;# 
  1037  1F46                     	;# 
  1038  1F47                     	;# 
  1039  1F48                     	;# 
  1040  1F49                     	;# 
  1041  1F4A                     	;# 
  1042  1F4E                     	;# 
  1043  1F4F                     	;# 
  1044  1F50                     	;# 
  1045  1F51                     	;# 
  1046  1F52                     	;# 
  1047  1F53                     	;# 
  1048  1F54                     	;# 
  1049  1F55                     	;# 
  1050  1FE4                     	;# 
  1051  1FE5                     	;# 
  1052  1FE6                     	;# 
  1053  1FE7                     	;# 
  1054  1FE8                     	;# 
  1055  1FE8                     	;# 
  1056  1FE9                     	;# 
  1057  1FEA                     	;# 
  1058  1FEB                     	;# 
  1059  1FED                     	;# 
  1060  1FEE                     	;# 
  1061  1FEF                     	;# 
  1062  0000                     	;# 
  1063  0001                     	;# 
  1064  0002                     	;# 
  1065  0003                     	;# 
  1066  0004                     	;# 
  1067  0005                     	;# 
  1068  0006                     	;# 
  1069  0007                     	;# 
  1070  0008                     	;# 
  1071  0009                     	;# 
  1072  000A                     	;# 
  1073  000B                     	;# 
  1074  000C                     	;# 
  1075  000D                     	;# 
  1076  000E                     	;# 
  1077  0012                     	;# 
  1078  0013                     	;# 
  1079  0014                     	;# 
  1080  0018                     	;# 
  1081  0019                     	;# 
  1082  001A                     	;# 
  1083  008C                     	;# 
  1084  008C                     	;# 
  1085  008D                     	;# 
  1086  008E                     	;# 
  1087  008E                     	;# 
  1088  008F                     	;# 
  1089  0090                     	;# 
  1090  0090                     	;# 
  1091  0091                     	;# 
  1092  0092                     	;# 
  1093  0092                     	;# 
  1094  0093                     	;# 
  1095  0094                     	;# 
  1096  0094                     	;# 
  1097  0095                     	;# 
  1098  0096                     	;# 
  1099  0096                     	;# 
  1100  0097                     	;# 
  1101  0098                     	;# 
  1102  0099                     	;# 
  1103  009A                     	;# 
  1104  009B                     	;# 
  1105  009B                     	;# 
  1106  009C                     	;# 
  1107  009D                     	;# 
  1108  009D                     	;# 
  1109  009E                     	;# 
  1110  009F                     	;# 
  1111  010C                     	;# 
  1112  010C                     	;# 
  1113  010D                     	;# 
  1114  010E                     	;# 
  1115  010F                     	;# 
  1116  010F                     	;# 
  1117  0110                     	;# 
  1118  0111                     	;# 
  1119  0112                     	;# 
  1120  0113                     	;# 
  1121  0114                     	;# 
  1122  0115                     	;# 
  1123  0116                     	;# 
  1124  0117                     	;# 
  1125  0118                     	;# 
  1126  0119                     	;# 
  1127  0119                     	;# 
  1128  0119                     	;# 
  1129  011A                     	;# 
  1130  011A                     	;# 
  1131  011A                     	;# 
  1132  011B                     	;# 
  1133  011B                     	;# 
  1134  011B                     	;# 
  1135  011B                     	;# 
  1136  011B                     	;# 
  1137  011C                     	;# 
  1138  011C                     	;# 
  1139  011C                     	;# 
  1140  011D                     	;# 
  1141  011D                     	;# 
  1142  011D                     	;# 
  1143  011E                     	;# 
  1144  011E                     	;# 
  1145  011E                     	;# 
  1146  011F                     	;# 
  1147  011F                     	;# 
  1148  011F                     	;# 
  1149  011F                     	;# 
  1150  011F                     	;# 
  1151  018C                     	;# 
  1152  018D                     	;# 
  1153  018E                     	;# 
  1154  018F                     	;# 
  1155  0190                     	;# 
  1156  0191                     	;# 
  1157  0192                     	;# 
  1158  0196                     	;# 
  1159  0197                     	;# 
  1160  0198                     	;# 
  1161  0199                     	;# 
  1162  019A                     	;# 
  1163  019B                     	;# 
  1164  019C                     	;# 
  1165  020C                     	;# 
  1166  020D                     	;# 
  1167  020E                     	;# 
  1168  020E                     	;# 
  1169  020F                     	;# 
  1170  020F                     	;# 
  1171  0210                     	;# 
  1172  0210                     	;# 
  1173  0211                     	;# 
  1174  0211                     	;# 
  1175  0212                     	;# 
  1176  0213                     	;# 
  1177  0214                     	;# 
  1178  0214                     	;# 
  1179  0215                     	;# 
  1180  0215                     	;# 
  1181  0216                     	;# 
  1182  0216                     	;# 
  1183  0217                     	;# 
  1184  0217                     	;# 
  1185  0218                     	;# 
  1186  0219                     	;# 
  1187  021A                     	;# 
  1188  021A                     	;# 
  1189  021B                     	;# 
  1190  021B                     	;# 
  1191  021C                     	;# 
  1192  021C                     	;# 
  1193  021D                     	;# 
  1194  021D                     	;# 
  1195  021E                     	;# 
  1196  021F                     	;# 
  1197  028C                     	;# 
  1198  028C                     	;# 
  1199  028D                     	;# 
  1200  028D                     	;# 
  1201  028E                     	;# 
  1202  028F                     	;# 
  1203  0290                     	;# 
  1204  0291                     	;# 
  1205  0292                     	;# 
  1206  0292                     	;# 
  1207  0293                     	;# 
  1208  0293                     	;# 
  1209  0294                     	;# 
  1210  0295                     	;# 
  1211  0296                     	;# 
  1212  0297                     	;# 
  1213  0298                     	;# 
  1214  0298                     	;# 
  1215  0299                     	;# 
  1216  0299                     	;# 
  1217  029A                     	;# 
  1218  029B                     	;# 
  1219  029C                     	;# 
  1220  029D                     	;# 
  1221  029F                     	;# 
  1222  030C                     	;# 
  1223  030C                     	;# 
  1224  030D                     	;# 
  1225  030E                     	;# 
  1226  030F                     	;# 
  1227  0310                     	;# 
  1228  0310                     	;# 
  1229  0311                     	;# 
  1230  0312                     	;# 
  1231  0313                     	;# 
  1232  0314                     	;# 
  1233  0314                     	;# 
  1234  0315                     	;# 
  1235  0316                     	;# 
  1236  0317                     	;# 
  1237  0318                     	;# 
  1238  0318                     	;# 
  1239  0319                     	;# 
  1240  031A                     	;# 
  1241  031B                     	;# 
  1242  038C                     	;# 
  1243  038C                     	;# 
  1244  038D                     	;# 
  1245  038E                     	;# 
  1246  0390                     	;# 
  1247  0390                     	;# 
  1248  0391                     	;# 
  1249  0392                     	;# 
  1250  048C                     	;# 
  1251  048C                     	;# 
  1252  048D                     	;# 
  1253  048E                     	;# 
  1254  048F                     	;# 
  1255  048F                     	;# 
  1256  0490                     	;# 
  1257  0491                     	;# 
  1258  0492                     	;# 
  1259  0492                     	;# 
  1260  0493                     	;# 
  1261  0494                     	;# 
  1262  0495                     	;# 
  1263  0495                     	;# 
  1264  0496                     	;# 
  1265  0497                     	;# 
  1266  0498                     	;# 
  1267  0499                     	;# 
  1268  049A                     	;# 
  1269  049B                     	;# 
  1270  049C                     	;# 
  1271  049D                     	;# 
  1272  058C                     	;# 
  1273  058C                     	;# 
  1274  058D                     	;# 
  1275  058E                     	;# 
  1276  058F                     	;# 
  1277  058F                     	;# 
  1278  0590                     	;# 
  1279  0591                     	;# 
  1280  0592                     	;# 
  1281  0593                     	;# 
  1282  059C                     	;# 
  1283  059C                     	;# 
  1284  059D                     	;# 
  1285  059D                     	;# 
  1286  059E                     	;# 
  1287  059F                     	;# 
  1288  060C                     	;# 
  1289  060C                     	;# 
  1290  060D                     	;# 
  1291  060D                     	;# 
  1292  060E                     	;# 
  1293  060F                     	;# 
  1294  0610                     	;# 
  1295  0611                     	;# 
  1296  0612                     	;# 
  1297  0613                     	;# 
  1298  0614                     	;# 
  1299  0616                     	;# 
  1300  0616                     	;# 
  1301  0617                     	;# 
  1302  0617                     	;# 
  1303  0618                     	;# 
  1304  0619                     	;# 
  1305  061A                     	;# 
  1306  061B                     	;# 
  1307  061C                     	;# 
  1308  061D                     	;# 
  1309  061E                     	;# 
  1310  070C                     	;# 
  1311  070D                     	;# 
  1312  070E                     	;# 
  1313  070F                     	;# 
  1314  0710                     	;# 
  1315  0711                     	;# 
  1316  0712                     	;# 
  1317  0713                     	;# 
  1318  0714                     	;# 
  1319  0716                     	;# 
  1320  0717                     	;# 
  1321  0718                     	;# 
  1322  0719                     	;# 
  1323  071A                     	;# 
  1324  071B                     	;# 
  1325  071C                     	;# 
  1326  071D                     	;# 
  1327  071E                     	;# 
  1328  0796                     	;# 
  1329  0797                     	;# 
  1330  0798                     	;# 
  1331  0799                     	;# 
  1332  079A                     	;# 
  1333  079B                     	;# 
  1334  079C                     	;# 
  1335  079D                     	;# 
  1336  080C                     	;# 
  1337  080D                     	;# 
  1338  080E                     	;# 
  1339  080F                     	;# 
  1340  0810                     	;# 
  1341  0811                     	;# 
  1342  0812                     	;# 
  1343  0813                     	;# 
  1344  0814                     	;# 
  1345  081A                     	;# 
  1346  081A                     	;# 
  1347  081B                     	;# 
  1348  081C                     	;# 
  1349  081C                     	;# 
  1350  081D                     	;# 
  1351  081E                     	;# 
  1352  081F                     	;# 
  1353  088C                     	;# 
  1354  088D                     	;# 
  1355  088E                     	;# 
  1356  088F                     	;# 
  1357  0890                     	;# 
  1358  0891                     	;# 
  1359  0892                     	;# 
  1360  0893                     	;# 
  1361  0895                     	;# 
  1362  0896                     	;# 
  1363  0897                     	;# 
  1364  0898                     	;# 
  1365  0899                     	;# 
  1366  089A                     	;# 
  1367  089B                     	;# 
  1368  090C                     	;# 
  1369  090E                     	;# 
  1370  090F                     	;# 
  1371  091F                     	;# 
  1372  098F                     	;# 
  1373  098F                     	;# 
  1374  0990                     	;# 
  1375  0991                     	;# 
  1376  0992                     	;# 
  1377  0993                     	;# 
  1378  0994                     	;# 
  1379  0995                     	;# 
  1380  0996                     	;# 
  1381  0997                     	;# 
  1382  1E0F                     	;# 
  1383  1E10                     	;# 
  1384  1E11                     	;# 
  1385  1E12                     	;# 
  1386  1E13                     	;# 
  1387  1E14                     	;# 
  1388  1E15                     	;# 
  1389  1E16                     	;# 
  1390  1E17                     	;# 
  1391  1E18                     	;# 
  1392  1E19                     	;# 
  1393  1E1A                     	;# 
  1394  1E1B                     	;# 
  1395  1E1C                     	;# 
  1396  1E1D                     	;# 
  1397  1E1E                     	;# 
  1398  1E1F                     	;# 
  1399  1E20                     	;# 
  1400  1E21                     	;# 
  1401  1E22                     	;# 
  1402  1E23                     	;# 
  1403  1E24                     	;# 
  1404  1E25                     	;# 
  1405  1E26                     	;# 
  1406  1E27                     	;# 
  1407  1E28                     	;# 
  1408  1E29                     	;# 
  1409  1E2A                     	;# 
  1410  1E2B                     	;# 
  1411  1E2C                     	;# 
  1412  1E2D                     	;# 
  1413  1E2E                     	;# 
  1414  1E2F                     	;# 
  1415  1E30                     	;# 
  1416  1E31                     	;# 
  1417  1E32                     	;# 
  1418  1E33                     	;# 
  1419  1E34                     	;# 
  1420  1E35                     	;# 
  1421  1E36                     	;# 
  1422  1E37                     	;# 
  1423  1E8F                     	;# 
  1424  1E90                     	;# 
  1425  1E91                     	;# 
  1426  1E92                     	;# 
  1427  1E93                     	;# 
  1428  1E94                     	;# 
  1429  1E95                     	;# 
  1430  1E96                     	;# 
  1431  1E97                     	;# 
  1432  1E9C                     	;# 
  1433  1E9D                     	;# 
  1434  1E9E                     	;# 
  1435  1EA1                     	;# 
  1436  1EA2                     	;# 
  1437  1EA3                     	;# 
  1438  1EA4                     	;# 
  1439  1EA9                     	;# 
  1440  1EAA                     	;# 
  1441  1EB1                     	;# 
  1442  1EB2                     	;# 
  1443  1EB8                     	;# 
  1444  1EB9                     	;# 
  1445  1EBA                     	;# 
  1446  1EBB                     	;# 
  1447  1EBC                     	;# 
  1448  1EBD                     	;# 
  1449  1EBE                     	;# 
  1450  1EC3                     	;# 
  1451  1EC5                     	;# 
  1452  1EC6                     	;# 
  1453  1EC7                     	;# 
  1454  1EC8                     	;# 
  1455  1EC9                     	;# 
  1456  1ECA                     	;# 
  1457  1ECB                     	;# 
  1458  1ECB                     	;# 
  1459  1ECB                     	;# 
  1460  1ECC                     	;# 
  1461  1ECC                     	;# 
  1462  1ECC                     	;# 
  1463  1F10                     	;# 
  1464  1F11                     	;# 
  1465  1F12                     	;# 
  1466  1F14                     	;# 
  1467  1F15                     	;# 
  1468  1F1C                     	;# 
  1469  1F1D                     	;# 
  1470  1F1E                     	;# 
  1471  1F1F                     	;# 
  1472  1F20                     	;# 
  1473  1F21                     	;# 
  1474  1F22                     	;# 
  1475  1F23                     	;# 
  1476  1F24                     	;# 
  1477  1F25                     	;# 
  1478  1F26                     	;# 
  1479  1F27                     	;# 
  1480  1F38                     	;# 
  1481  1F39                     	;# 
  1482  1F3A                     	;# 
  1483  1F3B                     	;# 
  1484  1F3C                     	;# 
  1485  1F3D                     	;# 
  1486  1F3E                     	;# 
  1487  1F3F                     	;# 
  1488  1F43                     	;# 
  1489  1F44                     	;# 
  1490  1F45                     	;# 
  1491  1F46                     	;# 
  1492  1F47                     	;# 
  1493  1F48                     	;# 
  1494  1F49                     	;# 
  1495  1F4A                     	;# 
  1496  1F4E                     	;# 
  1497  1F4F                     	;# 
  1498  1F50                     	;# 
  1499  1F51                     	;# 
  1500  1F52                     	;# 
  1501  1F53                     	;# 
  1502  1F54                     	;# 
  1503  1F55                     	;# 
  1504  1FE4                     	;# 
  1505  1FE5                     	;# 
  1506  1FE6                     	;# 
  1507  1FE7                     	;# 
  1508  1FE8                     	;# 
  1509  1FE8                     	;# 
  1510  1FE9                     	;# 
  1511  1FEA                     	;# 
  1512  1FEB                     	;# 
  1513  1FED                     	;# 
  1514  1FEE                     	;# 
  1515  1FEF                     	;# 
  1516  0000                     	;# 
  1517  0001                     	;# 
  1518  0002                     	;# 
  1519  0003                     	;# 
  1520  0004                     	;# 
  1521  0005                     	;# 
  1522  0006                     	;# 
  1523  0007                     	;# 
  1524  0008                     	;# 
  1525  0009                     	;# 
  1526  000A                     	;# 
  1527  000B                     	;# 
  1528  000C                     	;# 
  1529  000D                     	;# 
  1530  000E                     	;# 
  1531  0012                     	;# 
  1532  0013                     	;# 
  1533  0014                     	;# 
  1534  0018                     	;# 
  1535  0019                     	;# 
  1536  001A                     	;# 
  1537  008C                     	;# 
  1538  008C                     	;# 
  1539  008D                     	;# 
  1540  008E                     	;# 
  1541  008E                     	;# 
  1542  008F                     	;# 
  1543  0090                     	;# 
  1544  0090                     	;# 
  1545  0091                     	;# 
  1546  0092                     	;# 
  1547  0092                     	;# 
  1548  0093                     	;# 
  1549  0094                     	;# 
  1550  0094                     	;# 
  1551  0095                     	;# 
  1552  0096                     	;# 
  1553  0096                     	;# 
  1554  0097                     	;# 
  1555  0098                     	;# 
  1556  0099                     	;# 
  1557  009A                     	;# 
  1558  009B                     	;# 
  1559  009B                     	;# 
  1560  009C                     	;# 
  1561  009D                     	;# 
  1562  009D                     	;# 
  1563  009E                     	;# 
  1564  009F                     	;# 
  1565  010C                     	;# 
  1566  010C                     	;# 
  1567  010D                     	;# 
  1568  010E                     	;# 
  1569  010F                     	;# 
  1570  010F                     	;# 
  1571  0110                     	;# 
  1572  0111                     	;# 
  1573  0112                     	;# 
  1574  0113                     	;# 
  1575  0114                     	;# 
  1576  0115                     	;# 
  1577  0116                     	;# 
  1578  0117                     	;# 
  1579  0118                     	;# 
  1580  0119                     	;# 
  1581  0119                     	;# 
  1582  0119                     	;# 
  1583  011A                     	;# 
  1584  011A                     	;# 
  1585  011A                     	;# 
  1586  011B                     	;# 
  1587  011B                     	;# 
  1588  011B                     	;# 
  1589  011B                     	;# 
  1590  011B                     	;# 
  1591  011C                     	;# 
  1592  011C                     	;# 
  1593  011C                     	;# 
  1594  011D                     	;# 
  1595  011D                     	;# 
  1596  011D                     	;# 
  1597  011E                     	;# 
  1598  011E                     	;# 
  1599  011E                     	;# 
  1600  011F                     	;# 
  1601  011F                     	;# 
  1602  011F                     	;# 
  1603  011F                     	;# 
  1604  011F                     	;# 
  1605  018C                     	;# 
  1606  018D                     	;# 
  1607  018E                     	;# 
  1608  018F                     	;# 
  1609  0190                     	;# 
  1610  0191                     	;# 
  1611  0192                     	;# 
  1612  0196                     	;# 
  1613  0197                     	;# 
  1614  0198                     	;# 
  1615  0199                     	;# 
  1616  019A                     	;# 
  1617  019B                     	;# 
  1618  019C                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  020E                     	;# 
  1622  020E                     	;# 
  1623  020F                     	;# 
  1624  020F                     	;# 
  1625  0210                     	;# 
  1626  0210                     	;# 
  1627  0211                     	;# 
  1628  0211                     	;# 
  1629  0212                     	;# 
  1630  0213                     	;# 
  1631  0214                     	;# 
  1632  0214                     	;# 
  1633  0215                     	;# 
  1634  0215                     	;# 
  1635  0216                     	;# 
  1636  0216                     	;# 
  1637  0217                     	;# 
  1638  0217                     	;# 
  1639  0218                     	;# 
  1640  0219                     	;# 
  1641  021A                     	;# 
  1642  021A                     	;# 
  1643  021B                     	;# 
  1644  021B                     	;# 
  1645  021C                     	;# 
  1646  021C                     	;# 
  1647  021D                     	;# 
  1648  021D                     	;# 
  1649  021E                     	;# 
  1650  021F                     	;# 
  1651  028C                     	;# 
  1652  028C                     	;# 
  1653  028D                     	;# 
  1654  028D                     	;# 
  1655  028E                     	;# 
  1656  028F                     	;# 
  1657  0290                     	;# 
  1658  0291                     	;# 
  1659  0292                     	;# 
  1660  0292                     	;# 
  1661  0293                     	;# 
  1662  0293                     	;# 
  1663  0294                     	;# 
  1664  0295                     	;# 
  1665  0296                     	;# 
  1666  0297                     	;# 
  1667  0298                     	;# 
  1668  0298                     	;# 
  1669  0299                     	;# 
  1670  0299                     	;# 
  1671  029A                     	;# 
  1672  029B                     	;# 
  1673  029C                     	;# 
  1674  029D                     	;# 
  1675  029F                     	;# 
  1676  030C                     	;# 
  1677  030C                     	;# 
  1678  030D                     	;# 
  1679  030E                     	;# 
  1680  030F                     	;# 
  1681  0310                     	;# 
  1682  0310                     	;# 
  1683  0311                     	;# 
  1684  0312                     	;# 
  1685  0313                     	;# 
  1686  0314                     	;# 
  1687  0314                     	;# 
  1688  0315                     	;# 
  1689  0316                     	;# 
  1690  0317                     	;# 
  1691  0318                     	;# 
  1692  0318                     	;# 
  1693  0319                     	;# 
  1694  031A                     	;# 
  1695  031B                     	;# 
  1696  038C                     	;# 
  1697  038C                     	;# 
  1698  038D                     	;# 
  1699  038E                     	;# 
  1700  0390                     	;# 
  1701  0390                     	;# 
  1702  0391                     	;# 
  1703  0392                     	;# 
  1704  048C                     	;# 
  1705  048C                     	;# 
  1706  048D                     	;# 
  1707  048E                     	;# 
  1708  048F                     	;# 
  1709  048F                     	;# 
  1710  0490                     	;# 
  1711  0491                     	;# 
  1712  0492                     	;# 
  1713  0492                     	;# 
  1714  0493                     	;# 
  1715  0494                     	;# 
  1716  0495                     	;# 
  1717  0495                     	;# 
  1718  0496                     	;# 
  1719  0497                     	;# 
  1720  0498                     	;# 
  1721  0499                     	;# 
  1722  049A                     	;# 
  1723  049B                     	;# 
  1724  049C                     	;# 
  1725  049D                     	;# 
  1726  058C                     	;# 
  1727  058C                     	;# 
  1728  058D                     	;# 
  1729  058E                     	;# 
  1730  058F                     	;# 
  1731  058F                     	;# 
  1732  0590                     	;# 
  1733  0591                     	;# 
  1734  0592                     	;# 
  1735  0593                     	;# 
  1736  059C                     	;# 
  1737  059C                     	;# 
  1738  059D                     	;# 
  1739  059D                     	;# 
  1740  059E                     	;# 
  1741  059F                     	;# 
  1742  060C                     	;# 
  1743  060C                     	;# 
  1744  060D                     	;# 
  1745  060D                     	;# 
  1746  060E                     	;# 
  1747  060F                     	;# 
  1748  0610                     	;# 
  1749  0611                     	;# 
  1750  0612                     	;# 
  1751  0613                     	;# 
  1752  0614                     	;# 
  1753  0616                     	;# 
  1754  0616                     	;# 
  1755  0617                     	;# 
  1756  0617                     	;# 
  1757  0618                     	;# 
  1758  0619                     	;# 
  1759  061A                     	;# 
  1760  061B                     	;# 
  1761  061C                     	;# 
  1762  061D                     	;# 
  1763  061E                     	;# 
  1764  070C                     	;# 
  1765  070D                     	;# 
  1766  070E                     	;# 
  1767  070F                     	;# 
  1768  0710                     	;# 
  1769  0711                     	;# 
  1770  0712                     	;# 
  1771  0713                     	;# 
  1772  0714                     	;# 
  1773  0716                     	;# 
  1774  0717                     	;# 
  1775  0718                     	;# 
  1776  0719                     	;# 
  1777  071A                     	;# 
  1778  071B                     	;# 
  1779  071C                     	;# 
  1780  071D                     	;# 
  1781  071E                     	;# 
  1782  0796                     	;# 
  1783  0797                     	;# 
  1784  0798                     	;# 
  1785  0799                     	;# 
  1786  079A                     	;# 
  1787  079B                     	;# 
  1788  079C                     	;# 
  1789  079D                     	;# 
  1790  080C                     	;# 
  1791  080D                     	;# 
  1792  080E                     	;# 
  1793  080F                     	;# 
  1794  0810                     	;# 
  1795  0811                     	;# 
  1796  0812                     	;# 
  1797  0813                     	;# 
  1798  0814                     	;# 
  1799  081A                     	;# 
  1800  081A                     	;# 
  1801  081B                     	;# 
  1802  081C                     	;# 
  1803  081C                     	;# 
  1804  081D                     	;# 
  1805  081E                     	;# 
  1806  081F                     	;# 
  1807  088C                     	;# 
  1808  088D                     	;# 
  1809  088E                     	;# 
  1810  088F                     	;# 
  1811  0890                     	;# 
  1812  0891                     	;# 
  1813  0892                     	;# 
  1814  0893                     	;# 
  1815  0895                     	;# 
  1816  0896                     	;# 
  1817  0897                     	;# 
  1818  0898                     	;# 
  1819  0899                     	;# 
  1820  089A                     	;# 
  1821  089B                     	;# 
  1822  090C                     	;# 
  1823  090E                     	;# 
  1824  090F                     	;# 
  1825  091F                     	;# 
  1826  098F                     	;# 
  1827  098F                     	;# 
  1828  0990                     	;# 
  1829  0991                     	;# 
  1830  0992                     	;# 
  1831  0993                     	;# 
  1832  0994                     	;# 
  1833  0995                     	;# 
  1834  0996                     	;# 
  1835  0997                     	;# 
  1836  1E0F                     	;# 
  1837  1E10                     	;# 
  1838  1E11                     	;# 
  1839  1E12                     	;# 
  1840  1E13                     	;# 
  1841  1E14                     	;# 
  1842  1E15                     	;# 
  1843  1E16                     	;# 
  1844  1E17                     	;# 
  1845  1E18                     	;# 
  1846  1E19                     	;# 
  1847  1E1A                     	;# 
  1848  1E1B                     	;# 
  1849  1E1C                     	;# 
  1850  1E1D                     	;# 
  1851  1E1E                     	;# 
  1852  1E1F                     	;# 
  1853  1E20                     	;# 
  1854  1E21                     	;# 
  1855  1E22                     	;# 
  1856  1E23                     	;# 
  1857  1E24                     	;# 
  1858  1E25                     	;# 
  1859  1E26                     	;# 
  1860  1E27                     	;# 
  1861  1E28                     	;# 
  1862  1E29                     	;# 
  1863  1E2A                     	;# 
  1864  1E2B                     	;# 
  1865  1E2C                     	;# 
  1866  1E2D                     	;# 
  1867  1E2E                     	;# 
  1868  1E2F                     	;# 
  1869  1E30                     	;# 
  1870  1E31                     	;# 
  1871  1E32                     	;# 
  1872  1E33                     	;# 
  1873  1E34                     	;# 
  1874  1E35                     	;# 
  1875  1E36                     	;# 
  1876  1E37                     	;# 
  1877  1E8F                     	;# 
  1878  1E90                     	;# 
  1879  1E91                     	;# 
  1880  1E92                     	;# 
  1881  1E93                     	;# 
  1882  1E94                     	;# 
  1883  1E95                     	;# 
  1884  1E96                     	;# 
  1885  1E97                     	;# 
  1886  1E9C                     	;# 
  1887  1E9D                     	;# 
  1888  1E9E                     	;# 
  1889  1EA1                     	;# 
  1890  1EA2                     	;# 
  1891  1EA3                     	;# 
  1892  1EA4                     	;# 
  1893  1EA9                     	;# 
  1894  1EAA                     	;# 
  1895  1EB1                     	;# 
  1896  1EB2                     	;# 
  1897  1EB8                     	;# 
  1898  1EB9                     	;# 
  1899  1EBA                     	;# 
  1900  1EBB                     	;# 
  1901  1EBC                     	;# 
  1902  1EBD                     	;# 
  1903  1EBE                     	;# 
  1904  1EC3                     	;# 
  1905  1EC5                     	;# 
  1906  1EC6                     	;# 
  1907  1EC7                     	;# 
  1908  1EC8                     	;# 
  1909  1EC9                     	;# 
  1910  1ECA                     	;# 
  1911  1ECB                     	;# 
  1912  1ECB                     	;# 
  1913  1ECB                     	;# 
  1914  1ECC                     	;# 
  1915  1ECC                     	;# 
  1916  1ECC                     	;# 
  1917  1F10                     	;# 
  1918  1F11                     	;# 
  1919  1F12                     	;# 
  1920  1F14                     	;# 
  1921  1F15                     	;# 
  1922  1F1C                     	;# 
  1923  1F1D                     	;# 
  1924  1F1E                     	;# 
  1925  1F1F                     	;# 
  1926  1F20                     	;# 
  1927  1F21                     	;# 
  1928  1F22                     	;# 
  1929  1F23                     	;# 
  1930  1F24                     	;# 
  1931  1F25                     	;# 
  1932  1F26                     	;# 
  1933  1F27                     	;# 
  1934  1F38                     	;# 
  1935  1F39                     	;# 
  1936  1F3A                     	;# 
  1937  1F3B                     	;# 
  1938  1F3C                     	;# 
  1939  1F3D                     	;# 
  1940  1F3E                     	;# 
  1941  1F3F                     	;# 
  1942  1F43                     	;# 
  1943  1F44                     	;# 
  1944  1F45                     	;# 
  1945  1F46                     	;# 
  1946  1F47                     	;# 
  1947  1F48                     	;# 
  1948  1F49                     	;# 
  1949  1F4A                     	;# 
  1950  1F4E                     	;# 
  1951  1F4F                     	;# 
  1952  1F50                     	;# 
  1953  1F51                     	;# 
  1954  1F52                     	;# 
  1955  1F53                     	;# 
  1956  1F54                     	;# 
  1957  1F55                     	;# 
  1958  1FE4                     	;# 
  1959  1FE5                     	;# 
  1960  1FE6                     	;# 
  1961  1FE7                     	;# 
  1962  1FE8                     	;# 
  1963  1FE8                     	;# 
  1964  1FE9                     	;# 
  1965  1FEA                     	;# 
  1966  1FEB                     	;# 
  1967  1FED                     	;# 
  1968  1FEE                     	;# 
  1969  1FEF                     	;# 
  1970  0000                     	;# 
  1971  0001                     	;# 
  1972  0002                     	;# 
  1973  0003                     	;# 
  1974  0004                     	;# 
  1975  0005                     	;# 
  1976  0006                     	;# 
  1977  0007                     	;# 
  1978  0008                     	;# 
  1979  0009                     	;# 
  1980  000A                     	;# 
  1981  000B                     	;# 
  1982  000C                     	;# 
  1983  000D                     	;# 
  1984  000E                     	;# 
  1985  0012                     	;# 
  1986  0013                     	;# 
  1987  0014                     	;# 
  1988  0018                     	;# 
  1989  0019                     	;# 
  1990  001A                     	;# 
  1991  008C                     	;# 
  1992  008C                     	;# 
  1993  008D                     	;# 
  1994  008E                     	;# 
  1995  008E                     	;# 
  1996  008F                     	;# 
  1997  0090                     	;# 
  1998  0090                     	;# 
  1999  0091                     	;# 
  2000  0092                     	;# 
  2001  0092                     	;# 
  2002  0093                     	;# 
  2003  0094                     	;# 
  2004  0094                     	;# 
  2005  0095                     	;# 
  2006  0096                     	;# 
  2007  0096                     	;# 
  2008  0097                     	;# 
  2009  0098                     	;# 
  2010  0099                     	;# 
  2011  009A                     	;# 
  2012  009B                     	;# 
  2013  009B                     	;# 
  2014  009C                     	;# 
  2015  009D                     	;# 
  2016  009D                     	;# 
  2017  009E                     	;# 
  2018  009F                     	;# 
  2019  010C                     	;# 
  2020  010C                     	;# 
  2021  010D                     	;# 
  2022  010E                     	;# 
  2023  010F                     	;# 
  2024  010F                     	;# 
  2025  0110                     	;# 
  2026  0111                     	;# 
  2027  0112                     	;# 
  2028  0113                     	;# 
  2029  0114                     	;# 
  2030  0115                     	;# 
  2031  0116                     	;# 
  2032  0117                     	;# 
  2033  0118                     	;# 
  2034  0119                     	;# 
  2035  0119                     	;# 
  2036  0119                     	;# 
  2037  011A                     	;# 
  2038  011A                     	;# 
  2039  011A                     	;# 
  2040  011B                     	;# 
  2041  011B                     	;# 
  2042  011B                     	;# 
  2043  011B                     	;# 
  2044  011B                     	;# 
  2045  011C                     	;# 
  2046  011C                     	;# 
  2047  011C                     	;# 
  2048  011D                     	;# 
  2049  011D                     	;# 
  2050  011D                     	;# 
  2051  011E                     	;# 
  2052  011E                     	;# 
  2053  011E                     	;# 
  2054  011F                     	;# 
  2055  011F                     	;# 
  2056  011F                     	;# 
  2057  011F                     	;# 
  2058  011F                     	;# 
  2059  018C                     	;# 
  2060  018D                     	;# 
  2061  018E                     	;# 
  2062  018F                     	;# 
  2063  0190                     	;# 
  2064  0191                     	;# 
  2065  0192                     	;# 
  2066  0196                     	;# 
  2067  0197                     	;# 
  2068  0198                     	;# 
  2069  0199                     	;# 
  2070  019A                     	;# 
  2071  019B                     	;# 
  2072  019C                     	;# 
  2073  020C                     	;# 
  2074  020D                     	;# 
  2075  020E                     	;# 
  2076  020E                     	;# 
  2077  020F                     	;# 
  2078  020F                     	;# 
  2079  0210                     	;# 
  2080  0210                     	;# 
  2081  0211                     	;# 
  2082  0211                     	;# 
  2083  0212                     	;# 
  2084  0213                     	;# 
  2085  0214                     	;# 
  2086  0214                     	;# 
  2087  0215                     	;# 
  2088  0215                     	;# 
  2089  0216                     	;# 
  2090  0216                     	;# 
  2091  0217                     	;# 
  2092  0217                     	;# 
  2093  0218                     	;# 
  2094  0219                     	;# 
  2095  021A                     	;# 
  2096  021A                     	;# 
  2097  021B                     	;# 
  2098  021B                     	;# 
  2099  021C                     	;# 
  2100  021C                     	;# 
  2101  021D                     	;# 
  2102  021D                     	;# 
  2103  021E                     	;# 
  2104  021F                     	;# 
  2105  028C                     	;# 
  2106  028C                     	;# 
  2107  028D                     	;# 
  2108  028D                     	;# 
  2109  028E                     	;# 
  2110  028F                     	;# 
  2111  0290                     	;# 
  2112  0291                     	;# 
  2113  0292                     	;# 
  2114  0292                     	;# 
  2115  0293                     	;# 
  2116  0293                     	;# 
  2117  0294                     	;# 
  2118  0295                     	;# 
  2119  0296                     	;# 
  2120  0297                     	;# 
  2121  0298                     	;# 
  2122  0298                     	;# 
  2123  0299                     	;# 
  2124  0299                     	;# 
  2125  029A                     	;# 
  2126  029B                     	;# 
  2127  029C                     	;# 
  2128  029D                     	;# 
  2129  029F                     	;# 
  2130  030C                     	;# 
  2131  030C                     	;# 
  2132  030D                     	;# 
  2133  030E                     	;# 
  2134  030F                     	;# 
  2135  0310                     	;# 
  2136  0310                     	;# 
  2137  0311                     	;# 
  2138  0312                     	;# 
  2139  0313                     	;# 
  2140  0314                     	;# 
  2141  0314                     	;# 
  2142  0315                     	;# 
  2143  0316                     	;# 
  2144  0317                     	;# 
  2145  0318                     	;# 
  2146  0318                     	;# 
  2147  0319                     	;# 
  2148  031A                     	;# 
  2149  031B                     	;# 
  2150  038C                     	;# 
  2151  038C                     	;# 
  2152  038D                     	;# 
  2153  038E                     	;# 
  2154  0390                     	;# 
  2155  0390                     	;# 
  2156  0391                     	;# 
  2157  0392                     	;# 
  2158  048C                     	;# 
  2159  048C                     	;# 
  2160  048D                     	;# 
  2161  048E                     	;# 
  2162  048F                     	;# 
  2163  048F                     	;# 
  2164  0490                     	;# 
  2165  0491                     	;# 
  2166  0492                     	;# 
  2167  0492                     	;# 
  2168  0493                     	;# 
  2169  0494                     	;# 
  2170  0495                     	;# 
  2171  0495                     	;# 
  2172  0496                     	;# 
  2173  0497                     	;# 
  2174  0498                     	;# 
  2175  0499                     	;# 
  2176  049A                     	;# 
  2177  049B                     	;# 
  2178  049C                     	;# 
  2179  049D                     	;# 
  2180  058C                     	;# 
  2181  058C                     	;# 
  2182  058D                     	;# 
  2183  058E                     	;# 
  2184  058F                     	;# 
  2185  058F                     	;# 
  2186  0590                     	;# 
  2187  0591                     	;# 
  2188  0592                     	;# 
  2189  0593                     	;# 
  2190  059C                     	;# 
  2191  059C                     	;# 
  2192  059D                     	;# 
  2193  059D                     	;# 
  2194  059E                     	;# 
  2195  059F                     	;# 
  2196  060C                     	;# 
  2197  060C                     	;# 
  2198  060D                     	;# 
  2199  060D                     	;# 
  2200  060E                     	;# 
  2201  060F                     	;# 
  2202  0610                     	;# 
  2203  0611                     	;# 
  2204  0612                     	;# 
  2205  0613                     	;# 
  2206  0614                     	;# 
  2207  0616                     	;# 
  2208  0616                     	;# 
  2209  0617                     	;# 
  2210  0617                     	;# 
  2211  0618                     	;# 
  2212  0619                     	;# 
  2213  061A                     	;# 
  2214  061B                     	;# 
  2215  061C                     	;# 
  2216  061D                     	;# 
  2217  061E                     	;# 
  2218  070C                     	;# 
  2219  070D                     	;# 
  2220  070E                     	;# 
  2221  070F                     	;# 
  2222  0710                     	;# 
  2223  0711                     	;# 
  2224  0712                     	;# 
  2225  0713                     	;# 
  2226  0714                     	;# 
  2227  0716                     	;# 
  2228  0717                     	;# 
  2229  0718                     	;# 
  2230  0719                     	;# 
  2231  071A                     	;# 
  2232  071B                     	;# 
  2233  071C                     	;# 
  2234  071D                     	;# 
  2235  071E                     	;# 
  2236  0796                     	;# 
  2237  0797                     	;# 
  2238  0798                     	;# 
  2239  0799                     	;# 
  2240  079A                     	;# 
  2241  079B                     	;# 
  2242  079C                     	;# 
  2243  079D                     	;# 
  2244  080C                     	;# 
  2245  080D                     	;# 
  2246  080E                     	;# 
  2247  080F                     	;# 
  2248  0810                     	;# 
  2249  0811                     	;# 
  2250  0812                     	;# 
  2251  0813                     	;# 
  2252  0814                     	;# 
  2253  081A                     	;# 
  2254  081A                     	;# 
  2255  081B                     	;# 
  2256  081C                     	;# 
  2257  081C                     	;# 
  2258  081D                     	;# 
  2259  081E                     	;# 
  2260  081F                     	;# 
  2261  088C                     	;# 
  2262  088D                     	;# 
  2263  088E                     	;# 
  2264  088F                     	;# 
  2265  0890                     	;# 
  2266  0891                     	;# 
  2267  0892                     	;# 
  2268  0893                     	;# 
  2269  0895                     	;# 
  2270  0896                     	;# 
  2271  0897                     	;# 
  2272  0898                     	;# 
  2273  0899                     	;# 
  2274  089A                     	;# 
  2275  089B                     	;# 
  2276  090C                     	;# 
  2277  090E                     	;# 
  2278  090F                     	;# 
  2279  091F                     	;# 
  2280  098F                     	;# 
  2281  098F                     	;# 
  2282  0990                     	;# 
  2283  0991                     	;# 
  2284  0992                     	;# 
  2285  0993                     	;# 
  2286  0994                     	;# 
  2287  0995                     	;# 
  2288  0996                     	;# 
  2289  0997                     	;# 
  2290  1E0F                     	;# 
  2291  1E10                     	;# 
  2292  1E11                     	;# 
  2293  1E12                     	;# 
  2294  1E13                     	;# 
  2295  1E14                     	;# 
  2296  1E15                     	;# 
  2297  1E16                     	;# 
  2298  1E17                     	;# 
  2299  1E18                     	;# 
  2300  1E19                     	;# 
  2301  1E1A                     	;# 
  2302  1E1B                     	;# 
  2303  1E1C                     	;# 
  2304  1E1D                     	;# 
  2305  1E1E                     	;# 
  2306  1E1F                     	;# 
  2307  1E20                     	;# 
  2308  1E21                     	;# 
  2309  1E22                     	;# 
  2310  1E23                     	;# 
  2311  1E24                     	;# 
  2312  1E25                     	;# 
  2313  1E26                     	;# 
  2314  1E27                     	;# 
  2315  1E28                     	;# 
  2316  1E29                     	;# 
  2317  1E2A                     	;# 
  2318  1E2B                     	;# 
  2319  1E2C                     	;# 
  2320  1E2D                     	;# 
  2321  1E2E                     	;# 
  2322  1E2F                     	;# 
  2323  1E30                     	;# 
  2324  1E31                     	;# 
  2325  1E32                     	;# 
  2326  1E33                     	;# 
  2327  1E34                     	;# 
  2328  1E35                     	;# 
  2329  1E36                     	;# 
  2330  1E37                     	;# 
  2331  1E8F                     	;# 
  2332  1E90                     	;# 
  2333  1E91                     	;# 
  2334  1E92                     	;# 
  2335  1E93                     	;# 
  2336  1E94                     	;# 
  2337  1E95                     	;# 
  2338  1E96                     	;# 
  2339  1E97                     	;# 
  2340  1E9C                     	;# 
  2341  1E9D                     	;# 
  2342  1E9E                     	;# 
  2343  1EA1                     	;# 
  2344  1EA2                     	;# 
  2345  1EA3                     	;# 
  2346  1EA4                     	;# 
  2347  1EA9                     	;# 
  2348  1EAA                     	;# 
  2349  1EB1                     	;# 
  2350  1EB2                     	;# 
  2351  1EB8                     	;# 
  2352  1EB9                     	;# 
  2353  1EBA                     	;# 
  2354  1EBB                     	;# 
  2355  1EBC                     	;# 
  2356  1EBD                     	;# 
  2357  1EBE                     	;# 
  2358  1EC3                     	;# 
  2359  1EC5                     	;# 
  2360  1EC6                     	;# 
  2361  1EC7                     	;# 
  2362  1EC8                     	;# 
  2363  1EC9                     	;# 
  2364  1ECA                     	;# 
  2365  1ECB                     	;# 
  2366  1ECB                     	;# 
  2367  1ECB                     	;# 
  2368  1ECC                     	;# 
  2369  1ECC                     	;# 
  2370  1ECC                     	;# 
  2371  1F10                     	;# 
  2372  1F11                     	;# 
  2373  1F12                     	;# 
  2374  1F14                     	;# 
  2375  1F15                     	;# 
  2376  1F1C                     	;# 
  2377  1F1D                     	;# 
  2378  1F1E                     	;# 
  2379  1F1F                     	;# 
  2380  1F20                     	;# 
  2381  1F21                     	;# 
  2382  1F22                     	;# 
  2383  1F23                     	;# 
  2384  1F24                     	;# 
  2385  1F25                     	;# 
  2386  1F26                     	;# 
  2387  1F27                     	;# 
  2388  1F38                     	;# 
  2389  1F39                     	;# 
  2390  1F3A                     	;# 
  2391  1F3B                     	;# 
  2392  1F3C                     	;# 
  2393  1F3D                     	;# 
  2394  1F3E                     	;# 
  2395  1F3F                     	;# 
  2396  1F43                     	;# 
  2397  1F44                     	;# 
  2398  1F45                     	;# 
  2399  1F46                     	;# 
  2400  1F47                     	;# 
  2401  1F48                     	;# 
  2402  1F49                     	;# 
  2403  1F4A                     	;# 
  2404  1F4E                     	;# 
  2405  1F4F                     	;# 
  2406  1F50                     	;# 
  2407  1F51                     	;# 
  2408  1F52                     	;# 
  2409  1F53                     	;# 
  2410  1F54                     	;# 
  2411  1F55                     	;# 
  2412  1FE4                     	;# 
  2413  1FE5                     	;# 
  2414  1FE6                     	;# 
  2415  1FE7                     	;# 
  2416  1FE8                     	;# 
  2417  1FE8                     	;# 
  2418  1FE9                     	;# 
  2419  1FEA                     	;# 
  2420  1FEB                     	;# 
  2421  1FED                     	;# 
  2422  1FEE                     	;# 
  2423  1FEF                     	;# 
  2424  0000                     	;# 
  2425  0001                     	;# 
  2426  0002                     	;# 
  2427  0003                     	;# 
  2428  0004                     	;# 
  2429  0005                     	;# 
  2430  0006                     	;# 
  2431  0007                     	;# 
  2432  0008                     	;# 
  2433  0009                     	;# 
  2434  000A                     	;# 
  2435  000B                     	;# 
  2436  000C                     	;# 
  2437  000D                     	;# 
  2438  000E                     	;# 
  2439  0012                     	;# 
  2440  0013                     	;# 
  2441  0014                     	;# 
  2442  0018                     	;# 
  2443  0019                     	;# 
  2444  001A                     	;# 
  2445  008C                     	;# 
  2446  008C                     	;# 
  2447  008D                     	;# 
  2448  008E                     	;# 
  2449  008E                     	;# 
  2450  008F                     	;# 
  2451  0090                     	;# 
  2452  0090                     	;# 
  2453  0091                     	;# 
  2454  0092                     	;# 
  2455  0092                     	;# 
  2456  0093                     	;# 
  2457  0094                     	;# 
  2458  0094                     	;# 
  2459  0095                     	;# 
  2460  0096                     	;# 
  2461  0096                     	;# 
  2462  0097                     	;# 
  2463  0098                     	;# 
  2464  0099                     	;# 
  2465  009A                     	;# 
  2466  009B                     	;# 
  2467  009B                     	;# 
  2468  009C                     	;# 
  2469  009D                     	;# 
  2470  009D                     	;# 
  2471  009E                     	;# 
  2472  009F                     	;# 
  2473  010C                     	;# 
  2474  010C                     	;# 
  2475  010D                     	;# 
  2476  010E                     	;# 
  2477  010F                     	;# 
  2478  010F                     	;# 
  2479  0110                     	;# 
  2480  0111                     	;# 
  2481  0112                     	;# 
  2482  0113                     	;# 
  2483  0114                     	;# 
  2484  0115                     	;# 
  2485  0116                     	;# 
  2486  0117                     	;# 
  2487  0118                     	;# 
  2488  0119                     	;# 
  2489  0119                     	;# 
  2490  0119                     	;# 
  2491  011A                     	;# 
  2492  011A                     	;# 
  2493  011A                     	;# 
  2494  011B                     	;# 
  2495  011B                     	;# 
  2496  011B                     	;# 
  2497  011B                     	;# 
  2498  011B                     	;# 
  2499  011C                     	;# 
  2500  011C                     	;# 
  2501  011C                     	;# 
  2502  011D                     	;# 
  2503  011D                     	;# 
  2504  011D                     	;# 
  2505  011E                     	;# 
  2506  011E                     	;# 
  2507  011E                     	;# 
  2508  011F                     	;# 
  2509  011F                     	;# 
  2510  011F                     	;# 
  2511  011F                     	;# 
  2512  011F                     	;# 
  2513  018C                     	;# 
  2514  018D                     	;# 
  2515  018E                     	;# 
  2516  018F                     	;# 
  2517  0190                     	;# 
  2518  0191                     	;# 
  2519  0192                     	;# 
  2520  0196                     	;# 
  2521  0197                     	;# 
  2522  0198                     	;# 
  2523  0199                     	;# 
  2524  019A                     	;# 
  2525  019B                     	;# 
  2526  019C                     	;# 
  2527  020C                     	;# 
  2528  020D                     	;# 
  2529  020E                     	;# 
  2530  020E                     	;# 
  2531  020F                     	;# 
  2532  020F                     	;# 
  2533  0210                     	;# 
  2534  0210                     	;# 
  2535  0211                     	;# 
  2536  0211                     	;# 
  2537  0212                     	;# 
  2538  0213                     	;# 
  2539  0214                     	;# 
  2540  0214                     	;# 
  2541  0215                     	;# 
  2542  0215                     	;# 
  2543  0216                     	;# 
  2544  0216                     	;# 
  2545  0217                     	;# 
  2546  0217                     	;# 
  2547  0218                     	;# 
  2548  0219                     	;# 
  2549  021A                     	;# 
  2550  021A                     	;# 
  2551  021B                     	;# 
  2552  021B                     	;# 
  2553  021C                     	;# 
  2554  021C                     	;# 
  2555  021D                     	;# 
  2556  021D                     	;# 
  2557  021E                     	;# 
  2558  021F                     	;# 
  2559  028C                     	;# 
  2560  028C                     	;# 
  2561  028D                     	;# 
  2562  028D                     	;# 
  2563  028E                     	;# 
  2564  028F                     	;# 
  2565  0290                     	;# 
  2566  0291                     	;# 
  2567  0292                     	;# 
  2568  0292                     	;# 
  2569  0293                     	;# 
  2570  0293                     	;# 
  2571  0294                     	;# 
  2572  0295                     	;# 
  2573  0296                     	;# 
  2574  0297                     	;# 
  2575  0298                     	;# 
  2576  0298                     	;# 
  2577  0299                     	;# 
  2578  0299                     	;# 
  2579  029A                     	;# 
  2580  029B                     	;# 
  2581  029C                     	;# 
  2582  029D                     	;# 
  2583  029F                     	;# 
  2584  030C                     	;# 
  2585  030C                     	;# 
  2586  030D                     	;# 
  2587  030E                     	;# 
  2588  030F                     	;# 
  2589  0310                     	;# 
  2590  0310                     	;# 
  2591  0311                     	;# 
  2592  0312                     	;# 
  2593  0313                     	;# 
  2594  0314                     	;# 
  2595  0314                     	;# 
  2596  0315                     	;# 
  2597  0316                     	;# 
  2598  0317                     	;# 
  2599  0318                     	;# 
  2600  0318                     	;# 
  2601  0319                     	;# 
  2602  031A                     	;# 
  2603  031B                     	;# 
  2604  038C                     	;# 
  2605  038C                     	;# 
  2606  038D                     	;# 
  2607  038E                     	;# 
  2608  0390                     	;# 
  2609  0390                     	;# 
  2610  0391                     	;# 
  2611  0392                     	;# 
  2612  048C                     	;# 
  2613  048C                     	;# 
  2614  048D                     	;# 
  2615  048E                     	;# 
  2616  048F                     	;# 
  2617  048F                     	;# 
  2618  0490                     	;# 
  2619  0491                     	;# 
  2620  0492                     	;# 
  2621  0492                     	;# 
  2622  0493                     	;# 
  2623  0494                     	;# 
  2624  0495                     	;# 
  2625  0495                     	;# 
  2626  0496                     	;# 
  2627  0497                     	;# 
  2628  0498                     	;# 
  2629  0499                     	;# 
  2630  049A                     	;# 
  2631  049B                     	;# 
  2632  049C                     	;# 
  2633  049D                     	;# 
  2634  058C                     	;# 
  2635  058C                     	;# 
  2636  058D                     	;# 
  2637  058E                     	;# 
  2638  058F                     	;# 
  2639  058F                     	;# 
  2640  0590                     	;# 
  2641  0591                     	;# 
  2642  0592                     	;# 
  2643  0593                     	;# 
  2644  059C                     	;# 
  2645  059C                     	;# 
  2646  059D                     	;# 
  2647  059D                     	;# 
  2648  059E                     	;# 
  2649  059F                     	;# 
  2650  060C                     	;# 
  2651  060C                     	;# 
  2652  060D                     	;# 
  2653  060D                     	;# 
  2654  060E                     	;# 
  2655  060F                     	;# 
  2656  0610                     	;# 
  2657  0611                     	;# 
  2658  0612                     	;# 
  2659  0613                     	;# 
  2660  0614                     	;# 
  2661  0616                     	;# 
  2662  0616                     	;# 
  2663  0617                     	;# 
  2664  0617                     	;# 
  2665  0618                     	;# 
  2666  0619                     	;# 
  2667  061A                     	;# 
  2668  061B                     	;# 
  2669  061C                     	;# 
  2670  061D                     	;# 
  2671  061E                     	;# 
  2672  070C                     	;# 
  2673  070D                     	;# 
  2674  070E                     	;# 
  2675  070F                     	;# 
  2676  0710                     	;# 
  2677  0711                     	;# 
  2678  0712                     	;# 
  2679  0713                     	;# 
  2680  0714                     	;# 
  2681  0716                     	;# 
  2682  0717                     	;# 
  2683  0718                     	;# 
  2684  0719                     	;# 
  2685  071A                     	;# 
  2686  071B                     	;# 
  2687  071C                     	;# 
  2688  071D                     	;# 
  2689  071E                     	;# 
  2690  0796                     	;# 
  2691  0797                     	;# 
  2692  0798                     	;# 
  2693  0799                     	;# 
  2694  079A                     	;# 
  2695  079B                     	;# 
  2696  079C                     	;# 
  2697  079D                     	;# 
  2698  080C                     	;# 
  2699  080D                     	;# 
  2700  080E                     	;# 
  2701  080F                     	;# 
  2702  0810                     	;# 
  2703  0811                     	;# 
  2704  0812                     	;# 
  2705  0813                     	;# 
  2706  0814                     	;# 
  2707  081A                     	;# 
  2708  081A                     	;# 
  2709  081B                     	;# 
  2710  081C                     	;# 
  2711  081C                     	;# 
  2712  081D                     	;# 
  2713  081E                     	;# 
  2714  081F                     	;# 
  2715  088C                     	;# 
  2716  088D                     	;# 
  2717  088E                     	;# 
  2718  088F                     	;# 
  2719  0890                     	;# 
  2720  0891                     	;# 
  2721  0892                     	;# 
  2722  0893                     	;# 
  2723  0895                     	;# 
  2724  0896                     	;# 
  2725  0897                     	;# 
  2726  0898                     	;# 
  2727  0899                     	;# 
  2728  089A                     	;# 
  2729  089B                     	;# 
  2730  090C                     	;# 
  2731  090E                     	;# 
  2732  090F                     	;# 
  2733  091F                     	;# 
  2734  098F                     	;# 
  2735  098F                     	;# 
  2736  0990                     	;# 
  2737  0991                     	;# 
  2738  0992                     	;# 
  2739  0993                     	;# 
  2740  0994                     	;# 
  2741  0995                     	;# 
  2742  0996                     	;# 
  2743  0997                     	;# 
  2744  1E0F                     	;# 
  2745  1E10                     	;# 
  2746  1E11                     	;# 
  2747  1E12                     	;# 
  2748  1E13                     	;# 
  2749  1E14                     	;# 
  2750  1E15                     	;# 
  2751  1E16                     	;# 
  2752  1E17                     	;# 
  2753  1E18                     	;# 
  2754  1E19                     	;# 
  2755  1E1A                     	;# 
  2756  1E1B                     	;# 
  2757  1E1C                     	;# 
  2758  1E1D                     	;# 
  2759  1E1E                     	;# 
  2760  1E1F                     	;# 
  2761  1E20                     	;# 
  2762  1E21                     	;# 
  2763  1E22                     	;# 
  2764  1E23                     	;# 
  2765  1E24                     	;# 
  2766  1E25                     	;# 
  2767  1E26                     	;# 
  2768  1E27                     	;# 
  2769  1E28                     	;# 
  2770  1E29                     	;# 
  2771  1E2A                     	;# 
  2772  1E2B                     	;# 
  2773  1E2C                     	;# 
  2774  1E2D                     	;# 
  2775  1E2E                     	;# 
  2776  1E2F                     	;# 
  2777  1E30                     	;# 
  2778  1E31                     	;# 
  2779  1E32                     	;# 
  2780  1E33                     	;# 
  2781  1E34                     	;# 
  2782  1E35                     	;# 
  2783  1E36                     	;# 
  2784  1E37                     	;# 
  2785  1E8F                     	;# 
  2786  1E90                     	;# 
  2787  1E91                     	;# 
  2788  1E92                     	;# 
  2789  1E93                     	;# 
  2790  1E94                     	;# 
  2791  1E95                     	;# 
  2792  1E96                     	;# 
  2793  1E97                     	;# 
  2794  1E9C                     	;# 
  2795  1E9D                     	;# 
  2796  1E9E                     	;# 
  2797  1EA1                     	;# 
  2798  1EA2                     	;# 
  2799  1EA3                     	;# 
  2800  1EA4                     	;# 
  2801  1EA9                     	;# 
  2802  1EAA                     	;# 
  2803  1EB1                     	;# 
  2804  1EB2                     	;# 
  2805  1EB8                     	;# 
  2806  1EB9                     	;# 
  2807  1EBA                     	;# 
  2808  1EBB                     	;# 
  2809  1EBC                     	;# 
  2810  1EBD                     	;# 
  2811  1EBE                     	;# 
  2812  1EC3                     	;# 
  2813  1EC5                     	;# 
  2814  1EC6                     	;# 
  2815  1EC7                     	;# 
  2816  1EC8                     	;# 
  2817  1EC9                     	;# 
  2818  1ECA                     	;# 
  2819  1ECB                     	;# 
  2820  1ECB                     	;# 
  2821  1ECB                     	;# 
  2822  1ECC                     	;# 
  2823  1ECC                     	;# 
  2824  1ECC                     	;# 
  2825  1F10                     	;# 
  2826  1F11                     	;# 
  2827  1F12                     	;# 
  2828  1F14                     	;# 
  2829  1F15                     	;# 
  2830  1F1C                     	;# 
  2831  1F1D                     	;# 
  2832  1F1E                     	;# 
  2833  1F1F                     	;# 
  2834  1F20                     	;# 
  2835  1F21                     	;# 
  2836  1F22                     	;# 
  2837  1F23                     	;# 
  2838  1F24                     	;# 
  2839  1F25                     	;# 
  2840  1F26                     	;# 
  2841  1F27                     	;# 
  2842  1F38                     	;# 
  2843  1F39                     	;# 
  2844  1F3A                     	;# 
  2845  1F3B                     	;# 
  2846  1F3C                     	;# 
  2847  1F3D                     	;# 
  2848  1F3E                     	;# 
  2849  1F3F                     	;# 
  2850  1F43                     	;# 
  2851  1F44                     	;# 
  2852  1F45                     	;# 
  2853  1F46                     	;# 
  2854  1F47                     	;# 
  2855  1F48                     	;# 
  2856  1F49                     	;# 
  2857  1F4A                     	;# 
  2858  1F4E                     	;# 
  2859  1F4F                     	;# 
  2860  1F50                     	;# 
  2861  1F51                     	;# 
  2862  1F52                     	;# 
  2863  1F53                     	;# 
  2864  1F54                     	;# 
  2865  1F55                     	;# 
  2866  1FE4                     	;# 
  2867  1FE5                     	;# 
  2868  1FE6                     	;# 
  2869  1FE7                     	;# 
  2870  1FE8                     	;# 
  2871  1FE8                     	;# 
  2872  1FE9                     	;# 
  2873  1FEA                     	;# 
  2874  1FEB                     	;# 
  2875  1FED                     	;# 
  2876  1FEE                     	;# 
  2877  1FEF                     	;# 
  2878  0000                     	;# 
  2879  0001                     	;# 
  2880  0002                     	;# 
  2881  0003                     	;# 
  2882  0004                     	;# 
  2883  0005                     	;# 
  2884  0006                     	;# 
  2885  0007                     	;# 
  2886  0008                     	;# 
  2887  0009                     	;# 
  2888  000A                     	;# 
  2889  000B                     	;# 
  2890  000C                     	;# 
  2891  000D                     	;# 
  2892  000E                     	;# 
  2893  0012                     	;# 
  2894  0013                     	;# 
  2895  0014                     	;# 
  2896  0018                     	;# 
  2897  0019                     	;# 
  2898  001A                     	;# 
  2899  008C                     	;# 
  2900  008C                     	;# 
  2901  008D                     	;# 
  2902  008E                     	;# 
  2903  008E                     	;# 
  2904  008F                     	;# 
  2905  0090                     	;# 
  2906  0090                     	;# 
  2907  0091                     	;# 
  2908  0092                     	;# 
  2909  0092                     	;# 
  2910  0093                     	;# 
  2911  0094                     	;# 
  2912  0094                     	;# 
  2913  0095                     	;# 
  2914  0096                     	;# 
  2915  0096                     	;# 
  2916  0097                     	;# 
  2917  0098                     	;# 
  2918  0099                     	;# 
  2919  009A                     	;# 
  2920  009B                     	;# 
  2921  009B                     	;# 
  2922  009C                     	;# 
  2923  009D                     	;# 
  2924  009D                     	;# 
  2925  009E                     	;# 
  2926  009F                     	;# 
  2927  010C                     	;# 
  2928  010C                     	;# 
  2929  010D                     	;# 
  2930  010E                     	;# 
  2931  010F                     	;# 
  2932  010F                     	;# 
  2933  0110                     	;# 
  2934  0111                     	;# 
  2935  0112                     	;# 
  2936  0113                     	;# 
  2937  0114                     	;# 
  2938  0115                     	;# 
  2939  0116                     	;# 
  2940  0117                     	;# 
  2941  0118                     	;# 
  2942  0119                     	;# 
  2943  0119                     	;# 
  2944  0119                     	;# 
  2945  011A                     	;# 
  2946  011A                     	;# 
  2947  011A                     	;# 
  2948  011B                     	;# 
  2949  011B                     	;# 
  2950  011B                     	;# 
  2951  011B                     	;# 
  2952  011B                     	;# 
  2953  011C                     	;# 
  2954  011C                     	;# 
  2955  011C                     	;# 
  2956  011D                     	;# 
  2957  011D                     	;# 
  2958  011D                     	;# 
  2959  011E                     	;# 
  2960  011E                     	;# 
  2961  011E                     	;# 
  2962  011F                     	;# 
  2963  011F                     	;# 
  2964  011F                     	;# 
  2965  011F                     	;# 
  2966  011F                     	;# 
  2967  018C                     	;# 
  2968  018D                     	;# 
  2969  018E                     	;# 
  2970  018F                     	;# 
  2971  0190                     	;# 
  2972  0191                     	;# 
  2973  0192                     	;# 
  2974  0196                     	;# 
  2975  0197                     	;# 
  2976  0198                     	;# 
  2977  0199                     	;# 
  2978  019A                     	;# 
  2979  019B                     	;# 
  2980  019C                     	;# 
  2981  020C                     	;# 
  2982  020D                     	;# 
  2983  020E                     	;# 
  2984  020E                     	;# 
  2985  020F                     	;# 
  2986  020F                     	;# 
  2987  0210                     	;# 
  2988  0210                     	;# 
  2989  0211                     	;# 
  2990  0211                     	;# 
  2991  0212                     	;# 
  2992  0213                     	;# 
  2993  0214                     	;# 
  2994  0214                     	;# 
  2995  0215                     	;# 
  2996  0215                     	;# 
  2997  0216                     	;# 
  2998  0216                     	;# 
  2999  0217                     	;# 
  3000  0217                     	;# 
  3001  0218                     	;# 
  3002  0219                     	;# 
  3003  021A                     	;# 
  3004  021A                     	;# 
  3005  021B                     	;# 
  3006  021B                     	;# 
  3007  021C                     	;# 
  3008  021C                     	;# 
  3009  021D                     	;# 
  3010  021D                     	;# 
  3011  021E                     	;# 
  3012  021F                     	;# 
  3013  028C                     	;# 
  3014  028C                     	;# 
  3015  028D                     	;# 
  3016  028D                     	;# 
  3017  028E                     	;# 
  3018  028F                     	;# 
  3019  0290                     	;# 
  3020  0291                     	;# 
  3021  0292                     	;# 
  3022  0292                     	;# 
  3023  0293                     	;# 
  3024  0293                     	;# 
  3025  0294                     	;# 
  3026  0295                     	;# 
  3027  0296                     	;# 
  3028  0297                     	;# 
  3029  0298                     	;# 
  3030  0298                     	;# 
  3031  0299                     	;# 
  3032  0299                     	;# 
  3033  029A                     	;# 
  3034  029B                     	;# 
  3035  029C                     	;# 
  3036  029D                     	;# 
  3037  029F                     	;# 
  3038  030C                     	;# 
  3039  030C                     	;# 
  3040  030D                     	;# 
  3041  030E                     	;# 
  3042  030F                     	;# 
  3043  0310                     	;# 
  3044  0310                     	;# 
  3045  0311                     	;# 
  3046  0312                     	;# 
  3047  0313                     	;# 
  3048  0314                     	;# 
  3049  0314                     	;# 
  3050  0315                     	;# 
  3051  0316                     	;# 
  3052  0317                     	;# 
  3053  0318                     	;# 
  3054  0318                     	;# 
  3055  0319                     	;# 
  3056  031A                     	;# 
  3057  031B                     	;# 
  3058  038C                     	;# 
  3059  038C                     	;# 
  3060  038D                     	;# 
  3061  038E                     	;# 
  3062  0390                     	;# 
  3063  0390                     	;# 
  3064  0391                     	;# 
  3065  0392                     	;# 
  3066  048C                     	;# 
  3067  048C                     	;# 
  3068  048D                     	;# 
  3069  048E                     	;# 
  3070  048F                     	;# 
  3071  048F                     	;# 
  3072  0490                     	;# 
  3073  0491                     	;# 
  3074  0492                     	;# 
  3075  0492                     	;# 
  3076  0493                     	;# 
  3077  0494                     	;# 
  3078  0495                     	;# 
  3079  0495                     	;# 
  3080  0496                     	;# 
  3081  0497                     	;# 
  3082  0498                     	;# 
  3083  0499                     	;# 
  3084  049A                     	;# 
  3085  049B                     	;# 
  3086  049C                     	;# 
  3087  049D                     	;# 
  3088  058C                     	;# 
  3089  058C                     	;# 
  3090  058D                     	;# 
  3091  058E                     	;# 
  3092  058F                     	;# 
  3093  058F                     	;# 
  3094  0590                     	;# 
  3095  0591                     	;# 
  3096  0592                     	;# 
  3097  0593                     	;# 
  3098  059C                     	;# 
  3099  059C                     	;# 
  3100  059D                     	;# 
  3101  059D                     	;# 
  3102  059E                     	;# 
  3103  059F                     	;# 
  3104  060C                     	;# 
  3105  060C                     	;# 
  3106  060D                     	;# 
  3107  060D                     	;# 
  3108  060E                     	;# 
  3109  060F                     	;# 
  3110  0610                     	;# 
  3111  0611                     	;# 
  3112  0612                     	;# 
  3113  0613                     	;# 
  3114  0614                     	;# 
  3115  0616                     	;# 
  3116  0616                     	;# 
  3117  0617                     	;# 
  3118  0617                     	;# 
  3119  0618                     	;# 
  3120  0619                     	;# 
  3121  061A                     	;# 
  3122  061B                     	;# 
  3123  061C                     	;# 
  3124  061D                     	;# 
  3125  061E                     	;# 
  3126  070C                     	;# 
  3127  070D                     	;# 
  3128  070E                     	;# 
  3129  070F                     	;# 
  3130  0710                     	;# 
  3131  0711                     	;# 
  3132  0712                     	;# 
  3133  0713                     	;# 
  3134  0714                     	;# 
  3135  0716                     	;# 
  3136  0717                     	;# 
  3137  0718                     	;# 
  3138  0719                     	;# 
  3139  071A                     	;# 
  3140  071B                     	;# 
  3141  071C                     	;# 
  3142  071D                     	;# 
  3143  071E                     	;# 
  3144  0796                     	;# 
  3145  0797                     	;# 
  3146  0798                     	;# 
  3147  0799                     	;# 
  3148  079A                     	;# 
  3149  079B                     	;# 
  3150  079C                     	;# 
  3151  079D                     	;# 
  3152  080C                     	;# 
  3153  080D                     	;# 
  3154  080E                     	;# 
  3155  080F                     	;# 
  3156  0810                     	;# 
  3157  0811                     	;# 
  3158  0812                     	;# 
  3159  0813                     	;# 
  3160  0814                     	;# 
  3161  081A                     	;# 
  3162  081A                     	;# 
  3163  081B                     	;# 
  3164  081C                     	;# 
  3165  081C                     	;# 
  3166  081D                     	;# 
  3167  081E                     	;# 
  3168  081F                     	;# 
  3169  088C                     	;# 
  3170  088D                     	;# 
  3171  088E                     	;# 
  3172  088F                     	;# 
  3173  0890                     	;# 
  3174  0891                     	;# 
  3175  0892                     	;# 
  3176  0893                     	;# 
  3177  0895                     	;# 
  3178  0896                     	;# 
  3179  0897                     	;# 
  3180  0898                     	;# 
  3181  0899                     	;# 
  3182  089A                     	;# 
  3183  089B                     	;# 
  3184  090C                     	;# 
  3185  090E                     	;# 
  3186  090F                     	;# 
  3187  091F                     	;# 
  3188  098F                     	;# 
  3189  098F                     	;# 
  3190  0990                     	;# 
  3191  0991                     	;# 
  3192  0992                     	;# 
  3193  0993                     	;# 
  3194  0994                     	;# 
  3195  0995                     	;# 
  3196  0996                     	;# 
  3197  0997                     	;# 
  3198  1E0F                     	;# 
  3199  1E10                     	;# 
  3200  1E11                     	;# 
  3201  1E12                     	;# 
  3202  1E13                     	;# 
  3203  1E14                     	;# 
  3204  1E15                     	;# 
  3205  1E16                     	;# 
  3206  1E17                     	;# 
  3207  1E18                     	;# 
  3208  1E19                     	;# 
  3209  1E1A                     	;# 
  3210  1E1B                     	;# 
  3211  1E1C                     	;# 
  3212  1E1D                     	;# 
  3213  1E1E                     	;# 
  3214  1E1F                     	;# 
  3215  1E20                     	;# 
  3216  1E21                     	;# 
  3217  1E22                     	;# 
  3218  1E23                     	;# 
  3219  1E24                     	;# 
  3220  1E25                     	;# 
  3221  1E26                     	;# 
  3222  1E27                     	;# 
  3223  1E28                     	;# 
  3224  1E29                     	;# 
  3225  1E2A                     	;# 
  3226  1E2B                     	;# 
  3227  1E2C                     	;# 
  3228  1E2D                     	;# 
  3229  1E2E                     	;# 
  3230  1E2F                     	;# 
  3231  1E30                     	;# 
  3232  1E31                     	;# 
  3233  1E32                     	;# 
  3234  1E33                     	;# 
  3235  1E34                     	;# 
  3236  1E35                     	;# 
  3237  1E36                     	;# 
  3238  1E37                     	;# 
  3239  1E8F                     	;# 
  3240  1E90                     	;# 
  3241  1E91                     	;# 
  3242  1E92                     	;# 
  3243  1E93                     	;# 
  3244  1E94                     	;# 
  3245  1E95                     	;# 
  3246  1E96                     	;# 
  3247  1E97                     	;# 
  3248  1E9C                     	;# 
  3249  1E9D                     	;# 
  3250  1E9E                     	;# 
  3251  1EA1                     	;# 
  3252  1EA2                     	;# 
  3253  1EA3                     	;# 
  3254  1EA4                     	;# 
  3255  1EA9                     	;# 
  3256  1EAA                     	;# 
  3257  1EB1                     	;# 
  3258  1EB2                     	;# 
  3259  1EB8                     	;# 
  3260  1EB9                     	;# 
  3261  1EBA                     	;# 
  3262  1EBB                     	;# 
  3263  1EBC                     	;# 
  3264  1EBD                     	;# 
  3265  1EBE                     	;# 
  3266  1EC3                     	;# 
  3267  1EC5                     	;# 
  3268  1EC6                     	;# 
  3269  1EC7                     	;# 
  3270  1EC8                     	;# 
  3271  1EC9                     	;# 
  3272  1ECA                     	;# 
  3273  1ECB                     	;# 
  3274  1ECB                     	;# 
  3275  1ECB                     	;# 
  3276  1ECC                     	;# 
  3277  1ECC                     	;# 
  3278  1ECC                     	;# 
  3279  1F10                     	;# 
  3280  1F11                     	;# 
  3281  1F12                     	;# 
  3282  1F14                     	;# 
  3283  1F15                     	;# 
  3284  1F1C                     	;# 
  3285  1F1D                     	;# 
  3286  1F1E                     	;# 
  3287  1F1F                     	;# 
  3288  1F20                     	;# 
  3289  1F21                     	;# 
  3290  1F22                     	;# 
  3291  1F23                     	;# 
  3292  1F24                     	;# 
  3293  1F25                     	;# 
  3294  1F26                     	;# 
  3295  1F27                     	;# 
  3296  1F38                     	;# 
  3297  1F39                     	;# 
  3298  1F3A                     	;# 
  3299  1F3B                     	;# 
  3300  1F3C                     	;# 
  3301  1F3D                     	;# 
  3302  1F3E                     	;# 
  3303  1F3F                     	;# 
  3304  1F43                     	;# 
  3305  1F44                     	;# 
  3306  1F45                     	;# 
  3307  1F46                     	;# 
  3308  1F47                     	;# 
  3309  1F48                     	;# 
  3310  1F49                     	;# 
  3311  1F4A                     	;# 
  3312  1F4E                     	;# 
  3313  1F4F                     	;# 
  3314  1F50                     	;# 
  3315  1F51                     	;# 
  3316  1F52                     	;# 
  3317  1F53                     	;# 
  3318  1F54                     	;# 
  3319  1F55                     	;# 
  3320  1FE4                     	;# 
  3321  1FE5                     	;# 
  3322  1FE6                     	;# 
  3323  1FE7                     	;# 
  3324  1FE8                     	;# 
  3325  1FE8                     	;# 
  3326  1FE9                     	;# 
  3327  1FEA                     	;# 
  3328  1FEB                     	;# 
  3329  1FED                     	;# 
  3330  1FEE                     	;# 
  3331  1FEF                     	;# 
  3332  0000                     	;# 
  3333  0001                     	;# 
  3334  0002                     	;# 
  3335  0003                     	;# 
  3336  0004                     	;# 
  3337  0005                     	;# 
  3338  0006                     	;# 
  3339  0007                     	;# 
  3340  0008                     	;# 
  3341  0009                     	;# 
  3342  000A                     	;# 
  3343  000B                     	;# 
  3344  000C                     	;# 
  3345  000D                     	;# 
  3346  000E                     	;# 
  3347  0012                     	;# 
  3348  0013                     	;# 
  3349  0014                     	;# 
  3350  0018                     	;# 
  3351  0019                     	;# 
  3352  001A                     	;# 
  3353  008C                     	;# 
  3354  008C                     	;# 
  3355  008D                     	;# 
  3356  008E                     	;# 
  3357  008E                     	;# 
  3358  008F                     	;# 
  3359  0090                     	;# 
  3360  0090                     	;# 
  3361  0091                     	;# 
  3362  0092                     	;# 
  3363  0092                     	;# 
  3364  0093                     	;# 
  3365  0094                     	;# 
  3366  0094                     	;# 
  3367  0095                     	;# 
  3368  0096                     	;# 
  3369  0096                     	;# 
  3370  0097                     	;# 
  3371  0098                     	;# 
  3372  0099                     	;# 
  3373  009A                     	;# 
  3374  009B                     	;# 
  3375  009B                     	;# 
  3376  009C                     	;# 
  3377  009D                     	;# 
  3378  009D                     	;# 
  3379  009E                     	;# 
  3380  009F                     	;# 
  3381  010C                     	;# 
  3382  010C                     	;# 
  3383  010D                     	;# 
  3384  010E                     	;# 
  3385  010F                     	;# 
  3386  010F                     	;# 
  3387  0110                     	;# 
  3388  0111                     	;# 
  3389  0112                     	;# 
  3390  0113                     	;# 
  3391  0114                     	;# 
  3392  0115                     	;# 
  3393  0116                     	;# 
  3394  0117                     	;# 
  3395  0118                     	;# 
  3396  0119                     	;# 
  3397  0119                     	;# 
  3398  0119                     	;# 
  3399  011A                     	;# 
  3400  011A                     	;# 
  3401  011A                     	;# 
  3402  011B                     	;# 
  3403  011B                     	;# 
  3404  011B                     	;# 
  3405  011B                     	;# 
  3406  011B                     	;# 
  3407  011C                     	;# 
  3408  011C                     	;# 
  3409  011C                     	;# 
  3410  011D                     	;# 
  3411  011D                     	;# 
  3412  011D                     	;# 
  3413  011E                     	;# 
  3414  011E                     	;# 
  3415  011E                     	;# 
  3416  011F                     	;# 
  3417  011F                     	;# 
  3418  011F                     	;# 
  3419  011F                     	;# 
  3420  011F                     	;# 
  3421  018C                     	;# 
  3422  018D                     	;# 
  3423  018E                     	;# 
  3424  018F                     	;# 
  3425  0190                     	;# 
  3426  0191                     	;# 
  3427  0192                     	;# 
  3428  0196                     	;# 
  3429  0197                     	;# 
  3430  0198                     	;# 
  3431  0199                     	;# 
  3432  019A                     	;# 
  3433  019B                     	;# 
  3434  019C                     	;# 
  3435  020C                     	;# 
  3436  020D                     	;# 
  3437  020E                     	;# 
  3438  020E                     	;# 
  3439  020F                     	;# 
  3440  020F                     	;# 
  3441  0210                     	;# 
  3442  0210                     	;# 
  3443  0211                     	;# 
  3444  0211                     	;# 
  3445  0212                     	;# 
  3446  0213                     	;# 
  3447  0214                     	;# 
  3448  0214                     	;# 
  3449  0215                     	;# 
  3450  0215                     	;# 
  3451  0216                     	;# 
  3452  0216                     	;# 
  3453  0217                     	;# 
  3454  0217                     	;# 
  3455  0218                     	;# 
  3456  0219                     	;# 
  3457  021A                     	;# 
  3458  021A                     	;# 
  3459  021B                     	;# 
  3460  021B                     	;# 
  3461  021C                     	;# 
  3462  021C                     	;# 
  3463  021D                     	;# 
  3464  021D                     	;# 
  3465  021E                     	;# 
  3466  021F                     	;# 
  3467  028C                     	;# 
  3468  028C                     	;# 
  3469  028D                     	;# 
  3470  028D                     	;# 
  3471  028E                     	;# 
  3472  028F                     	;# 
  3473  0290                     	;# 
  3474  0291                     	;# 
  3475  0292                     	;# 
  3476  0292                     	;# 
  3477  0293                     	;# 
  3478  0293                     	;# 
  3479  0294                     	;# 
  3480  0295                     	;# 
  3481  0296                     	;# 
  3482  0297                     	;# 
  3483  0298                     	;# 
  3484  0298                     	;# 
  3485  0299                     	;# 
  3486  0299                     	;# 
  3487  029A                     	;# 
  3488  029B                     	;# 
  3489  029C                     	;# 
  3490  029D                     	;# 
  3491  029F                     	;# 
  3492  030C                     	;# 
  3493  030C                     	;# 
  3494  030D                     	;# 
  3495  030E                     	;# 
  3496  030F                     	;# 
  3497  0310                     	;# 
  3498  0310                     	;# 
  3499  0311                     	;# 
  3500  0312                     	;# 
  3501  0313                     	;# 
  3502  0314                     	;# 
  3503  0314                     	;# 
  3504  0315                     	;# 
  3505  0316                     	;# 
  3506  0317                     	;# 
  3507  0318                     	;# 
  3508  0318                     	;# 
  3509  0319                     	;# 
  3510  031A                     	;# 
  3511  031B                     	;# 
  3512  038C                     	;# 
  3513  038C                     	;# 
  3514  038D                     	;# 
  3515  038E                     	;# 
  3516  0390                     	;# 
  3517  0390                     	;# 
  3518  0391                     	;# 
  3519  0392                     	;# 
  3520  048C                     	;# 
  3521  048C                     	;# 
  3522  048D                     	;# 
  3523  048E                     	;# 
  3524  048F                     	;# 
  3525  048F                     	;# 
  3526  0490                     	;# 
  3527  0491                     	;# 
  3528  0492                     	;# 
  3529  0492                     	;# 
  3530  0493                     	;# 
  3531  0494                     	;# 
  3532  0495                     	;# 
  3533  0495                     	;# 
  3534  0496                     	;# 
  3535  0497                     	;# 
  3536  0498                     	;# 
  3537  0499                     	;# 
  3538  049A                     	;# 
  3539  049B                     	;# 
  3540  049C                     	;# 
  3541  049D                     	;# 
  3542  058C                     	;# 
  3543  058C                     	;# 
  3544  058D                     	;# 
  3545  058E                     	;# 
  3546  058F                     	;# 
  3547  058F                     	;# 
  3548  0590                     	;# 
  3549  0591                     	;# 
  3550  0592                     	;# 
  3551  0593                     	;# 
  3552  059C                     	;# 
  3553  059C                     	;# 
  3554  059D                     	;# 
  3555  059D                     	;# 
  3556  059E                     	;# 
  3557  059F                     	;# 
  3558  060C                     	;# 
  3559  060C                     	;# 
  3560  060D                     	;# 
  3561  060D                     	;# 
  3562  060E                     	;# 
  3563  060F                     	;# 
  3564  0610                     	;# 
  3565  0611                     	;# 
  3566  0612                     	;# 
  3567  0613                     	;# 
  3568  0614                     	;# 
  3569  0616                     	;# 
  3570  0616                     	;# 
  3571  0617                     	;# 
  3572  0617                     	;# 
  3573  0618                     	;# 
  3574  0619                     	;# 
  3575  061A                     	;# 
  3576  061B                     	;# 
  3577  061C                     	;# 
  3578  061D                     	;# 
  3579  061E                     	;# 
  3580  070C                     	;# 
  3581  070D                     	;# 
  3582  070E                     	;# 
  3583  070F                     	;# 
  3584  0710                     	;# 
  3585  0711                     	;# 
  3586  0712                     	;# 
  3587  0713                     	;# 
  3588  0714                     	;# 
  3589  0716                     	;# 
  3590  0717                     	;# 
  3591  0718                     	;# 
  3592  0719                     	;# 
  3593  071A                     	;# 
  3594  071B                     	;# 
  3595  071C                     	;# 
  3596  071D                     	;# 
  3597  071E                     	;# 
  3598  0796                     	;# 
  3599  0797                     	;# 
  3600  0798                     	;# 
  3601  0799                     	;# 
  3602  079A                     	;# 
  3603  079B                     	;# 
  3604  079C                     	;# 
  3605  079D                     	;# 
  3606  080C                     	;# 
  3607  080D                     	;# 
  3608  080E                     	;# 
  3609  080F                     	;# 
  3610  0810                     	;# 
  3611  0811                     	;# 
  3612  0812                     	;# 
  3613  0813                     	;# 
  3614  0814                     	;# 
  3615  081A                     	;# 
  3616  081A                     	;# 
  3617  081B                     	;# 
  3618  081C                     	;# 
  3619  081C                     	;# 
  3620  081D                     	;# 
  3621  081E                     	;# 
  3622  081F                     	;# 
  3623  088C                     	;# 
  3624  088D                     	;# 
  3625  088E                     	;# 
  3626  088F                     	;# 
  3627  0890                     	;# 
  3628  0891                     	;# 
  3629  0892                     	;# 
  3630  0893                     	;# 
  3631  0895                     	;# 
  3632  0896                     	;# 
  3633  0897                     	;# 
  3634  0898                     	;# 
  3635  0899                     	;# 
  3636  089A                     	;# 
  3637  089B                     	;# 
  3638  090C                     	;# 
  3639  090E                     	;# 
  3640  090F                     	;# 
  3641  091F                     	;# 
  3642  098F                     	;# 
  3643  098F                     	;# 
  3644  0990                     	;# 
  3645  0991                     	;# 
  3646  0992                     	;# 
  3647  0993                     	;# 
  3648  0994                     	;# 
  3649  0995                     	;# 
  3650  0996                     	;# 
  3651  0997                     	;# 
  3652  1E0F                     	;# 
  3653  1E10                     	;# 
  3654  1E11                     	;# 
  3655  1E12                     	;# 
  3656  1E13                     	;# 
  3657  1E14                     	;# 
  3658  1E15                     	;# 
  3659  1E16                     	;# 
  3660  1E17                     	;# 
  3661  1E18                     	;# 
  3662  1E19                     	;# 
  3663  1E1A                     	;# 
  3664  1E1B                     	;# 
  3665  1E1C                     	;# 
  3666  1E1D                     	;# 
  3667  1E1E                     	;# 
  3668  1E1F                     	;# 
  3669  1E20                     	;# 
  3670  1E21                     	;# 
  3671  1E22                     	;# 
  3672  1E23                     	;# 
  3673  1E24                     	;# 
  3674  1E25                     	;# 
  3675  1E26                     	;# 
  3676  1E27                     	;# 
  3677  1E28                     	;# 
  3678  1E29                     	;# 
  3679  1E2A                     	;# 
  3680  1E2B                     	;# 
  3681  1E2C                     	;# 
  3682  1E2D                     	;# 
  3683  1E2E                     	;# 
  3684  1E2F                     	;# 
  3685  1E30                     	;# 
  3686  1E31                     	;# 
  3687  1E32                     	;# 
  3688  1E33                     	;# 
  3689  1E34                     	;# 
  3690  1E35                     	;# 
  3691  1E36                     	;# 
  3692  1E37                     	;# 
  3693  1E8F                     	;# 
  3694  1E90                     	;# 
  3695  1E91                     	;# 
  3696  1E92                     	;# 
  3697  1E93                     	;# 
  3698  1E94                     	;# 
  3699  1E95                     	;# 
  3700  1E96                     	;# 
  3701  1E97                     	;# 
  3702  1E9C                     	;# 
  3703  1E9D                     	;# 
  3704  1E9E                     	;# 
  3705  1EA1                     	;# 
  3706  1EA2                     	;# 
  3707  1EA3                     	;# 
  3708  1EA4                     	;# 
  3709  1EA9                     	;# 
  3710  1EAA                     	;# 
  3711  1EB1                     	;# 
  3712  1EB2                     	;# 
  3713  1EB8                     	;# 
  3714  1EB9                     	;# 
  3715  1EBA                     	;# 
  3716  1EBB                     	;# 
  3717  1EBC                     	;# 
  3718  1EBD                     	;# 
  3719  1EBE                     	;# 
  3720  1EC3                     	;# 
  3721  1EC5                     	;# 
  3722  1EC6                     	;# 
  3723  1EC7                     	;# 
  3724  1EC8                     	;# 
  3725  1EC9                     	;# 
  3726  1ECA                     	;# 
  3727  1ECB                     	;# 
  3728  1ECB                     	;# 
  3729  1ECB                     	;# 
  3730  1ECC                     	;# 
  3731  1ECC                     	;# 
  3732  1ECC                     	;# 
  3733  1F10                     	;# 
  3734  1F11                     	;# 
  3735  1F12                     	;# 
  3736  1F14                     	;# 
  3737  1F15                     	;# 
  3738  1F1C                     	;# 
  3739  1F1D                     	;# 
  3740  1F1E                     	;# 
  3741  1F1F                     	;# 
  3742  1F20                     	;# 
  3743  1F21                     	;# 
  3744  1F22                     	;# 
  3745  1F23                     	;# 
  3746  1F24                     	;# 
  3747  1F25                     	;# 
  3748  1F26                     	;# 
  3749  1F27                     	;# 
  3750  1F38                     	;# 
  3751  1F39                     	;# 
  3752  1F3A                     	;# 
  3753  1F3B                     	;# 
  3754  1F3C                     	;# 
  3755  1F3D                     	;# 
  3756  1F3E                     	;# 
  3757  1F3F                     	;# 
  3758  1F43                     	;# 
  3759  1F44                     	;# 
  3760  1F45                     	;# 
  3761  1F46                     	;# 
  3762  1F47                     	;# 
  3763  1F48                     	;# 
  3764  1F49                     	;# 
  3765  1F4A                     	;# 
  3766  1F4E                     	;# 
  3767  1F4F                     	;# 
  3768  1F50                     	;# 
  3769  1F51                     	;# 
  3770  1F52                     	;# 
  3771  1F53                     	;# 
  3772  1F54                     	;# 
  3773  1F55                     	;# 
  3774  1FE4                     	;# 
  3775  1FE5                     	;# 
  3776  1FE6                     	;# 
  3777  1FE7                     	;# 
  3778  1FE8                     	;# 
  3779  1FE8                     	;# 
  3780  1FE9                     	;# 
  3781  1FEA                     	;# 
  3782  1FEB                     	;# 
  3783  1FED                     	;# 
  3784  1FEE                     	;# 
  3785  1FEF                     	;# 
  3786  0000                     	;# 
  3787  0001                     	;# 
  3788  0002                     	;# 
  3789  0003                     	;# 
  3790  0004                     	;# 
  3791  0005                     	;# 
  3792  0006                     	;# 
  3793  0007                     	;# 
  3794  0008                     	;# 
  3795  0009                     	;# 
  3796  000A                     	;# 
  3797  000B                     	;# 
  3798  000C                     	;# 
  3799  000D                     	;# 
  3800  000E                     	;# 
  3801  0012                     	;# 
  3802  0013                     	;# 
  3803  0014                     	;# 
  3804  0018                     	;# 
  3805  0019                     	;# 
  3806  001A                     	;# 
  3807  008C                     	;# 
  3808  008C                     	;# 
  3809  008D                     	;# 
  3810  008E                     	;# 
  3811  008E                     	;# 
  3812  008F                     	;# 
  3813  0090                     	;# 
  3814  0090                     	;# 
  3815  0091                     	;# 
  3816  0092                     	;# 
  3817  0092                     	;# 
  3818  0093                     	;# 
  3819  0094                     	;# 
  3820  0094                     	;# 
  3821  0095                     	;# 
  3822  0096                     	;# 
  3823  0096                     	;# 
  3824  0097                     	;# 
  3825  0098                     	;# 
  3826  0099                     	;# 
  3827  009A                     	;# 
  3828  009B                     	;# 
  3829  009B                     	;# 
  3830  009C                     	;# 
  3831  009D                     	;# 
  3832  009D                     	;# 
  3833  009E                     	;# 
  3834  009F                     	;# 
  3835  010C                     	;# 
  3836  010C                     	;# 
  3837  010D                     	;# 
  3838  010E                     	;# 
  3839  010F                     	;# 
  3840  010F                     	;# 
  3841  0110                     	;# 
  3842  0111                     	;# 
  3843  0112                     	;# 
  3844  0113                     	;# 
  3845  0114                     	;# 
  3846  0115                     	;# 
  3847  0116                     	;# 
  3848  0117                     	;# 
  3849  0118                     	;# 
  3850  0119                     	;# 
  3851  0119                     	;# 
  3852  0119                     	;# 
  3853  011A                     	;# 
  3854  011A                     	;# 
  3855  011A                     	;# 
  3856  011B                     	;# 
  3857  011B                     	;# 
  3858  011B                     	;# 
  3859  011B                     	;# 
  3860  011B                     	;# 
  3861  011C                     	;# 
  3862  011C                     	;# 
  3863  011C                     	;# 
  3864  011D                     	;# 
  3865  011D                     	;# 
  3866  011D                     	;# 
  3867  011E                     	;# 
  3868  011E                     	;# 
  3869  011E                     	;# 
  3870  011F                     	;# 
  3871  011F                     	;# 
  3872  011F                     	;# 
  3873  011F                     	;# 
  3874  011F                     	;# 
  3875  018C                     	;# 
  3876  018D                     	;# 
  3877  018E                     	;# 
  3878  018F                     	;# 
  3879  0190                     	;# 
  3880  0191                     	;# 
  3881  0192                     	;# 
  3882  0196                     	;# 
  3883  0197                     	;# 
  3884  0198                     	;# 
  3885  0199                     	;# 
  3886  019A                     	;# 
  3887  019B                     	;# 
  3888  019C                     	;# 
  3889  020C                     	;# 
  3890  020D                     	;# 
  3891  020E                     	;# 
  3892  020E                     	;# 
  3893  020F                     	;# 
  3894  020F                     	;# 
  3895  0210                     	;# 
  3896  0210                     	;# 
  3897  0211                     	;# 
  3898  0211                     	;# 
  3899  0212                     	;# 
  3900  0213                     	;# 
  3901  0214                     	;# 
  3902  0214                     	;# 
  3903  0215                     	;# 
  3904  0215                     	;# 
  3905  0216                     	;# 
  3906  0216                     	;# 
  3907  0217                     	;# 
  3908  0217                     	;# 
  3909  0218                     	;# 
  3910  0219                     	;# 
  3911  021A                     	;# 
  3912  021A                     	;# 
  3913  021B                     	;# 
  3914  021B                     	;# 
  3915  021C                     	;# 
  3916  021C                     	;# 
  3917  021D                     	;# 
  3918  021D                     	;# 
  3919  021E                     	;# 
  3920  021F                     	;# 
  3921  028C                     	;# 
  3922  028C                     	;# 
  3923  028D                     	;# 
  3924  028D                     	;# 
  3925  028E                     	;# 
  3926  028F                     	;# 
  3927  0290                     	;# 
  3928  0291                     	;# 
  3929  0292                     	;# 
  3930  0292                     	;# 
  3931  0293                     	;# 
  3932  0293                     	;# 
  3933  0294                     	;# 
  3934  0295                     	;# 
  3935  0296                     	;# 
  3936  0297                     	;# 
  3937  0298                     	;# 
  3938  0298                     	;# 
  3939  0299                     	;# 
  3940  0299                     	;# 
  3941  029A                     	;# 
  3942  029B                     	;# 
  3943  029C                     	;# 
  3944  029D                     	;# 
  3945  029F                     	;# 
  3946  030C                     	;# 
  3947  030C                     	;# 
  3948  030D                     	;# 
  3949  030E                     	;# 
  3950  030F                     	;# 
  3951  0310                     	;# 
  3952  0310                     	;# 
  3953  0311                     	;# 
  3954  0312                     	;# 
  3955  0313                     	;# 
  3956  0314                     	;# 
  3957  0314                     	;# 
  3958  0315                     	;# 
  3959  0316                     	;# 
  3960  0317                     	;# 
  3961  0318                     	;# 
  3962  0318                     	;# 
  3963  0319                     	;# 
  3964  031A                     	;# 
  3965  031B                     	;# 
  3966  038C                     	;# 
  3967  038C                     	;# 
  3968  038D                     	;# 
  3969  038E                     	;# 
  3970  0390                     	;# 
  3971  0390                     	;# 
  3972  0391                     	;# 
  3973  0392                     	;# 
  3974  048C                     	;# 
  3975  048C                     	;# 
  3976  048D                     	;# 
  3977  048E                     	;# 
  3978  048F                     	;# 
  3979  048F                     	;# 
  3980  0490                     	;# 
  3981  0491                     	;# 
  3982  0492                     	;# 
  3983  0492                     	;# 
  3984  0493                     	;# 
  3985  0494                     	;# 
  3986  0495                     	;# 
  3987  0495                     	;# 
  3988  0496                     	;# 
  3989  0497                     	;# 
  3990  0498                     	;# 
  3991  0499                     	;# 
  3992  049A                     	;# 
  3993  049B                     	;# 
  3994  049C                     	;# 
  3995  049D                     	;# 
  3996  058C                     	;# 
  3997  058C                     	;# 
  3998  058D                     	;# 
  3999  058E                     	;# 
  4000  058F                     	;# 
  4001  058F                     	;# 
  4002  0590                     	;# 
  4003  0591                     	;# 
  4004  0592                     	;# 
  4005  0593                     	;# 
  4006  059C                     	;# 
  4007  059C                     	;# 
  4008  059D                     	;# 
  4009  059D                     	;# 
  4010  059E                     	;# 
  4011  059F                     	;# 
  4012  060C                     	;# 
  4013  060C                     	;# 
  4014  060D                     	;# 
  4015  060D                     	;# 
  4016  060E                     	;# 
  4017  060F                     	;# 
  4018  0610                     	;# 
  4019  0611                     	;# 
  4020  0612                     	;# 
  4021  0613                     	;# 
  4022  0614                     	;# 
  4023  0616                     	;# 
  4024  0616                     	;# 
  4025  0617                     	;# 
  4026  0617                     	;# 
  4027  0618                     	;# 
  4028  0619                     	;# 
  4029  061A                     	;# 
  4030  061B                     	;# 
  4031  061C                     	;# 
  4032  061D                     	;# 
  4033  061E                     	;# 
  4034  070C                     	;# 
  4035  070D                     	;# 
  4036  070E                     	;# 
  4037  070F                     	;# 
  4038  0710                     	;# 
  4039  0711                     	;# 
  4040  0712                     	;# 
  4041  0713                     	;# 
  4042  0714                     	;# 
  4043  0716                     	;# 
  4044  0717                     	;# 
  4045  0718                     	;# 
  4046  0719                     	;# 
  4047  071A                     	;# 
  4048  071B                     	;# 
  4049  071C                     	;# 
  4050  071D                     	;# 
  4051  071E                     	;# 
  4052  0796                     	;# 
  4053  0797                     	;# 
  4054  0798                     	;# 
  4055  0799                     	;# 
  4056  079A                     	;# 
  4057  079B                     	;# 
  4058  079C                     	;# 
  4059  079D                     	;# 
  4060  080C                     	;# 
  4061  080D                     	;# 
  4062  080E                     	;# 
  4063  080F                     	;# 
  4064  0810                     	;# 
  4065  0811                     	;# 
  4066  0812                     	;# 
  4067  0813                     	;# 
  4068  0814                     	;# 
  4069  081A                     	;# 
  4070  081A                     	;# 
  4071  081B                     	;# 
  4072  081C                     	;# 
  4073  081C                     	;# 
  4074  081D                     	;# 
  4075  081E                     	;# 
  4076  081F                     	;# 
  4077  088C                     	;# 
  4078  088D                     	;# 
  4079  088E                     	;# 
  4080  088F                     	;# 
  4081  0890                     	;# 
  4082  0891                     	;# 
  4083  0892                     	;# 
  4084  0893                     	;# 
  4085  0895                     	;# 
  4086  0896                     	;# 
  4087  0897                     	;# 
  4088  0898                     	;# 
  4089  0899                     	;# 
  4090  089A                     	;# 
  4091  089B                     	;# 
  4092  090C                     	;# 
  4093  090E                     	;# 
  4094  090F                     	;# 
  4095  091F                     	;# 
  4096  098F                     	;# 
  4097  098F                     	;# 
  4098  0990                     	;# 
  4099  0991                     	;# 
  4100  0992                     	;# 
  4101  0993                     	;# 
  4102  0994                     	;# 
  4103  0995                     	;# 
  4104  0996                     	;# 
  4105  0997                     	;# 
  4106  1E0F                     	;# 
  4107  1E10                     	;# 
  4108  1E11                     	;# 
  4109  1E12                     	;# 
  4110  1E13                     	;# 
  4111  1E14                     	;# 
  4112  1E15                     	;# 
  4113  1E16                     	;# 
  4114  1E17                     	;# 
  4115  1E18                     	;# 
  4116  1E19                     	;# 
  4117  1E1A                     	;# 
  4118  1E1B                     	;# 
  4119  1E1C                     	;# 
  4120  1E1D                     	;# 
  4121  1E1E                     	;# 
  4122  1E1F                     	;# 
  4123  1E20                     	;# 
  4124  1E21                     	;# 
  4125  1E22                     	;# 
  4126  1E23                     	;# 
  4127  1E24                     	;# 
  4128  1E25                     	;# 
  4129  1E26                     	;# 
  4130  1E27                     	;# 
  4131  1E28                     	;# 
  4132  1E29                     	;# 
  4133  1E2A                     	;# 
  4134  1E2B                     	;# 
  4135  1E2C                     	;# 
  4136  1E2D                     	;# 
  4137  1E2E                     	;# 
  4138  1E2F                     	;# 
  4139  1E30                     	;# 
  4140  1E31                     	;# 
  4141  1E32                     	;# 
  4142  1E33                     	;# 
  4143  1E34                     	;# 
  4144  1E35                     	;# 
  4145  1E36                     	;# 
  4146  1E37                     	;# 
  4147  1E8F                     	;# 
  4148  1E90                     	;# 
  4149  1E91                     	;# 
  4150  1E92                     	;# 
  4151  1E93                     	;# 
  4152  1E94                     	;# 
  4153  1E95                     	;# 
  4154  1E96                     	;# 
  4155  1E97                     	;# 
  4156  1E9C                     	;# 
  4157  1E9D                     	;# 
  4158  1E9E                     	;# 
  4159  1EA1                     	;# 
  4160  1EA2                     	;# 
  4161  1EA3                     	;# 
  4162  1EA4                     	;# 
  4163  1EA9                     	;# 
  4164  1EAA                     	;# 
  4165  1EB1                     	;# 
  4166  1EB2                     	;# 
  4167  1EB8                     	;# 
  4168  1EB9                     	;# 
  4169  1EBA                     	;# 
  4170  1EBB                     	;# 
  4171  1EBC                     	;# 
  4172  1EBD                     	;# 
  4173  1EBE                     	;# 
  4174  1EC3                     	;# 
  4175  1EC5                     	;# 
  4176  1EC6                     	;# 
  4177  1EC7                     	;# 
  4178  1EC8                     	;# 
  4179  1EC9                     	;# 
  4180  1ECA                     	;# 
  4181  1ECB                     	;# 
  4182  1ECB                     	;# 
  4183  1ECB                     	;# 
  4184  1ECC                     	;# 
  4185  1ECC                     	;# 
  4186  1ECC                     	;# 
  4187  1F10                     	;# 
  4188  1F11                     	;# 
  4189  1F12                     	;# 
  4190  1F14                     	;# 
  4191  1F15                     	;# 
  4192  1F1C                     	;# 
  4193  1F1D                     	;# 
  4194  1F1E                     	;# 
  4195  1F1F                     	;# 
  4196  1F20                     	;# 
  4197  1F21                     	;# 
  4198  1F22                     	;# 
  4199  1F23                     	;# 
  4200  1F24                     	;# 
  4201  1F25                     	;# 
  4202  1F26                     	;# 
  4203  1F27                     	;# 
  4204  1F38                     	;# 
  4205  1F39                     	;# 
  4206  1F3A                     	;# 
  4207  1F3B                     	;# 
  4208  1F3C                     	;# 
  4209  1F3D                     	;# 
  4210  1F3E                     	;# 
  4211  1F3F                     	;# 
  4212  1F43                     	;# 
  4213  1F44                     	;# 
  4214  1F45                     	;# 
  4215  1F46                     	;# 
  4216  1F47                     	;# 
  4217  1F48                     	;# 
  4218  1F49                     	;# 
  4219  1F4A                     	;# 
  4220  1F4E                     	;# 
  4221  1F4F                     	;# 
  4222  1F50                     	;# 
  4223  1F51                     	;# 
  4224  1F52                     	;# 
  4225  1F53                     	;# 
  4226  1F54                     	;# 
  4227  1F55                     	;# 
  4228  1FE4                     	;# 
  4229  1FE5                     	;# 
  4230  1FE6                     	;# 
  4231  1FE7                     	;# 
  4232  1FE8                     	;# 
  4233  1FE8                     	;# 
  4234  1FE9                     	;# 
  4235  1FEA                     	;# 
  4236  1FEB                     	;# 
  4237  1FED                     	;# 
  4238  1FEE                     	;# 
  4239  1FEF                     	;# 
  4240  0000                     	;# 
  4241  0001                     	;# 
  4242  0002                     	;# 
  4243  0003                     	;# 
  4244  0004                     	;# 
  4245  0005                     	;# 
  4246  0006                     	;# 
  4247  0007                     	;# 
  4248  0008                     	;# 
  4249  0009                     	;# 
  4250  000A                     	;# 
  4251  000B                     	;# 
  4252  000C                     	;# 
  4253  000D                     	;# 
  4254  000E                     	;# 
  4255  0012                     	;# 
  4256  0013                     	;# 
  4257  0014                     	;# 
  4258  0018                     	;# 
  4259  0019                     	;# 
  4260  001A                     	;# 
  4261  008C                     	;# 
  4262  008C                     	;# 
  4263  008D                     	;# 
  4264  008E                     	;# 
  4265  008E                     	;# 
  4266  008F                     	;# 
  4267  0090                     	;# 
  4268  0090                     	;# 
  4269  0091                     	;# 
  4270  0092                     	;# 
  4271  0092                     	;# 
  4272  0093                     	;# 
  4273  0094                     	;# 
  4274  0094                     	;# 
  4275  0095                     	;# 
  4276  0096                     	;# 
  4277  0096                     	;# 
  4278  0097                     	;# 
  4279  0098                     	;# 
  4280  0099                     	;# 
  4281  009A                     	;# 
  4282  009B                     	;# 
  4283  009B                     	;# 
  4284  009C                     	;# 
  4285  009D                     	;# 
  4286  009D                     	;# 
  4287  009E                     	;# 
  4288  009F                     	;# 
  4289  010C                     	;# 
  4290  010C                     	;# 
  4291  010D                     	;# 
  4292  010E                     	;# 
  4293  010F                     	;# 
  4294  010F                     	;# 
  4295  0110                     	;# 
  4296  0111                     	;# 
  4297  0112                     	;# 
  4298  0113                     	;# 
  4299  0114                     	;# 
  4300  0115                     	;# 
  4301  0116                     	;# 
  4302  0117                     	;# 
  4303  0118                     	;# 
  4304  0119                     	;# 
  4305  0119                     	;# 
  4306  0119                     	;# 
  4307  011A                     	;# 
  4308  011A                     	;# 
  4309  011A                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011C                     	;# 
  4316  011C                     	;# 
  4317  011C                     	;# 
  4318  011D                     	;# 
  4319  011D                     	;# 
  4320  011D                     	;# 
  4321  011E                     	;# 
  4322  011E                     	;# 
  4323  011E                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  018C                     	;# 
  4330  018D                     	;# 
  4331  018E                     	;# 
  4332  018F                     	;# 
  4333  0190                     	;# 
  4334  0191                     	;# 
  4335  0192                     	;# 
  4336  0196                     	;# 
  4337  0197                     	;# 
  4338  0198                     	;# 
  4339  0199                     	;# 
  4340  019A                     	;# 
  4341  019B                     	;# 
  4342  019C                     	;# 
  4343  020C                     	;# 
  4344  020D                     	;# 
  4345  020E                     	;# 
  4346  020E                     	;# 
  4347  020F                     	;# 
  4348  020F                     	;# 
  4349  0210                     	;# 
  4350  0210                     	;# 
  4351  0211                     	;# 
  4352  0211                     	;# 
  4353  0212                     	;# 
  4354  0213                     	;# 
  4355  0214                     	;# 
  4356  0214                     	;# 
  4357  0215                     	;# 
  4358  0215                     	;# 
  4359  0216                     	;# 
  4360  0216                     	;# 
  4361  0217                     	;# 
  4362  0217                     	;# 
  4363  0218                     	;# 
  4364  0219                     	;# 
  4365  021A                     	;# 
  4366  021A                     	;# 
  4367  021B                     	;# 
  4368  021B                     	;# 
  4369  021C                     	;# 
  4370  021C                     	;# 
  4371  021D                     	;# 
  4372  021D                     	;# 
  4373  021E                     	;# 
  4374  021F                     	;# 
  4375  028C                     	;# 
  4376  028C                     	;# 
  4377  028D                     	;# 
  4378  028D                     	;# 
  4379  028E                     	;# 
  4380  028F                     	;# 
  4381  0290                     	;# 
  4382  0291                     	;# 
  4383  0292                     	;# 
  4384  0292                     	;# 
  4385  0293                     	;# 
  4386  0293                     	;# 
  4387  0294                     	;# 
  4388  0295                     	;# 
  4389  0296                     	;# 
  4390  0297                     	;# 
  4391  0298                     	;# 
  4392  0298                     	;# 
  4393  0299                     	;# 
  4394  0299                     	;# 
  4395  029A                     	;# 
  4396  029B                     	;# 
  4397  029C                     	;# 
  4398  029D                     	;# 
  4399  029F                     	;# 
  4400  030C                     	;# 
  4401  030C                     	;# 
  4402  030D                     	;# 
  4403  030E                     	;# 
  4404  030F                     	;# 
  4405  0310                     	;# 
  4406  0310                     	;# 
  4407  0311                     	;# 
  4408  0312                     	;# 
  4409  0313                     	;# 
  4410  0314                     	;# 
  4411  0314                     	;# 
  4412  0315                     	;# 
  4413  0316                     	;# 
  4414  0317                     	;# 
  4415  0318                     	;# 
  4416  0318                     	;# 
  4417  0319                     	;# 
  4418  031A                     	;# 
  4419  031B                     	;# 
  4420  038C                     	;# 
  4421  038C                     	;# 
  4422  038D                     	;# 
  4423  038E                     	;# 
  4424  0390                     	;# 
  4425  0390                     	;# 
  4426  0391                     	;# 
  4427  0392                     	;# 
  4428  048C                     	;# 
  4429  048C                     	;# 
  4430  048D                     	;# 
  4431  048E                     	;# 
  4432  048F                     	;# 
  4433  048F                     	;# 
  4434  0490                     	;# 
  4435  0491                     	;# 
  4436  0492                     	;# 
  4437  0492                     	;# 
  4438  0493                     	;# 
  4439  0494                     	;# 
  4440  0495                     	;# 
  4441  0495                     	;# 
  4442  0496                     	;# 
  4443  0497                     	;# 
  4444  0498                     	;# 
  4445  0499                     	;# 
  4446  049A                     	;# 
  4447  049B                     	;# 
  4448  049C                     	;# 
  4449  049D                     	;# 
  4450  058C                     	;# 
  4451  058C                     	;# 
  4452  058D                     	;# 
  4453  058E                     	;# 
  4454  058F                     	;# 
  4455  058F                     	;# 
  4456  0590                     	;# 
  4457  0591                     	;# 
  4458  0592                     	;# 
  4459  0593                     	;# 
  4460  059C                     	;# 
  4461  059C                     	;# 
  4462  059D                     	;# 
  4463  059D                     	;# 
  4464  059E                     	;# 
  4465  059F                     	;# 
  4466  060C                     	;# 
  4467  060C                     	;# 
  4468  060D                     	;# 
  4469  060D                     	;# 
  4470  060E                     	;# 
  4471  060F                     	;# 
  4472  0610                     	;# 
  4473  0611                     	;# 
  4474  0612                     	;# 
  4475  0613                     	;# 
  4476  0614                     	;# 
  4477  0616                     	;# 
  4478  0616                     	;# 
  4479  0617                     	;# 
  4480  0617                     	;# 
  4481  0618                     	;# 
  4482  0619                     	;# 
  4483  061A                     	;# 
  4484  061B                     	;# 
  4485  061C                     	;# 
  4486  061D                     	;# 
  4487  061E                     	;# 
  4488  070C                     	;# 
  4489  070D                     	;# 
  4490  070E                     	;# 
  4491  070F                     	;# 
  4492  0710                     	;# 
  4493  0711                     	;# 
  4494  0712                     	;# 
  4495  0713                     	;# 
  4496  0714                     	;# 
  4497  0716                     	;# 
  4498  0717                     	;# 
  4499  0718                     	;# 
  4500  0719                     	;# 
  4501  071A                     	;# 
  4502  071B                     	;# 
  4503  071C                     	;# 
  4504  071D                     	;# 
  4505  071E                     	;# 
  4506  0796                     	;# 
  4507  0797                     	;# 
  4508  0798                     	;# 
  4509  0799                     	;# 
  4510  079A                     	;# 
  4511  079B                     	;# 
  4512  079C                     	;# 
  4513  079D                     	;# 
  4514  080C                     	;# 
  4515  080D                     	;# 
  4516  080E                     	;# 
  4517  080F                     	;# 
  4518  0810                     	;# 
  4519  0811                     	;# 
  4520  0812                     	;# 
  4521  0813                     	;# 
  4522  0814                     	;# 
  4523  081A                     	;# 
  4524  081A                     	;# 
  4525  081B                     	;# 
  4526  081C                     	;# 
  4527  081C                     	;# 
  4528  081D                     	;# 
  4529  081E                     	;# 
  4530  081F                     	;# 
  4531  088C                     	;# 
  4532  088D                     	;# 
  4533  088E                     	;# 
  4534  088F                     	;# 
  4535  0890                     	;# 
  4536  0891                     	;# 
  4537  0892                     	;# 
  4538  0893                     	;# 
  4539  0895                     	;# 
  4540  0896                     	;# 
  4541  0897                     	;# 
  4542  0898                     	;# 
  4543  0899                     	;# 
  4544  089A                     	;# 
  4545  089B                     	;# 
  4546  090C                     	;# 
  4547  090E                     	;# 
  4548  090F                     	;# 
  4549  091F                     	;# 
  4550  098F                     	;# 
  4551  098F                     	;# 
  4552  0990                     	;# 
  4553  0991                     	;# 
  4554  0992                     	;# 
  4555  0993                     	;# 
  4556  0994                     	;# 
  4557  0995                     	;# 
  4558  0996                     	;# 
  4559  0997                     	;# 
  4560  1E0F                     	;# 
  4561  1E10                     	;# 
  4562  1E11                     	;# 
  4563  1E12                     	;# 
  4564  1E13                     	;# 
  4565  1E14                     	;# 
  4566  1E15                     	;# 
  4567  1E16                     	;# 
  4568  1E17                     	;# 
  4569  1E18                     	;# 
  4570  1E19                     	;# 
  4571  1E1A                     	;# 
  4572  1E1B                     	;# 
  4573  1E1C                     	;# 
  4574  1E1D                     	;# 
  4575  1E1E                     	;# 
  4576  1E1F                     	;# 
  4577  1E20                     	;# 
  4578  1E21                     	;# 
  4579  1E22                     	;# 
  4580  1E23                     	;# 
  4581  1E24                     	;# 
  4582  1E25                     	;# 
  4583  1E26                     	;# 
  4584  1E27                     	;# 
  4585  1E28                     	;# 
  4586  1E29                     	;# 
  4587  1E2A                     	;# 
  4588  1E2B                     	;# 
  4589  1E2C                     	;# 
  4590  1E2D                     	;# 
  4591  1E2E                     	;# 
  4592  1E2F                     	;# 
  4593  1E30                     	;# 
  4594  1E31                     	;# 
  4595  1E32                     	;# 
  4596  1E33                     	;# 
  4597  1E34                     	;# 
  4598  1E35                     	;# 
  4599  1E36                     	;# 
  4600  1E37                     	;# 
  4601  1E8F                     	;# 
  4602  1E90                     	;# 
  4603  1E91                     	;# 
  4604  1E92                     	;# 
  4605  1E93                     	;# 
  4606  1E94                     	;# 
  4607  1E95                     	;# 
  4608  1E96                     	;# 
  4609  1E97                     	;# 
  4610  1E9C                     	;# 
  4611  1E9D                     	;# 
  4612  1E9E                     	;# 
  4613  1EA1                     	;# 
  4614  1EA2                     	;# 
  4615  1EA3                     	;# 
  4616  1EA4                     	;# 
  4617  1EA9                     	;# 
  4618  1EAA                     	;# 
  4619  1EB1                     	;# 
  4620  1EB2                     	;# 
  4621  1EB8                     	;# 
  4622  1EB9                     	;# 
  4623  1EBA                     	;# 
  4624  1EBB                     	;# 
  4625  1EBC                     	;# 
  4626  1EBD                     	;# 
  4627  1EBE                     	;# 
  4628  1EC3                     	;# 
  4629  1EC5                     	;# 
  4630  1EC6                     	;# 
  4631  1EC7                     	;# 
  4632  1EC8                     	;# 
  4633  1EC9                     	;# 
  4634  1ECA                     	;# 
  4635  1ECB                     	;# 
  4636  1ECB                     	;# 
  4637  1ECB                     	;# 
  4638  1ECC                     	;# 
  4639  1ECC                     	;# 
  4640  1ECC                     	;# 
  4641  1F10                     	;# 
  4642  1F11                     	;# 
  4643  1F12                     	;# 
  4644  1F14                     	;# 
  4645  1F15                     	;# 
  4646  1F1C                     	;# 
  4647  1F1D                     	;# 
  4648  1F1E                     	;# 
  4649  1F1F                     	;# 
  4650  1F20                     	;# 
  4651  1F21                     	;# 
  4652  1F22                     	;# 
  4653  1F23                     	;# 
  4654  1F24                     	;# 
  4655  1F25                     	;# 
  4656  1F26                     	;# 
  4657  1F27                     	;# 
  4658  1F38                     	;# 
  4659  1F39                     	;# 
  4660  1F3A                     	;# 
  4661  1F3B                     	;# 
  4662  1F3C                     	;# 
  4663  1F3D                     	;# 
  4664  1F3E                     	;# 
  4665  1F3F                     	;# 
  4666  1F43                     	;# 
  4667  1F44                     	;# 
  4668  1F45                     	;# 
  4669  1F46                     	;# 
  4670  1F47                     	;# 
  4671  1F48                     	;# 
  4672  1F49                     	;# 
  4673  1F4A                     	;# 
  4674  1F4E                     	;# 
  4675  1F4F                     	;# 
  4676  1F50                     	;# 
  4677  1F51                     	;# 
  4678  1F52                     	;# 
  4679  1F53                     	;# 
  4680  1F54                     	;# 
  4681  1F55                     	;# 
  4682  1FE4                     	;# 
  4683  1FE5                     	;# 
  4684  1FE6                     	;# 
  4685  1FE7                     	;# 
  4686  1FE8                     	;# 
  4687  1FE8                     	;# 
  4688  1FE9                     	;# 
  4689  1FEA                     	;# 
  4690  1FEB                     	;# 
  4691  1FED                     	;# 
  4692  1FEE                     	;# 
  4693  1FEF                     	;# 
  4694  0000                     	;# 
  4695  0001                     	;# 
  4696  0002                     	;# 
  4697  0003                     	;# 
  4698  0004                     	;# 
  4699  0005                     	;# 
  4700  0006                     	;# 
  4701  0007                     	;# 
  4702  0008                     	;# 
  4703  0009                     	;# 
  4704  000A                     	;# 
  4705  000B                     	;# 
  4706  000C                     	;# 
  4707  000D                     	;# 
  4708  000E                     	;# 
  4709  0012                     	;# 
  4710  0013                     	;# 
  4711  0014                     	;# 
  4712  0018                     	;# 
  4713  0019                     	;# 
  4714  001A                     	;# 
  4715  008C                     	;# 
  4716  008C                     	;# 
  4717  008D                     	;# 
  4718  008E                     	;# 
  4719  008E                     	;# 
  4720  008F                     	;# 
  4721  0090                     	;# 
  4722  0090                     	;# 
  4723  0091                     	;# 
  4724  0092                     	;# 
  4725  0092                     	;# 
  4726  0093                     	;# 
  4727  0094                     	;# 
  4728  0094                     	;# 
  4729  0095                     	;# 
  4730  0096                     	;# 
  4731  0096                     	;# 
  4732  0097                     	;# 
  4733  0098                     	;# 
  4734  0099                     	;# 
  4735  009A                     	;# 
  4736  009B                     	;# 
  4737  009B                     	;# 
  4738  009C                     	;# 
  4739  009D                     	;# 
  4740  009D                     	;# 
  4741  009E                     	;# 
  4742  009F                     	;# 
  4743  010C                     	;# 
  4744  010C                     	;# 
  4745  010D                     	;# 
  4746  010E                     	;# 
  4747  010F                     	;# 
  4748  010F                     	;# 
  4749  0110                     	;# 
  4750  0111                     	;# 
  4751  0112                     	;# 
  4752  0113                     	;# 
  4753  0114                     	;# 
  4754  0115                     	;# 
  4755  0116                     	;# 
  4756  0117                     	;# 
  4757  0118                     	;# 
  4758  0119                     	;# 
  4759  0119                     	;# 
  4760  0119                     	;# 
  4761  011A                     	;# 
  4762  011A                     	;# 
  4763  011A                     	;# 
  4764  011B                     	;# 
  4765  011B                     	;# 
  4766  011B                     	;# 
  4767  011B                     	;# 
  4768  011B                     	;# 
  4769  011C                     	;# 
  4770  011C                     	;# 
  4771  011C                     	;# 
  4772  011D                     	;# 
  4773  011D                     	;# 
  4774  011D                     	;# 
  4775  011E                     	;# 
  4776  011E                     	;# 
  4777  011E                     	;# 
  4778  011F                     	;# 
  4779  011F                     	;# 
  4780  011F                     	;# 
  4781  011F                     	;# 
  4782  011F                     	;# 
  4783  018C                     	;# 
  4784  018D                     	;# 
  4785  018E                     	;# 
  4786  018F                     	;# 
  4787  0190                     	;# 
  4788  0191                     	;# 
  4789  0192                     	;# 
  4790  0196                     	;# 
  4791  0197                     	;# 
  4792  0198                     	;# 
  4793  0199                     	;# 
  4794  019A                     	;# 
  4795  019B                     	;# 
  4796  019C                     	;# 
  4797  020C                     	;# 
  4798  020D                     	;# 
  4799  020E                     	;# 
  4800  020E                     	;# 
  4801  020F                     	;# 
  4802  020F                     	;# 
  4803  0210                     	;# 
  4804  0210                     	;# 
  4805  0211                     	;# 
  4806  0211                     	;# 
  4807  0212                     	;# 
  4808  0213                     	;# 
  4809  0214                     	;# 
  4810  0214                     	;# 
  4811  0215                     	;# 
  4812  0215                     	;# 
  4813  0216                     	;# 
  4814  0216                     	;# 
  4815  0217                     	;# 
  4816  0217                     	;# 
  4817  0218                     	;# 
  4818  0219                     	;# 
  4819  021A                     	;# 
  4820  021A                     	;# 
  4821  021B                     	;# 
  4822  021B                     	;# 
  4823  021C                     	;# 
  4824  021C                     	;# 
  4825  021D                     	;# 
  4826  021D                     	;# 
  4827  021E                     	;# 
  4828  021F                     	;# 
  4829  028C                     	;# 
  4830  028C                     	;# 
  4831  028D                     	;# 
  4832  028D                     	;# 
  4833  028E                     	;# 
  4834  028F                     	;# 
  4835  0290                     	;# 
  4836  0291                     	;# 
  4837  0292                     	;# 
  4838  0292                     	;# 
  4839  0293                     	;# 
  4840  0293                     	;# 
  4841  0294                     	;# 
  4842  0295                     	;# 
  4843  0296                     	;# 
  4844  0297                     	;# 
  4845  0298                     	;# 
  4846  0298                     	;# 
  4847  0299                     	;# 
  4848  0299                     	;# 
  4849  029A                     	;# 
  4850  029B                     	;# 
  4851  029C                     	;# 
  4852  029D                     	;# 
  4853  029F                     	;# 
  4854  030C                     	;# 
  4855  030C                     	;# 
  4856  030D                     	;# 
  4857  030E                     	;# 
  4858  030F                     	;# 
  4859  0310                     	;# 
  4860  0310                     	;# 
  4861  0311                     	;# 
  4862  0312                     	;# 
  4863  0313                     	;# 
  4864  0314                     	;# 
  4865  0314                     	;# 
  4866  0315                     	;# 
  4867  0316                     	;# 
  4868  0317                     	;# 
  4869  0318                     	;# 
  4870  0318                     	;# 
  4871  0319                     	;# 
  4872  031A                     	;# 
  4873  031B                     	;# 
  4874  038C                     	;# 
  4875  038C                     	;# 
  4876  038D                     	;# 
  4877  038E                     	;# 
  4878  0390                     	;# 
  4879  0390                     	;# 
  4880  0391                     	;# 
  4881  0392                     	;# 
  4882  048C                     	;# 
  4883  048C                     	;# 
  4884  048D                     	;# 
  4885  048E                     	;# 
  4886  048F                     	;# 
  4887  048F                     	;# 
  4888  0490                     	;# 
  4889  0491                     	;# 
  4890  0492                     	;# 
  4891  0492                     	;# 
  4892  0493                     	;# 
  4893  0494                     	;# 
  4894  0495                     	;# 
  4895  0495                     	;# 
  4896  0496                     	;# 
  4897  0497                     	;# 
  4898  0498                     	;# 
  4899  0499                     	;# 
  4900  049A                     	;# 
  4901  049B                     	;# 
  4902  049C                     	;# 
  4903  049D                     	;# 
  4904  058C                     	;# 
  4905  058C                     	;# 
  4906  058D                     	;# 
  4907  058E                     	;# 
  4908  058F                     	;# 
  4909  058F                     	;# 
  4910  0590                     	;# 
  4911  0591                     	;# 
  4912  0592                     	;# 
  4913  0593                     	;# 
  4914  059C                     	;# 
  4915  059C                     	;# 
  4916  059D                     	;# 
  4917  059D                     	;# 
  4918  059E                     	;# 
  4919  059F                     	;# 
  4920  060C                     	;# 
  4921  060C                     	;# 
  4922  060D                     	;# 
  4923  060D                     	;# 
  4924  060E                     	;# 
  4925  060F                     	;# 
  4926  0610                     	;# 
  4927  0611                     	;# 
  4928  0612                     	;# 
  4929  0613                     	;# 
  4930  0614                     	;# 
  4931  0616                     	;# 
  4932  0616                     	;# 
  4933  0617                     	;# 
  4934  0617                     	;# 
  4935  0618                     	;# 
  4936  0619                     	;# 
  4937  061A                     	;# 
  4938  061B                     	;# 
  4939  061C                     	;# 
  4940  061D                     	;# 
  4941  061E                     	;# 
  4942  070C                     	;# 
  4943  070D                     	;# 
  4944  070E                     	;# 
  4945  070F                     	;# 
  4946  0710                     	;# 
  4947  0711                     	;# 
  4948  0712                     	;# 
  4949  0713                     	;# 
  4950  0714                     	;# 
  4951  0716                     	;# 
  4952  0717                     	;# 
  4953  0718                     	;# 
  4954  0719                     	;# 
  4955  071A                     	;# 
  4956  071B                     	;# 
  4957  071C                     	;# 
  4958  071D                     	;# 
  4959  071E                     	;# 
  4960  0796                     	;# 
  4961  0797                     	;# 
  4962  0798                     	;# 
  4963  0799                     	;# 
  4964  079A                     	;# 
  4965  079B                     	;# 
  4966  079C                     	;# 
  4967  079D                     	;# 
  4968  080C                     	;# 
  4969  080D                     	;# 
  4970  080E                     	;# 
  4971  080F                     	;# 
  4972  0810                     	;# 
  4973  0811                     	;# 
  4974  0812                     	;# 
  4975  0813                     	;# 
  4976  0814                     	;# 
  4977  081A                     	;# 
  4978  081A                     	;# 
  4979  081B                     	;# 
  4980  081C                     	;# 
  4981  081C                     	;# 
  4982  081D                     	;# 
  4983  081E                     	;# 
  4984  081F                     	;# 
  4985  088C                     	;# 
  4986  088D                     	;# 
  4987  088E                     	;# 
  4988  088F                     	;# 
  4989  0890                     	;# 
  4990  0891                     	;# 
  4991  0892                     	;# 
  4992  0893                     	;# 
  4993  0895                     	;# 
  4994  0896                     	;# 
  4995  0897                     	;# 
  4996  0898                     	;# 
  4997  0899                     	;# 
  4998  089A                     	;# 
  4999  089B                     	;# 
  5000  090C                     	;# 
  5001  090E                     	;# 
  5002  090F                     	;# 
  5003  091F                     	;# 
  5004  098F                     	;# 
  5005  098F                     	;# 
  5006  0990                     	;# 
  5007  0991                     	;# 
  5008  0992                     	;# 
  5009  0993                     	;# 
  5010  0994                     	;# 
  5011  0995                     	;# 
  5012  0996                     	;# 
  5013  0997                     	;# 
  5014  1E0F                     	;# 
  5015  1E10                     	;# 
  5016  1E11                     	;# 
  5017  1E12                     	;# 
  5018  1E13                     	;# 
  5019  1E14                     	;# 
  5020  1E15                     	;# 
  5021  1E16                     	;# 
  5022  1E17                     	;# 
  5023  1E18                     	;# 
  5024  1E19                     	;# 
  5025  1E1A                     	;# 
  5026  1E1B                     	;# 
  5027  1E1C                     	;# 
  5028  1E1D                     	;# 
  5029  1E1E                     	;# 
  5030  1E1F                     	;# 
  5031  1E20                     	;# 
  5032  1E21                     	;# 
  5033  1E22                     	;# 
  5034  1E23                     	;# 
  5035  1E24                     	;# 
  5036  1E25                     	;# 
  5037  1E26                     	;# 
  5038  1E27                     	;# 
  5039  1E28                     	;# 
  5040  1E29                     	;# 
  5041  1E2A                     	;# 
  5042  1E2B                     	;# 
  5043  1E2C                     	;# 
  5044  1E2D                     	;# 
  5045  1E2E                     	;# 
  5046  1E2F                     	;# 
  5047  1E30                     	;# 
  5048  1E31                     	;# 
  5049  1E32                     	;# 
  5050  1E33                     	;# 
  5051  1E34                     	;# 
  5052  1E35                     	;# 
  5053  1E36                     	;# 
  5054  1E37                     	;# 
  5055  1E8F                     	;# 
  5056  1E90                     	;# 
  5057  1E91                     	;# 
  5058  1E92                     	;# 
  5059  1E93                     	;# 
  5060  1E94                     	;# 
  5061  1E95                     	;# 
  5062  1E96                     	;# 
  5063  1E97                     	;# 
  5064  1E9C                     	;# 
  5065  1E9D                     	;# 
  5066  1E9E                     	;# 
  5067  1EA1                     	;# 
  5068  1EA2                     	;# 
  5069  1EA3                     	;# 
  5070  1EA4                     	;# 
  5071  1EA9                     	;# 
  5072  1EAA                     	;# 
  5073  1EB1                     	;# 
  5074  1EB2                     	;# 
  5075  1EB8                     	;# 
  5076  1EB9                     	;# 
  5077  1EBA                     	;# 
  5078  1EBB                     	;# 
  5079  1EBC                     	;# 
  5080  1EBD                     	;# 
  5081  1EBE                     	;# 
  5082  1EC3                     	;# 
  5083  1EC5                     	;# 
  5084  1EC6                     	;# 
  5085  1EC7                     	;# 
  5086  1EC8                     	;# 
  5087  1EC9                     	;# 
  5088  1ECA                     	;# 
  5089  1ECB                     	;# 
  5090  1ECB                     	;# 
  5091  1ECB                     	;# 
  5092  1ECC                     	;# 
  5093  1ECC                     	;# 
  5094  1ECC                     	;# 
  5095  1F10                     	;# 
  5096  1F11                     	;# 
  5097  1F12                     	;# 
  5098  1F14                     	;# 
  5099  1F15                     	;# 
  5100  1F1C                     	;# 
  5101  1F1D                     	;# 
  5102  1F1E                     	;# 
  5103  1F1F                     	;# 
  5104  1F20                     	;# 
  5105  1F21                     	;# 
  5106  1F22                     	;# 
  5107  1F23                     	;# 
  5108  1F24                     	;# 
  5109  1F25                     	;# 
  5110  1F26                     	;# 
  5111  1F27                     	;# 
  5112  1F38                     	;# 
  5113  1F39                     	;# 
  5114  1F3A                     	;# 
  5115  1F3B                     	;# 
  5116  1F3C                     	;# 
  5117  1F3D                     	;# 
  5118  1F3E                     	;# 
  5119  1F3F                     	;# 
  5120  1F43                     	;# 
  5121  1F44                     	;# 
  5122  1F45                     	;# 
  5123  1F46                     	;# 
  5124  1F47                     	;# 
  5125  1F48                     	;# 
  5126  1F49                     	;# 
  5127  1F4A                     	;# 
  5128  1F4E                     	;# 
  5129  1F4F                     	;# 
  5130  1F50                     	;# 
  5131  1F51                     	;# 
  5132  1F52                     	;# 
  5133  1F53                     	;# 
  5134  1F54                     	;# 
  5135  1F55                     	;# 
  5136  1FE4                     	;# 
  5137  1FE5                     	;# 
  5138  1FE6                     	;# 
  5139  1FE7                     	;# 
  5140  1FE8                     	;# 
  5141  1FE8                     	;# 
  5142  1FE9                     	;# 
  5143  1FEA                     	;# 
  5144  1FEB                     	;# 
  5145  1FED                     	;# 
  5146  1FEE                     	;# 
  5147  1FEF                     	;# 
  5148  0000                     	;# 
  5149  0001                     	;# 
  5150  0002                     	;# 
  5151  0003                     	;# 
  5152  0004                     	;# 
  5153  0005                     	;# 
  5154  0006                     	;# 
  5155  0007                     	;# 
  5156  0008                     	;# 
  5157  0009                     	;# 
  5158  000A                     	;# 
  5159  000B                     	;# 
  5160  000C                     	;# 
  5161  000D                     	;# 
  5162  000E                     	;# 
  5163  0012                     	;# 
  5164  0013                     	;# 
  5165  0014                     	;# 
  5166  0018                     	;# 
  5167  0019                     	;# 
  5168  001A                     	;# 
  5169  008C                     	;# 
  5170  008C                     	;# 
  5171  008D                     	;# 
  5172  008E                     	;# 
  5173  008E                     	;# 
  5174  008F                     	;# 
  5175  0090                     	;# 
  5176  0090                     	;# 
  5177  0091                     	;# 
  5178  0092                     	;# 
  5179  0092                     	;# 
  5180  0093                     	;# 
  5181  0094                     	;# 
  5182  0094                     	;# 
  5183  0095                     	;# 
  5184  0096                     	;# 
  5185  0096                     	;# 
  5186  0097                     	;# 
  5187  0098                     	;# 
  5188  0099                     	;# 
  5189  009A                     	;# 
  5190  009B                     	;# 
  5191  009B                     	;# 
  5192  009C                     	;# 
  5193  009D                     	;# 
  5194  009D                     	;# 
  5195  009E                     	;# 
  5196  009F                     	;# 
  5197  010C                     	;# 
  5198  010C                     	;# 
  5199  010D                     	;# 
  5200  010E                     	;# 
  5201  010F                     	;# 
  5202  010F                     	;# 
  5203  0110                     	;# 
  5204  0111                     	;# 
  5205  0112                     	;# 
  5206  0113                     	;# 
  5207  0114                     	;# 
  5208  0115                     	;# 
  5209  0116                     	;# 
  5210  0117                     	;# 
  5211  0118                     	;# 
  5212  0119                     	;# 
  5213  0119                     	;# 
  5214  0119                     	;# 
  5215  011A                     	;# 
  5216  011A                     	;# 
  5217  011A                     	;# 
  5218  011B                     	;# 
  5219  011B                     	;# 
  5220  011B                     	;# 
  5221  011B                     	;# 
  5222  011B                     	;# 
  5223  011C                     	;# 
  5224  011C                     	;# 
  5225  011C                     	;# 
  5226  011D                     	;# 
  5227  011D                     	;# 
  5228  011D                     	;# 
  5229  011E                     	;# 
  5230  011E                     	;# 
  5231  011E                     	;# 
  5232  011F                     	;# 
  5233  011F                     	;# 
  5234  011F                     	;# 
  5235  011F                     	;# 
  5236  011F                     	;# 
  5237  018C                     	;# 
  5238  018D                     	;# 
  5239  018E                     	;# 
  5240  018F                     	;# 
  5241  0190                     	;# 
  5242  0191                     	;# 
  5243  0192                     	;# 
  5244  0196                     	;# 
  5245  0197                     	;# 
  5246  0198                     	;# 
  5247  0199                     	;# 
  5248  019A                     	;# 
  5249  019B                     	;# 
  5250  019C                     	;# 
  5251  020C                     	;# 
  5252  020D                     	;# 
  5253  020E                     	;# 
  5254  020E                     	;# 
  5255  020F                     	;# 
  5256  020F                     	;# 
  5257  0210                     	;# 
  5258  0210                     	;# 
  5259  0211                     	;# 
  5260  0211                     	;# 
  5261  0212                     	;# 
  5262  0213                     	;# 
  5263  0214                     	;# 
  5264  0214                     	;# 
  5265  0215                     	;# 
  5266  0215                     	;# 
  5267  0216                     	;# 
  5268  0216                     	;# 
  5269  0217                     	;# 
  5270  0217                     	;# 
  5271  0218                     	;# 
  5272  0219                     	;# 
  5273  021A                     	;# 
  5274  021A                     	;# 
  5275  021B                     	;# 
  5276  021B                     	;# 
  5277  021C                     	;# 
  5278  021C                     	;# 
  5279  021D                     	;# 
  5280  021D                     	;# 
  5281  021E                     	;# 
  5282  021F                     	;# 
  5283  028C                     	;# 
  5284  028C                     	;# 
  5285  028D                     	;# 
  5286  028D                     	;# 
  5287  028E                     	;# 
  5288  028F                     	;# 
  5289  0290                     	;# 
  5290  0291                     	;# 
  5291  0292                     	;# 
  5292  0292                     	;# 
  5293  0293                     	;# 
  5294  0293                     	;# 
  5295  0294                     	;# 
  5296  0295                     	;# 
  5297  0296                     	;# 
  5298  0297                     	;# 
  5299  0298                     	;# 
  5300  0298                     	;# 
  5301  0299                     	;# 
  5302  0299                     	;# 
  5303  029A                     	;# 
  5304  029B                     	;# 
  5305  029C                     	;# 
  5306  029D                     	;# 
  5307  029F                     	;# 
  5308  030C                     	;# 
  5309  030C                     	;# 
  5310  030D                     	;# 
  5311  030E                     	;# 
  5312  030F                     	;# 
  5313  0310                     	;# 
  5314  0310                     	;# 
  5315  0311                     	;# 
  5316  0312                     	;# 
  5317  0313                     	;# 
  5318  0314                     	;# 
  5319  0314                     	;# 
  5320  0315                     	;# 
  5321  0316                     	;# 
  5322  0317                     	;# 
  5323  0318                     	;# 
  5324  0318                     	;# 
  5325  0319                     	;# 
  5326  031A                     	;# 
  5327  031B                     	;# 
  5328  038C                     	;# 
  5329  038C                     	;# 
  5330  038D                     	;# 
  5331  038E                     	;# 
  5332  0390                     	;# 
  5333  0390                     	;# 
  5334  0391                     	;# 
  5335  0392                     	;# 
  5336  048C                     	;# 
  5337  048C                     	;# 
  5338  048D                     	;# 
  5339  048E                     	;# 
  5340  048F                     	;# 
  5341  048F                     	;# 
  5342  0490                     	;# 
  5343  0491                     	;# 
  5344  0492                     	;# 
  5345  0492                     	;# 
  5346  0493                     	;# 
  5347  0494                     	;# 
  5348  0495                     	;# 
  5349  0495                     	;# 
  5350  0496                     	;# 
  5351  0497                     	;# 
  5352  0498                     	;# 
  5353  0499                     	;# 
  5354  049A                     	;# 
  5355  049B                     	;# 
  5356  049C                     	;# 
  5357  049D                     	;# 
  5358  058C                     	;# 
  5359  058C                     	;# 
  5360  058D                     	;# 
  5361  058E                     	;# 
  5362  058F                     	;# 
  5363  058F                     	;# 
  5364  0590                     	;# 
  5365  0591                     	;# 
  5366  0592                     	;# 
  5367  0593                     	;# 
  5368  059C                     	;# 
  5369  059C                     	;# 
  5370  059D                     	;# 
  5371  059D                     	;# 
  5372  059E                     	;# 
  5373  059F                     	;# 
  5374  060C                     	;# 
  5375  060C                     	;# 
  5376  060D                     	;# 
  5377  060D                     	;# 
  5378  060E                     	;# 
  5379  060F                     	;# 
  5380  0610                     	;# 
  5381  0611                     	;# 
  5382  0612                     	;# 
  5383  0613                     	;# 
  5384  0614                     	;# 
  5385  0616                     	;# 
  5386  0616                     	;# 
  5387  0617                     	;# 
  5388  0617                     	;# 
  5389  0618                     	;# 
  5390  0619                     	;# 
  5391  061A                     	;# 
  5392  061B                     	;# 
  5393  061C                     	;# 
  5394  061D                     	;# 
  5395  061E                     	;# 
  5396  070C                     	;# 
  5397  070D                     	;# 
  5398  070E                     	;# 
  5399  070F                     	;# 
  5400  0710                     	;# 
  5401  0711                     	;# 
  5402  0712                     	;# 
  5403  0713                     	;# 
  5404  0714                     	;# 
  5405  0716                     	;# 
  5406  0717                     	;# 
  5407  0718                     	;# 
  5408  0719                     	;# 
  5409  071A                     	;# 
  5410  071B                     	;# 
  5411  071C                     	;# 
  5412  071D                     	;# 
  5413  071E                     	;# 
  5414  0796                     	;# 
  5415  0797                     	;# 
  5416  0798                     	;# 
  5417  0799                     	;# 
  5418  079A                     	;# 
  5419  079B                     	;# 
  5420  079C                     	;# 
  5421  079D                     	;# 
  5422  080C                     	;# 
  5423  080D                     	;# 
  5424  080E                     	;# 
  5425  080F                     	;# 
  5426  0810                     	;# 
  5427  0811                     	;# 
  5428  0812                     	;# 
  5429  0813                     	;# 
  5430  0814                     	;# 
  5431  081A                     	;# 
  5432  081A                     	;# 
  5433  081B                     	;# 
  5434  081C                     	;# 
  5435  081C                     	;# 
  5436  081D                     	;# 
  5437  081E                     	;# 
  5438  081F                     	;# 
  5439  088C                     	;# 
  5440  088D                     	;# 
  5441  088E                     	;# 
  5442  088F                     	;# 
  5443  0890                     	;# 
  5444  0891                     	;# 
  5445  0892                     	;# 
  5446  0893                     	;# 
  5447  0895                     	;# 
  5448  0896                     	;# 
  5449  0897                     	;# 
  5450  0898                     	;# 
  5451  0899                     	;# 
  5452  089A                     	;# 
  5453  089B                     	;# 
  5454  090C                     	;# 
  5455  090E                     	;# 
  5456  090F                     	;# 
  5457  091F                     	;# 
  5458  098F                     	;# 
  5459  098F                     	;# 
  5460  0990                     	;# 
  5461  0991                     	;# 
  5462  0992                     	;# 
  5463  0993                     	;# 
  5464  0994                     	;# 
  5465  0995                     	;# 
  5466  0996                     	;# 
  5467  0997                     	;# 
  5468  1E0F                     	;# 
  5469  1E10                     	;# 
  5470  1E11                     	;# 
  5471  1E12                     	;# 
  5472  1E13                     	;# 
  5473  1E14                     	;# 
  5474  1E15                     	;# 
  5475  1E16                     	;# 
  5476  1E17                     	;# 
  5477  1E18                     	;# 
  5478  1E19                     	;# 
  5479  1E1A                     	;# 
  5480  1E1B                     	;# 
  5481  1E1C                     	;# 
  5482  1E1D                     	;# 
  5483  1E1E                     	;# 
  5484  1E1F                     	;# 
  5485  1E20                     	;# 
  5486  1E21                     	;# 
  5487  1E22                     	;# 
  5488  1E23                     	;# 
  5489  1E24                     	;# 
  5490  1E25                     	;# 
  5491  1E26                     	;# 
  5492  1E27                     	;# 
  5493  1E28                     	;# 
  5494  1E29                     	;# 
  5495  1E2A                     	;# 
  5496  1E2B                     	;# 
  5497  1E2C                     	;# 
  5498  1E2D                     	;# 
  5499  1E2E                     	;# 
  5500  1E2F                     	;# 
  5501  1E30                     	;# 
  5502  1E31                     	;# 
  5503  1E32                     	;# 
  5504  1E33                     	;# 
  5505  1E34                     	;# 
  5506  1E35                     	;# 
  5507  1E36                     	;# 
  5508  1E37                     	;# 
  5509  1E8F                     	;# 
  5510  1E90                     	;# 
  5511  1E91                     	;# 
  5512  1E92                     	;# 
  5513  1E93                     	;# 
  5514  1E94                     	;# 
  5515  1E95                     	;# 
  5516  1E96                     	;# 
  5517  1E97                     	;# 
  5518  1E9C                     	;# 
  5519  1E9D                     	;# 
  5520  1E9E                     	;# 
  5521  1EA1                     	;# 
  5522  1EA2                     	;# 
  5523  1EA3                     	;# 
  5524  1EA4                     	;# 
  5525  1EA9                     	;# 
  5526  1EAA                     	;# 
  5527  1EB1                     	;# 
  5528  1EB2                     	;# 
  5529  1EB8                     	;# 
  5530  1EB9                     	;# 
  5531  1EBA                     	;# 
  5532  1EBB                     	;# 
  5533  1EBC                     	;# 
  5534  1EBD                     	;# 
  5535  1EBE                     	;# 
  5536  1EC3                     	;# 
  5537  1EC5                     	;# 
  5538  1EC6                     	;# 
  5539  1EC7                     	;# 
  5540  1EC8                     	;# 
  5541  1EC9                     	;# 
  5542  1ECA                     	;# 
  5543  1ECB                     	;# 
  5544  1ECB                     	;# 
  5545  1ECB                     	;# 
  5546  1ECC                     	;# 
  5547  1ECC                     	;# 
  5548  1ECC                     	;# 
  5549  1F10                     	;# 
  5550  1F11                     	;# 
  5551  1F12                     	;# 
  5552  1F14                     	;# 
  5553  1F15                     	;# 
  5554  1F1C                     	;# 
  5555  1F1D                     	;# 
  5556  1F1E                     	;# 
  5557  1F1F                     	;# 
  5558  1F20                     	;# 
  5559  1F21                     	;# 
  5560  1F22                     	;# 
  5561  1F23                     	;# 
  5562  1F24                     	;# 
  5563  1F25                     	;# 
  5564  1F26                     	;# 
  5565  1F27                     	;# 
  5566  1F38                     	;# 
  5567  1F39                     	;# 
  5568  1F3A                     	;# 
  5569  1F3B                     	;# 
  5570  1F3C                     	;# 
  5571  1F3D                     	;# 
  5572  1F3E                     	;# 
  5573  1F3F                     	;# 
  5574  1F43                     	;# 
  5575  1F44                     	;# 
  5576  1F45                     	;# 
  5577  1F46                     	;# 
  5578  1F47                     	;# 
  5579  1F48                     	;# 
  5580  1F49                     	;# 
  5581  1F4A                     	;# 
  5582  1F4E                     	;# 
  5583  1F4F                     	;# 
  5584  1F50                     	;# 
  5585  1F51                     	;# 
  5586  1F52                     	;# 
  5587  1F53                     	;# 
  5588  1F54                     	;# 
  5589  1F55                     	;# 
  5590  1FE4                     	;# 
  5591  1FE5                     	;# 
  5592  1FE6                     	;# 
  5593  1FE7                     	;# 
  5594  1FE8                     	;# 
  5595  1FE8                     	;# 
  5596  1FE9                     	;# 
  5597  1FEA                     	;# 
  5598  1FEB                     	;# 
  5599  1FED                     	;# 
  5600  1FEE                     	;# 
  5601  1FEF                     	;# 
  5602  0000                     	;# 
  5603  0001                     	;# 
  5604  0002                     	;# 
  5605  0003                     	;# 
  5606  0004                     	;# 
  5607  0005                     	;# 
  5608  0006                     	;# 
  5609  0007                     	;# 
  5610  0008                     	;# 
  5611  0009                     	;# 
  5612  000A                     	;# 
  5613  000B                     	;# 
  5614  000C                     	;# 
  5615  000D                     	;# 
  5616  000E                     	;# 
  5617  0012                     	;# 
  5618  0013                     	;# 
  5619  0014                     	;# 
  5620  0018                     	;# 
  5621  0019                     	;# 
  5622  001A                     	;# 
  5623  008C                     	;# 
  5624  008C                     	;# 
  5625  008D                     	;# 
  5626  008E                     	;# 
  5627  008E                     	;# 
  5628  008F                     	;# 
  5629  0090                     	;# 
  5630  0090                     	;# 
  5631  0091                     	;# 
  5632  0092                     	;# 
  5633  0092                     	;# 
  5634  0093                     	;# 
  5635  0094                     	;# 
  5636  0094                     	;# 
  5637  0095                     	;# 
  5638  0096                     	;# 
  5639  0096                     	;# 
  5640  0097                     	;# 
  5641  0098                     	;# 
  5642  0099                     	;# 
  5643  009A                     	;# 
  5644  009B                     	;# 
  5645  009B                     	;# 
  5646  009C                     	;# 
  5647  009D                     	;# 
  5648  009D                     	;# 
  5649  009E                     	;# 
  5650  009F                     	;# 
  5651  010C                     	;# 
  5652  010C                     	;# 
  5653  010D                     	;# 
  5654  010E                     	;# 
  5655  010F                     	;# 
  5656  010F                     	;# 
  5657  0110                     	;# 
  5658  0111                     	;# 
  5659  0112                     	;# 
  5660  0113                     	;# 
  5661  0114                     	;# 
  5662  0115                     	;# 
  5663  0116                     	;# 
  5664  0117                     	;# 
  5665  0118                     	;# 
  5666  0119                     	;# 
  5667  0119                     	;# 
  5668  0119                     	;# 
  5669  011A                     	;# 
  5670  011A                     	;# 
  5671  011A                     	;# 
  5672  011B                     	;# 
  5673  011B                     	;# 
  5674  011B                     	;# 
  5675  011B                     	;# 
  5676  011B                     	;# 
  5677  011C                     	;# 
  5678  011C                     	;# 
  5679  011C                     	;# 
  5680  011D                     	;# 
  5681  011D                     	;# 
  5682  011D                     	;# 
  5683  011E                     	;# 
  5684  011E                     	;# 
  5685  011E                     	;# 
  5686  011F                     	;# 
  5687  011F                     	;# 
  5688  011F                     	;# 
  5689  011F                     	;# 
  5690  011F                     	;# 
  5691  018C                     	;# 
  5692  018D                     	;# 
  5693  018E                     	;# 
  5694  018F                     	;# 
  5695  0190                     	;# 
  5696  0191                     	;# 
  5697  0192                     	;# 
  5698  0196                     	;# 
  5699  0197                     	;# 
  5700  0198                     	;# 
  5701  0199                     	;# 
  5702  019A                     	;# 
  5703  019B                     	;# 
  5704  019C                     	;# 
  5705  020C                     	;# 
  5706  020D                     	;# 
  5707  020E                     	;# 
  5708  020E                     	;# 
  5709  020F                     	;# 
  5710  020F                     	;# 
  5711  0210                     	;# 
  5712  0210                     	;# 
  5713  0211                     	;# 
  5714  0211                     	;# 
  5715  0212                     	;# 
  5716  0213                     	;# 
  5717  0214                     	;# 
  5718  0214                     	;# 
  5719  0215                     	;# 
  5720  0215                     	;# 
  5721  0216                     	;# 
  5722  0216                     	;# 
  5723  0217                     	;# 
  5724  0217                     	;# 
  5725  0218                     	;# 
  5726  0219                     	;# 
  5727  021A                     	;# 
  5728  021A                     	;# 
  5729  021B                     	;# 
  5730  021B                     	;# 
  5731  021C                     	;# 
  5732  021C                     	;# 
  5733  021D                     	;# 
  5734  021D                     	;# 
  5735  021E                     	;# 
  5736  021F                     	;# 
  5737  028C                     	;# 
  5738  028C                     	;# 
  5739  028D                     	;# 
  5740  028D                     	;# 
  5741  028E                     	;# 
  5742  028F                     	;# 
  5743  0290                     	;# 
  5744  0291                     	;# 
  5745  0292                     	;# 
  5746  0292                     	;# 
  5747  0293                     	;# 
  5748  0293                     	;# 
  5749  0294                     	;# 
  5750  0295                     	;# 
  5751  0296                     	;# 
  5752  0297                     	;# 
  5753  0298                     	;# 
  5754  0298                     	;# 
  5755  0299                     	;# 
  5756  0299                     	;# 
  5757  029A                     	;# 
  5758  029B                     	;# 
  5759  029C                     	;# 
  5760  029D                     	;# 
  5761  029F                     	;# 
  5762  030C                     	;# 
  5763  030C                     	;# 
  5764  030D                     	;# 
  5765  030E                     	;# 
  5766  030F                     	;# 
  5767  0310                     	;# 
  5768  0310                     	;# 
  5769  0311                     	;# 
  5770  0312                     	;# 
  5771  0313                     	;# 
  5772  0314                     	;# 
  5773  0314                     	;# 
  5774  0315                     	;# 
  5775  0316                     	;# 
  5776  0317                     	;# 
  5777  0318                     	;# 
  5778  0318                     	;# 
  5779  0319                     	;# 
  5780  031A                     	;# 
  5781  031B                     	;# 
  5782  038C                     	;# 
  5783  038C                     	;# 
  5784  038D                     	;# 
  5785  038E                     	;# 
  5786  0390                     	;# 
  5787  0390                     	;# 
  5788  0391                     	;# 
  5789  0392                     	;# 
  5790  048C                     	;# 
  5791  048C                     	;# 
  5792  048D                     	;# 
  5793  048E                     	;# 
  5794  048F                     	;# 
  5795  048F                     	;# 
  5796  0490                     	;# 
  5797  0491                     	;# 
  5798  0492                     	;# 
  5799  0492                     	;# 
  5800  0493                     	;# 
  5801  0494                     	;# 
  5802  0495                     	;# 
  5803  0495                     	;# 
  5804  0496                     	;# 
  5805  0497                     	;# 
  5806  0498                     	;# 
  5807  0499                     	;# 
  5808  049A                     	;# 
  5809  049B                     	;# 
  5810  049C                     	;# 
  5811  049D                     	;# 
  5812  058C                     	;# 
  5813  058C                     	;# 
  5814  058D                     	;# 
  5815  058E                     	;# 
  5816  058F                     	;# 
  5817  058F                     	;# 
  5818  0590                     	;# 
  5819  0591                     	;# 
  5820  0592                     	;# 
  5821  0593                     	;# 
  5822  059C                     	;# 
  5823  059C                     	;# 
  5824  059D                     	;# 
  5825  059D                     	;# 
  5826  059E                     	;# 
  5827  059F                     	;# 
  5828  060C                     	;# 
  5829  060C                     	;# 
  5830  060D                     	;# 
  5831  060D                     	;# 
  5832  060E                     	;# 
  5833  060F                     	;# 
  5834  0610                     	;# 
  5835  0611                     	;# 
  5836  0612                     	;# 
  5837  0613                     	;# 
  5838  0614                     	;# 
  5839  0616                     	;# 
  5840  0616                     	;# 
  5841  0617                     	;# 
  5842  0617                     	;# 
  5843  0618                     	;# 
  5844  0619                     	;# 
  5845  061A                     	;# 
  5846  061B                     	;# 
  5847  061C                     	;# 
  5848  061D                     	;# 
  5849  061E                     	;# 
  5850  070C                     	;# 
  5851  070D                     	;# 
  5852  070E                     	;# 
  5853  070F                     	;# 
  5854  0710                     	;# 
  5855  0711                     	;# 
  5856  0712                     	;# 
  5857  0713                     	;# 
  5858  0714                     	;# 
  5859  0716                     	;# 
  5860  0717                     	;# 
  5861  0718                     	;# 
  5862  0719                     	;# 
  5863  071A                     	;# 
  5864  071B                     	;# 
  5865  071C                     	;# 
  5866  071D                     	;# 
  5867  071E                     	;# 
  5868  0796                     	;# 
  5869  0797                     	;# 
  5870  0798                     	;# 
  5871  0799                     	;# 
  5872  079A                     	;# 
  5873  079B                     	;# 
  5874  079C                     	;# 
  5875  079D                     	;# 
  5876  080C                     	;# 
  5877  080D                     	;# 
  5878  080E                     	;# 
  5879  080F                     	;# 
  5880  0810                     	;# 
  5881  0811                     	;# 
  5882  0812                     	;# 
  5883  0813                     	;# 
  5884  0814                     	;# 
  5885  081A                     	;# 
  5886  081A                     	;# 
  5887  081B                     	;# 
  5888  081C                     	;# 
  5889  081C                     	;# 
  5890  081D                     	;# 
  5891  081E                     	;# 
  5892  081F                     	;# 
  5893  088C                     	;# 
  5894  088D                     	;# 
  5895  088E                     	;# 
  5896  088F                     	;# 
  5897  0890                     	;# 
  5898  0891                     	;# 
  5899  0892                     	;# 
  5900  0893                     	;# 
  5901  0895                     	;# 
  5902  0896                     	;# 
  5903  0897                     	;# 
  5904  0898                     	;# 
  5905  0899                     	;# 
  5906  089A                     	;# 
  5907  089B                     	;# 
  5908  090C                     	;# 
  5909  090E                     	;# 
  5910  090F                     	;# 
  5911  091F                     	;# 
  5912  098F                     	;# 
  5913  098F                     	;# 
  5914  0990                     	;# 
  5915  0991                     	;# 
  5916  0992                     	;# 
  5917  0993                     	;# 
  5918  0994                     	;# 
  5919  0995                     	;# 
  5920  0996                     	;# 
  5921  0997                     	;# 
  5922  1E0F                     	;# 
  5923  1E10                     	;# 
  5924  1E11                     	;# 
  5925  1E12                     	;# 
  5926  1E13                     	;# 
  5927  1E14                     	;# 
  5928  1E15                     	;# 
  5929  1E16                     	;# 
  5930  1E17                     	;# 
  5931  1E18                     	;# 
  5932  1E19                     	;# 
  5933  1E1A                     	;# 
  5934  1E1B                     	;# 
  5935  1E1C                     	;# 
  5936  1E1D                     	;# 
  5937  1E1E                     	;# 
  5938  1E1F                     	;# 
  5939  1E20                     	;# 
  5940  1E21                     	;# 
  5941  1E22                     	;# 
  5942  1E23                     	;# 
  5943  1E24                     	;# 
  5944  1E25                     	;# 
  5945  1E26                     	;# 
  5946  1E27                     	;# 
  5947  1E28                     	;# 
  5948  1E29                     	;# 
  5949  1E2A                     	;# 
  5950  1E2B                     	;# 
  5951  1E2C                     	;# 
  5952  1E2D                     	;# 
  5953  1E2E                     	;# 
  5954  1E2F                     	;# 
  5955  1E30                     	;# 
  5956  1E31                     	;# 
  5957  1E32                     	;# 
  5958  1E33                     	;# 
  5959  1E34                     	;# 
  5960  1E35                     	;# 
  5961  1E36                     	;# 
  5962  1E37                     	;# 
  5963  1E8F                     	;# 
  5964  1E90                     	;# 
  5965  1E91                     	;# 
  5966  1E92                     	;# 
  5967  1E93                     	;# 
  5968  1E94                     	;# 
  5969  1E95                     	;# 
  5970  1E96                     	;# 
  5971  1E97                     	;# 
  5972  1E9C                     	;# 
  5973  1E9D                     	;# 
  5974  1E9E                     	;# 
  5975  1EA1                     	;# 
  5976  1EA2                     	;# 
  5977  1EA3                     	;# 
  5978  1EA4                     	;# 
  5979  1EA9                     	;# 
  5980  1EAA                     	;# 
  5981  1EB1                     	;# 
  5982  1EB2                     	;# 
  5983  1EB8                     	;# 
  5984  1EB9                     	;# 
  5985  1EBA                     	;# 
  5986  1EBB                     	;# 
  5987  1EBC                     	;# 
  5988  1EBD                     	;# 
  5989  1EBE                     	;# 
  5990  1EC3                     	;# 
  5991  1EC5                     	;# 
  5992  1EC6                     	;# 
  5993  1EC7                     	;# 
  5994  1EC8                     	;# 
  5995  1EC9                     	;# 
  5996  1ECA                     	;# 
  5997  1ECB                     	;# 
  5998  1ECB                     	;# 
  5999  1ECB                     	;# 
  6000  1ECC                     	;# 
  6001  1ECC                     	;# 
  6002  1ECC                     	;# 
  6003  1F10                     	;# 
  6004  1F11                     	;# 
  6005  1F12                     	;# 
  6006  1F14                     	;# 
  6007  1F15                     	;# 
  6008  1F1C                     	;# 
  6009  1F1D                     	;# 
  6010  1F1E                     	;# 
  6011  1F1F                     	;# 
  6012  1F20                     	;# 
  6013  1F21                     	;# 
  6014  1F22                     	;# 
  6015  1F23                     	;# 
  6016  1F24                     	;# 
  6017  1F25                     	;# 
  6018  1F26                     	;# 
  6019  1F27                     	;# 
  6020  1F38                     	;# 
  6021  1F39                     	;# 
  6022  1F3A                     	;# 
  6023  1F3B                     	;# 
  6024  1F3C                     	;# 
  6025  1F3D                     	;# 
  6026  1F3E                     	;# 
  6027  1F3F                     	;# 
  6028  1F43                     	;# 
  6029  1F44                     	;# 
  6030  1F45                     	;# 
  6031  1F46                     	;# 
  6032  1F47                     	;# 
  6033  1F48                     	;# 
  6034  1F49                     	;# 
  6035  1F4A                     	;# 
  6036  1F4E                     	;# 
  6037  1F4F                     	;# 
  6038  1F50                     	;# 
  6039  1F51                     	;# 
  6040  1F52                     	;# 
  6041  1F53                     	;# 
  6042  1F54                     	;# 
  6043  1F55                     	;# 
  6044  1FE4                     	;# 
  6045  1FE5                     	;# 
  6046  1FE6                     	;# 
  6047  1FE7                     	;# 
  6048  1FE8                     	;# 
  6049  1FE8                     	;# 
  6050  1FE9                     	;# 
  6051  1FEA                     	;# 
  6052  1FEB                     	;# 
  6053  1FED                     	;# 
  6054  1FEE                     	;# 
  6055  1FEF                     	;# 
  6056  0000                     	;# 
  6057  0001                     	;# 
  6058  0002                     	;# 
  6059  0003                     	;# 
  6060  0004                     	;# 
  6061  0005                     	;# 
  6062  0006                     	;# 
  6063  0007                     	;# 
  6064  0008                     	;# 
  6065  0009                     	;# 
  6066  000A                     	;# 
  6067  000B                     	;# 
  6068  000C                     	;# 
  6069  000D                     	;# 
  6070  000E                     	;# 
  6071  0012                     	;# 
  6072  0013                     	;# 
  6073  0014                     	;# 
  6074  0018                     	;# 
  6075  0019                     	;# 
  6076  001A                     	;# 
  6077  008C                     	;# 
  6078  008C                     	;# 
  6079  008D                     	;# 
  6080  008E                     	;# 
  6081  008E                     	;# 
  6082  008F                     	;# 
  6083  0090                     	;# 
  6084  0090                     	;# 
  6085  0091                     	;# 
  6086  0092                     	;# 
  6087  0092                     	;# 
  6088  0093                     	;# 
  6089  0094                     	;# 
  6090  0094                     	;# 
  6091  0095                     	;# 
  6092  0096                     	;# 
  6093  0096                     	;# 
  6094  0097                     	;# 
  6095  0098                     	;# 
  6096  0099                     	;# 
  6097  009A                     	;# 
  6098  009B                     	;# 
  6099  009B                     	;# 
  6100  009C                     	;# 
  6101  009D                     	;# 
  6102  009D                     	;# 
  6103  009E                     	;# 
  6104  009F                     	;# 
  6105  010C                     	;# 
  6106  010C                     	;# 
  6107  010D                     	;# 
  6108  010E                     	;# 
  6109  010F                     	;# 
  6110  010F                     	;# 
  6111  0110                     	;# 
  6112  0111                     	;# 
  6113  0112                     	;# 
  6114  0113                     	;# 
  6115  0114                     	;# 
  6116  0115                     	;# 
  6117  0116                     	;# 
  6118  0117                     	;# 
  6119  0118                     	;# 
  6120  0119                     	;# 
  6121  0119                     	;# 
  6122  0119                     	;# 
  6123  011A                     	;# 
  6124  011A                     	;# 
  6125  011A                     	;# 
  6126  011B                     	;# 
  6127  011B                     	;# 
  6128  011B                     	;# 
  6129  011B                     	;# 
  6130  011B                     	;# 
  6131  011C                     	;# 
  6132  011C                     	;# 
  6133  011C                     	;# 
  6134  011D                     	;# 
  6135  011D                     	;# 
  6136  011D                     	;# 
  6137  011E                     	;# 
  6138  011E                     	;# 
  6139  011E                     	;# 
  6140  011F                     	;# 
  6141  011F                     	;# 
  6142  011F                     	;# 
  6143  011F                     	;# 
  6144  011F                     	;# 
  6145  018C                     	;# 
  6146  018D                     	;# 
  6147  018E                     	;# 
  6148  018F                     	;# 
  6149  0190                     	;# 
  6150  0191                     	;# 
  6151  0192                     	;# 
  6152  0196                     	;# 
  6153  0197                     	;# 
  6154  0198                     	;# 
  6155  0199                     	;# 
  6156  019A                     	;# 
  6157  019B                     	;# 
  6158  019C                     	;# 
  6159  020C                     	;# 
  6160  020D                     	;# 
  6161  020E                     	;# 
  6162  020E                     	;# 
  6163  020F                     	;# 
  6164  020F                     	;# 
  6165  0210                     	;# 
  6166  0210                     	;# 
  6167  0211                     	;# 
  6168  0211                     	;# 
  6169  0212                     	;# 
  6170  0213                     	;# 
  6171  0214                     	;# 
  6172  0214                     	;# 
  6173  0215                     	;# 
  6174  0215                     	;# 
  6175  0216                     	;# 
  6176  0216                     	;# 
  6177  0217                     	;# 
  6178  0217                     	;# 
  6179  0218                     	;# 
  6180  0219                     	;# 
  6181  021A                     	;# 
  6182  021A                     	;# 
  6183  021B                     	;# 
  6184  021B                     	;# 
  6185  021C                     	;# 
  6186  021C                     	;# 
  6187  021D                     	;# 
  6188  021D                     	;# 
  6189  021E                     	;# 
  6190  021F                     	;# 
  6191  028C                     	;# 
  6192  028C                     	;# 
  6193  028D                     	;# 
  6194  028D                     	;# 
  6195  028E                     	;# 
  6196  028F                     	;# 
  6197  0290                     	;# 
  6198  0291                     	;# 
  6199  0292                     	;# 
  6200  0292                     	;# 
  6201  0293                     	;# 
  6202  0293                     	;# 
  6203  0294                     	;# 
  6204  0295                     	;# 
  6205  0296                     	;# 
  6206  0297                     	;# 
  6207  0298                     	;# 
  6208  0298                     	;# 
  6209  0299                     	;# 
  6210  0299                     	;# 
  6211  029A                     	;# 
  6212  029B                     	;# 
  6213  029C                     	;# 
  6214  029D                     	;# 
  6215  029F                     	;# 
  6216  030C                     	;# 
  6217  030C                     	;# 
  6218  030D                     	;# 
  6219  030E                     	;# 
  6220  030F                     	;# 
  6221  0310                     	;# 
  6222  0310                     	;# 
  6223  0311                     	;# 
  6224  0312                     	;# 
  6225  0313                     	;# 
  6226  0314                     	;# 
  6227  0314                     	;# 
  6228  0315                     	;# 
  6229  0316                     	;# 
  6230  0317                     	;# 
  6231  0318                     	;# 
  6232  0318                     	;# 
  6233  0319                     	;# 
  6234  031A                     	;# 
  6235  031B                     	;# 
  6236  038C                     	;# 
  6237  038C                     	;# 
  6238  038D                     	;# 
  6239  038E                     	;# 
  6240  0390                     	;# 
  6241  0390                     	;# 
  6242  0391                     	;# 
  6243  0392                     	;# 
  6244  048C                     	;# 
  6245  048C                     	;# 
  6246  048D                     	;# 
  6247  048E                     	;# 
  6248  048F                     	;# 
  6249  048F                     	;# 
  6250  0490                     	;# 
  6251  0491                     	;# 
  6252  0492                     	;# 
  6253  0492                     	;# 
  6254  0493                     	;# 
  6255  0494                     	;# 
  6256  0495                     	;# 
  6257  0495                     	;# 
  6258  0496                     	;# 
  6259  0497                     	;# 
  6260  0498                     	;# 
  6261  0499                     	;# 
  6262  049A                     	;# 
  6263  049B                     	;# 
  6264  049C                     	;# 
  6265  049D                     	;# 
  6266  058C                     	;# 
  6267  058C                     	;# 
  6268  058D                     	;# 
  6269  058E                     	;# 
  6270  058F                     	;# 
  6271  058F                     	;# 
  6272  0590                     	;# 
  6273  0591                     	;# 
  6274  0592                     	;# 
  6275  0593                     	;# 
  6276  059C                     	;# 
  6277  059C                     	;# 
  6278  059D                     	;# 
  6279  059D                     	;# 
  6280  059E                     	;# 
  6281  059F                     	;# 
  6282  060C                     	;# 
  6283  060C                     	;# 
  6284  060D                     	;# 
  6285  060D                     	;# 
  6286  060E                     	;# 
  6287  060F                     	;# 
  6288  0610                     	;# 
  6289  0611                     	;# 
  6290  0612                     	;# 
  6291  0613                     	;# 
  6292  0614                     	;# 
  6293  0616                     	;# 
  6294  0616                     	;# 
  6295  0617                     	;# 
  6296  0617                     	;# 
  6297  0618                     	;# 
  6298  0619                     	;# 
  6299  061A                     	;# 
  6300  061B                     	;# 
  6301  061C                     	;# 
  6302  061D                     	;# 
  6303  061E                     	;# 
  6304  070C                     	;# 
  6305  070D                     	;# 
  6306  070E                     	;# 
  6307  070F                     	;# 
  6308  0710                     	;# 
  6309  0711                     	;# 
  6310  0712                     	;# 
  6311  0713                     	;# 
  6312  0714                     	;# 
  6313  0716                     	;# 
  6314  0717                     	;# 
  6315  0718                     	;# 
  6316  0719                     	;# 
  6317  071A                     	;# 
  6318  071B                     	;# 
  6319  071C                     	;# 
  6320  071D                     	;# 
  6321  071E                     	;# 
  6322  0796                     	;# 
  6323  0797                     	;# 
  6324  0798                     	;# 
  6325  0799                     	;# 
  6326  079A                     	;# 
  6327  079B                     	;# 
  6328  079C                     	;# 
  6329  079D                     	;# 
  6330  080C                     	;# 
  6331  080D                     	;# 
  6332  080E                     	;# 
  6333  080F                     	;# 
  6334  0810                     	;# 
  6335  0811                     	;# 
  6336  0812                     	;# 
  6337  0813                     	;# 
  6338  0814                     	;# 
  6339  081A                     	;# 
  6340  081A                     	;# 
  6341  081B                     	;# 
  6342  081C                     	;# 
  6343  081C                     	;# 
  6344  081D                     	;# 
  6345  081E                     	;# 
  6346  081F                     	;# 
  6347  088C                     	;# 
  6348  088D                     	;# 
  6349  088E                     	;# 
  6350  088F                     	;# 
  6351  0890                     	;# 
  6352  0891                     	;# 
  6353  0892                     	;# 
  6354  0893                     	;# 
  6355  0895                     	;# 
  6356  0896                     	;# 
  6357  0897                     	;# 
  6358  0898                     	;# 
  6359  0899                     	;# 
  6360  089A                     	;# 
  6361  089B                     	;# 
  6362  090C                     	;# 
  6363  090E                     	;# 
  6364  090F                     	;# 
  6365  091F                     	;# 
  6366  098F                     	;# 
  6367  098F                     	;# 
  6368  0990                     	;# 
  6369  0991                     	;# 
  6370  0992                     	;# 
  6371  0993                     	;# 
  6372  0994                     	;# 
  6373  0995                     	;# 
  6374  0996                     	;# 
  6375  0997                     	;# 
  6376  1E0F                     	;# 
  6377  1E10                     	;# 
  6378  1E11                     	;# 
  6379  1E12                     	;# 
  6380  1E13                     	;# 
  6381  1E14                     	;# 
  6382  1E15                     	;# 
  6383  1E16                     	;# 
  6384  1E17                     	;# 
  6385  1E18                     	;# 
  6386  1E19                     	;# 
  6387  1E1A                     	;# 
  6388  1E1B                     	;# 
  6389  1E1C                     	;# 
  6390  1E1D                     	;# 
  6391  1E1E                     	;# 
  6392  1E1F                     	;# 
  6393  1E20                     	;# 
  6394  1E21                     	;# 
  6395  1E22                     	;# 
  6396  1E23                     	;# 
  6397  1E24                     	;# 
  6398  1E25                     	;# 
  6399  1E26                     	;# 
  6400  1E27                     	;# 
  6401  1E28                     	;# 
  6402  1E29                     	;# 
  6403  1E2A                     	;# 
  6404  1E2B                     	;# 
  6405  1E2C                     	;# 
  6406  1E2D                     	;# 
  6407  1E2E                     	;# 
  6408  1E2F                     	;# 
  6409  1E30                     	;# 
  6410  1E31                     	;# 
  6411  1E32                     	;# 
  6412  1E33                     	;# 
  6413  1E34                     	;# 
  6414  1E35                     	;# 
  6415  1E36                     	;# 
  6416  1E37                     	;# 
  6417  1E8F                     	;# 
  6418  1E90                     	;# 
  6419  1E91                     	;# 
  6420  1E92                     	;# 
  6421  1E93                     	;# 
  6422  1E94                     	;# 
  6423  1E95                     	;# 
  6424  1E96                     	;# 
  6425  1E97                     	;# 
  6426  1E9C                     	;# 
  6427  1E9D                     	;# 
  6428  1E9E                     	;# 
  6429  1EA1                     	;# 
  6430  1EA2                     	;# 
  6431  1EA3                     	;# 
  6432  1EA4                     	;# 
  6433  1EA9                     	;# 
  6434  1EAA                     	;# 
  6435  1EB1                     	;# 
  6436  1EB2                     	;# 
  6437  1EB8                     	;# 
  6438  1EB9                     	;# 
  6439  1EBA                     	;# 
  6440  1EBB                     	;# 
  6441  1EBC                     	;# 
  6442  1EBD                     	;# 
  6443  1EBE                     	;# 
  6444  1EC3                     	;# 
  6445  1EC5                     	;# 
  6446  1EC6                     	;# 
  6447  1EC7                     	;# 
  6448  1EC8                     	;# 
  6449  1EC9                     	;# 
  6450  1ECA                     	;# 
  6451  1ECB                     	;# 
  6452  1ECB                     	;# 
  6453  1ECB                     	;# 
  6454  1ECC                     	;# 
  6455  1ECC                     	;# 
  6456  1ECC                     	;# 
  6457  1F10                     	;# 
  6458  1F11                     	;# 
  6459  1F12                     	;# 
  6460  1F14                     	;# 
  6461  1F15                     	;# 
  6462  1F1C                     	;# 
  6463  1F1D                     	;# 
  6464  1F1E                     	;# 
  6465  1F1F                     	;# 
  6466  1F20                     	;# 
  6467  1F21                     	;# 
  6468  1F22                     	;# 
  6469  1F23                     	;# 
  6470  1F24                     	;# 
  6471  1F25                     	;# 
  6472  1F26                     	;# 
  6473  1F27                     	;# 
  6474  1F38                     	;# 
  6475  1F39                     	;# 
  6476  1F3A                     	;# 
  6477  1F3B                     	;# 
  6478  1F3C                     	;# 
  6479  1F3D                     	;# 
  6480  1F3E                     	;# 
  6481  1F3F                     	;# 
  6482  1F43                     	;# 
  6483  1F44                     	;# 
  6484  1F45                     	;# 
  6485  1F46                     	;# 
  6486  1F47                     	;# 
  6487  1F48                     	;# 
  6488  1F49                     	;# 
  6489  1F4A                     	;# 
  6490  1F4E                     	;# 
  6491  1F4F                     	;# 
  6492  1F50                     	;# 
  6493  1F51                     	;# 
  6494  1F52                     	;# 
  6495  1F53                     	;# 
  6496  1F54                     	;# 
  6497  1F55                     	;# 
  6498  1FE4                     	;# 
  6499  1FE5                     	;# 
  6500  1FE6                     	;# 
  6501  1FE7                     	;# 
  6502  1FE8                     	;# 
  6503  1FE8                     	;# 
  6504  1FE9                     	;# 
  6505  1FEA                     	;# 
  6506  1FEB                     	;# 
  6507  1FED                     	;# 
  6508  1FEE                     	;# 
  6509  1FEF                     	;_dmxData
  6510                           
  6511                           	psect	idataBANK1
  6512  0002                     __pidataBANK1:	
  6513                           
  6514                           ;initializer for _address
  6515  0002  3401               	retlw	1
  6516  0003  3400               	retlw	0
  6517                           
  6518                           	psect	idataBANK2
  6519  1DE1                     __pidataBANK2:	
  6520                           
  6521                           ;initializer for _fadeAmmount
  6522  1DE1  3414               	retlw	20
  6523  1DE2  3400               	retlw	0
  6524                           
  6525                           ;initializer for _delay
  6526  1DE3  340A               	retlw	10
  6527  1DE4  3400               	retlw	0
  6528                           
  6529                           ;initializer for _threshold
  6530  1DE5  3490               	retlw	144
  6531  1DE6  3406               	retlw	6
  6532                           
  6533                           ;initializer for _firstMsg
  6534  1DE7  3401               	retlw	1
  6535                           
  6536                           ;initializer for _pulseSpeed
  6537  1DE8  3490               	retlw	144
  6538  1DE9  3401               	retlw	1
  6539                           
  6540                           ;initializer for _cycleSpeed
  6541  1DEA  3414               	retlw	20
  6542  1DEB  3400               	retlw	0
  6543                           
  6544                           	psect	idataBANK3
  6545  1E3C                     __pidataBANK3:	
  6546                           
  6547                           ;initializer for _pulseColor
  6548  1E3C  3400               	retlw	0
  6549  1E3D  3400               	retlw	0
  6550  1E3E  3400               	retlw	0
  6551  1E3F  3400               	retlw	0
  6552  1E40  3480               	retlw	128
  6553  1E41  343F               	retlw	63
  6554  1E42  3400               	retlw	0
  6555  1E43  3400               	retlw	0
  6556  1E44  3400               	retlw	0
  6557  1E45  343F               	retlw	63
  6558                           
  6559                           ;initializer for _color
  6560  1E46  3400               	retlw	0
  6561  1E47  3400               	retlw	0
  6562  1E48  3400               	retlw	0
  6563  1E49  3400               	retlw	0
  6564  1E4A  3480               	retlw	128
  6565  1E4B  343F               	retlw	63
  6566  1E4C  3400               	retlw	0
  6567  1E4D  3400               	retlw	0
  6568  1E4E  3400               	retlw	0
  6569  1E4F  343F               	retlw	63
  6570                           
  6571                           	psect	stringtext1
  6572  1800                     __pstringtext1:	
  6573  1800                     _charTable:	
  6574  1800  3400               	retlw	0
  6575  1801  3482               	retlw	130
  6576  1802  3421               	retlw	33
  6577  1803  3400               	retlw	0
  6578  1804  3400               	retlw	0
  6579  1805  3400               	retlw	0
  6580  1806  3400               	retlw	0
  6581  1807  3402               	retlw	2
  6582  1808  3439               	retlw	57
  6583  1809  340F               	retlw	15
  6584  180A  3400               	retlw	0
  6585  180B  3400               	retlw	0
  6586  180C  3400               	retlw	0
  6587  180D  3440               	retlw	64
  6588  180E  3480               	retlw	128
  6589  180F  3400               	retlw	0
  6590  1810  343F               	retlw	63
  6591  1811  3406               	retlw	6
  6592  1812  345B               	retlw	91
  6593  1813  344F               	retlw	79
  6594  1814  3466               	retlw	102
  6595  1815  346D               	retlw	109
  6596  1816  347D               	retlw	125
  6597  1817  3407               	retlw	7
  6598  1818  347F               	retlw	127
  6599  1819  346F               	retlw	111
  6600  181A  3400               	retlw	0
  6601  181B  3400               	retlw	0
  6602  181C  3400               	retlw	0
  6603  181D  3448               	retlw	72
  6604  181E  3400               	retlw	0
  6605  181F  3453               	retlw	83
  6606  1820  3400               	retlw	0
  6607  1821  3477               	retlw	119
  6608  1822  347C               	retlw	124
  6609  1823  3439               	retlw	57
  6610  1824  345E               	retlw	94
  6611  1825  3479               	retlw	121
  6612  1826  3471               	retlw	113
  6613  1827  346F               	retlw	111
  6614  1828  3476               	retlw	118
  6615  1829  3406               	retlw	6
  6616  182A  341E               	retlw	30
  6617  182B  3400               	retlw	0
  6618  182C  3438               	retlw	56
  6619  182D  3400               	retlw	0
  6620  182E  3454               	retlw	84
  6621  182F  343F               	retlw	63
  6622  1830  3473               	retlw	115
  6623  1831  3467               	retlw	103
  6624  1832  3450               	retlw	80
  6625  1833  346D               	retlw	109
  6626  1834  3478               	retlw	120
  6627  1835  343E               	retlw	62
  6628  1836  3400               	retlw	0
  6629  1837  3400               	retlw	0
  6630  1838  3400               	retlw	0
  6631  1839  346E               	retlw	110
  6632  183A  3400               	retlw	0
  6633  183B  3439               	retlw	57
  6634  183C  3400               	retlw	0
  6635  183D  340F               	retlw	15
  6636  183E  3400               	retlw	0
  6637  183F  3408               	retlw	8
  6638  1840  3463               	retlw	99
  6639  1841  345F               	retlw	95
  6640  1842  347C               	retlw	124
  6641  1843  3458               	retlw	88
  6642  1844  345E               	retlw	94
  6643  1845  347B               	retlw	123
  6644  1846  3471               	retlw	113
  6645  1847  346F               	retlw	111
  6646  1848  3474               	retlw	116
  6647  1849  3402               	retlw	2
  6648  184A  341E               	retlw	30
  6649  184B  3400               	retlw	0
  6650  184C  3406               	retlw	6
  6651  184D  3400               	retlw	0
  6652  184E  3454               	retlw	84
  6653  184F  345C               	retlw	92
  6654  1850  3473               	retlw	115
  6655  1851  3467               	retlw	103
  6656  1852  3450               	retlw	80
  6657  1853  346D               	retlw	109
  6658  1854  3478               	retlw	120
  6659  1855  341C               	retlw	28
  6660  1856  3400               	retlw	0
  6661  1857  3400               	retlw	0
  6662  1858  3400               	retlw	0
  6663  1859  346E               	retlw	110
  6664  185A  3400               	retlw	0
  6665  185B  3439               	retlw	57
  6666  185C  3430               	retlw	48
  6667  185D  340F               	retlw	15
  6668  185E  3400               	retlw	0
  6669  185F  3400               	retlw	0
  6670  1860                     __end_of_charTable:	
  6671                           
  6672                           	psect	nvBANK2
  6673  0169                     __pnvBANK2:	
  6674  0169                     _ADCC_ADTI_InterruptHandler:	
  6675  0169                     	ds	2
  6676  016B                     _TMR0_InterruptHandler:	
  6677  016B                     	ds	2
  6678  016D                     _EUSART1_TxDefaultInterruptHandler:	
  6679  016D                     	ds	2
  6680  016F                     _eusart1TxBufferRemaining:	
  6681  016F                     	ds	1
  6682                           
  6683                           	psect	nvBANK3
  6684  01DE                     __pnvBANK3:	
  6685  01DE                     _EUSART1_ErrorHandler:	
  6686  01DE                     	ds	2
  6687  01E0                     _EUSART1_OverrunErrorHandler:	
  6688  01E0                     	ds	2
  6689  01E2                     _EUSART1_FramingErrorHandler:	
  6690  01E2                     	ds	2
  6691  01E4                     _EUSART1_RxDefaultInterruptHandler:	
  6692  01E4                     	ds	2
  6693  000B                     _INTCONbits	set	11
  6694  0014                     _TRISC	set	20
  6695  0013                     _TRISB	set	19
  6696  0012                     _TRISA	set	18
  6697  001A                     _LATC	set	26
  6698  0019                     _LATB	set	25
  6699  0018                     _LATA	set	24
  6700  000C                     _PORTA	set	12
  6701  000E                     _PORTC	set	14
  6702  00A3                     _TRISC3	set	163
  6703  00A4                     _TRISC4	set	164
  6704  00A6                     _TRISC6	set	166
  6705  00A7                     _TRISC7	set	167
  6706  00CE                     _LATB6	set	206
  6707  009E                     _TRISB6	set	158
  6708  0090                     _ADERRL	set	144
  6709  0091                     _ADERRH	set	145
  6710  009B                     _ADPREVL	set	155
  6711  009C                     _ADPREVH	set	156
  6712  0094                     _ADFLTRL	set	148
  6713  0095                     _ADFLTRH	set	149
  6714  0096                     _ADACCL	set	150
  6715  0097                     _ADACCH	set	151
  6716  0099                     _ADCNT	set	153
  6717  009D                     _ADRESL	set	157
  6718  009E                     _ADRESH	set	158
  6719  009F                     _ADPCH	set	159
  6720  009A                     _ADRPT	set	154
  6721  0098                     _ADACCU	set	152
  6722  0093                     _ADSTPTH	set	147
  6723  0092                     _ADSTPTL	set	146
  6724  008F                     _ADUTHH	set	143
  6725  008E                     _ADUTHL	set	142
  6726  008D                     _ADLTHH	set	141
  6727  008C                     _ADLTHL	set	140
  6728  011A                     _TXREG	set	282
  6729  0112                     _ADCON1bits	set	274
  6730  0115                     _ADSTATbits	set	277
  6731  0113                     _ADCON2bits	set	275
  6732  0114                     _ADCON3bits	set	276
  6733  0111                     _ADCON0bits	set	273
  6734  0111                     _ADCON0	set	273
  6735  0118                     _ADCLK	set	280
  6736  0117                     _ADACT	set	279
  6737  0116                     _ADREF	set	278
  6738  0115                     _ADSTAT	set	277
  6739  0114                     _ADCON3	set	276
  6740  0113                     _ADCON2	set	275
  6741  0112                     _ADCON1	set	274
  6742  0110                     _ADPREH	set	272
  6743  010F                     _ADPREL	set	271
  6744  010E                     _ADCAP	set	270
  6745  010D                     _ADACQH	set	269
  6746  010C                     _ADACQL	set	268
  6747  0119                     _RC1REG	set	281
  6748  011D                     _RC1STAbits	set	285
  6749  011A                     _TX1REG	set	282
  6750  011E                     _TX1STAbits	set	286
  6751  011C                     _SP1BRGH	set	284
  6752  011B                     _SP1BRGL	set	283
  6753  011E                     _TX1STA	set	286
  6754  011D                     _RC1STA	set	285
  6755  011F                     _BAUD1CON	set	287
  6756  018C                     _SSP1BUF	set	396
  6757  0191                     _SSP1CON2bits	set	401
  6758  0190                     _SSP1CON1bits	set	400
  6759  018D                     _SSP1ADD	set	397
  6760  0192                     _SSP1CON3	set	402
  6761  0190                     _SSP1CON1	set	400
  6762  018F                     _SSP1STAT	set	399
  6763  028E                     _T2CONbits	set	654
  6764  0290                     _T2CLKCON	set	656
  6765  0318                     _CCPR4L	set	792
  6766  0319                     _CCPR4H	set	793
  6767  0314                     _CCPR3L	set	788
  6768  0315                     _CCPR3H	set	789
  6769  0310                     _CCPR2L	set	784
  6770  0311                     _CCPR2H	set	785
  6771  030C                     _CCPR1L	set	780
  6772  030D                     _CCPR1H	set	781
  6773  031A                     _CCP4CONbits	set	794
  6774  0316                     _CCP3CONbits	set	790
  6775  0312                     _CCP2CONbits	set	786
  6776  030E                     _CCP1CONbits	set	782
  6777  059E                     _T0CON0bits	set	1438
  6778  059E                     _T0CON0	set	1438
  6779  059C                     _TMR0L	set	1436
  6780  059D                     _TMR0H	set	1437
  6781  059F                     _T0CON1	set	1439
  6782  070D                     _PIR1bits	set	1805
  6783  0717                     _PIE1bits	set	1815
  6784  070F                     _PIR3bits	set	1807
  6785  070C                     _PIR0bits	set	1804
  6786  0716                     _PIE0bits	set	1814
  6787  0719                     _PIE3bits	set	1817
  6788  079D                     _PMD7	set	1949
  6789  079C                     _PMD6	set	1948
  6790  079B                     _PMD5	set	1947
  6791  079A                     _PMD4	set	1946
  6792  0799                     _PMD3	set	1945
  6793  0798                     _PMD2	set	1944
  6794  0797                     _PMD1	set	1943
  6795  0796                     _PMD0	set	1942
  6796  0892                     _OSCTUNE	set	2194
  6797  0893                     _OSCFRQ	set	2195
  6798  0891                     _OSCEN	set	2193
  6799  088F                     _OSCCON3	set	2191
  6800  088D                     _OSCCON1	set	2189
  6801  1ECB                     _RX1DTPPS	set	7883
  6802  1EC6                     _SSP1DATPPS	set	7878
  6803  1EC5                     _SSP1CLKPPS	set	7877
  6804  1F23                     _RC3PPS	set	7971
  6805  1F24                     _RC4PPS	set	7972
  6806  1F26                     _RC6PPS	set	7974
  6807  1F27                     _RC7PPS	set	7975
  6808  1F15                     _RA5PPS	set	7957
  6809  1F14                     _RA4PPS	set	7956
  6810  1F51                     _SLRCONC	set	8017
  6811  1F46                     _SLRCONB	set	8006
  6812  1F3B                     _SLRCONA	set	7995
  6813  1F50                     _ODCONC	set	8016
  6814  1F45                     _ODCONB	set	8005
  6815  1F3A                     _ODCONA	set	7994
  6816  1F4F                     _WPUC	set	8015
  6817  1F39                     _WPUA	set	7993
  6818  1F44                     _WPUB	set	8004
  6819  1F38                     _ANSELA	set	7992
  6820  1F43                     _ANSELB	set	8003
  6821  1F4E                     _ANSELC	set	8014
  6822                           
  6823                           ; #config settings
  6824  0000                     
  6825                           	psect	cinit
  6826  003B                     start_initialization:	
  6827  003B                     __initialization:		;BIGRAM
  6828                           
  6829                           ; Initialize objects allocated to BANK1
  6830  003B  0141               	movlb	1	; select bank1
  6831  003C  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  6832  003F  00EE               	movwf	__pdataBANK1& (0+127)
  6833  0040  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  6834  0043  00EF               	movwf	(__pdataBANK1+1)& (0+127)
  6835                           
  6836                           ; Initialize objects allocated to BANK2
  6837  0044  30E1               	movlw	low __pidataBANK2
  6838  0045  0084               	movwf	4
  6839  0046  309D               	movlw	(high __pidataBANK2)| (0+128)
  6840  0047  0085               	movwf	5
  6841  0048  305E               	movlw	low __pdataBANK2
  6842  0049  0086               	movwf	6
  6843  004A  3001               	movlw	high __pdataBANK2
  6844  004B  0087               	movwf	7
  6845  004C  3000               	movlw	0
  6846  004D  00FF               	movwf	btemp+1
  6847  004E  300B               	movlw	11
  6848  004F  319D  25F8  3180   	fcall	init_ram
  6849                           
  6850                           ; Initialize objects allocated to BANK3
  6851  0052  303C               	movlw	low __pidataBANK3
  6852  0053  0084               	movwf	4
  6853  0054  309E               	movlw	(high __pidataBANK3)| (0+128)
  6854  0055  0085               	movwf	5
  6855  0056  30CA               	movlw	low __pdataBANK3
  6856  0057  0086               	movwf	6
  6857  0058  3001               	movlw	high __pdataBANK3
  6858  0059  0087               	movwf	7
  6859  005A  3000               	movlw	0
  6860  005B  00FF               	movwf	btemp+1
  6861  005C  3014               	movlw	20
  6862  005D  319D  25F8  3180   	fcall	init_ram
  6863                           
  6864                           ; Clear objects allocated to BIGRAM
  6865  0060  30EF               	movlw	low (0+9711)
  6866  0061  0084               	movwf	4
  6867  0062  3025               	movlw	high (0+9711)
  6868  0063  0085               	movwf	5
  6869  0064  3001               	movlw	1
  6870  0065  00FE               	movwf	btemp
  6871  0066  3002               	movlw	2
  6872  0067  00FF               	movwf	btemp+1
  6873  0068  319D  25EC  3180   	fcall	clear_ram0
  6874                           
  6875                           ; Clear objects allocated to COMMON
  6876  006B  01F0               	clrf	__pbssCOMMON& (0+127)
  6877  006C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  6878  006D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  6879  006E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  6880  006F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  6881  0070  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  6882                           
  6883                           ; Clear objects allocated to BANK1
  6884  0071  01E9               	clrf	__pbssBANK1& (0+127)
  6885  0072  01EA               	clrf	(__pbssBANK1+1)& (0+127)
  6886  0073  01EB               	clrf	(__pbssBANK1+2)& (0+127)
  6887  0074  01EC               	clrf	(__pbssBANK1+3)& (0+127)
  6888  0075  01ED               	clrf	(__pbssBANK1+4)& (0+127)
  6889                           
  6890                           ; Clear objects allocated to BANK2
  6891  0076  3020               	movlw	low __pbssBANK2
  6892  0077  0084               	movwf	4
  6893  0078  3001               	movlw	high __pbssBANK2
  6894  0079  0085               	movwf	5
  6895  007A  303E               	movlw	62
  6896  007B  00FE               	movwf	btemp
  6897  007C  3000               	movlw	0
  6898  007D  00FF               	movwf	btemp+1
  6899  007E  319D  25EC  3180   	fcall	clear_ram0
  6900                           
  6901                           ; Clear objects allocated to BANK3
  6902  0081  30A0               	movlw	low __pbssBANK3
  6903  0082  0084               	movwf	4
  6904  0083  3001               	movlw	high __pbssBANK3
  6905  0084  0085               	movwf	5
  6906  0085  302A               	movlw	42
  6907  0086  00FE               	movwf	btemp
  6908  0087  3000               	movlw	0
  6909  0088  00FF               	movwf	btemp+1
  6910  0089  319D  25EC  3180   	fcall	clear_ram0
  6911                           
  6912                           ; Clear objects allocated to BANK4
  6913  008C  3020               	movlw	low __pbssBANK4
  6914  008D  0084               	movwf	4
  6915  008E  3002               	movlw	high __pbssBANK4
  6916  008F  0085               	movwf	5
  6917  0090  3020               	movlw	32
  6918  0091  00FE               	movwf	btemp
  6919  0092  3000               	movlw	0
  6920  0093  00FF               	movwf	btemp+1
  6921  0094  319D  25EC         	fcall	clear_ram0
  6922  0096                     end_of_initialization:	
  6923                           ;End of C runtime variable initialization code
  6924                           
  6925  0096                     __end_of__initialization:	
  6926  0096  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6927  0097  0140               	movlb	0
  6928  0098  3191  297E         	ljmp	_main	;jump to C main() function
  6929                           
  6930                           	psect	bssCOMMON
  6931  0070                     __pbssCOMMON:	
  6932  0070                     _eusart1RxTail:	
  6933  0070                     	ds	1
  6934  0071                     _eusart1RxHead:	
  6935  0071                     	ds	1
  6936  0072                     _eusart1TxTail:	
  6937  0072                     	ds	1
  6938  0073                     _eusart1TxHead:	
  6939  0073                     	ds	1
  6940  0074                     I2C1_ISR@i2c_address:	
  6941  0074                     	ds	2
  6942                           
  6943                           	psect	bssBANK1
  6944  00E9                     __pbssBANK1:	
  6945  00E9                     _thresholdExceeded:	
  6946  00E9                     	ds	1
  6947  00EA                     _p_i2c1_current:	
  6948  00EA                     	ds	1
  6949  00EB                     _p_i2c1_trb_current:	
  6950  00EB                     	ds	1
  6951  00EC                     _i2c1_state:	
  6952  00EC                     	ds	1
  6953  00ED                     _eusart1RxCount:	
  6954  00ED                     	ds	1
  6955                           
  6956                           	psect	dataBANK1
  6957  00EE                     __pdataBANK1:	
  6958  00EE                     _address:	
  6959  00EE                     	ds	2
  6960                           
  6961                           	psect	bssBANK2
  6962  0120                     __pbssBANK2:	
  6963  0120                     _i2c1_object:	
  6964  0120                     	ds	5
  6965  0125                     _fadeTime:	
  6966  0125                     	ds	4
  6967  0129                     _lastActiveTime:	
  6968  0129                     	ds	2
  6969  012B                     controller@lastTime:	
  6970  012B                     	ds	2
  6971  012D                     _hueValPulse:	
  6972  012D                     	ds	2
  6973  012F                     _lastTimePulse:	
  6974  012F                     	ds	2
  6975  0131                     _hueValCycle:	
  6976  0131                     	ds	2
  6977  0133                     _lastTimeCycle:	
  6978  0133                     	ds	2
  6979  0135                     _currentState:	
  6980  0135                     	ds	2
  6981  0137                     led@lastTime:	
  6982  0137                     	ds	2
  6983  0139                     dmx@lastTime:	
  6984  0139                     	ds	2
  6985  013B                     _dmxPointer:	
  6986  013B                     	ds	2
  6987  013D                     _thresholdCount:	
  6988  013D                     	ds	2
  6989  013F                     _lastRun:	
  6990  013F                     	ds	2
  6991  0141                     _bpm:	
  6992  0141                     	ds	2
  6993  0143                     _lastBeat:	
  6994  0143                     	ds	2
  6995  0145                     _lastTime:	
  6996  0145                     	ds	2
  6997  0147                     _count:	
  6998  0147                     	ds	2
  6999  0149                     _currentTime:	
  7000  0149                     	ds	2
  7001  014B                     _changeColor:	
  7002  014B                     	ds	1
  7003  014C                     _toggleCheck:	
  7004  014C                     	ds	1
  7005  014D                     _dmxOn:	
  7006  014D                     	ds	1
  7007  014E                     _offCheck:	
  7008  014E                     	ds	1
  7009  014F                     _lastDetected:	
  7010  014F                     	ds	1
  7011  0150                     _detected:	
  7012  0150                     	ds	1
  7013  0151                     _menu:	
  7014  0151                     	ds	1
  7015  0152                     _enter:	
  7016  0152                     	ds	1
  7017  0153                     _down:	
  7018  0153                     	ds	1
  7019  0154                     _up:	
  7020  0154                     	ds	1
  7021  0155                     _isOn:	
  7022  0155                     	ds	1
  7023  0156                     I2C1_ISR@i2c_10bit_address_restart:	
  7024  0156                     	ds	1
  7025  0157                     I2C1_ISR@i2c_bytes_left:	
  7026  0157                     	ds	1
  7027  0158                     I2C1_ISR@pi2c_buf_ptr:	
  7028  0158                     	ds	1
  7029  0159                     _i2c1_trb_count:	
  7030  0159                     	ds	1
  7031  015A                     _eusart1RxLastError:	
  7032  015A                     	ds	1
  7033  015B                     _i2c1_tr_queue:	
  7034  015B                     	ds	3
  7035                           
  7036                           	psect	dataBANK2
  7037  015E                     __pdataBANK2:	
  7038  015E                     _fadeAmmount:	
  7039  015E                     	ds	2
  7040  0160                     _delay:	
  7041  0160                     	ds	2
  7042  0162                     _threshold:	
  7043  0162                     	ds	2
  7044  0164                     _firstMsg:	
  7045  0164                     	ds	1
  7046  0165                     _pulseSpeed:	
  7047  0165                     	ds	2
  7048  0167                     _cycleSpeed:	
  7049  0167                     	ds	2
  7050                           
  7051                           	psect	bssBANK3
  7052  01A0                     __pbssBANK3:	
  7053  01A0                     cycleColors@F112:	
  7054  01A0                     	ds	10
  7055  01AA                     _eusart1RxStatusBuffer:	
  7056  01AA                     	ds	8
  7057  01B2                     _eusart1RxBuffer:	
  7058  01B2                     	ds	8
  7059  01BA                     _eusart1TxBuffer:	
  7060  01BA                     	ds	8
  7061  01C2                     I2C1_MasterRead@trBlock:	
  7062  01C2                     	ds	4
  7063  01C6                     I2C1_MasterWrite@trBlock:	
  7064  01C6                     	ds	4
  7065                           
  7066                           	psect	dataBANK3
  7067  01CA                     __pdataBANK3:	
  7068  01CA                     _pulseColor:	
  7069  01CA                     	ds	10
  7070  01D4                     _color:	
  7071  01D4                     	ds	10
  7072                           
  7073                           	psect	bssBANK4
  7074  0220                     __pbssBANK4:	
  7075  0220                     _buttons:	
  7076  0220                     	ds	32
  7077                           
  7078                           	psect	inittext
  7079  1DF8                     init_ram:	
  7080  1DF8  00FE               	movwf	126
  7081  1DF9                     initloop:	
  7082  1DF9  0012               	moviw fsr0++
  7083  1DFA  001E               	movwi fsr1++
  7084  1DFB  3001               	movlw	1
  7085  1DFC  02FE               	subwf	126,f
  7086  1DFD  3000               	movlw	0
  7087  1DFE  3BFF               	subwfb	127,f
  7088  1DFF  087F               	movf	127,w
  7089  1E00  047E               	iorwf	126,w
  7090  1E01  1903               	btfsc	3,2
  7091  1E02  3400               	retlw	0
  7092  1E03  2DF9               	goto	initloop
  7093                           
  7094                           	psect	clrtext
  7095  1DEC                     clear_ram0:	
  7096                           ;	Called with FSR0 containing the base address, and
  7097                           ;	btemp/btemp+1 has the size to clear
  7098                           
  7099  1DEC  0064               	clrwdt	;clear the watchdog before getting into this loop
  7100  1DED                     clrloop0:	
  7101  1DED  0180               	clrf	0	;clear RAM location pointed to by FSR
  7102  1DEE  3101               	addfsr 0,1
  7103  1DEF  3001               	movlw	1
  7104  1DF0  02FE               	subwf	126,f
  7105  1DF1  3000               	movlw	0
  7106  1DF2  3BFF               	subwfb	127,f
  7107  1DF3  087F               	movf	127,w
  7108  1DF4  047E               	iorwf	126,w
  7109  1DF5  1903               	btfsc	3,2
  7110  1DF6  3400               	retlw	0	;all done for this memory range, return
  7111  1DF7  2DED               	goto	clrloop0	;have we reached the end yet?
  7112                           
  7113                           	psect	cstackBANK3
  7114  01E6                     __pcstackBANK3:	
  7115  01E6                     ??_main:	
  7116                           
  7117                           ; 1 bytes @ 0x0
  7118  01E6                     	ds	2
  7119                           
  7120                           	psect	cstackBANK1
  7121  00A0                     __pcstackBANK1:	
  7122  00A0                     _HueToRGB$2876:	
  7123                           
  7124                           ; 4 bytes @ 0x0
  7125  00A0                     	ds	4
  7126  00A4                     ?___fltol:	
  7127  00A4                     ___fltol@f1:	
  7128                           ; 4 bytes @ 0x4
  7129                           
  7130                           
  7131                           ; 4 bytes @ 0x4
  7132  00A4                     	ds	4
  7133  00A8                     ??___fltol:	
  7134                           
  7135                           ; 1 bytes @ 0x8
  7136  00A8                     	ds	5
  7137  00AD                     ___fltol@sign1:	
  7138                           
  7139                           ; 1 bytes @ 0xD
  7140  00AD                     	ds	1
  7141  00AE                     ___fltol@exp1:	
  7142                           
  7143                           ; 1 bytes @ 0xE
  7144  00AE                     	ds	1
  7145  00AF                     ?_LED_setHSL:	
  7146  00AF                     LED_setHSL@hsl:	
  7147                           ; 1 bytes @ 0xF
  7148                           
  7149                           
  7150                           ; 10 bytes @ 0xF
  7151  00AF                     	ds	10
  7152  00B9                     ??_LED_setHSL:	
  7153                           
  7154                           ; 1 bytes @ 0x19
  7155  00B9                     	ds	2
  7156  00BB                     _LED_setHSL$2877:	
  7157                           
  7158                           ; 4 bytes @ 0x1B
  7159  00BB                     	ds	4
  7160  00BF                     _LED_setHSL$2880:	
  7161                           
  7162                           ; 4 bytes @ 0x1F
  7163  00BF                     	ds	4
  7164  00C3                     _LED_setHSL$2878:	
  7165                           
  7166                           ; 4 bytes @ 0x23
  7167  00C3                     	ds	4
  7168  00C7                     _LED_setHSL$2879:	
  7169                           
  7170                           ; 4 bytes @ 0x27
  7171  00C7                     	ds	4
  7172  00CB                     LED_setHSL@v1:	
  7173                           
  7174                           ; 4 bytes @ 0x2B
  7175  00CB                     	ds	4
  7176  00CF                     LED_setHSL@hue:	
  7177                           
  7178                           ; 4 bytes @ 0x2F
  7179  00CF                     	ds	4
  7180  00D3                     LED_setHSL@v2:	
  7181                           
  7182                           ; 4 bytes @ 0x33
  7183  00D3                     	ds	4
  7184  00D7                     LED_setHSL@rgb:	
  7185                           
  7186                           ; 3 bytes @ 0x37
  7187  00D7                     	ds	3
  7188  00DA                     ??_fadeColor:	
  7189  00DA                     ??_cycleColors:	
  7190                           ; 1 bytes @ 0x3A
  7191                           
  7192                           
  7193                           ; 1 bytes @ 0x3A
  7194  00DA                     	ds	2
  7195  00DC                     fadeColor@time:	
  7196  00DC                     cycleColors@time:	
  7197                           ; 2 bytes @ 0x3C
  7198                           
  7199                           
  7200                           ; 2 bytes @ 0x3C
  7201  00DC                     	ds	2
  7202  00DE                     cycleColors@color:	
  7203                           
  7204                           ; 10 bytes @ 0x3E
  7205  00DE                     	ds	10
  7206  00E8                     ??_MENU_task:	
  7207                           
  7208                           ; 1 bytes @ 0x48
  7209  00E8                     	ds	1
  7210                           
  7211                           	psect	cstackCOMMON
  7212  0076                     __pcstackCOMMON:	
  7213  0076                     ?_EUSART1_Receive_ISR:	
  7214  0076                     ?_EUSART1_Transmit_ISR:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0076                     ??_EUSART1_Transmit_ISR:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0076                     ?_EUSART1_DefaultErrorHandler:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0076                     ?_EUSART1_RxDataHandler:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0076                     ??_EUSART1_RxDataHandler:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0076                     ?_PMD_Initialize:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0076                     ?_PIN_MANAGER_Initialize:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0076                     ?_OSCILLATOR_Initialize:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0076                     ?_I2C1_Initialize:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0076                     ?_ADCC_Initialize:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0076                     ?_TMR0_Initialize:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0076                     ?_TMR0_ISR:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0076                     ??_TMR0_ISR:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0076                     ?_I2C1_BusCollisionISR:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0076                     ??_I2C1_BusCollisionISR:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0076                     ?_I2C1_ISR:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0076                     ?_ADCC_ThresholdISR:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0076                     ??_ADCC_ThresholdISR:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0076                     ?_TMR0_DefaultInterruptHandler:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0076                     ??_TMR0_DefaultInterruptHandler:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0076                     ?_I2C1_Stop:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0076                     ??_I2C1_Stop:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0076                     ?_I2C1_FunctionComplete:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0076                     ??_I2C1_FunctionComplete:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0076                     ?_ADCC_DefaultInterruptHandler:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0076                     ??_ADCC_DefaultInterruptHandler:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0076                     ?_CLOCK_init:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0076                     ?_DMX_ISR:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0076                     ??_DMX_ISR:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0076                     ?_TM1650_init:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0076                     ?_BUTTONS_init:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0076                     ?_initLED:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0076                     ?_BEAT_init:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0076                     ?_MENU_task:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0076                     ?_DMX_task:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0076                     ?_BUTTONS_task:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0076                     ?_CLOCK_timerCallback:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0076                     ??_CLOCK_timerCallback:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0076                     ?_TM1650_enable:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0076                     ?_numControl_resetTimer:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0076                     ?_EUSART1_Initialize:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0076                     ?_SYSTEM_Initialize:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0076                     ?_INTERRUPT_InterruptManager:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0076                     ?_ADCC_StartConversion:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0076                     ?_main:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0076                     ?_TM1650_isEnabled:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0076                     ?_adcThresholdHandler:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0076                     ??_adcThresholdHandler:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0076                     ?_BEAT_detected:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0076                     ?_BEAT_task:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0076                     ?_isDMXOn:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0076                     ?_fadeColor:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0076                     ?_LED_DMX:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0076                     ?_LED_Beat:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0076                     ?_menuButtons:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0076                     ?_cycleColors:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0076                     ?_pulseColors:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400                           
  7401                           ; 1 bytes @ 0x0
  7402  0076                     	ds	1
  7403  0077                     ??_EUSART1_Receive_ISR:	
  7404  0077                     ??_EUSART1_DefaultErrorHandler:	
  7405                           ; 1 bytes @ 0x1
  7406                           
  7407  0077                     I2C1_Stop@completion_code:	
  7408                           ; 1 bytes @ 0x1
  7409                           
  7410                           
  7411                           ; 1 bytes @ 0x1
  7412  0077                     	ds	1
  7413  0078                     ??_I2C1_ISR:	
  7414                           
  7415                           ; 1 bytes @ 0x2
  7416  0078                     	ds	4
  7417  007C                     ??_INTERRUPT_InterruptManager:	
  7418                           
  7419                           	psect	cstackBANK0
  7420  0020                     __pcstackBANK0:	
  7421                           ; 1 bytes @ 0x6
  7422                           
  7423  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7424  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0020                     ?_EUSART1_SetErrorHandler:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0020                     ??_PMD_Initialize:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0020                     ??_PIN_MANAGER_Initialize:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0020                     ??_OSCILLATOR_Initialize:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0020                     ??_I2C1_Initialize:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0020                     ?_TMR0_SetInterruptHandler:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0020                     ?_I2C1_MasterTRBInsert:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0020                     ??_initLED:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0020                     ??_ADCC_StartConversion:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469  0020                     ?_ADCC_SetUpperThreshold:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472  0020                     ??_TM1650_isEnabled:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475  0020                     ?_init:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0020                     ??_BEAT_detected:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0020                     ??_isDMXOn:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0020                     ?_LED_setColor:	
  7485                           ; 1 bytes @ 0x0
  7486                           
  7487  0020                     ?__Umul8_16:	
  7488                           ; 1 bytes @ 0x0
  7489                           
  7490  0020                     ?_CLOCK_getTime:	
  7491                           ; 2 bytes @ 0x0
  7492                           
  7493  0020                     ?_BUTTONS_isClicked:	
  7494                           ; 2 bytes @ 0x0
  7495                           
  7496  0020                     ?___awdiv:	
  7497                           ; 2 bytes @ 0x0
  7498                           
  7499  0020                     ?___lwdiv:	
  7500                           ; 2 bytes @ 0x0
  7501                           
  7502  0020                     ?___lwmod:	
  7503                           ; 2 bytes @ 0x0
  7504                           
  7505  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7506                           ; 2 bytes @ 0x0
  7507                           
  7508  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511  0020                     ADCC_StartConversion@channel:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514  0020                     LED_setColor@green:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517  0020                     __Umul8_16@multiplicand:	
  7518                           ; 1 bytes @ 0x0
  7519                           
  7520  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7521                           ; 1 bytes @ 0x0
  7522                           
  7523  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7524                           ; 2 bytes @ 0x0
  7525                           
  7526  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7527                           ; 2 bytes @ 0x0
  7528                           
  7529  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7530                           ; 2 bytes @ 0x0
  7531                           
  7532  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7533                           ; 2 bytes @ 0x0
  7534                           
  7535  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7536                           ; 2 bytes @ 0x0
  7537                           
  7538  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7539                           ; 2 bytes @ 0x0
  7540                           
  7541  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7542                           ; 2 bytes @ 0x0
  7543                           
  7544  0020                     init@port:	
  7545                           ; 2 bytes @ 0x0
  7546                           
  7547  0020                     ___awdiv@divisor:	
  7548                           ; 2 bytes @ 0x0
  7549                           
  7550  0020                     ___lwdiv@divisor:	
  7551                           ; 2 bytes @ 0x0
  7552                           
  7553  0020                     ___lwmod@divisor:	
  7554                           ; 2 bytes @ 0x0
  7555                           
  7556                           
  7557                           ; 2 bytes @ 0x0
  7558  0020                     	ds	1
  7559  0021                     I2C1_MasterTRBInsert@pflag:	
  7560  0021                     I2C1_MasterWriteTRBBuild@length:	
  7561                           ; 1 bytes @ 0x1
  7562                           
  7563  0021                     LED_setColor@white:	
  7564                           ; 1 bytes @ 0x1
  7565                           
  7566                           
  7567                           ; 1 bytes @ 0x1
  7568  0021                     	ds	1
  7569  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7570  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7571                           ; 1 bytes @ 0x2
  7572                           
  7573  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7574                           ; 1 bytes @ 0x2
  7575                           
  7576  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7577                           ; 1 bytes @ 0x2
  7578                           
  7579  0022                     ??_EUSART1_SetErrorHandler:	
  7580                           ; 1 bytes @ 0x2
  7581                           
  7582  0022                     ??_ADCC_Initialize:	
  7583                           ; 1 bytes @ 0x2
  7584                           
  7585  0022                     ??_TMR0_Initialize:	
  7586                           ; 1 bytes @ 0x2
  7587                           
  7588  0022                     ??_TMR0_SetInterruptHandler:	
  7589                           ; 1 bytes @ 0x2
  7590                           
  7591  0022                     ??_I2C1_MasterTRBInsert:	
  7592                           ; 1 bytes @ 0x2
  7593                           
  7594  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7595                           ; 1 bytes @ 0x2
  7596                           
  7597  0022                     ??_CLOCK_init:	
  7598                           ; 1 bytes @ 0x2
  7599                           
  7600  0022                     ??_BEAT_init:	
  7601                           ; 1 bytes @ 0x2
  7602                           
  7603  0022                     ??_DMX_task:	
  7604                           ; 1 bytes @ 0x2
  7605                           
  7606  0022                     ??_BUTTONS_task:	
  7607                           ; 1 bytes @ 0x2
  7608                           
  7609  0022                     ??_numControl_resetTimer:	
  7610                           ; 1 bytes @ 0x2
  7611                           
  7612  0022                     ??__Umul8_16:	
  7613                           ; 1 bytes @ 0x2
  7614                           
  7615  0022                     ??_EUSART1_Initialize:	
  7616                           ; 1 bytes @ 0x2
  7617                           
  7618  0022                     ??_ADCC_SetUpperThreshold:	
  7619                           ; 1 bytes @ 0x2
  7620                           
  7621  0022                     ??_CLOCK_getTime:	
  7622                           ; 1 bytes @ 0x2
  7623                           
  7624  0022                     init@pin:	
  7625                           ; 1 bytes @ 0x2
  7626                           
  7627  0022                     LED_setColor@blue:	
  7628                           ; 1 bytes @ 0x2
  7629                           
  7630  0022                     I2C1_MasterWriteTRBBuild@address:	
  7631                           ; 1 bytes @ 0x2
  7632                           
  7633  0022                     ___awdiv@dividend:	
  7634                           ; 2 bytes @ 0x2
  7635                           
  7636  0022                     ___lwdiv@dividend:	
  7637                           ; 2 bytes @ 0x2
  7638                           
  7639  0022                     ___lwmod@dividend:	
  7640                           ; 2 bytes @ 0x2
  7641                           
  7642                           
  7643                           ; 2 bytes @ 0x2
  7644  0022                     	ds	1
  7645  0023                     ??_SYSTEM_Initialize:	
  7646  0023                     ??_init:	
  7647                           ; 1 bytes @ 0x3
  7648                           
  7649  0023                     ??_BUTTONS_isClicked:	
  7650                           ; 1 bytes @ 0x3
  7651                           
  7652  0023                     ??_LED_setColor:	
  7653                           ; 1 bytes @ 0x3
  7654                           
  7655  0023                     I2C1_MasterTRBInsert@count:	
  7656                           ; 1 bytes @ 0x3
  7657                           
  7658  0023                     BUTTONS_isClicked@button:	
  7659                           ; 1 bytes @ 0x3
  7660                           
  7661                           
  7662                           ; 1 bytes @ 0x3
  7663  0023                     	ds	1
  7664  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7665  0024                     ??_menuButtons:	
  7666                           ; 1 bytes @ 0x4
  7667                           
  7668  0024                     ??___awdiv:	
  7669                           ; 1 bytes @ 0x4
  7670                           
  7671  0024                     ??___lwdiv:	
  7672                           ; 1 bytes @ 0x4
  7673                           
  7674  0024                     ??___lwmod:	
  7675                           ; 1 bytes @ 0x4
  7676                           
  7677  0024                     init@btn:	
  7678                           ; 1 bytes @ 0x4
  7679                           
  7680  0024                     DMX_task@time:	
  7681                           ; 1 bytes @ 0x4
  7682                           
  7683  0024                     __Umul8_16@product:	
  7684                           ; 2 bytes @ 0x4
  7685                           
  7686                           
  7687                           ; 2 bytes @ 0x4
  7688  0024                     	ds	1
  7689  0025                     ??_BUTTONS_init:	
  7690  0025                     BUTTONS_task@i:	
  7691                           ; 1 bytes @ 0x5
  7692                           
  7693  0025                     ___awdiv@counter:	
  7694                           ; 1 bytes @ 0x5
  7695                           
  7696  0025                     ___lwdiv@counter:	
  7697                           ; 1 bytes @ 0x5
  7698                           
  7699  0025                     ___lwmod@counter:	
  7700                           ; 1 bytes @ 0x5
  7701                           
  7702                           
  7703                           ; 1 bytes @ 0x5
  7704  0025                     	ds	1
  7705  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7706  0026                     ___awdiv@sign:	
  7707                           ; 1 bytes @ 0x6
  7708                           
  7709  0026                     BUTTONS_task@time:	
  7710                           ; 1 bytes @ 0x6
  7711                           
  7712  0026                     ___lwdiv@quotient:	
  7713                           ; 2 bytes @ 0x6
  7714                           
  7715  0026                     __Umul8_16@word_mpld:	
  7716                           ; 2 bytes @ 0x6
  7717                           
  7718                           
  7719                           ; 2 bytes @ 0x6
  7720  0026                     	ds	1
  7721  0027                     ?_I2C1_MasterWrite:	
  7722  0027                     I2C1_MasterWrite@length:	
  7723                           ; 1 bytes @ 0x7
  7724                           
  7725  0027                     LED_setColor@lo1:	
  7726                           ; 1 bytes @ 0x7
  7727                           
  7728  0027                     ___awdiv@quotient:	
  7729                           ; 2 bytes @ 0x7
  7730                           
  7731                           
  7732                           ; 2 bytes @ 0x7
  7733  0027                     	ds	1
  7734  0028                     ??_BEAT_task:	
  7735  0028                     BUTTONS_task@btn:	
  7736                           ; 1 bytes @ 0x8
  7737                           
  7738  0028                     __Umul8_16@multiplier:	
  7739                           ; 1 bytes @ 0x8
  7740                           
  7741  0028                     I2C1_MasterWrite@address:	
  7742                           ; 1 bytes @ 0x8
  7743                           
  7744                           
  7745                           ; 2 bytes @ 0x8
  7746  0028                     	ds	1
  7747  0029                     ?___fladd:	
  7748  0029                     ?___xxtofl:	
  7749                           ; 4 bytes @ 0x9
  7750                           
  7751  0029                     ___fladd@b:	
  7752                           ; 4 bytes @ 0x9
  7753                           
  7754  0029                     ___xxtofl@val:	
  7755                           ; 4 bytes @ 0x9
  7756                           
  7757                           
  7758                           ; 4 bytes @ 0x9
  7759  0029                     	ds	1
  7760  002A                     I2C1_MasterWrite@pflag:	
  7761  002A                     BEAT_task@offset:	
  7762                           ; 1 bytes @ 0xA
  7763                           
  7764                           
  7765                           ; 2 bytes @ 0xA
  7766  002A                     	ds	1
  7767  002B                     ??_I2C1_MasterWrite:	
  7768  002B                     LED_setColor@lo2:	
  7769                           ; 1 bytes @ 0xB
  7770                           
  7771                           
  7772                           ; 2 bytes @ 0xB
  7773  002B                     	ds	2
  7774  002D                     ??___xxtofl:	
  7775  002D                     I2C1_MasterWrite@pdata:	
  7776                           ; 1 bytes @ 0xD
  7777                           
  7778  002D                     ___fladd@a:	
  7779                           ; 1 bytes @ 0xD
  7780                           
  7781                           
  7782                           ; 4 bytes @ 0xD
  7783  002D                     	ds	1
  7784  002E                     ?_writeData:	
  7785  002E                     writeData@data:	
  7786                           ; 1 bytes @ 0xE
  7787                           
  7788                           
  7789                           ; 1 bytes @ 0xE
  7790  002E                     	ds	1
  7791  002F                     ??_writeData:	
  7792  002F                     LED_setColor@lo3:	
  7793                           ; 1 bytes @ 0xF
  7794                           
  7795                           
  7796                           ; 2 bytes @ 0xF
  7797  002F                     	ds	2
  7798  0031                     ??___fladd:	
  7799  0031                     ___xxtofl@sign:	
  7800                           ; 1 bytes @ 0x11
  7801                           
  7802                           
  7803                           ; 1 bytes @ 0x11
  7804  0031                     	ds	1
  7805  0032                     writeData@address:	
  7806  0032                     ___xxtofl@exp:	
  7807                           ; 1 bytes @ 0x12
  7808                           
  7809                           
  7810                           ; 1 bytes @ 0x12
  7811  0032                     	ds	1
  7812  0033                     writeData@status:	
  7813  0033                     LED_setColor@lo4:	
  7814                           ; 1 bytes @ 0x13
  7815                           
  7816  0033                     ___xxtofl@arg:	
  7817                           ; 2 bytes @ 0x13
  7818                           
  7819                           
  7820                           ; 4 bytes @ 0x13
  7821  0033                     	ds	1
  7822  0034                     ??_TM1650_enable:	
  7823  0034                     ?_TM1650_setDigit:	
  7824                           ; 1 bytes @ 0x14
  7825                           
  7826  0034                     TM1650_setDigit@data:	
  7827                           ; 1 bytes @ 0x14
  7828                           
  7829  0034                     TM1650_enable@enable:	
  7830                           ; 1 bytes @ 0x14
  7831                           
  7832                           
  7833                           ; 1 bytes @ 0x14
  7834  0034                     	ds	1
  7835  0035                     ??_TM1650_init:	
  7836  0035                     LED_setColor@red:	
  7837                           ; 1 bytes @ 0x15
  7838                           
  7839  0035                     TM1650_setDigit@dp:	
  7840                           ; 1 bytes @ 0x15
  7841                           
  7842                           
  7843                           ; 2 bytes @ 0x15
  7844  0035                     	ds	1
  7845  0036                     ??_LED_DMX:	
  7846                           
  7847                           ; 1 bytes @ 0x16
  7848  0036                     	ds	1
  7849  0037                     ?___fleq:	
  7850  0037                     ??_TM1650_setDigit:	
  7851                           ; 1 bit 
  7852                           
  7853  0037                     ?___fldiv:	
  7854                           ; 1 bytes @ 0x17
  7855                           
  7856  0037                     ___fleq@ff1:	
  7857                           ; 4 bytes @ 0x17
  7858                           
  7859  0037                     ___fldiv@a:	
  7860                           ; 4 bytes @ 0x17
  7861                           
  7862                           
  7863                           ; 4 bytes @ 0x17
  7864  0037                     	ds	2
  7865  0039                     ___fladd@signs:	
  7866                           
  7867                           ; 1 bytes @ 0x19
  7868  0039                     	ds	1
  7869  003A                     TM1650_setDigit@digit:	
  7870  003A                     ___fladd@aexp:	
  7871                           ; 1 bytes @ 0x1A
  7872                           
  7873                           
  7874                           ; 1 bytes @ 0x1A
  7875  003A                     	ds	1
  7876  003B                     ?_TM1650_fastPrintNum:	
  7877  003B                     ___fladd@bexp:	
  7878                           ; 1 bytes @ 0x1B
  7879                           
  7880  003B                     TM1650_fastPrintNum@num:	
  7881                           ; 1 bytes @ 0x1B
  7882                           
  7883  003B                     ___fleq@ff2:	
  7884                           ; 2 bytes @ 0x1B
  7885                           
  7886  003B                     ___fldiv@b:	
  7887                           ; 4 bytes @ 0x1B
  7888                           
  7889                           
  7890                           ; 4 bytes @ 0x1B
  7891  003B                     	ds	1
  7892  003C                     ___fladd@grs:	
  7893                           
  7894                           ; 1 bytes @ 0x1C
  7895  003C                     	ds	1
  7896  003D                     ??_TM1650_fastPrintNum:	
  7897  003D                     ?___flmul:	
  7898                           ; 1 bytes @ 0x1D
  7899                           
  7900  003D                     ___flmul@b:	
  7901                           ; 4 bytes @ 0x1D
  7902                           
  7903                           
  7904                           ; 4 bytes @ 0x1D
  7905  003D                     	ds	1
  7906  003E                     TM1650_fastPrintNum@numWrite:	
  7907                           
  7908                           ; 2 bytes @ 0x1E
  7909  003E                     	ds	1
  7910  003F                     ??___fleq:	
  7911  003F                     ??___fldiv:	
  7912                           ; 1 bytes @ 0x1F
  7913                           
  7914                           
  7915                           ; 1 bytes @ 0x1F
  7916  003F                     	ds	1
  7917  0040                     TM1650_fastPrintNum@i:	
  7918                           
  7919                           ; 2 bytes @ 0x20
  7920  0040                     	ds	1
  7921  0041                     ___flmul@a:	
  7922                           
  7923                           ; 4 bytes @ 0x21
  7924  0041                     	ds	1
  7925  0042                     ?_increment:	
  7926  0042                     ?_decrement:	
  7927                           ; 1 bytes @ 0x22
  7928                           
  7929  0042                     increment@val:	
  7930                           ; 1 bytes @ 0x22
  7931                           
  7932  0042                     decrement@val:	
  7933                           ; 2 bytes @ 0x22
  7934                           
  7935                           
  7936                           ; 2 bytes @ 0x22
  7937  0042                     	ds	2
  7938  0044                     increment@max:	
  7939  0044                     decrement@max:	
  7940                           ; 2 bytes @ 0x24
  7941                           
  7942  0044                     ___fldiv@rem:	
  7943                           ; 2 bytes @ 0x24
  7944                           
  7945                           
  7946                           ; 4 bytes @ 0x24
  7947  0044                     	ds	1
  7948  0045                     ??___flmul:	
  7949                           
  7950                           ; 1 bytes @ 0x25
  7951  0045                     	ds	1
  7952  0046                     increment@min:	
  7953  0046                     decrement@min:	
  7954                           ; 2 bytes @ 0x26
  7955                           
  7956                           
  7957                           ; 2 bytes @ 0x26
  7958  0046                     	ds	2
  7959  0048                     ___fldiv@sign:	
  7960  0048                     increment@increm:	
  7961                           ; 1 bytes @ 0x28
  7962                           
  7963  0048                     decrement@increm:	
  7964                           ; 2 bytes @ 0x28
  7965                           
  7966                           
  7967                           ; 2 bytes @ 0x28
  7968  0048                     	ds	1
  7969  0049                     ___fldiv@new_exp:	
  7970                           
  7971                           ; 2 bytes @ 0x29
  7972  0049                     	ds	1
  7973  004A                     ??_increment:	
  7974  004A                     ??_decrement:	
  7975                           ; 1 bytes @ 0x2A
  7976                           
  7977  004A                     ___flmul@sign:	
  7978                           ; 1 bytes @ 0x2A
  7979                           
  7980                           
  7981                           ; 1 bytes @ 0x2A
  7982  004A                     	ds	1
  7983  004B                     ___flmul@aexp:	
  7984  004B                     ___fldiv@grs:	
  7985                           ; 1 bytes @ 0x2B
  7986                           
  7987                           
  7988                           ; 4 bytes @ 0x2B
  7989  004B                     	ds	1
  7990  004C                     ___flmul@grs:	
  7991                           
  7992                           ; 4 bytes @ 0x2C
  7993  004C                     	ds	1
  7994  004D                     ?_numControl_Set:	
  7995  004D                     numControl_Set@val:	
  7996                           ; 1 bytes @ 0x2D
  7997                           
  7998                           
  7999                           ; 2 bytes @ 0x2D
  8000  004D                     	ds	2
  8001  004F                     ___fldiv@bexp:	
  8002  004F                     numControl_Set@max:	
  8003                           ; 1 bytes @ 0x2F
  8004                           
  8005                           
  8006                           ; 2 bytes @ 0x2F
  8007  004F                     	ds	1
  8008  0050                     ___fldiv@aexp:	
  8009  0050                     ___flmul@bexp:	
  8010                           ; 1 bytes @ 0x30
  8011                           
  8012                           
  8013                           ; 1 bytes @ 0x30
  8014  0050                     	ds	1
  8015  0051                     numControl_Set@min:	
  8016  0051                     ___flmul@prod:	
  8017                           ; 2 bytes @ 0x31
  8018                           
  8019                           
  8020                           ; 4 bytes @ 0x31
  8021  0051                     	ds	2
  8022  0053                     numControl_Set@increm:	
  8023                           
  8024                           ; 2 bytes @ 0x33
  8025  0053                     	ds	2
  8026  0055                     ??_numControl_Set:	
  8027  0055                     ___flmul@temp:	
  8028                           ; 1 bytes @ 0x35
  8029                           
  8030                           
  8031                           ; 2 bytes @ 0x35
  8032  0055                     	ds	2
  8033  0057                     ?___flge:	
  8034  0057                     ?___flsub:	
  8035                           ; 1 bit 
  8036                           
  8037  0057                     numControl_Set@time:	
  8038                           ; 4 bytes @ 0x37
  8039                           
  8040  0057                     ___flge@ff1:	
  8041                           ; 2 bytes @ 0x37
  8042                           
  8043  0057                     ___flsub@a:	
  8044                           ; 4 bytes @ 0x37
  8045                           
  8046                           
  8047                           ; 4 bytes @ 0x37
  8048  0057                     	ds	4
  8049  005B                     ___flge@ff2:	
  8050  005B                     ___flsub@b:	
  8051                           ; 4 bytes @ 0x3B
  8052                           
  8053                           
  8054                           ; 4 bytes @ 0x3B
  8055  005B                     	ds	4
  8056  005F                     ??___flge:	
  8057  005F                     ??___flsub:	
  8058                           ; 1 bytes @ 0x3F
  8059                           
  8060                           
  8061                           ; 1 bytes @ 0x3F
  8062  005F                     	ds	4
  8063  0063                     ?_HueToRGB:	
  8064  0063                     HueToRGB@v1:	
  8065                           ; 4 bytes @ 0x43
  8066                           
  8067                           
  8068                           ; 4 bytes @ 0x43
  8069  0063                     	ds	4
  8070  0067                     HueToRGB@v2:	
  8071                           
  8072                           ; 4 bytes @ 0x47
  8073  0067                     	ds	4
  8074  006B                     HueToRGB@vH:	
  8075                           
  8076                           ; 4 bytes @ 0x4B
  8077  006B                     	ds	4
  8078  006F                     ??_HueToRGB:	
  8079  006F                     ??_LED_Beat:	
  8080                           ; 1 bytes @ 0x4F
  8081                           
  8082  006F                     ??_pulseColors:	
  8083                           ; 1 bytes @ 0x4F
  8084                           
  8085                           
  8086                           ; 1 bytes @ 0x4F
  8087  006F                     	ds	1
  8088                           
  8089                           	psect	maintext
  8090  117E                     __pmaintext:	
  8091 ;;
  8092 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8093 ;;
  8094 ;; *************** function _main *****************
  8095 ;; Defined at:
  8096 ;;		line 16 in file "main.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;		None
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : B3F/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8112 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8113 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8114 ;;Total ram usage:        2 bytes
  8115 ;; Hardware stack levels required when called:   14
  8116 ;; This function calls:
  8117 ;;		_BEAT_init
  8118 ;;		_BUTTONS_init
  8119 ;;		_BUTTONS_task
  8120 ;;		_CLOCK_init
  8121 ;;		_DMX_task
  8122 ;;		_EUSART1_SetRxInterruptHandler
  8123 ;;		_MENU_task
  8124 ;;		_SYSTEM_Initialize
  8125 ;;		_TM1650_init
  8126 ;;		_initLED
  8127 ;; This function is called by:
  8128 ;;		Startup code after reset
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           
  8133                           ;psect for function _main
  8134  117E                     _main:	
  8135                           
  8136                           ;main.c: 18:     SYSTEM_Initialize();
  8137                           
  8138                           ;incstack = 0
  8139                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8140  117E  319E  2665  3191   	fcall	_SYSTEM_Initialize
  8141                           
  8142                           ;main.c: 19:     CLOCK_init();
  8143  1181  319D  2558  3191   	fcall	_CLOCK_init
  8144                           
  8145                           ;main.c: 20:     TRISB6 = 0;
  8146  1184  0140               	movlb	0	; select bank0
  8147  1185  1313               	bcf	19,6	;volatile
  8148                           
  8149                           ;main.c: 21:     LATB6 = 0;
  8150  1186  1319               	bcf	25,6	;volatile
  8151                           
  8152                           ;main.c: 22:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  8153  1187  30DC               	movlw	low _DMX_ISR
  8154  1188  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8155  1189  301F               	movlw	high _DMX_ISR
  8156  118A  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8157  118B  319D  25B1  3191   	fcall	_EUSART1_SetRxInterruptHandler
  8158                           
  8159                           ;main.c: 28:     (INTCONbits.GIE = 1);
  8160  118E  178B               	bsf	11,7	;volatile
  8161                           
  8162                           ;main.c: 31:     (INTCONbits.PEIE = 1);
  8163  118F  170B               	bsf	11,6	;volatile
  8164                           
  8165                           ;main.c: 38:      _delay((unsigned long)((500)*(32000000/4000.0)));
  8166  1190  3015               	movlw	21
  8167  1191  0143               	movlb	3	; select bank3
  8168  1192  00E7               	movwf	(??_main^(0+384)+1)
  8169  1193  304B               	movlw	75
  8170  1194  00E6               	movwf	??_main^(0+384)
  8171  1195  30BE               	movlw	190
  8172  1196                     u6907:	
  8173  1196  0B89               	decfsz	9,f
  8174  1197  2996               	goto	u6907
  8175  1198  0BE6               	decfsz	??_main^(0+384),f
  8176  1199  2996               	goto	u6907
  8177  119A  0BE7               	decfsz	(??_main^(0+384)+1),f
  8178  119B  2996               	goto	u6907
  8179  119C  0000               	nop
  8180                           
  8181                           ;main.c: 39:     TM1650_init();
  8182  119D  319D  2549  3191   	fcall	_TM1650_init
  8183                           
  8184                           ;main.c: 40:     BUTTONS_init();
  8185  11A0  3193  2334  3191   	fcall	_BUTTONS_init
  8186                           
  8187                           ;main.c: 41:     initLED();
  8188  11A3  3190  2033  3191   	fcall	_initLED
  8189                           
  8190                           ;main.c: 42:     BEAT_init();
  8191  11A6  319E  267A  3191   	fcall	_BEAT_init
  8192  11A9                     l6407:	
  8193                           
  8194                           ;main.c: 46:         MENU_task();
  8195  11A9  3188  2018  3191   	fcall	_MENU_task
  8196                           
  8197                           ;main.c: 47:         DMX_task();
  8198  11AC  3191  21E9  3191   	fcall	_DMX_task
  8199                           
  8200                           ;main.c: 48:         BUTTONS_task();
  8201  11AF  3197  272E  3191   	fcall	_BUTTONS_task
  8202  11B2  29A9               	goto	l6407
  8203  11B3                     __end_of_main:	
  8204                           
  8205                           	psect	text1
  8206  1033                     __ptext1:	
  8207 ;; *************** function _initLED *****************
  8208 ;; Defined at:
  8209 ;;		line 14 in file "led.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8227 ;;Total ram usage:        0 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; Hardware stack levels required when called:    4
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		_main
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           
  8238                           ;psect for function _initLED
  8239  1033                     _initLED:	
  8240                           
  8241                           ;led.c: 17:     TRISC7 = 0;
  8242                           
  8243                           ;incstack = 0
  8244                           ; Regs used in _initLED: [wreg+status,2+status,0]
  8245  1033  0140               	movlb	0	; select bank0
  8246  1034  1394               	bcf	20,7	;volatile
  8247                           
  8248                           ;led.c: 18:     TRISC6 = 0;
  8249  1035  1314               	bcf	20,6	;volatile
  8250                           
  8251                           ;led.c: 19:     TRISC4 = 0;
  8252  1036  1214               	bcf	20,4	;volatile
  8253                           
  8254                           ;led.c: 20:     TRISC3 = 0;
  8255  1037  1194               	bcf	20,3	;volatile
  8256                           
  8257                           ;led.c: 22:     T2CLKCON = 0x01;
  8258  1038  3001               	movlw	1
  8259  1039  0145               	movlb	5	; select bank5
  8260  103A  0090               	movwf	16	;volatile
  8261                           
  8262                           ;led.c: 23:     T2CONbits.ON = 1;
  8263  103B  178E               	bsf	14,7	;volatile
  8264                           
  8265                           ;led.c: 25:     CCP1CONbits.CCP1EN = 1;
  8266  103C  0146               	movlb	6	; select bank6
  8267  103D  178E               	bsf	14,7	;volatile
  8268                           
  8269                           ;led.c: 26:     CCP1CONbits.MODE = 0b1100;
  8270  103E  080E               	movf	14,w	;volatile
  8271  103F  39F0               	andlw	-16
  8272  1040  380C               	iorlw	12
  8273  1041  008E               	movwf	14	;volatile
  8274                           
  8275                           ;led.c: 27:     CCP2CONbits.CCP2EN = 1;
  8276  1042  1792               	bsf	18,7	;volatile
  8277                           
  8278                           ;led.c: 28:     CCP2CONbits.MODE = 0b1100;
  8279  1043  0812               	movf	18,w	;volatile
  8280  1044  39F0               	andlw	-16
  8281  1045  380C               	iorlw	12
  8282  1046  0092               	movwf	18	;volatile
  8283                           
  8284                           ;led.c: 29:     CCP3CONbits.CCP3EN = 1;
  8285  1047  1796               	bsf	22,7	;volatile
  8286                           
  8287                           ;led.c: 30:     CCP3CONbits.MODE = 0b1100;
  8288  1048  0816               	movf	22,w	;volatile
  8289  1049  39F0               	andlw	-16
  8290  104A  380C               	iorlw	12
  8291  104B  0096               	movwf	22	;volatile
  8292                           
  8293                           ;led.c: 31:     CCP4CONbits.CCP4EN = 1;
  8294  104C  179A               	bsf	26,7	;volatile
  8295                           
  8296                           ;led.c: 32:     CCP4CONbits.MODE = 0b1100;
  8297  104D  081A               	movf	26,w	;volatile
  8298  104E  39F0               	andlw	-16
  8299  104F  380C               	iorlw	12
  8300  1050  009A               	movwf	26	;volatile
  8301                           
  8302                           ;led.c: 35:     RC7PPS = 0x09;
  8303  1051  3009               	movlw	9
  8304  1052  017E               	movlb	62	; select bank62
  8305  1053  00A7               	movwf	39	;volatile
  8306                           
  8307                           ;led.c: 36:     RC6PPS = 0x0A;
  8308  1054  300A               	movlw	10
  8309  1055  00A6               	movwf	38	;volatile
  8310                           
  8311                           ;led.c: 37:     RC4PPS = 0x0B;
  8312  1056  300B               	movlw	11
  8313  1057  00A4               	movwf	36	;volatile
  8314                           
  8315                           ;led.c: 38:     RC3PPS = 0x0C;
  8316  1058  300C               	movlw	12
  8317  1059  00A3               	movwf	35	;volatile
  8318  105A  0008               	return
  8319  105B                     __end_of_initLED:	
  8320                           
  8321                           	psect	text2
  8322  1D49                     __ptext2:	
  8323 ;; *************** function _TM1650_init *****************
  8324 ;; Defined at:
  8325 ;;		line 28 in file "tm1650.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;		None
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;		None
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8343 ;;Total ram usage:        0 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; Hardware stack levels required when called:    9
  8346 ;; This function calls:
  8347 ;;		_TM1650_enable
  8348 ;; This function is called by:
  8349 ;;		_main
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           
  8354                           ;psect for function _TM1650_init
  8355  1D49                     _TM1650_init:	
  8356                           
  8357                           ;tm1650.c: 29:     TM1650_enable(1);
  8358                           
  8359                           ;incstack = 0
  8360                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8361  1D49  3001               	movlw	1
  8362  1D4A  319E  2650         	fcall	_TM1650_enable
  8363  1D4C  0008               	return
  8364  1D4D                     __end_of_TM1650_init:	
  8365                           
  8366                           	psect	text3
  8367  1E65                     __ptext3:	
  8368 ;; *************** function _SYSTEM_Initialize *****************
  8369 ;; Defined at:
  8370 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0, pclath, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:    6
  8391 ;; This function calls:
  8392 ;;		_ADCC_Initialize
  8393 ;;		_EUSART1_Initialize
  8394 ;;		_I2C1_Initialize
  8395 ;;		_OSCILLATOR_Initialize
  8396 ;;		_PIN_MANAGER_Initialize
  8397 ;;		_PMD_Initialize
  8398 ;;		_TMR0_Initialize
  8399 ;; This function is called by:
  8400 ;;		_main
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           
  8405                           ;psect for function _SYSTEM_Initialize
  8406  1E65                     _SYSTEM_Initialize:	
  8407                           
  8408                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8409                           
  8410                           ;incstack = 0
  8411                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8412  1E65  319D  25CC  319E   	fcall	_PMD_Initialize
  8413                           
  8414                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8415  1E68  3190  20B2  319E   	fcall	_PIN_MANAGER_Initialize
  8416                           
  8417                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8418  1E6B  319D  25C3  319E   	fcall	_OSCILLATOR_Initialize
  8419                           
  8420                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  8421  1E6E  319E  26E3  319E   	fcall	_I2C1_Initialize
  8422                           
  8423                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8424  1E71  3190  200D  319E   	fcall	_ADCC_Initialize
  8425                           
  8426                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  8427  1E74  319E  2628  319E   	fcall	_TMR0_Initialize
  8428                           
  8429                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  8430  1E77  3192  225C         	fcall	_EUSART1_Initialize
  8431  1E79  0008               	return
  8432  1E7A                     __end_of_SYSTEM_Initialize:	
  8433                           
  8434                           	psect	text4
  8435  1E28                     __ptext4:	
  8436 ;; *************** function _TMR0_Initialize *****************
  8437 ;; Defined at:
  8438 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;		None
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      void 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0, pclath, cstack
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8456 ;;Total ram usage:        0 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:    5
  8459 ;; This function calls:
  8460 ;;		_TMR0_SetInterruptHandler
  8461 ;; This function is called by:
  8462 ;;		_SYSTEM_Initialize
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           
  8467                           ;psect for function _TMR0_Initialize
  8468  1E28                     _TMR0_Initialize:	
  8469                           
  8470                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  8471                           
  8472                           ;incstack = 0
  8473                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8474  1E28  3045               	movlw	69
  8475  1E29  014B               	movlb	11	; select bank11
  8476  1E2A  009F               	movwf	31	;volatile
  8477                           
  8478                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8479  1E2B  30F9               	movlw	249
  8480  1E2C  009D               	movwf	29	;volatile
  8481                           
  8482                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8483  1E2D  019C               	clrf	28	;volatile
  8484                           
  8485                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8486  1E2E  014E               	movlb	14	; select bank14
  8487  1E2F  128C               	bcf	12,5	;volatile
  8488                           
  8489                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8490  1E30  1696               	bsf	22,5	;volatile
  8491                           
  8492                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8493  1E31  3034               	movlw	low _TMR0_DefaultInterruptHandler
  8494  1E32  0140               	movlb	0	; select bank0
  8495  1E33  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8496  1E34  301D               	movlw	high _TMR0_DefaultInterruptHandler
  8497  1E35  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8498  1E36  319D  2584         	fcall	_TMR0_SetInterruptHandler
  8499                           
  8500                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8501  1E38  3080               	movlw	128
  8502  1E39  014B               	movlb	11	; select bank11
  8503  1E3A  009E               	movwf	30	;volatile
  8504  1E3B  0008               	return
  8505  1E3C                     __end_of_TMR0_Initialize:	
  8506                           
  8507                           	psect	text5
  8508  1DCC                     __ptext5:	
  8509 ;; *************** function _PMD_Initialize *****************
  8510 ;; Defined at:
  8511 ;;		line 75 in file "mcc_generated_files/mcc.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;		None
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;		None
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		status,2
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8529 ;;Total ram usage:        0 bytes
  8530 ;; Hardware stack levels used:    1
  8531 ;; Hardware stack levels required when called:    4
  8532 ;; This function calls:
  8533 ;;		Nothing
  8534 ;; This function is called by:
  8535 ;;		_SYSTEM_Initialize
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           
  8540                           ;psect for function _PMD_Initialize
  8541  1DCC                     _PMD_Initialize:	
  8542                           
  8543                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  8544                           
  8545                           ;incstack = 0
  8546                           ; Regs used in _PMD_Initialize: [status,2]
  8547  1DCC  014F               	movlb	15	; select bank15
  8548  1DCD  0196               	clrf	22	;volatile
  8549                           
  8550                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  8551  1DCE  0197               	clrf	23	;volatile
  8552                           
  8553                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  8554  1DCF  0198               	clrf	24	;volatile
  8555                           
  8556                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  8557  1DD0  0199               	clrf	25	;volatile
  8558                           
  8559                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  8560  1DD1  019A               	clrf	26	;volatile
  8561                           
  8562                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  8563  1DD2  019B               	clrf	27	;volatile
  8564                           
  8565                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  8566  1DD3  019C               	clrf	28	;volatile
  8567                           
  8568                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  8569  1DD4  019D               	clrf	29	;volatile
  8570  1DD5  0008               	return
  8571  1DD6                     __end_of_PMD_Initialize:	
  8572                           
  8573                           	psect	text6
  8574  10B2                     __ptext6:	
  8575 ;; *************** function _PIN_MANAGER_Initialize *****************
  8576 ;; Defined at:
  8577 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;		None
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg, status,2
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8595 ;;Total ram usage:        0 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:    4
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_SYSTEM_Initialize
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           
  8606                           ;psect for function _PIN_MANAGER_Initialize
  8607  10B2                     _PIN_MANAGER_Initialize:	
  8608                           
  8609                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8610                           
  8611                           ;incstack = 0
  8612                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8613  10B2  0140               	movlb	0	; select bank0
  8614  10B3  0198               	clrf	24	;volatile
  8615                           
  8616                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8617  10B4  0199               	clrf	25	;volatile
  8618                           
  8619                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8620  10B5  019A               	clrf	26	;volatile
  8621                           
  8622                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8623  10B6  303F               	movlw	63
  8624  10B7  0092               	movwf	18	;volatile
  8625                           
  8626                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  8627  10B8  30F0               	movlw	240
  8628  10B9  0093               	movwf	19	;volatile
  8629                           
  8630                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8631  10BA  30FF               	movlw	255
  8632  10BB  0094               	movwf	20	;volatile
  8633                           
  8634                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8635  10BC  30F8               	movlw	248
  8636  10BD  017E               	movlb	62	; select bank62
  8637  10BE  00CE               	movwf	78	;volatile
  8638                           
  8639                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8640  10BF  30E0               	movlw	224
  8641  10C0  00C3               	movwf	67	;volatile
  8642                           
  8643                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8644  10C1  3003               	movlw	3
  8645  10C2  00B8               	movwf	56	;volatile
  8646                           
  8647                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8648  10C3  01C4               	clrf	68	;volatile
  8649                           
  8650                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8651  10C4  3004               	movlw	4
  8652  10C5  00B9               	movwf	57	;volatile
  8653                           
  8654                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8655  10C6  3007               	movlw	7
  8656  10C7  00CF               	movwf	79	;volatile
  8657                           
  8658                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8659  10C8  01BA               	clrf	58	;volatile
  8660                           
  8661                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8662  10C9  01C5               	clrf	69	;volatile
  8663                           
  8664                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8665  10CA  01D0               	clrf	80	;volatile
  8666                           
  8667                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8668  10CB  3037               	movlw	55
  8669  10CC  00BB               	movwf	59	;volatile
  8670                           
  8671                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8672  10CD  30F0               	movlw	240
  8673  10CE  00C6               	movwf	70	;volatile
  8674                           
  8675                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8676  10CF  30FF               	movlw	255
  8677  10D0  00D1               	movwf	81	;volatile
  8678                           
  8679                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8680  10D1  3005               	movlw	5
  8681  10D2  017D               	movlb	61	; select bank61
  8682  10D3  00C5               	movwf	69	;volatile
  8683                           
  8684                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8685  10D4  3014               	movlw	20
  8686  10D5  017E               	movlb	62	; select bank62
  8687  10D6  0094               	movwf	20	;volatile
  8688                           
  8689                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  8690  10D7  3013               	movlw	19
  8691  10D8  0095               	movwf	21	;volatile
  8692                           
  8693                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  8694  10D9  3004               	movlw	4
  8695  10DA  017D               	movlb	61	; select bank61
  8696  10DB  00C6               	movwf	70	;volatile
  8697                           
  8698                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  8699  10DC  300C               	movlw	12
  8700  10DD  00CB               	movwf	75	;volatile
  8701  10DE  0008               	return
  8702  10DF                     __end_of_PIN_MANAGER_Initialize:	
  8703                           
  8704                           	psect	text7
  8705  1DC3                     __ptext7:	
  8706 ;; *************** function _OSCILLATOR_Initialize *****************
  8707 ;; Defined at:
  8708 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;		None
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;		None
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8726 ;;Total ram usage:        0 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    4
  8729 ;; This function calls:
  8730 ;;		Nothing
  8731 ;; This function is called by:
  8732 ;;		_SYSTEM_Initialize
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           
  8737                           ;psect for function _OSCILLATOR_Initialize
  8738  1DC3                     _OSCILLATOR_Initialize:	
  8739                           
  8740                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8741                           
  8742                           ;incstack = 0
  8743                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8744  1DC3  3060               	movlw	96
  8745  1DC4  0151               	movlb	17	; select bank17
  8746  1DC5  008D               	movwf	13	;volatile
  8747                           
  8748                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8749  1DC6  018F               	clrf	15	;volatile
  8750                           
  8751                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8752  1DC7  0191               	clrf	17	;volatile
  8753                           
  8754                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8755  1DC8  3006               	movlw	6
  8756  1DC9  0093               	movwf	19	;volatile
  8757                           
  8758                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  8759  1DCA  0192               	clrf	18	;volatile
  8760  1DCB  0008               	return
  8761  1DCC                     __end_of_OSCILLATOR_Initialize:	
  8762                           
  8763                           	psect	text8
  8764  1EE3                     __ptext8:	
  8765 ;; *************** function _I2C1_Initialize *****************
  8766 ;; Defined at:
  8767 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;		None
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;		None
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  1    wreg      void 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8783 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8784 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8785 ;;Total ram usage:        1 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    4
  8788 ;; This function calls:
  8789 ;;		Nothing
  8790 ;; This function is called by:
  8791 ;;		_SYSTEM_Initialize
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           
  8796                           ;psect for function _I2C1_Initialize
  8797  1EE3                     _I2C1_Initialize:	
  8798                           
  8799                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8800                           
  8801                           ;incstack = 0
  8802                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8803  1EE3  305B               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8804  1EE4  0140               	movlb	0	; select bank0
  8805  1EE5  00A0               	movwf	??_I2C1_Initialize
  8806  1EE6  0820               	movf	??_I2C1_Initialize,w
  8807  1EE7  0142               	movlb	2	; select bank2
  8808  1EE8  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
  8809                           
  8810                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8811  1EE9  305B               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8812  1EEA  0140               	movlb	0	; select bank0
  8813  1EEB  00A0               	movwf	??_I2C1_Initialize
  8814  1EEC  0820               	movf	??_I2C1_Initialize,w
  8815  1EED  0142               	movlb	2	; select bank2
  8816  1EEE  00A0               	movwf	_i2c1_object^(0+256)
  8817                           
  8818                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8819  1EEF  14A2               	bsf	(_i2c1_object^(0+256)+2),1
  8820                           
  8821                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8822  1EF0  1022               	bcf	(_i2c1_object^(0+256)+2),0
  8823                           
  8824                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8825  1EF1  01A4               	clrf	(_i2c1_object^(0+256)+4)
  8826                           
  8827                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8828  1EF2  0143               	movlb	3	; select bank3
  8829  1EF3  018F               	clrf	15	;volatile
  8830                           
  8831                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8832  1EF4  3028               	movlw	40
  8833  1EF5  0090               	movwf	16	;volatile
  8834                           
  8835                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8836  1EF6  0192               	clrf	18	;volatile
  8837                           
  8838                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  8839  1EF7  3050               	movlw	80
  8840  1EF8  008D               	movwf	13	;volatile
  8841                           
  8842                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8843  1EF9  014E               	movlb	14	; select bank14
  8844  1EFA  100F               	bcf	15,0	;volatile
  8845                           
  8846                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8847  1EFB  108F               	bcf	15,1	;volatile
  8848                           
  8849                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8850  1EFC  1419               	bsf	25,0	;volatile
  8851                           
  8852                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8853  1EFD  1499               	bsf	25,1	;volatile
  8854  1EFE  0008               	return
  8855  1EFF                     __end_of_I2C1_Initialize:	
  8856                           
  8857                           	psect	text9
  8858  125C                     __ptext9:	
  8859 ;; *************** function _EUSART1_Initialize *****************
  8860 ;; Defined at:
  8861 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;		None
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;		None
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2, status,0, pclath, cstack
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8877 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8878 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8879 ;;Total ram usage:        1 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:    5
  8882 ;; This function calls:
  8883 ;;		_EUSART1_SetErrorHandler
  8884 ;;		_EUSART1_SetFramingErrorHandler
  8885 ;;		_EUSART1_SetOverrunErrorHandler
  8886 ;;		_EUSART1_SetRxInterruptHandler
  8887 ;;		_EUSART1_SetTxInterruptHandler
  8888 ;; This function is called by:
  8889 ;;		_SYSTEM_Initialize
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           
  8894                           ;psect for function _EUSART1_Initialize
  8895  125C                     _EUSART1_Initialize:	
  8896                           
  8897                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8898                           
  8899                           ;incstack = 0
  8900                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8901  125C  014E               	movlb	14	; select bank14
  8902  125D  1299               	bcf	25,5	;volatile
  8903                           
  8904                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8905  125E  30B3               	movlw	low _EUSART1_Receive_ISR
  8906  125F  0140               	movlb	0	; select bank0
  8907  1260  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8908  1261  3011               	movlw	high _EUSART1_Receive_ISR
  8909  1262  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8910  1263  319D  25B1  3192   	fcall	_EUSART1_SetRxInterruptHandler
  8911                           
  8912                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8913  1266  014E               	movlb	14	; select bank14
  8914  1267  1219               	bcf	25,4	;volatile
  8915                           
  8916                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8917  1268  30AB               	movlw	low _EUSART1_Transmit_ISR
  8918  1269  0140               	movlb	0	; select bank0
  8919  126A  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8920  126B  301E               	movlw	high _EUSART1_Transmit_ISR
  8921  126C  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8922  126D  319D  25BA  3192   	fcall	_EUSART1_SetTxInterruptHandler
  8923                           
  8924                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8925  1270  3008               	movlw	8
  8926  1271  0142               	movlb	2	; select bank2
  8927  1272  009F               	movwf	31	;volatile
  8928                           
  8929                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8930  1273  3090               	movlw	144
  8931  1274  009D               	movwf	29	;volatile
  8932                           
  8933                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8934  1275  3004               	movlw	4
  8935  1276  009E               	movwf	30	;volatile
  8936                           
  8937                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8938  1277  301F               	movlw	31
  8939  1278  009B               	movwf	27	;volatile
  8940                           
  8941                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8942  1279  019C               	clrf	28	;volatile
  8943                           
  8944                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8945  127A  3033               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8946  127B  0140               	movlb	0	; select bank0
  8947  127C  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8948  127D  301D               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8949  127E  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8950  127F  319D  259F  3192   	fcall	_EUSART1_SetFramingErrorHandler
  8951                           
  8952                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8953  1282  3045               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8954  1283  0140               	movlb	0	; select bank0
  8955  1284  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8956  1285  301D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8957  1286  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8958  1287  319D  25A8  3192   	fcall	_EUSART1_SetOverrunErrorHandler
  8959                           
  8960                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8961  128A  3035               	movlw	low _EUSART1_DefaultErrorHandler
  8962  128B  0140               	movlb	0	; select bank0
  8963  128C  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8964  128D  301D               	movlw	high _EUSART1_DefaultErrorHandler
  8965  128E  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8966  128F  319D  2596         	fcall	_EUSART1_SetErrorHandler
  8967                           
  8968                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8969  1291  0142               	movlb	2	; select bank2
  8970  1292  01DA               	clrf	_eusart1RxLastError^(0+256)	;volatile
  8971                           
  8972                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8973  1293  01F3               	clrf	_eusart1TxHead	;volatile
  8974                           
  8975                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8976  1294  01F2               	clrf	_eusart1TxTail	;volatile
  8977                           
  8978                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8979  1295  3008               	movlw	8
  8980  1296  0140               	movlb	0	; select bank0
  8981  1297  00A2               	movwf	??_EUSART1_Initialize
  8982  1298  0822               	movf	??_EUSART1_Initialize,w
  8983  1299  0142               	movlb	2	; select bank2
  8984  129A  00EF               	movwf	_eusart1TxBufferRemaining^(0+256)	;volatile
  8985                           
  8986                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8987  129B  01F1               	clrf	_eusart1RxHead	;volatile
  8988                           
  8989                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8990  129C  01F0               	clrf	_eusart1RxTail	;volatile
  8991                           
  8992                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8993  129D  0141               	movlb	1	; select bank1
  8994  129E  01ED               	clrf	_eusart1RxCount^(0+128)	;volatile
  8995                           
  8996                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8997  129F  014E               	movlb	14	; select bank14
  8998  12A0  1699               	bsf	25,5	;volatile
  8999  12A1  0008               	return
  9000  12A2                     __end_of_EUSART1_Initialize:	
  9001                           
  9002                           	psect	text10
  9003  1DBA                     __ptext10:	
  9004 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9005 ;; Defined at:
  9006 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9009 ;;		 -> EUSART1_Transmit_ISR(1), 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		wreg
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9024 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9025 ;;Total ram usage:        2 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:    4
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_EUSART1_Initialize
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           
  9036                           ;psect for function _EUSART1_SetTxInterruptHandler
  9037  1DBA                     _EUSART1_SetTxInterruptHandler:	
  9038                           
  9039                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9040                           
  9041                           ;incstack = 0
  9042                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9043  1DBA  0140               	movlb	0	; select bank0
  9044  1DBB  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9045  1DBC  0142               	movlb	2	; select bank2
  9046  1DBD  00EE               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  9047  1DBE  0140               	movlb	0	; select bank0
  9048  1DBF  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9049  1DC0  0142               	movlb	2	; select bank2
  9050  1DC1  00ED               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  9051  1DC2  0008               	return
  9052  1DC3                     __end_of_EUSART1_SetTxInterruptHandler:	
  9053                           
  9054                           	psect	text11
  9055  1DB1                     __ptext11:	
  9056 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9057 ;; Defined at:
  9058 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9061 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;		None
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      void 
  9066 ;; Registers used:
  9067 ;;		wreg
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9073 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9076 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9077 ;;Total ram usage:        2 bytes
  9078 ;; Hardware stack levels used:    1
  9079 ;; Hardware stack levels required when called:    4
  9080 ;; This function calls:
  9081 ;;		Nothing
  9082 ;; This function is called by:
  9083 ;;		_EUSART1_Initialize
  9084 ;;		_main
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           
  9089                           ;psect for function _EUSART1_SetRxInterruptHandler
  9090  1DB1                     _EUSART1_SetRxInterruptHandler:	
  9091                           
  9092                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9093                           
  9094                           ;incstack = 0
  9095                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9096  1DB1  0140               	movlb	0	; select bank0
  9097  1DB2  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9098  1DB3  0143               	movlb	3	; select bank3
  9099  1DB4  00E5               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
  9100  1DB5  0140               	movlb	0	; select bank0
  9101  1DB6  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9102  1DB7  0143               	movlb	3	; select bank3
  9103  1DB8  00E4               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
  9104  1DB9  0008               	return
  9105  1DBA                     __end_of_EUSART1_SetRxInterruptHandler:	
  9106                           
  9107                           	psect	text12
  9108  1DA8                     __ptext12:	
  9109 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9110 ;; Defined at:
  9111 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9114 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;		None
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  1    wreg      void 
  9119 ;; Registers used:
  9120 ;;		wreg
  9121 ;; Tracked objects:
  9122 ;;		On entry : 0/0
  9123 ;;		On exit  : 0/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9129 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9130 ;;Total ram usage:        2 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:    4
  9133 ;; This function calls:
  9134 ;;		Nothing
  9135 ;; This function is called by:
  9136 ;;		_EUSART1_Initialize
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           
  9141                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9142  1DA8                     _EUSART1_SetOverrunErrorHandler:	
  9143                           
  9144                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  9145                           
  9146                           ;incstack = 0
  9147                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9148  1DA8  0140               	movlb	0	; select bank0
  9149  1DA9  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9150  1DAA  0143               	movlb	3	; select bank3
  9151  1DAB  00E1               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
  9152  1DAC  0140               	movlb	0	; select bank0
  9153  1DAD  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9154  1DAE  0143               	movlb	3	; select bank3
  9155  1DAF  00E0               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
  9156  1DB0  0008               	return
  9157  1DB1                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9158                           
  9159                           	psect	text13
  9160  1D9F                     __ptext13:	
  9161 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9162 ;; Defined at:
  9163 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9166 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;		None
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  1    wreg      void 
  9171 ;; Registers used:
  9172 ;;		wreg
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9178 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9182 ;;Total ram usage:        2 bytes
  9183 ;; Hardware stack levels used:    1
  9184 ;; Hardware stack levels required when called:    4
  9185 ;; This function calls:
  9186 ;;		Nothing
  9187 ;; This function is called by:
  9188 ;;		_EUSART1_Initialize
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           
  9193                           ;psect for function _EUSART1_SetFramingErrorHandler
  9194  1D9F                     _EUSART1_SetFramingErrorHandler:	
  9195                           
  9196                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  9197                           
  9198                           ;incstack = 0
  9199                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9200  1D9F  0140               	movlb	0	; select bank0
  9201  1DA0  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9202  1DA1  0143               	movlb	3	; select bank3
  9203  1DA2  00E3               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
  9204  1DA3  0140               	movlb	0	; select bank0
  9205  1DA4  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9206  1DA5  0143               	movlb	3	; select bank3
  9207  1DA6  00E2               	movwf	_EUSART1_FramingErrorHandler^(0+384)
  9208  1DA7  0008               	return
  9209  1DA8                     __end_of_EUSART1_SetFramingErrorHandler:	
  9210                           
  9211                           	psect	text14
  9212  1D96                     __ptext14:	
  9213 ;; *************** function _EUSART1_SetErrorHandler *****************
  9214 ;; Defined at:
  9215 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9218 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9230 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9233 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9234 ;;Total ram usage:        2 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    4
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		_EUSART1_Initialize
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function _EUSART1_SetErrorHandler
  9246  1D96                     _EUSART1_SetErrorHandler:	
  9247                           
  9248                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  9249                           
  9250                           ;incstack = 0
  9251                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9252  1D96  0140               	movlb	0	; select bank0
  9253  1D97  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9254  1D98  0143               	movlb	3	; select bank3
  9255  1D99  00DF               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
  9256  1D9A  0140               	movlb	0	; select bank0
  9257  1D9B  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9258  1D9C  0143               	movlb	3	; select bank3
  9259  1D9D  00DE               	movwf	_EUSART1_ErrorHandler^(0+384)
  9260  1D9E  0008               	return
  9261  1D9F                     __end_of_EUSART1_SetErrorHandler:	
  9262                           
  9263                           	psect	text15
  9264  100D                     __ptext15:	
  9265 ;; *************** function _ADCC_Initialize *****************
  9266 ;; Defined at:
  9267 ;;		line 64 in file "mcc_generated_files/adcc.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;		None
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      void 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0, pclath, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9285 ;;Total ram usage:        0 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    5
  9288 ;; This function calls:
  9289 ;;		_ADCC_SetADTIInterruptHandler
  9290 ;; This function is called by:
  9291 ;;		_SYSTEM_Initialize
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           
  9296                           ;psect for function _ADCC_Initialize
  9297  100D                     _ADCC_Initialize:	
  9298                           
  9299                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  9300                           
  9301                           ;incstack = 0
  9302                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9303  100D  0141               	movlb	1	; select bank1
  9304  100E  018C               	clrf	12	;volatile
  9305                           
  9306                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  9307  100F  018D               	clrf	13	;volatile
  9308                           
  9309                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  9310  1010  018E               	clrf	14	;volatile
  9311                           
  9312                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  9313  1011  018F               	clrf	15	;volatile
  9314                           
  9315                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  9316  1012  0192               	clrf	18	;volatile
  9317                           
  9318                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  9319  1013  0193               	clrf	19	;volatile
  9320                           
  9321                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  9322  1014  0198               	clrf	24	;volatile
  9323                           
  9324                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  9325  1015  019A               	clrf	26	;volatile
  9326                           
  9327                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  9328  1016  019F               	clrf	31	;volatile
  9329                           
  9330                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  9331  1017  0142               	movlb	2	; select bank2
  9332  1018  018C               	clrf	12	;volatile
  9333                           
  9334                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  9335  1019  018D               	clrf	13	;volatile
  9336                           
  9337                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  9338  101A  018E               	clrf	14	;volatile
  9339                           
  9340                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  9341  101B  018F               	clrf	15	;volatile
  9342                           
  9343                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  9344  101C  0190               	clrf	16	;volatile
  9345                           
  9346                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  9347  101D  0192               	clrf	18	;volatile
  9348                           
  9349                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  9350  101E  3054               	movlw	84
  9351  101F  0093               	movwf	19	;volatile
  9352                           
  9353                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  9354  1020  3056               	movlw	86
  9355  1021  0094               	movwf	20	;volatile
  9356                           
  9357                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  9358  1022  0195               	clrf	21	;volatile
  9359                           
  9360                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  9361  1023  0196               	clrf	22	;volatile
  9362                           
  9363                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  9364  1024  0197               	clrf	23	;volatile
  9365                           
  9366                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  9367  1025  0198               	clrf	24	;volatile
  9368                           
  9369                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  9370  1026  30D4               	movlw	212
  9371  1027  0091               	movwf	17	;volatile
  9372                           
  9373                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  9374  1028  014E               	movlb	14	; select bank14
  9375  1029  108D               	bcf	13,1	;volatile
  9376                           
  9377                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  9378  102A  1497               	bsf	23,1	;volatile
  9379                           
  9380                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  9381  102B  3032               	movlw	low _ADCC_DefaultInterruptHandler
  9382  102C  0140               	movlb	0	; select bank0
  9383  102D  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  9384  102E  301D               	movlw	high _ADCC_DefaultInterruptHandler
  9385  102F  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  9386  1030  319D  2560         	fcall	_ADCC_SetADTIInterruptHandler
  9387  1032  0008               	return
  9388  1033                     __end_of_ADCC_Initialize:	
  9389                           
  9390                           	psect	text16
  9391  0818                     __ptext16:	
  9392 ;; *************** function _MENU_task *****************
  9393 ;; Defined at:
  9394 ;;		line 78 in file "menu.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;		None
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;		None
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1    wreg      void 
  9401 ;; Registers used:
  9402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9410 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9411 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9412 ;;Total ram usage:        1 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:   13
  9415 ;; This function calls:
  9416 ;;		_BEAT_task
  9417 ;;		_LED_Beat
  9418 ;;		_LED_DMX
  9419 ;;		_TM1650_enable
  9420 ;;		_TM1650_setDigit
  9421 ;;		_cycleColors
  9422 ;;		_isDMXOn
  9423 ;;		_menuButtons
  9424 ;;		_numControl_Set
  9425 ;;		_pulseColors
  9426 ;; This function is called by:
  9427 ;;		_main
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           
  9432                           ;psect for function _MENU_task
  9433  0818                     _MENU_task:	
  9434                           
  9435                           ;menu.c: 79:     if(isDMXOn()) {
  9436                           
  9437                           ;incstack = 0
  9438                           ; Regs used in _MENU_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9439  0818  319D  253E  3188   	fcall	_isDMXOn
  9440  081B  3A00               	xorlw	0
  9441  081C  1903               	skipnz
  9442  081D  2835               	goto	l6265
  9443                           
  9444                           ;menu.c: 80:         LED_DMX();
  9445  081E  3192  22EB  3188   	fcall	_LED_DMX
  9446                           
  9447                           ;menu.c: 81:         numControl_Set(&address, 512, 1, 1);
  9448  0821  30EE               	movlw	low _address
  9449  0822  0140               	movlb	0	; select bank0
  9450  0823  00CD               	movwf	numControl_Set@val
  9451  0824  3000               	movlw	high _address
  9452  0825  00CE               	movwf	numControl_Set@val+1
  9453  0826  3000               	movlw	0
  9454  0827  00CF               	movwf	numControl_Set@max
  9455  0828  3002               	movlw	2
  9456  0829  00D0               	movwf	numControl_Set@max+1
  9457  082A  3001               	movlw	1
  9458  082B  00D1               	movwf	numControl_Set@min
  9459  082C  3000               	movlw	0
  9460  082D  00D2               	movwf	numControl_Set@min+1
  9461  082E  3001               	movlw	1
  9462  082F  00D3               	movwf	numControl_Set@increm
  9463  0830  3000               	movlw	0
  9464  0831  00D4               	movwf	numControl_Set@increm+1
  9465  0832  3196  2698         	fcall	_numControl_Set
  9466                           
  9467                           ;menu.c: 82:     } else {
  9468  0834  0008               	return
  9469  0835                     l6265:	
  9470                           
  9471                           ;menu.c: 83:         menuButtons();
  9472  0835  319F  271C  3188   	fcall	_menuButtons
  9473                           
  9474                           ;menu.c: 84:         if(currentState == 2) {
  9475  0838  3002               	movlw	2
  9476  0839  0142               	movlb	2	; select bank2
  9477  083A  0635               	xorwf	_currentState^(0+256),w
  9478  083B  0436               	iorwf	(_currentState+1)^(0+256),w
  9479  083C  1D03               	btfss	3,2
  9480  083D  2848               	goto	l6275
  9481                           
  9482                           ;menu.c: 85:             TM1650_enable(0);
  9483  083E  3000               	movlw	0
  9484  083F  319E  2650  3188   	fcall	_TM1650_enable
  9485                           
  9486                           ;menu.c: 86:             LED_Beat();
  9487  0842  319E  2604  3188   	fcall	_LED_Beat
  9488                           
  9489                           ;menu.c: 87:             BEAT_task();
  9490  0845  3188  20D0         	fcall	_BEAT_task
  9491                           
  9492                           ;menu.c: 88:         } else if(currentState == 1) {
  9493  0847  0008               	return
  9494  0848                     l6275:	
  9495  0848  0335               	decf	_currentState^(0+256),w
  9496  0849  0436               	iorwf	(_currentState+1)^(0+256),w
  9497  084A  1D03               	btfss	3,2
  9498  084B  288C               	goto	l6293
  9499                           
  9500                           ;menu.c: 89:             if(firstMsg) {
  9501  084C  0864               	movf	_firstMsg^(0+256),w
  9502  084D  1903               	btfsc	3,2
  9503  084E  2889               	goto	l6291
  9504                           
  9505                           ;menu.c: 90:                 TM1650_enable(1);
  9506  084F  3001               	movlw	1
  9507  0850  319E  2650  3188   	fcall	_TM1650_enable
  9508                           
  9509                           ;menu.c: 91:                 TM1650_setDigit(0, 'P', 0);
  9510  0853  3050               	movlw	80
  9511  0854  0141               	movlb	1	; select bank1
  9512  0855  00E8               	movwf	??_MENU_task^(0+128)
  9513  0856  0868               	movf	??_MENU_task^(0+128),w
  9514  0857  0140               	movlb	0	; select bank0
  9515  0858  00B4               	movwf	TM1650_setDigit@data
  9516  0859  3000               	movlw	0
  9517  085A  00B5               	movwf	TM1650_setDigit@dp
  9518  085B  00B6               	movwf	TM1650_setDigit@dp+1
  9519  085C  3000               	movlw	0
  9520  085D  319E  26C7  3188   	fcall	_TM1650_setDigit
  9521                           
  9522                           ;menu.c: 92:                 TM1650_setDigit(1, 'L', 0);
  9523  0860  304C               	movlw	76
  9524  0861  0141               	movlb	1	; select bank1
  9525  0862  00E8               	movwf	??_MENU_task^(0+128)
  9526  0863  0868               	movf	??_MENU_task^(0+128),w
  9527  0864  0140               	movlb	0	; select bank0
  9528  0865  00B4               	movwf	TM1650_setDigit@data
  9529  0866  3000               	movlw	0
  9530  0867  00B5               	movwf	TM1650_setDigit@dp
  9531  0868  00B6               	movwf	TM1650_setDigit@dp+1
  9532  0869  3001               	movlw	1
  9533  086A  319E  26C7  3188   	fcall	_TM1650_setDigit
  9534                           
  9535                           ;menu.c: 93:                 TM1650_setDigit(2, 'S', 0);
  9536  086D  3053               	movlw	83
  9537  086E  0141               	movlb	1	; select bank1
  9538  086F  00E8               	movwf	??_MENU_task^(0+128)
  9539  0870  0868               	movf	??_MENU_task^(0+128),w
  9540  0871  0140               	movlb	0	; select bank0
  9541  0872  00B4               	movwf	TM1650_setDigit@data
  9542  0873  3000               	movlw	0
  9543  0874  00B5               	movwf	TM1650_setDigit@dp
  9544  0875  00B6               	movwf	TM1650_setDigit@dp+1
  9545  0876  3002               	movlw	2
  9546  0877  319E  26C7  3188   	fcall	_TM1650_setDigit
  9547                           
  9548                           ;menu.c: 94:                 TM1650_setDigit(3, 'E', 0);
  9549  087A  3045               	movlw	69
  9550  087B  0141               	movlb	1	; select bank1
  9551  087C  00E8               	movwf	??_MENU_task^(0+128)
  9552  087D  0868               	movf	??_MENU_task^(0+128),w
  9553  087E  0140               	movlb	0	; select bank0
  9554  087F  00B4               	movwf	TM1650_setDigit@data
  9555  0880  3000               	movlw	0
  9556  0881  00B5               	movwf	TM1650_setDigit@dp
  9557  0882  00B6               	movwf	TM1650_setDigit@dp+1
  9558  0883  3003               	movlw	3
  9559  0884  319E  26C7  3188   	fcall	_TM1650_setDigit
  9560                           
  9561                           ;menu.c: 95:                 firstMsg = 0;
  9562  0887  0142               	movlb	2	; select bank2
  9563  0888  01E4               	clrf	_firstMsg^(0+256)
  9564  0889                     l6291:	
  9565                           
  9566                           ;menu.c: 97:             pulseColors();
  9567  0889  3189  21A9         	fcall	_pulseColors
  9568                           
  9569                           ;menu.c: 98:         } else if (currentState == 0) {
  9570  088B  0008               	return
  9571  088C                     l6293:	
  9572  088C  0835               	movf	_currentState^(0+256),w
  9573  088D  0436               	iorwf	(_currentState+1)^(0+256),w
  9574  088E  1D03               	btfss	3,2
  9575  088F  0008               	return
  9576                           
  9577                           ;menu.c: 99:             if(firstMsg) {
  9578  0890  0864               	movf	_firstMsg^(0+256),w
  9579  0891  1903               	btfsc	3,2
  9580  0892  28CD               	goto	l6309
  9581                           
  9582                           ;menu.c: 100:                 TM1650_enable(1);
  9583  0893  3001               	movlw	1
  9584  0894  319E  2650  3188   	fcall	_TM1650_enable
  9585                           
  9586                           ;menu.c: 101:                 TM1650_setDigit(0, 'C', 0);
  9587  0897  3043               	movlw	67
  9588  0898  0141               	movlb	1	; select bank1
  9589  0899  00E8               	movwf	??_MENU_task^(0+128)
  9590  089A  0868               	movf	??_MENU_task^(0+128),w
  9591  089B  0140               	movlb	0	; select bank0
  9592  089C  00B4               	movwf	TM1650_setDigit@data
  9593  089D  3000               	movlw	0
  9594  089E  00B5               	movwf	TM1650_setDigit@dp
  9595  089F  00B6               	movwf	TM1650_setDigit@dp+1
  9596  08A0  3000               	movlw	0
  9597  08A1  319E  26C7  3188   	fcall	_TM1650_setDigit
  9598                           
  9599                           ;menu.c: 102:                 TM1650_setDigit(1, 'Y', 0);
  9600  08A4  3059               	movlw	89
  9601  08A5  0141               	movlb	1	; select bank1
  9602  08A6  00E8               	movwf	??_MENU_task^(0+128)
  9603  08A7  0868               	movf	??_MENU_task^(0+128),w
  9604  08A8  0140               	movlb	0	; select bank0
  9605  08A9  00B4               	movwf	TM1650_setDigit@data
  9606  08AA  3000               	movlw	0
  9607  08AB  00B5               	movwf	TM1650_setDigit@dp
  9608  08AC  00B6               	movwf	TM1650_setDigit@dp+1
  9609  08AD  3001               	movlw	1
  9610  08AE  319E  26C7  3188   	fcall	_TM1650_setDigit
  9611                           
  9612                           ;menu.c: 103:                 TM1650_setDigit(2, 'C', 0);
  9613  08B1  3043               	movlw	67
  9614  08B2  0141               	movlb	1	; select bank1
  9615  08B3  00E8               	movwf	??_MENU_task^(0+128)
  9616  08B4  0868               	movf	??_MENU_task^(0+128),w
  9617  08B5  0140               	movlb	0	; select bank0
  9618  08B6  00B4               	movwf	TM1650_setDigit@data
  9619  08B7  3000               	movlw	0
  9620  08B8  00B5               	movwf	TM1650_setDigit@dp
  9621  08B9  00B6               	movwf	TM1650_setDigit@dp+1
  9622  08BA  3002               	movlw	2
  9623  08BB  319E  26C7  3188   	fcall	_TM1650_setDigit
  9624                           
  9625                           ;menu.c: 104:                 TM1650_setDigit(3, 'L', 0);
  9626  08BE  304C               	movlw	76
  9627  08BF  0141               	movlb	1	; select bank1
  9628  08C0  00E8               	movwf	??_MENU_task^(0+128)
  9629  08C1  0868               	movf	??_MENU_task^(0+128),w
  9630  08C2  0140               	movlb	0	; select bank0
  9631  08C3  00B4               	movwf	TM1650_setDigit@data
  9632  08C4  3000               	movlw	0
  9633  08C5  00B5               	movwf	TM1650_setDigit@dp
  9634  08C6  00B6               	movwf	TM1650_setDigit@dp+1
  9635  08C7  3003               	movlw	3
  9636  08C8  319E  26C7  3188   	fcall	_TM1650_setDigit
  9637                           
  9638                           ;menu.c: 105:                 firstMsg = 0;
  9639  08CB  0142               	movlb	2	; select bank2
  9640  08CC  01E4               	clrf	_firstMsg^(0+256)
  9641  08CD                     l6309:	
  9642                           
  9643                           ;menu.c: 107:             cycleColors();
  9644  08CD  3195  257F         	fcall	_cycleColors
  9645  08CF  0008               	return
  9646  08D0                     __end_of_MENU_task:	
  9647                           
  9648                           	psect	text17
  9649  09A9                     __ptext17:	
  9650 ;; *************** function _pulseColors *****************
  9651 ;; Defined at:
  9652 ;;		line 54 in file "menu.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;		None
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;		None
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  1    wreg      void 
  9659 ;; Registers used:
  9660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9668 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9669 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9670 ;;Total ram usage:        1 bytes
  9671 ;; Hardware stack levels used:    1
  9672 ;; Hardware stack levels required when called:   12
  9673 ;; This function calls:
  9674 ;;		_LED_setHSL
  9675 ;;		___awdiv
  9676 ;;		___fldiv
  9677 ;;		___fleq
  9678 ;;		___flge
  9679 ;;		___flsub
  9680 ;;		___xxtofl
  9681 ;;		_numControl_Set
  9682 ;; This function is called by:
  9683 ;;		_MENU_task
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           
  9688                           ;psect for function _pulseColors
  9689  09A9                     _pulseColors:	
  9690                           
  9691                           ;menu.c: 55:     numControl_Set(&pulseSpeed, 600, 100, 10);
  9692                           
  9693                           ;incstack = 0
  9694                           ; Regs used in _pulseColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9695  09A9  3065               	movlw	low _pulseSpeed
  9696  09AA  0140               	movlb	0	; select bank0
  9697  09AB  00CD               	movwf	numControl_Set@val
  9698  09AC  3001               	movlw	high _pulseSpeed
  9699  09AD  00CE               	movwf	numControl_Set@val+1
  9700  09AE  3058               	movlw	88
  9701  09AF  00CF               	movwf	numControl_Set@max
  9702  09B0  3002               	movlw	2
  9703  09B1  00D0               	movwf	numControl_Set@max+1
  9704  09B2  3064               	movlw	100
  9705  09B3  00D1               	movwf	numControl_Set@min
  9706  09B4  3000               	movlw	0
  9707  09B5  00D2               	movwf	numControl_Set@min+1
  9708  09B6  300A               	movlw	10
  9709  09B7  00D3               	movwf	numControl_Set@increm
  9710  09B8  3000               	movlw	0
  9711  09B9  00D4               	movwf	numControl_Set@increm+1
  9712  09BA  3196  2698  3189   	fcall	_numControl_Set
  9713                           
  9714                           ;menu.c: 57:     if(fadeTime == -pulseSpeed/10) {
  9715  09BD  0142               	movlb	2	; select bank2
  9716  09BE  0866               	movf	(_pulseSpeed+1)^(0+256),w
  9717  09BF  0140               	movlb	0	; select bank0
  9718  09C0  00A3               	movwf	___awdiv@dividend+1
  9719  09C1  0142               	movlb	2	; select bank2
  9720  09C2  0865               	movf	_pulseSpeed^(0+256),w
  9721  09C3  0140               	movlb	0	; select bank0
  9722  09C4  00A2               	movwf	___awdiv@dividend
  9723  09C5  30F6               	movlw	246
  9724  09C6  00A0               	movwf	___awdiv@divisor
  9725  09C7  30FF               	movlw	255
  9726  09C8  00A1               	movwf	___awdiv@divisor+1
  9727  09C9  3193  23D1  3189   	fcall	___awdiv
  9728  09CC  0140               	movlb	0	; select bank0
  9729  09CD  0820               	movf	?___awdiv,w
  9730  09CE  00A9               	movwf	___xxtofl@val
  9731  09CF  0821               	movf	?___awdiv+1,w
  9732  09D0  00AA               	movwf	___xxtofl@val+1
  9733  09D1  0D89               	rlf	9,f
  9734  09D2  3B89               	subwfb	9,f
  9735  09D3  0989               	comf	9,f
  9736  09D4  00AB               	movwf	___xxtofl@val+2
  9737  09D5  00AC               	movwf	___xxtofl@val+3
  9738  09D6  3001               	movlw	1
  9739  09D7  3196  2602  3189   	fcall	___xxtofl
  9740  09DA  0140               	movlb	0	; select bank0
  9741  09DB  082C               	movf	?___xxtofl+3,w
  9742  09DC  00BA               	movwf	___fleq@ff1+3
  9743  09DD  082B               	movf	?___xxtofl+2,w
  9744  09DE  00B9               	movwf	___fleq@ff1+2
  9745  09DF  082A               	movf	?___xxtofl+1,w
  9746  09E0  00B8               	movwf	___fleq@ff1+1
  9747  09E1  0829               	movf	?___xxtofl,w
  9748  09E2  00B7               	movwf	___fleq@ff1
  9749  09E3  0142               	movlb	2	; select bank2
  9750  09E4  0828               	movf	(_fadeTime+3)^(0+256),w
  9751  09E5  0140               	movlb	0	; select bank0
  9752  09E6  00BE               	movwf	___fleq@ff2+3
  9753  09E7  0142               	movlb	2	; select bank2
  9754  09E8  0827               	movf	(_fadeTime+2)^(0+256),w
  9755  09E9  0140               	movlb	0	; select bank0
  9756  09EA  00BD               	movwf	___fleq@ff2+2
  9757  09EB  0142               	movlb	2	; select bank2
  9758  09EC  0826               	movf	(_fadeTime+1)^(0+256),w
  9759  09ED  0140               	movlb	0	; select bank0
  9760  09EE  00BC               	movwf	___fleq@ff2+1
  9761  09EF  0142               	movlb	2	; select bank2
  9762  09F0  0825               	movf	_fadeTime^(0+256),w
  9763  09F1  0140               	movlb	0	; select bank0
  9764  09F2  00BB               	movwf	___fleq@ff2
  9765  09F3  3192  22A2  3189   	fcall	___fleq
  9766  09F6  1C03               	btfss	3,0
  9767  09F7  2A42               	goto	l6199
  9768                           
  9769                           ;menu.c: 59:         if(hueValPulse == 360) {
  9770  09F8  3068               	movlw	104
  9771  09F9  0142               	movlb	2	; select bank2
  9772  09FA  062D               	xorwf	_hueValPulse^(0+256),w
  9773  09FB  1D03               	skipz
  9774  09FC  2A03               	goto	l6195
  9775  09FD  032E               	decf	(_hueValPulse+1)^(0+256),w
  9776  09FE  1D03               	btfss	3,2
  9777  09FF  2A03               	goto	l6195
  9778                           
  9779                           ;menu.c: 60:             hueValPulse = 0;
  9780  0A00  01AD               	clrf	_hueValPulse^(0+256)
  9781  0A01  01AE               	clrf	(_hueValPulse+1)^(0+256)
  9782                           
  9783                           ;menu.c: 61:         } else {
  9784  0A02  2A07               	goto	l1074
  9785  0A03                     l6195:	
  9786                           
  9787                           ;menu.c: 62:             hueValPulse += 36;
  9788  0A03  3024               	movlw	36
  9789  0A04  07AD               	addwf	_hueValPulse^(0+256),f
  9790  0A05  3000               	movlw	0
  9791  0A06  3DAE               	addwfc	(_hueValPulse+1)^(0+256),f
  9792  0A07                     l1074:	
  9793                           ;menu.c: 63:         }
  9794                           
  9795                           
  9796                           ;menu.c: 64:         pulseColor.H = hueValPulse;
  9797  0A07  082E               	movf	(_hueValPulse+1)^(0+256),w
  9798  0A08  0143               	movlb	3	; select bank3
  9799  0A09  00CB               	movwf	(_pulseColor+1)^(0+384)
  9800  0A0A  0142               	movlb	2	; select bank2
  9801  0A0B  082D               	movf	_hueValPulse^(0+256),w
  9802  0A0C  0143               	movlb	3	; select bank3
  9803  0A0D  00CA               	movwf	_pulseColor^(0+384)
  9804                           
  9805                           ;menu.c: 65:         pulseColor.L = 1;
  9806  0A0E  303F               	movlw	63
  9807  0A0F  00D3               	movwf	((_pulseColor+3)^(0+384)+6)
  9808  0A10  3080               	movlw	128
  9809  0A11  00D2               	movwf	((_pulseColor+2)^(0+384)+6)
  9810  0A12  3000               	movlw	0
  9811  0A13  00D1               	movwf	((_pulseColor+1)^(0+384)+6)
  9812  0A14  3000               	movlw	0
  9813  0A15  00D0               	movwf	(_pulseColor^(0+384)+6)
  9814                           
  9815                           ;menu.c: 66:         fadeTime = pulseSpeed/2;
  9816  0A16  0142               	movlb	2	; select bank2
  9817  0A17  0866               	movf	(_pulseSpeed+1)^(0+256),w
  9818  0A18  0140               	movlb	0	; select bank0
  9819  0A19  00A3               	movwf	___awdiv@dividend+1
  9820  0A1A  0142               	movlb	2	; select bank2
  9821  0A1B  0865               	movf	_pulseSpeed^(0+256),w
  9822  0A1C  0140               	movlb	0	; select bank0
  9823  0A1D  00A2               	movwf	___awdiv@dividend
  9824  0A1E  3002               	movlw	2
  9825  0A1F  00A0               	movwf	___awdiv@divisor
  9826  0A20  3000               	movlw	0
  9827  0A21  00A1               	movwf	___awdiv@divisor+1
  9828  0A22  3193  23D1  3189   	fcall	___awdiv
  9829  0A25  0140               	movlb	0	; select bank0
  9830  0A26  0820               	movf	?___awdiv,w
  9831  0A27  00A9               	movwf	___xxtofl@val
  9832  0A28  0821               	movf	?___awdiv+1,w
  9833  0A29  00AA               	movwf	___xxtofl@val+1
  9834  0A2A  0D89               	rlf	9,f
  9835  0A2B  3B89               	subwfb	9,f
  9836  0A2C  0989               	comf	9,f
  9837  0A2D  00AB               	movwf	___xxtofl@val+2
  9838  0A2E  00AC               	movwf	___xxtofl@val+3
  9839  0A2F  3001               	movlw	1
  9840  0A30  3196  2602  3189   	fcall	___xxtofl
  9841  0A33  0140               	movlb	0	; select bank0
  9842  0A34  082C               	movf	?___xxtofl+3,w
  9843  0A35  0142               	movlb	2	; select bank2
  9844  0A36  00A8               	movwf	(_fadeTime+3)^(0+256)
  9845  0A37  0140               	movlb	0	; select bank0
  9846  0A38  082B               	movf	?___xxtofl+2,w
  9847  0A39  0142               	movlb	2	; select bank2
  9848  0A3A  00A7               	movwf	(_fadeTime+2)^(0+256)
  9849  0A3B  0140               	movlb	0	; select bank0
  9850  0A3C  082A               	movf	?___xxtofl+1,w
  9851  0A3D  0142               	movlb	2	; select bank2
  9852  0A3E  00A6               	movwf	(_fadeTime+1)^(0+256)
  9853  0A3F  0140               	movlb	0	; select bank0
  9854  0A40  0829               	movf	?___xxtofl,w
  9855  0A41  2AC7               	goto	L1
  9856  0A42                     l6199:	
  9857                           ;menu.c: 67:     } else if(fadeTime > 0) {
  9858                           
  9859  0A42  3000               	movlw	0
  9860  0A43  0140               	movlb	0	; select bank0
  9861  0A44  00DA               	movwf	___flge@ff1+3
  9862  0A45  3000               	movlw	0
  9863  0A46  00D9               	movwf	___flge@ff1+2
  9864  0A47  3000               	movlw	0
  9865  0A48  00D8               	movwf	___flge@ff1+1
  9866  0A49  3000               	movlw	0
  9867  0A4A  00D7               	movwf	___flge@ff1
  9868  0A4B  0142               	movlb	2	; select bank2
  9869  0A4C  0828               	movf	(_fadeTime+3)^(0+256),w
  9870  0A4D  0140               	movlb	0	; select bank0
  9871  0A4E  00DE               	movwf	___flge@ff2+3
  9872  0A4F  0142               	movlb	2	; select bank2
  9873  0A50  0827               	movf	(_fadeTime+2)^(0+256),w
  9874  0A51  0140               	movlb	0	; select bank0
  9875  0A52  00DD               	movwf	___flge@ff2+2
  9876  0A53  0142               	movlb	2	; select bank2
  9877  0A54  0826               	movf	(_fadeTime+1)^(0+256),w
  9878  0A55  0140               	movlb	0	; select bank0
  9879  0A56  00DC               	movwf	___flge@ff2+1
  9880  0A57  0142               	movlb	2	; select bank2
  9881  0A58  0825               	movf	_fadeTime^(0+256),w
  9882  0A59  0140               	movlb	0	; select bank0
  9883  0A5A  00DB               	movwf	___flge@ff2
  9884  0A5B  3195  2503  3189   	fcall	___flge
  9885  0A5E  1803               	btfsc	3,0
  9886  0A5F  2A9D               	goto	l6203
  9887                           
  9888                           ;menu.c: 68:         pulseColor.L = fadeTime/(pulseSpeed);
  9889  0A60  0142               	movlb	2	; select bank2
  9890  0A61  0865               	movf	_pulseSpeed^(0+256),w
  9891  0A62  0140               	movlb	0	; select bank0
  9892  0A63  00A9               	movwf	___xxtofl@val
  9893  0A64  0142               	movlb	2	; select bank2
  9894  0A65  0866               	movf	(_pulseSpeed+1)^(0+256),w
  9895  0A66  0140               	movlb	0	; select bank0
  9896  0A67  00AA               	movwf	___xxtofl@val+1
  9897  0A68  0D89               	rlf	9,f
  9898  0A69  3B89               	subwfb	9,f
  9899  0A6A  0989               	comf	9,f
  9900  0A6B  00AB               	movwf	___xxtofl@val+2
  9901  0A6C  00AC               	movwf	___xxtofl@val+3
  9902  0A6D  3001               	movlw	1
  9903  0A6E  3196  2602  3189   	fcall	___xxtofl
  9904  0A71  0140               	movlb	0	; select bank0
  9905  0A72  082C               	movf	?___xxtofl+3,w
  9906  0A73  00BA               	movwf	___fldiv@a+3
  9907  0A74  082B               	movf	?___xxtofl+2,w
  9908  0A75  00B9               	movwf	___fldiv@a+2
  9909  0A76  082A               	movf	?___xxtofl+1,w
  9910  0A77  00B8               	movwf	___fldiv@a+1
  9911  0A78  0829               	movf	?___xxtofl,w
  9912  0A79  00B7               	movwf	___fldiv@a
  9913  0A7A  0142               	movlb	2	; select bank2
  9914  0A7B  0828               	movf	(_fadeTime+3)^(0+256),w
  9915  0A7C  0140               	movlb	0	; select bank0
  9916  0A7D  00BE               	movwf	___fldiv@b+3
  9917  0A7E  0142               	movlb	2	; select bank2
  9918  0A7F  0827               	movf	(_fadeTime+2)^(0+256),w
  9919  0A80  0140               	movlb	0	; select bank0
  9920  0A81  00BD               	movwf	___fldiv@b+2
  9921  0A82  0142               	movlb	2	; select bank2
  9922  0A83  0826               	movf	(_fadeTime+1)^(0+256),w
  9923  0A84  0140               	movlb	0	; select bank0
  9924  0A85  00BC               	movwf	___fldiv@b+1
  9925  0A86  0142               	movlb	2	; select bank2
  9926  0A87  0825               	movf	_fadeTime^(0+256),w
  9927  0A88  0140               	movlb	0	; select bank0
  9928  0A89  00BB               	movwf	___fldiv@b
  9929  0A8A  3186  2624  3189   	fcall	___fldiv
  9930  0A8D  0140               	movlb	0	; select bank0
  9931  0A8E  083A               	movf	?___fldiv+3,w
  9932  0A8F  0143               	movlb	3	; select bank3
  9933  0A90  00D3               	movwf	((_pulseColor+3)^(0+384)+6)
  9934  0A91  0140               	movlb	0	; select bank0
  9935  0A92  0839               	movf	?___fldiv+2,w
  9936  0A93  0143               	movlb	3	; select bank3
  9937  0A94  00D2               	movwf	((_pulseColor+2)^(0+384)+6)
  9938  0A95  0140               	movlb	0	; select bank0
  9939  0A96  0838               	movf	?___fldiv+1,w
  9940  0A97  0143               	movlb	3	; select bank3
  9941  0A98  00D1               	movwf	((_pulseColor+1)^(0+384)+6)
  9942  0A99  0140               	movlb	0	; select bank0
  9943  0A9A  0837               	movf	?___fldiv,w
  9944  0A9B  0143               	movlb	3	; select bank3
  9945  0A9C  00D0               	movwf	(_pulseColor^(0+384)+6)
  9946  0A9D                     l6203:	
  9947                           ;menu.c: 70:     } else {
  9948                           
  9949                           ;menu.c: 69:         fadeTime -= 1;
  9950                           
  9951                           
  9952                           ;menu.c: 71:         fadeTime -= 1;
  9953  0A9D  303F               	movlw	63
  9954  0A9E  0140               	movlb	0	; select bank0
  9955  0A9F  00DA               	movwf	___flsub@a+3
  9956  0AA0  3080               	movlw	128
  9957  0AA1  00D9               	movwf	___flsub@a+2
  9958  0AA2  3000               	movlw	0
  9959  0AA3  00D8               	movwf	___flsub@a+1
  9960  0AA4  3000               	movlw	0
  9961  0AA5  00D7               	movwf	___flsub@a
  9962  0AA6  0142               	movlb	2	; select bank2
  9963  0AA7  0828               	movf	(_fadeTime+3)^(0+256),w
  9964  0AA8  0140               	movlb	0	; select bank0
  9965  0AA9  00DE               	movwf	___flsub@b+3
  9966  0AAA  0142               	movlb	2	; select bank2
  9967  0AAB  0827               	movf	(_fadeTime+2)^(0+256),w
  9968  0AAC  0140               	movlb	0	; select bank0
  9969  0AAD  00DD               	movwf	___flsub@b+2
  9970  0AAE  0142               	movlb	2	; select bank2
  9971  0AAF  0826               	movf	(_fadeTime+1)^(0+256),w
  9972  0AB0  0140               	movlb	0	; select bank0
  9973  0AB1  00DC               	movwf	___flsub@b+1
  9974  0AB2  0142               	movlb	2	; select bank2
  9975  0AB3  0825               	movf	_fadeTime^(0+256),w
  9976  0AB4  0140               	movlb	0	; select bank0
  9977  0AB5  00DB               	movwf	___flsub@b
  9978  0AB6  319F  2739  3189   	fcall	___flsub
  9979  0AB9  0140               	movlb	0	; select bank0
  9980  0ABA  085A               	movf	?___flsub+3,w
  9981  0ABB  0142               	movlb	2	; select bank2
  9982  0ABC  00A8               	movwf	(_fadeTime+3)^(0+256)
  9983  0ABD  0140               	movlb	0	; select bank0
  9984  0ABE  0859               	movf	?___flsub+2,w
  9985  0ABF  0142               	movlb	2	; select bank2
  9986  0AC0  00A7               	movwf	(_fadeTime+2)^(0+256)
  9987  0AC1  0140               	movlb	0	; select bank0
  9988  0AC2  0858               	movf	?___flsub+1,w
  9989  0AC3  0142               	movlb	2	; select bank2
  9990  0AC4  00A6               	movwf	(_fadeTime+1)^(0+256)
  9991  0AC5  0140               	movlb	0	; select bank0
  9992  0AC6  0857               	movf	?___flsub,w
  9993  0AC7                     L1:	
  9994  0AC7  0142               	movlb	2	; select bank2
  9995  0AC8  00A5               	movwf	_fadeTime^(0+256)
  9996                           
  9997                           ;menu.c: 74:     LED_setHSL(pulseColor);
  9998  0AC9  30CA               	movlw	low _pulseColor
  9999  0ACA  0086               	movwf	6
 10000  0ACB  3001               	movlw	high _pulseColor
 10001  0ACC  0087               	movwf	7
 10002  0ACD  30AF               	movlw	low LED_setHSL@hsl
 10003  0ACE  0084               	movwf	4
 10004  0ACF  3000               	movlw	high LED_setHSL@hsl
 10005  0AD0  0085               	movwf	5
 10006  0AD1  300A               	movlw	10
 10007  0AD2  0140               	movlb	0	; select bank0
 10008  0AD3  00EF               	movwf	??_pulseColors
 10009  0AD4                     u6650:	
 10010  0AD4  0016               	moviw fsr1++
 10011  0AD5  001A               	movwi fsr0++
 10012  0AD6  0BEF               	decfsz	??_pulseColors,f
 10013  0AD7  2AD4               	goto	u6650
 10014  0AD8  3180  209A         	fcall	_LED_setHSL
 10015  0ADA  0008               	return
 10016  0ADB                     __end_of_pulseColors:	
 10017                           
 10018                           	psect	text18
 10019  13D1                     __ptext18:	
 10020 ;; *************** function ___awdiv *****************
 10021 ;; Defined at:
 10022 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  divisor         2    0[BANK0 ] int 
 10025 ;;  dividend        2    2[BANK0 ] int 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  quotient        2    7[BANK0 ] int 
 10028 ;;  sign            1    6[BANK0 ] unsigned char 
 10029 ;;  counter         1    5[BANK0 ] unsigned char 
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  2    0[BANK0 ] int 
 10032 ;; Registers used:
 10033 ;;		wreg, status,2, status,0
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10040 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10042 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10043 ;;Total ram usage:        9 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; Hardware stack levels required when called:    4
 10046 ;; This function calls:
 10047 ;;		Nothing
 10048 ;; This function is called by:
 10049 ;;		_pulseColors
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           
 10054                           ;psect for function ___awdiv
 10055  13D1                     ___awdiv:	
 10056                           
 10057                           ;incstack = 0
 10058                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10059  13D1  0140               	movlb	0	; select bank0
 10060  13D2  01A6               	clrf	___awdiv@sign
 10061  13D3  1FA1               	btfss	___awdiv@divisor+1,7
 10062  13D4  2BDC               	goto	l5905
 10063  13D5  09A0               	comf	___awdiv@divisor,f
 10064  13D6  09A1               	comf	___awdiv@divisor+1,f
 10065  13D7  0AA0               	incf	___awdiv@divisor,f
 10066  13D8  1903               	skipnz
 10067  13D9  0AA1               	incf	___awdiv@divisor+1,f
 10068  13DA  01A6               	clrf	___awdiv@sign
 10069  13DB  0AA6               	incf	___awdiv@sign,f
 10070  13DC                     l5905:	
 10071  13DC  1FA3               	btfss	___awdiv@dividend+1,7
 10072  13DD  2BE7               	goto	l5911
 10073  13DE  09A2               	comf	___awdiv@dividend,f
 10074  13DF  09A3               	comf	___awdiv@dividend+1,f
 10075  13E0  0AA2               	incf	___awdiv@dividend,f
 10076  13E1  1903               	skipnz
 10077  13E2  0AA3               	incf	___awdiv@dividend+1,f
 10078  13E3  3001               	movlw	1
 10079  13E4  00A4               	movwf	??___awdiv
 10080  13E5  0824               	movf	??___awdiv,w
 10081  13E6  06A6               	xorwf	___awdiv@sign,f
 10082  13E7                     l5911:	
 10083  13E7  01A7               	clrf	___awdiv@quotient
 10084  13E8  01A8               	clrf	___awdiv@quotient+1
 10085  13E9  0820               	movf	___awdiv@divisor,w
 10086  13EA  0421               	iorwf	___awdiv@divisor+1,w
 10087  13EB  1903               	btfsc	3,2
 10088  13EC  2C16               	goto	l5933
 10089  13ED  01A5               	clrf	___awdiv@counter
 10090  13EE  0AA5               	incf	___awdiv@counter,f
 10091  13EF                     l5921:	
 10092  13EF  1BA1               	btfsc	___awdiv@divisor+1,7
 10093  13F0  2BFB               	goto	l5923
 10094  13F1  3001               	movlw	1
 10095  13F2                     u6395:	
 10096  13F2  35A0               	lslf	___awdiv@divisor,f
 10097  13F3  0DA1               	rlf	___awdiv@divisor+1,f
 10098  13F4  0B89               	decfsz	9,f
 10099  13F5  2BF2               	goto	u6395
 10100  13F6  3001               	movlw	1
 10101  13F7  00A4               	movwf	??___awdiv
 10102  13F8  0824               	movf	??___awdiv,w
 10103  13F9  07A5               	addwf	___awdiv@counter,f
 10104  13FA  2BEF               	goto	l5921
 10105  13FB                     l5923:	
 10106  13FB  3001               	movlw	1
 10107  13FC                     u6415:	
 10108  13FC  35A7               	lslf	___awdiv@quotient,f
 10109  13FD  0DA8               	rlf	___awdiv@quotient+1,f
 10110  13FE  0B89               	decfsz	9,f
 10111  13FF  2BFC               	goto	u6415
 10112  1400  0821               	movf	___awdiv@divisor+1,w
 10113  1401  0223               	subwf	___awdiv@dividend+1,w
 10114  1402  1D03               	skipz
 10115  1403  2C06               	goto	u6425
 10116  1404  0820               	movf	___awdiv@divisor,w
 10117  1405  0222               	subwf	___awdiv@dividend,w
 10118  1406                     u6425:	
 10119  1406  1C03               	skipc
 10120  1407  2C0D               	goto	l5929
 10121  1408  0820               	movf	___awdiv@divisor,w
 10122  1409  02A2               	subwf	___awdiv@dividend,f
 10123  140A  0821               	movf	___awdiv@divisor+1,w
 10124  140B  3BA3               	subwfb	___awdiv@dividend+1,f
 10125  140C  1427               	bsf	___awdiv@quotient,0
 10126  140D                     l5929:	
 10127  140D  3001               	movlw	1
 10128  140E                     u6435:	
 10129  140E  36A1               	lsrf	___awdiv@divisor+1,f
 10130  140F  0CA0               	rrf	___awdiv@divisor,f
 10131  1410  0B89               	decfsz	9,f
 10132  1411  2C0E               	goto	u6435
 10133  1412  3001               	movlw	1
 10134  1413  02A5               	subwf	___awdiv@counter,f
 10135  1414  1D03               	btfss	3,2
 10136  1415  2BFB               	goto	l5923
 10137  1416                     l5933:	
 10138  1416  0826               	movf	___awdiv@sign,w
 10139  1417  1903               	btfsc	3,2
 10140  1418  2C1E               	goto	l5937
 10141  1419  09A7               	comf	___awdiv@quotient,f
 10142  141A  09A8               	comf	___awdiv@quotient+1,f
 10143  141B  0AA7               	incf	___awdiv@quotient,f
 10144  141C  1903               	skipnz
 10145  141D  0AA8               	incf	___awdiv@quotient+1,f
 10146  141E                     l5937:	
 10147  141E  0828               	movf	___awdiv@quotient+1,w
 10148  141F  00A1               	movwf	?___awdiv+1
 10149  1420  0827               	movf	___awdiv@quotient,w
 10150  1421  00A0               	movwf	?___awdiv
 10151  1422  0008               	return
 10152  1423                     __end_of___awdiv:	
 10153                           
 10154                           	psect	text19
 10155  1F1C                     __ptext19:	
 10156 ;; *************** function _menuButtons *****************
 10157 ;; Defined at:
 10158 ;;		line 17 in file "menu.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;		None
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;		None
 10163 ;; Return value:  Size  Location     Type
 10164 ;;                  1    wreg      void 
 10165 ;; Registers used:
 10166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10167 ;; Tracked objects:
 10168 ;;		On entry : 0/0
 10169 ;;		On exit  : 0/0
 10170 ;;		Unchanged: 0/0
 10171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10176 ;;Total ram usage:        0 bytes
 10177 ;; Hardware stack levels used:    1
 10178 ;; Hardware stack levels required when called:    6
 10179 ;; This function calls:
 10180 ;;		_BUTTONS_isClicked
 10181 ;;		_numControl_resetTimer
 10182 ;; This function is called by:
 10183 ;;		_MENU_task
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           
 10188                           ;psect for function _menuButtons
 10189  1F1C                     _menuButtons:	
 10190                           
 10191                           ;menu.c: 18:     if (BUTTONS_isClicked(menu)) {
 10192                           
 10193                           ;incstack = 0
 10194                           ; Regs used in _menuButtons: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10195  1F1C  0142               	movlb	2	; select bank2
 10196  1F1D  0851               	movf	_menu^(0+256),w
 10197  1F1E  319F  2798  319F   	fcall	_BUTTONS_isClicked
 10198  1F21  0140               	movlb	0	; select bank0
 10199  1F22  0820               	movf	?_BUTTONS_isClicked,w
 10200  1F23  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10201  1F24  1903               	btfsc	3,2
 10202  1F25  0008               	return
 10203                           
 10204                           ;menu.c: 19:         numControl_resetTimer();
 10205  1F26  319D  25D6  319F   	fcall	_numControl_resetTimer
 10206                           
 10207                           ;menu.c: 20:         firstMsg = 1;
 10208  1F29  0142               	movlb	2	; select bank2
 10209  1F2A  01E4               	clrf	_firstMsg^(0+256)
 10210  1F2B  0AE4               	incf	_firstMsg^(0+256),f
 10211                           
 10212                           ;menu.c: 21:         if(currentState == 2) {
 10213  1F2C  3002               	movlw	2
 10214  1F2D  0635               	xorwf	_currentState^(0+256),w
 10215  1F2E  0436               	iorwf	(_currentState+1)^(0+256),w
 10216  1F2F  1D03               	btfss	3,2
 10217  1F30  2F34               	goto	l6159
 10218                           
 10219                           ;menu.c: 22:             currentState = 0;
 10220  1F31  01B5               	clrf	_currentState^(0+256)
 10221  1F32  01B6               	clrf	(_currentState+1)^(0+256)
 10222                           
 10223                           ;menu.c: 23:         } else {
 10224  1F33  0008               	return
 10225  1F34                     l6159:	
 10226                           
 10227                           ;menu.c: 24:             currentState += 1;
 10228  1F34  3001               	movlw	1
 10229  1F35  07B5               	addwf	_currentState^(0+256),f
 10230  1F36  3000               	movlw	0
 10231  1F37  3DB6               	addwfc	(_currentState+1)^(0+256),f
 10232  1F38  0008               	return
 10233  1F39                     __end_of_menuButtons:	
 10234                           
 10235                           	psect	text20
 10236  1DD6                     __ptext20:	
 10237 ;; *************** function _numControl_resetTimer *****************
 10238 ;; Defined at:
 10239 ;;		line 68 in file "controller.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;		None
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, pclath, cstack
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10257 ;;Total ram usage:        0 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    5
 10260 ;; This function calls:
 10261 ;;		_CLOCK_getTime
 10262 ;; This function is called by:
 10263 ;;		_menuButtons
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           
 10268                           ;psect for function _numControl_resetTimer
 10269  1DD6                     _numControl_resetTimer:	
 10270                           
 10271                           ;controller.c: 69:      lastActiveTime = CLOCK_getTime();
 10272                           
 10273                           ;incstack = 0
 10274                           ; Regs used in _numControl_resetTimer: [wreg+pclath+cstack]
 10275  1DD6  319D  257B         	fcall	_CLOCK_getTime
 10276  1DD8  0140               	movlb	0	; select bank0
 10277  1DD9  0821               	movf	?_CLOCK_getTime+1,w
 10278  1DDA  0142               	movlb	2	; select bank2
 10279  1DDB  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10280  1DDC  0140               	movlb	0	; select bank0
 10281  1DDD  0820               	movf	?_CLOCK_getTime,w
 10282  1DDE  0142               	movlb	2	; select bank2
 10283  1DDF  00A9               	movwf	_lastActiveTime^(0+256)
 10284  1DE0  0008               	return
 10285  1DE1                     __end_of_numControl_resetTimer:	
 10286                           
 10287                           	psect	text21
 10288  1D3E                     __ptext21:	
 10289 ;; *************** function _isDMXOn *****************
 10290 ;; Defined at:
 10291 ;;		line 60 in file "dmx.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;		None
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;		None
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  1    wreg      _Bool 
 10298 ;; Registers used:
 10299 ;;		wreg
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10309 ;;Total ram usage:        0 bytes
 10310 ;; Hardware stack levels used:    1
 10311 ;; Hardware stack levels required when called:    4
 10312 ;; This function calls:
 10313 ;;		Nothing
 10314 ;; This function is called by:
 10315 ;;		_MENU_task
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           
 10320                           ;psect for function _isDMXOn
 10321  1D3E                     _isDMXOn:	
 10322                           
 10323                           ;dmx.c: 61:     return dmxOn;
 10324                           
 10325                           ;incstack = 0
 10326                           ; Regs used in _isDMXOn: [wreg]
 10327  1D3E  0142               	movlb	2	; select bank2
 10328  1D3F  084D               	movf	_dmxOn^(0+256),w
 10329  1D40  0008               	return
 10330  1D41                     __end_of_isDMXOn:	
 10331                           
 10332                           	psect	text22
 10333  157F                     __ptext22:	
 10334 ;; *************** function _cycleColors *****************
 10335 ;; Defined at:
 10336 ;;		line 32 in file "menu.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;		None
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;  color          10   62[BANK1 ] struct HSL
 10341 ;;  time            2   60[BANK1 ] unsigned short 
 10342 ;; Return value:  Size  Location     Type
 10343 ;;                  1    wreg      void 
 10344 ;; Registers used:
 10345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10346 ;; Tracked objects:
 10347 ;;		On entry : 0/0
 10348 ;;		On exit  : 0/0
 10349 ;;		Unchanged: 0/0
 10350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10352 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10353 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10354 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10355 ;;Total ram usage:       14 bytes
 10356 ;; Hardware stack levels used:    1
 10357 ;; Hardware stack levels required when called:   12
 10358 ;; This function calls:
 10359 ;;		_CLOCK_getTime
 10360 ;;		_LED_setHSL
 10361 ;;		_numControl_Set
 10362 ;; This function is called by:
 10363 ;;		_MENU_task
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           
 10368                           ;psect for function _cycleColors
 10369  157F                     _cycleColors:	
 10370                           
 10371                           ;menu.c: 33:     time_t time = CLOCK_getTime();
 10372                           
 10373                           ;incstack = 0
 10374                           ; Regs used in _cycleColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10375  157F  319D  257B  3195   	fcall	_CLOCK_getTime
 10376  1582  0140               	movlb	0	; select bank0
 10377  1583  0821               	movf	?_CLOCK_getTime+1,w
 10378  1584  0141               	movlb	1	; select bank1
 10379  1585  00DD               	movwf	(cycleColors@time+1)^(0+128)
 10380  1586  0140               	movlb	0	; select bank0
 10381  1587  0820               	movf	?_CLOCK_getTime,w
 10382  1588  0141               	movlb	1	; select bank1
 10383  1589  00DC               	movwf	cycleColors@time^(0+128)
 10384                           
 10385                           ;menu.c: 35:     if (time - lastTimeCycle < cycleSpeed)
 10386  158A  0142               	movlb	2	; select bank2
 10387  158B  0833               	movf	_lastTimeCycle^(0+256),w
 10388  158C  0141               	movlb	1	; select bank1
 10389  158D  025C               	subwf	cycleColors@time^(0+128),w
 10390  158E  00DA               	movwf	??_cycleColors^(0+128)
 10391  158F  0142               	movlb	2	; select bank2
 10392  1590  0834               	movf	(_lastTimeCycle+1)^(0+256),w
 10393  1591  0141               	movlb	1	; select bank1
 10394  1592  3B5D               	subwfb	(cycleColors@time+1)^(0+128),w
 10395  1593  00DB               	movwf	(??_cycleColors+1)^(0+128)
 10396  1594  0142               	movlb	2	; select bank2
 10397  1595  0868               	movf	(_cycleSpeed+1)^(0+256),w
 10398  1596  0141               	movlb	1	; select bank1
 10399  1597  025B               	subwf	(??_cycleColors+1)^(0+128),w
 10400  1598  1D03               	skipz
 10401  1599  2D9E               	goto	u6585
 10402  159A  0142               	movlb	2	; select bank2
 10403  159B  0867               	movf	_cycleSpeed^(0+256),w
 10404  159C  0141               	movlb	1	; select bank1
 10405  159D  025A               	subwf	??_cycleColors^(0+128),w
 10406  159E                     u6585:	
 10407  159E  1C03               	btfss	3,0
 10408  159F  0008               	return
 10409                           
 10410                           ;menu.c: 37:     lastTimeCycle = time;
 10411  15A0  085D               	movf	(cycleColors@time+1)^(0+128),w
 10412  15A1  0142               	movlb	2	; select bank2
 10413  15A2  00B4               	movwf	(_lastTimeCycle+1)^(0+256)
 10414  15A3  0141               	movlb	1	; select bank1
 10415  15A4  085C               	movf	cycleColors@time^(0+128),w
 10416  15A5  0142               	movlb	2	; select bank2
 10417  15A6  00B3               	movwf	_lastTimeCycle^(0+256)
 10418                           
 10419                           ;menu.c: 38:     numControl_Set(&cycleSpeed, 100, 1, 1);
 10420  15A7  3067               	movlw	low _cycleSpeed
 10421  15A8  0140               	movlb	0	; select bank0
 10422  15A9  00CD               	movwf	numControl_Set@val
 10423  15AA  3001               	movlw	high _cycleSpeed
 10424  15AB  00CE               	movwf	numControl_Set@val+1
 10425  15AC  3064               	movlw	100
 10426  15AD  00CF               	movwf	numControl_Set@max
 10427  15AE  3000               	movlw	0
 10428  15AF  00D0               	movwf	numControl_Set@max+1
 10429  15B0  3001               	movlw	1
 10430  15B1  00D1               	movwf	numControl_Set@min
 10431  15B2  3000               	movlw	0
 10432  15B3  00D2               	movwf	numControl_Set@min+1
 10433  15B4  3001               	movlw	1
 10434  15B5  00D3               	movwf	numControl_Set@increm
 10435  15B6  3000               	movlw	0
 10436  15B7  00D4               	movwf	numControl_Set@increm+1
 10437  15B8  3196  2698  3195   	fcall	_numControl_Set
 10438                           
 10439                           ;menu.c: 39:     if(hueValCycle == 360) {
 10440  15BB  3068               	movlw	104
 10441  15BC  0142               	movlb	2	; select bank2
 10442  15BD  0631               	xorwf	_hueValCycle^(0+256),w
 10443  15BE  1D03               	skipz
 10444  15BF  2DC6               	goto	l6175
 10445  15C0  0332               	decf	(_hueValCycle+1)^(0+256),w
 10446  15C1  1D03               	btfss	3,2
 10447  15C2  2DC6               	goto	l6175
 10448                           
 10449                           ;menu.c: 40:         hueValCycle = 0;
 10450  15C3  01B1               	clrf	_hueValCycle^(0+256)
 10451  15C4  01B2               	clrf	(_hueValCycle+1)^(0+256)
 10452                           
 10453                           ;menu.c: 41:     } else {
 10454  15C5  2DCA               	goto	l6177
 10455  15C6                     l6175:	
 10456                           
 10457                           ;menu.c: 42:         hueValCycle += 1;
 10458  15C6  3001               	movlw	1
 10459  15C7  07B1               	addwf	_hueValCycle^(0+256),f
 10460  15C8  3000               	movlw	0
 10461  15C9  3DB2               	addwfc	(_hueValCycle+1)^(0+256),f
 10462  15CA                     l6177:	
 10463                           
 10464                           ;menu.c: 44:     struct HSL color = {hueValCycle, 1, .5};
 10465  15CA  30A0               	movlw	low cycleColors@F112
 10466  15CB  0086               	movwf	6
 10467  15CC  3001               	movlw	high cycleColors@F112
 10468  15CD  0087               	movwf	7
 10469  15CE  30DE               	movlw	low cycleColors@color
 10470  15CF  0084               	movwf	4
 10471  15D0  3000               	movlw	high cycleColors@color
 10472  15D1  0085               	movwf	5
 10473  15D2  300A               	movlw	10
 10474  15D3  0141               	movlb	1	; select bank1
 10475  15D4  00DA               	movwf	??_cycleColors^(0+128)
 10476  15D5                     u6600:	
 10477  15D5  0016               	moviw fsr1++
 10478  15D6  001A               	movwi fsr0++
 10479  15D7  0BDA               	decfsz	??_cycleColors^(0+128),f
 10480  15D8  2DD5               	goto	u6600
 10481  15D9  0142               	movlb	2	; select bank2
 10482  15DA  0832               	movf	(_hueValCycle+1)^(0+256),w
 10483  15DB  0141               	movlb	1	; select bank1
 10484  15DC  00DF               	movwf	(cycleColors@color+1)^(0+128)
 10485  15DD  0142               	movlb	2	; select bank2
 10486  15DE  0831               	movf	_hueValCycle^(0+256),w
 10487  15DF  0141               	movlb	1	; select bank1
 10488  15E0  00DE               	movwf	cycleColors@color^(0+128)
 10489  15E1  303F               	movlw	63
 10490  15E2  00E3               	movwf	((cycleColors@color+3)^(0+128)+2)
 10491  15E3  3080               	movlw	128
 10492  15E4  00E2               	movwf	((cycleColors@color+2)^(0+128)+2)
 10493  15E5  3000               	movlw	0
 10494  15E6  00E1               	movwf	((cycleColors@color+1)^(0+128)+2)
 10495  15E7  3000               	movlw	0
 10496  15E8  00E0               	movwf	(cycleColors@color^(0+128)+2)
 10497  15E9  303F               	movlw	63
 10498  15EA  00E7               	movwf	((cycleColors@color+3)^(0+128)+6)
 10499  15EB  3000               	movlw	0
 10500  15EC  00E6               	movwf	((cycleColors@color+2)^(0+128)+6)
 10501  15ED  3000               	movlw	0
 10502  15EE  00E5               	movwf	((cycleColors@color+1)^(0+128)+6)
 10503  15EF  3000               	movlw	0
 10504  15F0  00E4               	movwf	(cycleColors@color^(0+128)+6)
 10505                           
 10506                           ;menu.c: 45:     LED_setHSL(color);
 10507  15F1  30DE               	movlw	low cycleColors@color
 10508  15F2  0086               	movwf	6
 10509  15F3  3000               	movlw	high cycleColors@color
 10510  15F4  0087               	movwf	7
 10511  15F5  30AF               	movlw	low LED_setHSL@hsl
 10512  15F6  0084               	movwf	4
 10513  15F7  3000               	movlw	high LED_setHSL@hsl
 10514  15F8  0085               	movwf	5
 10515  15F9  300A               	movlw	10
 10516  15FA  00DA               	movwf	??_cycleColors^(0+128)
 10517  15FB                     u6610:	
 10518  15FB  0016               	moviw fsr1++
 10519  15FC  001A               	movwi fsr0++
 10520  15FD  0BDA               	decfsz	??_cycleColors^(0+128),f
 10521  15FE  2DFB               	goto	u6610
 10522  15FF  3180  209A         	fcall	_LED_setHSL
 10523  1601  0008               	return
 10524  1602                     __end_of_cycleColors:	
 10525                           
 10526                           	psect	text23
 10527  1698                     __ptext23:	
 10528 ;; *************** function _numControl_Set *****************
 10529 ;; Defined at:
 10530 ;;		line 45 in file "controller.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  val             2   45[BANK0 ] PTR int 
 10533 ;;		 -> pulseSpeed(2), cycleSpeed(2), address(2), 
 10534 ;;  max             2   47[BANK0 ] int 
 10535 ;;  min             2   49[BANK0 ] int 
 10536 ;;  increm          2   51[BANK0 ] int 
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;  time            2   55[BANK0 ] unsigned short 
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  1    wreg      void 
 10541 ;; Registers used:
 10542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10548 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10549 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10551 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10552 ;;Total ram usage:       12 bytes
 10553 ;; Hardware stack levels used:    1
 10554 ;; Hardware stack levels required when called:   11
 10555 ;; This function calls:
 10556 ;;		_BUTTONS_isClicked
 10557 ;;		_CLOCK_getTime
 10558 ;;		_TM1650_enable
 10559 ;;		_decrement
 10560 ;;		_increment
 10561 ;; This function is called by:
 10562 ;;		_cycleColors
 10563 ;;		_pulseColors
 10564 ;;		_MENU_task
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           
 10569                           ;psect for function _numControl_Set
 10570  1698                     _numControl_Set:	
 10571                           
 10572                           ;controller.c: 46:     time_t time = CLOCK_getTime();
 10573                           
 10574                           ;incstack = 0
 10575                           ; Regs used in _numControl_Set: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10576  1698  319D  257B  3196   	fcall	_CLOCK_getTime
 10577  169B  0140               	movlb	0	; select bank0
 10578  169C  0821               	movf	?_CLOCK_getTime+1,w
 10579  169D  00D8               	movwf	numControl_Set@time+1
 10580  169E  0820               	movf	?_CLOCK_getTime,w
 10581  169F  00D7               	movwf	numControl_Set@time
 10582                           
 10583                           ;controller.c: 48:     if (time - lastTime < 35)
 10584  16A0  0142               	movlb	2	; select bank2
 10585  16A1  082B               	movf	controller@lastTime^(0+256),w
 10586  16A2  0140               	movlb	0	; select bank0
 10587  16A3  0257               	subwf	numControl_Set@time,w
 10588  16A4  00D5               	movwf	??_numControl_Set
 10589  16A5  0142               	movlb	2	; select bank2
 10590  16A6  082C               	movf	(controller@lastTime+1)^(0+256),w
 10591  16A7  0140               	movlb	0	; select bank0
 10592  16A8  3B58               	subwfb	numControl_Set@time+1,w
 10593  16A9  00D6               	movwf	??_numControl_Set+1
 10594  16AA  3000               	movlw	0
 10595  16AB  0256               	subwf	??_numControl_Set+1,w
 10596  16AC  3023               	movlw	35
 10597  16AD  1903               	skipnz
 10598  16AE  0255               	subwf	??_numControl_Set,w
 10599  16AF  1C03               	btfss	3,0
 10600  16B0  0008               	return
 10601                           
 10602                           ;controller.c: 50:     lastTime = time;
 10603  16B1  0858               	movf	numControl_Set@time+1,w
 10604  16B2  0142               	movlb	2	; select bank2
 10605  16B3  00AC               	movwf	(controller@lastTime+1)^(0+256)
 10606  16B4  0140               	movlb	0	; select bank0
 10607  16B5  0857               	movf	numControl_Set@time,w
 10608  16B6  0142               	movlb	2	; select bank2
 10609  16B7  00AB               	movwf	controller@lastTime^(0+256)
 10610                           
 10611                           ;controller.c: 52:     if (BUTTONS_isClicked(up)) {
 10612  16B8  0854               	movf	_up^(0+256),w
 10613  16B9  319F  2798  3196   	fcall	_BUTTONS_isClicked
 10614  16BC  0140               	movlb	0	; select bank0
 10615  16BD  0820               	movf	?_BUTTONS_isClicked,w
 10616  16BE  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10617  16BF  1903               	btfsc	3,2
 10618  16C0  2EE0               	goto	l5883
 10619                           
 10620                           ;controller.c: 53:         increment(val, max, min, increm);
 10621  16C1  084E               	movf	numControl_Set@val+1,w
 10622  16C2  00C3               	movwf	increment@val+1
 10623  16C3  084D               	movf	numControl_Set@val,w
 10624  16C4  00C2               	movwf	increment@val
 10625  16C5  0850               	movf	numControl_Set@max+1,w
 10626  16C6  00C5               	movwf	increment@max+1
 10627  16C7  084F               	movf	numControl_Set@max,w
 10628  16C8  00C4               	movwf	increment@max
 10629  16C9  0852               	movf	numControl_Set@min+1,w
 10630  16CA  00C7               	movwf	increment@min+1
 10631  16CB  0851               	movf	numControl_Set@min,w
 10632  16CC  00C6               	movwf	increment@min
 10633  16CD  0854               	movf	numControl_Set@increm+1,w
 10634  16CE  00C9               	movwf	increment@increm+1
 10635  16CF  0853               	movf	numControl_Set@increm,w
 10636  16D0  00C8               	movwf	increment@increm
 10637  16D1  3191  2149  3196   	fcall	_increment
 10638                           
 10639                           ;controller.c: 54:         lastActiveTime = time;
 10640  16D4  0140               	movlb	0	; select bank0
 10641  16D5  0858               	movf	numControl_Set@time+1,w
 10642  16D6  0142               	movlb	2	; select bank2
 10643  16D7  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10644  16D8  0140               	movlb	0	; select bank0
 10645  16D9  0857               	movf	numControl_Set@time,w
 10646  16DA  0142               	movlb	2	; select bank2
 10647  16DB  00A9               	movwf	_lastActiveTime^(0+256)
 10648                           
 10649                           ;controller.c: 55:         TM1650_enable(1);
 10650  16DC  3001               	movlw	1
 10651  16DD  319E  2650         	fcall	_TM1650_enable
 10652                           
 10653                           ;controller.c: 56:     } else if (BUTTONS_isClicked(down)) {
 10654  16DF  0008               	return
 10655  16E0                     l5883:	
 10656  16E0  0142               	movlb	2	; select bank2
 10657  16E1  0853               	movf	_down^(0+256),w
 10658  16E2  319F  2798  3196   	fcall	_BUTTONS_isClicked
 10659  16E5  0140               	movlb	0	; select bank0
 10660  16E6  0820               	movf	?_BUTTONS_isClicked,w
 10661  16E7  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10662  16E8  1903               	btfsc	3,2
 10663  16E9  2F09               	goto	l5891
 10664                           
 10665                           ;controller.c: 57:         decrement(val, max, min, increm);
 10666  16EA  084E               	movf	numControl_Set@val+1,w
 10667  16EB  00C3               	movwf	decrement@val+1
 10668  16EC  084D               	movf	numControl_Set@val,w
 10669  16ED  00C2               	movwf	decrement@val
 10670  16EE  0850               	movf	numControl_Set@max+1,w
 10671  16EF  00C5               	movwf	decrement@max+1
 10672  16F0  084F               	movf	numControl_Set@max,w
 10673  16F1  00C4               	movwf	decrement@max
 10674  16F2  0852               	movf	numControl_Set@min+1,w
 10675  16F3  00C7               	movwf	decrement@min+1
 10676  16F4  0851               	movf	numControl_Set@min,w
 10677  16F5  00C6               	movwf	decrement@min
 10678  16F6  0854               	movf	numControl_Set@increm+1,w
 10679  16F7  00C9               	movwf	decrement@increm+1
 10680  16F8  0853               	movf	numControl_Set@increm,w
 10681  16F9  00C8               	movwf	decrement@increm
 10682  16FA  3191  2114  3196   	fcall	_decrement
 10683                           
 10684                           ;controller.c: 58:         lastActiveTime = time;
 10685  16FD  0140               	movlb	0	; select bank0
 10686  16FE  0858               	movf	numControl_Set@time+1,w
 10687  16FF  0142               	movlb	2	; select bank2
 10688  1700  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10689  1701  0140               	movlb	0	; select bank0
 10690  1702  0857               	movf	numControl_Set@time,w
 10691  1703  0142               	movlb	2	; select bank2
 10692  1704  00A9               	movwf	_lastActiveTime^(0+256)
 10693                           
 10694                           ;controller.c: 59:         TM1650_enable(1);
 10695  1705  3001               	movlw	1
 10696  1706  319E  2650         	fcall	_TM1650_enable
 10697                           
 10698                           ;controller.c: 60:     } else {
 10699  1708  0008               	return
 10700  1709                     l5891:	
 10701                           
 10702                           ;controller.c: 61:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
 10703  1709  319D  257B  3196   	fcall	_CLOCK_getTime
 10704  170C  0142               	movlb	2	; select bank2
 10705  170D  0829               	movf	_lastActiveTime^(0+256),w
 10706  170E  0140               	movlb	0	; select bank0
 10707  170F  0220               	subwf	?_CLOCK_getTime,w
 10708  1710  00D5               	movwf	??_numControl_Set
 10709  1711  0142               	movlb	2	; select bank2
 10710  1712  082A               	movf	(_lastActiveTime+1)^(0+256),w
 10711  1713  0140               	movlb	0	; select bank0
 10712  1714  3B21               	subwfb	?_CLOCK_getTime+1,w
 10713  1715  00D6               	movwf	??_numControl_Set+1
 10714  1716  3013               	movlw	19
 10715  1717  0256               	subwf	??_numControl_Set+1,w
 10716  1718  3088               	movlw	136
 10717  1719  1903               	skipnz
 10718  171A  0255               	subwf	??_numControl_Set,w
 10719  171B  1C03               	skipc
 10720  171C  0008               	return
 10721                           
 10722                           ;controller.c: 62:             TM1650_enable(0);
 10723  171D  3000               	movlw	0
 10724  171E  319E  2650  3196   	fcall	_TM1650_enable
 10725                           
 10726                           ;controller.c: 63:             lastActiveTime = CLOCK_getTime() - 5001;
 10727  1721  319D  257B         	fcall	_CLOCK_getTime
 10728  1723  0140               	movlb	0	; select bank0
 10729  1724  0820               	movf	?_CLOCK_getTime,w
 10730  1725  3E77               	addlw	119
 10731  1726  0142               	movlb	2	; select bank2
 10732  1727  00A9               	movwf	_lastActiveTime^(0+256)
 10733  1728  30EC               	movlw	236
 10734  1729  0140               	movlb	0	; select bank0
 10735  172A  3D21               	addwfc	?_CLOCK_getTime+1,w
 10736  172B  0142               	movlb	2	; select bank2
 10737  172C  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10738  172D  0008               	return
 10739  172E                     __end_of_numControl_Set:	
 10740                           
 10741                           	psect	text24
 10742  1149                     __ptext24:	
 10743 ;; *************** function _increment *****************
 10744 ;; Defined at:
 10745 ;;		line 17 in file "controller.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;  val             2   34[BANK0 ] PTR int 
 10748 ;;		 -> pulseSpeed(2), cycleSpeed(2), address(2), 
 10749 ;;  max             2   36[BANK0 ] int 
 10750 ;;  min             2   38[BANK0 ] int 
 10751 ;;  increm          2   40[BANK0 ] int 
 10752 ;; Auto vars:     Size  Location     Type
 10753 ;;		None
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  1    wreg      void 
 10756 ;; Registers used:
 10757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10758 ;; Tracked objects:
 10759 ;;		On entry : 0/0
 10760 ;;		On exit  : 0/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10763 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10765 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10766 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10767 ;;Total ram usage:       11 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:   10
 10770 ;; This function calls:
 10771 ;;		_TM1650_fastPrintNum
 10772 ;; This function is called by:
 10773 ;;		_numControl_Set
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           
 10778                           ;psect for function _increment
 10779  1149                     _increment:	
 10780                           
 10781                           ;controller.c: 17: void increment(int *val, int max, int min, int increm);controller.c: 
      +                          18: {;controller.c: 19:     if(*val >= max) {
 10782                           
 10783                           ;incstack = 0
 10784                           ; Regs used in _increment: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10785  1149  0140               	movlb	0	; select bank0
 10786  114A  0842               	movf	increment@val,w
 10787  114B  0086               	movwf	6
 10788  114C  0843               	movf	increment@val+1,w
 10789  114D  0087               	movwf	7
 10790  114E  3F40               	moviw [0]fsr1
 10791  114F  00CA               	movwf	??_increment
 10792  1150  3F41               	moviw [1]fsr1
 10793  1151  00CB               	movwf	??_increment+1
 10794  1152  084B               	movf	??_increment+1,w
 10795  1153  3A80               	xorlw	128
 10796  1154  00CC               	movwf	??_increment+2
 10797  1155  0845               	movf	increment@max+1,w
 10798  1156  3A80               	xorlw	128
 10799  1157  024C               	subwf	??_increment+2,w
 10800  1158  1D03               	skipz
 10801  1159  295C               	goto	u6255
 10802  115A  0844               	movf	increment@max,w
 10803  115B  024A               	subwf	??_increment,w
 10804  115C                     u6255:	
 10805  115C  1C03               	skipc
 10806  115D  2968               	goto	l5797
 10807                           
 10808                           ;controller.c: 20:         *val = min;
 10809  115E  0140               	movlb	0	; select bank0
 10810  115F  0842               	movf	increment@val,w
 10811  1160  0086               	movwf	6
 10812  1161  0843               	movf	increment@val+1,w
 10813  1162  0087               	movwf	7
 10814  1163  0846               	movf	increment@min,w
 10815  1164  3FC0               	movwi [0]fsr1
 10816  1165  0847               	movf	increment@min+1,w
 10817  1166  3FC1               	movwi [1]fsr1
 10818                           
 10819                           ;controller.c: 21:     } else {
 10820  1167  2973               	goto	l5799
 10821  1168                     l5797:	
 10822                           
 10823                           ;controller.c: 22:         (*val)+=increm;
 10824  1168  0140               	movlb	0	; select bank0
 10825  1169  0842               	movf	increment@val,w
 10826  116A  0086               	movwf	6
 10827  116B  0843               	movf	increment@val+1,w
 10828  116C  0087               	movwf	7
 10829  116D  0848               	movf	increment@increm,w
 10830  116E  0781               	addwf	1,f
 10831  116F  3141               	addfsr 1,1
 10832  1170  0849               	movf	increment@increm+1,w
 10833  1171  3D81               	addwfc	1,f
 10834  1172  317F               	addfsr 1,-1
 10835  1173                     l5799:	
 10836                           
 10837                           ;controller.c: 24:     TM1650_fastPrintNum(*val);
 10838  1173  0842               	movf	increment@val,w
 10839  1174  0086               	movwf	6
 10840  1175  0843               	movf	increment@val+1,w
 10841  1176  0087               	movwf	7
 10842  1177  3F40               	moviw [0]fsr1
 10843  1178  00BB               	movwf	TM1650_fastPrintNum@num
 10844  1179  3F41               	moviw [1]fsr1
 10845  117A  00BC               	movwf	TM1650_fastPrintNum@num+1
 10846  117B  3194  2489         	fcall	_TM1650_fastPrintNum
 10847  117D  0008               	return
 10848  117E                     __end_of_increment:	
 10849                           
 10850                           	psect	text25
 10851  1114                     __ptext25:	
 10852 ;; *************** function _decrement *****************
 10853 ;; Defined at:
 10854 ;;		line 30 in file "controller.c"
 10855 ;; Parameters:    Size  Location     Type
 10856 ;;  val             2   34[BANK0 ] PTR int 
 10857 ;;		 -> pulseSpeed(2), cycleSpeed(2), address(2), 
 10858 ;;  max             2   36[BANK0 ] int 
 10859 ;;  min             2   38[BANK0 ] int 
 10860 ;;  increm          2   40[BANK0 ] int 
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;		None
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      void 
 10865 ;; Registers used:
 10866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10872 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10874 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10875 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10876 ;;Total ram usage:       11 bytes
 10877 ;; Hardware stack levels used:    1
 10878 ;; Hardware stack levels required when called:   10
 10879 ;; This function calls:
 10880 ;;		_TM1650_fastPrintNum
 10881 ;; This function is called by:
 10882 ;;		_numControl_Set
 10883 ;; This function uses a non-reentrant model
 10884 ;;
 10885                           
 10886                           
 10887                           ;psect for function _decrement
 10888  1114                     _decrement:	
 10889                           
 10890                           ;controller.c: 30: void decrement(int *val, int max, int min, int increm);controller.c: 
      +                          31: {;controller.c: 32:     if(*val <= min) {
 10891                           
 10892                           ;incstack = 0
 10893                           ; Regs used in _decrement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10894  1114  0140               	movlb	0	; select bank0
 10895  1115  0842               	movf	decrement@val,w
 10896  1116  0086               	movwf	6
 10897  1117  0843               	movf	decrement@val+1,w
 10898  1118  0087               	movwf	7
 10899  1119  3F40               	moviw [0]fsr1
 10900  111A  00CA               	movwf	??_decrement
 10901  111B  3F41               	moviw [1]fsr1
 10902  111C  00CB               	movwf	??_decrement+1
 10903  111D  0847               	movf	decrement@min+1,w
 10904  111E  3A80               	xorlw	128
 10905  111F  00CC               	movwf	??_decrement+2
 10906  1120  084B               	movf	??_decrement+1,w
 10907  1121  3A80               	xorlw	128
 10908  1122  024C               	subwf	??_decrement+2,w
 10909  1123  1D03               	skipz
 10910  1124  2927               	goto	u6265
 10911  1125  084A               	movf	??_decrement,w
 10912  1126  0246               	subwf	decrement@min,w
 10913  1127                     u6265:	
 10914  1127  1C03               	skipc
 10915  1128  2933               	goto	l5805
 10916                           
 10917                           ;controller.c: 33:         *val = max;
 10918  1129  0140               	movlb	0	; select bank0
 10919  112A  0842               	movf	decrement@val,w
 10920  112B  0086               	movwf	6
 10921  112C  0843               	movf	decrement@val+1,w
 10922  112D  0087               	movwf	7
 10923  112E  0844               	movf	decrement@max,w
 10924  112F  3FC0               	movwi [0]fsr1
 10925  1130  0845               	movf	decrement@max+1,w
 10926  1131  3FC1               	movwi [1]fsr1
 10927                           
 10928                           ;controller.c: 34:     } else {
 10929  1132  293E               	goto	l5807
 10930  1133                     l5805:	
 10931                           
 10932                           ;controller.c: 35:         (*val)-=increm;
 10933  1133  0140               	movlb	0	; select bank0
 10934  1134  0842               	movf	decrement@val,w
 10935  1135  0086               	movwf	6
 10936  1136  0843               	movf	decrement@val+1,w
 10937  1137  0087               	movwf	7
 10938  1138  0848               	movf	decrement@increm,w
 10939  1139  0281               	subwf	1,f
 10940  113A  3141               	addfsr 1,1
 10941  113B  0849               	movf	decrement@increm+1,w
 10942  113C  3B81               	subwfb	1,f
 10943  113D  317F               	addfsr 1,-1
 10944  113E                     l5807:	
 10945                           
 10946                           ;controller.c: 37:     TM1650_fastPrintNum(*val);
 10947  113E  0842               	movf	decrement@val,w
 10948  113F  0086               	movwf	6
 10949  1140  0843               	movf	decrement@val+1,w
 10950  1141  0087               	movwf	7
 10951  1142  3F40               	moviw [0]fsr1
 10952  1143  00BB               	movwf	TM1650_fastPrintNum@num
 10953  1144  3F41               	moviw [1]fsr1
 10954  1145  00BC               	movwf	TM1650_fastPrintNum@num+1
 10955  1146  3194  2489         	fcall	_TM1650_fastPrintNum
 10956  1148  0008               	return
 10957  1149                     __end_of_decrement:	
 10958                           
 10959                           	psect	text26
 10960  1489                     __ptext26:	
 10961 ;; *************** function _TM1650_fastPrintNum *****************
 10962 ;; Defined at:
 10963 ;;		line 36 in file "tm1650.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;  num             2   27[BANK0 ] unsigned short 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;  numWrite        2   30[BANK0 ] int 
 10968 ;;  i               2   32[BANK0 ] int 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10979 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10980 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10981 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10982 ;;Total ram usage:        7 bytes
 10983 ;; Hardware stack levels used:    1
 10984 ;; Hardware stack levels required when called:    9
 10985 ;; This function calls:
 10986 ;;		_TM1650_setDigit
 10987 ;;		___lwdiv
 10988 ;;		___lwmod
 10989 ;; This function is called by:
 10990 ;;		_increment
 10991 ;;		_decrement
 10992 ;;		_numControl_init
 10993 ;; This function uses a non-reentrant model
 10994 ;;
 10995                           
 10996                           
 10997                           ;psect for function _TM1650_fastPrintNum
 10998  1489                     _TM1650_fastPrintNum:	
 10999                           
 11000                           ;tm1650.c: 37:     if(num > 9999) {
 11001                           
 11002                           ;incstack = 0
 11003                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11004  1489  3027               	movlw	39
 11005  148A  0140               	movlb	0	; select bank0
 11006  148B  023C               	subwf	TM1650_fastPrintNum@num+1,w
 11007  148C  3010               	movlw	16
 11008  148D  1903               	skipnz
 11009  148E  023B               	subwf	TM1650_fastPrintNum@num,w
 11010  148F  1C03               	skipc
 11011  1490  2CC0               	goto	l5625
 11012                           
 11013                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
 11014  1491  3045               	movlw	69
 11015  1492  00BD               	movwf	??_TM1650_fastPrintNum
 11016  1493  083D               	movf	??_TM1650_fastPrintNum,w
 11017  1494  00B4               	movwf	TM1650_setDigit@data
 11018  1495  3000               	movlw	0
 11019  1496  00B5               	movwf	TM1650_setDigit@dp
 11020  1497  00B6               	movwf	TM1650_setDigit@dp+1
 11021  1498  3000               	movlw	0
 11022  1499  319E  26C7  3194   	fcall	_TM1650_setDigit
 11023                           
 11024                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
 11025  149C  3045               	movlw	69
 11026  149D  0140               	movlb	0	; select bank0
 11027  149E  00BD               	movwf	??_TM1650_fastPrintNum
 11028  149F  083D               	movf	??_TM1650_fastPrintNum,w
 11029  14A0  00B4               	movwf	TM1650_setDigit@data
 11030  14A1  3000               	movlw	0
 11031  14A2  00B5               	movwf	TM1650_setDigit@dp
 11032  14A3  00B6               	movwf	TM1650_setDigit@dp+1
 11033  14A4  3001               	movlw	1
 11034  14A5  319E  26C7  3194   	fcall	_TM1650_setDigit
 11035                           
 11036                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
 11037  14A8  3045               	movlw	69
 11038  14A9  0140               	movlb	0	; select bank0
 11039  14AA  00BD               	movwf	??_TM1650_fastPrintNum
 11040  14AB  083D               	movf	??_TM1650_fastPrintNum,w
 11041  14AC  00B4               	movwf	TM1650_setDigit@data
 11042  14AD  3000               	movlw	0
 11043  14AE  00B5               	movwf	TM1650_setDigit@dp
 11044  14AF  00B6               	movwf	TM1650_setDigit@dp+1
 11045  14B0  3002               	movlw	2
 11046  14B1  319E  26C7  3194   	fcall	_TM1650_setDigit
 11047                           
 11048                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
 11049  14B4  3045               	movlw	69
 11050  14B5  0140               	movlb	0	; select bank0
 11051  14B6  00BD               	movwf	??_TM1650_fastPrintNum
 11052  14B7  083D               	movf	??_TM1650_fastPrintNum,w
 11053  14B8  00B4               	movwf	TM1650_setDigit@data
 11054  14B9  3000               	movlw	0
 11055  14BA  00B5               	movwf	TM1650_setDigit@dp
 11056  14BB  00B6               	movwf	TM1650_setDigit@dp+1
 11057  14BC  3003               	movlw	3
 11058  14BD  319E  26C7         	fcall	_TM1650_setDigit
 11059                           
 11060                           ;tm1650.c: 42:     } else {
 11061  14BF  0008               	return
 11062  14C0                     l5625:	
 11063                           
 11064                           ;tm1650.c: 43:         int i=0;
 11065  14C0  01C0               	clrf	TM1650_fastPrintNum@i
 11066  14C1  01C1               	clrf	TM1650_fastPrintNum@i+1
 11067                           
 11068                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
 11069  14C2  01C0               	clrf	TM1650_fastPrintNum@i
 11070  14C3  01C1               	clrf	TM1650_fastPrintNum@i+1
 11071  14C4                     l5631:	
 11072                           
 11073                           ;tm1650.c: 45:             int numWrite = num %10;
 11074  14C4  300A               	movlw	10
 11075  14C5  0140               	movlb	0	; select bank0
 11076  14C6  00A0               	movwf	___lwmod@divisor
 11077  14C7  3000               	movlw	0
 11078  14C8  00A1               	movwf	___lwmod@divisor+1
 11079  14C9  083C               	movf	TM1650_fastPrintNum@num+1,w
 11080  14CA  00A3               	movwf	___lwmod@dividend+1
 11081  14CB  083B               	movf	TM1650_fastPrintNum@num,w
 11082  14CC  00A2               	movwf	___lwmod@dividend
 11083  14CD  3190  2085  3194   	fcall	___lwmod
 11084  14D0  0140               	movlb	0	; select bank0
 11085  14D1  0821               	movf	?___lwmod+1,w
 11086  14D2  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
 11087  14D3  0820               	movf	?___lwmod,w
 11088  14D4  00BE               	movwf	TM1650_fastPrintNum@numWrite
 11089                           
 11090                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
 11091  14D5  083E               	movf	TM1650_fastPrintNum@numWrite,w
 11092  14D6  3E30               	addlw	48
 11093  14D7  00BD               	movwf	??_TM1650_fastPrintNum
 11094  14D8  083D               	movf	??_TM1650_fastPrintNum,w
 11095  14D9  00B4               	movwf	TM1650_setDigit@data
 11096  14DA  3000               	movlw	0
 11097  14DB  00B5               	movwf	TM1650_setDigit@dp
 11098  14DC  00B6               	movwf	TM1650_setDigit@dp+1
 11099  14DD  0840               	movf	TM1650_fastPrintNum@i,w
 11100  14DE  3C03               	sublw	3
 11101  14DF  319E  26C7  3194   	fcall	_TM1650_setDigit
 11102                           
 11103                           ;tm1650.c: 47:             num = num/10;
 11104  14E2  300A               	movlw	10
 11105  14E3  0140               	movlb	0	; select bank0
 11106  14E4  00A0               	movwf	___lwdiv@divisor
 11107  14E5  3000               	movlw	0
 11108  14E6  00A1               	movwf	___lwdiv@divisor+1
 11109  14E7  083C               	movf	TM1650_fastPrintNum@num+1,w
 11110  14E8  00A3               	movwf	___lwdiv@dividend+1
 11111  14E9  083B               	movf	TM1650_fastPrintNum@num,w
 11112  14EA  00A2               	movwf	___lwdiv@dividend
 11113  14EB  3190  20DF  3194   	fcall	___lwdiv
 11114  14EE  0140               	movlb	0	; select bank0
 11115  14EF  0821               	movf	?___lwdiv+1,w
 11116  14F0  00BC               	movwf	TM1650_fastPrintNum@num+1
 11117  14F1  0820               	movf	?___lwdiv,w
 11118  14F2  00BB               	movwf	TM1650_fastPrintNum@num
 11119                           
 11120                           ;tm1650.c: 48:         }
 11121  14F3  3001               	movlw	1
 11122  14F4  07C0               	addwf	TM1650_fastPrintNum@i,f
 11123  14F5  3000               	movlw	0
 11124  14F6  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
 11125  14F7  0841               	movf	TM1650_fastPrintNum@i+1,w
 11126  14F8  3A80               	xorlw	128
 11127  14F9  00BD               	movwf	??_TM1650_fastPrintNum
 11128  14FA  3080               	movlw	128
 11129  14FB  023D               	subwf	??_TM1650_fastPrintNum,w
 11130  14FC  1D03               	skipz
 11131  14FD  2D00               	goto	u6045
 11132  14FE  3004               	movlw	4
 11133  14FF  0240               	subwf	TM1650_fastPrintNum@i,w
 11134  1500                     u6045:	
 11135  1500  1803               	btfsc	3,0
 11136  1501  0008               	return
 11137  1502  2CC4               	goto	l5631
 11138  1503                     __end_of_TM1650_fastPrintNum:	
 11139                           
 11140                           	psect	text27
 11141  1085                     __ptext27:	
 11142 ;; *************** function ___lwmod *****************
 11143 ;; Defined at:
 11144 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 11145 ;; Parameters:    Size  Location     Type
 11146 ;;  divisor         2    0[BANK0 ] unsigned int 
 11147 ;;  dividend        2    2[BANK0 ] unsigned int 
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;  counter         1    5[BANK0 ] unsigned char 
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  2    0[BANK0 ] unsigned int 
 11152 ;; Registers used:
 11153 ;;		wreg, status,2, status,0
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11161 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11162 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11163 ;;Total ram usage:        6 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; Hardware stack levels required when called:    4
 11166 ;; This function calls:
 11167 ;;		Nothing
 11168 ;; This function is called by:
 11169 ;;		_TM1650_fastPrintNum
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           
 11174                           ;psect for function ___lwmod
 11175  1085                     ___lwmod:	
 11176                           
 11177                           ;incstack = 0
 11178                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11179  1085  0140               	movlb	0	; select bank0
 11180  1086  0820               	movf	___lwmod@divisor,w
 11181  1087  0421               	iorwf	___lwmod@divisor+1,w
 11182  1088  1903               	btfsc	3,2
 11183  1089  28AD               	goto	l5471
 11184  108A  01A5               	clrf	___lwmod@counter
 11185  108B  0AA5               	incf	___lwmod@counter,f
 11186  108C                     l5461:	
 11187  108C  1BA1               	btfsc	___lwmod@divisor+1,7
 11188  108D  2898               	goto	l5463
 11189  108E  3001               	movlw	1
 11190  108F                     u5725:	
 11191  108F  35A0               	lslf	___lwmod@divisor,f
 11192  1090  0DA1               	rlf	___lwmod@divisor+1,f
 11193  1091  0B89               	decfsz	9,f
 11194  1092  288F               	goto	u5725
 11195  1093  3001               	movlw	1
 11196  1094  00A4               	movwf	??___lwmod
 11197  1095  0824               	movf	??___lwmod,w
 11198  1096  07A5               	addwf	___lwmod@counter,f
 11199  1097  288C               	goto	l5461
 11200  1098                     l5463:	
 11201  1098  0821               	movf	___lwmod@divisor+1,w
 11202  1099  0223               	subwf	___lwmod@dividend+1,w
 11203  109A  1D03               	skipz
 11204  109B  289E               	goto	u5745
 11205  109C  0820               	movf	___lwmod@divisor,w
 11206  109D  0222               	subwf	___lwmod@dividend,w
 11207  109E                     u5745:	
 11208  109E  1C03               	skipc
 11209  109F  28A4               	goto	l5467
 11210  10A0  0820               	movf	___lwmod@divisor,w
 11211  10A1  02A2               	subwf	___lwmod@dividend,f
 11212  10A2  0821               	movf	___lwmod@divisor+1,w
 11213  10A3  3BA3               	subwfb	___lwmod@dividend+1,f
 11214  10A4                     l5467:	
 11215  10A4  3001               	movlw	1
 11216  10A5                     u5755:	
 11217  10A5  36A1               	lsrf	___lwmod@divisor+1,f
 11218  10A6  0CA0               	rrf	___lwmod@divisor,f
 11219  10A7  0B89               	decfsz	9,f
 11220  10A8  28A5               	goto	u5755
 11221  10A9  3001               	movlw	1
 11222  10AA  02A5               	subwf	___lwmod@counter,f
 11223  10AB  1D03               	btfss	3,2
 11224  10AC  2898               	goto	l5463
 11225  10AD                     l5471:	
 11226  10AD  0823               	movf	___lwmod@dividend+1,w
 11227  10AE  00A1               	movwf	?___lwmod+1
 11228  10AF  0822               	movf	___lwmod@dividend,w
 11229  10B0  00A0               	movwf	?___lwmod
 11230  10B1  0008               	return
 11231  10B2                     __end_of___lwmod:	
 11232                           
 11233                           	psect	text28
 11234  1EC7                     __ptext28:	
 11235 ;; *************** function _TM1650_setDigit *****************
 11236 ;; Defined at:
 11237 ;;		line 24 in file "tm1650.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;  digit           1    wreg     unsigned char 
 11240 ;;  data            1   20[BANK0 ] unsigned char 
 11241 ;;  dp              2   21[BANK0 ] int 
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;  digit           1   26[BANK0 ] unsigned char 
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1    wreg      void 
 11246 ;; Registers used:
 11247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11253 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11255 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11256 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11257 ;;Total ram usage:        7 bytes
 11258 ;; Hardware stack levels used:    1
 11259 ;; Hardware stack levels required when called:    8
 11260 ;; This function calls:
 11261 ;;		_writeData
 11262 ;; This function is called by:
 11263 ;;		_TM1650_fastPrintNum
 11264 ;;		_MENU_task
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           
 11269                           ;psect for function _TM1650_setDigit
 11270  1EC7                     _TM1650_setDigit:	
 11271                           
 11272                           ;incstack = 0
 11273                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11274                           ;TM1650_setDigit@digit stored from wreg
 11275  1EC7  0140               	movlb	0	; select bank0
 11276  1EC8  00BA               	movwf	TM1650_setDigit@digit
 11277                           
 11278                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
 11279  1EC9  0834               	movf	TM1650_setDigit@data,w
 11280  1ECA  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 11281  1ECB  0084               	movwf	4
 11282  1ECC  3097               	movlw	high ((_charTable+65504)| (0+32768))
 11283  1ECD  1803               	skipnc
 11284  1ECE  3E01               	addlw	1
 11285  1ECF  0085               	movwf	5
 11286  1ED0  0800               	movf	0,w	;code access
 11287  1ED1  00B7               	movwf	??_TM1650_setDigit
 11288  1ED2  0835               	movf	TM1650_setDigit@dp,w
 11289  1ED3  00B8               	movwf	??_TM1650_setDigit+1
 11290  1ED4  3006               	movlw	6
 11291  1ED5                     u5635:	
 11292  1ED5  35B8               	lslf	??_TM1650_setDigit+1,f
 11293  1ED6  3EFF               	addlw	-1
 11294  1ED7  1D03               	skipz
 11295  1ED8  2ED5               	goto	u5635
 11296  1ED9  3538               	lslf	??_TM1650_setDigit+1,w
 11297  1EDA  0437               	iorwf	??_TM1650_setDigit,w
 11298  1EDB  00B9               	movwf	??_TM1650_setDigit+2
 11299  1EDC  0839               	movf	??_TM1650_setDigit+2,w
 11300  1EDD  00AE               	movwf	writeData@data
 11301  1EDE  083A               	movf	TM1650_setDigit@digit,w
 11302  1EDF  3E34               	addlw	52
 11303  1EE0  319E  26FF         	fcall	_writeData
 11304  1EE2  0008               	return
 11305  1EE3                     __end_of_TM1650_setDigit:	
 11306                           
 11307                           	psect	text29
 11308  1E50                     __ptext29:	
 11309 ;; *************** function _TM1650_enable *****************
 11310 ;; Defined at:
 11311 ;;		line 56 in file "tm1650.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;  enable          1    wreg     _Bool 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;  enable          1   20[BANK0 ] _Bool 
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      void 
 11318 ;; Registers used:
 11319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11328 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11329 ;;Total ram usage:        1 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:    8
 11332 ;; This function calls:
 11333 ;;		_writeData
 11334 ;; This function is called by:
 11335 ;;		_TM1650_init
 11336 ;;		_MENU_task
 11337 ;;		_numControl_Set
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           
 11342                           ;psect for function _TM1650_enable
 11343  1E50                     _TM1650_enable:	
 11344                           
 11345                           ;incstack = 0
 11346                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11347                           ;TM1650_enable@enable stored from wreg
 11348  1E50  0140               	movlb	0	; select bank0
 11349  1E51  00B4               	movwf	TM1650_enable@enable
 11350                           
 11351                           ;tm1650.c: 57:     if(enable) {
 11352  1E52  0834               	movf	TM1650_enable@enable,w
 11353  1E53  1903               	btfsc	3,2
 11354  1E54  2E5E               	goto	l5739
 11355                           
 11356                           ;tm1650.c: 58:         writeData(0x24, 1);
 11357  1E55  01AE               	clrf	writeData@data
 11358  1E56  0AAE               	incf	writeData@data,f
 11359  1E57  3024               	movlw	36
 11360  1E58  319E  26FF         	fcall	_writeData
 11361                           
 11362                           ;tm1650.c: 59:         isOn = 1;
 11363  1E5A  0142               	movlb	2	; select bank2
 11364  1E5B  01D5               	clrf	_isOn^(0+256)
 11365  1E5C  0AD5               	incf	_isOn^(0+256),f
 11366                           
 11367                           ;tm1650.c: 60:     } else {
 11368  1E5D  0008               	return
 11369  1E5E                     l5739:	
 11370                           
 11371                           ;tm1650.c: 61:         writeData(0x24, 0);
 11372  1E5E  01AE               	clrf	writeData@data
 11373  1E5F  3024               	movlw	36
 11374  1E60  319E  26FF         	fcall	_writeData
 11375                           
 11376                           ;tm1650.c: 62:         isOn = 0;
 11377  1E62  0142               	movlb	2	; select bank2
 11378  1E63  01D5               	clrf	_isOn^(0+256)
 11379  1E64  0008               	return
 11380  1E65                     __end_of_TM1650_enable:	
 11381                           
 11382                           	psect	text30
 11383  1EFF                     __ptext30:	
 11384 ;; *************** function _writeData *****************
 11385 ;; Defined at:
 11386 ;;		line 18 in file "tm1650.c"
 11387 ;; Parameters:    Size  Location     Type
 11388 ;;  address         1    wreg     unsigned char 
 11389 ;;  data            1   14[BANK0 ] unsigned char 
 11390 ;; Auto vars:     Size  Location     Type
 11391 ;;  address         1   18[BANK0 ] unsigned char 
 11392 ;;  status          1   19[BANK0 ] volatile enum E10866
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  1    wreg      void 
 11395 ;; Registers used:
 11396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/0
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11402 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11403 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11404 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11405 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11406 ;;Total ram usage:        6 bytes
 11407 ;; Hardware stack levels used:    1
 11408 ;; Hardware stack levels required when called:    7
 11409 ;; This function calls:
 11410 ;;		_I2C1_MasterWrite
 11411 ;; This function is called by:
 11412 ;;		_TM1650_setDigit
 11413 ;;		_TM1650_enable
 11414 ;; This function uses a non-reentrant model
 11415 ;;
 11416                           
 11417                           
 11418                           ;psect for function _writeData
 11419  1EFF                     _writeData:	
 11420                           
 11421                           ;incstack = 0
 11422                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11423                           ;writeData@address stored from wreg
 11424  1EFF  0140               	movlb	0	; select bank0
 11425  1F00  00B2               	movwf	writeData@address
 11426                           
 11427                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11428  1F01  3002               	movlw	2
 11429  1F02  00AF               	movwf	??_writeData
 11430  1F03  082F               	movf	??_writeData,w
 11431  1F04  00B3               	movwf	writeData@status	;volatile
 11432                           
 11433                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
 11434  1F05  01A7               	clrf	I2C1_MasterWrite@length
 11435  1F06  0AA7               	incf	I2C1_MasterWrite@length,f
 11436  1F07  0832               	movf	writeData@address,w
 11437  1F08  00AF               	movwf	??_writeData
 11438  1F09  01B0               	clrf	??_writeData+1
 11439  1F0A  082F               	movf	??_writeData,w
 11440  1F0B  00A8               	movwf	I2C1_MasterWrite@address
 11441  1F0C  0830               	movf	??_writeData+1,w
 11442  1F0D  00A9               	movwf	I2C1_MasterWrite@address+1
 11443  1F0E  3033               	movlw	(low (writeData@status| 0))& (0+255)
 11444  1F0F  00B1               	movwf	??_writeData+2
 11445  1F10  0831               	movf	??_writeData+2,w
 11446  1F11  00AA               	movwf	I2C1_MasterWrite@pflag
 11447  1F12  302E               	movlw	(low (writeData@data| 0))& (0+255)
 11448  1F13  3190  205B  319E   	fcall	_I2C1_MasterWrite
 11449  1F16                     l5409:	
 11450                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
 11451                           
 11452  1F16  3002               	movlw	2
 11453  1F17  0140               	movlb	0	; select bank0
 11454  1F18  0633               	xorwf	writeData@status,w	;volatile
 11455  1F19  1D03               	btfss	3,2
 11456  1F1A  0008               	return
 11457  1F1B  2F16               	goto	l5409
 11458  1F1C                     __end_of_writeData:	
 11459                           
 11460                           	psect	text31
 11461  105B                     __ptext31:	
 11462 ;; *************** function _I2C1_MasterWrite *****************
 11463 ;; Defined at:
 11464 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 11465 ;; Parameters:    Size  Location     Type
 11466 ;;  pdata           1    wreg     PTR unsigned char 
 11467 ;;		 -> writeData@data(1), 
 11468 ;;  length          1    7[BANK0 ] unsigned char 
 11469 ;;  address         2    8[BANK0 ] unsigned short 
 11470 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 11471 ;;		 -> writeData@status(1), 
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 11474 ;;		 -> writeData@data(1), 
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 0/0
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11484 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11485 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11487 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11488 ;;Total ram usage:        7 bytes
 11489 ;; Hardware stack levels used:    1
 11490 ;; Hardware stack levels required when called:    6
 11491 ;; This function calls:
 11492 ;;		_I2C1_MasterTRBInsert
 11493 ;;		_I2C1_MasterWriteTRBBuild
 11494 ;; This function is called by:
 11495 ;;		_writeData
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           
 11500                           ;psect for function _I2C1_MasterWrite
 11501  105B                     _I2C1_MasterWrite:	
 11502                           
 11503                           ;incstack = 0
 11504                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11505                           ;I2C1_MasterWrite@pdata stored from wreg
 11506  105B  0140               	movlb	0	; select bank0
 11507  105C  00AD               	movwf	I2C1_MasterWrite@pdata
 11508                           
 11509                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 11510  105D  0142               	movlb	2	; select bank2
 11511  105E  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 11512  105F  287E               	goto	l5403
 11513                           
 11514                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 11515  1060  0140               	movlb	0	; select bank0
 11516  1061  082D               	movf	I2C1_MasterWrite@pdata,w
 11517  1062  00AB               	movwf	??_I2C1_MasterWrite
 11518  1063  082B               	movf	??_I2C1_MasterWrite,w
 11519  1064  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 11520  1065  0827               	movf	I2C1_MasterWrite@length,w
 11521  1066  00AC               	movwf	??_I2C1_MasterWrite+1
 11522  1067  082C               	movf	??_I2C1_MasterWrite+1,w
 11523  1068  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 11524  1069  0829               	movf	I2C1_MasterWrite@address+1,w
 11525  106A  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 11526  106B  0828               	movf	I2C1_MasterWrite@address,w
 11527  106C  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 11528  106D  30C6               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 11529  106E  319F  27B9  3190   	fcall	_I2C1_MasterWriteTRBBuild
 11530                           
 11531                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 11532  1071  30C6               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 11533  1072  0140               	movlb	0	; select bank0
 11534  1073  00AB               	movwf	??_I2C1_MasterWrite
 11535  1074  082B               	movf	??_I2C1_MasterWrite,w
 11536  1075  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 11537  1076  082A               	movf	I2C1_MasterWrite@pflag,w
 11538  1077  00AC               	movwf	??_I2C1_MasterWrite+1
 11539  1078  082C               	movf	??_I2C1_MasterWrite+1,w
 11540  1079  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 11541  107A  3001               	movlw	1
 11542  107B  3187  279E         	fcall	_I2C1_MasterTRBInsert
 11543                           
 11544                           ;mcc_generated_files/i2c1.c: 613:     }
 11545  107D  0008               	return
 11546  107E                     l5403:	
 11547                           
 11548                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11549  107E  0140               	movlb	0	; select bank0
 11550  107F  082A               	movf	I2C1_MasterWrite@pflag,w
 11551  1080  0086               	movwf	6
 11552  1081  0187               	clrf	7
 11553  1082  0181               	clrf	1
 11554  1083  0A81               	incf	1,f
 11555  1084  0008               	return
 11556  1085                     __end_of_I2C1_MasterWrite:	
 11557                           
 11558                           	psect	text32
 11559  1FB9                     __ptext32:	
 11560 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 11561 ;; Defined at:
 11562 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;  ptrb            1    wreg     PTR struct .
 11565 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11566 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 11567 ;;		 -> writeData@data(1), 
 11568 ;;  length          1    1[BANK0 ] unsigned char 
 11569 ;;  address         2    2[BANK0 ] unsigned short 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;  ptrb            1    6[BANK0 ] PTR struct .
 11572 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11573 ;; Return value:  Size  Location     Type
 11574 ;;                  1    wreg      void 
 11575 ;; Registers used:
 11576 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11577 ;; Tracked objects:
 11578 ;;		On entry : 0/0
 11579 ;;		On exit  : 0/0
 11580 ;;		Unchanged: 0/0
 11581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11585 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11586 ;;Total ram usage:        7 bytes
 11587 ;; Hardware stack levels used:    1
 11588 ;; Hardware stack levels required when called:    4
 11589 ;; This function calls:
 11590 ;;		Nothing
 11591 ;; This function is called by:
 11592 ;;		_I2C1_MasterWrite
 11593 ;; This function uses a non-reentrant model
 11594 ;;
 11595                           
 11596                           
 11597                           ;psect for function _I2C1_MasterWriteTRBBuild
 11598  1FB9                     _I2C1_MasterWriteTRBBuild:	
 11599                           
 11600                           ;incstack = 0
 11601                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 11602                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 11603  1FB9  0140               	movlb	0	; select bank0
 11604  1FBA  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 11605                           
 11606                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 11607  1FBB  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 11608  1FBC  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 11609  1FBD  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 11610  1FBE  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11611  1FBF  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 11612  1FC0  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 11613  1FC1  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11614  1FC2  0086               	movwf	6
 11615  1FC3  3001               	movlw	1	; select bank2/3
 11616  1FC4  0087               	movwf	7
 11617  1FC5  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11618  1FC6  3FC0               	movwi [0]fsr1
 11619  1FC7  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 11620  1FC8  3FC1               	movwi [1]fsr1
 11621                           
 11622                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 11623  1FC9  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 11624  1FCA  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11625  1FCB  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11626  1FCC  3E02               	addlw	2
 11627  1FCD  0086               	movwf	6
 11628  1FCE  3001               	movlw	1	; select bank2/3
 11629  1FCF  0087               	movwf	7
 11630  1FD0  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11631  1FD1  0081               	movwf	1
 11632                           
 11633                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 11634  1FD2  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 11635  1FD3  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11636  1FD4  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11637  1FD5  3E03               	addlw	3
 11638  1FD6  0086               	movwf	6
 11639  1FD7  3001               	movlw	1	; select bank2/3
 11640  1FD8  0087               	movwf	7
 11641  1FD9  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11642  1FDA  0081               	movwf	1
 11643  1FDB  0008               	return
 11644  1FDC                     __end_of_I2C1_MasterWriteTRBBuild:	
 11645                           
 11646                           	psect	text33
 11647  079E                     __ptext33:	
 11648 ;; *************** function _I2C1_MasterTRBInsert *****************
 11649 ;; Defined at:
 11650 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 11651 ;; Parameters:    Size  Location     Type
 11652 ;;  count           1    wreg     unsigned char 
 11653 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 11654 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 11655 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 11656 ;;		 -> writeData@status(1), 
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;  count           1    3[BANK0 ] unsigned char 
 11659 ;; Return value:  Size  Location     Type
 11660 ;;                  1    wreg      void 
 11661 ;; Registers used:
 11662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11663 ;; Tracked objects:
 11664 ;;		On entry : 0/0
 11665 ;;		On exit  : 0/0
 11666 ;;		Unchanged: 0/0
 11667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11668 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11670 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11671 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11672 ;;Total ram usage:        4 bytes
 11673 ;; Hardware stack levels used:    1
 11674 ;; Hardware stack levels required when called:    5
 11675 ;; This function calls:
 11676 ;;		_I2C1_WaitForLastPacketToComplete
 11677 ;; This function is called by:
 11678 ;;		_I2C1_MasterWrite
 11679 ;;		_I2C1_MasterRead
 11680 ;; This function uses a non-reentrant model
 11681 ;;
 11682                           
 11683                           
 11684                           ;psect for function _I2C1_MasterTRBInsert
 11685  079E                     _I2C1_MasterTRBInsert:	
 11686                           
 11687                           ;incstack = 0
 11688                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11689                           ;I2C1_MasterTRBInsert@count stored from wreg
 11690  079E  0140               	movlb	0	; select bank0
 11691  079F  00A3               	movwf	I2C1_MasterTRBInsert@count
 11692                           
 11693                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 11694  07A0  0142               	movlb	2	; select bank2
 11695  07A1  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 11696  07A2  2FE0               	goto	l5391
 11697                           
 11698                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 11699  07A3  3002               	movlw	2
 11700  07A4  0140               	movlb	0	; select bank0
 11701  07A5  00A2               	movwf	??_I2C1_MasterTRBInsert
 11702  07A6  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11703  07A7  0086               	movwf	6
 11704  07A8  0187               	clrf	7
 11705  07A9  0822               	movf	??_I2C1_MasterTRBInsert,w
 11706  07AA  0081               	movwf	1
 11707                           
 11708                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11709  07AB  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 11710  07AC  00A2               	movwf	??_I2C1_MasterTRBInsert
 11711  07AD  0142               	movlb	2	; select bank2
 11712  07AE  0A20               	incf	_i2c1_object^(0+256),w
 11713  07AF  0086               	movwf	6
 11714  07B0  3001               	movlw	1	; select bank2/3
 11715  07B1  0087               	movwf	7
 11716  07B2  0140               	movlb	0	; select bank0
 11717  07B3  0822               	movf	??_I2C1_MasterTRBInsert,w
 11718  07B4  0081               	movwf	1
 11719                           
 11720                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 11721  07B5  0823               	movf	I2C1_MasterTRBInsert@count,w
 11722  07B6  00A2               	movwf	??_I2C1_MasterTRBInsert
 11723  07B7  0142               	movlb	2	; select bank2
 11724  07B8  0820               	movf	_i2c1_object^(0+256),w
 11725  07B9  0086               	movwf	6
 11726  07BA  3001               	movlw	1	; select bank2/3
 11727  07BB  0087               	movwf	7
 11728  07BC  0140               	movlb	0	; select bank0
 11729  07BD  0822               	movf	??_I2C1_MasterTRBInsert,w
 11730  07BE  0081               	movwf	1
 11731                           
 11732                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 11733  07BF  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11734  07C0  00A2               	movwf	??_I2C1_MasterTRBInsert
 11735  07C1  0142               	movlb	2	; select bank2
 11736  07C2  0820               	movf	_i2c1_object^(0+256),w
 11737  07C3  3E02               	addlw	2
 11738  07C4  0086               	movwf	6
 11739  07C5  3001               	movlw	1	; select bank2/3
 11740  07C6  0087               	movwf	7
 11741  07C7  0140               	movlb	0	; select bank0
 11742  07C8  0822               	movf	??_I2C1_MasterTRBInsert,w
 11743  07C9  0081               	movwf	1
 11744                           
 11745                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 11746  07CA  3003               	movlw	3
 11747  07CB  00A2               	movwf	??_I2C1_MasterTRBInsert
 11748  07CC  0822               	movf	??_I2C1_MasterTRBInsert,w
 11749  07CD  0142               	movlb	2	; select bank2
 11750  07CE  07A0               	addwf	_i2c1_object^(0+256),f
 11751                           
 11752                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 11753  07CF  0820               	movf	_i2c1_object^(0+256),w
 11754  07D0  3A5E               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 11755  07D1  1D03               	skipz
 11756  07D2  2FD9               	goto	l5387
 11757                           
 11758                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 11759  07D3  305B               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 11760  07D4  0140               	movlb	0	; select bank0
 11761  07D5  00A2               	movwf	??_I2C1_MasterTRBInsert
 11762  07D6  0822               	movf	??_I2C1_MasterTRBInsert,w
 11763  07D7  0142               	movlb	2	; select bank2
 11764  07D8  00A0               	movwf	_i2c1_object^(0+256)
 11765  07D9                     l5387:	
 11766                           
 11767                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 11768  07D9  10A2               	bcf	(_i2c1_object^(0+256)+2),1
 11769                           
 11770                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 11771  07DA  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 11772  07DB  0620               	xorwf	_i2c1_object^(0+256),w
 11773  07DC  1D03               	skipz
 11774  07DD  2FE6               	goto	l5393
 11775                           
 11776                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 11777  07DE  1422               	bsf	(_i2c1_object^(0+256)+2),0
 11778  07DF  2FE6               	goto	l5393
 11779  07E0                     l5391:	
 11780                           
 11781                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11782  07E0  0140               	movlb	0	; select bank0
 11783  07E1  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11784  07E2  0086               	movwf	6
 11785  07E3  0187               	clrf	7
 11786  07E4  0181               	clrf	1
 11787  07E5  0A81               	incf	1,f
 11788  07E6                     l5393:	
 11789                           
 11790                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 11791  07E6  0140               	movlb	0	; select bank0
 11792  07E7  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11793  07E8  0086               	movwf	6
 11794  07E9  0187               	clrf	7
 11795  07EA  3002               	movlw	2
 11796  07EB  0601               	xorwf	1,w
 11797  07EC  1D03               	btfss	3,2
 11798  07ED  0008               	return
 11799                           
 11800                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 11801  07EE  319D  254D         	fcall	_I2C1_WaitForLastPacketToComplete
 11802                           
 11803                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 11804  07F0  014E               	movlb	14	; select bank14
 11805  07F1  140F               	bsf	15,0	;volatile
 11806  07F2  0008               	return
 11807  07F3                     __end_of_I2C1_MasterTRBInsert:	
 11808                           
 11809                           	psect	text34
 11810  1D4D                     __ptext34:	
 11811 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 11812 ;; Defined at:
 11813 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;		None
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;		None
 11818 ;; Return value:  Size  Location     Type
 11819 ;;                  1    wreg      void 
 11820 ;; Registers used:
 11821 ;;		wreg, status,2, status,0
 11822 ;; Tracked objects:
 11823 ;;		On entry : 0/0
 11824 ;;		On exit  : 0/0
 11825 ;;		Unchanged: 0/0
 11826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11831 ;;Total ram usage:        0 bytes
 11832 ;; Hardware stack levels used:    1
 11833 ;; Hardware stack levels required when called:    4
 11834 ;; This function calls:
 11835 ;;		Nothing
 11836 ;; This function is called by:
 11837 ;;		_I2C1_MasterTRBInsert
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           
 11842                           ;psect for function _I2C1_WaitForLastPacketToComplete
 11843  1D4D                     _I2C1_WaitForLastPacketToComplete:	
 11844  1D4D                     l5373:	
 11845                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11846                           
 11847                           ;incstack = 0
 11848                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 11849                           
 11850                           
 11851                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11852  1D4D  0141               	movlb	1	; select bank1
 11853  1D4E  086C               	movf	_i2c1_state^(0+128),w
 11854  1D4F  1903               	btfsc	3,2
 11855  1D50  0008               	return
 11856  1D51  2D4D               	goto	l5373
 11857  1D52                     __end_of_I2C1_WaitForLastPacketToComplete:	
 11858                           
 11859                           	psect	text35
 11860  1F98                     __ptext35:	
 11861 ;; *************** function _BUTTONS_isClicked *****************
 11862 ;; Defined at:
 11863 ;;		line 74 in file "buttons.c"
 11864 ;; Parameters:    Size  Location     Type
 11865 ;;  button          1    wreg     PTR struct .
 11866 ;;		 -> buttons(32), NULL(0), 
 11867 ;; Auto vars:     Size  Location     Type
 11868 ;;  button          1    3[BANK0 ] PTR struct .
 11869 ;;		 -> buttons(32), NULL(0), 
 11870 ;; Return value:  Size  Location     Type
 11871 ;;                  2    0[BANK0 ] int 
 11872 ;; Registers used:
 11873 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11874 ;; Tracked objects:
 11875 ;;		On entry : 0/0
 11876 ;;		On exit  : 0/0
 11877 ;;		Unchanged: 0/0
 11878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11879 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11883 ;;Total ram usage:        4 bytes
 11884 ;; Hardware stack levels used:    1
 11885 ;; Hardware stack levels required when called:    4
 11886 ;; This function calls:
 11887 ;;		Nothing
 11888 ;; This function is called by:
 11889 ;;		_menuButtons
 11890 ;;		_numControl_Set
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           
 11894                           
 11895                           ;psect for function _BUTTONS_isClicked
 11896  1F98                     _BUTTONS_isClicked:	
 11897                           
 11898                           ;incstack = 0
 11899                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 11900                           ;BUTTONS_isClicked@button stored from wreg
 11901  1F98  0140               	movlb	0	; select bank0
 11902  1F99  00A3               	movwf	BUTTONS_isClicked@button
 11903                           
 11904                           ;buttons.c: 75:     if (button->event == EVENT_PRESSED) {
 11905  1F9A  0823               	movf	BUTTONS_isClicked@button,w
 11906  1F9B  3E05               	addlw	5
 11907  1F9C  0086               	movwf	6
 11908  1F9D  3002               	movlw	2	; select bank4/5
 11909  1F9E  0087               	movwf	7
 11910  1F9F  0301               	decf	1,w
 11911  1FA0  1D03               	btfss	3,2
 11912  1FA1  2FAD               	goto	l5753
 11913                           
 11914                           ;buttons.c: 76:         button->event = EVENT_IDLE;
 11915  1FA2  0823               	movf	BUTTONS_isClicked@button,w
 11916  1FA3  3E05               	addlw	5
 11917  1FA4  0086               	movwf	6
 11918  1FA5  3002               	movlw	2	; select bank4/5
 11919  1FA6  0087               	movwf	7
 11920  1FA7  0181               	clrf	1
 11921  1FA8                     l5747:	
 11922                           
 11923                           ;buttons.c: 77:         return 1;
 11924  1FA8  3001               	movlw	1
 11925  1FA9  00A0               	movwf	?_BUTTONS_isClicked
 11926  1FAA  3000               	movlw	0
 11927  1FAB  00A1               	movwf	?_BUTTONS_isClicked+1
 11928  1FAC  0008               	return
 11929  1FAD                     l5753:	
 11930  1FAD  0823               	movf	BUTTONS_isClicked@button,w
 11931  1FAE  3E05               	addlw	5
 11932  1FAF  0086               	movwf	6
 11933  1FB0  3002               	movlw	2	; select bank4/5
 11934  1FB1  0087               	movwf	7
 11935  1FB2  3002               	movlw	2
 11936  1FB3  0601               	xorwf	1,w
 11937  1FB4  1903               	btfsc	3,2
 11938  1FB5  2FA8               	goto	l5747
 11939                           
 11940                           ;buttons.c: 81:     return 0;
 11941  1FB6  01A0               	clrf	?_BUTTONS_isClicked
 11942  1FB7  01A1               	clrf	?_BUTTONS_isClicked+1
 11943  1FB8  0008               	return
 11944  1FB9                     __end_of_BUTTONS_isClicked:	
 11945                           
 11946                           	psect	text36
 11947  12EB                     __ptext36:	
 11948 ;; *************** function _LED_DMX *****************
 11949 ;; Defined at:
 11950 ;;		line 140 in file "led.c"
 11951 ;; Parameters:    Size  Location     Type
 11952 ;;		None
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;		None
 11955 ;; Return value:  Size  Location     Type
 11956 ;;                  1    wreg      void 
 11957 ;; Registers used:
 11958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11959 ;; Tracked objects:
 11960 ;;		On entry : 0/0
 11961 ;;		On exit  : 0/0
 11962 ;;		Unchanged: 0/0
 11963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11966 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11967 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11968 ;;Total ram usage:       11 bytes
 11969 ;; Hardware stack levels used:    1
 11970 ;; Hardware stack levels required when called:    5
 11971 ;; This function calls:
 11972 ;;		_LED_setColor
 11973 ;; This function is called by:
 11974 ;;		_MENU_task
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           
 11979                           ;psect for function _LED_DMX
 11980  12EB                     _LED_DMX:	
 11981                           
 11982                           ;led.c: 141:     LED_setColor(dmxData[address+1], dmxData[address+2], dmxData[address+3]
      +                          , dmxData[address+4]);
 11983                           
 11984                           ;incstack = 0
 11985                           ; Regs used in _LED_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11986  12EB  30F1               	movlw	241
 11987  12EC  0140               	movlb	0	; select bank0
 11988  12ED  00B6               	movwf	??_LED_DMX
 11989  12EE  3025               	movlw	37
 11990  12EF  00B7               	movwf	??_LED_DMX+1
 11991  12F0  0141               	movlb	1	; select bank1
 11992  12F1  086E               	movf	_address^(0+128),w
 11993  12F2  0140               	movlb	0	; select bank0
 11994  12F3  0736               	addwf	??_LED_DMX,w
 11995  12F4  0086               	movwf	6
 11996  12F5  0141               	movlb	1	; select bank1
 11997  12F6  086F               	movf	(_address+1)^(0+128),w
 11998  12F7  0140               	movlb	0	; select bank0
 11999  12F8  3D37               	addwfc	??_LED_DMX+1,w
 12000  12F9  0087               	movwf	7
 12001  12FA  0801               	movf	1,w
 12002  12FB  00B8               	movwf	??_LED_DMX+2
 12003  12FC  0838               	movf	??_LED_DMX+2,w
 12004  12FD  00A0               	movwf	LED_setColor@green
 12005  12FE  30F2               	movlw	242
 12006  12FF  00B9               	movwf	??_LED_DMX+3
 12007  1300  3025               	movlw	37
 12008  1301  00BA               	movwf	??_LED_DMX+4
 12009  1302  0141               	movlb	1	; select bank1
 12010  1303  086E               	movf	_address^(0+128),w
 12011  1304  0140               	movlb	0	; select bank0
 12012  1305  0739               	addwf	??_LED_DMX+3,w
 12013  1306  0086               	movwf	6
 12014  1307  0141               	movlb	1	; select bank1
 12015  1308  086F               	movf	(_address+1)^(0+128),w
 12016  1309  0140               	movlb	0	; select bank0
 12017  130A  3D3A               	addwfc	??_LED_DMX+4,w
 12018  130B  0087               	movwf	7
 12019  130C  0801               	movf	1,w
 12020  130D  00BB               	movwf	??_LED_DMX+5
 12021  130E  083B               	movf	??_LED_DMX+5,w
 12022  130F  00A1               	movwf	LED_setColor@white
 12023  1310  30F3               	movlw	243
 12024  1311  00BC               	movwf	??_LED_DMX+6
 12025  1312  3025               	movlw	37
 12026  1313  00BD               	movwf	??_LED_DMX+7
 12027  1314  0141               	movlb	1	; select bank1
 12028  1315  086E               	movf	_address^(0+128),w
 12029  1316  0140               	movlb	0	; select bank0
 12030  1317  073C               	addwf	??_LED_DMX+6,w
 12031  1318  0086               	movwf	6
 12032  1319  0141               	movlb	1	; select bank1
 12033  131A  086F               	movf	(_address+1)^(0+128),w
 12034  131B  0140               	movlb	0	; select bank0
 12035  131C  3D3D               	addwfc	??_LED_DMX+7,w
 12036  131D  0087               	movwf	7
 12037  131E  0801               	movf	1,w
 12038  131F  00BE               	movwf	??_LED_DMX+8
 12039  1320  083E               	movf	??_LED_DMX+8,w
 12040  1321  00A2               	movwf	LED_setColor@blue
 12041  1322  30F0               	movlw	240
 12042  1323  00BF               	movwf	??_LED_DMX+9
 12043  1324  3025               	movlw	37
 12044  1325  00C0               	movwf	??_LED_DMX+10
 12045  1326  0141               	movlb	1	; select bank1
 12046  1327  086E               	movf	_address^(0+128),w
 12047  1328  0140               	movlb	0	; select bank0
 12048  1329  073F               	addwf	??_LED_DMX+9,w
 12049  132A  0086               	movwf	6
 12050  132B  0141               	movlb	1	; select bank1
 12051  132C  086F               	movf	(_address+1)^(0+128),w
 12052  132D  0140               	movlb	0	; select bank0
 12053  132E  3D40               	addwfc	??_LED_DMX+10,w
 12054  132F  0087               	movwf	7
 12055  1330  0801               	movf	1,w
 12056  1331  3192  2220         	fcall	_LED_setColor
 12057  1333  0008               	return
 12058  1334                     __end_of_LED_DMX:	
 12059                           
 12060                           	psect	text37
 12061  1E04                     __ptext37:	
 12062 ;; *************** function _LED_Beat *****************
 12063 ;; Defined at:
 12064 ;;		line 144 in file "led.c"
 12065 ;; Parameters:    Size  Location     Type
 12066 ;;		None
 12067 ;; Auto vars:     Size  Location     Type
 12068 ;;		None
 12069 ;; Return value:  Size  Location     Type
 12070 ;;                  1    wreg      void 
 12071 ;; Registers used:
 12072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12073 ;; Tracked objects:
 12074 ;;		On entry : 0/0
 12075 ;;		On exit  : 0/0
 12076 ;;		Unchanged: 0/0
 12077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12082 ;;Total ram usage:        0 bytes
 12083 ;; Hardware stack levels used:    1
 12084 ;; Hardware stack levels required when called:    9
 12085 ;; This function calls:
 12086 ;;		_BEAT_detected
 12087 ;;		_fadeColor
 12088 ;; This function is called by:
 12089 ;;		_MENU_task
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           
 12094                           ;psect for function _LED_Beat
 12095  1E04                     _LED_Beat:	
 12096                           
 12097                           ;led.c: 145:     if(BEAT_detected()) {
 12098                           
 12099                           ;incstack = 0
 12100                           ; Regs used in _LED_Beat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12101  1E04  319D  258D  319E   	fcall	_BEAT_detected
 12102  1E07  3A00               	xorlw	0
 12103  1E08  1903               	skipnz
 12104  1E09  2E0D               	goto	l6145
 12105                           
 12106                           ;led.c: 146:         changeColor = 1;
 12107  1E0A  0142               	movlb	2	; select bank2
 12108  1E0B  01CB               	clrf	_changeColor^(0+256)
 12109  1E0C  0ACB               	incf	_changeColor^(0+256),f
 12110  1E0D                     l6145:	
 12111                           
 12112                           ;led.c: 148:     if(changeColor) {
 12113  1E0D  0142               	movlb	2	; select bank2
 12114  1E0E  084B               	movf	_changeColor^(0+256),w
 12115  1E0F  1903               	btfsc	3,2
 12116  1E10  0008               	return
 12117                           
 12118                           ;led.c: 149:         fadeColor();
 12119  1E11  3193  237F         	fcall	_fadeColor
 12120  1E13  0008               	return
 12121  1E14                     __end_of_LED_Beat:	
 12122                           
 12123                           	psect	text38
 12124  137F                     __ptext38:	
 12125 ;; *************** function _fadeColor *****************
 12126 ;; Defined at:
 12127 ;;		line 116 in file "led.c"
 12128 ;; Parameters:    Size  Location     Type
 12129 ;;		None
 12130 ;; Auto vars:     Size  Location     Type
 12131 ;;  time            2   60[BANK1 ] unsigned short 
 12132 ;; Return value:  Size  Location     Type
 12133 ;;                  1    wreg      void 
 12134 ;; Registers used:
 12135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12136 ;; Tracked objects:
 12137 ;;		On entry : 0/0
 12138 ;;		On exit  : 0/0
 12139 ;;		Unchanged: 0/0
 12140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12142 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12143 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12144 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12145 ;;Total ram usage:        4 bytes
 12146 ;; Hardware stack levels used:    1
 12147 ;; Hardware stack levels required when called:    8
 12148 ;; This function calls:
 12149 ;;		_CLOCK_getTime
 12150 ;;		_LED_setHSL
 12151 ;; This function is called by:
 12152 ;;		_LED_Beat
 12153 ;; This function uses a non-reentrant model
 12154 ;;
 12155                           
 12156                           
 12157                           ;psect for function _fadeColor
 12158  137F                     _fadeColor:	
 12159                           
 12160                           ;led.c: 117:     time_t time = CLOCK_getTime();
 12161                           
 12162                           ;incstack = 0
 12163                           ; Regs used in _fadeColor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12164  137F  319D  257B  3193   	fcall	_CLOCK_getTime
 12165  1382  0140               	movlb	0	; select bank0
 12166  1383  0821               	movf	?_CLOCK_getTime+1,w
 12167  1384  0141               	movlb	1	; select bank1
 12168  1385  00DD               	movwf	(fadeColor@time+1)^(0+128)
 12169  1386  0140               	movlb	0	; select bank0
 12170  1387  0820               	movf	?_CLOCK_getTime,w
 12171  1388  0141               	movlb	1	; select bank1
 12172  1389  00DC               	movwf	fadeColor@time^(0+128)
 12173                           
 12174                           ;led.c: 119:     if (time - lastTime < 10)
 12175  138A  0142               	movlb	2	; select bank2
 12176  138B  0837               	movf	led@lastTime^(0+256),w
 12177  138C  0141               	movlb	1	; select bank1
 12178  138D  025C               	subwf	fadeColor@time^(0+128),w
 12179  138E  00DA               	movwf	??_fadeColor^(0+128)
 12180  138F  0142               	movlb	2	; select bank2
 12181  1390  0838               	movf	(led@lastTime+1)^(0+256),w
 12182  1391  0141               	movlb	1	; select bank1
 12183  1392  3B5D               	subwfb	(fadeColor@time+1)^(0+128),w
 12184  1393  00DB               	movwf	(??_fadeColor+1)^(0+128)
 12185  1394  3000               	movlw	0
 12186  1395  025B               	subwf	(??_fadeColor+1)^(0+128),w
 12187  1396  300A               	movlw	10
 12188  1397  1903               	skipnz
 12189  1398  025A               	subwf	??_fadeColor^(0+128),w
 12190  1399  1C03               	btfss	3,0
 12191  139A  0008               	return
 12192                           
 12193                           ;led.c: 122:     lastTime = time;
 12194  139B  085D               	movf	(fadeColor@time+1)^(0+128),w
 12195  139C  0142               	movlb	2	; select bank2
 12196  139D  00B8               	movwf	(led@lastTime+1)^(0+256)
 12197  139E  0141               	movlb	1	; select bank1
 12198  139F  085C               	movf	fadeColor@time^(0+128),w
 12199  13A0  0142               	movlb	2	; select bank2
 12200  13A1  00B7               	movwf	led@lastTime^(0+256)
 12201                           
 12202                           ;led.c: 124:     if(color.H == 360) {
 12203  13A2  3068               	movlw	104
 12204  13A3  0143               	movlb	3	; select bank3
 12205  13A4  0654               	xorwf	_color^(0+384),w
 12206  13A5  1D03               	skipz
 12207  13A6  2BAD               	goto	l5855
 12208  13A7  0355               	decf	(_color+1)^(0+384),w
 12209  13A8  1D03               	btfss	3,2
 12210  13A9  2BAD               	goto	l5855
 12211                           
 12212                           ;led.c: 125:         color.H = 0;
 12213  13AA  01D4               	clrf	_color^(0+384)
 12214  13AB  01D5               	clrf	(_color+1)^(0+384)
 12215                           
 12216                           ;led.c: 126:     } else {
 12217  13AC  2BB1               	goto	l1000
 12218  13AD                     l5855:	
 12219                           
 12220                           ;led.c: 127:         color.H += 1;
 12221  13AD  3001               	movlw	1
 12222  13AE  07D4               	addwf	_color^(0+384),f
 12223  13AF  3000               	movlw	0
 12224  13B0  3DD5               	addwfc	(_color+1)^(0+384),f
 12225  13B1                     l1000:	
 12226                           ;led.c: 128:     }
 12227                           
 12228                           
 12229                           ;led.c: 129:     fadeAmmount -= 1;
 12230  13B1  30FF               	movlw	255
 12231  13B2  0142               	movlb	2	; select bank2
 12232  13B3  07DE               	addwf	_fadeAmmount^(0+256),f
 12233  13B4  30FF               	movlw	255
 12234  13B5  3DDF               	addwfc	(_fadeAmmount+1)^(0+256),f
 12235                           
 12236                           ;led.c: 130:     if(fadeAmmount == 0) {
 12237  13B6  085E               	movf	_fadeAmmount^(0+256),w
 12238  13B7  045F               	iorwf	(_fadeAmmount+1)^(0+256),w
 12239  13B8  1D03               	btfss	3,2
 12240  13B9  2BBF               	goto	l5863
 12241                           
 12242                           ;led.c: 131:         fadeAmmount = 20;
 12243  13BA  3014               	movlw	20
 12244  13BB  00DE               	movwf	_fadeAmmount^(0+256)
 12245  13BC  3000               	movlw	0
 12246  13BD  00DF               	movwf	(_fadeAmmount^(0+256)+1)
 12247                           
 12248                           ;led.c: 132:         changeColor = 0;
 12249  13BE  01CB               	clrf	_changeColor^(0+256)
 12250  13BF                     l5863:	
 12251                           
 12252                           ;led.c: 134:     LED_setHSL(color);
 12253  13BF  30D4               	movlw	low _color
 12254  13C0  0086               	movwf	6
 12255  13C1  3001               	movlw	high _color
 12256  13C2  0087               	movwf	7
 12257  13C3  30AF               	movlw	low LED_setHSL@hsl
 12258  13C4  0084               	movwf	4
 12259  13C5  3000               	movlw	high LED_setHSL@hsl
 12260  13C6  0085               	movwf	5
 12261  13C7  300A               	movlw	10
 12262  13C8  0141               	movlb	1	; select bank1
 12263  13C9  00DA               	movwf	??_fadeColor^(0+128)
 12264  13CA                     u6310:	
 12265  13CA  0016               	moviw fsr1++
 12266  13CB  001A               	movwi fsr0++
 12267  13CC  0BDA               	decfsz	??_fadeColor^(0+128),f
 12268  13CD  2BCA               	goto	u6310
 12269  13CE  3180  209A         	fcall	_LED_setHSL
 12270  13D0  0008               	return
 12271  13D1                     __end_of_fadeColor:	
 12272                           
 12273                           	psect	text39
 12274  009A                     __ptext39:	
 12275 ;; *************** function _LED_setHSL *****************
 12276 ;; Defined at:
 12277 ;;		line 87 in file "led.c"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;  hsl            10   15[BANK1 ] struct HSL
 12280 ;; Auto vars:     Size  Location     Type
 12281 ;;  v2              4   51[BANK1 ] float 
 12282 ;;  hue             4   47[BANK1 ] float 
 12283 ;;  v1              4   43[BANK1 ] float 
 12284 ;;  rgb             3   55[BANK1 ] struct RGB
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  1    wreg      void 
 12287 ;; Registers used:
 12288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12289 ;; Tracked objects:
 12290 ;;		On entry : 0/0
 12291 ;;		On exit  : 0/0
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12294 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12295 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12296 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12297 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12298 ;;Total ram usage:       43 bytes
 12299 ;; Hardware stack levels used:    1
 12300 ;; Hardware stack levels required when called:    7
 12301 ;; This function calls:
 12302 ;;		_HueToRGB
 12303 ;;		_LED_setColor
 12304 ;;		___fladd
 12305 ;;		___fldiv
 12306 ;;		___fleq
 12307 ;;		___flge
 12308 ;;		___flmul
 12309 ;;		___flsub
 12310 ;;		___fltol
 12311 ;;		___xxtofl
 12312 ;; This function is called by:
 12313 ;;		_fadeColor
 12314 ;;		_cycleColors
 12315 ;;		_pulseColors
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           
 12320                           ;psect for function _LED_setHSL
 12321  009A                     _LED_setHSL:	
 12322                           
 12323                           ;led.c: 88:  struct RGB rgb;;led.c: 90:  if (hsl.S == 0)
 12324                           
 12325                           ;incstack = 0
 12326                           ; Regs used in _LED_setHSL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12327  009A  3002               	movlw	2
 12328  009B  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12329  009C  0086               	movwf	6
 12330  009D  0187               	clrf	7
 12331  009E  3F40               	moviw [0]fsr1
 12332  009F  0140               	movlb	0	; select bank0
 12333  00A0  00B7               	movwf	___fleq@ff1
 12334  00A1  3F41               	moviw [1]fsr1
 12335  00A2  00B8               	movwf	___fleq@ff1+1
 12336  00A3  3F42               	moviw [2]fsr1
 12337  00A4  00B9               	movwf	___fleq@ff1+2
 12338  00A5  3F43               	moviw [3]fsr1
 12339  00A6  00BA               	movwf	___fleq@ff1+3
 12340  00A7  3000               	movlw	0
 12341  00A8  00BE               	movwf	___fleq@ff2+3
 12342  00A9  3000               	movlw	0
 12343  00AA  00BD               	movwf	___fleq@ff2+2
 12344  00AB  3000               	movlw	0
 12345  00AC  00BC               	movwf	___fleq@ff2+1
 12346  00AD  3000               	movlw	0
 12347  00AE  00BB               	movwf	___fleq@ff2
 12348  00AF  3192  22A2  3180   	fcall	___fleq
 12349  00B2  1C03               	btfss	3,0
 12350  00B3  28F2               	goto	l5767
 12351                           
 12352                           ;led.c: 91:  {;led.c: 92:   rgb.R = rgb.G = rgb.B = (unsigned char)(hsl.L * 255);
 12353  00B4  3001               	movlw	1
 12354  00B5  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 12355  00B6  0086               	movwf	6
 12356  00B7  0187               	clrf	7
 12357  00B8  3002               	movlw	2
 12358  00B9  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 12359  00BA  0084               	movwf	4
 12360  00BB  0185               	clrf	5
 12361  00BC  0141               	movlb	1	; select bank1
 12362  00BD  0838               	movf	((LED_setHSL@hsl+3)^(0+128)+6),w
 12363  00BE  0140               	movlb	0	; select bank0
 12364  00BF  00C4               	movwf	___flmul@a+3
 12365  00C0  0141               	movlb	1	; select bank1
 12366  00C1  0837               	movf	((LED_setHSL@hsl+2)^(0+128)+6),w
 12367  00C2  0140               	movlb	0	; select bank0
 12368  00C3  00C3               	movwf	___flmul@a+2
 12369  00C4  0141               	movlb	1	; select bank1
 12370  00C5  0836               	movf	((LED_setHSL@hsl+1)^(0+128)+6),w
 12371  00C6  0140               	movlb	0	; select bank0
 12372  00C7  00C2               	movwf	___flmul@a+1
 12373  00C8  0141               	movlb	1	; select bank1
 12374  00C9  0835               	movf	(LED_setHSL@hsl^(0+128)+6),w
 12375  00CA  0140               	movlb	0	; select bank0
 12376  00CB  00C1               	movwf	___flmul@a
 12377  00CC  3043               	movlw	67
 12378  00CD  00C0               	movwf	___flmul@b+3
 12379  00CE  307F               	movlw	127
 12380  00CF  00BF               	movwf	___flmul@b+2
 12381  00D0  3000               	movlw	0
 12382  00D1  00BE               	movwf	___flmul@b+1
 12383  00D2  3000               	movlw	0
 12384  00D3  00BD               	movwf	___flmul@b
 12385  00D4  3183  23F8  3180   	fcall	___flmul
 12386  00D7  0140               	movlb	0	; select bank0
 12387  00D8  0840               	movf	?___flmul+3,w
 12388  00D9  0141               	movlb	1	; select bank1
 12389  00DA  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12390  00DB  0140               	movlb	0	; select bank0
 12391  00DC  083F               	movf	?___flmul+2,w
 12392  00DD  0141               	movlb	1	; select bank1
 12393  00DE  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12394  00DF  0140               	movlb	0	; select bank0
 12395  00E0  083E               	movf	?___flmul+1,w
 12396  00E1  0141               	movlb	1	; select bank1
 12397  00E2  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12398  00E3  0140               	movlb	0	; select bank0
 12399  00E4  083D               	movf	?___flmul,w
 12400  00E5  0141               	movlb	1	; select bank1
 12401  00E6  00A4               	movwf	___fltol@f1^(0+128)
 12402  00E7  3194  2423  3180   	fcall	___fltol
 12403  00EA  0141               	movlb	1	; select bank1
 12404  00EB  0824               	movf	?___fltol^(0+128),w
 12405  00EC  3F80               	movwi [0]fsr0
 12406  00ED  3FC0               	movwi [0]fsr1
 12407  00EE  00B9               	movwf	??_LED_setHSL^(0+128)
 12408  00EF  0839               	movf	??_LED_setHSL^(0+128),w
 12409  00F0  00D7               	movwf	LED_setHSL@rgb^(0+128)
 12410                           
 12411                           ;led.c: 93:  }
 12412  00F1  2BE7               	goto	l5791
 12413  00F2                     l5767:	
 12414                           
 12415                           ;led.c: 95:  {;led.c: 96:   float v1, v2;;led.c: 97:   float hue = (float)hsl.H / 360;
 12416  00F2  3043               	movlw	67
 12417  00F3  0140               	movlb	0	; select bank0
 12418  00F4  00BA               	movwf	___fldiv@a+3
 12419  00F5  30B4               	movlw	180
 12420  00F6  00B9               	movwf	___fldiv@a+2
 12421  00F7  3000               	movlw	0
 12422  00F8  00B8               	movwf	___fldiv@a+1
 12423  00F9  3000               	movlw	0
 12424  00FA  00B7               	movwf	___fldiv@a
 12425  00FB  0141               	movlb	1	; select bank1
 12426  00FC  082F               	movf	LED_setHSL@hsl^(0+128),w
 12427  00FD  0140               	movlb	0	; select bank0
 12428  00FE  00A9               	movwf	___xxtofl@val
 12429  00FF  0141               	movlb	1	; select bank1
 12430  0100  0830               	movf	(LED_setHSL@hsl+1)^(0+128),w
 12431  0101  0140               	movlb	0	; select bank0
 12432  0102  00AA               	movwf	___xxtofl@val+1
 12433  0103  0D89               	rlf	9,f
 12434  0104  3B89               	subwfb	9,f
 12435  0105  0989               	comf	9,f
 12436  0106  00AB               	movwf	___xxtofl@val+2
 12437  0107  00AC               	movwf	___xxtofl@val+3
 12438  0108  3001               	movlw	1
 12439  0109  3196  2602  3180   	fcall	___xxtofl
 12440  010C  0140               	movlb	0	; select bank0
 12441  010D  082C               	movf	?___xxtofl+3,w
 12442  010E  00BE               	movwf	___fldiv@b+3
 12443  010F  082B               	movf	?___xxtofl+2,w
 12444  0110  00BD               	movwf	___fldiv@b+2
 12445  0111  082A               	movf	?___xxtofl+1,w
 12446  0112  00BC               	movwf	___fldiv@b+1
 12447  0113  0829               	movf	?___xxtofl,w
 12448  0114  00BB               	movwf	___fldiv@b
 12449  0115  3186  2624  3180   	fcall	___fldiv
 12450  0118  0140               	movlb	0	; select bank0
 12451  0119  083A               	movf	?___fldiv+3,w
 12452  011A  0141               	movlb	1	; select bank1
 12453  011B  00D2               	movwf	(LED_setHSL@hue+3)^(0+128)
 12454  011C  0140               	movlb	0	; select bank0
 12455  011D  0839               	movf	?___fldiv+2,w
 12456  011E  0141               	movlb	1	; select bank1
 12457  011F  00D1               	movwf	(LED_setHSL@hue+2)^(0+128)
 12458  0120  0140               	movlb	0	; select bank0
 12459  0121  0838               	movf	?___fldiv+1,w
 12460  0122  0141               	movlb	1	; select bank1
 12461  0123  00D0               	movwf	(LED_setHSL@hue+1)^(0+128)
 12462  0124  0140               	movlb	0	; select bank0
 12463  0125  0837               	movf	?___fldiv,w
 12464  0126  0141               	movlb	1	; select bank1
 12465  0127  00CF               	movwf	LED_setHSL@hue^(0+128)
 12466                           
 12467                           ;led.c: 99:   v2 = (hsl.L < 0.5) ? (hsl.L * (1 + hsl.S)) : ((hsl.L + hsl.S) - (hsl.L * h
      +                          sl.S));
 12468  0128  3006               	movlw	6
 12469  0129  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12470  012A  0086               	movwf	6
 12471  012B  0187               	clrf	7
 12472  012C  3F40               	moviw [0]fsr1
 12473  012D  0140               	movlb	0	; select bank0
 12474  012E  00D7               	movwf	___flge@ff1
 12475  012F  3F41               	moviw [1]fsr1
 12476  0130  00D8               	movwf	___flge@ff1+1
 12477  0131  3F42               	moviw [2]fsr1
 12478  0132  00D9               	movwf	___flge@ff1+2
 12479  0133  3F43               	moviw [3]fsr1
 12480  0134  00DA               	movwf	___flge@ff1+3
 12481  0135  303F               	movlw	63
 12482  0136  00DE               	movwf	___flge@ff2+3
 12483  0137  3000               	movlw	0
 12484  0138  00DD               	movwf	___flge@ff2+2
 12485  0139  3000               	movlw	0
 12486  013A  00DC               	movwf	___flge@ff2+1
 12487  013B  3000               	movlw	0
 12488  013C  00DB               	movwf	___flge@ff2
 12489  013D  3195  2503  3180   	fcall	___flge
 12490  0140  1C03               	btfss	3,0
 12491  0141  29B5               	goto	l5773
 12492  0142  3002               	movlw	2
 12493  0143  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12494  0144  0086               	movwf	6
 12495  0145  0187               	clrf	7
 12496  0146  3F40               	moviw [0]fsr1
 12497  0147  0140               	movlb	0	; select bank0
 12498  0148  00A9               	movwf	___fladd@b
 12499  0149  3F41               	moviw [1]fsr1
 12500  014A  00AA               	movwf	___fladd@b+1
 12501  014B  3F42               	moviw [2]fsr1
 12502  014C  00AB               	movwf	___fladd@b+2
 12503  014D  3F43               	moviw [3]fsr1
 12504  014E  00AC               	movwf	___fladd@b+3
 12505  014F  3006               	movlw	6
 12506  0150  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12507  0151  0086               	movwf	6
 12508  0152  0187               	clrf	7
 12509  0153  3F40               	moviw [0]fsr1
 12510  0154  00AD               	movwf	___fladd@a
 12511  0155  3F41               	moviw [1]fsr1
 12512  0156  00AE               	movwf	___fladd@a+1
 12513  0157  3F42               	moviw [2]fsr1
 12514  0158  00AF               	movwf	___fladd@a+2
 12515  0159  3F43               	moviw [3]fsr1
 12516  015A  00B0               	movwf	___fladd@a+3
 12517  015B  318C  243A  3180   	fcall	___fladd
 12518  015E  0140               	movlb	0	; select bank0
 12519  015F  082C               	movf	?___fladd+3,w
 12520  0160  0141               	movlb	1	; select bank1
 12521  0161  00BE               	movwf	(_LED_setHSL$2877+3)^(0+128)
 12522  0162  0140               	movlb	0	; select bank0
 12523  0163  082B               	movf	?___fladd+2,w
 12524  0164  0141               	movlb	1	; select bank1
 12525  0165  00BD               	movwf	(_LED_setHSL$2877+2)^(0+128)
 12526  0166  0140               	movlb	0	; select bank0
 12527  0167  082A               	movf	?___fladd+1,w
 12528  0168  0141               	movlb	1	; select bank1
 12529  0169  00BC               	movwf	(_LED_setHSL$2877+1)^(0+128)
 12530  016A  0140               	movlb	0	; select bank0
 12531  016B  0829               	movf	?___fladd,w
 12532  016C  0141               	movlb	1	; select bank1
 12533  016D  00BB               	movwf	_LED_setHSL$2877^(0+128)
 12534  016E  3002               	movlw	2
 12535  016F  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12536  0170  0086               	movwf	6
 12537  0171  0187               	clrf	7
 12538  0172  3F40               	moviw [0]fsr1
 12539  0173  0140               	movlb	0	; select bank0
 12540  0174  00BD               	movwf	___flmul@b
 12541  0175  3F41               	moviw [1]fsr1
 12542  0176  00BE               	movwf	___flmul@b+1
 12543  0177  3F42               	moviw [2]fsr1
 12544  0178  00BF               	movwf	___flmul@b+2
 12545  0179  3F43               	moviw [3]fsr1
 12546  017A  00C0               	movwf	___flmul@b+3
 12547  017B  3006               	movlw	6
 12548  017C  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12549  017D  0086               	movwf	6
 12550  017E  0187               	clrf	7
 12551  017F  3F40               	moviw [0]fsr1
 12552  0180  00C1               	movwf	___flmul@a
 12553  0181  3F41               	moviw [1]fsr1
 12554  0182  00C2               	movwf	___flmul@a+1
 12555  0183  3F42               	moviw [2]fsr1
 12556  0184  00C3               	movwf	___flmul@a+2
 12557  0185  3F43               	moviw [3]fsr1
 12558  0186  00C4               	movwf	___flmul@a+3
 12559  0187  3183  23F8  3180   	fcall	___flmul
 12560  018A  0140               	movlb	0	; select bank0
 12561  018B  0840               	movf	?___flmul+3,w
 12562  018C  00DA               	movwf	___flsub@a+3
 12563  018D  083F               	movf	?___flmul+2,w
 12564  018E  00D9               	movwf	___flsub@a+2
 12565  018F  083E               	movf	?___flmul+1,w
 12566  0190  00D8               	movwf	___flsub@a+1
 12567  0191  083D               	movf	?___flmul,w
 12568  0192  00D7               	movwf	___flsub@a
 12569  0193  0141               	movlb	1	; select bank1
 12570  0194  083E               	movf	(_LED_setHSL$2877+3)^(0+128),w
 12571  0195  0140               	movlb	0	; select bank0
 12572  0196  00DE               	movwf	___flsub@b+3
 12573  0197  0141               	movlb	1	; select bank1
 12574  0198  083D               	movf	(_LED_setHSL$2877+2)^(0+128),w
 12575  0199  0140               	movlb	0	; select bank0
 12576  019A  00DD               	movwf	___flsub@b+2
 12577  019B  0141               	movlb	1	; select bank1
 12578  019C  083C               	movf	(_LED_setHSL$2877+1)^(0+128),w
 12579  019D  0140               	movlb	0	; select bank0
 12580  019E  00DC               	movwf	___flsub@b+1
 12581  019F  0141               	movlb	1	; select bank1
 12582  01A0  083B               	movf	_LED_setHSL$2877^(0+128),w
 12583  01A1  0140               	movlb	0	; select bank0
 12584  01A2  00DB               	movwf	___flsub@b
 12585  01A3  319F  2739  3180   	fcall	___flsub
 12586  01A6  0140               	movlb	0	; select bank0
 12587  01A7  085A               	movf	?___flsub+3,w
 12588  01A8  0141               	movlb	1	; select bank1
 12589  01A9  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12590  01AA  0140               	movlb	0	; select bank0
 12591  01AB  0859               	movf	?___flsub+2,w
 12592  01AC  0141               	movlb	1	; select bank1
 12593  01AD  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12594  01AE  0140               	movlb	0	; select bank0
 12595  01AF  0858               	movf	?___flsub+1,w
 12596  01B0  0141               	movlb	1	; select bank1
 12597  01B1  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12598  01B2  0140               	movlb	0	; select bank0
 12599  01B3  0857               	movf	?___flsub,w
 12600  01B4  29F3               	goto	L2
 12601  01B5                     l5773:	
 12602  01B5  3006               	movlw	6
 12603  01B6  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12604  01B7  0086               	movwf	6
 12605  01B8  0187               	clrf	7
 12606  01B9  3F40               	moviw [0]fsr1
 12607  01BA  0140               	movlb	0	; select bank0
 12608  01BB  00BD               	movwf	___flmul@b
 12609  01BC  3F41               	moviw [1]fsr1
 12610  01BD  00BE               	movwf	___flmul@b+1
 12611  01BE  3F42               	moviw [2]fsr1
 12612  01BF  00BF               	movwf	___flmul@b+2
 12613  01C0  3F43               	moviw [3]fsr1
 12614  01C1  00C0               	movwf	___flmul@b+3
 12615  01C2  303F               	movlw	63
 12616  01C3  00AC               	movwf	___fladd@b+3
 12617  01C4  3080               	movlw	128
 12618  01C5  00AB               	movwf	___fladd@b+2
 12619  01C6  3000               	movlw	0
 12620  01C7  00AA               	movwf	___fladd@b+1
 12621  01C8  3000               	movlw	0
 12622  01C9  00A9               	movwf	___fladd@b
 12623  01CA  3002               	movlw	2
 12624  01CB  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12625  01CC  0086               	movwf	6
 12626  01CD  0187               	clrf	7
 12627  01CE  3F40               	moviw [0]fsr1
 12628  01CF  00AD               	movwf	___fladd@a
 12629  01D0  3F41               	moviw [1]fsr1
 12630  01D1  00AE               	movwf	___fladd@a+1
 12631  01D2  3F42               	moviw [2]fsr1
 12632  01D3  00AF               	movwf	___fladd@a+2
 12633  01D4  3F43               	moviw [3]fsr1
 12634  01D5  00B0               	movwf	___fladd@a+3
 12635  01D6  318C  243A  3180   	fcall	___fladd
 12636  01D9  0140               	movlb	0	; select bank0
 12637  01DA  082C               	movf	?___fladd+3,w
 12638  01DB  00C4               	movwf	___flmul@a+3
 12639  01DC  082B               	movf	?___fladd+2,w
 12640  01DD  00C3               	movwf	___flmul@a+2
 12641  01DE  082A               	movf	?___fladd+1,w
 12642  01DF  00C2               	movwf	___flmul@a+1
 12643  01E0  0829               	movf	?___fladd,w
 12644  01E1  00C1               	movwf	___flmul@a
 12645  01E2  3183  23F8  3180   	fcall	___flmul
 12646  01E5  0140               	movlb	0	; select bank0
 12647  01E6  0840               	movf	?___flmul+3,w
 12648  01E7  0141               	movlb	1	; select bank1
 12649  01E8  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12650  01E9  0140               	movlb	0	; select bank0
 12651  01EA  083F               	movf	?___flmul+2,w
 12652  01EB  0141               	movlb	1	; select bank1
 12653  01EC  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12654  01ED  0140               	movlb	0	; select bank0
 12655  01EE  083E               	movf	?___flmul+1,w
 12656  01EF  0141               	movlb	1	; select bank1
 12657  01F0  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12658  01F1  0140               	movlb	0	; select bank0
 12659  01F2  083D               	movf	?___flmul,w
 12660  01F3                     L2:	
 12661  01F3  0141               	movlb	1	; select bank1
 12662  01F4  00D3               	movwf	LED_setHSL@v2^(0+128)
 12663                           
 12664                           ;led.c: 100:   v1 = 2 * hsl.L - v2;
 12665  01F5  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12666  01F6  0140               	movlb	0	; select bank0
 12667  01F7  00DA               	movwf	___flsub@a+3
 12668  01F8  0141               	movlb	1	; select bank1
 12669  01F9  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12670  01FA  0140               	movlb	0	; select bank0
 12671  01FB  00D9               	movwf	___flsub@a+2
 12672  01FC  0141               	movlb	1	; select bank1
 12673  01FD  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12674  01FE  0140               	movlb	0	; select bank0
 12675  01FF  00D8               	movwf	___flsub@a+1
 12676  0200  0141               	movlb	1	; select bank1
 12677  0201  0853               	movf	LED_setHSL@v2^(0+128),w
 12678  0202  0140               	movlb	0	; select bank0
 12679  0203  00D7               	movwf	___flsub@a
 12680  0204  3040               	movlw	64
 12681  0205  00C0               	movwf	___flmul@b+3
 12682  0206  3000               	movlw	0
 12683  0207  00BF               	movwf	___flmul@b+2
 12684  0208  3000               	movlw	0
 12685  0209  00BE               	movwf	___flmul@b+1
 12686  020A  3000               	movlw	0
 12687  020B  00BD               	movwf	___flmul@b
 12688  020C  3006               	movlw	6
 12689  020D  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12690  020E  0086               	movwf	6
 12691  020F  0187               	clrf	7
 12692  0210  3F40               	moviw [0]fsr1
 12693  0211  00C1               	movwf	___flmul@a
 12694  0212  3F41               	moviw [1]fsr1
 12695  0213  00C2               	movwf	___flmul@a+1
 12696  0214  3F42               	moviw [2]fsr1
 12697  0215  00C3               	movwf	___flmul@a+2
 12698  0216  3F43               	moviw [3]fsr1
 12699  0217  00C4               	movwf	___flmul@a+3
 12700  0218  3183  23F8  3180   	fcall	___flmul
 12701  021B  0140               	movlb	0	; select bank0
 12702  021C  0840               	movf	?___flmul+3,w
 12703  021D  00DE               	movwf	___flsub@b+3
 12704  021E  083F               	movf	?___flmul+2,w
 12705  021F  00DD               	movwf	___flsub@b+2
 12706  0220  083E               	movf	?___flmul+1,w
 12707  0221  00DC               	movwf	___flsub@b+1
 12708  0222  083D               	movf	?___flmul,w
 12709  0223  00DB               	movwf	___flsub@b
 12710  0224  319F  2739  3180   	fcall	___flsub
 12711  0227  0140               	movlb	0	; select bank0
 12712  0228  085A               	movf	?___flsub+3,w
 12713  0229  0141               	movlb	1	; select bank1
 12714  022A  00CE               	movwf	(LED_setHSL@v1+3)^(0+128)
 12715  022B  0140               	movlb	0	; select bank0
 12716  022C  0859               	movf	?___flsub+2,w
 12717  022D  0141               	movlb	1	; select bank1
 12718  022E  00CD               	movwf	(LED_setHSL@v1+2)^(0+128)
 12719  022F  0140               	movlb	0	; select bank0
 12720  0230  0858               	movf	?___flsub+1,w
 12721  0231  0141               	movlb	1	; select bank1
 12722  0232  00CC               	movwf	(LED_setHSL@v1+1)^(0+128)
 12723  0233  0140               	movlb	0	; select bank0
 12724  0234  0857               	movf	?___flsub,w
 12725  0235  0141               	movlb	1	; select bank1
 12726  0236  00CB               	movwf	LED_setHSL@v1^(0+128)
 12727                           
 12728                           ;led.c: 102:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12729  0237  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12730  0238  0140               	movlb	0	; select bank0
 12731  0239  00B0               	movwf	___fladd@a+3
 12732  023A  0141               	movlb	1	; select bank1
 12733  023B  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12734  023C  0140               	movlb	0	; select bank0
 12735  023D  00AF               	movwf	___fladd@a+2
 12736  023E  0141               	movlb	1	; select bank1
 12737  023F  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12738  0240  0140               	movlb	0	; select bank0
 12739  0241  00AE               	movwf	___fladd@a+1
 12740  0242  0141               	movlb	1	; select bank1
 12741  0243  084F               	movf	LED_setHSL@hue^(0+128),w
 12742  0244  0140               	movlb	0	; select bank0
 12743  0245  00AD               	movwf	___fladd@a
 12744  0246  303E               	movlw	62
 12745  0247  00AC               	movwf	___fladd@b+3
 12746  0248  30AA               	movlw	170
 12747  0249  00AB               	movwf	___fladd@b+2
 12748  024A  30AA               	movlw	170
 12749  024B  00AA               	movwf	___fladd@b+1
 12750  024C  30AB               	movlw	171
 12751  024D  00A9               	movwf	___fladd@b
 12752  024E  318C  243A  3180   	fcall	___fladd
 12753  0251  0140               	movlb	0	; select bank0
 12754  0252  082C               	movf	?___fladd+3,w
 12755  0253  0141               	movlb	1	; select bank1
 12756  0254  00C6               	movwf	(_LED_setHSL$2878+3)^(0+128)
 12757  0255  0140               	movlb	0	; select bank0
 12758  0256  082B               	movf	?___fladd+2,w
 12759  0257  0141               	movlb	1	; select bank1
 12760  0258  00C5               	movwf	(_LED_setHSL$2878+2)^(0+128)
 12761  0259  0140               	movlb	0	; select bank0
 12762  025A  082A               	movf	?___fladd+1,w
 12763  025B  0141               	movlb	1	; select bank1
 12764  025C  00C4               	movwf	(_LED_setHSL$2878+1)^(0+128)
 12765  025D  0140               	movlb	0	; select bank0
 12766  025E  0829               	movf	?___fladd,w
 12767  025F  0141               	movlb	1	; select bank1
 12768  0260  00C3               	movwf	_LED_setHSL$2878^(0+128)
 12769                           
 12770                           ;led.c: 102:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12771  0261  0846               	movf	(_LED_setHSL$2878+3)^(0+128),w
 12772  0262  0140               	movlb	0	; select bank0
 12773  0263  00EE               	movwf	HueToRGB@vH+3
 12774  0264  0141               	movlb	1	; select bank1
 12775  0265  0845               	movf	(_LED_setHSL$2878+2)^(0+128),w
 12776  0266  0140               	movlb	0	; select bank0
 12777  0267  00ED               	movwf	HueToRGB@vH+2
 12778  0268  0141               	movlb	1	; select bank1
 12779  0269  0844               	movf	(_LED_setHSL$2878+1)^(0+128),w
 12780  026A  0140               	movlb	0	; select bank0
 12781  026B  00EC               	movwf	HueToRGB@vH+1
 12782  026C  0141               	movlb	1	; select bank1
 12783  026D  0843               	movf	_LED_setHSL$2878^(0+128),w
 12784  026E  0140               	movlb	0	; select bank0
 12785  026F  00EB               	movwf	HueToRGB@vH
 12786  0270  0141               	movlb	1	; select bank1
 12787  0271  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12788  0272  0140               	movlb	0	; select bank0
 12789  0273  00EA               	movwf	HueToRGB@v2+3
 12790  0274  0141               	movlb	1	; select bank1
 12791  0275  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12792  0276  0140               	movlb	0	; select bank0
 12793  0277  00E9               	movwf	HueToRGB@v2+2
 12794  0278  0141               	movlb	1	; select bank1
 12795  0279  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12796  027A  0140               	movlb	0	; select bank0
 12797  027B  00E8               	movwf	HueToRGB@v2+1
 12798  027C  0141               	movlb	1	; select bank1
 12799  027D  0853               	movf	LED_setHSL@v2^(0+128),w
 12800  027E  0140               	movlb	0	; select bank0
 12801  027F  00E7               	movwf	HueToRGB@v2
 12802  0280  0141               	movlb	1	; select bank1
 12803  0281  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12804  0282  0140               	movlb	0	; select bank0
 12805  0283  00E6               	movwf	HueToRGB@v1+3
 12806  0284  0141               	movlb	1	; select bank1
 12807  0285  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12808  0286  0140               	movlb	0	; select bank0
 12809  0287  00E5               	movwf	HueToRGB@v1+2
 12810  0288  0141               	movlb	1	; select bank1
 12811  0289  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12812  028A  0140               	movlb	0	; select bank0
 12813  028B  00E4               	movwf	HueToRGB@v1+1
 12814  028C  0141               	movlb	1	; select bank1
 12815  028D  084B               	movf	LED_setHSL@v1^(0+128),w
 12816  028E  0140               	movlb	0	; select bank0
 12817  028F  00E3               	movwf	HueToRGB@v1
 12818  0290  318E  261C  3180   	fcall	_HueToRGB
 12819  0293  0140               	movlb	0	; select bank0
 12820  0294  0866               	movf	?_HueToRGB+3,w
 12821  0295  0141               	movlb	1	; select bank1
 12822  0296  00CA               	movwf	(_LED_setHSL$2879+3)^(0+128)
 12823  0297  0140               	movlb	0	; select bank0
 12824  0298  0865               	movf	?_HueToRGB+2,w
 12825  0299  0141               	movlb	1	; select bank1
 12826  029A  00C9               	movwf	(_LED_setHSL$2879+2)^(0+128)
 12827  029B  0140               	movlb	0	; select bank0
 12828  029C  0864               	movf	?_HueToRGB+1,w
 12829  029D  0141               	movlb	1	; select bank1
 12830  029E  00C8               	movwf	(_LED_setHSL$2879+1)^(0+128)
 12831  029F  0140               	movlb	0	; select bank0
 12832  02A0  0863               	movf	?_HueToRGB,w
 12833  02A1  0141               	movlb	1	; select bank1
 12834  02A2  00C7               	movwf	_LED_setHSL$2879^(0+128)
 12835                           
 12836                           ;led.c: 102:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12837  02A3  084A               	movf	(_LED_setHSL$2879+3)^(0+128),w
 12838  02A4  0140               	movlb	0	; select bank0
 12839  02A5  00C4               	movwf	___flmul@a+3
 12840  02A6  0141               	movlb	1	; select bank1
 12841  02A7  0849               	movf	(_LED_setHSL$2879+2)^(0+128),w
 12842  02A8  0140               	movlb	0	; select bank0
 12843  02A9  00C3               	movwf	___flmul@a+2
 12844  02AA  0141               	movlb	1	; select bank1
 12845  02AB  0848               	movf	(_LED_setHSL$2879+1)^(0+128),w
 12846  02AC  0140               	movlb	0	; select bank0
 12847  02AD  00C2               	movwf	___flmul@a+1
 12848  02AE  0141               	movlb	1	; select bank1
 12849  02AF  0847               	movf	_LED_setHSL$2879^(0+128),w
 12850  02B0  0140               	movlb	0	; select bank0
 12851  02B1  00C1               	movwf	___flmul@a
 12852  02B2  3043               	movlw	67
 12853  02B3  00C0               	movwf	___flmul@b+3
 12854  02B4  307F               	movlw	127
 12855  02B5  00BF               	movwf	___flmul@b+2
 12856  02B6  3000               	movlw	0
 12857  02B7  00BE               	movwf	___flmul@b+1
 12858  02B8  3000               	movlw	0
 12859  02B9  00BD               	movwf	___flmul@b
 12860  02BA  3183  23F8  3180   	fcall	___flmul
 12861  02BD  0140               	movlb	0	; select bank0
 12862  02BE  0840               	movf	?___flmul+3,w
 12863  02BF  0141               	movlb	1	; select bank1
 12864  02C0  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12865  02C1  0140               	movlb	0	; select bank0
 12866  02C2  083F               	movf	?___flmul+2,w
 12867  02C3  0141               	movlb	1	; select bank1
 12868  02C4  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12869  02C5  0140               	movlb	0	; select bank0
 12870  02C6  083E               	movf	?___flmul+1,w
 12871  02C7  0141               	movlb	1	; select bank1
 12872  02C8  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12873  02C9  0140               	movlb	0	; select bank0
 12874  02CA  083D               	movf	?___flmul,w
 12875  02CB  0141               	movlb	1	; select bank1
 12876  02CC  00A4               	movwf	___fltol@f1^(0+128)
 12877  02CD  3194  2423  3180   	fcall	___fltol
 12878  02D0  0141               	movlb	1	; select bank1
 12879  02D1  0824               	movf	?___fltol^(0+128),w
 12880  02D2  00B9               	movwf	??_LED_setHSL^(0+128)
 12881  02D3  0839               	movf	??_LED_setHSL^(0+128),w
 12882  02D4  00D7               	movwf	LED_setHSL@rgb^(0+128)
 12883                           
 12884                           ;led.c: 103:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12885  02D5  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12886  02D6  0140               	movlb	0	; select bank0
 12887  02D7  00EE               	movwf	HueToRGB@vH+3
 12888  02D8  0141               	movlb	1	; select bank1
 12889  02D9  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12890  02DA  0140               	movlb	0	; select bank0
 12891  02DB  00ED               	movwf	HueToRGB@vH+2
 12892  02DC  0141               	movlb	1	; select bank1
 12893  02DD  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12894  02DE  0140               	movlb	0	; select bank0
 12895  02DF  00EC               	movwf	HueToRGB@vH+1
 12896  02E0  0141               	movlb	1	; select bank1
 12897  02E1  084F               	movf	LED_setHSL@hue^(0+128),w
 12898  02E2  0140               	movlb	0	; select bank0
 12899  02E3  00EB               	movwf	HueToRGB@vH
 12900  02E4  0141               	movlb	1	; select bank1
 12901  02E5  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12902  02E6  0140               	movlb	0	; select bank0
 12903  02E7  00EA               	movwf	HueToRGB@v2+3
 12904  02E8  0141               	movlb	1	; select bank1
 12905  02E9  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12906  02EA  0140               	movlb	0	; select bank0
 12907  02EB  00E9               	movwf	HueToRGB@v2+2
 12908  02EC  0141               	movlb	1	; select bank1
 12909  02ED  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12910  02EE  0140               	movlb	0	; select bank0
 12911  02EF  00E8               	movwf	HueToRGB@v2+1
 12912  02F0  0141               	movlb	1	; select bank1
 12913  02F1  0853               	movf	LED_setHSL@v2^(0+128),w
 12914  02F2  0140               	movlb	0	; select bank0
 12915  02F3  00E7               	movwf	HueToRGB@v2
 12916  02F4  0141               	movlb	1	; select bank1
 12917  02F5  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12918  02F6  0140               	movlb	0	; select bank0
 12919  02F7  00E6               	movwf	HueToRGB@v1+3
 12920  02F8  0141               	movlb	1	; select bank1
 12921  02F9  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12922  02FA  0140               	movlb	0	; select bank0
 12923  02FB  00E5               	movwf	HueToRGB@v1+2
 12924  02FC  0141               	movlb	1	; select bank1
 12925  02FD  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12926  02FE  0140               	movlb	0	; select bank0
 12927  02FF  00E4               	movwf	HueToRGB@v1+1
 12928  0300  0141               	movlb	1	; select bank1
 12929  0301  084B               	movf	LED_setHSL@v1^(0+128),w
 12930  0302  0140               	movlb	0	; select bank0
 12931  0303  00E3               	movwf	HueToRGB@v1
 12932  0304  318E  261C  3180   	fcall	_HueToRGB
 12933  0307  0140               	movlb	0	; select bank0
 12934  0308  0866               	movf	?_HueToRGB+3,w
 12935  0309  0141               	movlb	1	; select bank1
 12936  030A  00C2               	movwf	(_LED_setHSL$2880+3)^(0+128)
 12937  030B  0140               	movlb	0	; select bank0
 12938  030C  0865               	movf	?_HueToRGB+2,w
 12939  030D  0141               	movlb	1	; select bank1
 12940  030E  00C1               	movwf	(_LED_setHSL$2880+2)^(0+128)
 12941  030F  0140               	movlb	0	; select bank0
 12942  0310  0864               	movf	?_HueToRGB+1,w
 12943  0311  0141               	movlb	1	; select bank1
 12944  0312  00C0               	movwf	(_LED_setHSL$2880+1)^(0+128)
 12945  0313  0140               	movlb	0	; select bank0
 12946  0314  0863               	movf	?_HueToRGB,w
 12947  0315  0141               	movlb	1	; select bank1
 12948  0316  00BF               	movwf	_LED_setHSL$2880^(0+128)
 12949                           
 12950                           ;led.c: 103:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12951  0317  0842               	movf	(_LED_setHSL$2880+3)^(0+128),w
 12952  0318  0140               	movlb	0	; select bank0
 12953  0319  00C4               	movwf	___flmul@a+3
 12954  031A  0141               	movlb	1	; select bank1
 12955  031B  0841               	movf	(_LED_setHSL$2880+2)^(0+128),w
 12956  031C  0140               	movlb	0	; select bank0
 12957  031D  00C3               	movwf	___flmul@a+2
 12958  031E  0141               	movlb	1	; select bank1
 12959  031F  0840               	movf	(_LED_setHSL$2880+1)^(0+128),w
 12960  0320  0140               	movlb	0	; select bank0
 12961  0321  00C2               	movwf	___flmul@a+1
 12962  0322  0141               	movlb	1	; select bank1
 12963  0323  083F               	movf	_LED_setHSL$2880^(0+128),w
 12964  0324  0140               	movlb	0	; select bank0
 12965  0325  00C1               	movwf	___flmul@a
 12966  0326  3043               	movlw	67
 12967  0327  00C0               	movwf	___flmul@b+3
 12968  0328  307F               	movlw	127
 12969  0329  00BF               	movwf	___flmul@b+2
 12970  032A  3000               	movlw	0
 12971  032B  00BE               	movwf	___flmul@b+1
 12972  032C  3000               	movlw	0
 12973  032D  00BD               	movwf	___flmul@b
 12974  032E  3183  23F8  3180   	fcall	___flmul
 12975  0331  0140               	movlb	0	; select bank0
 12976  0332  0840               	movf	?___flmul+3,w
 12977  0333  0141               	movlb	1	; select bank1
 12978  0334  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12979  0335  0140               	movlb	0	; select bank0
 12980  0336  083F               	movf	?___flmul+2,w
 12981  0337  0141               	movlb	1	; select bank1
 12982  0338  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12983  0339  0140               	movlb	0	; select bank0
 12984  033A  083E               	movf	?___flmul+1,w
 12985  033B  0141               	movlb	1	; select bank1
 12986  033C  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12987  033D  0140               	movlb	0	; select bank0
 12988  033E  083D               	movf	?___flmul,w
 12989  033F  0141               	movlb	1	; select bank1
 12990  0340  00A4               	movwf	___fltol@f1^(0+128)
 12991  0341  3194  2423  3180   	fcall	___fltol
 12992  0344  0141               	movlb	1	; select bank1
 12993  0345  0824               	movf	?___fltol^(0+128),w
 12994  0346  00B9               	movwf	??_LED_setHSL^(0+128)
 12995  0347  0839               	movf	??_LED_setHSL^(0+128),w
 12996  0348  00D8               	movwf	(LED_setHSL@rgb^(0+128)+1)
 12997                           
 12998                           ;led.c: 104:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12999  0349  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 13000  034A  0140               	movlb	0	; select bank0
 13001  034B  00B0               	movwf	___fladd@a+3
 13002  034C  0141               	movlb	1	; select bank1
 13003  034D  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 13004  034E  0140               	movlb	0	; select bank0
 13005  034F  00AF               	movwf	___fladd@a+2
 13006  0350  0141               	movlb	1	; select bank1
 13007  0351  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 13008  0352  0140               	movlb	0	; select bank0
 13009  0353  00AE               	movwf	___fladd@a+1
 13010  0354  0141               	movlb	1	; select bank1
 13011  0355  084F               	movf	LED_setHSL@hue^(0+128),w
 13012  0356  0140               	movlb	0	; select bank0
 13013  0357  00AD               	movwf	___fladd@a
 13014  0358  30BE               	movlw	190
 13015  0359  00AC               	movwf	___fladd@b+3
 13016  035A  30AA               	movlw	170
 13017  035B  00AB               	movwf	___fladd@b+2
 13018  035C  30AA               	movlw	170
 13019  035D  00AA               	movwf	___fladd@b+1
 13020  035E  30AB               	movlw	171
 13021  035F  00A9               	movwf	___fladd@b
 13022  0360  318C  243A  3180   	fcall	___fladd
 13023  0363  0140               	movlb	0	; select bank0
 13024  0364  082C               	movf	?___fladd+3,w
 13025  0365  0141               	movlb	1	; select bank1
 13026  0366  00C6               	movwf	(_LED_setHSL$2878+3)^(0+128)
 13027  0367  0140               	movlb	0	; select bank0
 13028  0368  082B               	movf	?___fladd+2,w
 13029  0369  0141               	movlb	1	; select bank1
 13030  036A  00C5               	movwf	(_LED_setHSL$2878+2)^(0+128)
 13031  036B  0140               	movlb	0	; select bank0
 13032  036C  082A               	movf	?___fladd+1,w
 13033  036D  0141               	movlb	1	; select bank1
 13034  036E  00C4               	movwf	(_LED_setHSL$2878+1)^(0+128)
 13035  036F  0140               	movlb	0	; select bank0
 13036  0370  0829               	movf	?___fladd,w
 13037  0371  0141               	movlb	1	; select bank1
 13038  0372  00C3               	movwf	_LED_setHSL$2878^(0+128)
 13039                           
 13040                           ;led.c: 104:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 13041  0373  0846               	movf	(_LED_setHSL$2878+3)^(0+128),w
 13042  0374  0140               	movlb	0	; select bank0
 13043  0375  00EE               	movwf	HueToRGB@vH+3
 13044  0376  0141               	movlb	1	; select bank1
 13045  0377  0845               	movf	(_LED_setHSL$2878+2)^(0+128),w
 13046  0378  0140               	movlb	0	; select bank0
 13047  0379  00ED               	movwf	HueToRGB@vH+2
 13048  037A  0141               	movlb	1	; select bank1
 13049  037B  0844               	movf	(_LED_setHSL$2878+1)^(0+128),w
 13050  037C  0140               	movlb	0	; select bank0
 13051  037D  00EC               	movwf	HueToRGB@vH+1
 13052  037E  0141               	movlb	1	; select bank1
 13053  037F  0843               	movf	_LED_setHSL$2878^(0+128),w
 13054  0380  0140               	movlb	0	; select bank0
 13055  0381  00EB               	movwf	HueToRGB@vH
 13056  0382  0141               	movlb	1	; select bank1
 13057  0383  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 13058  0384  0140               	movlb	0	; select bank0
 13059  0385  00EA               	movwf	HueToRGB@v2+3
 13060  0386  0141               	movlb	1	; select bank1
 13061  0387  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 13062  0388  0140               	movlb	0	; select bank0
 13063  0389  00E9               	movwf	HueToRGB@v2+2
 13064  038A  0141               	movlb	1	; select bank1
 13065  038B  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 13066  038C  0140               	movlb	0	; select bank0
 13067  038D  00E8               	movwf	HueToRGB@v2+1
 13068  038E  0141               	movlb	1	; select bank1
 13069  038F  0853               	movf	LED_setHSL@v2^(0+128),w
 13070  0390  0140               	movlb	0	; select bank0
 13071  0391  00E7               	movwf	HueToRGB@v2
 13072  0392  0141               	movlb	1	; select bank1
 13073  0393  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 13074  0394  0140               	movlb	0	; select bank0
 13075  0395  00E6               	movwf	HueToRGB@v1+3
 13076  0396  0141               	movlb	1	; select bank1
 13077  0397  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 13078  0398  0140               	movlb	0	; select bank0
 13079  0399  00E5               	movwf	HueToRGB@v1+2
 13080  039A  0141               	movlb	1	; select bank1
 13081  039B  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 13082  039C  0140               	movlb	0	; select bank0
 13083  039D  00E4               	movwf	HueToRGB@v1+1
 13084  039E  0141               	movlb	1	; select bank1
 13085  039F  084B               	movf	LED_setHSL@v1^(0+128),w
 13086  03A0  0140               	movlb	0	; select bank0
 13087  03A1  00E3               	movwf	HueToRGB@v1
 13088  03A2  318E  261C  3180   	fcall	_HueToRGB
 13089  03A5  0140               	movlb	0	; select bank0
 13090  03A6  0866               	movf	?_HueToRGB+3,w
 13091  03A7  0141               	movlb	1	; select bank1
 13092  03A8  00CA               	movwf	(_LED_setHSL$2879+3)^(0+128)
 13093  03A9  0140               	movlb	0	; select bank0
 13094  03AA  0865               	movf	?_HueToRGB+2,w
 13095  03AB  0141               	movlb	1	; select bank1
 13096  03AC  00C9               	movwf	(_LED_setHSL$2879+2)^(0+128)
 13097  03AD  0140               	movlb	0	; select bank0
 13098  03AE  0864               	movf	?_HueToRGB+1,w
 13099  03AF  0141               	movlb	1	; select bank1
 13100  03B0  00C8               	movwf	(_LED_setHSL$2879+1)^(0+128)
 13101  03B1  0140               	movlb	0	; select bank0
 13102  03B2  0863               	movf	?_HueToRGB,w
 13103  03B3  0141               	movlb	1	; select bank1
 13104  03B4  00C7               	movwf	_LED_setHSL$2879^(0+128)
 13105                           
 13106                           ;led.c: 104:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 13107  03B5  084A               	movf	(_LED_setHSL$2879+3)^(0+128),w
 13108  03B6  0140               	movlb	0	; select bank0
 13109  03B7  00C4               	movwf	___flmul@a+3
 13110  03B8  0141               	movlb	1	; select bank1
 13111  03B9  0849               	movf	(_LED_setHSL$2879+2)^(0+128),w
 13112  03BA  0140               	movlb	0	; select bank0
 13113  03BB  00C3               	movwf	___flmul@a+2
 13114  03BC  0141               	movlb	1	; select bank1
 13115  03BD  0848               	movf	(_LED_setHSL$2879+1)^(0+128),w
 13116  03BE  0140               	movlb	0	; select bank0
 13117  03BF  00C2               	movwf	___flmul@a+1
 13118  03C0  0141               	movlb	1	; select bank1
 13119  03C1  0847               	movf	_LED_setHSL$2879^(0+128),w
 13120  03C2  0140               	movlb	0	; select bank0
 13121  03C3  00C1               	movwf	___flmul@a
 13122  03C4  3043               	movlw	67
 13123  03C5  00C0               	movwf	___flmul@b+3
 13124  03C6  307F               	movlw	127
 13125  03C7  00BF               	movwf	___flmul@b+2
 13126  03C8  3000               	movlw	0
 13127  03C9  00BE               	movwf	___flmul@b+1
 13128  03CA  3000               	movlw	0
 13129  03CB  00BD               	movwf	___flmul@b
 13130  03CC  3183  23F8  3180   	fcall	___flmul
 13131  03CF  0140               	movlb	0	; select bank0
 13132  03D0  0840               	movf	?___flmul+3,w
 13133  03D1  0141               	movlb	1	; select bank1
 13134  03D2  00A7               	movwf	(___fltol@f1+3)^(0+128)
 13135  03D3  0140               	movlb	0	; select bank0
 13136  03D4  083F               	movf	?___flmul+2,w
 13137  03D5  0141               	movlb	1	; select bank1
 13138  03D6  00A6               	movwf	(___fltol@f1+2)^(0+128)
 13139  03D7  0140               	movlb	0	; select bank0
 13140  03D8  083E               	movf	?___flmul+1,w
 13141  03D9  0141               	movlb	1	; select bank1
 13142  03DA  00A5               	movwf	(___fltol@f1+1)^(0+128)
 13143  03DB  0140               	movlb	0	; select bank0
 13144  03DC  083D               	movf	?___flmul,w
 13145  03DD  0141               	movlb	1	; select bank1
 13146  03DE  00A4               	movwf	___fltol@f1^(0+128)
 13147  03DF  3194  2423  3180   	fcall	___fltol
 13148  03E2  0141               	movlb	1	; select bank1
 13149  03E3  0824               	movf	?___fltol^(0+128),w
 13150  03E4  00B9               	movwf	??_LED_setHSL^(0+128)
 13151  03E5  0839               	movf	??_LED_setHSL^(0+128),w
 13152  03E6  00D9               	movwf	(LED_setHSL@rgb^(0+128)+2)
 13153  03E7                     l5791:	
 13154                           
 13155                           ;led.c: 107:  LED_setColor(rgb.R, rgb.G, rgb.B, 0);
 13156  03E7  0858               	movf	(LED_setHSL@rgb^(0+128)+1),w
 13157  03E8  00B9               	movwf	??_LED_setHSL^(0+128)
 13158  03E9  0839               	movf	??_LED_setHSL^(0+128),w
 13159  03EA  0140               	movlb	0	; select bank0
 13160  03EB  00A0               	movwf	LED_setColor@green
 13161  03EC  0141               	movlb	1	; select bank1
 13162  03ED  0859               	movf	(LED_setHSL@rgb^(0+128)+2),w
 13163  03EE  00BA               	movwf	(??_LED_setHSL+1)^(0+128)
 13164  03EF  083A               	movf	(??_LED_setHSL+1)^(0+128),w
 13165  03F0  0140               	movlb	0	; select bank0
 13166  03F1  00A1               	movwf	LED_setColor@white
 13167  03F2  01A2               	clrf	LED_setColor@blue
 13168  03F3  0141               	movlb	1	; select bank1
 13169  03F4  0857               	movf	LED_setHSL@rgb^(0+128),w
 13170  03F5  3192  2220         	fcall	_LED_setColor
 13171  03F7  0008               	return
 13172  03F8                     __end_of_LED_setHSL:	
 13173                           
 13174                           	psect	text40
 13175  1602                     __ptext40:	
 13176 ;; *************** function ___xxtofl *****************
 13177 ;; Defined at:
 13178 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;  sign            1    wreg     unsigned char 
 13181 ;;  val             4    9[BANK0 ] long 
 13182 ;; Auto vars:     Size  Location     Type
 13183 ;;  sign            1   17[BANK0 ] unsigned char 
 13184 ;;  arg             4   19[BANK0 ] unsigned long 
 13185 ;;  exp             1   18[BANK0 ] unsigned char 
 13186 ;; Return value:  Size  Location     Type
 13187 ;;                  4    9[BANK0 ] unsigned char 
 13188 ;; Registers used:
 13189 ;;		wreg, status,2, status,0
 13190 ;; Tracked objects:
 13191 ;;		On entry : 0/0
 13192 ;;		On exit  : 0/0
 13193 ;;		Unchanged: 0/0
 13194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13195 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13196 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13197 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13198 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13199 ;;Total ram usage:       14 bytes
 13200 ;; Hardware stack levels used:    1
 13201 ;; Hardware stack levels required when called:    4
 13202 ;; This function calls:
 13203 ;;		Nothing
 13204 ;; This function is called by:
 13205 ;;		_LED_setHSL
 13206 ;;		_pulseColors
 13207 ;; This function uses a non-reentrant model
 13208 ;;
 13209                           
 13210                           
 13211                           ;psect for function ___xxtofl
 13212  1602                     ___xxtofl:	
 13213                           
 13214                           ;incstack = 0
 13215                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 13216                           ;___xxtofl@sign stored from wreg
 13217  1602  0140               	movlb	0	; select bank0
 13218  1603  00B1               	movwf	___xxtofl@sign
 13219  1604  0831               	movf	___xxtofl@sign,w
 13220  1605  1D03               	btfss	3,2
 13221  1606  1FAC               	btfss	___xxtofl@val+3,7
 13222  1607  2E18               	goto	l4377
 13223  1608  0929               	comf	___xxtofl@val,w
 13224  1609  00B3               	movwf	___xxtofl@arg
 13225  160A  092A               	comf	___xxtofl@val+1,w
 13226  160B  00B4               	movwf	___xxtofl@arg+1
 13227  160C  092B               	comf	___xxtofl@val+2,w
 13228  160D  00B5               	movwf	___xxtofl@arg+2
 13229  160E  092C               	comf	___xxtofl@val+3,w
 13230  160F  00B6               	movwf	___xxtofl@arg+3
 13231  1610  0AB3               	incf	___xxtofl@arg,f
 13232  1611  1903               	skipnz
 13233  1612  0AB4               	incf	___xxtofl@arg+1,f
 13234  1613  1903               	skipnz
 13235  1614  0AB5               	incf	___xxtofl@arg+2,f
 13236  1615  1903               	skipnz
 13237  1616  0AB6               	incf	___xxtofl@arg+3,f
 13238  1617  2E20               	goto	l1718
 13239  1618                     l4377:	
 13240  1618  082C               	movf	___xxtofl@val+3,w
 13241  1619  00B6               	movwf	___xxtofl@arg+3
 13242  161A  082B               	movf	___xxtofl@val+2,w
 13243  161B  00B5               	movwf	___xxtofl@arg+2
 13244  161C  082A               	movf	___xxtofl@val+1,w
 13245  161D  00B4               	movwf	___xxtofl@arg+1
 13246  161E  0829               	movf	___xxtofl@val,w
 13247  161F  00B3               	movwf	___xxtofl@arg
 13248  1620                     l1718:	
 13249  1620  082C               	movf	___xxtofl@val+3,w
 13250  1621  042B               	iorwf	___xxtofl@val+2,w
 13251  1622  042A               	iorwf	___xxtofl@val+1,w
 13252  1623  0429               	iorwf	___xxtofl@val,w
 13253  1624  1D03               	skipz
 13254  1625  2E2F               	goto	l4383
 13255  1626  3000               	movlw	0
 13256  1627  00AC               	movwf	?___xxtofl+3
 13257  1628  3000               	movlw	0
 13258  1629  00AB               	movwf	?___xxtofl+2
 13259  162A  3000               	movlw	0
 13260  162B  00AA               	movwf	?___xxtofl+1
 13261  162C  3000               	movlw	0
 13262  162D  00A9               	movwf	?___xxtofl
 13263  162E  0008               	return
 13264  162F                     l4383:	
 13265  162F  3096               	movlw	150
 13266  1630  00AD               	movwf	??___xxtofl
 13267  1631  082D               	movf	??___xxtofl,w
 13268  1632  00B2               	movwf	___xxtofl@exp
 13269  1633                     l4387:	
 13270  1633  30FE               	movlw	254
 13271  1634  0536               	andwf	___xxtofl@arg+3,w
 13272  1635  1903               	btfsc	3,2
 13273  1636  2E56               	goto	l1724
 13274  1637  3001               	movlw	1
 13275  1638  00AD               	movwf	??___xxtofl
 13276  1639  082D               	movf	??___xxtofl,w
 13277  163A  07B2               	addwf	___xxtofl@exp,f
 13278  163B  3001               	movlw	1
 13279  163C                     u4285:	
 13280  163C  36B6               	lsrf	___xxtofl@arg+3,f
 13281  163D  0CB5               	rrf	___xxtofl@arg+2,f
 13282  163E  0CB4               	rrf	___xxtofl@arg+1,f
 13283  163F  0CB3               	rrf	___xxtofl@arg,f
 13284  1640  0B89               	decfsz	9,f
 13285  1641  2E3C               	goto	u4285
 13286  1642  2E33               	goto	l4387
 13287  1643                     l4389:	
 13288  1643  3001               	movlw	1
 13289  1644  00AD               	movwf	??___xxtofl
 13290  1645  082D               	movf	??___xxtofl,w
 13291  1646  07B2               	addwf	___xxtofl@exp,f
 13292  1647  3001               	movlw	1
 13293  1648  07B3               	addwf	___xxtofl@arg,f
 13294  1649  3000               	movlw	0
 13295  164A  3DB4               	addwfc	___xxtofl@arg+1,f
 13296  164B  3000               	movlw	0
 13297  164C  3DB5               	addwfc	___xxtofl@arg+2,f
 13298  164D  3000               	movlw	0
 13299  164E  3DB6               	addwfc	___xxtofl@arg+3,f
 13300  164F  3001               	movlw	1
 13301  1650                     u4305:	
 13302  1650  36B6               	lsrf	___xxtofl@arg+3,f
 13303  1651  0CB5               	rrf	___xxtofl@arg+2,f
 13304  1652  0CB4               	rrf	___xxtofl@arg+1,f
 13305  1653  0CB3               	rrf	___xxtofl@arg,f
 13306  1654  0B89               	decfsz	9,f
 13307  1655  2E50               	goto	u4305
 13308  1656                     l1724:	
 13309  1656  30FF               	movlw	255
 13310  1657  0536               	andwf	___xxtofl@arg+3,w
 13311  1658  1903               	btfsc	3,2
 13312  1659  2E68               	goto	l4397
 13313  165A  2E43               	goto	l4389
 13314  165B                     l4399:	
 13315  165B  3002               	movlw	2
 13316  165C  0232               	subwf	___xxtofl@exp,w
 13317  165D  1C03               	btfss	3,0
 13318  165E  2E6A               	goto	l1731
 13319  165F  3001               	movlw	1
 13320  1660  02B2               	subwf	___xxtofl@exp,f
 13321  1661  3001               	movlw	1
 13322  1662                     u4325:	
 13323  1662  35B3               	lslf	___xxtofl@arg,f
 13324  1663  0DB4               	rlf	___xxtofl@arg+1,f
 13325  1664  0DB5               	rlf	___xxtofl@arg+2,f
 13326  1665  0DB6               	rlf	___xxtofl@arg+3,f
 13327  1666  0B89               	decfsz	9,f
 13328  1667  2E62               	goto	u4325
 13329  1668                     l4397:	
 13330  1668  1FB5               	btfss	___xxtofl@arg+2,7
 13331  1669  2E5B               	goto	l4399
 13332  166A                     l1731:	
 13333  166A  1832               	btfsc	___xxtofl@exp,0
 13334  166B  2E74               	goto	l1732
 13335  166C  30FF               	movlw	255
 13336  166D  05B3               	andwf	___xxtofl@arg,f
 13337  166E  30FF               	movlw	255
 13338  166F  05B4               	andwf	___xxtofl@arg+1,f
 13339  1670  307F               	movlw	127
 13340  1671  05B5               	andwf	___xxtofl@arg+2,f
 13341  1672  30FF               	movlw	255
 13342  1673  05B6               	andwf	___xxtofl@arg+3,f
 13343  1674                     l1732:	
 13344  1674  1003               	clrc
 13345  1675  0CB2               	rrf	___xxtofl@exp,f
 13346  1676  0832               	movf	___xxtofl@exp,w
 13347  1677  00AD               	movwf	??___xxtofl
 13348  1678  01AE               	clrf	??___xxtofl+1
 13349  1679  01AF               	clrf	??___xxtofl+2
 13350  167A  01B0               	clrf	??___xxtofl+3
 13351  167B  3018               	movlw	24
 13352  167C                     u4365:	
 13353  167C  35AD               	lslf	??___xxtofl,f
 13354  167D  0DAE               	rlf	??___xxtofl+1,f
 13355  167E  0DAF               	rlf	??___xxtofl+2,f
 13356  167F  0DB0               	rlf	??___xxtofl+3,f
 13357  1680  0B89               	decfsz	9,f
 13358  1681  2E7C               	goto	u4365
 13359  1682  082D               	movf	??___xxtofl,w
 13360  1683  04B3               	iorwf	___xxtofl@arg,f
 13361  1684  082E               	movf	??___xxtofl+1,w
 13362  1685  04B4               	iorwf	___xxtofl@arg+1,f
 13363  1686  082F               	movf	??___xxtofl+2,w
 13364  1687  04B5               	iorwf	___xxtofl@arg+2,f
 13365  1688  0830               	movf	??___xxtofl+3,w
 13366  1689  04B6               	iorwf	___xxtofl@arg+3,f
 13367  168A  0831               	movf	___xxtofl@sign,w
 13368  168B  1D03               	btfss	3,2
 13369  168C  1FAC               	btfss	___xxtofl@val+3,7
 13370  168D  2E8F               	goto	l4411
 13371  168E  17B6               	bsf	___xxtofl@arg+3,7
 13372  168F                     l4411:	
 13373  168F  0836               	movf	___xxtofl@arg+3,w
 13374  1690  00AC               	movwf	?___xxtofl+3
 13375  1691  0835               	movf	___xxtofl@arg+2,w
 13376  1692  00AB               	movwf	?___xxtofl+2
 13377  1693  0834               	movf	___xxtofl@arg+1,w
 13378  1694  00AA               	movwf	?___xxtofl+1
 13379  1695  0833               	movf	___xxtofl@arg,w
 13380  1696  00A9               	movwf	?___xxtofl
 13381  1697  0008               	return
 13382  1698                     __end_of___xxtofl:	
 13383                           
 13384                           	psect	text41
 13385  1423                     __ptext41:	
 13386 ;; *************** function ___fltol *****************
 13387 ;; Defined at:
 13388 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;  f1              4    4[BANK1 ] unsigned char 
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;  exp1            1   14[BANK1 ] unsigned char 
 13393 ;;  sign1           1   13[BANK1 ] unsigned char 
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  4    4[BANK1 ] long 
 13396 ;; Registers used:
 13397 ;;		wreg, status,2, status,0
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13403 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13404 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13405 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13406 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13407 ;;Total ram usage:       11 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:    4
 13410 ;; This function calls:
 13411 ;;		Nothing
 13412 ;; This function is called by:
 13413 ;;		_LED_setHSL
 13414 ;; This function uses a non-reentrant model
 13415 ;;
 13416                           
 13417                           
 13418                           ;psect for function ___fltol
 13419  1423                     ___fltol:	
 13420                           
 13421                           ;incstack = 0
 13422                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 13423  1423  1003               	clrc
 13424  1424  0141               	movlb	1	; select bank1
 13425  1425  0D26               	rlf	(___fltol@f1+2)^(0+128),w
 13426  1426  0D27               	rlf	(___fltol@f1+3)^(0+128),w
 13427  1427  00A8               	movwf	??___fltol^(0+128)
 13428  1428  0828               	movf	??___fltol^(0+128),w
 13429  1429  00AE               	movwf	___fltol@exp1^(0+128)
 13430  142A  082E               	movf	___fltol@exp1^(0+128),w
 13431  142B  1D03               	btfss	3,2
 13432  142C  2C36               	goto	l5699
 13433  142D                     l5695:	
 13434  142D  3000               	movlw	0
 13435  142E  00A7               	movwf	(?___fltol+3)^(0+128)
 13436  142F  3000               	movlw	0
 13437  1430  00A6               	movwf	(?___fltol+2)^(0+128)
 13438  1431  3000               	movlw	0
 13439  1432  00A5               	movwf	(?___fltol+1)^(0+128)
 13440  1433  3000               	movlw	0
 13441  1434  00A4               	movwf	?___fltol^(0+128)
 13442  1435  0008               	return
 13443  1436                     l5699:	
 13444  1436  0824               	movf	___fltol@f1^(0+128),w
 13445  1437  00A8               	movwf	??___fltol^(0+128)
 13446  1438  0825               	movf	(___fltol@f1+1)^(0+128),w
 13447  1439  00A9               	movwf	(??___fltol^(0+128)+1)
 13448  143A  0826               	movf	(___fltol@f1+2)^(0+128),w
 13449  143B  00AA               	movwf	(??___fltol^(0+128)+2)
 13450  143C  0827               	movf	(___fltol@f1+3)^(0+128),w
 13451  143D  00AB               	movwf	(??___fltol^(0+128)+3)
 13452  143E  301F               	movlw	31
 13453  143F                     u6115:	
 13454  143F  36AB               	lsrf	(??___fltol^(0+128)+3),f
 13455  1440  0CAA               	rrf	(??___fltol^(0+128)+2),f
 13456  1441  0CA9               	rrf	(??___fltol^(0+128)+1),f
 13457  1442  0CA8               	rrf	??___fltol^(0+128),f
 13458  1443  0B89               	decfsz	9,f
 13459  1444  2C3F               	goto	u6115
 13460  1445  0828               	movf	??___fltol^(0+128),w
 13461  1446  00AC               	movwf	(??___fltol+4)^(0+128)
 13462  1447  082C               	movf	(??___fltol+4)^(0+128),w
 13463  1448  00AD               	movwf	___fltol@sign1^(0+128)
 13464  1449  17A6               	bsf	(___fltol@f1^(0+128)+2),7
 13465  144A  30FF               	movlw	255
 13466  144B  05A4               	andwf	___fltol@f1^(0+128),f
 13467  144C  30FF               	movlw	255
 13468  144D  05A5               	andwf	(___fltol@f1+1)^(0+128),f
 13469  144E  30FF               	movlw	255
 13470  144F  05A6               	andwf	(___fltol@f1+2)^(0+128),f
 13471  1450  3000               	movlw	0
 13472  1451  05A7               	andwf	(___fltol@f1+3)^(0+128),f
 13473  1452  3096               	movlw	150
 13474  1453  02AE               	subwf	___fltol@exp1^(0+128),f
 13475  1454  1FAE               	btfss	___fltol@exp1^(0+128),7
 13476  1455  2C69               	goto	l5717
 13477  1456  082E               	movf	___fltol@exp1^(0+128),w
 13478  1457  3A80               	xorlw	128
 13479  1458  3E97               	addlw	151
 13480  1459  1C03               	btfss	3,0
 13481  145A  2C2D               	goto	l5695
 13482  145B                     l5715:	
 13483  145B  3001               	movlw	1
 13484  145C                     u6145:	
 13485  145C  36A7               	lsrf	(___fltol@f1+3)^(0+128),f
 13486  145D  0CA6               	rrf	(___fltol@f1+2)^(0+128),f
 13487  145E  0CA5               	rrf	(___fltol@f1+1)^(0+128),f
 13488  145F  0CA4               	rrf	___fltol@f1^(0+128),f
 13489  1460  0B89               	decfsz	9,f
 13490  1461  2C5C               	goto	u6145
 13491  1462  3001               	movlw	1
 13492  1463  00A8               	movwf	??___fltol^(0+128)
 13493  1464  0828               	movf	??___fltol^(0+128),w
 13494  1465  07AE               	addwf	___fltol@exp1^(0+128),f
 13495  1466  1903               	btfsc	3,2
 13496  1467  2C7A               	goto	l5725
 13497  1468  2C5B               	goto	l5715
 13498  1469                     l5717:	
 13499  1469  3020               	movlw	32
 13500  146A  022E               	subwf	___fltol@exp1^(0+128),w
 13501  146B  1803               	btfsc	3,0
 13502  146C  2C2D               	goto	l5695
 13503  146D                     l1484:	
 13504  146D  082E               	movf	___fltol@exp1^(0+128),w
 13505  146E  1903               	btfsc	3,2
 13506  146F  2C7A               	goto	l5725
 13507  1470  3001               	movlw	1
 13508  1471                     u6175:	
 13509  1471  35A4               	lslf	___fltol@f1^(0+128),f
 13510  1472  0DA5               	rlf	(___fltol@f1+1)^(0+128),f
 13511  1473  0DA6               	rlf	(___fltol@f1+2)^(0+128),f
 13512  1474  0DA7               	rlf	(___fltol@f1+3)^(0+128),f
 13513  1475  0B89               	decfsz	9,f
 13514  1476  2C71               	goto	u6175
 13515  1477  3001               	movlw	1
 13516  1478  02AE               	subwf	___fltol@exp1^(0+128),f
 13517  1479  2C6D               	goto	l1484
 13518  147A                     l5725:	
 13519  147A  082D               	movf	___fltol@sign1^(0+128),w
 13520  147B  1903               	btfsc	3,2
 13521  147C  0008               	return
 13522  147D  09A4               	comf	___fltol@f1^(0+128),f
 13523  147E  09A5               	comf	(___fltol@f1+1)^(0+128),f
 13524  147F  09A6               	comf	(___fltol@f1+2)^(0+128),f
 13525  1480  09A7               	comf	(___fltol@f1+3)^(0+128),f
 13526  1481  0AA4               	incf	___fltol@f1^(0+128),f
 13527  1482  1903               	skipnz
 13528  1483  0AA5               	incf	(___fltol@f1+1)^(0+128),f
 13529  1484  1903               	skipnz
 13530  1485  0AA6               	incf	(___fltol@f1+2)^(0+128),f
 13531  1486  1903               	skipnz
 13532  1487  0AA7               	incf	(___fltol@f1+3)^(0+128),f
 13533  1488  0008               	return
 13534  1489                     __end_of___fltol:	
 13535                           
 13536                           	psect	text42
 13537  12A2                     __ptext42:	
 13538 ;; *************** function ___fleq *****************
 13539 ;; Defined at:
 13540 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 13541 ;; Parameters:    Size  Location     Type
 13542 ;;  ff1             4   23[BANK0 ] long 
 13543 ;;  ff2             4   27[BANK0 ] long 
 13544 ;; Auto vars:     Size  Location     Type
 13545 ;;		None
 13546 ;; Return value:  Size  Location     Type
 13547 ;;		None               void
 13548 ;; Registers used:
 13549 ;;		wreg, status,2, status,0
 13550 ;; Tracked objects:
 13551 ;;		On entry : 0/0
 13552 ;;		On exit  : 0/0
 13553 ;;		Unchanged: 0/0
 13554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13555 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13557 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13558 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13559 ;;Total ram usage:       12 bytes
 13560 ;; Hardware stack levels used:    1
 13561 ;; Hardware stack levels required when called:    4
 13562 ;; This function calls:
 13563 ;;		Nothing
 13564 ;; This function is called by:
 13565 ;;		_LED_setHSL
 13566 ;;		_pulseColors
 13567 ;; This function uses a non-reentrant model
 13568 ;;
 13569                           
 13570                           
 13571                           ;psect for function ___fleq
 13572  12A2                     ___fleq:	
 13573                           
 13574                           ;incstack = 0
 13575                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13576  12A2  3000               	movlw	0
 13577  12A3  0140               	movlb	0	; select bank0
 13578  12A4  0537               	andwf	___fleq@ff1,w
 13579  12A5  00BF               	movwf	??___fleq
 13580  12A6  3000               	movlw	0
 13581  12A7  0538               	andwf	___fleq@ff1+1,w
 13582  12A8  00C0               	movwf	??___fleq+1
 13583  12A9  3080               	movlw	128
 13584  12AA  0539               	andwf	___fleq@ff1+2,w
 13585  12AB  00C1               	movwf	??___fleq+2
 13586  12AC  307F               	movlw	127
 13587  12AD  053A               	andwf	___fleq@ff1+3,w
 13588  12AE  00C2               	movwf	??___fleq+3
 13589  12AF  0842               	movf	??___fleq+3,w
 13590  12B0  0441               	iorwf	??___fleq+2,w
 13591  12B1  0440               	iorwf	??___fleq+1,w
 13592  12B2  043F               	iorwf	??___fleq,w
 13593  12B3  1D03               	skipz
 13594  12B4  2ABD               	goto	l1452
 13595  12B5  3000               	movlw	0
 13596  12B6  00BA               	movwf	___fleq@ff1+3
 13597  12B7  3000               	movlw	0
 13598  12B8  00B9               	movwf	___fleq@ff1+2
 13599  12B9  3000               	movlw	0
 13600  12BA  00B8               	movwf	___fleq@ff1+1
 13601  12BB  3000               	movlw	0
 13602  12BC  00B7               	movwf	___fleq@ff1
 13603  12BD                     l1452:	
 13604  12BD  3000               	movlw	0
 13605  12BE  053B               	andwf	___fleq@ff2,w
 13606  12BF  00BF               	movwf	??___fleq
 13607  12C0  3000               	movlw	0
 13608  12C1  053C               	andwf	___fleq@ff2+1,w
 13609  12C2  00C0               	movwf	??___fleq+1
 13610  12C3  3080               	movlw	128
 13611  12C4  053D               	andwf	___fleq@ff2+2,w
 13612  12C5  00C1               	movwf	??___fleq+2
 13613  12C6  307F               	movlw	127
 13614  12C7  053E               	andwf	___fleq@ff2+3,w
 13615  12C8  00C2               	movwf	??___fleq+3
 13616  12C9  0842               	movf	??___fleq+3,w
 13617  12CA  0441               	iorwf	??___fleq+2,w
 13618  12CB  0440               	iorwf	??___fleq+1,w
 13619  12CC  043F               	iorwf	??___fleq,w
 13620  12CD  1D03               	skipz
 13621  12CE  2AD7               	goto	l1453
 13622  12CF  3000               	movlw	0
 13623  12D0  00BE               	movwf	___fleq@ff2+3
 13624  12D1  3000               	movlw	0
 13625  12D2  00BD               	movwf	___fleq@ff2+2
 13626  12D3  3000               	movlw	0
 13627  12D4  00BC               	movwf	___fleq@ff2+1
 13628  12D5  3000               	movlw	0
 13629  12D6  00BB               	movwf	___fleq@ff2
 13630  12D7                     l1453:	
 13631  12D7  083E               	movf	___fleq@ff2+3,w
 13632  12D8  063A               	xorwf	___fleq@ff1+3,w
 13633  12D9  1D03               	skipz
 13634  12DA  2AE5               	goto	u3855
 13635  12DB  083D               	movf	___fleq@ff2+2,w
 13636  12DC  0639               	xorwf	___fleq@ff1+2,w
 13637  12DD  1D03               	skipz
 13638  12DE  2AE5               	goto	u3855
 13639  12DF  083C               	movf	___fleq@ff2+1,w
 13640  12E0  0638               	xorwf	___fleq@ff1+1,w
 13641  12E1  1D03               	skipz
 13642  12E2  2AE5               	goto	u3855
 13643  12E3  083B               	movf	___fleq@ff2,w
 13644  12E4  0637               	xorwf	___fleq@ff1,w
 13645  12E5                     u3855:	
 13646  12E5  1903               	skipnz
 13647  12E6  2AE9               	goto	l4191
 13648  12E7  1003               	clrc
 13649  12E8  0008               	return
 13650  12E9                     l4191:	
 13651  12E9  1403               	setc
 13652  12EA  0008               	return
 13653  12EB                     __end_of___fleq:	
 13654                           
 13655                           	psect	text43
 13656  0624                     __ptext43:	
 13657 ;; *************** function ___fldiv *****************
 13658 ;; Defined at:
 13659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;  a               4   23[BANK0 ] long 
 13662 ;;  b               4   27[BANK0 ] long 
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;  grs             4   43[BANK0 ] unsigned long 
 13665 ;;  rem             4   36[BANK0 ] unsigned long 
 13666 ;;  new_exp         2   41[BANK0 ] int 
 13667 ;;  aexp            1   48[BANK0 ] unsigned char 
 13668 ;;  bexp            1   47[BANK0 ] unsigned char 
 13669 ;;  sign            1   40[BANK0 ] unsigned char 
 13670 ;; Return value:  Size  Location     Type
 13671 ;;                  4   23[BANK0 ] unsigned char 
 13672 ;; Registers used:
 13673 ;;		wreg, status,2, status,0
 13674 ;; Tracked objects:
 13675 ;;		On entry : 0/0
 13676 ;;		On exit  : 0/0
 13677 ;;		Unchanged: 0/0
 13678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13679 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13680 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13681 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13682 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13683 ;;Total ram usage:       26 bytes
 13684 ;; Hardware stack levels used:    1
 13685 ;; Hardware stack levels required when called:    4
 13686 ;; This function calls:
 13687 ;;		Nothing
 13688 ;; This function is called by:
 13689 ;;		_LED_setHSL
 13690 ;;		_pulseColors
 13691 ;; This function uses a non-reentrant model
 13692 ;;
 13693                           
 13694                           
 13695                           ;psect for function ___fldiv
 13696  0624                     ___fldiv:	
 13697                           
 13698                           ;incstack = 0
 13699                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 13700  0624  0140               	movlb	0	; select bank0
 13701  0625  083E               	movf	___fldiv@b+3,w
 13702  0626  3980               	andlw	128
 13703  0627  00BF               	movwf	??___fldiv
 13704  0628  083F               	movf	??___fldiv,w
 13705  0629  00C8               	movwf	___fldiv@sign
 13706  062A  353E               	lslf	___fldiv@b+3,w
 13707  062B  00BF               	movwf	??___fldiv
 13708  062C  083F               	movf	??___fldiv,w
 13709  062D  00CF               	movwf	___fldiv@bexp
 13710  062E  1BBD               	btfsc	___fldiv@b+2,7
 13711  062F  144F               	bsf	___fldiv@bexp,0
 13712  0630  084F               	movf	___fldiv@bexp,w
 13713  0631  1903               	btfsc	3,2
 13714  0632  2E41               	goto	l4249
 13715  0633  0A4F               	incf	___fldiv@bexp,w
 13716  0634  1D03               	btfss	3,2
 13717  0635  2E3E               	goto	l4245
 13718  0636  3000               	movlw	0
 13719  0637  00BE               	movwf	___fldiv@b+3
 13720  0638  3000               	movlw	0
 13721  0639  00BD               	movwf	___fldiv@b+2
 13722  063A  3000               	movlw	0
 13723  063B  00BC               	movwf	___fldiv@b+1
 13724  063C  3000               	movlw	0
 13725  063D  00BB               	movwf	___fldiv@b
 13726  063E                     l4245:	
 13727  063E  17BD               	bsf	___fldiv@b+2,7
 13728  063F  01BE               	clrf	___fldiv@b+3
 13729  0640  2E49               	goto	l4251
 13730  0641                     l4249:	
 13731  0641  3000               	movlw	0
 13732  0642  00BE               	movwf	___fldiv@b+3
 13733  0643  3000               	movlw	0
 13734  0644  00BD               	movwf	___fldiv@b+2
 13735  0645  3000               	movlw	0
 13736  0646  00BC               	movwf	___fldiv@b+1
 13737  0647  3000               	movlw	0
 13738  0648  00BB               	movwf	___fldiv@b
 13739  0649                     l4251:	
 13740  0649  083A               	movf	___fldiv@a+3,w
 13741  064A  3980               	andlw	128
 13742  064B  00BF               	movwf	??___fldiv
 13743  064C  083F               	movf	??___fldiv,w
 13744  064D  06C8               	xorwf	___fldiv@sign,f
 13745  064E  353A               	lslf	___fldiv@a+3,w
 13746  064F  00BF               	movwf	??___fldiv
 13747  0650  083F               	movf	??___fldiv,w
 13748  0651  00D0               	movwf	___fldiv@aexp
 13749  0652  1BB9               	btfsc	___fldiv@a+2,7
 13750  0653  1450               	bsf	___fldiv@aexp,0
 13751  0654  0850               	movf	___fldiv@aexp,w
 13752  0655  1903               	btfsc	3,2
 13753  0656  2E65               	goto	l4269
 13754  0657  0A50               	incf	___fldiv@aexp,w
 13755  0658  1D03               	btfss	3,2
 13756  0659  2E62               	goto	l4265
 13757  065A  3000               	movlw	0
 13758  065B  00BA               	movwf	___fldiv@a+3
 13759  065C  3000               	movlw	0
 13760  065D  00B9               	movwf	___fldiv@a+2
 13761  065E  3000               	movlw	0
 13762  065F  00B8               	movwf	___fldiv@a+1
 13763  0660  3000               	movlw	0
 13764  0661  00B7               	movwf	___fldiv@a
 13765  0662                     l4265:	
 13766  0662  17B9               	bsf	___fldiv@a+2,7
 13767  0663  01BA               	clrf	___fldiv@a+3
 13768  0664  2E6D               	goto	l1640
 13769  0665                     l4269:	
 13770  0665  3000               	movlw	0
 13771  0666  00BA               	movwf	___fldiv@a+3
 13772  0667  3000               	movlw	0
 13773  0668  00B9               	movwf	___fldiv@a+2
 13774  0669  3000               	movlw	0
 13775  066A  00B8               	movwf	___fldiv@a+1
 13776  066B  3000               	movlw	0
 13777  066C  00B7               	movwf	___fldiv@a
 13778  066D                     l1640:	
 13779  066D  083A               	movf	___fldiv@a+3,w
 13780  066E  0439               	iorwf	___fldiv@a+2,w
 13781  066F  0438               	iorwf	___fldiv@a+1,w
 13782  0670  0437               	iorwf	___fldiv@a,w
 13783  0671  1D03               	skipz
 13784  0672  2E8C               	goto	l4279
 13785  0673  3000               	movlw	0
 13786  0674  00BE               	movwf	___fldiv@b+3
 13787  0675  3000               	movlw	0
 13788  0676  00BD               	movwf	___fldiv@b+2
 13789  0677  3000               	movlw	0
 13790  0678  00BC               	movwf	___fldiv@b+1
 13791  0679  3000               	movlw	0
 13792  067A  00BB               	movwf	___fldiv@b
 13793  067B  3080               	movlw	128
 13794  067C  04BD               	iorwf	___fldiv@b+2,f
 13795  067D  307F               	movlw	127
 13796  067E  04BE               	iorwf	___fldiv@b+3,f
 13797  067F                     L3:	
 13798  067F  0848               	movf	___fldiv@sign,w
 13799  0680  00BF               	movwf	??___fldiv
 13800  0681  083F               	movf	??___fldiv,w
 13801  0682  04BE               	iorwf	___fldiv@b+3,f
 13802  0683  083E               	movf	___fldiv@b+3,w
 13803  0684  00BA               	movwf	?___fldiv+3
 13804  0685  083D               	movf	___fldiv@b+2,w
 13805  0686  00B9               	movwf	?___fldiv+2
 13806  0687  083C               	movf	___fldiv@b+1,w
 13807  0688  00B8               	movwf	?___fldiv+1
 13808  0689  083B               	movf	___fldiv@b,w
 13809  068A  00B7               	movwf	?___fldiv
 13810  068B  0008               	return
 13811  068C                     l4279:	
 13812  068C  084F               	movf	___fldiv@bexp,w
 13813  068D  1D03               	btfss	3,2
 13814  068E  2E98               	goto	l4285
 13815  068F  3000               	movlw	0
 13816  0690  00BA               	movwf	?___fldiv+3
 13817  0691  3000               	movlw	0
 13818  0692  00B9               	movwf	?___fldiv+2
 13819  0693  3000               	movlw	0
 13820  0694  00B8               	movwf	?___fldiv+1
 13821  0695  3000               	movlw	0
 13822  0696  00B7               	movwf	?___fldiv
 13823  0697  0008               	return
 13824  0698                     l4285:	
 13825  0698  084F               	movf	___fldiv@bexp,w
 13826  0699  00BF               	movwf	??___fldiv
 13827  069A  01C0               	clrf	??___fldiv+1
 13828  069B  0840               	movf	??___fldiv+1,w
 13829  069C  00C2               	movwf	??___fldiv+3
 13830  069D  0850               	movf	___fldiv@aexp,w
 13831  069E  023F               	subwf	??___fldiv,w
 13832  069F  00C1               	movwf	??___fldiv+2
 13833  06A0  1C03               	skipc
 13834  06A1  03C2               	decf	??___fldiv+3,f
 13835  06A2  0841               	movf	??___fldiv+2,w
 13836  06A3  3E7F               	addlw	127
 13837  06A4  00C9               	movwf	___fldiv@new_exp
 13838  06A5  3000               	movlw	0
 13839  06A6  3D42               	addwfc	??___fldiv+3,w
 13840  06A7  00CA               	movwf	___fldiv@new_exp+1
 13841  06A8  083E               	movf	___fldiv@b+3,w
 13842  06A9  00C7               	movwf	___fldiv@rem+3
 13843  06AA  083D               	movf	___fldiv@b+2,w
 13844  06AB  00C6               	movwf	___fldiv@rem+2
 13845  06AC  083C               	movf	___fldiv@b+1,w
 13846  06AD  00C5               	movwf	___fldiv@rem+1
 13847  06AE  083B               	movf	___fldiv@b,w
 13848  06AF  00C4               	movwf	___fldiv@rem
 13849  06B0  3000               	movlw	0
 13850  06B1  00BE               	movwf	___fldiv@b+3
 13851  06B2  3000               	movlw	0
 13852  06B3  00BD               	movwf	___fldiv@b+2
 13853  06B4  3000               	movlw	0
 13854  06B5  00BC               	movwf	___fldiv@b+1
 13855  06B6  3000               	movlw	0
 13856  06B7  00BB               	movwf	___fldiv@b
 13857  06B8  3000               	movlw	0
 13858  06B9  00CE               	movwf	___fldiv@grs+3
 13859  06BA  3000               	movlw	0
 13860  06BB  00CD               	movwf	___fldiv@grs+2
 13861  06BC  3000               	movlw	0
 13862  06BD  00CC               	movwf	___fldiv@grs+1
 13863  06BE  3000               	movlw	0
 13864  06BF  00CB               	movwf	___fldiv@grs
 13865  06C0  01D0               	clrf	___fldiv@aexp
 13866  06C1                     l4313:	
 13867  06C1  301A               	movlw	26
 13868  06C2  0250               	subwf	___fldiv@aexp,w
 13869  06C3  1803               	btfsc	3,0
 13870  06C4  2EFD               	goto	l4315
 13871  06C5  0850               	movf	___fldiv@aexp,w
 13872  06C6  1903               	btfsc	3,2
 13873  06C7  2EDF               	goto	l4305
 13874  06C8  3001               	movlw	1
 13875  06C9                     u4055:	
 13876  06C9  35C4               	lslf	___fldiv@rem,f
 13877  06CA  0DC5               	rlf	___fldiv@rem+1,f
 13878  06CB  0DC6               	rlf	___fldiv@rem+2,f
 13879  06CC  0DC7               	rlf	___fldiv@rem+3,f
 13880  06CD  0B89               	decfsz	9,f
 13881  06CE  2EC9               	goto	u4055
 13882  06CF  3001               	movlw	1
 13883  06D0                     u4065:	
 13884  06D0  35BB               	lslf	___fldiv@b,f
 13885  06D1  0DBC               	rlf	___fldiv@b+1,f
 13886  06D2  0DBD               	rlf	___fldiv@b+2,f
 13887  06D3  0DBE               	rlf	___fldiv@b+3,f
 13888  06D4  0B89               	decfsz	9,f
 13889  06D5  2ED0               	goto	u4065
 13890  06D6  1BCE               	btfsc	___fldiv@grs+3,7
 13891  06D7  143B               	bsf	___fldiv@b,0
 13892  06D8  3001               	movlw	1
 13893  06D9                     u4085:	
 13894  06D9  35CB               	lslf	___fldiv@grs,f
 13895  06DA  0DCC               	rlf	___fldiv@grs+1,f
 13896  06DB  0DCD               	rlf	___fldiv@grs+2,f
 13897  06DC  0DCE               	rlf	___fldiv@grs+3,f
 13898  06DD  0B89               	decfsz	9,f
 13899  06DE  2ED9               	goto	u4085
 13900  06DF                     l4305:	
 13901  06DF  083A               	movf	___fldiv@a+3,w
 13902  06E0  0247               	subwf	___fldiv@rem+3,w
 13903  06E1  1D03               	skipz
 13904  06E2  2EED               	goto	u4095
 13905  06E3  0839               	movf	___fldiv@a+2,w
 13906  06E4  0246               	subwf	___fldiv@rem+2,w
 13907  06E5  1D03               	skipz
 13908  06E6  2EED               	goto	u4095
 13909  06E7  0838               	movf	___fldiv@a+1,w
 13910  06E8  0245               	subwf	___fldiv@rem+1,w
 13911  06E9  1D03               	skipz
 13912  06EA  2EED               	goto	u4095
 13913  06EB  0837               	movf	___fldiv@a,w
 13914  06EC  0244               	subwf	___fldiv@rem,w
 13915  06ED                     u4095:	
 13916  06ED  1C03               	skipc
 13917  06EE  2EF8               	goto	l4311
 13918  06EF  174E               	bsf	___fldiv@grs+3,6
 13919  06F0  0837               	movf	___fldiv@a,w
 13920  06F1  02C4               	subwf	___fldiv@rem,f
 13921  06F2  0838               	movf	___fldiv@a+1,w
 13922  06F3  3BC5               	subwfb	___fldiv@rem+1,f
 13923  06F4  0839               	movf	___fldiv@a+2,w
 13924  06F5  3BC6               	subwfb	___fldiv@rem+2,f
 13925  06F6  083A               	movf	___fldiv@a+3,w
 13926  06F7  3BC7               	subwfb	___fldiv@rem+3,f
 13927  06F8                     l4311:	
 13928  06F8  3001               	movlw	1
 13929  06F9  00BF               	movwf	??___fldiv
 13930  06FA  083F               	movf	??___fldiv,w
 13931  06FB  07D0               	addwf	___fldiv@aexp,f
 13932  06FC  2EC1               	goto	l4313
 13933  06FD                     l4315:	
 13934  06FD  0847               	movf	___fldiv@rem+3,w
 13935  06FE  0446               	iorwf	___fldiv@rem+2,w
 13936  06FF  0445               	iorwf	___fldiv@rem+1,w
 13937  0700  0444               	iorwf	___fldiv@rem,w
 13938  0701  1D03               	btfss	3,2
 13939  0702  144B               	bsf	___fldiv@grs,0
 13940  0703                     l4329:	
 13941  0703  1BBD               	btfsc	___fldiv@b+2,7
 13942  0704  2F1A               	goto	l4331
 13943  0705  3001               	movlw	1
 13944  0706                     u4125:	
 13945  0706  35BB               	lslf	___fldiv@b,f
 13946  0707  0DBC               	rlf	___fldiv@b+1,f
 13947  0708  0DBD               	rlf	___fldiv@b+2,f
 13948  0709  0DBE               	rlf	___fldiv@b+3,f
 13949  070A  0B89               	decfsz	9,f
 13950  070B  2F06               	goto	u4125
 13951  070C  1BCE               	btfsc	___fldiv@grs+3,7
 13952  070D  143B               	bsf	___fldiv@b,0
 13953  070E  3001               	movlw	1
 13954  070F                     u4145:	
 13955  070F  35CB               	lslf	___fldiv@grs,f
 13956  0710  0DCC               	rlf	___fldiv@grs+1,f
 13957  0711  0DCD               	rlf	___fldiv@grs+2,f
 13958  0712  0DCE               	rlf	___fldiv@grs+3,f
 13959  0713  0B89               	decfsz	9,f
 13960  0714  2F0F               	goto	u4145
 13961  0715  30FF               	movlw	255
 13962  0716  07C9               	addwf	___fldiv@new_exp,f
 13963  0717  30FF               	movlw	255
 13964  0718  3DCA               	addwfc	___fldiv@new_exp+1,f
 13965  0719  2F03               	goto	l4329
 13966  071A                     l4331:	
 13967  071A  01D0               	clrf	___fldiv@aexp
 13968  071B  1FCE               	btfss	___fldiv@grs+3,7
 13969  071C  2F33               	goto	l4341
 13970  071D  30FF               	movlw	255
 13971  071E  054B               	andwf	___fldiv@grs,w
 13972  071F  00BF               	movwf	??___fldiv
 13973  0720  30FF               	movlw	255
 13974  0721  054C               	andwf	___fldiv@grs+1,w
 13975  0722  00C0               	movwf	??___fldiv+1
 13976  0723  30FF               	movlw	255
 13977  0724  054D               	andwf	___fldiv@grs+2,w
 13978  0725  00C1               	movwf	??___fldiv+2
 13979  0726  307F               	movlw	127
 13980  0727  054E               	andwf	___fldiv@grs+3,w
 13981  0728  00C2               	movwf	??___fldiv+3
 13982  0729  0842               	movf	??___fldiv+3,w
 13983  072A  0441               	iorwf	??___fldiv+2,w
 13984  072B  0440               	iorwf	??___fldiv+1,w
 13985  072C  043F               	iorwf	??___fldiv,w
 13986  072D  1903               	skipnz
 13987  072E  183B               	btfsc	___fldiv@b,0
 13988  072F  2F31               	goto	l4337
 13989  0730  2F33               	goto	l4341
 13990  0731                     l4337:	
 13991  0731  01D0               	clrf	___fldiv@aexp
 13992  0732  0AD0               	incf	___fldiv@aexp,f
 13993  0733                     l4341:	
 13994  0733  0850               	movf	___fldiv@aexp,w
 13995  0734  1903               	btfsc	3,2
 13996  0735  2F5C               	goto	l4351
 13997  0736  3001               	movlw	1
 13998  0737  07BB               	addwf	___fldiv@b,f
 13999  0738  3000               	movlw	0
 14000  0739  3DBC               	addwfc	___fldiv@b+1,f
 14001  073A  3000               	movlw	0
 14002  073B  3DBD               	addwfc	___fldiv@b+2,f
 14003  073C  3000               	movlw	0
 14004  073D  3DBE               	addwfc	___fldiv@b+3,f
 14005  073E  1C3E               	btfss	___fldiv@b+3,0
 14006  073F  2F5C               	goto	l4351
 14007  0740  083B               	movf	___fldiv@b,w
 14008  0741  00BF               	movwf	??___fldiv
 14009  0742  083C               	movf	___fldiv@b+1,w
 14010  0743  00C0               	movwf	??___fldiv+1
 14011  0744  083D               	movf	___fldiv@b+2,w
 14012  0745  00C1               	movwf	??___fldiv+2
 14013  0746  083E               	movf	___fldiv@b+3,w
 14014  0747  00C2               	movwf	??___fldiv+3
 14015  0748  3001               	movlw	1
 14016  0749  00C3               	movwf	??___fldiv+4
 14017  074A                     u4215:	
 14018  074A  37C2               	asrf	??___fldiv+3,f
 14019  074B  0CC1               	rrf	??___fldiv+2,f
 14020  074C  0CC0               	rrf	??___fldiv+1,f
 14021  074D  0CBF               	rrf	??___fldiv,f
 14022  074E  0BC3               	decfsz	??___fldiv+4,f
 14023  074F  2F4A               	goto	u4215
 14024  0750  0842               	movf	??___fldiv+3,w
 14025  0751  00BE               	movwf	___fldiv@b+3
 14026  0752  0841               	movf	??___fldiv+2,w
 14027  0753  00BD               	movwf	___fldiv@b+2
 14028  0754  0840               	movf	??___fldiv+1,w
 14029  0755  00BC               	movwf	___fldiv@b+1
 14030  0756  083F               	movf	??___fldiv,w
 14031  0757  00BB               	movwf	___fldiv@b
 14032  0758  3001               	movlw	1
 14033  0759  07C9               	addwf	___fldiv@new_exp,f
 14034  075A  3000               	movlw	0
 14035  075B  3DCA               	addwfc	___fldiv@new_exp+1,f
 14036  075C                     l4351:	
 14037  075C  084A               	movf	___fldiv@new_exp+1,w
 14038  075D  3A80               	xorlw	128
 14039  075E  00BF               	movwf	??___fldiv
 14040  075F  3080               	movlw	128
 14041  0760  023F               	subwf	??___fldiv,w
 14042  0761  1D03               	skipz
 14043  0762  2F65               	goto	u4225
 14044  0763  30FF               	movlw	255
 14045  0764  0249               	subwf	___fldiv@new_exp,w
 14046  0765                     u4225:	
 14047  0765  1C03               	skipc
 14048  0766  2F74               	goto	l1661
 14049  0767  30FF               	movlw	255
 14050  0768  0140               	movlb	0	; select bank0
 14051  0769  00C9               	movwf	___fldiv@new_exp
 14052  076A  3000               	movlw	0
 14053  076B  00CA               	movwf	___fldiv@new_exp+1
 14054  076C  3000               	movlw	0
 14055  076D  00BE               	movwf	___fldiv@b+3
 14056  076E  3000               	movlw	0
 14057  076F  00BD               	movwf	___fldiv@b+2
 14058  0770  3000               	movlw	0
 14059  0771  00BC               	movwf	___fldiv@b+1
 14060  0772  3000               	movlw	0
 14061  0773  00BB               	movwf	___fldiv@b
 14062  0774                     l1661:	
 14063  0774  0140               	movlb	0	; select bank0
 14064  0775  084A               	movf	___fldiv@new_exp+1,w
 14065  0776  3A80               	xorlw	128
 14066  0777  00BF               	movwf	??___fldiv
 14067  0778  3080               	movlw	128
 14068  0779  023F               	subwf	??___fldiv,w
 14069  077A  1D03               	skipz
 14070  077B  2F7E               	goto	u4235
 14071  077C  3001               	movlw	1
 14072  077D  0249               	subwf	___fldiv@new_exp,w
 14073  077E                     u4235:	
 14074  077E  1803               	skipnc
 14075  077F  2F8C               	goto	l1662
 14076  0780  0140               	movlb	0	; select bank0
 14077  0781  01C9               	clrf	___fldiv@new_exp
 14078  0782  01CA               	clrf	___fldiv@new_exp+1
 14079  0783  3000               	movlw	0
 14080  0784  00BE               	movwf	___fldiv@b+3
 14081  0785  3000               	movlw	0
 14082  0786  00BD               	movwf	___fldiv@b+2
 14083  0787  3000               	movlw	0
 14084  0788  00BC               	movwf	___fldiv@b+1
 14085  0789  3000               	movlw	0
 14086  078A  00BB               	movwf	___fldiv@b
 14087  078B  01C8               	clrf	___fldiv@sign
 14088  078C                     l1662:	
 14089  078C  0140               	movlb	0	; select bank0
 14090  078D  0849               	movf	___fldiv@new_exp,w
 14091  078E  00BF               	movwf	??___fldiv
 14092  078F  083F               	movf	??___fldiv,w
 14093  0790  00CF               	movwf	___fldiv@bexp
 14094  0791  1C4F               	btfss	___fldiv@bexp,0
 14095  0792  2F95               	goto	l4365
 14096  0793  17BD               	bsf	___fldiv@b+2,7
 14097  0794  2F99               	goto	l1664
 14098  0795                     l4365:	
 14099  0795  307F               	movlw	127
 14100  0796  00BF               	movwf	??___fldiv
 14101  0797  083F               	movf	??___fldiv,w
 14102  0798  05BD               	andwf	___fldiv@b+2,f
 14103  0799                     l1664:	
 14104  0799  364F               	lsrf	___fldiv@bexp,w
 14105  079A  00BF               	movwf	??___fldiv
 14106  079B  083F               	movf	??___fldiv,w
 14107  079C  00BE               	movwf	___fldiv@b+3
 14108  079D  2E7F               	goto	L3
 14109  079E                     __end_of___fldiv:	
 14110                           
 14111                           	psect	text44
 14112  1220                     __ptext44:	
 14113 ;; *************** function _LED_setColor *****************
 14114 ;; Defined at:
 14115 ;;		line 60 in file "led.c"
 14116 ;; Parameters:    Size  Location     Type
 14117 ;;  red             1    wreg     unsigned char 
 14118 ;;  green           1    0[BANK0 ] unsigned char 
 14119 ;;  white           1    1[BANK0 ] unsigned char 
 14120 ;;  blue            1    2[BANK0 ] unsigned char 
 14121 ;; Auto vars:     Size  Location     Type
 14122 ;;  red             1   21[BANK0 ] unsigned char 
 14123 ;;  lo4             2   19[BANK0 ] int 
 14124 ;;  hi4             2    0        int 
 14125 ;;  lo3             2   15[BANK0 ] int 
 14126 ;;  hi3             2    0        int 
 14127 ;;  lo2             2   11[BANK0 ] int 
 14128 ;;  hi2             2    0        int 
 14129 ;;  lo1             2    7[BANK0 ] int 
 14130 ;;  hi1             2    0        int 
 14131 ;; Return value:  Size  Location     Type
 14132 ;;                  1    wreg      void 
 14133 ;; Registers used:
 14134 ;;		wreg, status,2
 14135 ;; Tracked objects:
 14136 ;;		On entry : 0/0
 14137 ;;		On exit  : 0/0
 14138 ;;		Unchanged: 0/0
 14139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14140 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14141 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14142 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14143 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14144 ;;Total ram usage:       22 bytes
 14145 ;; Hardware stack levels used:    1
 14146 ;; Hardware stack levels required when called:    4
 14147 ;; This function calls:
 14148 ;;		Nothing
 14149 ;; This function is called by:
 14150 ;;		_LED_setHSL
 14151 ;;		_LED_DMX
 14152 ;; This function uses a non-reentrant model
 14153 ;;
 14154                           
 14155                           
 14156                           ;psect for function _LED_setColor
 14157  1220                     _LED_setColor:	
 14158                           
 14159                           ;incstack = 0
 14160                           ; Regs used in _LED_setColor: [wreg+status,2]
 14161                           ;LED_setColor@red stored from wreg
 14162  1220  0140               	movlb	0	; select bank0
 14163  1221  00B5               	movwf	LED_setColor@red
 14164                           
 14165                           ;led.c: 61:     red/=2;
 14166  1222  1003               	clrc
 14167  1223  0CB5               	rrf	LED_setColor@red,f
 14168                           
 14169                           ;led.c: 62:     green/=2;
 14170  1224  1003               	clrc
 14171  1225  0CA0               	rrf	LED_setColor@green,f
 14172                           
 14173                           ;led.c: 63:     blue/=2;
 14174  1226  1003               	clrc
 14175  1227  0CA2               	rrf	LED_setColor@blue,f
 14176                           
 14177                           ;led.c: 64:     white/=2;
 14178  1228  1003               	clrc
 14179  1229  0CA1               	rrf	LED_setColor@white,f
 14180                           
 14181                           ;led.c: 66:     int lo1 = red & 0x00FF;
 14182  122A  0835               	movf	LED_setColor@red,w
 14183  122B  00A3               	movwf	??_LED_setColor
 14184  122C  01A4               	clrf	??_LED_setColor+1
 14185  122D  0823               	movf	??_LED_setColor,w
 14186  122E  00A7               	movwf	LED_setColor@lo1
 14187  122F  0824               	movf	??_LED_setColor+1,w
 14188  1230  00A8               	movwf	LED_setColor@lo1+1
 14189                           
 14190                           ;led.c: 68:     int lo2 = green & 0x00FF;
 14191  1231  0820               	movf	LED_setColor@green,w
 14192  1232  00A3               	movwf	??_LED_setColor
 14193  1233  01A4               	clrf	??_LED_setColor+1
 14194  1234  0823               	movf	??_LED_setColor,w
 14195  1235  00AB               	movwf	LED_setColor@lo2
 14196  1236  0824               	movf	??_LED_setColor+1,w
 14197  1237  00AC               	movwf	LED_setColor@lo2+1
 14198                           
 14199                           ;led.c: 70:     int lo3 = blue & 0x00FF;
 14200  1238  0822               	movf	LED_setColor@blue,w
 14201  1239  00A3               	movwf	??_LED_setColor
 14202  123A  01A4               	clrf	??_LED_setColor+1
 14203  123B  0823               	movf	??_LED_setColor,w
 14204  123C  00AF               	movwf	LED_setColor@lo3
 14205  123D  0824               	movf	??_LED_setColor+1,w
 14206  123E  00B0               	movwf	LED_setColor@lo3+1
 14207                           
 14208                           ;led.c: 72:     int lo4 = white & 0x00FF;
 14209  123F  0821               	movf	LED_setColor@white,w
 14210  1240  00A3               	movwf	??_LED_setColor
 14211  1241  01A4               	clrf	??_LED_setColor+1
 14212  1242  0823               	movf	??_LED_setColor,w
 14213  1243  00B3               	movwf	LED_setColor@lo4
 14214  1244  0824               	movf	??_LED_setColor+1,w
 14215  1245  00B4               	movwf	LED_setColor@lo4+1
 14216                           
 14217                           ;led.c: 74:     CCPR1H = hi1;
 14218  1246  0146               	movlb	6	; select bank6
 14219  1247  018D               	clrf	13	;volatile
 14220                           
 14221                           ;led.c: 75:     CCPR1L = lo1;
 14222  1248  0140               	movlb	0	; select bank0
 14223  1249  0827               	movf	LED_setColor@lo1,w
 14224  124A  0146               	movlb	6	; select bank6
 14225  124B  008C               	movwf	12	;volatile
 14226                           
 14227                           ;led.c: 77:     CCPR2H = hi2;
 14228  124C  0191               	clrf	17	;volatile
 14229                           
 14230                           ;led.c: 78:     CCPR2L = lo2;
 14231  124D  0140               	movlb	0	; select bank0
 14232  124E  082B               	movf	LED_setColor@lo2,w
 14233  124F  0146               	movlb	6	; select bank6
 14234  1250  0090               	movwf	16	;volatile
 14235                           
 14236                           ;led.c: 80:     CCPR3H = hi3;
 14237  1251  0195               	clrf	21	;volatile
 14238                           
 14239                           ;led.c: 81:     CCPR3L = lo3;
 14240  1252  0140               	movlb	0	; select bank0
 14241  1253  082F               	movf	LED_setColor@lo3,w
 14242  1254  0146               	movlb	6	; select bank6
 14243  1255  0094               	movwf	20	;volatile
 14244                           
 14245                           ;led.c: 83:     CCPR4H = hi4;
 14246  1256  0199               	clrf	25	;volatile
 14247                           
 14248                           ;led.c: 84:     CCPR4L = lo4;
 14249  1257  0140               	movlb	0	; select bank0
 14250  1258  0833               	movf	LED_setColor@lo4,w
 14251  1259  0146               	movlb	6	; select bank6
 14252  125A  0098               	movwf	24	;volatile
 14253  125B  0008               	return
 14254  125C                     __end_of_LED_setColor:	
 14255                           
 14256                           	psect	text45
 14257  0E1C                     __ptext45:	
 14258 ;; *************** function _HueToRGB *****************
 14259 ;; Defined at:
 14260 ;;		line 41 in file "led.c"
 14261 ;; Parameters:    Size  Location     Type
 14262 ;;  v1              4   67[BANK0 ] float 
 14263 ;;  v2              4   71[BANK0 ] float 
 14264 ;;  vH              4   75[BANK0 ] float 
 14265 ;; Auto vars:     Size  Location     Type
 14266 ;;		None
 14267 ;; Return value:  Size  Location     Type
 14268 ;;                  4   67[BANK0 ] float 
 14269 ;; Registers used:
 14270 ;;		wreg, status,2, status,0, pclath, cstack
 14271 ;; Tracked objects:
 14272 ;;		On entry : 0/0
 14273 ;;		On exit  : 0/0
 14274 ;;		Unchanged: 0/0
 14275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14276 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14277 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14279 ;;      Totals:         0      12       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14280 ;;Total ram usage:       16 bytes
 14281 ;; Hardware stack levels used:    1
 14282 ;; Hardware stack levels required when called:    6
 14283 ;; This function calls:
 14284 ;;		___fladd
 14285 ;;		___flge
 14286 ;;		___flmul
 14287 ;;		___flsub
 14288 ;; This function is called by:
 14289 ;;		_LED_setHSL
 14290 ;; This function uses a non-reentrant model
 14291 ;;
 14292                           
 14293                           
 14294                           ;psect for function _HueToRGB
 14295  0E1C                     _HueToRGB:	
 14296                           
 14297                           ;led.c: 42:  if (vH < 0)
 14298                           
 14299                           ;incstack = 0
 14300                           ; Regs used in _HueToRGB: [wreg+status,2+status,0+pclath+cstack]
 14301  0E1C  0140               	movlb	0	; select bank0
 14302  0E1D  086E               	movf	HueToRGB@vH+3,w
 14303  0E1E  00DA               	movwf	___flge@ff1+3
 14304  0E1F  086D               	movf	HueToRGB@vH+2,w
 14305  0E20  00D9               	movwf	___flge@ff1+2
 14306  0E21  086C               	movf	HueToRGB@vH+1,w
 14307  0E22  00D8               	movwf	___flge@ff1+1
 14308  0E23  086B               	movf	HueToRGB@vH,w
 14309  0E24  00D7               	movwf	___flge@ff1
 14310  0E25  3000               	movlw	0
 14311  0E26  00DE               	movwf	___flge@ff2+3
 14312  0E27  3000               	movlw	0
 14313  0E28  00DD               	movwf	___flge@ff2+2
 14314  0E29  3000               	movlw	0
 14315  0E2A  00DC               	movwf	___flge@ff2+1
 14316  0E2B  3000               	movlw	0
 14317  0E2C  00DB               	movwf	___flge@ff2
 14318  0E2D  3195  2503  318E   	fcall	___flge
 14319  0E30  1803               	btfsc	3,0
 14320  0E31  2E4F               	goto	l969
 14321                           
 14322                           ;led.c: 43:   vH += 1;
 14323  0E32  303F               	movlw	63
 14324  0E33  0140               	movlb	0	; select bank0
 14325  0E34  00AC               	movwf	___fladd@b+3
 14326  0E35  3080               	movlw	128
 14327  0E36  00AB               	movwf	___fladd@b+2
 14328  0E37  3000               	movlw	0
 14329  0E38  00AA               	movwf	___fladd@b+1
 14330  0E39  3000               	movlw	0
 14331  0E3A  00A9               	movwf	___fladd@b
 14332  0E3B  086E               	movf	HueToRGB@vH+3,w
 14333  0E3C  00B0               	movwf	___fladd@a+3
 14334  0E3D  086D               	movf	HueToRGB@vH+2,w
 14335  0E3E  00AF               	movwf	___fladd@a+2
 14336  0E3F  086C               	movf	HueToRGB@vH+1,w
 14337  0E40  00AE               	movwf	___fladd@a+1
 14338  0E41  086B               	movf	HueToRGB@vH,w
 14339  0E42  00AD               	movwf	___fladd@a
 14340  0E43  318C  243A  318E   	fcall	___fladd
 14341  0E46  0140               	movlb	0	; select bank0
 14342  0E47  082C               	movf	?___fladd+3,w
 14343  0E48  00EE               	movwf	HueToRGB@vH+3
 14344  0E49  082B               	movf	?___fladd+2,w
 14345  0E4A  00ED               	movwf	HueToRGB@vH+2
 14346  0E4B  082A               	movf	?___fladd+1,w
 14347  0E4C  00EC               	movwf	HueToRGB@vH+1
 14348  0E4D  0829               	movf	?___fladd,w
 14349  0E4E  00EB               	movwf	HueToRGB@vH
 14350  0E4F                     l969:	
 14351                           
 14352                           ;led.c: 45:  if (vH > 1)
 14353  0E4F  303F               	movlw	63
 14354  0E50  0140               	movlb	0	; select bank0
 14355  0E51  00DA               	movwf	___flge@ff1+3
 14356  0E52  3080               	movlw	128
 14357  0E53  00D9               	movwf	___flge@ff1+2
 14358  0E54  3000               	movlw	0
 14359  0E55  00D8               	movwf	___flge@ff1+1
 14360  0E56  3000               	movlw	0
 14361  0E57  00D7               	movwf	___flge@ff1
 14362  0E58  086E               	movf	HueToRGB@vH+3,w
 14363  0E59  00DE               	movwf	___flge@ff2+3
 14364  0E5A  086D               	movf	HueToRGB@vH+2,w
 14365  0E5B  00DD               	movwf	___flge@ff2+2
 14366  0E5C  086C               	movf	HueToRGB@vH+1,w
 14367  0E5D  00DC               	movwf	___flge@ff2+1
 14368  0E5E  086B               	movf	HueToRGB@vH,w
 14369  0E5F  00DB               	movwf	___flge@ff2
 14370  0E60  3195  2503  318E   	fcall	___flge
 14371  0E63  1803               	btfsc	3,0
 14372  0E64  2E82               	goto	l970
 14373                           
 14374                           ;led.c: 46:   vH -= 1;
 14375  0E65  303F               	movlw	63
 14376  0E66  0140               	movlb	0	; select bank0
 14377  0E67  00DA               	movwf	___flsub@a+3
 14378  0E68  3080               	movlw	128
 14379  0E69  00D9               	movwf	___flsub@a+2
 14380  0E6A  3000               	movlw	0
 14381  0E6B  00D8               	movwf	___flsub@a+1
 14382  0E6C  3000               	movlw	0
 14383  0E6D  00D7               	movwf	___flsub@a
 14384  0E6E  086E               	movf	HueToRGB@vH+3,w
 14385  0E6F  00DE               	movwf	___flsub@b+3
 14386  0E70  086D               	movf	HueToRGB@vH+2,w
 14387  0E71  00DD               	movwf	___flsub@b+2
 14388  0E72  086C               	movf	HueToRGB@vH+1,w
 14389  0E73  00DC               	movwf	___flsub@b+1
 14390  0E74  086B               	movf	HueToRGB@vH,w
 14391  0E75  00DB               	movwf	___flsub@b
 14392  0E76  319F  2739  318E   	fcall	___flsub
 14393  0E79  0140               	movlb	0	; select bank0
 14394  0E7A  085A               	movf	?___flsub+3,w
 14395  0E7B  00EE               	movwf	HueToRGB@vH+3
 14396  0E7C  0859               	movf	?___flsub+2,w
 14397  0E7D  00ED               	movwf	HueToRGB@vH+2
 14398  0E7E  0858               	movf	?___flsub+1,w
 14399  0E7F  00EC               	movwf	HueToRGB@vH+1
 14400  0E80  0857               	movf	?___flsub,w
 14401  0E81  00EB               	movwf	HueToRGB@vH
 14402  0E82                     l970:	
 14403                           
 14404                           ;led.c: 48:  if ((6 * vH) < 1)
 14405  0E82  3040               	movlw	64
 14406  0E83  0140               	movlb	0	; select bank0
 14407  0E84  00C0               	movwf	___flmul@b+3
 14408  0E85  30C0               	movlw	192
 14409  0E86  00BF               	movwf	___flmul@b+2
 14410  0E87  3000               	movlw	0
 14411  0E88  00BE               	movwf	___flmul@b+1
 14412  0E89  3000               	movlw	0
 14413  0E8A  00BD               	movwf	___flmul@b
 14414  0E8B  086E               	movf	HueToRGB@vH+3,w
 14415  0E8C  00C4               	movwf	___flmul@a+3
 14416  0E8D  086D               	movf	HueToRGB@vH+2,w
 14417  0E8E  00C3               	movwf	___flmul@a+2
 14418  0E8F  086C               	movf	HueToRGB@vH+1,w
 14419  0E90  00C2               	movwf	___flmul@a+1
 14420  0E91  086B               	movf	HueToRGB@vH,w
 14421  0E92  00C1               	movwf	___flmul@a
 14422  0E93  3183  23F8  318E   	fcall	___flmul
 14423  0E96  0140               	movlb	0	; select bank0
 14424  0E97  0840               	movf	?___flmul+3,w
 14425  0E98  00DA               	movwf	___flge@ff1+3
 14426  0E99  083F               	movf	?___flmul+2,w
 14427  0E9A  00D9               	movwf	___flge@ff1+2
 14428  0E9B  083E               	movf	?___flmul+1,w
 14429  0E9C  00D8               	movwf	___flge@ff1+1
 14430  0E9D  083D               	movf	?___flmul,w
 14431  0E9E  00D7               	movwf	___flge@ff1
 14432  0E9F  303F               	movlw	63
 14433  0EA0  00DE               	movwf	___flge@ff2+3
 14434  0EA1  3080               	movlw	128
 14435  0EA2  00DD               	movwf	___flge@ff2+2
 14436  0EA3  3000               	movlw	0
 14437  0EA4  00DC               	movwf	___flge@ff2+1
 14438  0EA5  3000               	movlw	0
 14439  0EA6  00DB               	movwf	___flge@ff2
 14440  0EA7  3195  2503  318E   	fcall	___flge
 14441  0EAA  1803               	btfsc	3,0
 14442  0EAB  2F1D               	goto	l5651
 14443                           
 14444                           ;led.c: 49:   return (v1 + (v2 - v1) * 6 * vH);
 14445  0EAC  3040               	movlw	64
 14446  0EAD  0140               	movlb	0	; select bank0
 14447  0EAE  00C0               	movwf	___flmul@b+3
 14448  0EAF  30C0               	movlw	192
 14449  0EB0  00BF               	movwf	___flmul@b+2
 14450  0EB1  3000               	movlw	0
 14451  0EB2  00BE               	movwf	___flmul@b+1
 14452  0EB3  3000               	movlw	0
 14453  0EB4  00BD               	movwf	___flmul@b
 14454  0EB5  0866               	movf	HueToRGB@v1+3,w
 14455  0EB6  00DA               	movwf	___flsub@a+3
 14456  0EB7  0865               	movf	HueToRGB@v1+2,w
 14457  0EB8  00D9               	movwf	___flsub@a+2
 14458  0EB9  0864               	movf	HueToRGB@v1+1,w
 14459  0EBA  00D8               	movwf	___flsub@a+1
 14460  0EBB  0863               	movf	HueToRGB@v1,w
 14461  0EBC  00D7               	movwf	___flsub@a
 14462  0EBD  086A               	movf	HueToRGB@v2+3,w
 14463  0EBE  00DE               	movwf	___flsub@b+3
 14464  0EBF  0869               	movf	HueToRGB@v2+2,w
 14465  0EC0  00DD               	movwf	___flsub@b+2
 14466  0EC1  0868               	movf	HueToRGB@v2+1,w
 14467  0EC2  00DC               	movwf	___flsub@b+1
 14468  0EC3  0867               	movf	HueToRGB@v2,w
 14469  0EC4  00DB               	movwf	___flsub@b
 14470  0EC5  319F  2739  318E   	fcall	___flsub
 14471  0EC8  0140               	movlb	0	; select bank0
 14472  0EC9  085A               	movf	?___flsub+3,w
 14473  0ECA  00C4               	movwf	___flmul@a+3
 14474  0ECB  0859               	movf	?___flsub+2,w
 14475  0ECC  00C3               	movwf	___flmul@a+2
 14476  0ECD  0858               	movf	?___flsub+1,w
 14477  0ECE  00C2               	movwf	___flmul@a+1
 14478  0ECF  0857               	movf	?___flsub,w
 14479  0ED0  00C1               	movwf	___flmul@a
 14480  0ED1  3183  23F8  318E   	fcall	___flmul
 14481  0ED4  0140               	movlb	0	; select bank0
 14482  0ED5  0840               	movf	?___flmul+3,w
 14483  0ED6  0141               	movlb	1	; select bank1
 14484  0ED7  00A3               	movwf	(_HueToRGB$2876+3)^(0+128)
 14485  0ED8  0140               	movlb	0	; select bank0
 14486  0ED9  083F               	movf	?___flmul+2,w
 14487  0EDA  0141               	movlb	1	; select bank1
 14488  0EDB  00A2               	movwf	(_HueToRGB$2876+2)^(0+128)
 14489  0EDC  0140               	movlb	0	; select bank0
 14490  0EDD  083E               	movf	?___flmul+1,w
 14491  0EDE  0141               	movlb	1	; select bank1
 14492  0EDF  00A1               	movwf	(_HueToRGB$2876+1)^(0+128)
 14493  0EE0  0140               	movlb	0	; select bank0
 14494  0EE1  083D               	movf	?___flmul,w
 14495  0EE2  0141               	movlb	1	; select bank1
 14496  0EE3  00A0               	movwf	_HueToRGB$2876^(0+128)
 14497                           
 14498                           ;led.c: 49:   return (v1 + (v2 - v1) * 6 * vH);
 14499  0EE4  0140               	movlb	0	; select bank0
 14500  0EE5  0866               	movf	HueToRGB@v1+3,w
 14501  0EE6  00AC               	movwf	___fladd@b+3
 14502  0EE7  0865               	movf	HueToRGB@v1+2,w
 14503  0EE8  00AB               	movwf	___fladd@b+2
 14504  0EE9  0864               	movf	HueToRGB@v1+1,w
 14505  0EEA  00AA               	movwf	___fladd@b+1
 14506  0EEB  0863               	movf	HueToRGB@v1,w
 14507  0EEC  00A9               	movwf	___fladd@b
 14508  0EED  086E               	movf	HueToRGB@vH+3,w
 14509  0EEE  00C0               	movwf	___flmul@b+3
 14510  0EEF  086D               	movf	HueToRGB@vH+2,w
 14511  0EF0  00BF               	movwf	___flmul@b+2
 14512  0EF1  086C               	movf	HueToRGB@vH+1,w
 14513  0EF2  00BE               	movwf	___flmul@b+1
 14514  0EF3  086B               	movf	HueToRGB@vH,w
 14515  0EF4  00BD               	movwf	___flmul@b
 14516  0EF5  0141               	movlb	1	; select bank1
 14517  0EF6  0823               	movf	(_HueToRGB$2876+3)^(0+128),w
 14518  0EF7  0140               	movlb	0	; select bank0
 14519  0EF8  00C4               	movwf	___flmul@a+3
 14520  0EF9  0141               	movlb	1	; select bank1
 14521  0EFA  0822               	movf	(_HueToRGB$2876+2)^(0+128),w
 14522  0EFB  0140               	movlb	0	; select bank0
 14523  0EFC  00C3               	movwf	___flmul@a+2
 14524  0EFD  0141               	movlb	1	; select bank1
 14525  0EFE  0821               	movf	(_HueToRGB$2876+1)^(0+128),w
 14526  0EFF  0140               	movlb	0	; select bank0
 14527  0F00  00C2               	movwf	___flmul@a+1
 14528  0F01  0141               	movlb	1	; select bank1
 14529  0F02  0820               	movf	_HueToRGB$2876^(0+128),w
 14530  0F03  0140               	movlb	0	; select bank0
 14531  0F04  00C1               	movwf	___flmul@a
 14532  0F05  3183  23F8  318E   	fcall	___flmul
 14533  0F08  0140               	movlb	0	; select bank0
 14534  0F09  0840               	movf	?___flmul+3,w
 14535  0F0A  00B0               	movwf	___fladd@a+3
 14536  0F0B  083F               	movf	?___flmul+2,w
 14537  0F0C  00AF               	movwf	___fladd@a+2
 14538  0F0D  083E               	movf	?___flmul+1,w
 14539  0F0E  00AE               	movwf	___fladd@a+1
 14540  0F0F  083D               	movf	?___flmul,w
 14541  0F10  00AD               	movwf	___fladd@a
 14542  0F11  318C  243A         	fcall	___fladd
 14543  0F13  0140               	movlb	0	; select bank0
 14544  0F14  082C               	movf	?___fladd+3,w
 14545  0F15  00E6               	movwf	?_HueToRGB+3
 14546  0F16  082B               	movf	?___fladd+2,w
 14547  0F17  00E5               	movwf	?_HueToRGB+2
 14548  0F18  082A               	movf	?___fladd+1,w
 14549  0F19  00E4               	movwf	?_HueToRGB+1
 14550  0F1A  0829               	movf	?___fladd,w
 14551  0F1B  00E3               	movwf	?_HueToRGB
 14552  0F1C  0008               	return
 14553  0F1D                     l5651:	
 14554                           
 14555                           ;led.c: 51:  if ((2 * vH) < 1)
 14556  0F1D  3040               	movlw	64
 14557  0F1E  0140               	movlb	0	; select bank0
 14558  0F1F  00C0               	movwf	___flmul@b+3
 14559  0F20  3000               	movlw	0
 14560  0F21  00BF               	movwf	___flmul@b+2
 14561  0F22  3000               	movlw	0
 14562  0F23  00BE               	movwf	___flmul@b+1
 14563  0F24  3000               	movlw	0
 14564  0F25  00BD               	movwf	___flmul@b
 14565  0F26  086E               	movf	HueToRGB@vH+3,w
 14566  0F27  00C4               	movwf	___flmul@a+3
 14567  0F28  086D               	movf	HueToRGB@vH+2,w
 14568  0F29  00C3               	movwf	___flmul@a+2
 14569  0F2A  086C               	movf	HueToRGB@vH+1,w
 14570  0F2B  00C2               	movwf	___flmul@a+1
 14571  0F2C  086B               	movf	HueToRGB@vH,w
 14572  0F2D  00C1               	movwf	___flmul@a
 14573  0F2E  3183  23F8  318E   	fcall	___flmul
 14574  0F31  0140               	movlb	0	; select bank0
 14575  0F32  0840               	movf	?___flmul+3,w
 14576  0F33  00DA               	movwf	___flge@ff1+3
 14577  0F34  083F               	movf	?___flmul+2,w
 14578  0F35  00D9               	movwf	___flge@ff1+2
 14579  0F36  083E               	movf	?___flmul+1,w
 14580  0F37  00D8               	movwf	___flge@ff1+1
 14581  0F38  083D               	movf	?___flmul,w
 14582  0F39  00D7               	movwf	___flge@ff1
 14583  0F3A  303F               	movlw	63
 14584  0F3B  00DE               	movwf	___flge@ff2+3
 14585  0F3C  3080               	movlw	128
 14586  0F3D  00DD               	movwf	___flge@ff2+2
 14587  0F3E  3000               	movlw	0
 14588  0F3F  00DC               	movwf	___flge@ff2+1
 14589  0F40  3000               	movlw	0
 14590  0F41  00DB               	movwf	___flge@ff2
 14591  0F42  3195  2503  318E   	fcall	___flge
 14592  0F45  1803               	btfsc	3,0
 14593  0F46  2F51               	goto	l5657
 14594                           
 14595                           ;led.c: 52:   return v2;
 14596  0F47  0140               	movlb	0	; select bank0
 14597  0F48  086A               	movf	HueToRGB@v2+3,w
 14598  0F49  00E6               	movwf	?_HueToRGB+3
 14599  0F4A  0869               	movf	HueToRGB@v2+2,w
 14600  0F4B  00E5               	movwf	?_HueToRGB+2
 14601  0F4C  0868               	movf	HueToRGB@v2+1,w
 14602  0F4D  00E4               	movwf	?_HueToRGB+1
 14603  0F4E  0867               	movf	HueToRGB@v2,w
 14604  0F4F  00E3               	movwf	?_HueToRGB
 14605  0F50  0008               	return
 14606  0F51                     l5657:	
 14607                           
 14608                           ;led.c: 54:  if ((3 * vH) < 2)
 14609  0F51  3040               	movlw	64
 14610  0F52  0140               	movlb	0	; select bank0
 14611  0F53  00C0               	movwf	___flmul@b+3
 14612  0F54  3040               	movlw	64
 14613  0F55  00BF               	movwf	___flmul@b+2
 14614  0F56  3000               	movlw	0
 14615  0F57  00BE               	movwf	___flmul@b+1
 14616  0F58  3000               	movlw	0
 14617  0F59  00BD               	movwf	___flmul@b
 14618  0F5A  086E               	movf	HueToRGB@vH+3,w
 14619  0F5B  00C4               	movwf	___flmul@a+3
 14620  0F5C  086D               	movf	HueToRGB@vH+2,w
 14621  0F5D  00C3               	movwf	___flmul@a+2
 14622  0F5E  086C               	movf	HueToRGB@vH+1,w
 14623  0F5F  00C2               	movwf	___flmul@a+1
 14624  0F60  086B               	movf	HueToRGB@vH,w
 14625  0F61  00C1               	movwf	___flmul@a
 14626  0F62  3183  23F8  318E   	fcall	___flmul
 14627  0F65  0140               	movlb	0	; select bank0
 14628  0F66  0840               	movf	?___flmul+3,w
 14629  0F67  00DA               	movwf	___flge@ff1+3
 14630  0F68  083F               	movf	?___flmul+2,w
 14631  0F69  00D9               	movwf	___flge@ff1+2
 14632  0F6A  083E               	movf	?___flmul+1,w
 14633  0F6B  00D8               	movwf	___flge@ff1+1
 14634  0F6C  083D               	movf	?___flmul,w
 14635  0F6D  00D7               	movwf	___flge@ff1
 14636  0F6E  3040               	movlw	64
 14637  0F6F  00DE               	movwf	___flge@ff2+3
 14638  0F70  3000               	movlw	0
 14639  0F71  00DD               	movwf	___flge@ff2+2
 14640  0F72  3000               	movlw	0
 14641  0F73  00DC               	movwf	___flge@ff2+1
 14642  0F74  3000               	movlw	0
 14643  0F75  00DB               	movwf	___flge@ff2
 14644  0F76  3195  2503  318E   	fcall	___flge
 14645  0F79  1803               	btfsc	3,0
 14646  0F7A  0008               	return
 14647                           
 14648                           ;led.c: 55:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14649  0F7B  0140               	movlb	0	; select bank0
 14650  0F7C  086E               	movf	HueToRGB@vH+3,w
 14651  0F7D  00DA               	movwf	___flsub@a+3
 14652  0F7E  086D               	movf	HueToRGB@vH+2,w
 14653  0F7F  00D9               	movwf	___flsub@a+2
 14654  0F80  086C               	movf	HueToRGB@vH+1,w
 14655  0F81  00D8               	movwf	___flsub@a+1
 14656  0F82  086B               	movf	HueToRGB@vH,w
 14657  0F83  00D7               	movwf	___flsub@a
 14658  0F84  303F               	movlw	63
 14659  0F85  00DE               	movwf	___flsub@b+3
 14660  0F86  302A               	movlw	42
 14661  0F87  00DD               	movwf	___flsub@b+2
 14662  0F88  30AA               	movlw	170
 14663  0F89  00DC               	movwf	___flsub@b+1
 14664  0F8A  30AB               	movlw	171
 14665  0F8B  00DB               	movwf	___flsub@b
 14666  0F8C  319F  2739  318E   	fcall	___flsub
 14667  0F8F  0140               	movlb	0	; select bank0
 14668  0F90  085A               	movf	?___flsub+3,w
 14669  0F91  00C0               	movwf	___flmul@b+3
 14670  0F92  0859               	movf	?___flsub+2,w
 14671  0F93  00BF               	movwf	___flmul@b+2
 14672  0F94  0858               	movf	?___flsub+1,w
 14673  0F95  00BE               	movwf	___flmul@b+1
 14674  0F96  0857               	movf	?___flsub,w
 14675  0F97  00BD               	movwf	___flmul@b
 14676  0F98  0866               	movf	HueToRGB@v1+3,w
 14677  0F99  00DA               	movwf	___flsub@a+3
 14678  0F9A  0865               	movf	HueToRGB@v1+2,w
 14679  0F9B  00D9               	movwf	___flsub@a+2
 14680  0F9C  0864               	movf	HueToRGB@v1+1,w
 14681  0F9D  00D8               	movwf	___flsub@a+1
 14682  0F9E  0863               	movf	HueToRGB@v1,w
 14683  0F9F  00D7               	movwf	___flsub@a
 14684  0FA0  086A               	movf	HueToRGB@v2+3,w
 14685  0FA1  00DE               	movwf	___flsub@b+3
 14686  0FA2  0869               	movf	HueToRGB@v2+2,w
 14687  0FA3  00DD               	movwf	___flsub@b+2
 14688  0FA4  0868               	movf	HueToRGB@v2+1,w
 14689  0FA5  00DC               	movwf	___flsub@b+1
 14690  0FA6  0867               	movf	HueToRGB@v2,w
 14691  0FA7  00DB               	movwf	___flsub@b
 14692  0FA8  319F  2739  318E   	fcall	___flsub
 14693  0FAB  0140               	movlb	0	; select bank0
 14694  0FAC  085A               	movf	?___flsub+3,w
 14695  0FAD  00C4               	movwf	___flmul@a+3
 14696  0FAE  0859               	movf	?___flsub+2,w
 14697  0FAF  00C3               	movwf	___flmul@a+2
 14698  0FB0  0858               	movf	?___flsub+1,w
 14699  0FB1  00C2               	movwf	___flmul@a+1
 14700  0FB2  0857               	movf	?___flsub,w
 14701  0FB3  00C1               	movwf	___flmul@a
 14702  0FB4  3183  23F8  318E   	fcall	___flmul
 14703  0FB7  0140               	movlb	0	; select bank0
 14704  0FB8  0840               	movf	?___flmul+3,w
 14705  0FB9  0141               	movlb	1	; select bank1
 14706  0FBA  00A3               	movwf	(_HueToRGB$2876+3)^(0+128)
 14707  0FBB  0140               	movlb	0	; select bank0
 14708  0FBC  083F               	movf	?___flmul+2,w
 14709  0FBD  0141               	movlb	1	; select bank1
 14710  0FBE  00A2               	movwf	(_HueToRGB$2876+2)^(0+128)
 14711  0FBF  0140               	movlb	0	; select bank0
 14712  0FC0  083E               	movf	?___flmul+1,w
 14713  0FC1  0141               	movlb	1	; select bank1
 14714  0FC2  00A1               	movwf	(_HueToRGB$2876+1)^(0+128)
 14715  0FC3  0140               	movlb	0	; select bank0
 14716  0FC4  083D               	movf	?___flmul,w
 14717  0FC5  0141               	movlb	1	; select bank1
 14718  0FC6  00A0               	movwf	_HueToRGB$2876^(0+128)
 14719                           
 14720                           ;led.c: 55:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14721  0FC7  0140               	movlb	0	; select bank0
 14722  0FC8  0866               	movf	HueToRGB@v1+3,w
 14723  0FC9  00AC               	movwf	___fladd@b+3
 14724  0FCA  0865               	movf	HueToRGB@v1+2,w
 14725  0FCB  00AB               	movwf	___fladd@b+2
 14726  0FCC  0864               	movf	HueToRGB@v1+1,w
 14727  0FCD  00AA               	movwf	___fladd@b+1
 14728  0FCE  0863               	movf	HueToRGB@v1,w
 14729  0FCF  00A9               	movwf	___fladd@b
 14730  0FD0  3040               	movlw	64
 14731  0FD1  00C0               	movwf	___flmul@b+3
 14732  0FD2  30C0               	movlw	192
 14733  0FD3  00BF               	movwf	___flmul@b+2
 14734  0FD4  3000               	movlw	0
 14735  0FD5  00BE               	movwf	___flmul@b+1
 14736  0FD6  3000               	movlw	0
 14737  0FD7  00BD               	movwf	___flmul@b
 14738  0FD8  0141               	movlb	1	; select bank1
 14739  0FD9  0823               	movf	(_HueToRGB$2876+3)^(0+128),w
 14740  0FDA  0140               	movlb	0	; select bank0
 14741  0FDB  00C4               	movwf	___flmul@a+3
 14742  0FDC  0141               	movlb	1	; select bank1
 14743  0FDD  0822               	movf	(_HueToRGB$2876+2)^(0+128),w
 14744  0FDE  0140               	movlb	0	; select bank0
 14745  0FDF  00C3               	movwf	___flmul@a+2
 14746  0FE0  0141               	movlb	1	; select bank1
 14747  0FE1  0821               	movf	(_HueToRGB$2876+1)^(0+128),w
 14748  0FE2  0140               	movlb	0	; select bank0
 14749  0FE3  00C2               	movwf	___flmul@a+1
 14750  0FE4  0141               	movlb	1	; select bank1
 14751  0FE5  0820               	movf	_HueToRGB$2876^(0+128),w
 14752  0FE6  0140               	movlb	0	; select bank0
 14753  0FE7  00C1               	movwf	___flmul@a
 14754  0FE8  3183  23F8  318E   	fcall	___flmul
 14755  0FEB  0140               	movlb	0	; select bank0
 14756  0FEC  0840               	movf	?___flmul+3,w
 14757  0FED  00B0               	movwf	___fladd@a+3
 14758  0FEE  083F               	movf	?___flmul+2,w
 14759  0FEF  00AF               	movwf	___fladd@a+2
 14760  0FF0  083E               	movf	?___flmul+1,w
 14761  0FF1  00AE               	movwf	___fladd@a+1
 14762  0FF2  083D               	movf	?___flmul,w
 14763  0FF3  00AD               	movwf	___fladd@a
 14764  0FF4  318C  243A         	fcall	___fladd
 14765  0FF6  0140               	movlb	0	; select bank0
 14766  0FF7  082C               	movf	?___fladd+3,w
 14767  0FF8  00E6               	movwf	?_HueToRGB+3
 14768  0FF9  082B               	movf	?___fladd+2,w
 14769  0FFA  00E5               	movwf	?_HueToRGB+2
 14770  0FFB  082A               	movf	?___fladd+1,w
 14771  0FFC  00E4               	movwf	?_HueToRGB+1
 14772  0FFD  0829               	movf	?___fladd,w
 14773  0FFE  00E3               	movwf	?_HueToRGB
 14774  0FFF  0008               	return
 14775  1000                     __end_of_HueToRGB:	
 14776                           ;led.c: 57:  return v1;
 14777                           
 14778                           
 14779                           	psect	text46
 14780  1F39                     __ptext46:	
 14781 ;; *************** function ___flsub *****************
 14782 ;; Defined at:
 14783 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14784 ;; Parameters:    Size  Location     Type
 14785 ;;  a               4   55[BANK0 ] float 
 14786 ;;  b               4   59[BANK0 ] float 
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;		None
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  4   55[BANK0 ] float 
 14791 ;; Registers used:
 14792 ;;		wreg, status,2, status,0, pclath, cstack
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14798 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14801 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14802 ;;Total ram usage:        8 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:    5
 14805 ;; This function calls:
 14806 ;;		___fladd
 14807 ;; This function is called by:
 14808 ;;		_HueToRGB
 14809 ;;		_LED_setHSL
 14810 ;;		_pulseColors
 14811 ;; This function uses a non-reentrant model
 14812 ;;
 14813                           
 14814                           
 14815                           ;psect for function ___flsub
 14816  1F39                     ___flsub:	
 14817                           
 14818                           ;incstack = 0
 14819                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 14820  1F39  3080               	movlw	128
 14821  1F3A  0140               	movlb	0	; select bank0
 14822  1F3B  06DA               	xorwf	___flsub@a+3,f
 14823  1F3C  085E               	movf	___flsub@b+3,w
 14824  1F3D  00AC               	movwf	___fladd@b+3
 14825  1F3E  085D               	movf	___flsub@b+2,w
 14826  1F3F  00AB               	movwf	___fladd@b+2
 14827  1F40  085C               	movf	___flsub@b+1,w
 14828  1F41  00AA               	movwf	___fladd@b+1
 14829  1F42  085B               	movf	___flsub@b,w
 14830  1F43  00A9               	movwf	___fladd@b
 14831  1F44  085A               	movf	___flsub@a+3,w
 14832  1F45  00B0               	movwf	___fladd@a+3
 14833  1F46  0859               	movf	___flsub@a+2,w
 14834  1F47  00AF               	movwf	___fladd@a+2
 14835  1F48  0858               	movf	___flsub@a+1,w
 14836  1F49  00AE               	movwf	___fladd@a+1
 14837  1F4A  0857               	movf	___flsub@a,w
 14838  1F4B  00AD               	movwf	___fladd@a
 14839  1F4C  318C  243A         	fcall	___fladd
 14840  1F4E  0140               	movlb	0	; select bank0
 14841  1F4F  082C               	movf	?___fladd+3,w
 14842  1F50  00DA               	movwf	?___flsub+3
 14843  1F51  082B               	movf	?___fladd+2,w
 14844  1F52  00D9               	movwf	?___flsub+2
 14845  1F53  082A               	movf	?___fladd+1,w
 14846  1F54  00D8               	movwf	?___flsub+1
 14847  1F55  0829               	movf	?___fladd,w
 14848  1F56  00D7               	movwf	?___flsub
 14849  1F57  0008               	return
 14850  1F58                     __end_of___flsub:	
 14851                           
 14852                           	psect	text47
 14853  0C3A                     __ptext47:	
 14854 ;; *************** function ___fladd *****************
 14855 ;; Defined at:
 14856 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14857 ;; Parameters:    Size  Location     Type
 14858 ;;  b               4    9[BANK0 ] float 
 14859 ;;  a               4   13[BANK0 ] float 
 14860 ;; Auto vars:     Size  Location     Type
 14861 ;;  grs             1   28[BANK0 ] unsigned char 
 14862 ;;  bexp            1   27[BANK0 ] unsigned char 
 14863 ;;  aexp            1   26[BANK0 ] unsigned char 
 14864 ;;  signs           1   25[BANK0 ] unsigned char 
 14865 ;; Return value:  Size  Location     Type
 14866 ;;                  4    9[BANK0 ] unsigned char 
 14867 ;; Registers used:
 14868 ;;		wreg, status,2, status,0
 14869 ;; Tracked objects:
 14870 ;;		On entry : 0/0
 14871 ;;		On exit  : 0/0
 14872 ;;		Unchanged: 0/0
 14873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14874 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14875 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14876 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14877 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14878 ;;Total ram usage:       20 bytes
 14879 ;; Hardware stack levels used:    1
 14880 ;; Hardware stack levels required when called:    4
 14881 ;; This function calls:
 14882 ;;		Nothing
 14883 ;; This function is called by:
 14884 ;;		_HueToRGB
 14885 ;;		_LED_setHSL
 14886 ;;		___flsub
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           
 14890                           
 14891                           ;psect for function ___fladd
 14892  0C3A                     ___fladd:	
 14893                           
 14894                           ;incstack = 0
 14895                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 14896  0C3A  0140               	movlb	0	; select bank0
 14897  0C3B  082C               	movf	___fladd@b+3,w
 14898  0C3C  3980               	andlw	128
 14899  0C3D  00B1               	movwf	??___fladd
 14900  0C3E  0831               	movf	??___fladd,w
 14901  0C3F  00B9               	movwf	___fladd@signs
 14902  0C40  352C               	lslf	___fladd@b+3,w
 14903  0C41  00B1               	movwf	??___fladd
 14904  0C42  0831               	movf	??___fladd,w
 14905  0C43  00BB               	movwf	___fladd@bexp
 14906  0C44  1BAB               	btfsc	___fladd@b+2,7
 14907  0C45  143B               	bsf	___fladd@bexp,0
 14908  0C46  083B               	movf	___fladd@bexp,w
 14909  0C47  1903               	btfsc	3,2
 14910  0C48  2C57               	goto	l3705
 14911  0C49  0A3B               	incf	___fladd@bexp,w
 14912  0C4A  1D03               	btfss	3,2
 14913  0C4B  2C54               	goto	l3701
 14914  0C4C  3000               	movlw	0
 14915  0C4D  00AC               	movwf	___fladd@b+3
 14916  0C4E  3000               	movlw	0
 14917  0C4F  00AB               	movwf	___fladd@b+2
 14918  0C50  3000               	movlw	0
 14919  0C51  00AA               	movwf	___fladd@b+1
 14920  0C52  3000               	movlw	0
 14921  0C53  00A9               	movwf	___fladd@b
 14922  0C54                     l3701:	
 14923  0C54  17AB               	bsf	___fladd@b+2,7
 14924  0C55  01AC               	clrf	___fladd@b+3
 14925  0C56  2C5F               	goto	l3707
 14926  0C57                     l3705:	
 14927  0C57  3000               	movlw	0
 14928  0C58  00AC               	movwf	___fladd@b+3
 14929  0C59  3000               	movlw	0
 14930  0C5A  00AB               	movwf	___fladd@b+2
 14931  0C5B  3000               	movlw	0
 14932  0C5C  00AA               	movwf	___fladd@b+1
 14933  0C5D  3000               	movlw	0
 14934  0C5E  00A9               	movwf	___fladd@b
 14935  0C5F                     l3707:	
 14936  0C5F  0830               	movf	___fladd@a+3,w
 14937  0C60  3980               	andlw	128
 14938  0C61  00B1               	movwf	??___fladd
 14939  0C62  0831               	movf	??___fladd,w
 14940  0C63  00BA               	movwf	___fladd@aexp
 14941  0C64  083A               	movf	___fladd@aexp,w
 14942  0C65  0639               	xorwf	___fladd@signs,w
 14943  0C66  1D03               	btfss	3,2
 14944  0C67  1739               	bsf	___fladd@signs,6
 14945  0C68  3530               	lslf	___fladd@a+3,w
 14946  0C69  00B1               	movwf	??___fladd
 14947  0C6A  0831               	movf	??___fladd,w
 14948  0C6B  00BA               	movwf	___fladd@aexp
 14949  0C6C  1BAF               	btfsc	___fladd@a+2,7
 14950  0C6D  143A               	bsf	___fladd@aexp,0
 14951  0C6E  083A               	movf	___fladd@aexp,w
 14952  0C6F  1903               	btfsc	3,2
 14953  0C70  2C7F               	goto	l3729
 14954  0C71  0A3A               	incf	___fladd@aexp,w
 14955  0C72  1D03               	btfss	3,2
 14956  0C73  2C7C               	goto	l3725
 14957  0C74  3000               	movlw	0
 14958  0C75  00B0               	movwf	___fladd@a+3
 14959  0C76  3000               	movlw	0
 14960  0C77  00AF               	movwf	___fladd@a+2
 14961  0C78  3000               	movlw	0
 14962  0C79  00AE               	movwf	___fladd@a+1
 14963  0C7A  3000               	movlw	0
 14964  0C7B  00AD               	movwf	___fladd@a
 14965  0C7C                     l3725:	
 14966  0C7C  17AF               	bsf	___fladd@a+2,7
 14967  0C7D  01B0               	clrf	___fladd@a+3
 14968  0C7E  2C87               	goto	l1584
 14969  0C7F                     l3729:	
 14970  0C7F  3000               	movlw	0
 14971  0C80  00B0               	movwf	___fladd@a+3
 14972  0C81  3000               	movlw	0
 14973  0C82  00AF               	movwf	___fladd@a+2
 14974  0C83  3000               	movlw	0
 14975  0C84  00AE               	movwf	___fladd@a+1
 14976  0C85  3000               	movlw	0
 14977  0C86  00AD               	movwf	___fladd@a
 14978  0C87                     l1584:	
 14979  0C87  083B               	movf	___fladd@bexp,w
 14980  0C88  023A               	subwf	___fladd@aexp,w
 14981  0C89  1803               	skipnc
 14982  0C8A  2CCD               	goto	l3765
 14983  0C8B  1F39               	btfss	___fladd@signs,6
 14984  0C8C  2C91               	goto	l3735
 14985  0C8D  3080               	movlw	128
 14986  0C8E  00B1               	movwf	??___fladd
 14987  0C8F  0831               	movf	??___fladd,w
 14988  0C90  06B9               	xorwf	___fladd@signs,f
 14989  0C91                     l3735:	
 14990  0C91  083B               	movf	___fladd@bexp,w
 14991  0C92  00B1               	movwf	??___fladd
 14992  0C93  0831               	movf	??___fladd,w
 14993  0C94  00BC               	movwf	___fladd@grs
 14994  0C95  083A               	movf	___fladd@aexp,w
 14995  0C96  00B1               	movwf	??___fladd
 14996  0C97  0831               	movf	??___fladd,w
 14997  0C98  00BB               	movwf	___fladd@bexp
 14998  0C99  083C               	movf	___fladd@grs,w
 14999  0C9A  00B1               	movwf	??___fladd
 15000  0C9B  0831               	movf	??___fladd,w
 15001  0C9C  00BA               	movwf	___fladd@aexp
 15002  0C9D  0829               	movf	___fladd@b,w
 15003  0C9E  00B1               	movwf	??___fladd
 15004  0C9F  0831               	movf	??___fladd,w
 15005  0CA0  00BC               	movwf	___fladd@grs
 15006  0CA1  082D               	movf	___fladd@a,w
 15007  0CA2  00B1               	movwf	??___fladd
 15008  0CA3  0831               	movf	??___fladd,w
 15009  0CA4  00A9               	movwf	___fladd@b
 15010  0CA5  083C               	movf	___fladd@grs,w
 15011  0CA6  00B1               	movwf	??___fladd
 15012  0CA7  0831               	movf	??___fladd,w
 15013  0CA8  00AD               	movwf	___fladd@a
 15014  0CA9  082A               	movf	___fladd@b+1,w
 15015  0CAA  00B1               	movwf	??___fladd
 15016  0CAB  0831               	movf	??___fladd,w
 15017  0CAC  00BC               	movwf	___fladd@grs
 15018  0CAD  082E               	movf	___fladd@a+1,w
 15019  0CAE  00B1               	movwf	??___fladd
 15020  0CAF  0831               	movf	??___fladd,w
 15021  0CB0  00AA               	movwf	___fladd@b+1
 15022  0CB1  083C               	movf	___fladd@grs,w
 15023  0CB2  00B1               	movwf	??___fladd
 15024  0CB3  0831               	movf	??___fladd,w
 15025  0CB4  00AE               	movwf	___fladd@a+1
 15026  0CB5  082B               	movf	___fladd@b+2,w
 15027  0CB6  00B1               	movwf	??___fladd
 15028  0CB7  0831               	movf	??___fladd,w
 15029  0CB8  00BC               	movwf	___fladd@grs
 15030  0CB9  082F               	movf	___fladd@a+2,w
 15031  0CBA  00B1               	movwf	??___fladd
 15032  0CBB  0831               	movf	??___fladd,w
 15033  0CBC  00AB               	movwf	___fladd@b+2
 15034  0CBD  083C               	movf	___fladd@grs,w
 15035  0CBE  00B1               	movwf	??___fladd
 15036  0CBF  0831               	movf	??___fladd,w
 15037  0CC0  00AF               	movwf	___fladd@a+2
 15038  0CC1  082C               	movf	___fladd@b+3,w
 15039  0CC2  00B1               	movwf	??___fladd
 15040  0CC3  0831               	movf	??___fladd,w
 15041  0CC4  00BC               	movwf	___fladd@grs
 15042  0CC5  0830               	movf	___fladd@a+3,w
 15043  0CC6  00B1               	movwf	??___fladd
 15044  0CC7  0831               	movf	??___fladd,w
 15045  0CC8  00AC               	movwf	___fladd@b+3
 15046  0CC9  083C               	movf	___fladd@grs,w
 15047  0CCA  00B1               	movwf	??___fladd
 15048  0CCB  0831               	movf	??___fladd,w
 15049  0CCC  00B0               	movwf	___fladd@a+3
 15050  0CCD                     l3765:	
 15051  0CCD  01BC               	clrf	___fladd@grs
 15052  0CCE  083A               	movf	___fladd@aexp,w
 15053  0CCF  00B1               	movwf	??___fladd
 15054  0CD0  01B2               	clrf	??___fladd+1
 15055  0CD1  0832               	movf	??___fladd+1,w
 15056  0CD2  00B4               	movwf	??___fladd+3
 15057  0CD3  083B               	movf	___fladd@bexp,w
 15058  0CD4  0231               	subwf	??___fladd,w
 15059  0CD5  00B3               	movwf	??___fladd+2
 15060  0CD6  1C03               	skipc
 15061  0CD7  03B4               	decf	??___fladd+3,f
 15062  0CD8  0834               	movf	??___fladd+3,w
 15063  0CD9  3A80               	xorlw	128
 15064  0CDA  00B5               	movwf	??___fladd+4
 15065  0CDB  3080               	movlw	128
 15066  0CDC  0235               	subwf	??___fladd+4,w
 15067  0CDD  1D03               	skipz
 15068  0CDE  2CE1               	goto	u2945
 15069  0CDF  301A               	movlw	26
 15070  0CE0  0233               	subwf	??___fladd+2,w
 15071  0CE1                     u2945:	
 15072  0CE1  1C03               	skipc
 15073  0CE2  2D15               	goto	l3783
 15074  0CE3  0140               	movlb	0	; select bank0
 15075  0CE4  082C               	movf	___fladd@b+3,w
 15076  0CE5  042B               	iorwf	___fladd@b+2,w
 15077  0CE6  042A               	iorwf	___fladd@b+1,w
 15078  0CE7  0429               	iorwf	___fladd@b,w
 15079  0CE8  1903               	btfsc	3,2
 15080  0CE9  2CEC               	goto	u2950
 15081  0CEA  3001               	movlw	1
 15082  0CEB  2CED               	goto	u2960
 15083  0CEC                     u2950:	
 15084  0CEC  3000               	movlw	0
 15085  0CED                     u2960:	
 15086  0CED  00B1               	movwf	??___fladd
 15087  0CEE  0831               	movf	??___fladd,w
 15088  0CEF  00BC               	movwf	___fladd@grs
 15089  0CF0  3000               	movlw	0
 15090  0CF1  00AC               	movwf	___fladd@b+3
 15091  0CF2  3000               	movlw	0
 15092  0CF3  00AB               	movwf	___fladd@b+2
 15093  0CF4  3000               	movlw	0
 15094  0CF5  00AA               	movwf	___fladd@b+1
 15095  0CF6  3000               	movlw	0
 15096  0CF7  00A9               	movwf	___fladd@b
 15097  0CF8  083A               	movf	___fladd@aexp,w
 15098  0CF9  00B1               	movwf	??___fladd
 15099  0CFA  0831               	movf	??___fladd,w
 15100  0CFB  00BB               	movwf	___fladd@bexp
 15101  0CFC  2D1A               	goto	l1588
 15102  0CFD                     l1590:	
 15103  0CFD  1C3C               	btfss	___fladd@grs,0
 15104  0CFE  2D05               	goto	l3773
 15105  0CFF  363C               	lsrf	___fladd@grs,w
 15106  0D00  3801               	iorlw	1
 15107  0D01  00B1               	movwf	??___fladd
 15108  0D02  0831               	movf	??___fladd,w
 15109  0D03  00BC               	movwf	___fladd@grs
 15110  0D04  2D07               	goto	l3775
 15111  0D05                     l3773:	
 15112  0D05  1003               	clrc
 15113  0D06  0CBC               	rrf	___fladd@grs,f
 15114  0D07                     l3775:	
 15115  0D07  1829               	btfsc	___fladd@b,0
 15116  0D08  17BC               	bsf	___fladd@grs,7
 15117  0D09  3001               	movlw	1
 15118  0D0A  00B1               	movwf	??___fladd
 15119  0D0B                     u2995:	
 15120  0D0B  37AC               	asrf	___fladd@b+3,f
 15121  0D0C  0CAB               	rrf	___fladd@b+2,f
 15122  0D0D  0CAA               	rrf	___fladd@b+1,f
 15123  0D0E  0CA9               	rrf	___fladd@b,f
 15124  0D0F  0BB1               	decfsz	??___fladd& (0+127),f
 15125  0D10  2D0B               	goto	u2995
 15126  0D11  3001               	movlw	1
 15127  0D12  00B1               	movwf	??___fladd
 15128  0D13  0831               	movf	??___fladd,w
 15129  0D14  07BB               	addwf	___fladd@bexp,f
 15130  0D15                     l3783:	
 15131  0D15  0140               	movlb	0	; select bank0
 15132  0D16  083A               	movf	___fladd@aexp,w
 15133  0D17  023B               	subwf	___fladd@bexp,w
 15134  0D18  1C03               	skipc
 15135  0D19  2CFD               	goto	l1590
 15136  0D1A                     l1588:	
 15137  0D1A  1B39               	btfsc	___fladd@signs,6
 15138  0D1B  2D4B               	goto	l3809
 15139  0D1C  083B               	movf	___fladd@bexp,w
 15140  0D1D  1D03               	btfss	3,2
 15141  0D1E  2D28               	goto	l3791
 15142  0D1F  3000               	movlw	0
 15143  0D20  00AC               	movwf	?___fladd+3
 15144  0D21  3000               	movlw	0
 15145  0D22  00AB               	movwf	?___fladd+2
 15146  0D23  3000               	movlw	0
 15147  0D24  00AA               	movwf	?___fladd+1
 15148  0D25  3000               	movlw	0
 15149  0D26  00A9               	movwf	?___fladd
 15150  0D27  0008               	return
 15151  0D28                     l3791:	
 15152  0D28  082D               	movf	___fladd@a,w
 15153  0D29  07A9               	addwf	___fladd@b,f
 15154  0D2A  082E               	movf	___fladd@a+1,w
 15155  0D2B  3DAA               	addwfc	___fladd@b+1,f
 15156  0D2C  082F               	movf	___fladd@a+2,w
 15157  0D2D  3DAB               	addwfc	___fladd@b+2,f
 15158  0D2E  0830               	movf	___fladd@a+3,w
 15159  0D2F  3DAC               	addwfc	___fladd@b+3,f
 15160  0D30  1C2C               	btfss	___fladd@b+3,0
 15161  0D31  2DC5               	goto	l3843
 15162  0D32  1C3C               	btfss	___fladd@grs,0
 15163  0D33  2D3A               	goto	l3799
 15164  0D34  363C               	lsrf	___fladd@grs,w
 15165  0D35  3801               	iorlw	1
 15166  0D36  00B1               	movwf	??___fladd
 15167  0D37  0831               	movf	??___fladd,w
 15168  0D38  00BC               	movwf	___fladd@grs
 15169  0D39  2D3C               	goto	l3801
 15170  0D3A                     l3799:	
 15171  0D3A  1003               	clrc
 15172  0D3B  0CBC               	rrf	___fladd@grs,f
 15173  0D3C                     l3801:	
 15174  0D3C  1829               	btfsc	___fladd@b,0
 15175  0D3D  17BC               	bsf	___fladd@grs,7
 15176  0D3E  3001               	movlw	1
 15177  0D3F  00B1               	movwf	??___fladd
 15178  0D40                     u3065:	
 15179  0D40  37AC               	asrf	___fladd@b+3,f
 15180  0D41  0CAB               	rrf	___fladd@b+2,f
 15181  0D42  0CAA               	rrf	___fladd@b+1,f
 15182  0D43  0CA9               	rrf	___fladd@b,f
 15183  0D44  0BB1               	decfsz	??___fladd& (0+127),f
 15184  0D45  2D40               	goto	u3065
 15185  0D46  3001               	movlw	1
 15186  0D47  00B1               	movwf	??___fladd
 15187  0D48  0831               	movf	??___fladd,w
 15188  0D49  07BB               	addwf	___fladd@bexp,f
 15189  0D4A  2DC5               	goto	l3843
 15190  0D4B                     l3809:	
 15191  0D4B  082C               	movf	___fladd@b+3,w
 15192  0D4C  3A80               	xorlw	128
 15193  0D4D  00B1               	movwf	??___fladd
 15194  0D4E  0830               	movf	___fladd@a+3,w
 15195  0D4F  3A80               	xorlw	128
 15196  0D50  0231               	subwf	??___fladd,w
 15197  0D51  1D03               	skipz
 15198  0D52  2D5D               	goto	u3073
 15199  0D53  082F               	movf	___fladd@a+2,w
 15200  0D54  022B               	subwf	___fladd@b+2,w
 15201  0D55  1D03               	skipz
 15202  0D56  2D5D               	goto	u3073
 15203  0D57  082E               	movf	___fladd@a+1,w
 15204  0D58  022A               	subwf	___fladd@b+1,w
 15205  0D59  1D03               	skipz
 15206  0D5A  2D5D               	goto	u3073
 15207  0D5B  082D               	movf	___fladd@a,w
 15208  0D5C  0229               	subwf	___fladd@b,w
 15209  0D5D                     u3073:	
 15210  0D5D  1803               	skipnc
 15211  0D5E  2D95               	goto	l3819
 15212  0D5F  30FF               	movlw	255
 15213  0D60  00B1               	movwf	??___fladd
 15214  0D61  30FF               	movlw	255
 15215  0D62  00B2               	movwf	??___fladd+1
 15216  0D63  30FF               	movlw	255
 15217  0D64  00B3               	movwf	??___fladd+2
 15218  0D65  30FF               	movlw	255
 15219  0D66  00B4               	movwf	??___fladd+3
 15220  0D67  0829               	movf	___fladd@b,w
 15221  0D68  022D               	subwf	___fladd@a,w
 15222  0D69  00B5               	movwf	??___fladd+4
 15223  0D6A  082A               	movf	___fladd@b+1,w
 15224  0D6B  3B2E               	subwfb	___fladd@a+1,w
 15225  0D6C  00B6               	movwf	??___fladd+5
 15226  0D6D  082B               	movf	___fladd@b+2,w
 15227  0D6E  3B2F               	subwfb	___fladd@a+2,w
 15228  0D6F  00B7               	movwf	??___fladd+6
 15229  0D70  082C               	movf	___fladd@b+3,w
 15230  0D71  3B30               	subwfb	___fladd@a+3,w
 15231  0D72  00B8               	movwf	??___fladd+7
 15232  0D73  0835               	movf	??___fladd+4,w
 15233  0D74  07B1               	addwf	??___fladd,f
 15234  0D75  0836               	movf	??___fladd+5,w
 15235  0D76  3DB2               	addwfc	??___fladd+1,f
 15236  0D77  0837               	movf	??___fladd+6,w
 15237  0D78  3DB3               	addwfc	??___fladd+2,f
 15238  0D79  0838               	movf	??___fladd+7,w
 15239  0D7A  3DB4               	addwfc	??___fladd+3,f
 15240  0D7B  0834               	movf	??___fladd+3,w
 15241  0D7C  00AC               	movwf	___fladd@b+3
 15242  0D7D  0833               	movf	??___fladd+2,w
 15243  0D7E  00AB               	movwf	___fladd@b+2
 15244  0D7F  0832               	movf	??___fladd+1,w
 15245  0D80  00AA               	movwf	___fladd@b+1
 15246  0D81  0831               	movf	??___fladd,w
 15247  0D82  00A9               	movwf	___fladd@b
 15248  0D83  3080               	movlw	128
 15249  0D84  00B1               	movwf	??___fladd
 15250  0D85  0831               	movf	??___fladd,w
 15251  0D86  06B9               	xorwf	___fladd@signs,f
 15252  0D87  09BC               	comf	___fladd@grs,f
 15253  0D88  0ABC               	incf	___fladd@grs,f
 15254  0D89  083C               	movf	___fladd@grs,w
 15255  0D8A  1D03               	btfss	3,2
 15256  0D8B  2D9D               	goto	l1605
 15257  0D8C  3001               	movlw	1
 15258  0D8D  07A9               	addwf	___fladd@b,f
 15259  0D8E  3000               	movlw	0
 15260  0D8F  3DAA               	addwfc	___fladd@b+1,f
 15261  0D90  3000               	movlw	0
 15262  0D91  3DAB               	addwfc	___fladd@b+2,f
 15263  0D92  3000               	movlw	0
 15264  0D93  3DAC               	addwfc	___fladd@b+3,f
 15265  0D94  2D9D               	goto	l1605
 15266  0D95                     l3819:	
 15267  0D95  082D               	movf	___fladd@a,w
 15268  0D96  02A9               	subwf	___fladd@b,f
 15269  0D97  082E               	movf	___fladd@a+1,w
 15270  0D98  3BAA               	subwfb	___fladd@b+1,f
 15271  0D99  082F               	movf	___fladd@a+2,w
 15272  0D9A  3BAB               	subwfb	___fladd@b+2,f
 15273  0D9B  0830               	movf	___fladd@a+3,w
 15274  0D9C  3BAC               	subwfb	___fladd@b+3,f
 15275  0D9D                     l1605:	
 15276  0D9D  082C               	movf	___fladd@b+3,w
 15277  0D9E  042B               	iorwf	___fladd@b+2,w
 15278  0D9F  042A               	iorwf	___fladd@b+1,w
 15279  0DA0  0429               	iorwf	___fladd@b,w
 15280  0DA1  1D03               	skipz
 15281  0DA2  2DC3               	goto	l3841
 15282  0DA3  083C               	movf	___fladd@grs,w
 15283  0DA4  1D03               	btfss	3,2
 15284  0DA5  2DC3               	goto	l3841
 15285  0DA6  3000               	movlw	0
 15286  0DA7  00AC               	movwf	?___fladd+3
 15287  0DA8  3000               	movlw	0
 15288  0DA9  00AB               	movwf	?___fladd+2
 15289  0DAA  3000               	movlw	0
 15290  0DAB  00AA               	movwf	?___fladd+1
 15291  0DAC  3000               	movlw	0
 15292  0DAD  00A9               	movwf	?___fladd
 15293  0DAE  0008               	return
 15294  0DAF                     l3827:	
 15295  0DAF  3001               	movlw	1
 15296  0DB0                     u3115:	
 15297  0DB0  35A9               	lslf	___fladd@b,f
 15298  0DB1  0DAA               	rlf	___fladd@b+1,f
 15299  0DB2  0DAB               	rlf	___fladd@b+2,f
 15300  0DB3  0DAC               	rlf	___fladd@b+3,f
 15301  0DB4  0B89               	decfsz	9,f
 15302  0DB5  2DB0               	goto	u3115
 15303  0DB6  1BBC               	btfsc	___fladd@grs,7
 15304  0DB7  1429               	bsf	___fladd@b,0
 15305  0DB8  1C3C               	btfss	___fladd@grs,0
 15306  0DB9  2DBC               	goto	l3835
 15307  0DBA  1403               	setc
 15308  0DBB  2DBD               	goto	L4
 15309  0DBC                     l3835:	
 15310  0DBC  1003               	clrc
 15311  0DBD                     L4:	
 15312  0DBD  0DBC               	rlf	___fladd@grs,f
 15313  0DBE  083B               	movf	___fladd@bexp,w
 15314  0DBF  1903               	btfsc	3,2
 15315  0DC0  2DC3               	goto	l3841
 15316  0DC1  3001               	movlw	1
 15317  0DC2  02BB               	subwf	___fladd@bexp,f
 15318  0DC3                     l3841:	
 15319  0DC3  1FAB               	btfss	___fladd@b+2,7
 15320  0DC4  2DAF               	goto	l3827
 15321  0DC5                     l3843:	
 15322  0DC5  01BA               	clrf	___fladd@aexp
 15323  0DC6  1FBC               	btfss	___fladd@grs,7
 15324  0DC7  2DD0               	goto	l3853
 15325  0DC8  083C               	movf	___fladd@grs,w
 15326  0DC9  397F               	andlw	127
 15327  0DCA  1903               	btfsc	3,2
 15328  0DCB  1829               	btfsc	___fladd@b,0
 15329  0DCC  2DCE               	goto	l3849
 15330  0DCD  2DD0               	goto	l3853
 15331  0DCE                     l3849:	
 15332  0DCE  01BA               	clrf	___fladd@aexp
 15333  0DCF  0ABA               	incf	___fladd@aexp,f
 15334  0DD0                     l3853:	
 15335  0DD0  083A               	movf	___fladd@aexp,w
 15336  0DD1  1903               	btfsc	3,2
 15337  0DD2  2DFC               	goto	l1618
 15338  0DD3  3001               	movlw	1
 15339  0DD4  07A9               	addwf	___fladd@b,f
 15340  0DD5  3000               	movlw	0
 15341  0DD6  3DAA               	addwfc	___fladd@b+1,f
 15342  0DD7  3000               	movlw	0
 15343  0DD8  3DAB               	addwfc	___fladd@b+2,f
 15344  0DD9  3000               	movlw	0
 15345  0DDA  3DAC               	addwfc	___fladd@b+3,f
 15346  0DDB  1C2C               	btfss	___fladd@b+3,0
 15347  0DDC  2DFC               	goto	l1618
 15348  0DDD  0829               	movf	___fladd@b,w
 15349  0DDE  00B1               	movwf	??___fladd
 15350  0DDF  082A               	movf	___fladd@b+1,w
 15351  0DE0  00B2               	movwf	??___fladd+1
 15352  0DE1  082B               	movf	___fladd@b+2,w
 15353  0DE2  00B3               	movwf	??___fladd+2
 15354  0DE3  082C               	movf	___fladd@b+3,w
 15355  0DE4  00B4               	movwf	??___fladd+3
 15356  0DE5  3001               	movlw	1
 15357  0DE6  00B5               	movwf	??___fladd+4
 15358  0DE7                     u3215:	
 15359  0DE7  37B4               	asrf	??___fladd+3,f
 15360  0DE8  0CB3               	rrf	??___fladd+2,f
 15361  0DE9  0CB2               	rrf	??___fladd+1,f
 15362  0DEA  0CB1               	rrf	??___fladd,f
 15363  0DEB  0BB5               	decfsz	??___fladd+4,f
 15364  0DEC  2DE7               	goto	u3215
 15365  0DED  0834               	movf	??___fladd+3,w
 15366  0DEE  00AC               	movwf	___fladd@b+3
 15367  0DEF  0833               	movf	??___fladd+2,w
 15368  0DF0  00AB               	movwf	___fladd@b+2
 15369  0DF1  0832               	movf	??___fladd+1,w
 15370  0DF2  00AA               	movwf	___fladd@b+1
 15371  0DF3  0831               	movf	??___fladd,w
 15372  0DF4  00A9               	movwf	___fladd@b
 15373  0DF5  0A3B               	incf	___fladd@bexp,w
 15374  0DF6  1903               	btfsc	3,2
 15375  0DF7  2DFC               	goto	l1618
 15376  0DF8  3001               	movlw	1
 15377  0DF9  00B1               	movwf	??___fladd
 15378  0DFA  0831               	movf	??___fladd,w
 15379  0DFB  07BB               	addwf	___fladd@bexp,f
 15380  0DFC                     l1618:	
 15381  0DFC  0A3B               	incf	___fladd@bexp,w
 15382  0DFD  1D03               	btfss	3,2
 15383  0DFE  083B               	movf	___fladd@bexp,w
 15384  0DFF  1D03               	btfss	3,2
 15385  0E00  2E0C               	goto	l3871
 15386  0E01  3000               	movlw	0
 15387  0E02  00AC               	movwf	___fladd@b+3
 15388  0E03  3000               	movlw	0
 15389  0E04  00AB               	movwf	___fladd@b+2
 15390  0E05  3000               	movlw	0
 15391  0E06  00AA               	movwf	___fladd@b+1
 15392  0E07  3000               	movlw	0
 15393  0E08  00A9               	movwf	___fladd@b
 15394  0E09  083B               	movf	___fladd@bexp,w
 15395  0E0A  1903               	btfsc	3,2
 15396  0E0B  01B9               	clrf	___fladd@signs
 15397  0E0C                     l3871:	
 15398  0E0C  1C3B               	btfss	___fladd@bexp,0
 15399  0E0D  2E10               	goto	l3875
 15400  0E0E  17AB               	bsf	___fladd@b+2,7
 15401  0E0F  2E14               	goto	l1626
 15402  0E10                     l3875:	
 15403  0E10  307F               	movlw	127
 15404  0E11  00B1               	movwf	??___fladd
 15405  0E12  0831               	movf	??___fladd,w
 15406  0E13  05AB               	andwf	___fladd@b+2,f
 15407  0E14                     l1626:	
 15408  0E14  363B               	lsrf	___fladd@bexp,w
 15409  0E15  00B1               	movwf	??___fladd
 15410  0E16  0831               	movf	??___fladd,w
 15411  0E17  00AC               	movwf	___fladd@b+3
 15412  0E18  1FB9               	btfss	___fladd@signs,7
 15413  0E19  0008               	return
 15414  0E1A  17AC               	bsf	___fladd@b+3,7
 15415  0E1B  0008               	return
 15416  0E1C                     __end_of___fladd:	
 15417                           
 15418                           	psect	text48
 15419  03F8                     __ptext48:	
 15420 ;; *************** function ___flmul *****************
 15421 ;; Defined at:
 15422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 15423 ;; Parameters:    Size  Location     Type
 15424 ;;  b               4   29[BANK0 ] unsigned char 
 15425 ;;  a               4   33[BANK0 ] unsigned char 
 15426 ;; Auto vars:     Size  Location     Type
 15427 ;;  prod            4   49[BANK0 ] struct .
 15428 ;;  grs             4   44[BANK0 ] unsigned long 
 15429 ;;  temp            2   53[BANK0 ] struct .
 15430 ;;  bexp            1   48[BANK0 ] unsigned char 
 15431 ;;  aexp            1   43[BANK0 ] unsigned char 
 15432 ;;  sign            1   42[BANK0 ] unsigned char 
 15433 ;; Return value:  Size  Location     Type
 15434 ;;                  4   29[BANK0 ] unsigned char 
 15435 ;; Registers used:
 15436 ;;		wreg, status,2, status,0, pclath, cstack
 15437 ;; Tracked objects:
 15438 ;;		On entry : 0/0
 15439 ;;		On exit  : 0/0
 15440 ;;		Unchanged: 0/0
 15441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15442 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15443 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15444 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15445 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15446 ;;Total ram usage:       26 bytes
 15447 ;; Hardware stack levels used:    1
 15448 ;; Hardware stack levels required when called:    5
 15449 ;; This function calls:
 15450 ;;		__Umul8_16
 15451 ;; This function is called by:
 15452 ;;		_HueToRGB
 15453 ;;		_LED_setHSL
 15454 ;; This function uses a non-reentrant model
 15455 ;;
 15456                           
 15457                           
 15458                           ;psect for function ___flmul
 15459  03F8                     ___flmul:	
 15460                           
 15461                           ;incstack = 0
 15462                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15463  03F8  0140               	movlb	0	; select bank0
 15464  03F9  0840               	movf	___flmul@b+3,w
 15465  03FA  3980               	andlw	128
 15466  03FB  00C5               	movwf	??___flmul
 15467  03FC  0845               	movf	??___flmul,w
 15468  03FD  00CA               	movwf	___flmul@sign
 15469  03FE  3540               	lslf	___flmul@b+3,w
 15470  03FF  00C5               	movwf	??___flmul
 15471  0400  0845               	movf	??___flmul,w
 15472  0401  00D0               	movwf	___flmul@bexp
 15473  0402  1BBF               	btfsc	___flmul@b+2,7
 15474  0403  1450               	bsf	___flmul@bexp,0
 15475  0404  0850               	movf	___flmul@bexp,w
 15476  0405  1903               	btfsc	3,2
 15477  0406  2C14               	goto	l5497
 15478  0407  0A50               	incf	___flmul@bexp,w
 15479  0408  1D03               	btfss	3,2
 15480  0409  2C12               	goto	l5495
 15481  040A  3000               	movlw	0
 15482  040B  00C0               	movwf	___flmul@b+3
 15483  040C  3000               	movlw	0
 15484  040D  00BF               	movwf	___flmul@b+2
 15485  040E  3000               	movlw	0
 15486  040F  00BE               	movwf	___flmul@b+1
 15487  0410  3000               	movlw	0
 15488  0411  00BD               	movwf	___flmul@b
 15489  0412                     l5495:	
 15490  0412  17BF               	bsf	___flmul@b+2,7
 15491  0413  2C1C               	goto	l5499
 15492  0414                     l5497:	
 15493  0414  3000               	movlw	0
 15494  0415  00C0               	movwf	___flmul@b+3
 15495  0416  3000               	movlw	0
 15496  0417  00BF               	movwf	___flmul@b+2
 15497  0418  3000               	movlw	0
 15498  0419  00BE               	movwf	___flmul@b+1
 15499  041A  3000               	movlw	0
 15500  041B  00BD               	movwf	___flmul@b
 15501  041C                     l5499:	
 15502  041C  0844               	movf	___flmul@a+3,w
 15503  041D  3980               	andlw	128
 15504  041E  00C5               	movwf	??___flmul
 15505  041F  0845               	movf	??___flmul,w
 15506  0420  06CA               	xorwf	___flmul@sign,f
 15507  0421  3544               	lslf	___flmul@a+3,w
 15508  0422  00C5               	movwf	??___flmul
 15509  0423  0845               	movf	??___flmul,w
 15510  0424  00CB               	movwf	___flmul@aexp
 15511  0425  1BC3               	btfsc	___flmul@a+2,7
 15512  0426  144B               	bsf	___flmul@aexp,0
 15513  0427  084B               	movf	___flmul@aexp,w
 15514  0428  1903               	btfsc	3,2
 15515  0429  2C37               	goto	l5515
 15516  042A  0A4B               	incf	___flmul@aexp,w
 15517  042B  1D03               	btfss	3,2
 15518  042C  2C35               	goto	l5513
 15519  042D  3000               	movlw	0
 15520  042E  00C4               	movwf	___flmul@a+3
 15521  042F  3000               	movlw	0
 15522  0430  00C3               	movwf	___flmul@a+2
 15523  0431  3000               	movlw	0
 15524  0432  00C2               	movwf	___flmul@a+1
 15525  0433  3000               	movlw	0
 15526  0434  00C1               	movwf	___flmul@a
 15527  0435                     l5513:	
 15528  0435  17C3               	bsf	___flmul@a+2,7
 15529  0436  2C3F               	goto	l5517
 15530  0437                     l5515:	
 15531  0437  3000               	movlw	0
 15532  0438  00C4               	movwf	___flmul@a+3
 15533  0439  3000               	movlw	0
 15534  043A  00C3               	movwf	___flmul@a+2
 15535  043B  3000               	movlw	0
 15536  043C  00C2               	movwf	___flmul@a+1
 15537  043D  3000               	movlw	0
 15538  043E  00C1               	movwf	___flmul@a
 15539  043F                     l5517:	
 15540  043F  084B               	movf	___flmul@aexp,w
 15541  0440  1D03               	btfss	3,2
 15542  0441  0850               	movf	___flmul@bexp,w
 15543  0442  1D03               	btfss	3,2
 15544  0443  2C4D               	goto	l5525
 15545  0444  3000               	movlw	0
 15546  0445  00C0               	movwf	?___flmul+3
 15547  0446  3000               	movlw	0
 15548  0447  00BF               	movwf	?___flmul+2
 15549  0448  3000               	movlw	0
 15550  0449  00BE               	movwf	?___flmul+1
 15551  044A  3000               	movlw	0
 15552  044B  00BD               	movwf	?___flmul
 15553  044C  0008               	return
 15554  044D                     l5525:	
 15555  044D  083D               	movf	___flmul@b,w
 15556  044E  00C5               	movwf	??___flmul
 15557  044F  0845               	movf	??___flmul,w
 15558  0450  00A0               	movwf	__Umul8_16@multiplicand
 15559  0451  0843               	movf	___flmul@a+2,w
 15560  0452  319F  2778  3183   	fcall	__Umul8_16
 15561  0455  0140               	movlb	0	; select bank0
 15562  0456  0821               	movf	?__Umul8_16+1,w
 15563  0457  00D6               	movwf	___flmul@temp+1
 15564  0458  0820               	movf	?__Umul8_16,w
 15565  0459  00D5               	movwf	___flmul@temp
 15566  045A  0855               	movf	___flmul@temp,w
 15567  045B  00C5               	movwf	??___flmul
 15568  045C  01C6               	clrf	??___flmul+1
 15569  045D  01C7               	clrf	??___flmul+2
 15570  045E  01C8               	clrf	??___flmul+3
 15571  045F  0848               	movf	??___flmul+3,w
 15572  0460  00CF               	movwf	___flmul@grs+3
 15573  0461  0847               	movf	??___flmul+2,w
 15574  0462  00CE               	movwf	___flmul@grs+2
 15575  0463  0846               	movf	??___flmul+1,w
 15576  0464  00CD               	movwf	___flmul@grs+1
 15577  0465  0845               	movf	??___flmul,w
 15578  0466  00CC               	movwf	___flmul@grs
 15579  0467  0856               	movf	___flmul@temp+1,w
 15580  0468  00C5               	movwf	??___flmul
 15581  0469  01C6               	clrf	??___flmul+1
 15582  046A  01C7               	clrf	??___flmul+2
 15583  046B  01C8               	clrf	??___flmul+3
 15584  046C  0848               	movf	??___flmul+3,w
 15585  046D  00D4               	movwf	___flmul@prod+3
 15586  046E  0847               	movf	??___flmul+2,w
 15587  046F  00D3               	movwf	___flmul@prod+2
 15588  0470  0846               	movf	??___flmul+1,w
 15589  0471  00D2               	movwf	___flmul@prod+1
 15590  0472  0845               	movf	??___flmul,w
 15591  0473  00D1               	movwf	___flmul@prod
 15592  0474  083E               	movf	___flmul@b+1,w
 15593  0475  00C5               	movwf	??___flmul
 15594  0476  0845               	movf	??___flmul,w
 15595  0477  00A0               	movwf	__Umul8_16@multiplicand
 15596  0478  0842               	movf	___flmul@a+1,w
 15597  0479  319F  2778  3183   	fcall	__Umul8_16
 15598  047C  0140               	movlb	0	; select bank0
 15599  047D  0821               	movf	?__Umul8_16+1,w
 15600  047E  00D6               	movwf	___flmul@temp+1
 15601  047F  0820               	movf	?__Umul8_16,w
 15602  0480  00D5               	movwf	___flmul@temp
 15603  0481  0855               	movf	___flmul@temp,w
 15604  0482  00C5               	movwf	??___flmul
 15605  0483  01C6               	clrf	??___flmul+1
 15606  0484  01C7               	clrf	??___flmul+2
 15607  0485  01C8               	clrf	??___flmul+3
 15608  0486  0845               	movf	??___flmul,w
 15609  0487  07CC               	addwf	___flmul@grs,f
 15610  0488  0846               	movf	??___flmul+1,w
 15611  0489  3DCD               	addwfc	___flmul@grs+1,f
 15612  048A  0847               	movf	??___flmul+2,w
 15613  048B  3DCE               	addwfc	___flmul@grs+2,f
 15614  048C  0848               	movf	??___flmul+3,w
 15615  048D  3DCF               	addwfc	___flmul@grs+3,f
 15616  048E  0856               	movf	___flmul@temp+1,w
 15617  048F  00C5               	movwf	??___flmul
 15618  0490  01C6               	clrf	??___flmul+1
 15619  0491  01C7               	clrf	??___flmul+2
 15620  0492  01C8               	clrf	??___flmul+3
 15621  0493  0845               	movf	??___flmul,w
 15622  0494  07D1               	addwf	___flmul@prod,f
 15623  0495  0846               	movf	??___flmul+1,w
 15624  0496  3DD2               	addwfc	___flmul@prod+1,f
 15625  0497  0847               	movf	??___flmul+2,w
 15626  0498  3DD3               	addwfc	___flmul@prod+2,f
 15627  0499  0848               	movf	??___flmul+3,w
 15628  049A  3DD4               	addwfc	___flmul@prod+3,f
 15629  049B  083F               	movf	___flmul@b+2,w
 15630  049C  00C5               	movwf	??___flmul
 15631  049D  0845               	movf	??___flmul,w
 15632  049E  00A0               	movwf	__Umul8_16@multiplicand
 15633  049F  0841               	movf	___flmul@a,w
 15634  04A0  319F  2778  3183   	fcall	__Umul8_16
 15635  04A3  0140               	movlb	0	; select bank0
 15636  04A4  0821               	movf	?__Umul8_16+1,w
 15637  04A5  00D6               	movwf	___flmul@temp+1
 15638  04A6  0820               	movf	?__Umul8_16,w
 15639  04A7  00D5               	movwf	___flmul@temp
 15640  04A8  0855               	movf	___flmul@temp,w
 15641  04A9  00C5               	movwf	??___flmul
 15642  04AA  01C6               	clrf	??___flmul+1
 15643  04AB  01C7               	clrf	??___flmul+2
 15644  04AC  01C8               	clrf	??___flmul+3
 15645  04AD  0845               	movf	??___flmul,w
 15646  04AE  07CC               	addwf	___flmul@grs,f
 15647  04AF  0846               	movf	??___flmul+1,w
 15648  04B0  3DCD               	addwfc	___flmul@grs+1,f
 15649  04B1  0847               	movf	??___flmul+2,w
 15650  04B2  3DCE               	addwfc	___flmul@grs+2,f
 15651  04B3  0848               	movf	??___flmul+3,w
 15652  04B4  3DCF               	addwfc	___flmul@grs+3,f
 15653  04B5  0856               	movf	___flmul@temp+1,w
 15654  04B6  00C5               	movwf	??___flmul
 15655  04B7  01C6               	clrf	??___flmul+1
 15656  04B8  01C7               	clrf	??___flmul+2
 15657  04B9  01C8               	clrf	??___flmul+3
 15658  04BA  0845               	movf	??___flmul,w
 15659  04BB  07D1               	addwf	___flmul@prod,f
 15660  04BC  0846               	movf	??___flmul+1,w
 15661  04BD  3DD2               	addwfc	___flmul@prod+1,f
 15662  04BE  0847               	movf	??___flmul+2,w
 15663  04BF  3DD3               	addwfc	___flmul@prod+2,f
 15664  04C0  0848               	movf	??___flmul+3,w
 15665  04C1  3DD4               	addwfc	___flmul@prod+3,f
 15666  04C2  3008               	movlw	8
 15667  04C3                     u5855:	
 15668  04C3  35CC               	lslf	___flmul@grs,f
 15669  04C4  0DCD               	rlf	___flmul@grs+1,f
 15670  04C5  0DCE               	rlf	___flmul@grs+2,f
 15671  04C6  0DCF               	rlf	___flmul@grs+3,f
 15672  04C7  0B89               	decfsz	9,f
 15673  04C8  2CC3               	goto	u5855
 15674  04C9  083E               	movf	___flmul@b+1,w
 15675  04CA  00C5               	movwf	??___flmul
 15676  04CB  0845               	movf	??___flmul,w
 15677  04CC  00A0               	movwf	__Umul8_16@multiplicand
 15678  04CD  0841               	movf	___flmul@a,w
 15679  04CE  319F  2778  3183   	fcall	__Umul8_16
 15680  04D1  0140               	movlb	0	; select bank0
 15681  04D2  0821               	movf	?__Umul8_16+1,w
 15682  04D3  00D6               	movwf	___flmul@temp+1
 15683  04D4  0820               	movf	?__Umul8_16,w
 15684  04D5  00D5               	movwf	___flmul@temp
 15685  04D6  0855               	movf	___flmul@temp,w
 15686  04D7  07CC               	addwf	___flmul@grs,f
 15687  04D8  0856               	movf	___flmul@temp+1,w
 15688  04D9  3DCD               	addwfc	___flmul@grs+1,f
 15689  04DA  3000               	movlw	0
 15690  04DB  3DCE               	addwfc	___flmul@grs+2,f
 15691  04DC  3DCF               	addwfc	___flmul@grs+3,f
 15692  04DD  083D               	movf	___flmul@b,w
 15693  04DE  00C5               	movwf	??___flmul
 15694  04DF  0845               	movf	??___flmul,w
 15695  04E0  00A0               	movwf	__Umul8_16@multiplicand
 15696  04E1  0842               	movf	___flmul@a+1,w
 15697  04E2  319F  2778  3183   	fcall	__Umul8_16
 15698  04E5  0140               	movlb	0	; select bank0
 15699  04E6  0821               	movf	?__Umul8_16+1,w
 15700  04E7  00D6               	movwf	___flmul@temp+1
 15701  04E8  0820               	movf	?__Umul8_16,w
 15702  04E9  00D5               	movwf	___flmul@temp
 15703  04EA  0855               	movf	___flmul@temp,w
 15704  04EB  07CC               	addwf	___flmul@grs,f
 15705  04EC  0856               	movf	___flmul@temp+1,w
 15706  04ED  3DCD               	addwfc	___flmul@grs+1,f
 15707  04EE  3000               	movlw	0
 15708  04EF  3DCE               	addwfc	___flmul@grs+2,f
 15709  04F0  3DCF               	addwfc	___flmul@grs+3,f
 15710  04F1  3008               	movlw	8
 15711  04F2                     u5865:	
 15712  04F2  35CC               	lslf	___flmul@grs,f
 15713  04F3  0DCD               	rlf	___flmul@grs+1,f
 15714  04F4  0DCE               	rlf	___flmul@grs+2,f
 15715  04F5  0DCF               	rlf	___flmul@grs+3,f
 15716  04F6  0B89               	decfsz	9,f
 15717  04F7  2CF2               	goto	u5865
 15718  04F8  083D               	movf	___flmul@b,w
 15719  04F9  00C5               	movwf	??___flmul
 15720  04FA  0845               	movf	??___flmul,w
 15721  04FB  00A0               	movwf	__Umul8_16@multiplicand
 15722  04FC  0841               	movf	___flmul@a,w
 15723  04FD  319F  2778  3183   	fcall	__Umul8_16
 15724  0500  0140               	movlb	0	; select bank0
 15725  0501  0821               	movf	?__Umul8_16+1,w
 15726  0502  00D6               	movwf	___flmul@temp+1
 15727  0503  0820               	movf	?__Umul8_16,w
 15728  0504  00D5               	movwf	___flmul@temp
 15729  0505  0855               	movf	___flmul@temp,w
 15730  0506  07CC               	addwf	___flmul@grs,f
 15731  0507  0856               	movf	___flmul@temp+1,w
 15732  0508  3DCD               	addwfc	___flmul@grs+1,f
 15733  0509  3000               	movlw	0
 15734  050A  3DCE               	addwfc	___flmul@grs+2,f
 15735  050B  3DCF               	addwfc	___flmul@grs+3,f
 15736  050C  083E               	movf	___flmul@b+1,w
 15737  050D  00C5               	movwf	??___flmul
 15738  050E  0845               	movf	??___flmul,w
 15739  050F  00A0               	movwf	__Umul8_16@multiplicand
 15740  0510  0843               	movf	___flmul@a+2,w
 15741  0511  319F  2778  3183   	fcall	__Umul8_16
 15742  0514  0140               	movlb	0	; select bank0
 15743  0515  0821               	movf	?__Umul8_16+1,w
 15744  0516  00D6               	movwf	___flmul@temp+1
 15745  0517  0820               	movf	?__Umul8_16,w
 15746  0518  00D5               	movwf	___flmul@temp
 15747  0519  0855               	movf	___flmul@temp,w
 15748  051A  07D1               	addwf	___flmul@prod,f
 15749  051B  0856               	movf	___flmul@temp+1,w
 15750  051C  3DD2               	addwfc	___flmul@prod+1,f
 15751  051D  3000               	movlw	0
 15752  051E  3DD3               	addwfc	___flmul@prod+2,f
 15753  051F  3DD4               	addwfc	___flmul@prod+3,f
 15754  0520  083F               	movf	___flmul@b+2,w
 15755  0521  00C5               	movwf	??___flmul
 15756  0522  0845               	movf	??___flmul,w
 15757  0523  00A0               	movwf	__Umul8_16@multiplicand
 15758  0524  0842               	movf	___flmul@a+1,w
 15759  0525  319F  2778  3183   	fcall	__Umul8_16
 15760  0528  0140               	movlb	0	; select bank0
 15761  0529  0821               	movf	?__Umul8_16+1,w
 15762  052A  00D6               	movwf	___flmul@temp+1
 15763  052B  0820               	movf	?__Umul8_16,w
 15764  052C  00D5               	movwf	___flmul@temp
 15765  052D  0855               	movf	___flmul@temp,w
 15766  052E  07D1               	addwf	___flmul@prod,f
 15767  052F  0856               	movf	___flmul@temp+1,w
 15768  0530  3DD2               	addwfc	___flmul@prod+1,f
 15769  0531  3000               	movlw	0
 15770  0532  3DD3               	addwfc	___flmul@prod+2,f
 15771  0533  3DD4               	addwfc	___flmul@prod+3,f
 15772  0534  083F               	movf	___flmul@b+2,w
 15773  0535  00C5               	movwf	??___flmul
 15774  0536  0845               	movf	??___flmul,w
 15775  0537  00A0               	movwf	__Umul8_16@multiplicand
 15776  0538  0843               	movf	___flmul@a+2,w
 15777  0539  319F  2778  3183   	fcall	__Umul8_16
 15778  053C  0140               	movlb	0	; select bank0
 15779  053D  0821               	movf	?__Umul8_16+1,w
 15780  053E  00D6               	movwf	___flmul@temp+1
 15781  053F  0820               	movf	?__Umul8_16,w
 15782  0540  00D5               	movwf	___flmul@temp
 15783  0541  0855               	movf	___flmul@temp,w
 15784  0542  00C5               	movwf	??___flmul
 15785  0543  0856               	movf	___flmul@temp+1,w
 15786  0544  00C6               	movwf	??___flmul+1
 15787  0545  01C7               	clrf	??___flmul+2
 15788  0546  01C8               	clrf	??___flmul+3
 15789  0547  3008               	movlw	8
 15790  0548                     u5875:	
 15791  0548  35C5               	lslf	??___flmul,f
 15792  0549  0DC6               	rlf	??___flmul+1,f
 15793  054A  0DC7               	rlf	??___flmul+2,f
 15794  054B  0DC8               	rlf	??___flmul+3,f
 15795  054C  0B89               	decfsz	9,f
 15796  054D  2D48               	goto	u5875
 15797  054E  0845               	movf	??___flmul,w
 15798  054F  07D1               	addwf	___flmul@prod,f
 15799  0550  0846               	movf	??___flmul+1,w
 15800  0551  3DD2               	addwfc	___flmul@prod+1,f
 15801  0552  0847               	movf	??___flmul+2,w
 15802  0553  3DD3               	addwfc	___flmul@prod+2,f
 15803  0554  0848               	movf	??___flmul+3,w
 15804  0555  3DD4               	addwfc	___flmul@prod+3,f
 15805  0556  084C               	movf	___flmul@grs,w
 15806  0557  00C5               	movwf	??___flmul
 15807  0558  084D               	movf	___flmul@grs+1,w
 15808  0559  00C6               	movwf	??___flmul+1
 15809  055A  084E               	movf	___flmul@grs+2,w
 15810  055B  00C7               	movwf	??___flmul+2
 15811  055C  084F               	movf	___flmul@grs+3,w
 15812  055D  00C8               	movwf	??___flmul+3
 15813  055E  3018               	movlw	24
 15814  055F                     u5885:	
 15815  055F  36C8               	lsrf	??___flmul+3,f
 15816  0560  0CC7               	rrf	??___flmul+2,f
 15817  0561  0CC6               	rrf	??___flmul+1,f
 15818  0562  0CC5               	rrf	??___flmul,f
 15819  0563  0B89               	decfsz	9,f
 15820  0564  2D5F               	goto	u5885
 15821  0565  0845               	movf	??___flmul,w
 15822  0566  07D1               	addwf	___flmul@prod,f
 15823  0567  0846               	movf	??___flmul+1,w
 15824  0568  3DD2               	addwfc	___flmul@prod+1,f
 15825  0569  0847               	movf	??___flmul+2,w
 15826  056A  3DD3               	addwfc	___flmul@prod+2,f
 15827  056B  0848               	movf	??___flmul+3,w
 15828  056C  3DD4               	addwfc	___flmul@prod+3,f
 15829  056D  3008               	movlw	8
 15830  056E                     u5895:	
 15831  056E  35CC               	lslf	___flmul@grs,f
 15832  056F  0DCD               	rlf	___flmul@grs+1,f
 15833  0570  0DCE               	rlf	___flmul@grs+2,f
 15834  0571  0DCF               	rlf	___flmul@grs+3,f
 15835  0572  0B89               	decfsz	9,f
 15836  0573  2D6E               	goto	u5895
 15837  0574  0850               	movf	___flmul@bexp,w
 15838  0575  074B               	addwf	___flmul@aexp,w
 15839  0576  00C5               	movwf	??___flmul
 15840  0577  01C6               	clrf	??___flmul+1
 15841  0578  0DC6               	rlf	??___flmul+1,f
 15842  0579  0845               	movf	??___flmul,w
 15843  057A  3E82               	addlw	130
 15844  057B  00D5               	movwf	___flmul@temp
 15845  057C  30FF               	movlw	255
 15846  057D  3D46               	addwfc	??___flmul+1,w
 15847  057E  00D6               	movwf	___flmul@temp+1
 15848  057F                     l5577:	
 15849  057F  1BD3               	btfsc	___flmul@prod+2,7
 15850  0580  2D96               	goto	l5579
 15851  0581  3001               	movlw	1
 15852  0582                     u5905:	
 15853  0582  35D1               	lslf	___flmul@prod,f
 15854  0583  0DD2               	rlf	___flmul@prod+1,f
 15855  0584  0DD3               	rlf	___flmul@prod+2,f
 15856  0585  0DD4               	rlf	___flmul@prod+3,f
 15857  0586  0B89               	decfsz	9,f
 15858  0587  2D82               	goto	u5905
 15859  0588  1BCF               	btfsc	___flmul@grs+3,7
 15860  0589  1451               	bsf	___flmul@prod,0
 15861  058A  3001               	movlw	1
 15862  058B                     u5925:	
 15863  058B  35CC               	lslf	___flmul@grs,f
 15864  058C  0DCD               	rlf	___flmul@grs+1,f
 15865  058D  0DCE               	rlf	___flmul@grs+2,f
 15866  058E  0DCF               	rlf	___flmul@grs+3,f
 15867  058F  0B89               	decfsz	9,f
 15868  0590  2D8B               	goto	u5925
 15869  0591  30FF               	movlw	255
 15870  0592  07D5               	addwf	___flmul@temp,f
 15871  0593  30FF               	movlw	255
 15872  0594  3DD6               	addwfc	___flmul@temp+1,f
 15873  0595  2D7F               	goto	l5577
 15874  0596                     l5579:	
 15875  0596  01CB               	clrf	___flmul@aexp
 15876  0597  1FCF               	btfss	___flmul@grs+3,7
 15877  0598  2DAF               	goto	l5589
 15878  0599  30FF               	movlw	255
 15879  059A  054C               	andwf	___flmul@grs,w
 15880  059B  00C5               	movwf	??___flmul
 15881  059C  30FF               	movlw	255
 15882  059D  054D               	andwf	___flmul@grs+1,w
 15883  059E  00C6               	movwf	??___flmul+1
 15884  059F  30FF               	movlw	255
 15885  05A0  054E               	andwf	___flmul@grs+2,w
 15886  05A1  00C7               	movwf	??___flmul+2
 15887  05A2  307F               	movlw	127
 15888  05A3  054F               	andwf	___flmul@grs+3,w
 15889  05A4  00C8               	movwf	??___flmul+3
 15890  05A5  0848               	movf	??___flmul+3,w
 15891  05A6  0447               	iorwf	??___flmul+2,w
 15892  05A7  0446               	iorwf	??___flmul+1,w
 15893  05A8  0445               	iorwf	??___flmul,w
 15894  05A9  1903               	skipnz
 15895  05AA  1851               	btfsc	___flmul@prod,0
 15896  05AB  2DAD               	goto	l5585
 15897  05AC  2DAF               	goto	l5589
 15898  05AD                     l5585:	
 15899  05AD  01CB               	clrf	___flmul@aexp
 15900  05AE  0ACB               	incf	___flmul@aexp,f
 15901  05AF                     l5589:	
 15902  05AF  084B               	movf	___flmul@aexp,w
 15903  05B0  1903               	btfsc	3,2
 15904  05B1  2DD8               	goto	l5599
 15905  05B2  3001               	movlw	1
 15906  05B3  07D1               	addwf	___flmul@prod,f
 15907  05B4  3000               	movlw	0
 15908  05B5  3DD2               	addwfc	___flmul@prod+1,f
 15909  05B6  3000               	movlw	0
 15910  05B7  3DD3               	addwfc	___flmul@prod+2,f
 15911  05B8  3000               	movlw	0
 15912  05B9  3DD4               	addwfc	___flmul@prod+3,f
 15913  05BA  1C54               	btfss	___flmul@prod+3,0
 15914  05BB  2DD8               	goto	l5599
 15915  05BC  0851               	movf	___flmul@prod,w
 15916  05BD  00C5               	movwf	??___flmul
 15917  05BE  0852               	movf	___flmul@prod+1,w
 15918  05BF  00C6               	movwf	??___flmul+1
 15919  05C0  0853               	movf	___flmul@prod+2,w
 15920  05C1  00C7               	movwf	??___flmul+2
 15921  05C2  0854               	movf	___flmul@prod+3,w
 15922  05C3  00C8               	movwf	??___flmul+3
 15923  05C4  3001               	movlw	1
 15924  05C5  00C9               	movwf	??___flmul+4
 15925  05C6                     u5995:	
 15926  05C6  37C8               	asrf	??___flmul+3,f
 15927  05C7  0CC7               	rrf	??___flmul+2,f
 15928  05C8  0CC6               	rrf	??___flmul+1,f
 15929  05C9  0CC5               	rrf	??___flmul,f
 15930  05CA  0BC9               	decfsz	??___flmul+4,f
 15931  05CB  2DC6               	goto	u5995
 15932  05CC  0848               	movf	??___flmul+3,w
 15933  05CD  00D4               	movwf	___flmul@prod+3
 15934  05CE  0847               	movf	??___flmul+2,w
 15935  05CF  00D3               	movwf	___flmul@prod+2
 15936  05D0  0846               	movf	??___flmul+1,w
 15937  05D1  00D2               	movwf	___flmul@prod+1
 15938  05D2  0845               	movf	??___flmul,w
 15939  05D3  00D1               	movwf	___flmul@prod
 15940  05D4  3001               	movlw	1
 15941  05D5  07D5               	addwf	___flmul@temp,f
 15942  05D6  3000               	movlw	0
 15943  05D7  3DD6               	addwfc	___flmul@temp+1,f
 15944  05D8                     l5599:	
 15945  05D8  0856               	movf	___flmul@temp+1,w
 15946  05D9  3A80               	xorlw	128
 15947  05DA  00C5               	movwf	??___flmul
 15948  05DB  3080               	movlw	128
 15949  05DC  0245               	subwf	??___flmul,w
 15950  05DD  1D03               	skipz
 15951  05DE  2DE1               	goto	u6005
 15952  05DF  30FF               	movlw	255
 15953  05E0  0255               	subwf	___flmul@temp,w
 15954  05E1                     u6005:	
 15955  05E1  1C03               	skipc
 15956  05E2  2DED               	goto	l5603
 15957  05E3  307F               	movlw	127
 15958  05E4  0140               	movlb	0	; select bank0
 15959  05E5  00D4               	movwf	___flmul@prod+3
 15960  05E6  3080               	movlw	128
 15961  05E7  00D3               	movwf	___flmul@prod+2
 15962  05E8  3000               	movlw	0
 15963  05E9  00D2               	movwf	___flmul@prod+1
 15964  05EA  3000               	movlw	0
 15965  05EB  00D1               	movwf	___flmul@prod
 15966  05EC  2E17               	goto	l1692
 15967  05ED                     l5603:	
 15968  05ED  0140               	movlb	0	; select bank0
 15969  05EE  0856               	movf	___flmul@temp+1,w
 15970  05EF  3A80               	xorlw	128
 15971  05F0  00C5               	movwf	??___flmul
 15972  05F1  3080               	movlw	128
 15973  05F2  0245               	subwf	??___flmul,w
 15974  05F3  1D03               	skipz
 15975  05F4  2DF7               	goto	u6015
 15976  05F5  3001               	movlw	1
 15977  05F6  0255               	subwf	___flmul@temp,w
 15978  05F7                     u6015:	
 15979  05F7  1803               	skipnc
 15980  05F8  2E04               	goto	l5609
 15981  05F9  3000               	movlw	0
 15982  05FA  0140               	movlb	0	; select bank0
 15983  05FB  00D4               	movwf	___flmul@prod+3
 15984  05FC  3000               	movlw	0
 15985  05FD  00D3               	movwf	___flmul@prod+2
 15986  05FE  3000               	movlw	0
 15987  05FF  00D2               	movwf	___flmul@prod+1
 15988  0600  3000               	movlw	0
 15989  0601  00D1               	movwf	___flmul@prod
 15990  0602  01CA               	clrf	___flmul@sign
 15991  0603  2E17               	goto	l1692
 15992  0604                     l5609:	
 15993  0604  0140               	movlb	0	; select bank0
 15994  0605  0855               	movf	___flmul@temp,w
 15995  0606  00C5               	movwf	??___flmul
 15996  0607  0845               	movf	??___flmul,w
 15997  0608  00D0               	movwf	___flmul@bexp
 15998  0609  30FF               	movlw	255
 15999  060A  05D1               	andwf	___flmul@prod,f
 16000  060B  30FF               	movlw	255
 16001  060C  05D2               	andwf	___flmul@prod+1,f
 16002  060D  307F               	movlw	127
 16003  060E  05D3               	andwf	___flmul@prod+2,f
 16004  060F  3000               	movlw	0
 16005  0610  05D4               	andwf	___flmul@prod+3,f
 16006  0611  1850               	btfsc	___flmul@bexp,0
 16007  0612  17D3               	bsf	___flmul@prod+2,7
 16008  0613  3650               	lsrf	___flmul@bexp,w
 16009  0614  00C5               	movwf	??___flmul
 16010  0615  0845               	movf	??___flmul,w
 16011  0616  00D4               	movwf	___flmul@prod+3
 16012  0617                     l1692:	
 16013  0617  084A               	movf	___flmul@sign,w
 16014  0618  00C5               	movwf	??___flmul
 16015  0619  0845               	movf	??___flmul,w
 16016  061A  04D4               	iorwf	___flmul@prod+3,f
 16017  061B  0854               	movf	___flmul@prod+3,w
 16018  061C  00C0               	movwf	?___flmul+3
 16019  061D  0853               	movf	___flmul@prod+2,w
 16020  061E  00BF               	movwf	?___flmul+2
 16021  061F  0852               	movf	___flmul@prod+1,w
 16022  0620  00BE               	movwf	?___flmul+1
 16023  0621  0851               	movf	___flmul@prod,w
 16024  0622  00BD               	movwf	?___flmul
 16025  0623  0008               	return
 16026  0624                     __end_of___flmul:	
 16027                           
 16028                           	psect	text49
 16029  1F78                     __ptext49:	
 16030 ;; *************** function __Umul8_16 *****************
 16031 ;; Defined at:
 16032 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 16033 ;; Parameters:    Size  Location     Type
 16034 ;;  multiplier      1    wreg     unsigned char 
 16035 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 16036 ;; Auto vars:     Size  Location     Type
 16037 ;;  multiplier      1    8[BANK0 ] unsigned char 
 16038 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 16039 ;;  product         2    4[BANK0 ] unsigned int 
 16040 ;; Return value:  Size  Location     Type
 16041 ;;                  2    0[BANK0 ] unsigned int 
 16042 ;; Registers used:
 16043 ;;		wreg, status,2, status,0
 16044 ;; Tracked objects:
 16045 ;;		On entry : 0/0
 16046 ;;		On exit  : 0/0
 16047 ;;		Unchanged: 0/0
 16048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16050 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16051 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16052 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16053 ;;Total ram usage:        9 bytes
 16054 ;; Hardware stack levels used:    1
 16055 ;; Hardware stack levels required when called:    4
 16056 ;; This function calls:
 16057 ;;		Nothing
 16058 ;; This function is called by:
 16059 ;;		___flmul
 16060 ;; This function uses a non-reentrant model
 16061 ;;
 16062                           
 16063                           
 16064                           ;psect for function __Umul8_16
 16065  1F78                     __Umul8_16:	
 16066                           
 16067                           ;incstack = 0
 16068                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16069                           ;__Umul8_16@multiplier stored from wreg
 16070  1F78  0140               	movlb	0	; select bank0
 16071  1F79  00A8               	movwf	__Umul8_16@multiplier
 16072  1F7A  01A4               	clrf	__Umul8_16@product
 16073  1F7B  01A5               	clrf	__Umul8_16@product+1
 16074  1F7C  0820               	movf	__Umul8_16@multiplicand,w
 16075  1F7D  00A2               	movwf	??__Umul8_16
 16076  1F7E  01A3               	clrf	??__Umul8_16+1
 16077  1F7F  0822               	movf	??__Umul8_16,w
 16078  1F80  00A6               	movwf	__Umul8_16@word_mpld
 16079  1F81  0823               	movf	??__Umul8_16+1,w
 16080  1F82  00A7               	movwf	__Umul8_16@word_mpld+1
 16081  1F83                     l5415:	
 16082  1F83  1C28               	btfss	__Umul8_16@multiplier,0
 16083  1F84  2F89               	goto	l1737
 16084  1F85  0826               	movf	__Umul8_16@word_mpld,w
 16085  1F86  07A4               	addwf	__Umul8_16@product,f
 16086  1F87  0827               	movf	__Umul8_16@word_mpld+1,w
 16087  1F88  3DA5               	addwfc	__Umul8_16@product+1,f
 16088  1F89                     l1737:	
 16089  1F89  3001               	movlw	1
 16090  1F8A                     u5615:	
 16091  1F8A  35A6               	lslf	__Umul8_16@word_mpld,f
 16092  1F8B  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 16093  1F8C  0B89               	decfsz	9,f
 16094  1F8D  2F8A               	goto	u5615
 16095  1F8E  1003               	clrc
 16096  1F8F  0CA8               	rrf	__Umul8_16@multiplier,f
 16097  1F90  0828               	movf	__Umul8_16@multiplier,w
 16098  1F91  1D03               	btfss	3,2
 16099  1F92  2F83               	goto	l5415
 16100  1F93  0825               	movf	__Umul8_16@product+1,w
 16101  1F94  00A1               	movwf	?__Umul8_16+1
 16102  1F95  0824               	movf	__Umul8_16@product,w
 16103  1F96  00A0               	movwf	?__Umul8_16
 16104  1F97  0008               	return
 16105  1F98                     __end_of__Umul8_16:	
 16106                           
 16107                           	psect	text50
 16108  1503                     __ptext50:	
 16109 ;; *************** function ___flge *****************
 16110 ;; Defined at:
 16111 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;  ff1             4   55[BANK0 ] unsigned int 
 16114 ;;  ff2             4   59[BANK0 ] unsigned int 
 16115 ;; Auto vars:     Size  Location     Type
 16116 ;;		None
 16117 ;; Return value:  Size  Location     Type
 16118 ;;		None               void
 16119 ;; Registers used:
 16120 ;;		wreg, status,2, status,0
 16121 ;; Tracked objects:
 16122 ;;		On entry : 0/0
 16123 ;;		On exit  : 0/0
 16124 ;;		Unchanged: 0/0
 16125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16126 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16128 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16129 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16130 ;;Total ram usage:       12 bytes
 16131 ;; Hardware stack levels used:    1
 16132 ;; Hardware stack levels required when called:    4
 16133 ;; This function calls:
 16134 ;;		Nothing
 16135 ;; This function is called by:
 16136 ;;		_HueToRGB
 16137 ;;		_LED_setHSL
 16138 ;;		_pulseColors
 16139 ;; This function uses a non-reentrant model
 16140 ;;
 16141                           
 16142                           
 16143                           ;psect for function ___flge
 16144  1503                     ___flge:	
 16145                           
 16146                           ;incstack = 0
 16147                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16148  1503  3000               	movlw	0
 16149  1504  0140               	movlb	0	; select bank0
 16150  1505  0557               	andwf	___flge@ff1,w
 16151  1506  00DF               	movwf	??___flge
 16152  1507  3000               	movlw	0
 16153  1508  0558               	andwf	___flge@ff1+1,w
 16154  1509  00E0               	movwf	??___flge+1
 16155  150A  3080               	movlw	128
 16156  150B  0559               	andwf	___flge@ff1+2,w
 16157  150C  00E1               	movwf	??___flge+2
 16158  150D  307F               	movlw	127
 16159  150E  055A               	andwf	___flge@ff1+3,w
 16160  150F  00E2               	movwf	??___flge+3
 16161  1510  0862               	movf	??___flge+3,w
 16162  1511  0461               	iorwf	??___flge+2,w
 16163  1512  0460               	iorwf	??___flge+1,w
 16164  1513  045F               	iorwf	??___flge,w
 16165  1514  1D03               	skipz
 16166  1515  2D1E               	goto	l1461
 16167  1516  3000               	movlw	0
 16168  1517  00DA               	movwf	___flge@ff1+3
 16169  1518  3000               	movlw	0
 16170  1519  00D9               	movwf	___flge@ff1+2
 16171  151A  3000               	movlw	0
 16172  151B  00D8               	movwf	___flge@ff1+1
 16173  151C  3000               	movlw	0
 16174  151D  00D7               	movwf	___flge@ff1
 16175  151E                     l1461:	
 16176  151E  3000               	movlw	0
 16177  151F  055B               	andwf	___flge@ff2,w
 16178  1520  00DF               	movwf	??___flge
 16179  1521  3000               	movlw	0
 16180  1522  055C               	andwf	___flge@ff2+1,w
 16181  1523  00E0               	movwf	??___flge+1
 16182  1524  3080               	movlw	128
 16183  1525  055D               	andwf	___flge@ff2+2,w
 16184  1526  00E1               	movwf	??___flge+2
 16185  1527  307F               	movlw	127
 16186  1528  055E               	andwf	___flge@ff2+3,w
 16187  1529  00E2               	movwf	??___flge+3
 16188  152A  0862               	movf	??___flge+3,w
 16189  152B  0461               	iorwf	??___flge+2,w
 16190  152C  0460               	iorwf	??___flge+1,w
 16191  152D  045F               	iorwf	??___flge,w
 16192  152E  1D03               	skipz
 16193  152F  2D38               	goto	l3903
 16194  1530  3000               	movlw	0
 16195  1531  00DE               	movwf	___flge@ff2+3
 16196  1532  3000               	movlw	0
 16197  1533  00DD               	movwf	___flge@ff2+2
 16198  1534  3000               	movlw	0
 16199  1535  00DC               	movwf	___flge@ff2+1
 16200  1536  3000               	movlw	0
 16201  1537  00DB               	movwf	___flge@ff2
 16202  1538                     l3903:	
 16203  1538  1FDA               	btfss	___flge@ff1+3,7
 16204  1539  2D52               	goto	l3907
 16205  153A  3000               	movlw	0
 16206  153B  00DF               	movwf	??___flge
 16207  153C  3000               	movlw	0
 16208  153D  00E0               	movwf	??___flge+1
 16209  153E  3000               	movlw	0
 16210  153F  00E1               	movwf	??___flge+2
 16211  1540  3080               	movlw	128
 16212  1541  00E2               	movwf	??___flge+3
 16213  1542  0857               	movf	___flge@ff1,w
 16214  1543  02DF               	subwf	??___flge,f
 16215  1544  0858               	movf	___flge@ff1+1,w
 16216  1545  3BE0               	subwfb	??___flge+1,f
 16217  1546  0859               	movf	___flge@ff1+2,w
 16218  1547  3BE1               	subwfb	??___flge+2,f
 16219  1548  085A               	movf	___flge@ff1+3,w
 16220  1549  3BE2               	subwfb	??___flge+3,f
 16221  154A  0862               	movf	??___flge+3,w
 16222  154B  00DA               	movwf	___flge@ff1+3
 16223  154C  0861               	movf	??___flge+2,w
 16224  154D  00D9               	movwf	___flge@ff1+2
 16225  154E  0860               	movf	??___flge+1,w
 16226  154F  00D8               	movwf	___flge@ff1+1
 16227  1550  085F               	movf	??___flge,w
 16228  1551  00D7               	movwf	___flge@ff1
 16229  1552                     l3907:	
 16230  1552  1FDE               	btfss	___flge@ff2+3,7
 16231  1553  2D6C               	goto	l1464
 16232  1554  3000               	movlw	0
 16233  1555  00DF               	movwf	??___flge
 16234  1556  3000               	movlw	0
 16235  1557  00E0               	movwf	??___flge+1
 16236  1558  3000               	movlw	0
 16237  1559  00E1               	movwf	??___flge+2
 16238  155A  3080               	movlw	128
 16239  155B  00E2               	movwf	??___flge+3
 16240  155C  085B               	movf	___flge@ff2,w
 16241  155D  02DF               	subwf	??___flge,f
 16242  155E  085C               	movf	___flge@ff2+1,w
 16243  155F  3BE0               	subwfb	??___flge+1,f
 16244  1560  085D               	movf	___flge@ff2+2,w
 16245  1561  3BE1               	subwfb	??___flge+2,f
 16246  1562  085E               	movf	___flge@ff2+3,w
 16247  1563  3BE2               	subwfb	??___flge+3,f
 16248  1564  0862               	movf	??___flge+3,w
 16249  1565  00DE               	movwf	___flge@ff2+3
 16250  1566  0861               	movf	??___flge+2,w
 16251  1567  00DD               	movwf	___flge@ff2+2
 16252  1568  0860               	movf	??___flge+1,w
 16253  1569  00DC               	movwf	___flge@ff2+1
 16254  156A  085F               	movf	??___flge,w
 16255  156B  00DB               	movwf	___flge@ff2
 16256  156C                     l1464:	
 16257  156C  3080               	movlw	128
 16258  156D  06DA               	xorwf	___flge@ff1+3,f
 16259  156E  3080               	movlw	128
 16260  156F  06DE               	xorwf	___flge@ff2+3,f
 16261  1570  085E               	movf	___flge@ff2+3,w
 16262  1571  025A               	subwf	___flge@ff1+3,w
 16263  1572  1D03               	skipz
 16264  1573  0008               	return
 16265  1574  085D               	movf	___flge@ff2+2,w
 16266  1575  0259               	subwf	___flge@ff1+2,w
 16267  1576  1D03               	skipz
 16268  1577  0008               	return
 16269  1578  085C               	movf	___flge@ff2+1,w
 16270  1579  0258               	subwf	___flge@ff1+1,w
 16271  157A  1D03               	skipz
 16272  157B  0008               	return
 16273  157C  085B               	movf	___flge@ff2,w
 16274  157D  0257               	subwf	___flge@ff1,w
 16275  157E  0008               	return
 16276  157F                     __end_of___flge:	
 16277                           
 16278                           	psect	text51
 16279  1D8D                     __ptext51:	
 16280 ;; *************** function _BEAT_detected *****************
 16281 ;; Defined at:
 16282 ;;		line 41 in file "beat.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;		None
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;		None
 16287 ;; Return value:  Size  Location     Type
 16288 ;;                  1    wreg      _Bool 
 16289 ;; Registers used:
 16290 ;;		wreg, status,2, status,0
 16291 ;; Tracked objects:
 16292 ;;		On entry : 0/0
 16293 ;;		On exit  : 0/0
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16300 ;;Total ram usage:        0 bytes
 16301 ;; Hardware stack levels used:    1
 16302 ;; Hardware stack levels required when called:    4
 16303 ;; This function calls:
 16304 ;;		Nothing
 16305 ;; This function is called by:
 16306 ;;		_LED_Beat
 16307 ;; This function uses a non-reentrant model
 16308 ;;
 16309                           
 16310                           
 16311                           ;psect for function _BEAT_detected
 16312  1D8D                     _BEAT_detected:	
 16313                           
 16314                           ;beat.c: 42:     if (detected) {
 16315                           
 16316                           ;incstack = 0
 16317                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 16318  1D8D  0142               	movlb	2	; select bank2
 16319  1D8E  0850               	movf	_detected^(0+256),w
 16320  1D8F  1903               	btfsc	3,2
 16321  1D90  2D94               	goto	l5839
 16322                           
 16323                           ;beat.c: 43:         detected = 0;
 16324  1D91  01D0               	clrf	_detected^(0+256)
 16325                           
 16326                           ;beat.c: 44:         return 1;
 16327  1D92  3001               	movlw	1
 16328  1D93  0008               	return
 16329  1D94                     l5839:	
 16330                           
 16331                           ;beat.c: 46:     return 0;
 16332  1D94  3000               	movlw	0
 16333  1D95  0008               	return
 16334  1D96                     __end_of_BEAT_detected:	
 16335                           
 16336                           	psect	text52
 16337  08D0                     __ptext52:	
 16338 ;; *************** function _BEAT_task *****************
 16339 ;; Defined at:
 16340 ;;		line 59 in file "beat.c"
 16341 ;; Parameters:    Size  Location     Type
 16342 ;;		None
 16343 ;; Auto vars:     Size  Location     Type
 16344 ;;  offset          2   10[BANK0 ] unsigned short 
 16345 ;; Return value:  Size  Location     Type
 16346 ;;                  1    wreg      void 
 16347 ;; Registers used:
 16348 ;;		wreg, status,2, status,0, pclath, cstack
 16349 ;; Tracked objects:
 16350 ;;		On entry : 0/0
 16351 ;;		On exit  : 0/0
 16352 ;;		Unchanged: 0/0
 16353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16357 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16358 ;;Total ram usage:        4 bytes
 16359 ;; Hardware stack levels used:    1
 16360 ;; Hardware stack levels required when called:    5
 16361 ;; This function calls:
 16362 ;;		_ADCC_SetUpperThreshold
 16363 ;;		_CLOCK_getTime
 16364 ;;		_TM1650_isEnabled
 16365 ;;		___lwdiv
 16366 ;; This function is called by:
 16367 ;;		_MENU_task
 16368 ;; This function uses a non-reentrant model
 16369 ;;
 16370                           
 16371                           
 16372                           ;psect for function _BEAT_task
 16373  08D0                     _BEAT_task:	
 16374                           
 16375                           ;beat.c: 61:     if (TM1650_isEnabled())
 16376                           
 16377                           ;incstack = 0
 16378                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 16379  08D0  319D  253B  3188   	fcall	_TM1650_isEnabled
 16380  08D3  3A00               	xorlw	0
 16381  08D4  1D03               	btfss	3,2
 16382  08D5  0008               	return
 16383                           
 16384                           ;beat.c: 64:     if (CLOCK_getTime() - lastRun < delay)
 16385  08D6  319D  257B  3188   	fcall	_CLOCK_getTime
 16386  08D9  0142               	movlb	2	; select bank2
 16387  08DA  083F               	movf	_lastRun^(0+256),w
 16388  08DB  0140               	movlb	0	; select bank0
 16389  08DC  0220               	subwf	?_CLOCK_getTime,w
 16390  08DD  00A8               	movwf	??_BEAT_task
 16391  08DE  0142               	movlb	2	; select bank2
 16392  08DF  0840               	movf	(_lastRun+1)^(0+256),w
 16393  08E0  0140               	movlb	0	; select bank0
 16394  08E1  3B21               	subwfb	?_CLOCK_getTime+1,w
 16395  08E2  00A9               	movwf	??_BEAT_task+1
 16396  08E3  0142               	movlb	2	; select bank2
 16397  08E4  0861               	movf	(_delay+1)^(0+256),w
 16398  08E5  0140               	movlb	0	; select bank0
 16399  08E6  0229               	subwf	??_BEAT_task+1,w
 16400  08E7  1D03               	skipz
 16401  08E8  28ED               	goto	u6475
 16402  08E9  0142               	movlb	2	; select bank2
 16403  08EA  0860               	movf	_delay^(0+256),w
 16404  08EB  0140               	movlb	0	; select bank0
 16405  08EC  0228               	subwf	??_BEAT_task,w
 16406  08ED                     u6475:	
 16407  08ED  1C03               	btfss	3,0
 16408  08EE  0008               	return
 16409                           
 16410                           ;beat.c: 67:     lastRun = CLOCK_getTime();
 16411  08EF  319D  257B  3188   	fcall	_CLOCK_getTime
 16412  08F2  0140               	movlb	0	; select bank0
 16413  08F3  0821               	movf	?_CLOCK_getTime+1,w
 16414  08F4  0142               	movlb	2	; select bank2
 16415  08F5  00C0               	movwf	(_lastRun+1)^(0+256)
 16416  08F6  0140               	movlb	0	; select bank0
 16417  08F7  0820               	movf	?_CLOCK_getTime,w
 16418  08F8  0142               	movlb	2	; select bank2
 16419  08F9  00BF               	movwf	_lastRun^(0+256)
 16420                           
 16421                           ;beat.c: 69:     if (thresholdExceeded == 1) {
 16422  08FA  0141               	movlb	1	; select bank1
 16423  08FB  0369               	decf	_thresholdExceeded^(0+128),w
 16424  08FC  1D03               	btfss	3,2
 16425  08FD  2904               	goto	l6093
 16426                           
 16427                           ;beat.c: 73:         thresholdCount++;
 16428  08FE  3001               	movlw	1
 16429  08FF  0142               	movlb	2	; select bank2
 16430  0900  07BD               	addwf	_thresholdCount^(0+256),f
 16431  0901  3000               	movlw	0
 16432  0902  3DBE               	addwfc	(_thresholdCount+1)^(0+256),f
 16433                           
 16434                           ;beat.c: 74:     } else {
 16435  0903  290B               	goto	l6097
 16436  0904                     l6093:	
 16437                           
 16438                           ;beat.c: 76:         thresholdCount = 0;
 16439  0904  0142               	movlb	2	; select bank2
 16440  0905  01BD               	clrf	_thresholdCount^(0+256)
 16441  0906  01BE               	clrf	(_thresholdCount+1)^(0+256)
 16442                           
 16443                           ;beat.c: 77:         delay = 20;
 16444  0907  3014               	movlw	20
 16445  0908  00E0               	movwf	_delay^(0+256)
 16446  0909  3000               	movlw	0
 16447  090A  00E1               	movwf	(_delay^(0+256)+1)
 16448  090B                     l6097:	
 16449                           
 16450                           ;beat.c: 83:     if (thresholdExceeded == 1 && lastDetected == 0) {
 16451  090B  0141               	movlb	1	; select bank1
 16452  090C  0369               	decf	_thresholdExceeded^(0+128),w
 16453  090D  1D03               	btfss	3,2
 16454  090E  2952               	goto	l6115
 16455  090F  0142               	movlb	2	; select bank2
 16456  0910  084F               	movf	_lastDetected^(0+256),w
 16457  0911  1D03               	btfss	3,2
 16458  0912  2952               	goto	l6115
 16459                           
 16460                           ;beat.c: 85:         detected = 1;
 16461  0913  01D0               	clrf	_detected^(0+256)
 16462  0914  0AD0               	incf	_detected^(0+256),f
 16463                           
 16464                           ;beat.c: 88:         delay = 100;
 16465  0915  3064               	movlw	100
 16466  0916  00E0               	movwf	_delay^(0+256)
 16467  0917  3000               	movlw	0
 16468  0918  00E1               	movwf	(_delay^(0+256)+1)
 16469                           
 16470                           ;beat.c: 91:         time_t offset = CLOCK_getTime() - lastBeat;
 16471  0919  319D  257B  3188   	fcall	_CLOCK_getTime
 16472  091C  0142               	movlb	2	; select bank2
 16473  091D  0843               	movf	_lastBeat^(0+256),w
 16474  091E  0140               	movlb	0	; select bank0
 16475  091F  0220               	subwf	?_CLOCK_getTime,w
 16476  0920  00AA               	movwf	BEAT_task@offset
 16477  0921  0142               	movlb	2	; select bank2
 16478  0922  0844               	movf	(_lastBeat+1)^(0+256),w
 16479  0923  0140               	movlb	0	; select bank0
 16480  0924  3B21               	subwfb	?_CLOCK_getTime+1,w
 16481  0925  00AB               	movwf	BEAT_task@offset+1
 16482                           
 16483                           ;beat.c: 93:         lastBeat = CLOCK_getTime();
 16484  0926  319D  257B  3188   	fcall	_CLOCK_getTime
 16485  0929  0140               	movlb	0	; select bank0
 16486  092A  0821               	movf	?_CLOCK_getTime+1,w
 16487  092B  0142               	movlb	2	; select bank2
 16488  092C  00C4               	movwf	(_lastBeat+1)^(0+256)
 16489  092D  0140               	movlb	0	; select bank0
 16490  092E  0820               	movf	?_CLOCK_getTime,w
 16491  092F  0142               	movlb	2	; select bank2
 16492  0930  00C3               	movwf	_lastBeat^(0+256)
 16493                           
 16494                           ;beat.c: 95:         if (offset < 150)
 16495  0931  3000               	movlw	0
 16496  0932  0140               	movlb	0	; select bank0
 16497  0933  022B               	subwf	BEAT_task@offset+1,w
 16498  0934  3096               	movlw	150
 16499  0935  1903               	skipnz
 16500  0936  022A               	subwf	BEAT_task@offset,w
 16501  0937  1803               	skipnc
 16502  0938  293F               	goto	l6113
 16503                           
 16504                           ;beat.c: 96:             bpm = 400;
 16505  0939  3090               	movlw	144
 16506  093A  0142               	movlb	2	; select bank2
 16507  093B  00C1               	movwf	_bpm^(0+256)
 16508  093C  3001               	movlw	1
 16509  093D  00C2               	movwf	(_bpm^(0+256)+1)
 16510  093E  2952               	goto	l6115
 16511  093F                     l6113:	
 16512                           
 16513                           ;beat.c: 98:             bpm = 60 * 1000 / offset;
 16514  093F  082B               	movf	BEAT_task@offset+1,w
 16515  0940  00A1               	movwf	___lwdiv@divisor+1
 16516  0941  082A               	movf	BEAT_task@offset,w
 16517  0942  00A0               	movwf	___lwdiv@divisor
 16518  0943  3060               	movlw	96
 16519  0944  00A2               	movwf	___lwdiv@dividend
 16520  0945  30EA               	movlw	234
 16521  0946  00A3               	movwf	___lwdiv@dividend+1
 16522  0947  3190  20DF  3188   	fcall	___lwdiv
 16523  094A  0140               	movlb	0	; select bank0
 16524  094B  0821               	movf	?___lwdiv+1,w
 16525  094C  0142               	movlb	2	; select bank2
 16526  094D  00C2               	movwf	(_bpm+1)^(0+256)
 16527  094E  0140               	movlb	0	; select bank0
 16528  094F  0820               	movf	?___lwdiv,w
 16529  0950  0142               	movlb	2	; select bank2
 16530  0951  00C1               	movwf	_bpm^(0+256)
 16531  0952                     l6115:	
 16532                           
 16533                           ;beat.c: 104:     lastDetected = thresholdExceeded;
 16534  0952  0141               	movlb	1	; select bank1
 16535  0953  0869               	movf	_thresholdExceeded^(0+128),w
 16536  0954  0140               	movlb	0	; select bank0
 16537  0955  00A8               	movwf	??_BEAT_task
 16538  0956  0828               	movf	??_BEAT_task,w
 16539  0957  0142               	movlb	2	; select bank2
 16540  0958  00CF               	movwf	_lastDetected^(0+256)
 16541                           
 16542                           ;beat.c: 105:     thresholdExceeded = 0;
 16543  0959  0141               	movlb	1	; select bank1
 16544  095A  01E9               	clrf	_thresholdExceeded^(0+128)
 16545                           
 16546                           ;beat.c: 107:     if (thresholdCount > 3) {
 16547  095B  0142               	movlb	2	; select bank2
 16548  095C  083E               	movf	(_thresholdCount+1)^(0+256),w
 16549  095D  3A80               	xorlw	128
 16550  095E  0140               	movlb	0	; select bank0
 16551  095F  00A8               	movwf	??_BEAT_task
 16552  0960  3080               	movlw	128
 16553  0961  0228               	subwf	??_BEAT_task,w
 16554  0962  1D03               	skipz
 16555  0963  2967               	goto	u6525
 16556  0964  3004               	movlw	4
 16557  0965  0142               	movlb	2	; select bank2
 16558  0966  023D               	subwf	_thresholdCount^(0+256),w
 16559  0967                     u6525:	
 16560  0967  1C03               	skipc
 16561  0968  2986               	goto	l6129
 16562                           
 16563                           ;beat.c: 108:         threshold += 1;
 16564  0969  3001               	movlw	1
 16565  096A  0142               	movlb	2	; select bank2
 16566  096B  07E2               	addwf	_threshold^(0+256),f
 16567  096C  3000               	movlw	0
 16568  096D  3DE3               	addwfc	(_threshold+1)^(0+256),f
 16569                           
 16570                           ;beat.c: 109:         ADCC_SetUpperThreshold(threshold);
 16571  096E  0863               	movf	(_threshold+1)^(0+256),w
 16572  096F  0140               	movlb	0	; select bank0
 16573  0970  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16574  0971  0142               	movlb	2	; select bank2
 16575  0972  0862               	movf	_threshold^(0+256),w
 16576  0973  0140               	movlb	0	; select bank0
 16577  0974  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16578  0975  319D  2569  3188   	fcall	_ADCC_SetUpperThreshold
 16579                           
 16580                           ;beat.c: 110:         thresholdCount = 0;
 16581  0978  0142               	movlb	2	; select bank2
 16582  0979  01BD               	clrf	_thresholdCount^(0+256)
 16583  097A  01BE               	clrf	(_thresholdCount+1)^(0+256)
 16584                           
 16585                           ;beat.c: 113:         lastBeat = CLOCK_getTime();
 16586  097B  319D  257B         	fcall	_CLOCK_getTime
 16587  097D  0140               	movlb	0	; select bank0
 16588  097E  0821               	movf	?_CLOCK_getTime+1,w
 16589  097F  0142               	movlb	2	; select bank2
 16590  0980  00C4               	movwf	(_lastBeat+1)^(0+256)
 16591  0981  0140               	movlb	0	; select bank0
 16592  0982  0820               	movf	?_CLOCK_getTime,w
 16593  0983  0142               	movlb	2	; select bank2
 16594  0984  00C3               	movwf	_lastBeat^(0+256)
 16595                           
 16596                           ;beat.c: 114:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 16597  0985  0008               	return
 16598  0986                     l6129:	
 16599  0986  319D  257B  3188   	fcall	_CLOCK_getTime
 16600  0989  0142               	movlb	2	; select bank2
 16601  098A  0843               	movf	_lastBeat^(0+256),w
 16602  098B  0140               	movlb	0	; select bank0
 16603  098C  0220               	subwf	?_CLOCK_getTime,w
 16604  098D  00A8               	movwf	??_BEAT_task
 16605  098E  0142               	movlb	2	; select bank2
 16606  098F  0844               	movf	(_lastBeat+1)^(0+256),w
 16607  0990  0140               	movlb	0	; select bank0
 16608  0991  3B21               	subwfb	?_CLOCK_getTime+1,w
 16609  0992  00A9               	movwf	??_BEAT_task+1
 16610  0993  3003               	movlw	3
 16611  0994  0229               	subwf	??_BEAT_task+1,w
 16612  0995  30E9               	movlw	233
 16613  0996  1903               	skipnz
 16614  0997  0228               	subwf	??_BEAT_task,w
 16615  0998  1C03               	skipc
 16616  0999  0008               	return
 16617                           
 16618                           ;beat.c: 115:         threshold -= 1;
 16619  099A  3001               	movlw	1
 16620  099B  0142               	movlb	2	; select bank2
 16621  099C  02E2               	subwf	_threshold^(0+256),f
 16622  099D  3000               	movlw	0
 16623  099E  3BE3               	subwfb	(_threshold+1)^(0+256),f
 16624                           
 16625                           ;beat.c: 116:         ADCC_SetUpperThreshold(threshold);
 16626  099F  0863               	movf	(_threshold+1)^(0+256),w
 16627  09A0  0140               	movlb	0	; select bank0
 16628  09A1  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16629  09A2  0142               	movlb	2	; select bank2
 16630  09A3  0862               	movf	_threshold^(0+256),w
 16631  09A4  0140               	movlb	0	; select bank0
 16632  09A5  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16633  09A6  319D  2569         	fcall	_ADCC_SetUpperThreshold
 16634  09A8  0008               	return
 16635  09A9                     __end_of_BEAT_task:	
 16636                           
 16637                           	psect	text53
 16638  10DF                     __ptext53:	
 16639 ;; *************** function ___lwdiv *****************
 16640 ;; Defined at:
 16641 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 16642 ;; Parameters:    Size  Location     Type
 16643 ;;  divisor         2    0[BANK0 ] unsigned int 
 16644 ;;  dividend        2    2[BANK0 ] unsigned int 
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;  quotient        2    6[BANK0 ] unsigned int 
 16647 ;;  counter         1    5[BANK0 ] unsigned char 
 16648 ;; Return value:  Size  Location     Type
 16649 ;;                  2    0[BANK0 ] unsigned int 
 16650 ;; Registers used:
 16651 ;;		wreg, status,2, status,0
 16652 ;; Tracked objects:
 16653 ;;		On entry : 0/0
 16654 ;;		On exit  : 0/0
 16655 ;;		Unchanged: 0/0
 16656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16657 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16658 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16659 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16660 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16661 ;;Total ram usage:        8 bytes
 16662 ;; Hardware stack levels used:    1
 16663 ;; Hardware stack levels required when called:    4
 16664 ;; This function calls:
 16665 ;;		Nothing
 16666 ;; This function is called by:
 16667 ;;		_TM1650_fastPrintNum
 16668 ;;		_BEAT_task
 16669 ;; This function uses a non-reentrant model
 16670 ;;
 16671                           
 16672                           
 16673                           ;psect for function ___lwdiv
 16674  10DF                     ___lwdiv:	
 16675                           
 16676                           ;incstack = 0
 16677                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16678  10DF  0140               	movlb	0	; select bank0
 16679  10E0  01A6               	clrf	___lwdiv@quotient
 16680  10E1  01A7               	clrf	___lwdiv@quotient+1
 16681  10E2  0820               	movf	___lwdiv@divisor,w
 16682  10E3  0421               	iorwf	___lwdiv@divisor+1,w
 16683  10E4  1903               	btfsc	3,2
 16684  10E5  290F               	goto	l5449
 16685  10E6  01A5               	clrf	___lwdiv@counter
 16686  10E7  0AA5               	incf	___lwdiv@counter,f
 16687  10E8                     l5437:	
 16688  10E8  1BA1               	btfsc	___lwdiv@divisor+1,7
 16689  10E9  28F4               	goto	l5439
 16690  10EA  3001               	movlw	1
 16691  10EB                     u5655:	
 16692  10EB  35A0               	lslf	___lwdiv@divisor,f
 16693  10EC  0DA1               	rlf	___lwdiv@divisor+1,f
 16694  10ED  0B89               	decfsz	9,f
 16695  10EE  28EB               	goto	u5655
 16696  10EF  3001               	movlw	1
 16697  10F0  00A4               	movwf	??___lwdiv
 16698  10F1  0824               	movf	??___lwdiv,w
 16699  10F2  07A5               	addwf	___lwdiv@counter,f
 16700  10F3  28E8               	goto	l5437
 16701  10F4                     l5439:	
 16702  10F4  3001               	movlw	1
 16703  10F5                     u5675:	
 16704  10F5  35A6               	lslf	___lwdiv@quotient,f
 16705  10F6  0DA7               	rlf	___lwdiv@quotient+1,f
 16706  10F7  0B89               	decfsz	9,f
 16707  10F8  28F5               	goto	u5675
 16708  10F9  0821               	movf	___lwdiv@divisor+1,w
 16709  10FA  0223               	subwf	___lwdiv@dividend+1,w
 16710  10FB  1D03               	skipz
 16711  10FC  28FF               	goto	u5685
 16712  10FD  0820               	movf	___lwdiv@divisor,w
 16713  10FE  0222               	subwf	___lwdiv@dividend,w
 16714  10FF                     u5685:	
 16715  10FF  1C03               	skipc
 16716  1100  2906               	goto	l5445
 16717  1101  0820               	movf	___lwdiv@divisor,w
 16718  1102  02A2               	subwf	___lwdiv@dividend,f
 16719  1103  0821               	movf	___lwdiv@divisor+1,w
 16720  1104  3BA3               	subwfb	___lwdiv@dividend+1,f
 16721  1105  1426               	bsf	___lwdiv@quotient,0
 16722  1106                     l5445:	
 16723  1106  3001               	movlw	1
 16724  1107                     u5695:	
 16725  1107  36A1               	lsrf	___lwdiv@divisor+1,f
 16726  1108  0CA0               	rrf	___lwdiv@divisor,f
 16727  1109  0B89               	decfsz	9,f
 16728  110A  2907               	goto	u5695
 16729  110B  3001               	movlw	1
 16730  110C  02A5               	subwf	___lwdiv@counter,f
 16731  110D  1D03               	btfss	3,2
 16732  110E  28F4               	goto	l5439
 16733  110F                     l5449:	
 16734  110F  0827               	movf	___lwdiv@quotient+1,w
 16735  1110  00A1               	movwf	?___lwdiv+1
 16736  1111  0826               	movf	___lwdiv@quotient,w
 16737  1112  00A0               	movwf	?___lwdiv
 16738  1113  0008               	return
 16739  1114                     __end_of___lwdiv:	
 16740                           
 16741                           	psect	text54
 16742  1D3B                     __ptext54:	
 16743 ;; *************** function _TM1650_isEnabled *****************
 16744 ;; Defined at:
 16745 ;;		line 70 in file "tm1650.c"
 16746 ;; Parameters:    Size  Location     Type
 16747 ;;		None
 16748 ;; Auto vars:     Size  Location     Type
 16749 ;;		None
 16750 ;; Return value:  Size  Location     Type
 16751 ;;                  1    wreg      _Bool 
 16752 ;; Registers used:
 16753 ;;		wreg
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16763 ;;Total ram usage:        0 bytes
 16764 ;; Hardware stack levels used:    1
 16765 ;; Hardware stack levels required when called:    4
 16766 ;; This function calls:
 16767 ;;		Nothing
 16768 ;; This function is called by:
 16769 ;;		_BEAT_task
 16770 ;; This function uses a non-reentrant model
 16771 ;;
 16772                           
 16773                           
 16774                           ;psect for function _TM1650_isEnabled
 16775  1D3B                     _TM1650_isEnabled:	
 16776                           
 16777                           ;tm1650.c: 71:     return isOn;
 16778                           
 16779                           ;incstack = 0
 16780                           ; Regs used in _TM1650_isEnabled: [wreg]
 16781  1D3B  0142               	movlb	2	; select bank2
 16782  1D3C  0855               	movf	_isOn^(0+256),w
 16783  1D3D  0008               	return
 16784  1D3E                     __end_of_TM1650_isEnabled:	
 16785                           
 16786                           	psect	text55
 16787  11E9                     __ptext55:	
 16788 ;; *************** function _DMX_task *****************
 16789 ;; Defined at:
 16790 ;;		line 38 in file "dmx.c"
 16791 ;; Parameters:    Size  Location     Type
 16792 ;;		None
 16793 ;; Auto vars:     Size  Location     Type
 16794 ;;  time            2    4[BANK0 ] unsigned short 
 16795 ;; Return value:  Size  Location     Type
 16796 ;;                  1    wreg      void 
 16797 ;; Registers used:
 16798 ;;		wreg, status,2, status,0, pclath, cstack
 16799 ;; Tracked objects:
 16800 ;;		On entry : 0/0
 16801 ;;		On exit  : 0/0
 16802 ;;		Unchanged: 0/0
 16803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16805 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16806 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16807 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16808 ;;Total ram usage:        4 bytes
 16809 ;; Hardware stack levels used:    1
 16810 ;; Hardware stack levels required when called:    5
 16811 ;; This function calls:
 16812 ;;		_CLOCK_getTime
 16813 ;; This function is called by:
 16814 ;;		_main
 16815 ;; This function uses a non-reentrant model
 16816 ;;
 16817                           
 16818                           
 16819                           ;psect for function _DMX_task
 16820  11E9                     _DMX_task:	
 16821                           
 16822                           ;dmx.c: 39:     time_t time = CLOCK_getTime();
 16823                           
 16824                           ;incstack = 0
 16825                           ; Regs used in _DMX_task: [wreg+status,2+status,0+pclath+cstack]
 16826  11E9  319D  257B  3191   	fcall	_CLOCK_getTime
 16827  11EC  0140               	movlb	0	; select bank0
 16828  11ED  0821               	movf	?_CLOCK_getTime+1,w
 16829  11EE  00A5               	movwf	DMX_task@time+1
 16830  11EF  0820               	movf	?_CLOCK_getTime,w
 16831  11F0  00A4               	movwf	DMX_task@time
 16832                           
 16833                           ;dmx.c: 40:     if (time - lastTime < 1000)
 16834  11F1  0142               	movlb	2	; select bank2
 16835  11F2  0839               	movf	dmx@lastTime^(0+256),w
 16836  11F3  0140               	movlb	0	; select bank0
 16837  11F4  0224               	subwf	DMX_task@time,w
 16838  11F5  00A2               	movwf	??_DMX_task
 16839  11F6  0142               	movlb	2	; select bank2
 16840  11F7  083A               	movf	(dmx@lastTime+1)^(0+256),w
 16841  11F8  0140               	movlb	0	; select bank0
 16842  11F9  3B25               	subwfb	DMX_task@time+1,w
 16843  11FA  00A3               	movwf	??_DMX_task+1
 16844  11FB  3003               	movlw	3
 16845  11FC  0223               	subwf	??_DMX_task+1,w
 16846  11FD  30E8               	movlw	232
 16847  11FE  1903               	skipnz
 16848  11FF  0222               	subwf	??_DMX_task,w
 16849  1200  1C03               	btfss	3,0
 16850  1201  0008               	return
 16851                           
 16852                           ;dmx.c: 42:     lastTime = time;
 16853  1202  0825               	movf	DMX_task@time+1,w
 16854  1203  0142               	movlb	2	; select bank2
 16855  1204  00BA               	movwf	(dmx@lastTime+1)^(0+256)
 16856  1205  0140               	movlb	0	; select bank0
 16857  1206  0824               	movf	DMX_task@time,w
 16858  1207  0142               	movlb	2	; select bank2
 16859  1208  00B9               	movwf	dmx@lastTime^(0+256)
 16860                           
 16861                           ;dmx.c: 44:     if(offCheck && !toggleCheck) {
 16862  1209  084E               	movf	_offCheck^(0+256),w
 16863  120A  1903               	btfsc	3,2
 16864  120B  2A13               	goto	l6329
 16865  120C  084C               	movf	_toggleCheck^(0+256),w
 16866  120D  1D03               	btfss	3,2
 16867  120E  2A13               	goto	l6329
 16868                           
 16869                           ;dmx.c: 46:         toggleCheck = 1;
 16870  120F  01CC               	clrf	_toggleCheck^(0+256)
 16871  1210  0ACC               	incf	_toggleCheck^(0+256),f
 16872                           
 16873                           ;dmx.c: 47:         offCheck = 0;
 16874  1211  01CE               	clrf	_offCheck^(0+256)
 16875  1212  0008               	return
 16876  1213                     l6329:	
 16877                           
 16878                           ;dmx.c: 51:     if (offCheck && toggleCheck) {
 16879  1213  084E               	movf	_offCheck^(0+256),w
 16880  1214  1903               	btfsc	3,2
 16881  1215  2A1E               	goto	l6337
 16882  1216  084C               	movf	_toggleCheck^(0+256),w
 16883  1217  1903               	btfsc	3,2
 16884  1218  2A1E               	goto	l6337
 16885                           
 16886                           ;dmx.c: 52:         dmxOn = 1;
 16887  1219  01CD               	clrf	_dmxOn^(0+256)
 16888  121A  0ACD               	incf	_dmxOn^(0+256),f
 16889                           
 16890                           ;dmx.c: 53:         toggleCheck = 0;
 16891  121B  01CC               	clrf	_toggleCheck^(0+256)
 16892                           
 16893                           ;dmx.c: 54:         offCheck = 0;
 16894  121C  01CE               	clrf	_offCheck^(0+256)
 16895                           
 16896                           ;dmx.c: 55:     } else {
 16897  121D  0008               	return
 16898  121E                     l6337:	
 16899                           
 16900                           ;dmx.c: 56:         dmxOn = 0;
 16901  121E  01CD               	clrf	_dmxOn^(0+256)
 16902  121F  0008               	return
 16903  1220                     __end_of_DMX_task:	
 16904                           
 16905                           	psect	text56
 16906  1D58                     __ptext56:	
 16907 ;; *************** function _CLOCK_init *****************
 16908 ;; Defined at:
 16909 ;;		line 9 in file "clock.c"
 16910 ;; Parameters:    Size  Location     Type
 16911 ;;		None
 16912 ;; Auto vars:     Size  Location     Type
 16913 ;;		None
 16914 ;; Return value:  Size  Location     Type
 16915 ;;                  1    wreg      void 
 16916 ;; Registers used:
 16917 ;;		wreg, status,2, status,0, pclath, cstack
 16918 ;; Tracked objects:
 16919 ;;		On entry : 0/0
 16920 ;;		On exit  : 0/0
 16921 ;;		Unchanged: 0/0
 16922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16927 ;;Total ram usage:        0 bytes
 16928 ;; Hardware stack levels used:    1
 16929 ;; Hardware stack levels required when called:    5
 16930 ;; This function calls:
 16931 ;;		_TMR0_SetInterruptHandler
 16932 ;; This function is called by:
 16933 ;;		_main
 16934 ;; This function uses a non-reentrant model
 16935 ;;
 16936                           
 16937                           
 16938                           ;psect for function _CLOCK_init
 16939  1D58                     _CLOCK_init:	
 16940                           
 16941                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 16942                           
 16943                           ;incstack = 0
 16944                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 16945  1D58  3052               	movlw	low _CLOCK_timerCallback
 16946  1D59  0140               	movlb	0	; select bank0
 16947  1D5A  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16948  1D5B  301D               	movlw	high _CLOCK_timerCallback
 16949  1D5C  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16950  1D5D  319D  2584         	fcall	_TMR0_SetInterruptHandler
 16951  1D5F  0008               	return
 16952  1D60                     __end_of_CLOCK_init:	
 16953                           
 16954                           	psect	text57
 16955  1D84                     __ptext57:	
 16956 ;; *************** function _TMR0_SetInterruptHandler *****************
 16957 ;; Defined at:
 16958 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16961 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 16962 ;; Auto vars:     Size  Location     Type
 16963 ;;		None
 16964 ;; Return value:  Size  Location     Type
 16965 ;;                  1    wreg      void 
 16966 ;; Registers used:
 16967 ;;		wreg
 16968 ;; Tracked objects:
 16969 ;;		On entry : 0/0
 16970 ;;		On exit  : 0/0
 16971 ;;		Unchanged: 0/0
 16972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16976 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16977 ;;Total ram usage:        2 bytes
 16978 ;; Hardware stack levels used:    1
 16979 ;; Hardware stack levels required when called:    4
 16980 ;; This function calls:
 16981 ;;		Nothing
 16982 ;; This function is called by:
 16983 ;;		_TMR0_Initialize
 16984 ;;		_CLOCK_init
 16985 ;; This function uses a non-reentrant model
 16986 ;;
 16987                           
 16988                           
 16989                           ;psect for function _TMR0_SetInterruptHandler
 16990  1D84                     _TMR0_SetInterruptHandler:	
 16991                           
 16992                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16993                           
 16994                           ;incstack = 0
 16995                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16996  1D84  0140               	movlb	0	; select bank0
 16997  1D85  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16998  1D86  0142               	movlb	2	; select bank2
 16999  1D87  00EC               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 17000  1D88  0140               	movlb	0	; select bank0
 17001  1D89  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 17002  1D8A  0142               	movlb	2	; select bank2
 17003  1D8B  00EB               	movwf	_TMR0_InterruptHandler^(0+256)
 17004  1D8C  0008               	return
 17005  1D8D                     __end_of_TMR0_SetInterruptHandler:	
 17006                           
 17007                           	psect	text58
 17008  172E                     __ptext58:	
 17009 ;; *************** function _BUTTONS_task *****************
 17010 ;; Defined at:
 17011 ;;		line 37 in file "buttons.c"
 17012 ;; Parameters:    Size  Location     Type
 17013 ;;		None
 17014 ;; Auto vars:     Size  Location     Type
 17015 ;;  btn             1    8[BANK0 ] PTR struct .
 17016 ;;		 -> buttons(32), 
 17017 ;;  i               1    5[BANK0 ] unsigned char 
 17018 ;;  time            2    6[BANK0 ] unsigned short 
 17019 ;; Return value:  Size  Location     Type
 17020 ;;                  1    wreg      void 
 17021 ;; Registers used:
 17022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17023 ;; Tracked objects:
 17024 ;;		On entry : 0/0
 17025 ;;		On exit  : 0/0
 17026 ;;		Unchanged: 0/0
 17027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17029 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17030 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17031 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17032 ;;Total ram usage:        7 bytes
 17033 ;; Hardware stack levels used:    1
 17034 ;; Hardware stack levels required when called:    5
 17035 ;; This function calls:
 17036 ;;		_CLOCK_getTime
 17037 ;; This function is called by:
 17038 ;;		_main
 17039 ;; This function uses a non-reentrant model
 17040 ;;
 17041                           
 17042                           
 17043                           ;psect for function _BUTTONS_task
 17044  172E                     _BUTTONS_task:	
 17045                           
 17046                           ;buttons.c: 38:     time_t time = CLOCK_getTime();
 17047                           
 17048                           ;incstack = 0
 17049                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17050  172E  319D  257B  3197   	fcall	_CLOCK_getTime
 17051  1731  0140               	movlb	0	; select bank0
 17052  1732  0821               	movf	?_CLOCK_getTime+1,w
 17053  1733  00A7               	movwf	BUTTONS_task@time+1
 17054  1734  0820               	movf	?_CLOCK_getTime,w
 17055  1735  00A6               	movwf	BUTTONS_task@time
 17056                           
 17057                           ;buttons.c: 41:     if (time - lastTime < 50)
 17058  1736  0142               	movlb	2	; select bank2
 17059  1737  0845               	movf	_lastTime^(0+256),w
 17060  1738  0140               	movlb	0	; select bank0
 17061  1739  0226               	subwf	BUTTONS_task@time,w
 17062  173A  00A2               	movwf	??_BUTTONS_task
 17063  173B  0142               	movlb	2	; select bank2
 17064  173C  0846               	movf	(_lastTime+1)^(0+256),w
 17065  173D  0140               	movlb	0	; select bank0
 17066  173E  3B27               	subwfb	BUTTONS_task@time+1,w
 17067  173F  00A3               	movwf	??_BUTTONS_task+1
 17068  1740  3000               	movlw	0
 17069  1741  0223               	subwf	??_BUTTONS_task+1,w
 17070  1742  3032               	movlw	50
 17071  1743  1903               	skipnz
 17072  1744  0222               	subwf	??_BUTTONS_task,w
 17073  1745  1C03               	btfss	3,0
 17074  1746  0008               	return
 17075                           
 17076                           ;buttons.c: 44:     lastTime = time;
 17077  1747  0827               	movf	BUTTONS_task@time+1,w
 17078  1748  0142               	movlb	2	; select bank2
 17079  1749  00C6               	movwf	(_lastTime+1)^(0+256)
 17080  174A  0140               	movlb	0	; select bank0
 17081  174B  0826               	movf	BUTTONS_task@time,w
 17082  174C  0142               	movlb	2	; select bank2
 17083  174D  00C5               	movwf	_lastTime^(0+256)
 17084                           
 17085                           ;buttons.c: 47:     for (uint8_t i = 0; i < 4; i++) {
 17086  174E  0140               	movlb	0	; select bank0
 17087  174F  01A5               	clrf	BUTTONS_task@i
 17088  1750                     l6353:	
 17089                           
 17090                           ;buttons.c: 48:         button_t* btn = buttons + i;
 17091  1750  0825               	movf	BUTTONS_task@i,w
 17092  1751  00A2               	movwf	??_BUTTONS_task
 17093  1752  3002               	movlw	2
 17094  1753                     u6785:	
 17095  1753  35A2               	lslf	??_BUTTONS_task,f
 17096  1754  3EFF               	addlw	-1
 17097  1755  1D03               	skipz
 17098  1756  2F53               	goto	u6785
 17099  1757  3522               	lslf	??_BUTTONS_task,w
 17100  1758  3E20               	addlw	(low (_buttons| (0+512)))& (0+255)
 17101  1759  00A3               	movwf	??_BUTTONS_task+1
 17102  175A  0823               	movf	??_BUTTONS_task+1,w
 17103  175B  00A8               	movwf	BUTTONS_task@btn
 17104                           
 17105                           ;buttons.c: 51:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 17106  175C  0828               	movf	BUTTONS_task@btn,w
 17107  175D  0086               	movwf	6
 17108  175E  3002               	movlw	2	; select bank4/5
 17109  175F  0087               	movwf	7
 17110  1760  3F40               	moviw [0]fsr1
 17111  1761  00A2               	movwf	??_BUTTONS_task
 17112  1762  3F41               	moviw [1]fsr1
 17113  1763  00A3               	movwf	??_BUTTONS_task+1
 17114  1764  0822               	movf	??_BUTTONS_task,w
 17115  1765  0086               	movwf	6
 17116  1766  0823               	movf	??_BUTTONS_task+1,w
 17117  1767  0087               	movwf	7
 17118  1768  3001               	movlw	1
 17119  1769  00A4               	movwf	??_BUTTONS_task+2
 17120  176A  0828               	movf	BUTTONS_task@btn,w
 17121  176B  3E02               	addlw	2
 17122  176C  0084               	movwf	4
 17123  176D  3002               	movlw	2	; select bank4/5
 17124  176E  0085               	movwf	5
 17125  176F  0A00               	incf	0,w
 17126  1770  2F72               	goto	u6794
 17127  1771                     u6795:	
 17128  1771  35A4               	lslf	??_BUTTONS_task+2,f
 17129  1772                     u6794:	
 17130  1772  0B89               	decfsz	9,f
 17131  1773  2F71               	goto	u6795
 17132  1774  0824               	movf	??_BUTTONS_task+2,w
 17133  1775  0501               	andwf	1,w
 17134  1776  1D03               	btfss	3,2
 17135  1777  2F80               	goto	l6359
 17136                           
 17137                           ;buttons.c: 52:             btn->state = STATE_PRESSED;
 17138  1778  0828               	movf	BUTTONS_task@btn,w
 17139  1779  3E03               	addlw	3
 17140  177A  0086               	movwf	6
 17141  177B  3002               	movlw	2	; select bank4/5
 17142  177C  0087               	movwf	7
 17143  177D  0181               	clrf	1
 17144  177E  0A81               	incf	1,f
 17145                           
 17146                           ;buttons.c: 53:         } else {
 17147  177F  2F86               	goto	l802
 17148  1780                     l6359:	
 17149                           
 17150                           ;buttons.c: 54:             btn->state = STATE_UNPRESSED;
 17151  1780  0828               	movf	BUTTONS_task@btn,w
 17152  1781  3E03               	addlw	3
 17153  1782  0086               	movwf	6
 17154  1783  3002               	movlw	2	; select bank4/5
 17155  1784  0087               	movwf	7
 17156  1785  0181               	clrf	1
 17157  1786                     l802:	
 17158                           ;buttons.c: 55:         }
 17159                           
 17160                           
 17161                           ;buttons.c: 57:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
 17162  1786  0828               	movf	BUTTONS_task@btn,w
 17163  1787  3E03               	addlw	3
 17164  1788  0086               	movwf	6
 17165  1789  3002               	movlw	2	; select bank4/5
 17166  178A  0087               	movwf	7
 17167  178B  0301               	decf	1,w
 17168  178C  1D03               	btfss	3,2
 17169  178D  2FA7               	goto	l6365
 17170  178E  0828               	movf	BUTTONS_task@btn,w
 17171  178F  3E04               	addlw	4
 17172  1790  0086               	movwf	6
 17173  1791  3002               	movlw	2	; select bank4/5
 17174  1792  0087               	movwf	7
 17175  1793  0801               	movf	1,w
 17176  1794  1D03               	btfss	3,2
 17177  1795  2FA7               	goto	l6365
 17178                           
 17179                           ;buttons.c: 59:             btn->event = EVENT_PRESSED;
 17180  1796  0828               	movf	BUTTONS_task@btn,w
 17181  1797  3E05               	addlw	5
 17182  1798  0086               	movwf	6
 17183  1799  3002               	movlw	2	; select bank4/5
 17184  179A  0087               	movwf	7
 17185  179B  0181               	clrf	1
 17186  179C  0A81               	incf	1,f
 17187                           
 17188                           ;buttons.c: 60:             btn->pressTime = time;
 17189  179D  0828               	movf	BUTTONS_task@btn,w
 17190  179E  3E06               	addlw	6
 17191  179F  0086               	movwf	6
 17192  17A0  3002               	movlw	2	; select bank4/5
 17193  17A1  0087               	movwf	7
 17194  17A2  0826               	movf	BUTTONS_task@time,w
 17195  17A3  3FC0               	movwi [0]fsr1
 17196  17A4  0827               	movf	BUTTONS_task@time+1,w
 17197  17A5  3FC1               	movwi [1]fsr1
 17198                           
 17199                           ;buttons.c: 61:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 17200  17A6  2FE9               	goto	l804
 17201  17A7                     l6365:	
 17202  17A7  0828               	movf	BUTTONS_task@btn,w
 17203  17A8  3E03               	addlw	3
 17204  17A9  0086               	movwf	6
 17205  17AA  3002               	movlw	2	; select bank4/5
 17206  17AB  0087               	movwf	7
 17207  17AC  0301               	decf	1,w
 17208  17AD  1D03               	btfss	3,2
 17209  17AE  2FD3               	goto	l6373
 17210  17AF  0828               	movf	BUTTONS_task@btn,w
 17211  17B0  3E04               	addlw	4
 17212  17B1  0086               	movwf	6
 17213  17B2  3002               	movlw	2	; select bank4/5
 17214  17B3  0087               	movwf	7
 17215  17B4  0301               	decf	1,w
 17216  17B5  1D03               	btfss	3,2
 17217  17B6  2FD3               	goto	l6373
 17218                           
 17219                           ;buttons.c: 63:             if(time - btn->pressTime > 500) {
 17220  17B7  0828               	movf	BUTTONS_task@btn,w
 17221  17B8  3E06               	addlw	6
 17222  17B9  0086               	movwf	6
 17223  17BA  3002               	movlw	2	; select bank4/5
 17224  17BB  0087               	movwf	7
 17225  17BC  3F40               	moviw [0]fsr1
 17226  17BD  0226               	subwf	BUTTONS_task@time,w
 17227  17BE  00A2               	movwf	??_BUTTONS_task
 17228  17BF  3F41               	moviw [1]fsr1
 17229  17C0  3B27               	subwfb	BUTTONS_task@time+1,w
 17230  17C1  00A3               	movwf	??_BUTTONS_task+1
 17231  17C2  3001               	movlw	1
 17232  17C3  0223               	subwf	??_BUTTONS_task+1,w
 17233  17C4  30F5               	movlw	245
 17234  17C5  1903               	skipnz
 17235  17C6  0222               	subwf	??_BUTTONS_task,w
 17236  17C7  1C03               	skipc
 17237  17C8  2FE9               	goto	l804
 17238                           
 17239                           ;buttons.c: 64:                 btn->event = EVENT_HELD;
 17240  17C9  3002               	movlw	2
 17241  17CA  00A2               	movwf	??_BUTTONS_task
 17242  17CB  0828               	movf	BUTTONS_task@btn,w
 17243  17CC  3E05               	addlw	5
 17244  17CD  0086               	movwf	6
 17245  17CE  3002               	movlw	2	; select bank4/5
 17246  17CF  0087               	movwf	7
 17247  17D0  0822               	movf	??_BUTTONS_task,w
 17248  17D1  0081               	movwf	1
 17249  17D2  2FE9               	goto	l804
 17250  17D3                     l6373:	
 17251  17D3  0828               	movf	BUTTONS_task@btn,w
 17252  17D4  3E03               	addlw	3
 17253  17D5  0086               	movwf	6
 17254  17D6  3002               	movlw	2	; select bank4/5
 17255  17D7  0087               	movwf	7
 17256  17D8  0801               	movf	1,w
 17257  17D9  1D03               	btfss	3,2
 17258  17DA  2FE9               	goto	l804
 17259  17DB  0828               	movf	BUTTONS_task@btn,w
 17260  17DC  3E04               	addlw	4
 17261  17DD  0086               	movwf	6
 17262  17DE  3002               	movlw	2	; select bank4/5
 17263  17DF  0087               	movwf	7
 17264  17E0  0301               	decf	1,w
 17265  17E1  1D03               	btfss	3,2
 17266  17E2  2FE9               	goto	l804
 17267                           
 17268                           ;buttons.c: 67:             btn->event = EVENT_IDLE;
 17269  17E3  0828               	movf	BUTTONS_task@btn,w
 17270  17E4  3E05               	addlw	5
 17271  17E5  0086               	movwf	6
 17272  17E6  3002               	movlw	2	; select bank4/5
 17273  17E7  0087               	movwf	7
 17274  17E8  0181               	clrf	1
 17275  17E9                     l804:	
 17276                           
 17277                           ;buttons.c: 70:         btn->lastState = btn->state;
 17278  17E9  0828               	movf	BUTTONS_task@btn,w
 17279  17EA  3E03               	addlw	3
 17280  17EB  0086               	movwf	6
 17281  17EC  3002               	movlw	2	; select bank4/5
 17282  17ED  0087               	movwf	7
 17283  17EE  0801               	movf	1,w
 17284  17EF  00A2               	movwf	??_BUTTONS_task
 17285  17F0  0828               	movf	BUTTONS_task@btn,w
 17286  17F1  3E04               	addlw	4
 17287  17F2  0086               	movwf	6
 17288  17F3  3002               	movlw	2	; select bank4/5
 17289  17F4  0087               	movwf	7
 17290  17F5  0822               	movf	??_BUTTONS_task,w
 17291  17F6  0081               	movwf	1
 17292                           
 17293                           ;buttons.c: 71:     }
 17294  17F7  3001               	movlw	1
 17295  17F8  00A2               	movwf	??_BUTTONS_task
 17296  17F9  0822               	movf	??_BUTTONS_task,w
 17297  17FA  07A5               	addwf	BUTTONS_task@i,f
 17298  17FB  3004               	movlw	4
 17299  17FC  0225               	subwf	BUTTONS_task@i,w
 17300  17FD  1803               	btfsc	3,0
 17301  17FE  0008               	return
 17302  17FF  2F50               	goto	l6353
 17303  1800                     __end_of_BUTTONS_task:	
 17304                           
 17305                           	psect	text59
 17306  1D7B                     __ptext59:	
 17307 ;; *************** function _CLOCK_getTime *****************
 17308 ;; Defined at:
 17309 ;;		line 17 in file "clock.c"
 17310 ;; Parameters:    Size  Location     Type
 17311 ;;		None
 17312 ;; Auto vars:     Size  Location     Type
 17313 ;;		None
 17314 ;; Return value:  Size  Location     Type
 17315 ;;                  2    0[BANK0 ] unsigned short 
 17316 ;; Registers used:
 17317 ;;		wreg
 17318 ;; Tracked objects:
 17319 ;;		On entry : 0/0
 17320 ;;		On exit  : 0/0
 17321 ;;		Unchanged: 0/0
 17322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17327 ;;Total ram usage:        2 bytes
 17328 ;; Hardware stack levels used:    1
 17329 ;; Hardware stack levels required when called:    4
 17330 ;; This function calls:
 17331 ;;		Nothing
 17332 ;; This function is called by:
 17333 ;;		_BUTTONS_task
 17334 ;;		_BEAT_task
 17335 ;;		_DMX_task
 17336 ;;		_fadeColor
 17337 ;;		_cycleColors
 17338 ;;		_numControl_Set
 17339 ;;		_numControl_resetTimer
 17340 ;; This function uses a non-reentrant model
 17341 ;;
 17342                           
 17343                           
 17344                           ;psect for function _CLOCK_getTime
 17345  1D7B                     _CLOCK_getTime:	
 17346                           
 17347                           ;clock.c: 18:     return currentTime;
 17348                           
 17349                           ;incstack = 0
 17350                           ; Regs used in _CLOCK_getTime: [wreg]
 17351  1D7B  0142               	movlb	2	; select bank2
 17352  1D7C  084A               	movf	(_currentTime+1)^(0+256),w
 17353  1D7D  0140               	movlb	0	; select bank0
 17354  1D7E  00A1               	movwf	?_CLOCK_getTime+1
 17355  1D7F  0142               	movlb	2	; select bank2
 17356  1D80  0849               	movf	_currentTime^(0+256),w
 17357  1D81  0140               	movlb	0	; select bank0
 17358  1D82  00A0               	movwf	?_CLOCK_getTime
 17359  1D83  0008               	return
 17360  1D84                     __end_of_CLOCK_getTime:	
 17361                           
 17362                           	psect	text60
 17363  1334                     __ptext60:	
 17364 ;; *************** function _BUTTONS_init *****************
 17365 ;; Defined at:
 17366 ;;		line 21 in file "buttons.c"
 17367 ;; Parameters:    Size  Location     Type
 17368 ;;		None
 17369 ;; Auto vars:     Size  Location     Type
 17370 ;;		None
 17371 ;; Return value:  Size  Location     Type
 17372 ;;                  1    wreg      void 
 17373 ;; Registers used:
 17374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17375 ;; Tracked objects:
 17376 ;;		On entry : 0/0
 17377 ;;		On exit  : 0/0
 17378 ;;		Unchanged: 0/0
 17379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17382 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17383 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17384 ;;Total ram usage:        1 bytes
 17385 ;; Hardware stack levels used:    1
 17386 ;; Hardware stack levels required when called:    5
 17387 ;; This function calls:
 17388 ;;		_init
 17389 ;; This function is called by:
 17390 ;;		_main
 17391 ;; This function uses a non-reentrant model
 17392 ;;
 17393                           
 17394                           
 17395                           ;psect for function _BUTTONS_init
 17396  1334                     _BUTTONS_init:	
 17397                           
 17398                           ;buttons.c: 22:     menu = &buttons[0];
 17399                           
 17400                           ;incstack = 0
 17401                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17402  1334  3020               	movlw	(low (_buttons| (0+512)))& (0+255)
 17403  1335  0140               	movlb	0	; select bank0
 17404  1336  00A5               	movwf	??_BUTTONS_init
 17405  1337  0825               	movf	??_BUTTONS_init,w
 17406  1338  0142               	movlb	2	; select bank2
 17407  1339  00D1               	movwf	_menu^(0+256)
 17408                           
 17409                           ;buttons.c: 23:     up = &buttons[1];
 17410  133A  3028               	movlw	(low ((_buttons| (0+512)+8)))& (0+255)
 17411  133B  0140               	movlb	0	; select bank0
 17412  133C  00A5               	movwf	??_BUTTONS_init
 17413  133D  0825               	movf	??_BUTTONS_init,w
 17414  133E  0142               	movlb	2	; select bank2
 17415  133F  00D4               	movwf	_up^(0+256)
 17416                           
 17417                           ;buttons.c: 24:     down = &buttons[2];
 17418  1340  3030               	movlw	(low ((_buttons| (0+512)+16)))& (0+255)
 17419  1341  0140               	movlb	0	; select bank0
 17420  1342  00A5               	movwf	??_BUTTONS_init
 17421  1343  0825               	movf	??_BUTTONS_init,w
 17422  1344  0142               	movlb	2	; select bank2
 17423  1345  00D3               	movwf	_down^(0+256)
 17424                           
 17425                           ;buttons.c: 25:     enter = &buttons[3];
 17426  1346  3038               	movlw	(low ((_buttons| (0+512)+24)))& (0+255)
 17427  1347  0140               	movlb	0	; select bank0
 17428  1348  00A5               	movwf	??_BUTTONS_init
 17429  1349  0825               	movf	??_BUTTONS_init,w
 17430  134A  0142               	movlb	2	; select bank2
 17431  134B  00D2               	movwf	_enter^(0+256)
 17432                           
 17433                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 17434  134C  300E               	movlw	14
 17435  134D  0140               	movlb	0	; select bank0
 17436  134E  00A0               	movwf	init@port
 17437  134F  3000               	movlw	0
 17438  1350  00A1               	movwf	init@port+1
 17439  1351  3002               	movlw	2
 17440  1352  00A5               	movwf	??_BUTTONS_init
 17441  1353  0825               	movf	??_BUTTONS_init,w
 17442  1354  00A2               	movwf	init@pin
 17443  1355  0142               	movlb	2	; select bank2
 17444  1356  0851               	movf	_menu^(0+256),w
 17445  1357  319F  2758  3193   	fcall	_init
 17446                           
 17447                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 17448  135A  300C               	movlw	12
 17449  135B  0140               	movlb	0	; select bank0
 17450  135C  00A0               	movwf	init@port
 17451  135D  3000               	movlw	0
 17452  135E  00A1               	movwf	init@port+1
 17453  135F  3002               	movlw	2
 17454  1360  00A5               	movwf	??_BUTTONS_init
 17455  1361  0825               	movf	??_BUTTONS_init,w
 17456  1362  00A2               	movwf	init@pin
 17457  1363  0142               	movlb	2	; select bank2
 17458  1364  0852               	movf	_enter^(0+256),w
 17459  1365  319F  2758  3193   	fcall	_init
 17460                           
 17461                           ;buttons.c: 29:     init(down, &PORTC, 0);
 17462  1368  300E               	movlw	14
 17463  1369  0140               	movlb	0	; select bank0
 17464  136A  00A0               	movwf	init@port
 17465  136B  3000               	movlw	0
 17466  136C  00A1               	movwf	init@port+1
 17467  136D  01A2               	clrf	init@pin
 17468  136E  0142               	movlb	2	; select bank2
 17469  136F  0853               	movf	_down^(0+256),w
 17470  1370  319F  2758  3193   	fcall	_init
 17471                           
 17472                           ;buttons.c: 30:     init(up, &PORTC, 1);
 17473  1373  300E               	movlw	14
 17474  1374  0140               	movlb	0	; select bank0
 17475  1375  00A0               	movwf	init@port
 17476  1376  3000               	movlw	0
 17477  1377  00A1               	movwf	init@port+1
 17478  1378  01A2               	clrf	init@pin
 17479  1379  0AA2               	incf	init@pin,f
 17480  137A  0142               	movlb	2	; select bank2
 17481  137B  0854               	movf	_up^(0+256),w
 17482  137C  319F  2758         	fcall	_init
 17483  137E  0008               	return
 17484  137F                     __end_of_BUTTONS_init:	
 17485                           
 17486                           	psect	text61
 17487  1F58                     __ptext61:	
 17488 ;; *************** function _init *****************
 17489 ;; Defined at:
 17490 ;;		line 14 in file "buttons.c"
 17491 ;; Parameters:    Size  Location     Type
 17492 ;;  btn             1    wreg     PTR struct .
 17493 ;;		 -> buttons(32), NULL(0), 
 17494 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 17495 ;;		 -> PORTA(1), PORTC(1), 
 17496 ;;  pin             1    2[BANK0 ] unsigned char 
 17497 ;; Auto vars:     Size  Location     Type
 17498 ;;  btn             1    4[BANK0 ] PTR struct .
 17499 ;;		 -> buttons(32), NULL(0), 
 17500 ;; Return value:  Size  Location     Type
 17501 ;;                  1    wreg      void 
 17502 ;; Registers used:
 17503 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17504 ;; Tracked objects:
 17505 ;;		On entry : 0/0
 17506 ;;		On exit  : 0/0
 17507 ;;		Unchanged: 0/0
 17508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17509 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17512 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17513 ;;Total ram usage:        5 bytes
 17514 ;; Hardware stack levels used:    1
 17515 ;; Hardware stack levels required when called:    4
 17516 ;; This function calls:
 17517 ;;		Nothing
 17518 ;; This function is called by:
 17519 ;;		_BUTTONS_init
 17520 ;; This function uses a non-reentrant model
 17521 ;;
 17522                           
 17523                           
 17524                           ;psect for function _init
 17525  1F58                     _init:	
 17526                           
 17527                           ;incstack = 0
 17528                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 17529                           ;init@btn stored from wreg
 17530  1F58  0140               	movlb	0	; select bank0
 17531  1F59  00A4               	movwf	init@btn
 17532                           
 17533                           ;buttons.c: 15:     btn->port = port;
 17534  1F5A  0824               	movf	init@btn,w
 17535  1F5B  0086               	movwf	6
 17536  1F5C  3002               	movlw	2	; select bank4/5
 17537  1F5D  0087               	movwf	7
 17538  1F5E  0820               	movf	init@port,w
 17539  1F5F  3FC0               	movwi [0]fsr1
 17540  1F60  0821               	movf	init@port+1,w
 17541  1F61  3FC1               	movwi [1]fsr1
 17542                           
 17543                           ;buttons.c: 16:     btn->pin = pin;
 17544  1F62  0822               	movf	init@pin,w
 17545  1F63  00A3               	movwf	??_init
 17546  1F64  0824               	movf	init@btn,w
 17547  1F65  3E02               	addlw	2
 17548  1F66  0086               	movwf	6
 17549  1F67  3002               	movlw	2	; select bank4/5
 17550  1F68  0087               	movwf	7
 17551  1F69  0823               	movf	??_init,w
 17552  1F6A  0081               	movwf	1
 17553                           
 17554                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 17555  1F6B  0824               	movf	init@btn,w
 17556  1F6C  3E03               	addlw	3
 17557  1F6D  0086               	movwf	6
 17558  1F6E  3002               	movlw	2	; select bank4/5
 17559  1F6F  0087               	movwf	7
 17560  1F70  0181               	clrf	1
 17561                           
 17562                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 17563  1F71  0824               	movf	init@btn,w
 17564  1F72  3E05               	addlw	5
 17565  1F73  0086               	movwf	6
 17566  1F74  3002               	movlw	2	; select bank4/5
 17567  1F75  0087               	movwf	7
 17568  1F76  0181               	clrf	1
 17569  1F77  0008               	return
 17570  1F78                     __end_of_init:	
 17571                           
 17572                           	psect	text62
 17573  1E7A                     __ptext62:	
 17574 ;; *************** function _BEAT_init *****************
 17575 ;; Defined at:
 17576 ;;		line 31 in file "beat.c"
 17577 ;; Parameters:    Size  Location     Type
 17578 ;;		None
 17579 ;; Auto vars:     Size  Location     Type
 17580 ;;		None
 17581 ;; Return value:  Size  Location     Type
 17582 ;;                  1    wreg      void 
 17583 ;; Registers used:
 17584 ;;		wreg, status,2, status,0, pclath, cstack
 17585 ;; Tracked objects:
 17586 ;;		On entry : 0/0
 17587 ;;		On exit  : 0/0
 17588 ;;		Unchanged: 0/0
 17589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17594 ;;Total ram usage:        0 bytes
 17595 ;; Hardware stack levels used:    1
 17596 ;; Hardware stack levels required when called:    5
 17597 ;; This function calls:
 17598 ;;		_ADCC_SetADTIInterruptHandler
 17599 ;;		_ADCC_SetUpperThreshold
 17600 ;;		_ADCC_StartConversion
 17601 ;; This function is called by:
 17602 ;;		_main
 17603 ;; This function uses a non-reentrant model
 17604 ;;
 17605                           
 17606                           
 17607                           ;psect for function _BEAT_init
 17608  1E7A                     _BEAT_init:	
 17609                           
 17610                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 17611                           
 17612                           ;incstack = 0
 17613                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 17614  1E7A  0142               	movlb	2	; select bank2
 17615  1E7B  0863               	movf	(_threshold+1)^(0+256),w
 17616  1E7C  0140               	movlb	0	; select bank0
 17617  1E7D  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17618  1E7E  0142               	movlb	2	; select bank2
 17619  1E7F  0862               	movf	_threshold^(0+256),w
 17620  1E80  0140               	movlb	0	; select bank0
 17621  1E81  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17622  1E82  319D  2569  319E   	fcall	_ADCC_SetUpperThreshold
 17623                           
 17624                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 17625  1E85  3041               	movlw	low _adcThresholdHandler
 17626  1E86  0140               	movlb	0	; select bank0
 17627  1E87  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 17628  1E88  301D               	movlw	high _adcThresholdHandler
 17629  1E89  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 17630  1E8A  319D  2560  319E   	fcall	_ADCC_SetADTIInterruptHandler
 17631                           
 17632                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 17633  1E8D  300F               	movlw	15
 17634  1E8E  319D  2572         	fcall	_ADCC_StartConversion
 17635  1E90  0008               	return
 17636  1E91                     __end_of_BEAT_init:	
 17637                           
 17638                           	psect	text63
 17639  1D72                     __ptext63:	
 17640 ;; *************** function _ADCC_StartConversion *****************
 17641 ;; Defined at:
 17642 ;;		line 121 in file "mcc_generated_files/adcc.c"
 17643 ;; Parameters:    Size  Location     Type
 17644 ;;  channel         1    wreg     enum E10867
 17645 ;; Auto vars:     Size  Location     Type
 17646 ;;  channel         1    0[BANK0 ] enum E10867
 17647 ;; Return value:  Size  Location     Type
 17648 ;;                  1    wreg      void 
 17649 ;; Registers used:
 17650 ;;		wreg
 17651 ;; Tracked objects:
 17652 ;;		On entry : 0/0
 17653 ;;		On exit  : 0/0
 17654 ;;		Unchanged: 0/0
 17655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17659 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17660 ;;Total ram usage:        1 bytes
 17661 ;; Hardware stack levels used:    1
 17662 ;; Hardware stack levels required when called:    4
 17663 ;; This function calls:
 17664 ;;		Nothing
 17665 ;; This function is called by:
 17666 ;;		_BEAT_init
 17667 ;; This function uses a non-reentrant model
 17668 ;;
 17669                           
 17670                           
 17671                           ;psect for function _ADCC_StartConversion
 17672  1D72                     _ADCC_StartConversion:	
 17673                           
 17674                           ;incstack = 0
 17675                           ; Regs used in _ADCC_StartConversion: [wreg]
 17676                           ;ADCC_StartConversion@channel stored from wreg
 17677  1D72  0140               	movlb	0	; select bank0
 17678  1D73  00A0               	movwf	ADCC_StartConversion@channel
 17679                           
 17680                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 17681  1D74  0820               	movf	ADCC_StartConversion@channel,w
 17682  1D75  0141               	movlb	1	; select bank1
 17683  1D76  009F               	movwf	31	;volatile
 17684                           
 17685                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 17686  1D77  0142               	movlb	2	; select bank2
 17687  1D78  1791               	bsf	17,7	;volatile
 17688                           
 17689                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 17690  1D79  1411               	bsf	17,0	;volatile
 17691  1D7A  0008               	return
 17692  1D7B                     __end_of_ADCC_StartConversion:	
 17693                           
 17694                           	psect	text64
 17695  1D69                     __ptext64:	
 17696 ;; *************** function _ADCC_SetUpperThreshold *****************
 17697 ;; Defined at:
 17698 ;;		line 251 in file "mcc_generated_files/adcc.c"
 17699 ;; Parameters:    Size  Location     Type
 17700 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 17701 ;; Auto vars:     Size  Location     Type
 17702 ;;		None
 17703 ;; Return value:  Size  Location     Type
 17704 ;;                  1    wreg      void 
 17705 ;; Registers used:
 17706 ;;		wreg, status,2
 17707 ;; Tracked objects:
 17708 ;;		On entry : 0/0
 17709 ;;		On exit  : 0/0
 17710 ;;		Unchanged: 0/0
 17711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17715 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17716 ;;Total ram usage:        2 bytes
 17717 ;; Hardware stack levels used:    1
 17718 ;; Hardware stack levels required when called:    4
 17719 ;; This function calls:
 17720 ;;		Nothing
 17721 ;; This function is called by:
 17722 ;;		_BEAT_init
 17723 ;;		_BEAT_task
 17724 ;; This function uses a non-reentrant model
 17725 ;;
 17726                           
 17727                           
 17728                           ;psect for function _ADCC_SetUpperThreshold
 17729  1D69                     _ADCC_SetUpperThreshold:	
 17730                           
 17731                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 17732                           
 17733                           ;incstack = 0
 17734                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 17735  1D69  0140               	movlb	0	; select bank0
 17736  1D6A  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 17737  1D6B  0141               	movlb	1	; select bank1
 17738  1D6C  008F               	movwf	15	;volatile
 17739                           
 17740                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 17741  1D6D  0140               	movlb	0	; select bank0
 17742  1D6E  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 17743  1D6F  0141               	movlb	1	; select bank1
 17744  1D70  008E               	movwf	14	;volatile
 17745  1D71  0008               	return
 17746  1D72                     __end_of_ADCC_SetUpperThreshold:	
 17747                           
 17748                           	psect	text65
 17749  1D60                     __ptext65:	
 17750 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17751 ;; Defined at:
 17752 ;;		line 317 in file "mcc_generated_files/adcc.c"
 17753 ;; Parameters:    Size  Location     Type
 17754 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 17755 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 17756 ;; Auto vars:     Size  Location     Type
 17757 ;;		None
 17758 ;; Return value:  Size  Location     Type
 17759 ;;                  1    wreg      void 
 17760 ;; Registers used:
 17761 ;;		wreg
 17762 ;; Tracked objects:
 17763 ;;		On entry : 0/0
 17764 ;;		On exit  : 0/0
 17765 ;;		Unchanged: 0/0
 17766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17771 ;;Total ram usage:        2 bytes
 17772 ;; Hardware stack levels used:    1
 17773 ;; Hardware stack levels required when called:    4
 17774 ;; This function calls:
 17775 ;;		Nothing
 17776 ;; This function is called by:
 17777 ;;		_ADCC_Initialize
 17778 ;;		_BEAT_init
 17779 ;; This function uses a non-reentrant model
 17780 ;;
 17781                           
 17782                           
 17783                           ;psect for function _ADCC_SetADTIInterruptHandler
 17784  1D60                     _ADCC_SetADTIInterruptHandler:	
 17785                           
 17786                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 17787                           
 17788                           ;incstack = 0
 17789                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 17790  1D60  0140               	movlb	0	; select bank0
 17791  1D61  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 17792  1D62  0142               	movlb	2	; select bank2
 17793  1D63  00EA               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 17794  1D64  0140               	movlb	0	; select bank0
 17795  1D65  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 17796  1D66  0142               	movlb	2	; select bank2
 17797  1D67  00E9               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 17798  1D68  0008               	return
 17799  1D69                     __end_of_ADCC_SetADTIInterruptHandler:	
 17800                           
 17801                           	psect	intentry
 17802  0004                     __pintentry:	
 17803 ;; *************** function _INTERRUPT_InterruptManager *****************
 17804 ;; Defined at:
 17805 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17806 ;; Parameters:    Size  Location     Type
 17807 ;;		None
 17808 ;; Auto vars:     Size  Location     Type
 17809 ;;		None
 17810 ;; Return value:  Size  Location     Type
 17811 ;;                  1    wreg      void 
 17812 ;; Registers used:
 17813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17814 ;; Tracked objects:
 17815 ;;		On entry : 0/0
 17816 ;;		On exit  : 0/0
 17817 ;;		Unchanged: 0/0
 17818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17823 ;;Total ram usage:        0 bytes
 17824 ;; Hardware stack levels used:    1
 17825 ;; Hardware stack levels required when called:    3
 17826 ;; This function calls:
 17827 ;;		Absolute function
 17828 ;;		_ADCC_ThresholdISR
 17829 ;;		_DMX_ISR
 17830 ;;		_EUSART1_Receive_ISR
 17831 ;;		_EUSART1_Transmit_ISR
 17832 ;;		_I2C1_BusCollisionISR
 17833 ;;		_I2C1_ISR
 17834 ;;		_TMR0_ISR
 17835 ;; This function is called by:
 17836 ;;		Interrupt level 1
 17837 ;; This function uses a non-reentrant model
 17838 ;;
 17839                           
 17840  0004                     _INTERRUPT_InterruptManager:	
 17841                           
 17842                           ;incstack = 0
 17843  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17844                           
 17845                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17846  0005  3180               	pagesel	$
 17847                           
 17848                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17849  0006  014E               	movlb	14	; select bank14
 17850  0007  1A96               	btfsc	22,5	;volatile
 17851  0008  1E8C               	btfss	12,5	;volatile
 17852  0009  280E               	goto	i1l280
 17853                           
 17854                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17855  000A  3187  27F3  3180   	fcall	_TMR0_ISR
 17856                           
 17857                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17858  000D  2837               	goto	i1l294
 17859  000E                     i1l280:	
 17860                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17861                           
 17862  000E  1F0B               	btfss	11,6	;volatile
 17863  000F  2837               	goto	i1l294
 17864                           
 17865                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17866  0010  1899               	btfsc	25,1	;volatile
 17867  0011  1C8F               	btfss	15,1	;volatile
 17868  0012  2817               	goto	i1l283
 17869                           
 17870                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 17871  0013  319D  2538  3180   	fcall	_I2C1_BusCollisionISR
 17872                           
 17873                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17874  0016  2837               	goto	i1l294
 17875  0017                     i1l283:	
 17876                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17877                           
 17878  0017  1819               	btfsc	25,0	;volatile
 17879  0018  1C0F               	btfss	15,0	;volatile
 17880  0019  281E               	goto	i1l285
 17881                           
 17882                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 17883  001A  318A  22DB  3180   	fcall	_I2C1_ISR
 17884                           
 17885                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17886  001D  2837               	goto	i1l294
 17887  001E                     i1l285:	
 17888                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 17889                           
 17890  001E  1A19               	btfsc	25,4	;volatile
 17891  001F  1E0F               	btfss	15,4	;volatile
 17892  0020  2828               	goto	i1l287
 17893                           
 17894                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 17895  0021  0142               	movlb	2	; select bank2
 17896  0022  086E               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 17897  0023  008A               	movwf	10
 17898  0024  086D               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 17899  0025  000A               	callw
 17900  0026  3180               	pagesel	$
 17901                           
 17902                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17903  0027  2837               	goto	i1l294
 17904  0028                     i1l287:	
 17905                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 17906                           
 17907  0028  1A99               	btfsc	25,5	;volatile
 17908  0029  1E8F               	btfss	15,5	;volatile
 17909  002A  2832               	goto	i1l289
 17910                           
 17911                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 17912  002B  0143               	movlb	3	; select bank3
 17913  002C  0865               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 17914  002D  008A               	movwf	10
 17915  002E  0864               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 17916  002F  000A               	callw
 17917  0030  3180               	pagesel	$
 17918                           
 17919                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17920  0031  2837               	goto	i1l294
 17921  0032                     i1l289:	
 17922                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 17923                           
 17924  0032  1897               	btfsc	23,1	;volatile
 17925  0033  1C8D               	btfss	13,1	;volatile
 17926  0034  2837               	goto	i1l294
 17927                           
 17928                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 17929  0035  3190  2000         	fcall	_ADCC_ThresholdISR
 17930  0037                     i1l294:	
 17931                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17932                           
 17933  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17934  0038  0009               	retfie
 17935  0039                     __end_of_INTERRUPT_InterruptManager:	
 17936                           
 17937                           	psect	text67
 17938  07F3                     __ptext67:	
 17939 ;; *************** function _TMR0_ISR *****************
 17940 ;; Defined at:
 17941 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;		None
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;		None
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  1    wreg      void 
 17948 ;; Registers used:
 17949 ;;		wreg, status,2, status,0, pclath, cstack
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17959 ;;Total ram usage:        0 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:    1
 17962 ;; This function calls:
 17963 ;;		Absolute function
 17964 ;;		_CLOCK_timerCallback
 17965 ;;		_TMR0_DefaultInterruptHandler
 17966 ;; This function is called by:
 17967 ;;		_INTERRUPT_InterruptManager
 17968 ;; This function uses a non-reentrant model
 17969 ;;
 17970                           
 17971                           
 17972                           ;psect for function _TMR0_ISR
 17973  07F3                     _TMR0_ISR:	
 17974                           
 17975                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 17976                           
 17977                           ;incstack = 0
 17978                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17979  07F3  014E               	movlb	14	; select bank14
 17980  07F4  128C               	bcf	12,5	;volatile
 17981                           
 17982                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 17983  07F5  0142               	movlb	2	; select bank2
 17984  07F6  086B               	movf	_TMR0_InterruptHandler^(0+256),w
 17985  07F7  046C               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 17986  07F8  1903               	btfsc	3,2
 17987  07F9  0008               	return
 17988                           
 17989                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 17990  07FA  086C               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 17991  07FB  008A               	movwf	10
 17992  07FC  086B               	movf	_TMR0_InterruptHandler^(0+256),w
 17993  07FD  000A               	callw
 17994  07FE  3187               	pagesel	$
 17995  07FF  0008               	return
 17996  0800                     __end_of_TMR0_ISR:	
 17997                           
 17998                           	psect	text68
 17999  1D52                     __ptext68:	
 18000 ;; *************** function _CLOCK_timerCallback *****************
 18001 ;; Defined at:
 18002 ;;		line 21 in file "clock.c"
 18003 ;; Parameters:    Size  Location     Type
 18004 ;;		None
 18005 ;; Auto vars:     Size  Location     Type
 18006 ;;		None
 18007 ;; Return value:  Size  Location     Type
 18008 ;;                  1    wreg      void 
 18009 ;; Registers used:
 18010 ;;		wreg
 18011 ;; Tracked objects:
 18012 ;;		On entry : 0/0
 18013 ;;		On exit  : 0/0
 18014 ;;		Unchanged: 0/0
 18015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18020 ;;Total ram usage:        0 bytes
 18021 ;; Hardware stack levels used:    1
 18022 ;; This function calls:
 18023 ;;		Nothing
 18024 ;; This function is called by:
 18025 ;;		_CLOCK_init
 18026 ;;		_TMR0_ISR
 18027 ;; This function uses a non-reentrant model
 18028 ;;
 18029                           
 18030                           
 18031                           ;psect for function _CLOCK_timerCallback
 18032  1D52                     _CLOCK_timerCallback:	
 18033                           
 18034                           ;clock.c: 22:     currentTime++;
 18035                           
 18036                           ;incstack = 0
 18037                           ; Regs used in _CLOCK_timerCallback: [wreg]
 18038  1D52  3001               	movlw	1
 18039  1D53  0142               	movlb	2	; select bank2
 18040  1D54  07C9               	addwf	_currentTime^(0+256),f
 18041  1D55  3000               	movlw	0
 18042  1D56  3DCA               	addwfc	(_currentTime+1)^(0+256),f
 18043  1D57  0008               	return
 18044  1D58                     __end_of_CLOCK_timerCallback:	
 18045                           
 18046                           	psect	text69
 18047  1D34                     __ptext69:	
 18048 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 18049 ;; Defined at:
 18050 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 18051 ;; Parameters:    Size  Location     Type
 18052 ;;		None
 18053 ;; Auto vars:     Size  Location     Type
 18054 ;;		None
 18055 ;; Return value:  Size  Location     Type
 18056 ;;                  1    wreg      void 
 18057 ;; Registers used:
 18058 ;;		None
 18059 ;; Tracked objects:
 18060 ;;		On entry : 0/0
 18061 ;;		On exit  : 0/0
 18062 ;;		Unchanged: 0/0
 18063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18068 ;;Total ram usage:        0 bytes
 18069 ;; Hardware stack levels used:    1
 18070 ;; This function calls:
 18071 ;;		Nothing
 18072 ;; This function is called by:
 18073 ;;		_TMR0_Initialize
 18074 ;;		_TMR0_ISR
 18075 ;; This function uses a non-reentrant model
 18076 ;;
 18077                           
 18078                           
 18079                           ;psect for function _TMR0_DefaultInterruptHandler
 18080  1D34                     _TMR0_DefaultInterruptHandler:	
 18081                           
 18082                           ;incstack = 0
 18083                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 18084  1D34  0008               	return
 18085  1D35                     __end_of_TMR0_DefaultInterruptHandler:	
 18086                           
 18087                           	psect	text70
 18088  0ADB                     __ptext70:	
 18089 ;; *************** function _I2C1_ISR *****************
 18090 ;; Defined at:
 18091 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 18092 ;; Parameters:    Size  Location     Type
 18093 ;;		None
 18094 ;; Auto vars:     Size  Location     Type
 18095 ;;		None
 18096 ;; Return value:  Size  Location     Type
 18097 ;;                  1    wreg      void 
 18098 ;; Registers used:
 18099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18100 ;; Tracked objects:
 18101 ;;		On entry : 0/0
 18102 ;;		On exit  : 0/0
 18103 ;;		Unchanged: 0/0
 18104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18107 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18109 ;;Total ram usage:        4 bytes
 18110 ;; Hardware stack levels used:    1
 18111 ;; Hardware stack levels required when called:    1
 18112 ;; This function calls:
 18113 ;;		_I2C1_FunctionComplete
 18114 ;;		_I2C1_Stop
 18115 ;; This function is called by:
 18116 ;;		_INTERRUPT_InterruptManager
 18117 ;; This function uses a non-reentrant model
 18118 ;;
 18119                           
 18120                           
 18121                           ;psect for function _I2C1_ISR
 18122  0ADB                     _I2C1_ISR:	
 18123                           
 18124                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 18125                           
 18126                           ;incstack = 0
 18127                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18128  0ADB  014E               	movlb	14	; select bank14
 18129  0ADC  100F               	bcf	15,0	;volatile
 18130                           
 18131                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 18132  0ADD  0143               	movlb	3	; select bank3
 18133  0ADE  1F90               	btfss	16,7	;volatile
 18134  0ADF  2C0D               	goto	i1l5069
 18135                           
 18136                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 18137  0AE0  1390               	bcf	16,7	;volatile
 18138                           
 18139                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 18140  0AE1  0141               	movlb	1	; select bank1
 18141  0AE2  01EC               	clrf	_i2c1_state^(0+128)
 18142                           
 18143                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 18144  0AE3  086A               	movf	_p_i2c1_current^(0+128),w
 18145  0AE4  3E02               	addlw	2
 18146  0AE5  0086               	movwf	6
 18147  0AE6  3001               	movlw	1	; select bank2/3
 18148  0AE7  0087               	movwf	7
 18149  0AE8  0801               	movf	1,w
 18150  0AE9  0086               	movwf	6
 18151  0AEA  0187               	clrf	7
 18152  0AEB  0181               	clrf	1
 18153  0AEC  0A81               	incf	1,f
 18154                           
 18155                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 18156  0AED  01EA               	clrf	_p_i2c1_current^(0+128)
 18157  0AEE  0008               	return
 18158  0AEF                     i1l402:	
 18159                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 18160                           
 18161                           
 18162                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 18163  0AEF  0142               	movlb	2	; select bank2
 18164  0AF0  18A2               	btfsc	(_i2c1_object^(0+256)+2),1
 18165  0AF1  0008               	return
 18166                           
 18167                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 18168  0AF2  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18169  0AF3  00F8               	movwf	??_I2C1_ISR
 18170  0AF4  0878               	movf	??_I2C1_ISR,w
 18171  0AF5  0141               	movlb	1	; select bank1
 18172  0AF6  00EA               	movwf	_p_i2c1_current^(0+128)
 18173                           
 18174                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 18175  0AF7  0142               	movlb	2	; select bank2
 18176  0AF8  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18177  0AF9  0086               	movwf	6
 18178  0AFA  3001               	movlw	1	; select bank2/3
 18179  0AFB  0087               	movwf	7
 18180  0AFC  0801               	movf	1,w
 18181  0AFD  00F8               	movwf	??_I2C1_ISR
 18182  0AFE  0878               	movf	??_I2C1_ISR,w
 18183  0AFF  00D9               	movwf	_i2c1_trb_count^(0+256)
 18184                           
 18185                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 18186  0B00  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18187  0B01  0086               	movwf	6
 18188  0B02  3001               	movlw	1	; select bank2/3
 18189  0B03  0087               	movwf	7
 18190  0B04  3001               	movlw	1	; select bank2/3
 18191  0B05  3F41               	moviw [1]fsr1
 18192  0B06  0141               	movlb	1	; select bank1
 18193  0B07  00EB               	movwf	_p_i2c1_trb_current^(0+128)
 18194                           
 18195                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 18196  0B08  3003               	movlw	3
 18197  0B09  00F8               	movwf	??_I2C1_ISR
 18198  0B0A  0878               	movf	??_I2C1_ISR,w
 18199  0B0B  0142               	movlb	2	; select bank2
 18200  0B0C  07A1               	addwf	(low ((_i2c1_object| (0+256)+1)))^0,f
 18201                           
 18202                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 18203  0B0D  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18204  0B0E  3A5E               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 18205  0B0F  1D03               	skipz
 18206  0B10  2B15               	goto	i1l4957
 18207                           
 18208                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 18209  0B11  305B               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 18210  0B12  00F8               	movwf	??_I2C1_ISR
 18211  0B13  0878               	movf	??_I2C1_ISR,w
 18212  0B14  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
 18213  0B15                     i1l4957:	
 18214                           
 18215                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 18216  0B15  1022               	bcf	(_i2c1_object^(0+256)+2),0
 18217                           
 18218                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 18219  0B16  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18220  0B17  0620               	xorwf	_i2c1_object^(0+256),w
 18221  0B18  1903               	btfsc	3,2
 18222                           
 18223                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 18224  0B19  14A2               	bsf	(_i2c1_object^(0+256)+2),1
 18225                           
 18226                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 18227                           
 18228                           ;mcc_generated_files/i2c1.c: 290:                 }
 18229  0B1A  0143               	movlb	3	; select bank3
 18230  0B1B  1411               	bsf	17,0	;volatile
 18231  0B1C                     i1l4961:	
 18232                           
 18233                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 18234  0B1C  3002               	movlw	2
 18235  0B1D  00F8               	movwf	??_I2C1_ISR
 18236  0B1E  0878               	movf	??_I2C1_ISR,w
 18237  0B1F  0141               	movlb	1	; select bank1
 18238  0B20  00EC               	movwf	_i2c1_state^(0+128)
 18239  0B21  0008               	return
 18240  0B22                     i1l407:	
 18241                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 18242                           
 18243  0B22  2BB5               	goto	i1l428
 18244  0B23                     i1l408:	
 18245                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 18246                           
 18247                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 18248                           
 18249                           
 18250                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 18251  0B23  0143               	movlb	3	; select bank3
 18252  0B24  1F11               	btfss	17,6	;volatile
 18253  0B25  2B2F               	goto	i1l4969
 18254                           
 18255                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 18256  0B26  3001               	movlw	1
 18257  0B27  00F8               	movwf	??_I2C1_ISR
 18258  0B28  0878               	movf	??_I2C1_ISR,w
 18259  0B29  0142               	movlb	2	; select bank2
 18260  0B2A  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18261                           
 18262                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18263  0B2B  3004               	movlw	4
 18264  0B2C  319E  2691         	fcall	_I2C1_Stop
 18265                           
 18266                           ;mcc_generated_files/i2c1.c: 319:             }
 18267  0B2E  0008               	return
 18268  0B2F                     i1l4969:	
 18269                           
 18270                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 18271  0B2F  0875               	movf	I2C1_ISR@i2c_address+1,w
 18272  0B30  00F9               	movwf	??_I2C1_ISR+1
 18273  0B31  0874               	movf	I2C1_ISR@i2c_address,w
 18274  0B32  00F8               	movwf	??_I2C1_ISR
 18275  0B33  36F9               	lsrf	??_I2C1_ISR+1,f
 18276  0B34  0CF8               	rrf	??_I2C1_ISR,f
 18277  0B35  0878               	movf	??_I2C1_ISR,w
 18278  0B36  008C               	movwf	12	;volatile
 18279                           
 18280                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 18281  0B37  1C74               	btfss	I2C1_ISR@i2c_address,0
 18282  0B38  2B3F               	goto	i1l4975
 18283                           
 18284                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 18285  0B39  300B               	movlw	11
 18286  0B3A  00F8               	movwf	??_I2C1_ISR
 18287  0B3B  0878               	movf	??_I2C1_ISR,w
 18288  0B3C  0141               	movlb	1	; select bank1
 18289  0B3D  00EC               	movwf	_i2c1_state^(0+128)
 18290                           
 18291                           ;mcc_generated_files/i2c1.c: 331:                 }
 18292  0B3E  0008               	return
 18293  0B3F                     i1l4975:	
 18294                           
 18295                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 18296  0B3F  3003               	movlw	3
 18297  0B40  00F8               	movwf	??_I2C1_ISR
 18298  0B41  0878               	movf	??_I2C1_ISR,w
 18299  0B42  0141               	movlb	1	; select bank1
 18300  0B43  00EC               	movwf	_i2c1_state^(0+128)
 18301  0B44  0008               	return
 18302  0B45                     i1l413:	
 18303                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 18304                           
 18305                           
 18306                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 18307  0B45  0143               	movlb	3	; select bank3
 18308  0B46  1F11               	btfss	17,6	;volatile
 18309  0B47  2B51               	goto	i1l414
 18310                           
 18311                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 18312  0B48  3001               	movlw	1
 18313  0B49  00F8               	movwf	??_I2C1_ISR
 18314  0B4A  0878               	movf	??_I2C1_ISR,w
 18315  0B4B  0142               	movlb	2	; select bank2
 18316  0B4C  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18317                           
 18318                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18319  0B4D  3004               	movlw	4
 18320  0B4E  319E  2691         	fcall	_I2C1_Stop
 18321                           
 18322                           ;mcc_generated_files/i2c1.c: 347:             }
 18323  0B50  0008               	return
 18324  0B51                     i1l414:	
 18325                           ;mcc_generated_files/i2c1.c: 348:             else
 18326                           
 18327                           
 18328                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 18329  0B51  1491               	bsf	17,1	;volatile
 18330                           
 18331                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 18332  0B52  0875               	movf	I2C1_ISR@i2c_address+1,w
 18333  0B53  00F9               	movwf	??_I2C1_ISR+1
 18334  0B54  0874               	movf	I2C1_ISR@i2c_address,w
 18335  0B55  00F8               	movwf	??_I2C1_ISR
 18336  0B56  0879               	movf	??_I2C1_ISR+1,w
 18337  0B57  00F8               	movwf	??_I2C1_ISR
 18338  0B58  01F9               	clrf	??_I2C1_ISR+1
 18339  0B59  3006               	movlw	6
 18340  0B5A  0578               	andwf	??_I2C1_ISR,w
 18341  0B5B  00FA               	movwf	??_I2C1_ISR+2
 18342  0B5C  3000               	movlw	0
 18343  0B5D  0579               	andwf	??_I2C1_ISR+1,w
 18344  0B5E  00FB               	movwf	??_I2C1_ISR+3
 18345  0B5F  30F0               	movlw	240
 18346  0B60  047A               	iorwf	??_I2C1_ISR+2,w
 18347  0B61  00F4               	movwf	I2C1_ISR@i2c_address
 18348  0B62  3000               	movlw	0
 18349  0B63  047B               	iorwf	??_I2C1_ISR+3,w
 18350  0B64  00F5               	movwf	I2C1_ISR@i2c_address+1
 18351                           
 18352                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 18353  0B65  1474               	bsf	I2C1_ISR@i2c_address,0
 18354                           
 18355                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 18356  0B66  0142               	movlb	2	; select bank2
 18357  0B67  01D6               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+256)
 18358  0B68  0AD6               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+256),f
 18359  0B69  2B1C               	goto	i1l4961
 18360  0B6A                     i1l4989:	
 18361                           
 18362                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 18363  0B6A  0142               	movlb	2	; select bank2
 18364  0B6B  0356               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+256),w
 18365  0B6C  1903               	btfsc	3,2
 18366  0B6D  2B88               	goto	i1l5009
 18367                           
 18368                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 18369  0B6E  0141               	movlb	1	; select bank1
 18370  0B6F  086B               	movf	_p_i2c1_trb_current^(0+128),w
 18371  0B70  0086               	movwf	6
 18372  0B71  3001               	movlw	1	; select bank2/3
 18373  0B72  0087               	movwf	7
 18374  0B73  3F40               	moviw [0]fsr1
 18375  0B74  00F4               	movwf	I2C1_ISR@i2c_address
 18376  0B75  3F41               	moviw [1]fsr1
 18377  0B76  00F5               	movwf	I2C1_ISR@i2c_address+1
 18378                           
 18379                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 18380  0B77  086B               	movf	_p_i2c1_trb_current^(0+128),w
 18381  0B78  0086               	movwf	6
 18382  0B79  3001               	movlw	1	; select bank2/3
 18383  0B7A  0087               	movwf	7
 18384  0B7B  3001               	movlw	1	; select bank2/3
 18385  0B7C  3F43               	moviw [3]fsr1
 18386  0B7D  0142               	movlb	2	; select bank2
 18387  0B7E  00D8               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+256)
 18388                           
 18389                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 18390  0B7F  0141               	movlb	1	; select bank1
 18391  0B80  086B               	movf	_p_i2c1_trb_current^(0+128),w
 18392  0B81  0086               	movwf	6
 18393  0B82  3001               	movlw	1	; select bank2/3
 18394  0B83  0087               	movwf	7
 18395  0B84  3001               	movlw	1	; select bank2/3
 18396  0B85  3F42               	moviw [2]fsr1
 18397  0B86  0142               	movlb	2	; select bank2
 18398  0B87  00D7               	movwf	I2C1_ISR@i2c_bytes_left^(0+256)
 18399  0B88                     i1l5009:	
 18400                           
 18401                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 18402  0B88  0874               	movf	I2C1_ISR@i2c_address,w
 18403  0B89  0143               	movlb	3	; select bank3
 18404  0B8A  008C               	movwf	12	;volatile
 18405                           
 18406                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 18407  0B8B  1C74               	btfss	I2C1_ISR@i2c_address,0
 18408  0B8C  2B3F               	goto	i1l4975
 18409                           
 18410                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 18411  0B8D  3005               	movlw	5
 18412  0B8E  00F8               	movwf	??_I2C1_ISR
 18413  0B8F  0878               	movf	??_I2C1_ISR,w
 18414  0B90  0141               	movlb	1	; select bank1
 18415  0B91  00EC               	movwf	_i2c1_state^(0+128)
 18416                           
 18417                           ;mcc_generated_files/i2c1.c: 419:                 }
 18418  0B92  0008               	return
 18419  0B93                     i1l424:	
 18420                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 18421                           
 18422                           
 18423                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 18424  0B93  0143               	movlb	3	; select bank3
 18425  0B94  1F11               	btfss	17,6	;volatile
 18426  0B95  2BA1               	goto	i1l5023
 18427                           
 18428                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 18429  0B96  3001               	movlw	1
 18430  0B97  00F8               	movwf	??_I2C1_ISR
 18431  0B98  0878               	movf	??_I2C1_ISR,w
 18432  0B99  0142               	movlb	2	; select bank2
 18433  0B9A  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18434                           
 18435                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 18436  0B9B  0143               	movlb	3	; select bank3
 18437  0B9C  1311               	bcf	17,6	;volatile
 18438                           
 18439                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 18440  0B9D  3005               	movlw	5
 18441  0B9E  319E  2691         	fcall	_I2C1_Stop
 18442                           
 18443                           ;mcc_generated_files/i2c1.c: 442:             }
 18444  0BA0  0008               	return
 18445  0BA1                     i1l5023:	
 18446                           
 18447                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 18448  0BA1  3001               	movlw	1
 18449  0BA2  0142               	movlb	2	; select bank2
 18450  0BA3  02D7               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 18451  0BA4  0A57               	incf	I2C1_ISR@i2c_bytes_left^(0+256),w
 18452  0BA5  1D03               	btfss	3,2
 18453  0BA6  2BB8               	goto	i1l5031
 18454                           
 18455                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 18456  0BA7  3004               	movlw	4
 18457  0BA8  00F8               	movwf	??_I2C1_ISR
 18458  0BA9  0878               	movf	??_I2C1_ISR,w
 18459  0BAA  0141               	movlb	1	; select bank1
 18460  0BAB  07EB               	addwf	_p_i2c1_trb_current^(0+128),f
 18461                           
 18462                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 18463  0BAC  3001               	movlw	1
 18464  0BAD  0142               	movlb	2	; select bank2
 18465  0BAE  02D9               	subwf	_i2c1_trb_count^(0+256),f
 18466  0BAF  1D03               	btfss	3,2
 18467  0BB0  2BB5               	goto	i1l428
 18468                           
 18469                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18470  0BB1  3000               	movlw	0
 18471  0BB2  319E  2691         	fcall	_I2C1_Stop
 18472                           
 18473                           ;mcc_generated_files/i2c1.c: 457:                     }
 18474  0BB4  0008               	return
 18475  0BB5                     i1l428:	
 18476                           ;mcc_generated_files/i2c1.c: 458:                     else
 18477                           
 18478                           
 18479                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 18480  0BB5  0143               	movlb	3	; select bank3
 18481  0BB6  1491               	bsf	17,1	;volatile
 18482  0BB7  2B1C               	goto	i1l4961
 18483  0BB8                     i1l5031:	
 18484                           
 18485                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 18486  0BB8  0858               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 18487  0BB9  0086               	movwf	6
 18488  0BBA  0187               	clrf	7
 18489  0BBB  0801               	movf	1,w
 18490  0BBC  0143               	movlb	3	; select bank3
 18491  0BBD  008C               	movwf	12	;volatile
 18492  0BBE  3001               	movlw	1
 18493  0BBF  00F8               	movwf	??_I2C1_ISR
 18494  0BC0  0878               	movf	??_I2C1_ISR,w
 18495  0BC1  0142               	movlb	2	; select bank2
 18496  0BC2  07D8               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 18497  0BC3  0008               	return
 18498  0BC4                     i1l431:	
 18499                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 18500                           
 18501                           
 18502                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 18503  0BC4  0143               	movlb	3	; select bank3
 18504  0BC5  1F11               	btfss	17,6	;volatile
 18505  0BC6  2BD2               	goto	i1l432
 18506                           
 18507                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 18508  0BC7  3001               	movlw	1
 18509  0BC8  00F8               	movwf	??_I2C1_ISR
 18510  0BC9  0878               	movf	??_I2C1_ISR,w
 18511  0BCA  0142               	movlb	2	; select bank2
 18512  0BCB  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18513                           
 18514                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18515  0BCC  3004               	movlw	4
 18516  0BCD  319E  2691         	fcall	_I2C1_Stop
 18517                           
 18518                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 18519  0BCF  0143               	movlb	3	; select bank3
 18520  0BD0  1311               	bcf	17,6	;volatile
 18521                           
 18522                           ;mcc_generated_files/i2c1.c: 495:             }
 18523  0BD1  0008               	return
 18524  0BD2                     i1l432:	
 18525                           ;mcc_generated_files/i2c1.c: 496:             else
 18526                           
 18527                           
 18528                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 18529  0BD2  1591               	bsf	17,3	;volatile
 18530                           
 18531                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 18532  0BD3  3008               	movlw	8
 18533  0BD4  00F8               	movwf	??_I2C1_ISR
 18534  0BD5  0878               	movf	??_I2C1_ISR,w
 18535  0BD6  0141               	movlb	1	; select bank1
 18536  0BD7  00EC               	movwf	_i2c1_state^(0+128)
 18537  0BD8  0008               	return
 18538  0BD9                     i1l5043:	
 18539                           
 18540                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 18541  0BD9  3008               	movlw	8
 18542  0BDA  00F8               	movwf	??_I2C1_ISR
 18543  0BDB  0878               	movf	??_I2C1_ISR,w
 18544  0BDC  00EC               	movwf	_i2c1_state^(0+128)
 18545                           
 18546                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 18547  0BDD  0143               	movlb	3	; select bank3
 18548  0BDE  1591               	bsf	17,3	;volatile
 18549                           
 18550                           ;mcc_generated_files/i2c1.c: 513:             break;
 18551  0BDF  0008               	return
 18552  0BE0                     i1l5047:	
 18553                           
 18554                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 18555  0BE0  0143               	movlb	3	; select bank3
 18556  0BE1  080C               	movf	12,w	;volatile
 18557  0BE2  00F8               	movwf	??_I2C1_ISR
 18558  0BE3  0142               	movlb	2	; select bank2
 18559  0BE4  0858               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 18560  0BE5  0086               	movwf	6
 18561  0BE6  0187               	clrf	7
 18562  0BE7  0878               	movf	??_I2C1_ISR,w
 18563  0BE8  0081               	movwf	1
 18564  0BE9  3001               	movlw	1
 18565  0BEA  00F8               	movwf	??_I2C1_ISR
 18566  0BEB  0878               	movf	??_I2C1_ISR,w
 18567  0BEC  07D8               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 18568                           
 18569                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 18570  0BED  3001               	movlw	1
 18571  0BEE  02D7               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 18572  0BEF  1903               	btfsc	3,2
 18573  0BF0  2BF9               	goto	i1l436
 18574                           
 18575                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 18576  0BF1  0143               	movlb	3	; select bank3
 18577  0BF2  1291               	bcf	17,5	;volatile
 18578                           
 18579                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 18580  0BF3  3006               	movlw	6
 18581  0BF4  00F8               	movwf	??_I2C1_ISR
 18582  0BF5  0878               	movf	??_I2C1_ISR,w
 18583  0BF6  0141               	movlb	1	; select bank1
 18584  0BF7  00EC               	movwf	_i2c1_state^(0+128)
 18585                           
 18586                           ;mcc_generated_files/i2c1.c: 532:             }
 18587  0BF8  2BFD               	goto	i1l5059
 18588  0BF9                     i1l436:	
 18589                           ;mcc_generated_files/i2c1.c: 533:             else
 18590                           
 18591                           
 18592                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 18593  0BF9  0143               	movlb	3	; select bank3
 18594  0BFA  1691               	bsf	17,5	;volatile
 18595                           
 18596                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 18597  0BFB  319E  2614         	fcall	_I2C1_FunctionComplete
 18598  0BFD                     i1l5059:	
 18599                           
 18600                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 18601  0BFD  0143               	movlb	3	; select bank3
 18602  0BFE  1611               	bsf	17,4	;volatile
 18603                           
 18604                           ;mcc_generated_files/i2c1.c: 545:             break;
 18605  0BFF  0008               	return
 18606  0C00                     i1l5061:	
 18607                           
 18608                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18609  0C00  3000               	movlw	0
 18610  0C01  319E  2691         	fcall	_I2C1_Stop
 18611                           
 18612                           ;mcc_generated_files/i2c1.c: 552:             break;
 18613  0C03  0008               	return
 18614  0C04                     i1l5063:	
 18615                           
 18616                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 18617  0C04  3001               	movlw	1
 18618  0C05  00F8               	movwf	??_I2C1_ISR
 18619  0C06  0878               	movf	??_I2C1_ISR,w
 18620  0C07  0142               	movlb	2	; select bank2
 18621  0C08  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18622                           
 18623                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 18624  0C09  3006               	movlw	6
 18625  0C0A  319E  2691         	fcall	_I2C1_Stop
 18626                           
 18627                           ;mcc_generated_files/i2c1.c: 560:             break;
 18628  0C0C  0008               	return
 18629  0C0D                     i1l5069:	
 18630  0C0D  0141               	movlb	1	; select bank1
 18631  0C0E  086C               	movf	_i2c1_state^(0+128),w
 18632  0C0F  00F8               	movwf	??_I2C1_ISR
 18633  0C10  01F9               	clrf	??_I2C1_ISR+1
 18634                           
 18635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18636                           ; Switch size 1, requested type "simple"
 18637                           ; Number of cases is 1, Range of values is 0 to 0
 18638                           ; switch strategies available:
 18639                           ; Name         Instructions Cycles
 18640                           ; simple_byte            4     3 (average)
 18641                           ; direct_byte            8     6 (fixed)
 18642                           ; jumptable            260     6 (fixed)
 18643                           ;	Chosen strategy is simple_byte
 18644  0C11  0879               	movf	??_I2C1_ISR+1,w
 18645  0C12  3A00               	xorlw	0	; case 0
 18646  0C13  1903               	skipnz
 18647  0C14  2C16               	goto	i1l6445
 18648  0C15  2C04               	goto	i1l5063
 18649  0C16                     i1l6445:	
 18650                           
 18651                           ; Switch size 1, requested type "simple"
 18652                           ; Number of cases is 11, Range of values is 0 to 11
 18653                           ; switch strategies available:
 18654                           ; Name         Instructions Cycles
 18655                           ; direct_byte           30     6 (fixed)
 18656                           ; simple_byte           34    18 (average)
 18657                           ; jumptable            260     6 (fixed)
 18658                           ;	Chosen strategy is simple_byte
 18659  0C16  0878               	movf	??_I2C1_ISR,w
 18660  0C17  3A00               	xorlw	0	; case 0
 18661  0C18  1903               	skipnz
 18662  0C19  2AEF               	goto	i1l402
 18663  0C1A  3A01               	xorlw	1	; case 1
 18664  0C1B  1903               	skipnz
 18665  0C1C  2B22               	goto	i1l407
 18666  0C1D  3A03               	xorlw	3	; case 2
 18667  0C1E  1903               	skipnz
 18668  0C1F  2B6A               	goto	i1l4989
 18669  0C20  3A01               	xorlw	1	; case 3
 18670  0C21  1903               	skipnz
 18671  0C22  2B93               	goto	i1l424
 18672  0C23  3A07               	xorlw	7	; case 4
 18673  0C24  1903               	skipnz
 18674  0C25  2C00               	goto	i1l5061
 18675  0C26  3A01               	xorlw	1	; case 5
 18676  0C27  1903               	skipnz
 18677  0C28  2BC4               	goto	i1l431
 18678  0C29  3A03               	xorlw	3	; case 6
 18679  0C2A  1903               	skipnz
 18680  0C2B  2BD9               	goto	i1l5043
 18681  0C2C  3A01               	xorlw	1	; case 7
 18682  0C2D  1903               	skipnz
 18683  0C2E  2C00               	goto	i1l5061
 18684  0C2F  3A0F               	xorlw	15	; case 8
 18685  0C30  1903               	skipnz
 18686  0C31  2BE0               	goto	i1l5047
 18687  0C32  3A02               	xorlw	2	; case 10
 18688  0C33  1903               	skipnz
 18689  0C34  2B23               	goto	i1l408
 18690  0C35  3A01               	xorlw	1	; case 11
 18691  0C36  1903               	skipnz
 18692  0C37  2B45               	goto	i1l413
 18693  0C38  2C04               	goto	i1l5063
 18694  0C39  0008               	return
 18695  0C3A                     __end_of_I2C1_ISR:	
 18696                           
 18697                           	psect	text71
 18698  1E91                     __ptext71:	
 18699 ;; *************** function _I2C1_Stop *****************
 18700 ;; Defined at:
 18701 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 18702 ;; Parameters:    Size  Location     Type
 18703 ;;  completion_c    1    wreg     enum E10866
 18704 ;; Auto vars:     Size  Location     Type
 18705 ;;  completion_c    1    1[COMMON] enum E10866
 18706 ;; Return value:  Size  Location     Type
 18707 ;;                  1    wreg      void 
 18708 ;; Registers used:
 18709 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18710 ;; Tracked objects:
 18711 ;;		On entry : 0/0
 18712 ;;		On exit  : 0/0
 18713 ;;		Unchanged: 0/0
 18714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18719 ;;Total ram usage:        2 bytes
 18720 ;; Hardware stack levels used:    1
 18721 ;; This function calls:
 18722 ;;		Nothing
 18723 ;; This function is called by:
 18724 ;;		_I2C1_ISR
 18725 ;; This function uses a non-reentrant model
 18726 ;;
 18727                           
 18728                           
 18729                           ;psect for function _I2C1_Stop
 18730  1E91                     _I2C1_Stop:	
 18731                           
 18732                           ;incstack = 0
 18733                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 18734                           ;I2C1_Stop@completion_code stored from wreg
 18735  1E91  00F7               	movwf	I2C1_Stop@completion_code
 18736                           
 18737                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 18738  1E92  0143               	movlb	3	; select bank3
 18739  1E93  1511               	bsf	17,2	;volatile
 18740                           
 18741                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 18742  1E94  0141               	movlb	1	; select bank1
 18743  1E95  086A               	movf	_p_i2c1_current^(0+128),w
 18744  1E96  3E02               	addlw	2
 18745  1E97  0086               	movwf	6
 18746  1E98  3001               	movlw	1	; select bank2/3
 18747  1E99  0087               	movwf	7
 18748  1E9A  0801               	movf	1,w
 18749  1E9B  1903               	btfsc	3,2
 18750  1E9C  2EA9               	goto	i1l4727
 18751                           
 18752                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 18753  1E9D  0877               	movf	I2C1_Stop@completion_code,w
 18754  1E9E  00F6               	movwf	??_I2C1_Stop
 18755  1E9F  086A               	movf	_p_i2c1_current^(0+128),w
 18756  1EA0  3E02               	addlw	2
 18757  1EA1  0086               	movwf	6
 18758  1EA2  3001               	movlw	1	; select bank2/3
 18759  1EA3  0087               	movwf	7
 18760  1EA4  0801               	movf	1,w
 18761  1EA5  0086               	movwf	6
 18762  1EA6  0187               	clrf	7
 18763  1EA7  0876               	movf	??_I2C1_Stop,w
 18764  1EA8  0081               	movwf	1
 18765  1EA9                     i1l4727:	
 18766                           
 18767                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 18768  1EA9  01EC               	clrf	_i2c1_state^(0+128)
 18769  1EAA  0008               	return
 18770  1EAB                     __end_of_I2C1_Stop:	
 18771                           
 18772                           	psect	text72
 18773  1E14                     __ptext72:	
 18774 ;; *************** function _I2C1_FunctionComplete *****************
 18775 ;; Defined at:
 18776 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 18777 ;; Parameters:    Size  Location     Type
 18778 ;;		None
 18779 ;; Auto vars:     Size  Location     Type
 18780 ;;		None
 18781 ;; Return value:  Size  Location     Type
 18782 ;;                  1    wreg      void 
 18783 ;; Registers used:
 18784 ;;		wreg, status,2, status,0
 18785 ;; Tracked objects:
 18786 ;;		On entry : 0/0
 18787 ;;		On exit  : 0/0
 18788 ;;		Unchanged: 0/0
 18789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18794 ;;Total ram usage:        1 bytes
 18795 ;; Hardware stack levels used:    1
 18796 ;; This function calls:
 18797 ;;		Nothing
 18798 ;; This function is called by:
 18799 ;;		_I2C1_ISR
 18800 ;; This function uses a non-reentrant model
 18801 ;;
 18802                           
 18803                           
 18804                           ;psect for function _I2C1_FunctionComplete
 18805  1E14                     _I2C1_FunctionComplete:	
 18806                           
 18807                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 18808                           
 18809                           ;incstack = 0
 18810                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 18811  1E14  3004               	movlw	4
 18812  1E15  00F6               	movwf	??_I2C1_FunctionComplete
 18813  1E16  0876               	movf	??_I2C1_FunctionComplete,w
 18814  1E17  0141               	movlb	1	; select bank1
 18815  1E18  07EB               	addwf	_p_i2c1_trb_current^(0+128),f
 18816                           
 18817                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 18818  1E19  3001               	movlw	1
 18819  1E1A  0142               	movlb	2	; select bank2
 18820  1E1B  02D9               	subwf	_i2c1_trb_count^(0+256),f
 18821  1E1C  1D03               	btfss	3,2
 18822  1E1D  2E24               	goto	i1l443
 18823                           
 18824                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 18825  1E1E  3004               	movlw	4
 18826  1E1F  00F6               	movwf	??_I2C1_FunctionComplete
 18827  1E20  0876               	movf	??_I2C1_FunctionComplete,w
 18828  1E21  0141               	movlb	1	; select bank1
 18829  1E22  00EC               	movwf	_i2c1_state^(0+128)
 18830                           
 18831                           ;mcc_generated_files/i2c1.c: 575:     }
 18832  1E23  0008               	return
 18833  1E24                     i1l443:	
 18834                           ;mcc_generated_files/i2c1.c: 576:     else
 18835                           
 18836                           
 18837                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 18838  1E24  0141               	movlb	1	; select bank1
 18839  1E25  01EC               	clrf	_i2c1_state^(0+128)
 18840  1E26  0AEC               	incf	_i2c1_state^(0+128),f
 18841  1E27  0008               	return
 18842  1E28                     __end_of_I2C1_FunctionComplete:	
 18843                           
 18844                           	psect	text73
 18845  1D38                     __ptext73:	
 18846 ;; *************** function _I2C1_BusCollisionISR *****************
 18847 ;; Defined at:
 18848 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 18849 ;; Parameters:    Size  Location     Type
 18850 ;;		None
 18851 ;; Auto vars:     Size  Location     Type
 18852 ;;		None
 18853 ;; Return value:  Size  Location     Type
 18854 ;;                  1    wreg      void 
 18855 ;; Registers used:
 18856 ;;		None
 18857 ;; Tracked objects:
 18858 ;;		On entry : 0/0
 18859 ;;		On exit  : 0/0
 18860 ;;		Unchanged: 0/0
 18861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18866 ;;Total ram usage:        0 bytes
 18867 ;; Hardware stack levels used:    1
 18868 ;; This function calls:
 18869 ;;		Nothing
 18870 ;; This function is called by:
 18871 ;;		_INTERRUPT_InterruptManager
 18872 ;; This function uses a non-reentrant model
 18873 ;;
 18874                           
 18875                           
 18876                           ;psect for function _I2C1_BusCollisionISR
 18877  1D38                     _I2C1_BusCollisionISR:	
 18878                           
 18879                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 18880                           
 18881                           ;incstack = 0
 18882                           ; Regs used in _I2C1_BusCollisionISR: []
 18883  1D38  014E               	movlb	14	; select bank14
 18884  1D39  108F               	bcf	15,1	;volatile
 18885  1D3A  0008               	return
 18886  1D3B                     __end_of_I2C1_BusCollisionISR:	
 18887                           
 18888                           	psect	text74
 18889  1EAB                     __ptext74:	
 18890 ;; *************** function _EUSART1_Transmit_ISR *****************
 18891 ;; Defined at:
 18892 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 18893 ;; Parameters:    Size  Location     Type
 18894 ;;		None
 18895 ;; Auto vars:     Size  Location     Type
 18896 ;;		None
 18897 ;; Return value:  Size  Location     Type
 18898 ;;                  1    wreg      void 
 18899 ;; Registers used:
 18900 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18901 ;; Tracked objects:
 18902 ;;		On entry : 0/0
 18903 ;;		On exit  : 0/0
 18904 ;;		Unchanged: 0/0
 18905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18910 ;;Total ram usage:        1 bytes
 18911 ;; Hardware stack levels used:    1
 18912 ;; This function calls:
 18913 ;;		Nothing
 18914 ;; This function is called by:
 18915 ;;		_EUSART1_Initialize
 18916 ;;		_INTERRUPT_InterruptManager
 18917 ;; This function uses a non-reentrant model
 18918 ;;
 18919                           
 18920                           
 18921                           ;psect for function _EUSART1_Transmit_ISR
 18922  1EAB                     _EUSART1_Transmit_ISR:	
 18923                           
 18924                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 18925                           
 18926                           ;incstack = 0
 18927                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18928  1EAB  3008               	movlw	8
 18929  1EAC  0142               	movlb	2	; select bank2
 18930  1EAD  026F               	subwf	_eusart1TxBufferRemaining^(0+256),w	;volatile
 18931  1EAE  1803               	skipnc
 18932  1EAF  2EC4               	goto	i1l106
 18933                           
 18934                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 18935  1EB0  0872               	movf	_eusart1TxTail,w
 18936  1EB1  3EBA               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 18937  1EB2  0086               	movwf	6
 18938  1EB3  3001               	movlw	1	; select bank3/4
 18939  1EB4  0087               	movwf	7
 18940  1EB5  0801               	movf	1,w
 18941  1EB6  009A               	movwf	26	;volatile
 18942  1EB7  3001               	movlw	1
 18943  1EB8  00F6               	movwf	??_EUSART1_Transmit_ISR
 18944  1EB9  0876               	movf	??_EUSART1_Transmit_ISR,w
 18945  1EBA  07F2               	addwf	_eusart1TxTail,f	;volatile
 18946                           
 18947                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 18948  1EBB  3008               	movlw	8
 18949  1EBC  0272               	subwf	_eusart1TxTail,w	;volatile
 18950  1EBD  1803               	btfsc	3,0
 18951                           
 18952                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 18953  1EBE  01F2               	clrf	_eusart1TxTail	;volatile
 18954                           
 18955                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 18956  1EBF  3001               	movlw	1
 18957  1EC0  00F6               	movwf	??_EUSART1_Transmit_ISR
 18958  1EC1  0876               	movf	??_EUSART1_Transmit_ISR,w
 18959  1EC2  07EF               	addwf	_eusart1TxBufferRemaining^(0+256),f	;volatile
 18960                           
 18961                           ;mcc_generated_files/eusart1.c: 206:     }
 18962  1EC3  0008               	return
 18963  1EC4                     i1l106:	
 18964                           ;mcc_generated_files/eusart1.c: 207:     else
 18965                           
 18966                           
 18967                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 18968  1EC4  014E               	movlb	14	; select bank14
 18969  1EC5  1219               	bcf	25,4	;volatile
 18970  1EC6  0008               	return
 18971  1EC7                     __end_of_EUSART1_Transmit_ISR:	
 18972                           
 18973                           	psect	text75
 18974  1FDC                     __ptext75:	
 18975 ;; *************** function _DMX_ISR *****************
 18976 ;; Defined at:
 18977 ;;		line 13 in file "dmx.c"
 18978 ;; Parameters:    Size  Location     Type
 18979 ;;		None
 18980 ;; Auto vars:     Size  Location     Type
 18981 ;;		None
 18982 ;; Return value:  Size  Location     Type
 18983 ;;                  1    wreg      void 
 18984 ;; Registers used:
 18985 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18986 ;; Tracked objects:
 18987 ;;		On entry : 0/0
 18988 ;;		On exit  : 0/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18994 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18995 ;;Total ram usage:        4 bytes
 18996 ;; Hardware stack levels used:    1
 18997 ;; This function calls:
 18998 ;;		Nothing
 18999 ;; This function is called by:
 19000 ;;		_main
 19001 ;;		_INTERRUPT_InterruptManager
 19002 ;; This function uses a non-reentrant model
 19003 ;;
 19004                           
 19005                           
 19006                           ;psect for function _DMX_ISR
 19007  1FDC                     _DMX_ISR:	
 19008                           
 19009                           ;dmx.c: 14:         LATB6 = 1;
 19010                           
 19011                           ;incstack = 0
 19012                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 19013  1FDC  0140               	movlb	0	; select bank0
 19014  1FDD  1719               	bsf	25,6	;volatile
 19015                           
 19016                           ;dmx.c: 15:         LATB6 = 0;
 19017  1FDE  1319               	bcf	25,6	;volatile
 19018                           
 19019                           ;dmx.c: 16:     if (RC1STAbits.FERR) {
 19020  1FDF  0142               	movlb	2	; select bank2
 19021  1FE0  1D1D               	btfss	29,2	;volatile
 19022  1FE1  2FE7               	goto	i1l5229
 19023                           
 19024                           ;dmx.c: 18:         dmxPointer = 0;
 19025  1FE2  01BB               	clrf	_dmxPointer^(0+256)
 19026  1FE3  01BC               	clrf	(_dmxPointer+1)^(0+256)
 19027                           
 19028                           ;dmx.c: 19:         offCheck = 1;
 19029  1FE4  01CE               	clrf	_offCheck^(0+256)
 19030  1FE5  0ACE               	incf	_offCheck^(0+256),f
 19031                           
 19032                           ;dmx.c: 20:     } else {
 19033  1FE6  2FEB               	goto	i1l5231
 19034  1FE7                     i1l5229:	
 19035                           
 19036                           ;dmx.c: 21:         dmxPointer++;
 19037  1FE7  3001               	movlw	1
 19038  1FE8  07BB               	addwf	_dmxPointer^(0+256),f
 19039  1FE9  3000               	movlw	0
 19040  1FEA  3DBC               	addwfc	(_dmxPointer+1)^(0+256),f
 19041  1FEB                     i1l5231:	
 19042                           
 19043                           ;dmx.c: 23:     dmxData[dmxPointer] = RC1REG;
 19044  1FEB  30EF               	movlw	239
 19045  1FEC  00F6               	movwf	??_DMX_ISR
 19046  1FED  3025               	movlw	37
 19047  1FEE  00F7               	movwf	??_DMX_ISR+1
 19048  1FEF  083B               	movf	_dmxPointer^(0+256),w
 19049  1FF0  0776               	addwf	??_DMX_ISR,w
 19050  1FF1  00F8               	movwf	??_DMX_ISR+2
 19051  1FF2  083C               	movf	(_dmxPointer+1)^(0+256),w
 19052  1FF3  3D77               	addwfc	??_DMX_ISR+1,w
 19053  1FF4  00F9               	movwf	??_DMX_ISR+3
 19054  1FF5  0878               	movf	??_DMX_ISR+2,w
 19055  1FF6  0086               	movwf	6
 19056  1FF7  0879               	movf	??_DMX_ISR+3,w
 19057  1FF8  0087               	movwf	7
 19058  1FF9  0819               	movf	25,w	;volatile
 19059  1FFA  0081               	movwf	1
 19060                           
 19061                           ;dmx.c: 25:     if (RC1STAbits.OERR) {
 19062  1FFB  1C9D               	btfss	29,1	;volatile
 19063  1FFC  0008               	return
 19064                           
 19065                           ;dmx.c: 26:         RC1STAbits.CREN = 0;
 19066  1FFD  121D               	bcf	29,4	;volatile
 19067                           
 19068                           ;dmx.c: 27:         RC1STAbits.CREN = 1;
 19069  1FFE  161D               	bsf	29,4	;volatile
 19070  1FFF  0008               	return
 19071  2000                     __end_of_DMX_ISR:	
 19072                           
 19073                           	psect	text76
 19074  11B3                     __ptext76:	
 19075 ;; *************** function _EUSART1_Receive_ISR *****************
 19076 ;; Defined at:
 19077 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 19078 ;; Parameters:    Size  Location     Type
 19079 ;;		None
 19080 ;; Auto vars:     Size  Location     Type
 19081 ;;		None
 19082 ;; Return value:  Size  Location     Type
 19083 ;;                  1    wreg      void 
 19084 ;; Registers used:
 19085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19086 ;; Tracked objects:
 19087 ;;		On entry : 0/0
 19088 ;;		On exit  : 0/0
 19089 ;;		Unchanged: 0/0
 19090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19095 ;;Total ram usage:        0 bytes
 19096 ;; Hardware stack levels used:    1
 19097 ;; Hardware stack levels required when called:    2
 19098 ;; This function calls:
 19099 ;;		Absolute function
 19100 ;;		_EUSART1_DefaultErrorHandler
 19101 ;;		_EUSART1_DefaultFramingErrorHandler
 19102 ;;		_EUSART1_DefaultOverrunErrorHandler
 19103 ;;		_EUSART1_RxDataHandler
 19104 ;; This function is called by:
 19105 ;;		_EUSART1_Initialize
 19106 ;;		_INTERRUPT_InterruptManager
 19107 ;; This function uses a non-reentrant model
 19108 ;;
 19109                           
 19110                           
 19111                           ;psect for function _EUSART1_Receive_ISR
 19112  11B3                     _EUSART1_Receive_ISR:	
 19113                           
 19114                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 19115                           
 19116                           ;incstack = 0
 19117                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19118  11B3  0871               	movf	_eusart1RxHead,w	;volatile
 19119  11B4  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19120  11B5  0086               	movwf	6
 19121  11B6  3001               	movlw	1	; select bank3/4
 19122  11B7  0087               	movwf	7
 19123  11B8  0181               	clrf	1
 19124                           
 19125                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 19126  11B9  0142               	movlb	2	; select bank2
 19127  11BA  1D1D               	btfss	29,2	;volatile
 19128  11BB  29C8               	goto	i1l4899
 19129                           
 19130                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 19131  11BC  0871               	movf	_eusart1RxHead,w	;volatile
 19132  11BD  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19133  11BE  0086               	movwf	6
 19134  11BF  3001               	movlw	1	; select bank3/4
 19135  11C0  0087               	movwf	7
 19136  11C1  1481               	bsf	1,1
 19137                           
 19138                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 19139  11C2  0143               	movlb	3	; select bank3
 19140  11C3  0863               	movf	(_EUSART1_FramingErrorHandler+1)^(0+384),w
 19141  11C4  008A               	movwf	10
 19142  11C5  0862               	movf	_EUSART1_FramingErrorHandler^(0+384),w
 19143  11C6  000A               	callw
 19144  11C7  3191               	pagesel	$
 19145  11C8                     i1l4899:	
 19146                           
 19147                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 19148  11C8  0142               	movlb	2	; select bank2
 19149  11C9  1C9D               	btfss	29,1	;volatile
 19150  11CA  29D7               	goto	i1l4905
 19151                           
 19152                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 19153  11CB  0871               	movf	_eusart1RxHead,w	;volatile
 19154  11CC  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19155  11CD  0086               	movwf	6
 19156  11CE  3001               	movlw	1	; select bank3/4
 19157  11CF  0087               	movwf	7
 19158  11D0  1501               	bsf	1,2
 19159                           
 19160                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 19161  11D1  0143               	movlb	3	; select bank3
 19162  11D2  0861               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+384),w
 19163  11D3  008A               	movwf	10
 19164  11D4  0860               	movf	_EUSART1_OverrunErrorHandler^(0+384),w
 19165  11D5  000A               	callw
 19166  11D6  3191               	pagesel	$
 19167  11D7                     i1l4905:	
 19168                           
 19169                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 19170  11D7  0871               	movf	_eusart1RxHead,w	;volatile
 19171  11D8  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19172  11D9  0086               	movwf	6
 19173  11DA  3001               	movlw	1	; select bank3/4
 19174  11DB  0087               	movwf	7
 19175  11DC  0801               	movf	1,w
 19176  11DD  1903               	btfsc	3,2
 19177  11DE  29E6               	goto	i1l4909
 19178                           
 19179                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 19180  11DF  0143               	movlb	3	; select bank3
 19181  11E0  085F               	movf	(_EUSART1_ErrorHandler+1)^(0+384),w
 19182  11E1  008A               	movwf	10
 19183  11E2  085E               	movf	_EUSART1_ErrorHandler^(0+384),w
 19184  11E3  000A               	callw
 19185  11E4  3191               	pagesel	$
 19186                           
 19187                           ;mcc_generated_files/eusart1.c: 230:     } else {
 19188  11E5  0008               	return
 19189  11E6                     i1l4909:	
 19190                           
 19191                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 19192  11E6  3188  2000         	fcall	_EUSART1_RxDataHandler
 19193  11E8  0008               	return
 19194  11E9                     __end_of_EUSART1_Receive_ISR:	
 19195                           
 19196                           	psect	text77
 19197  1D45                     __ptext77:	
 19198 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 19199 ;; Defined at:
 19200 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 19201 ;; Parameters:    Size  Location     Type
 19202 ;;		None
 19203 ;; Auto vars:     Size  Location     Type
 19204 ;;		None
 19205 ;; Return value:  Size  Location     Type
 19206 ;;                  1    wreg      void 
 19207 ;; Registers used:
 19208 ;;		None
 19209 ;; Tracked objects:
 19210 ;;		On entry : 0/0
 19211 ;;		On exit  : 0/0
 19212 ;;		Unchanged: 0/0
 19213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19218 ;;Total ram usage:        0 bytes
 19219 ;; Hardware stack levels used:    1
 19220 ;; This function calls:
 19221 ;;		Nothing
 19222 ;; This function is called by:
 19223 ;;		_EUSART1_Initialize
 19224 ;;		_EUSART1_Receive_ISR
 19225 ;; This function uses a non-reentrant model
 19226 ;;
 19227                           
 19228                           
 19229                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 19230  1D45                     _EUSART1_DefaultOverrunErrorHandler:	
 19231                           
 19232                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 19233                           
 19234                           ;incstack = 0
 19235                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 19236  1D45  0142               	movlb	2	; select bank2
 19237  1D46  121D               	bcf	29,4	;volatile
 19238                           
 19239                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 19240  1D47  161D               	bsf	29,4	;volatile
 19241  1D48  0008               	return
 19242  1D49                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 19243                           
 19244                           	psect	text78
 19245  1D33                     __ptext78:	
 19246 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 19247 ;; Defined at:
 19248 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 19249 ;; Parameters:    Size  Location     Type
 19250 ;;		None
 19251 ;; Auto vars:     Size  Location     Type
 19252 ;;		None
 19253 ;; Return value:  Size  Location     Type
 19254 ;;                  1    wreg      void 
 19255 ;; Registers used:
 19256 ;;		None
 19257 ;; Tracked objects:
 19258 ;;		On entry : 0/0
 19259 ;;		On exit  : 0/0
 19260 ;;		Unchanged: 0/0
 19261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19266 ;;Total ram usage:        0 bytes
 19267 ;; Hardware stack levels used:    1
 19268 ;; This function calls:
 19269 ;;		Nothing
 19270 ;; This function is called by:
 19271 ;;		_EUSART1_Initialize
 19272 ;;		_EUSART1_Receive_ISR
 19273 ;; This function uses a non-reentrant model
 19274 ;;
 19275                           
 19276                           
 19277                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 19278  1D33                     _EUSART1_DefaultFramingErrorHandler:	
 19279                           
 19280                           ;incstack = 0
 19281                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 19282  1D33  0008               	return
 19283  1D34                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 19284                           
 19285                           	psect	text79
 19286  1D35                     __ptext79:	
 19287 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 19288 ;; Defined at:
 19289 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 19290 ;; Parameters:    Size  Location     Type
 19291 ;;		None
 19292 ;; Auto vars:     Size  Location     Type
 19293 ;;		None
 19294 ;; Return value:  Size  Location     Type
 19295 ;;                  1    wreg      void 
 19296 ;; Registers used:
 19297 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19298 ;; Tracked objects:
 19299 ;;		On entry : 0/0
 19300 ;;		On exit  : 0/0
 19301 ;;		Unchanged: 0/0
 19302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19307 ;;Total ram usage:        0 bytes
 19308 ;; Hardware stack levels used:    1
 19309 ;; Hardware stack levels required when called:    1
 19310 ;; This function calls:
 19311 ;;		_EUSART1_RxDataHandler
 19312 ;; This function is called by:
 19313 ;;		_EUSART1_Initialize
 19314 ;;		_EUSART1_Receive_ISR
 19315 ;; This function uses a non-reentrant model
 19316 ;;
 19317                           
 19318                           
 19319                           ;psect for function _EUSART1_DefaultErrorHandler
 19320  1D35                     _EUSART1_DefaultErrorHandler:	
 19321                           
 19322                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 19323                           
 19324                           ;incstack = 0
 19325                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19326  1D35  3188  2000         	fcall	_EUSART1_RxDataHandler
 19327  1D37  0008               	return
 19328  1D38                     __end_of_EUSART1_DefaultErrorHandler:	
 19329                           
 19330                           	psect	text80
 19331  0800                     __ptext80:	
 19332 ;; *************** function _EUSART1_RxDataHandler *****************
 19333 ;; Defined at:
 19334 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 19335 ;; Parameters:    Size  Location     Type
 19336 ;;		None
 19337 ;; Auto vars:     Size  Location     Type
 19338 ;;		None
 19339 ;; Return value:  Size  Location     Type
 19340 ;;                  1    wreg      void 
 19341 ;; Registers used:
 19342 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19343 ;; Tracked objects:
 19344 ;;		On entry : 0/0
 19345 ;;		On exit  : 0/0
 19346 ;;		Unchanged: 0/0
 19347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19351 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19352 ;;Total ram usage:        1 bytes
 19353 ;; Hardware stack levels used:    1
 19354 ;; This function calls:
 19355 ;;		Nothing
 19356 ;; This function is called by:
 19357 ;;		_EUSART1_Receive_ISR
 19358 ;;		_EUSART1_DefaultErrorHandler
 19359 ;; This function uses a non-reentrant model
 19360 ;;
 19361                           
 19362                           
 19363                           ;psect for function _EUSART1_RxDataHandler
 19364  0800                     _EUSART1_RxDataHandler:	
 19365                           
 19366                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 19367                           
 19368                           ;incstack = 0
 19369                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 19370  0800  0142               	movlb	2	; select bank2
 19371  0801  0819               	movf	25,w	;volatile
 19372  0802  00F6               	movwf	??_EUSART1_RxDataHandler
 19373  0803  0871               	movf	_eusart1RxHead,w
 19374  0804  3EB2               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 19375  0805  0086               	movwf	6
 19376  0806  3001               	movlw	1	; select bank3/4
 19377  0807  0087               	movwf	7
 19378  0808  0876               	movf	??_EUSART1_RxDataHandler,w
 19379  0809  0081               	movwf	1
 19380  080A  3001               	movlw	1
 19381  080B  00F6               	movwf	??_EUSART1_RxDataHandler
 19382  080C  0876               	movf	??_EUSART1_RxDataHandler,w
 19383  080D  07F1               	addwf	_eusart1RxHead,f	;volatile
 19384                           
 19385                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 19386  080E  3008               	movlw	8
 19387  080F  0271               	subwf	_eusart1RxHead,w	;volatile
 19388  0810  1803               	btfsc	3,0
 19389                           
 19390                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 19391  0811  01F1               	clrf	_eusart1RxHead	;volatile
 19392                           
 19393                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 19394  0812  3001               	movlw	1
 19395  0813  00F6               	movwf	??_EUSART1_RxDataHandler
 19396  0814  0876               	movf	??_EUSART1_RxDataHandler,w
 19397  0815  0141               	movlb	1	; select bank1
 19398  0816  07ED               	addwf	_eusart1RxCount^(0+128),f	;volatile
 19399  0817  0008               	return
 19400  0818                     __end_of_EUSART1_RxDataHandler:	
 19401                           
 19402                           	psect	text81
 19403  1000                     __ptext81:	
 19404 ;; *************** function _ADCC_ThresholdISR *****************
 19405 ;; Defined at:
 19406 ;;		line 308 in file "mcc_generated_files/adcc.c"
 19407 ;; Parameters:    Size  Location     Type
 19408 ;;		None
 19409 ;; Auto vars:     Size  Location     Type
 19410 ;;		None
 19411 ;; Return value:  Size  Location     Type
 19412 ;;                  1    wreg      void 
 19413 ;; Registers used:
 19414 ;;		wreg, status,2, status,0, pclath, cstack
 19415 ;; Tracked objects:
 19416 ;;		On entry : 0/0
 19417 ;;		On exit  : 0/0
 19418 ;;		Unchanged: 0/0
 19419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19424 ;;Total ram usage:        0 bytes
 19425 ;; Hardware stack levels used:    1
 19426 ;; Hardware stack levels required when called:    1
 19427 ;; This function calls:
 19428 ;;		Absolute function
 19429 ;;		_ADCC_DefaultInterruptHandler
 19430 ;;		_adcThresholdHandler
 19431 ;; This function is called by:
 19432 ;;		_INTERRUPT_InterruptManager
 19433 ;; This function uses a non-reentrant model
 19434 ;;
 19435                           
 19436                           
 19437                           ;psect for function _ADCC_ThresholdISR
 19438  1000                     _ADCC_ThresholdISR:	
 19439                           
 19440                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 19441                           
 19442                           ;incstack = 0
 19443                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 19444  1000  014E               	movlb	14	; select bank14
 19445  1001  108D               	bcf	13,1	;volatile
 19446                           
 19447                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 19448  1002  0142               	movlb	2	; select bank2
 19449  1003  0869               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19450  1004  046A               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19451  1005  1903               	btfsc	3,2
 19452  1006  0008               	return
 19453                           
 19454                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 19455  1007  086A               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19456  1008  008A               	movwf	10
 19457  1009  0869               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19458  100A  000A               	callw
 19459  100B  3190               	pagesel	$
 19460  100C  0008               	return
 19461  100D                     __end_of_ADCC_ThresholdISR:	
 19462                           
 19463                           	psect	text82
 19464  1D32                     __ptext82:	
 19465 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 19466 ;; Defined at:
 19467 ;;		line 320 in file "mcc_generated_files/adcc.c"
 19468 ;; Parameters:    Size  Location     Type
 19469 ;;		None
 19470 ;; Auto vars:     Size  Location     Type
 19471 ;;		None
 19472 ;; Return value:  Size  Location     Type
 19473 ;;                  1    wreg      void 
 19474 ;; Registers used:
 19475 ;;		None
 19476 ;; Tracked objects:
 19477 ;;		On entry : 0/0
 19478 ;;		On exit  : 0/0
 19479 ;;		Unchanged: 0/0
 19480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19485 ;;Total ram usage:        0 bytes
 19486 ;; Hardware stack levels used:    1
 19487 ;; This function calls:
 19488 ;;		Nothing
 19489 ;; This function is called by:
 19490 ;;		_ADCC_Initialize
 19491 ;;		_ADCC_ThresholdISR
 19492 ;; This function uses a non-reentrant model
 19493 ;;
 19494                           
 19495                           
 19496                           ;psect for function _ADCC_DefaultInterruptHandler
 19497  1D32                     _ADCC_DefaultInterruptHandler:	
 19498                           
 19499                           ;incstack = 0
 19500                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 19501  1D32  0008               	return
 19502  1D33                     __end_of_ADCC_DefaultInterruptHandler:	
 19503                           
 19504                           	psect	text83
 19505  1D41                     __ptext83:	
 19506 ;; *************** function _adcThresholdHandler *****************
 19507 ;; Defined at:
 19508 ;;		line 27 in file "beat.c"
 19509 ;; Parameters:    Size  Location     Type
 19510 ;;		None
 19511 ;; Auto vars:     Size  Location     Type
 19512 ;;		None
 19513 ;; Return value:  Size  Location     Type
 19514 ;;                  1    wreg      void 
 19515 ;; Registers used:
 19516 ;;		None
 19517 ;; Tracked objects:
 19518 ;;		On entry : 0/0
 19519 ;;		On exit  : 0/0
 19520 ;;		Unchanged: 0/0
 19521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19526 ;;Total ram usage:        0 bytes
 19527 ;; Hardware stack levels used:    1
 19528 ;; This function calls:
 19529 ;;		Nothing
 19530 ;; This function is called by:
 19531 ;;		_BEAT_init
 19532 ;;		_ADCC_ThresholdISR
 19533 ;; This function uses a non-reentrant model
 19534 ;;
 19535                           
 19536                           
 19537                           ;psect for function _adcThresholdHandler
 19538  1D41                     _adcThresholdHandler:	
 19539                           
 19540                           ;beat.c: 28:     thresholdExceeded = 1;
 19541                           
 19542                           ;incstack = 0
 19543                           ; Regs used in _adcThresholdHandler: []
 19544  1D41  0141               	movlb	1	; select bank1
 19545  1D42  01E9               	clrf	_thresholdExceeded^(0+128)
 19546  1D43  0AE9               	incf	_thresholdExceeded^(0+128),f
 19547  1D44  0008               	return
 19548  1D45                     __end_of_adcThresholdHandler:	
 19549  007E                     btemp	set	126	;btemp
 19550  007E                     int$flags	set	126
 19551  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        33
    BSS         147
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     73      80
    BANK2            80      0      80
    BANK3            80      2      72
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    numControl_Set@val	PTR int  size(2) Largest target is 2
		 -> pulseSpeed(BANK2[2]), cycleSpeed(BANK2[2]), address(BANK1[2]), 

    decrement@val	PTR int  size(2) Largest target is 2
		 -> pulseSpeed(BANK2[2]), cycleSpeed(BANK2[2]), address(BANK1[2]), 

    increment@val	PTR int  size(2) Largest target is 2
		 -> pulseSpeed(BANK2[2]), cycleSpeed(BANK2[2]), address(BANK1[2]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    S1461$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MENU_task->_pulseColors
    _menuButtons->_BUTTONS_isClicked
    _numControl_resetTimer->_CLOCK_getTime
    _numControl_Set->_decrement
    _numControl_Set->_increment
    _increment->_TM1650_fastPrintNum
    _decrement->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _LED_DMX->_LED_setColor
    _LED_setHSL->_HueToRGB
    ___xxtofl->___awdiv
    ___fltol->_HueToRGB
    ___fleq->___xxtofl
    ___fldiv->___xxtofl
    _HueToRGB->___flge
    ___flsub->___flmul
    ___fladd->__Umul8_16
    ___flmul->___fladd
    ___flge->___flmul
    _BEAT_task->___lwdiv
    _DMX_task->_CLOCK_getTime
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MENU_task
    _MENU_task->_cycleColors
    _pulseColors->_LED_setHSL
    _cycleColors->_LED_setHSL
    _LED_Beat->_fadeColor
    _fadeColor->_LED_setHSL
    _LED_setHSL->___fltol
    ___fltol->_HueToRGB

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  182864
                                              0 BANK3      2     2      0
                          _BEAT_init
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                           _DMX_task
      _EUSART1_SetRxInterruptHandler
                          _MENU_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MENU_task                                            1     1      0  176890
                                             72 BANK1      1     1      0
                          _BEAT_task
                           _LED_Beat
                            _LED_DMX
                      _TM1650_enable
                    _TM1650_setDigit
                        _cycleColors
                            _isDMXOn
                        _menuButtons
                     _numControl_Set
                        _pulseColors
 ---------------------------------------------------------------------------------
 (2) _pulseColors                                          1     1      0   62174
                                             79 BANK0      1     1      0
                         _LED_setHSL
                            ___awdiv
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flsub
                           ___xxtofl
                     _numControl_Set
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _menuButtons                                          0     0      0     201
                  _BUTTONS_isClicked
              _numControl_resetTimer
 ---------------------------------------------------------------------------------
 (3) _numControl_resetTimer                                0     0      0       0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (2) _isDMXOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cycleColors                                         14    14      0   53149
                                             58 BANK1     14    14      0
                      _CLOCK_getTime
                         _LED_setHSL
                     _numControl_Set
 ---------------------------------------------------------------------------------
 (3) _numControl_Set                                      12     4      8   16364
                                             45 BANK0     12     4      8
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                          _decrement
                          _increment
 ---------------------------------------------------------------------------------
 (4) _increment                                           11     3      8    6434
                                             34 BANK0     11     3      8
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (4) _decrement                                           11     3      8    6434
                                             34 BANK0     11     3      8
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (5) _TM1650_fastPrintNum                                  7     5      2    5907
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _TM1650_setDigit                                      7     4      3    4392
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BUTTONS_isClicked                                    4     1      3     201
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _LED_DMX                                             11    11      0     948
                                             22 BANK0     11    11      0
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_Beat                                             0     0      0   36674
                      _BEAT_detected
                          _fadeColor
 ---------------------------------------------------------------------------------
 (3) _fadeColor                                            4     4      0   36674
                                             58 BANK1      4     4      0
                      _CLOCK_getTime
                         _LED_setHSL
 ---------------------------------------------------------------------------------
 (3) _LED_setHSL                                          43    33     10   36609
                                             15 BANK1     43    33     10
                           _HueToRGB
                       _LED_setColor
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              9 BANK0     14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     697
                                              4 BANK1     11     7      4
                           _HueToRGB (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                             23 BANK0     12     4      8
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                             23 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _LED_setColor                                        22    19      3     948
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (4) _HueToRGB                                            16     4     12   16255
                                             67 BANK0     12     0     12
                                              0 BANK1      4     4      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4705
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3200
                                              9 BANK0     20    12      8
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    5693
                                             29 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1246
                                             55 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_task                                             4     4      0      65
                                              2 BANK0      4     4      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (4) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (13) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (13) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _DMX_task
     _CLOCK_getTime
   _EUSART1_SetRxInterruptHandler
   _MENU_task
     _BEAT_task
       _ADCC_SetUpperThreshold
       _CLOCK_getTime
       _TM1650_isEnabled
       ___lwdiv
     _LED_Beat
       _BEAT_detected
       _fadeColor
         _CLOCK_getTime
         _LED_setHSL
           _HueToRGB
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           _LED_setColor
           ___fladd
             __Umul8_16 (ARG)
           ___fldiv
             ___xxtofl (ARG)
               ___awdiv (ARG)
           ___fleq
             ___awdiv (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___xxtofl
             ___awdiv (ARG)
     _LED_DMX
       _LED_setColor
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _TM1650_setDigit
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _cycleColors
       _CLOCK_getTime
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___awdiv (ARG)
         ___fleq
           ___awdiv (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
           ___awdiv (ARG)
       _numControl_Set
         _BUTTONS_isClicked
         _CLOCK_getTime
         _TM1650_enable
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         _decrement
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
         _increment
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
     _isDMXOn
     _menuButtons
       _BUTTONS_isClicked
       _numControl_resetTimer
         _CLOCK_getTime
     _numControl_Set
       _BUTTONS_isClicked
       _CLOCK_getTime
       _TM1650_enable
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       _decrement
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
       _increment
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
     _pulseColors
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___awdiv (ARG)
         ___fleq
           ___awdiv (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
           ___awdiv (ARG)
       ___awdiv
       ___fldiv
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___fleq
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
       ___xxtofl
         ___awdiv (ARG)
       _numControl_Set
         _BUTTONS_isClicked
         _CLOCK_getTime
         _TM1650_enable
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         _decrement
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
         _increment
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     164       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     49      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      2      48      12       90.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      20      14       40.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     164      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 01 00:42:03 2019

                                   _pulseColors 09A9                        _eusart1TxBufferRemaining 016F  
                                  ___fldiv@aexp 0050                                    ___fldiv@bexp 004F  
                      ??_ADCC_SetUpperThreshold 0022                                    ___fldiv@sign 0048  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0076  
                                  ___awdiv@sign 0026                                      HueToRGB@v1 0063  
                                    HueToRGB@v2 0067                                      HueToRGB@vH 006B  
                                            _up 0154                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00D9                             __Umul8_16@word_mpld 0026  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 1D41  
                                           l802 1786                                             l804 17E9  
                                           l970 0E82                                             l969 0E4F  
                                           _bpm 0141                         __size_of_PMD_Initialize 000A  
                         _numControl_resetTimer 1DD6                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                    ?_cycleColors 0076  
                                  ___flmul@aexp 004B                                    ___flmul@bexp 0050  
                                   ?_LED_setHSL 00AF                                    ___flmul@sign 004A  
                                  ___flmul@temp 0055                                    ___flmul@prod 0051  
                                 __CFG_BBEN$OFF 0000                                 __end_of_LED_DMX 1334  
                               __end_of_DMX_ISR 2000                                __end_of_I2C1_ISR 0C3A  
                                  ___fltol@exp1 00AE                                            l1000 13B1  
                                          l1074 0A07                                            l1452 12BD  
                                          l1461 151E                                            l1605 0D9D  
                                          l1453 12D7                                            l1464 156C  
                                          l1640 066D                                            l1626 0E14  
                                          l1618 0DFC                                            l1731 166A  
                                          l1484 146D                                            l1732 1674  
                                          l1724 1656                                            l1661 0774  
                                          l1590 0CFD                                            l1662 078C  
                                          l1718 1620                                            l4311 06F8  
                                          l1584 0C87                                            l1664 0799  
                                          l1737 1F89                                            l4305 06DF  
                                          l4313 06C1                                            l4331 071A  
                                          l4315 06FD                                            l4251 0649  
                                          l4411 168F                                            l1692 0617  
                                          l1588 0D1A                                            l3701 0C54  
                                          l4341 0733                                            l4245 063E  
                          _ADCC_StartConversion 1D72                                            l4351 075C  
                                          l4191 12E9                                            l6113 093F  
                                          l3801 0D3C                                            l3705 0C57  
                                          l4337 0731                                            l4329 0703  
                                          l4265 0662                                            l4249 0641  
                                          l6115 0952                                            l3707 0C5F  
                                          l5403 107E                                            l6203 0A9D  
                                          l3725 0C7C                                            l4365 0795  
                                          l4285 0698                                            l4269 0665  
                                          l3903 1538                                            l5415 1F83  
                                          l3735 0C91                                            l4279 068C  
                                          l4383 162F                                            l6129 0986  
                                          l5513 0435                                            l3841 0DC3  
                                          l3809 0D4B                                            l3729 0C7F  
                                          l4377 1618                                            l6145 1E0D  
                                          l5409 1F16                                            l3907 1552  
                                          l5603 05ED                                            l5515 0437  
                                          l3835 0DBC                                            l3827 0DAF  
                                          l3819 0D95                                            l3843 0DC5  
                                          l4387 1633                                            l5445 1106  
                                          l5437 10E8                                            l6093 0904  
                                          l5525 044D                                            l5517 043F  
                                          l3853 0DD0                                            l3773 0D05  
                                          l3765 0CCD                                            l4397 1668  
                                          l4389 1643                                            l5373 1D4D  
                                          l5461 108C                                            l6309 08CD  
                                          l5439 10F4                                            l3871 0E0C  
                                          l3791 0D28                                            l3775 0D07  
                                          l3783 0D15                                            l4399 165B  
                                          l5391 07E0                                            l5463 1098  
                                          l5471 10AD                                            l5631 14C4  
                                          l6175 15C6                                            l6159 1F34  
                                          l6407 11A9                                            l6353 1750  
                                          l6337 121E                                            l6329 1213  
                                          l5449 110F                                            l6097 090B  
                                          l5609 0604                                            l3849 0DCE  
                                          l5393 07E6                                            l5625 14C0  
                                          l6177 15CA                                            l6265 0835  
                                          l3875 0E10                                            l5651 0F1D  
                                          l5715 145B                                            l5387 07D9  
                                          l5467 10A4                                            l6195 0A03  
                                          l6291 0889                                            l6275 0848  
                                          l6373 17D3                                            l6365 17A7  
                                          l5725 147A                                            l5717 1469  
                                          l5805 1133                                            l6293 088C  
                                          l6359 1780                                            l5495 0412  
                                          l3799 0D3A                                            l5807 113E  
                                          l5911 13E7                                            l6199 0A42  
                                          l5585 05AD                                            l5577 057F  
                                          l5497 0414                                            l5657 0F51  
                                          l5753 1FAD                                            l5921 13EF  
                                          l5905 13DC                                            l5579 0596  
                                          l5499 041C                                            l5747 1FA8  
                                          l5739 1E5E                                            l5923 13FB  
                                          l5589 05AF                                            l5773 01B5  
                                          l5933 1416                                            l5839 1D94  
                                          l5599 05D8                                            l5695 142D  
                                          l5791 03E7                                            l5767 00F2  
                                          l5863 13BF                                            l5855 13AD  
                                          l5937 141E                                            l5929 140D  
                                          l5699 1436                                            l5891 1709  
                                          l5883 16E0                                            l5797 1168  
                                          l5799 1173                                  ?_TM1650_enable 0076  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u3115 0DB0  
                                          u3215 0DE7                                            u3073 0D5D  
                                          u3065 0D40                                            u4125 0706  
                                          u4215 074A                                            u4055 06C9  
                                          u4225 0765                                            u4145 070F  
                                          u4065 06D0                                            u4305 1650  
                                          u4235 077E                                            u6005 05E1  
                                          u4085 06D9                                            u4325 1662  
                                          u6015 05F7                                            u4095 06ED  
                                          u6115 143F                                            _PMD0 0796  
                                          u4365 167C                                            u4285 163C  
                                          u6045 1500                                            _PMD1 0797  
                                          u2950 0CEC                                            u6310 13CA  
                                          _PMD2 0798                                            _PMD3 0799  
                                          u2960 0CED                                            _PMD4 079A  
                                          u2945 0CE1                                            u6145 145C  
                                          _PMD5 079B                                            _PMD6 079C  
                                          _PMD7 079D                                            u5615 1F8A  
                                          u3855 12E5                                            u6175 1471  
                                          u6255 115C                                            u6415 13FC  
                                          u6600 15D5                                            u6265 1127  
                                          u6425 1406                                            u6610 15FB  
                                          u2995 0D0B                                            u5635 1ED5  
                                          u6435 140E                                            u6525 0967  
                                          u5725 108F                                            u5655 10EB  
                                          u5905 0582                                            u5745 109E  
                                          u6650 0AD4                                            u5675 10F5  
                                          u6475 08ED                                            u5755 10A5  
                                          u6395 13F2                                            u5685 10FF  
                                          u5925 058B                                            u5695 1107  
                                          u5855 04C3                                            u5865 04F2  
                                          u6585 159E                                            u5875 0548  
                                          u6907 1196                                            u5885 055F  
                                          u5895 056E                                            u6785 1753  
                                          u6794 1772                                            u6795 1771  
                                          u5995 05C6                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 __CFG_FCMEN$ON 0000                                   ?_BUTTONS_init 0076  
                                 ?_BUTTONS_task 0076                            ?_adcThresholdHandler 0076  
                                          _isOn 0155                                            _main 117E  
                                          _down 0153                                            _init 1F58  
                                          _menu 0151                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                              cycleColors@color 00DE                         __size_of_numControl_Set 0096  
                                          start 0039                                 ___fldiv@new_exp 0049  
                       __end_of_TM1650_setDigit 1EE3                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                I2C1_MasterWriteTRBBuild@length 0021                              __size_of_MENU_task 00B8  
                       __end_of_TMR0_Initialize 1E3C                                      _i2c1_state 00EC  
                              __end_of_LED_Beat 1E14                  ??_TMR0_DefaultInterruptHandler 0076  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1DCC                        __end_of_TM1650_isEnabled 1D3E  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 01AA  
                                 ___fltol@sign1 00AD                                           _ADCAP 010E  
                                         _ADACT 0117                                 __end_of___fladd 0E1C  
                                         ?_main 0076                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 079E  
                                         _ADREF 0116                                 __end_of___awdiv 1423  
                             __end_of_I2C1_Stop 1EAB                                    ?_menuButtons 0076  
                                 __CFG_WDTE$OFF 0000                                           _ADRPT 009A  
                               __end_of___flmul 0624                                 __end_of___flsub 1F58  
                               __end_of___fltol 1489                                __end_of_DMX_task 1220  
                               ___awdiv@divisor 0020                                           _LATB6 00CE  
                               __end_of___lwdiv 1114                      _ADCC_ADTI_InterruptHandler 0169  
                                         i1l106 1EC4                                           i1l402 0AEF  
                                         i1l413 0B45                                           i1l414 0B51  
                                         i1l431 0BC4                                           i1l407 0B22  
                                         i1l432 0BD2                                           i1l424 0B93  
                                         i1l408 0B23                                           i1l280 000E  
                               __end_of___lwmod 10B2                                           i1l443 1E24  
                                         i1l283 0017                                           i1l436 0BF9  
                                         i1l428 0BB5                                           i1l285 001E  
                                         i1l294 0037                                           i1l287 0028  
                                         i1l289 0032                                 ___awdiv@counter 0025  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                 __end_of_isDMXOn 1D41  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                           _TXREG 011A  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1D3B  
                     ?_TMR0_SetInterruptHandler 0020                            _EUSART1_Transmit_ISR 1EAB  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 0800  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                 __end_of_initLED 105B  
                                         _delay 0160                                           _dmxOn 014D  
                                         _color 01D4                                           _count 0147  
                                         _enter 0152                           ?_ADCC_StartConversion 0076  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0076  
                             __end_of_BEAT_init 1E91                               __end_of_BEAT_task 09A9  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 1D34     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 1D33                 I2C1_MasterWriteTRBBuild@address 0022  
                               __initialization 003B                            TM1650_setDigit@digit 003A  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                    __end_of_EUSART1_Initialize 12A2                                    __end_of_main 11B3  
                                  __end_of_init 1F78                             __size_of_LED_setHSL 035E  
                              __end_of_HueToRGB 1000                                   ?_LED_setColor 0020  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1D84  
                   ?_INTERRUPT_InterruptManager 0076                                     _i2c1_object 0120  
                                        ??_main 01E6                                          ??_init 0023  
                        ?_numControl_resetTimer 0076                                       ??_LED_DMX 0036  
                                     ??_DMX_ISR 0076                           ?_EUSART1_Transmit_ISR 0076  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR1L 030C                                          _CCPR3H 0315  
                                        _CCPR2L 0310                                          _CCPR4H 0319  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                              ___awdiv@dividend 0022                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                             __end_of_MENU_task 08D0                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5031 0BB8                                          i1l5023 0BA1  
                                        i1l5009 0B88                                          i1l5043 0BD9  
                                        i1l5061 0C00                                          i1l5231 1FEB  
                                        i1l5063 0C04                                          i1l5047 0BE0  
                                        i1l5059 0BFD                                          i1l5229 1FE7  
                                        i1l5069 0C0D                                  __CFG_WDTCCS$SC 0000  
                                        i1l4727 1EA9                                          i1l4905 11D7  
                                        i1l4909 11E6                                          i1l6445 0C16  
                                        i1l4961 0B1C                                          i1l4957 0B15  
                                        i1l4975 0B3F                                          i1l4969 0B2F  
                                        i1l4899 11C8                                          i1l4989 0B6A  
                                        _OSCFRQ 0893                                   _lastTimeCycle 0133  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                        _TRISC3 00A3                                          _TRISB6 009E  
                                        _TRISC4 00A4                                          _TRISC6 00A6  
                                        _TRISC7 00A7                                   _lastTimePulse 012F  
                              __end_of___xxtofl 1698                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00EA  
                                        ___flge 1503                                          ___fleq 12A2  
                                ??_LED_setColor 0023                     __end_of_TM1650_fastPrintNum 1503  
                             _ADCC_ThresholdISR 1000                                       ??___fladd 0031  
                                     ??___fldiv 003F                                       ??___awdiv 0024  
                                __CFG_STVREN$ON 0000                                       ??___flmul 0045  
                                     ??___flsub 005F                                       ??___fltol 00A8  
                                     ??___lwdiv 0024                                       ??___lwmod 0024  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                                     ??_isDMXOn 0020                                ?_TMR0_Initialize 0076  
                            ?_ADCC_ThresholdISR 0076                                       ?_I2C1_ISR 0076  
                              ___awdiv@quotient 0027                          __size_of_BEAT_detected 0009  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 0129                            __size_of_TM1650_init 0004  
                                     ??_initLED 0020                                 _ADCC_Initialize 100D  
                                _PMD_Initialize 1DCC                                    ??_CLOCK_init 0022  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0076  
                        ??_ADCC_StartConversion 0020            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                          __size_of_cycleColors 0083                          _ADCC_SetUpperThreshold 1D69  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                 _eusart1RxBuffer 01B2  
                               _eusart1TxBuffer 01BA                                      ___flge@ff1 0057  
                                    ___flge@ff2 005B                                    ___xxtofl@arg 0033  
                                  ___xxtofl@exp 0032                               _SYSTEM_Initialize 1E65  
                                  ___xxtofl@val 0029                                      ___fleq@ff1 0037  
                                    ___fleq@ff2 003B                         __end_of__initialization 0096  
                                     ?_LED_Beat 0076                                  _numControl_Set 1698  
                            ?_SYSTEM_Initialize 0076                                      ___fltol@f1 00A4  
                                     ?_DMX_task 0076                                  _i2c1_trb_count 0159  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 100D  
                 __end_of_EUSART1_RxDataHandler 0818                              __size_of_fadeColor 0052  
                         _I2C1_FunctionComplete 1E14                            _I2C1_BusCollisionISR 1D38  
                                __pcstackCOMMON 0076                              __end_of_CLOCK_init 1D60  
                                  ?_pulseColors 0076                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 0002                                    __pidataBANK2 1DE1  
                                  __pidataBANK3 1E3C                             ??_SYSTEM_Initialize 0023  
                                     ?_TMR0_ISR 0076                     TM1650_fastPrintNum@numWrite 003E  
                            __size_of_decrement 0035                                      ??_I2C1_ISR 0078  
                          __end_of_BUTTONS_init 137F                          __end_of_PMD_Initialize 1DD6  
                          __end_of_BUTTONS_task 1800                          ??_EUSART1_Transmit_ISR 0076  
                          __size_of_menuButtons 001D                     __end_of_EUSART1_Receive_ISR 11E9  
                                  ??_LED_setHSL 00B9                            numControl_Set@increm 0053  
                             _thresholdExceeded 00E9                     ADCC_StartConversion@channel 0020  
                             LED_setColor@green 0020                               LED_setColor@white 0021  
                     __end_of_SYSTEM_Initialize 1E7A                                   _eusart1RxHead 0071  
                                 _eusart1TxHead 0073                                   _eusart1RxTail 0070  
                                    __pbssBANK1 00E9                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                                       ?_HueToRGB 0063  
                                    __pbssBANK4 0220                                   _eusart1TxTail 0072  
             _EUSART1_TxDefaultInterruptHandler 016D                 ??_EUSART1_SetRxInterruptHandler 0022  
                        __end_of_numControl_Set 172E                                   _BEAT_detected 1D8D  
                                    ??_LED_Beat 006F                              __size_of_increment 0035  
                                    ??_DMX_task 0022                               __end_of__Umul8_16 1F98  
                         ?_I2C1_BusCollisionISR 0076                 __end_of_EUSART1_SetErrorHandler 1D9F  
                                    __pmaintext 117E                                         ?___flge 0057  
                                       ?___fleq 0037                __end_of_TMR0_SetInterruptHandler 1D8D  
                                    ??_TMR0_ISR 0076                                 __CFG_PPS1WAY$ON 0000  
                                  LED_setHSL@v1 00CB                                    LED_setHSL@v2 00D3  
                              writeData@address 0032                         __end_of_ADCC_Initialize 1033  
                            __end_of_LED_setHSL 03F8                                      __pintentry 0004  
                               _I2C1_Initialize 1EE3                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 1D69           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 1D60                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                    increment@max 0044  
                                  increment@min 0046                                    increment@val 0042  
                               __CFG_ZCDDIS$OFF 0000                                 ?_PMD_Initialize 0076  
                             ?_TM1650_isEnabled 0076          __end_of_EUSART1_SetFramingErrorHandler 1DA8  
       __size_of_EUSART1_SetFramingErrorHandler 0009                  _EUSART1_SetFramingErrorHandler 1D9F  
                                       _LED_DMX 12EB                                         _DMX_ISR 1FDC  
                                     ?___xxtofl 0029                              ??_TM1650_isEnabled 0020  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       _I2C1_Stop 1E91  
                             __end_of_fadeColor 13D1                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                      _dmxPointer 013B  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 125C                               __end_of_charTable 1860  
                           _CLOCK_timerCallback 1D52                                      ??_HueToRGB 006F  
                                ?_BEAT_detected 0076                               __end_of_decrement 1149  
                               ?_numControl_Set 004D                   I2C1_MasterTRBInsert@ptrb_list 0020  
                                    _cycleSpeed 0167                              __size_of_writeData 001D  
                               BUTTONS_task@btn 0028                          ?_I2C1_FunctionComplete 0076  
                                     _BEAT_init 1E7A                   __size_of_I2C1_MasterTRBInsert 0055  
                                     _BEAT_task 08D0                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 00EB                                 __size_of___flge 007C  
                               __size_of___fleq 0049                                         ___fladd 0C3A  
                                       ___fldiv 0624                                         ___awdiv 13D1  
                          ?_CLOCK_timerCallback 0076                                         ___flmul 03F8  
                                       ___flsub 1F39                                         ___fltol 1423  
                                       ___lwdiv 10DF                                         ___lwmod 1085  
                       ??_numControl_resetTimer 0022                                         _address 00EE  
                             numControl_Set@max 004F                               numControl_Set@min 0051  
                             numControl_Set@val 004D                                         _isDMXOn 1D3E  
                                       _dmxData 25EF                                         __ptext1 1033  
                                       __ptext2 1D49                                         __ptext3 1E65  
                                       __ptext4 1E28                                         __ptext5 1DCC  
                                       __ptext6 10B2                                         __ptext7 1DC3  
                                       __ptext8 1EE3                                         __ptext9 125C  
                             __end_of_increment 117E                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                         _initLED 1033  
                                       _lastRun 013F                                    DMX_task@time 0024  
                         _OSCILLATOR_Initialize 1DC3                                       _T2CONbits 028E  
                                       _buttons 0220                                      ??___xxtofl 002D  
                            _EUSART1_Initialize 125C                        ??_PIN_MANAGER_Initialize 0020  
                               __CFG_WRTSAF$OFF 0000                                      ?_I2C1_Stop 0076  
                   __end_of_adcThresholdHandler 1D45                   ??_EUSART1_DefaultErrorHandler 0077  
                    __size_of_SYSTEM_Initialize 0015                            I2C1_ISR@pi2c_buf_ptr 0158  
                                       clrloop0 1DED                            end_of_initialization 0096  
                           ?_EUSART1_Initialize 0076                                         init@btn 0024  
                                       init@pin 0022                                         init_ram 1DF8  
                   _EUSART1_OverrunErrorHandler 01E0                                         initloop 1DF9  
                                     _MENU_task 0818                          ??_I2C1_BusCollisionISR 0076  
                       __end_of_I2C1_Initialize 1EFF           __end_of_EUSART1_SetRxInterruptHandler 1DBA  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 1DB1  
                                    ?_BEAT_init 0076                                      ?_BEAT_task 0076  
                         __size_of_BUTTONS_init 004B                           __size_of_BUTTONS_task 00D2  
                         ??_CLOCK_timerCallback 0076                                ?_ADCC_Initialize 0076  
                          ??_EUSART1_Initialize 0022                            __size_of_pulseColors 0132  
                         __CFG_WDTCPS$WDTCPS_31 0000                        _TMR0_SetInterruptHandler 1D84  
                     __size_of_I2C1_MasterWrite 002A                               __size_of_I2C1_ISR 015F  
                             __end_of_writeData 1F1C                                     ___fladd@grs 003C  
                       ?_ADCC_SetUpperThreshold 0020                                   ___xxtofl@sign 0031  
                                    _pulseColor 01CA                                     ___fldiv@grs 004B  
                                   ___fldiv@rem 0044                                      _pulseSpeed 0165  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 1E65  
             I2C1_ISR@i2c_10bit_address_restart 0156                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 004C                                 cycleColors@F112 01A0  
                                  _BUTTONS_init 1334                                    _BUTTONS_task 172E  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                    ?_MENU_task 0076                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                               __size_of_LED_Beat 0010  
                       I2C1_MasterWrite@address 0028                                 cycleColors@time 00DC  
          __size_of_EUSART1_DefaultErrorHandler 0003                               __size_of_DMX_task 0037  
                ??_ADCC_DefaultInterruptHandler 0076                                  __end_of___flge 157F  
                                __end_of___fleq 12EB                                   ??_TM1650_init 0035  
                       I2C1_MasterWrite@trBlock 01C6                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0077                        __size_of_TM1650_setDigit 001C  
                        ?_OSCILLATOR_Initialize 0076                  __end_of_ADCC_SetUpperThreshold 1D72  
                  __size_of_TM1650_fastPrintNum 007A                           __size_of_LED_setColor 003C  
                                  _lastDetected 014F                                   ??_cycleColors 00DA  
                           start_initialization 003B                                     ??_I2C1_Stop 0076  
                      __size_of_TMR0_Initialize 0014                 __size_of_PIN_MANAGER_Initialize 002D  
                           TM1650_setDigit@data 0034   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 1F98                                     _fadeAmmount 015E  
                            ?_BUTTONS_isClicked 0020                               __size_of_HueToRGB 01E4  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0076  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                                      ??___flge 005F                                        ??___fleq 003F  
                           ??_BUTTONS_isClicked 0023                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 0800                                    _LED_setColor 1220  
                ?_EUSART1_SetRxInterruptHandler 0020                                       __Umul8_16 1F78  
                                   __pdataBANK1 00EE                                     __pdataBANK2 015E  
                                   __pdataBANK3 01CA                                   _CLOCK_getTime 1D7B  
                                 ??_menuButtons 0024                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00ED                                       ___fladd@a 002D  
                                     ___fladd@b 0029                                     _changeColor 014B  
                                      ?_LED_DMX 0076                                       ___fldiv@a 0037  
                                     ___fldiv@b 003B                                     __pbssBIGRAM 25EF  
                                      ?_DMX_ISR 0076                             __end_of_TM1650_init 1D4D  
                                     ___flmul@a 0041                                       ___flmul@b 003D  
                                   __pbssCOMMON 0070                                       ___flsub@a 0057  
                                     ___flsub@b 005B               _EUSART1_RxDefaultInterruptHandler 01E4  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 001C  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00A0  
                                 __pcstackBANK3 01E6                                ??_numControl_Set 0055  
                                 _i2c1_tr_queue 015B                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 1FB9                             __end_of_cycleColors 1602  
                                     _fadeColor 137F                 ??_EUSART1_SetTxInterruptHandler 0022  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0076                       __size_of_TM1650_isEnabled 0003  
                  __size_of_EUSART1_Receive_ISR 0036                                LED_setColor@blue 0022  
                                  _currentState 0135                                       _charTable 1800  
                                   ??_MENU_task 00E8                           _TMR0_InterruptHandler 016B  
                                     __pnvBANK2 0169                                       __pnvBANK3 01DE  
                               decrement@increm 0048                                       _decrement 1114  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 10B2  
                                      ?___fladd 0029                                        ?___fldiv 0037  
                                      ?___awdiv 0020                                        ?___flmul 003D  
                                      ?___flsub 0057                                        ?___fltol 00A4  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0020                                  ?_CLOCK_getTime 0020  
                                      ?_isDMXOn 0076                                        _I2C1_ISR 0ADB  
                                 LED_setHSL@hue 00CF                                   LED_setHSL@hsl 00AF  
                                 LED_setHSL@rgb 00D7                    ??_INTERRUPT_InterruptManager 007C  
                               writeData@status 0033                  __size_of_numControl_resetTimer 000B  
                 __end_of_numControl_resetTimer 1DE1                                _I2C1_MasterWrite 105B  
                                      _BAUD1CON 011F                                        ?_initLED 0076  
                  __end_of_I2C1_MasterTRBInsert 07F3      __end_of_EUSART1_DefaultOverrunErrorHandler 1D49  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 1D45  
                          _EUSART1_ErrorHandler 01DE                         _EUSART1_SetErrorHandler 1D96  
                                     _increment 1149                               ??_TM1650_setDigit 0037  
                           __end_of_menuButtons 1F39                                ___lwdiv@quotient 0026  
                                  decrement@max 0044                                    decrement@min 0046  
                                  decrement@val 0042                                        _T2CLKCON 0290  
                                    ?_fadeColor 0076        __end_of_I2C1_WaitForLastPacketToComplete 1D52  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0076                _I2C1_WaitForLastPacketToComplete 1D4D  
                        I2C1_MasterRead@trBlock 01C2                               ??_TMR0_Initialize 0022  
                                      _LED_Beat 1E04         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0023                                       clear_ram0 1DEC  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                      ?_decrement 0042  
                                      _DMX_task 11E9             __size_of_INTERRUPT_InterruptManager 0035  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                          TM1650_fastPrintNum@i 0040                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0076                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 07F3                                        _SSP1STAT 018F  
                                   _TM1650_init 1D49                                       _threshold 0162  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                              __size_of_LED_DMX 0049                                     _cycleColors 157F  
                              __size_of_DMX_ISR 0024                                      ?_increment 0042  
                                     _writeData 1EFF                      __size_of_BUTTONS_isClicked 0021  
                                      _HueToRGB 0E1C                                     _hueValCycle 0131  
                  __size_of_adcThresholdHandler 0004                                     _hueValPulse 012D  
                   __end_of_CLOCK_timerCallback 1D58                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 1489                                      _ADSTATbits 0115  
                            controller@lastTime 012B           __end_of_EUSART1_SetTxInterruptHandler 1DC3  
        __size_of_EUSART1_SetTxInterruptHandler 0009                   _EUSART1_SetTxInterruptHandler 1DBA  
                 __size_of_I2C1_BusCollisionISR 0003                                   ??_pulseColors 006F  
                               ??_CLOCK_getTime 0022                                 increment@increm 0048  
                        I2C1_ISR@i2c_bytes_left 0157                                 _LED_setHSL$2880 00BF  
                               _LED_setHSL$2877 00BB                                 _LED_setHSL$2878 00C3  
                               _LED_setHSL$2879 00C7                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fladd 01E2  
                              __size_of___fldiv 017A                                __size_of___awdiv 0052  
                              __size_of___flmul 022C                                __size_of___flsub 001F  
                              __size_of___fltol 0066                     __size_of_EUSART1_Initialize 0046  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
                              __size_of_isDMXOn 0003                __end_of_I2C1_MasterWriteTRBBuild 1FDC  
                                   _menuButtons 1F1C                            ?_TM1650_fastPrintNum 003B  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                                      _fadeTime 0125                                 LED_setColor@lo1 0027  
                               LED_setColor@lo2 002B                             TM1650_enable@enable 0034  
                               LED_setColor@lo3 002F                                 LED_setColor@lo4 0033  
           __end_of_EUSART1_DefaultErrorHandler 1D38                     _EUSART1_DefaultErrorHandler 1D35  
                               LED_setColor@red 0035                              numControl_Set@time 0057  
                                   _currentTime 0149                                      _CLOCK_init 1D58  
                              __size_of_initLED 0028                                        ___xxtofl 1602  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                               ___lwdiv@divisor 0020                             I2C1_ISR@i2c_address 0074  
                               ___lwdiv@counter 0025                                        _detected 0150  
                                    ?_writeData 002E                                        __ptext10 1DBA  
                                      __ptext11 1DB1                                        __ptext20 1DD6  
                                      __ptext12 1DA8                                        __ptext21 1D3E  
                                      __ptext13 1D9F                                        __ptext30 1EFF  
                                      __ptext22 157F                                        __ptext14 1D96  
                                      __ptext31 105B                                        __ptext23 1698  
                                      __ptext15 100D                                        __ptext40 1602  
                                      __ptext32 1FB9                                        __ptext24 1149  
                                      __ptext16 0818                                        __ptext41 1423  
                                      __ptext33 079E                                        __ptext25 1114  
                                      __ptext17 09A9                                        __ptext50 1503  
                                      __ptext42 12A2                                        __ptext34 1D4D  
                                      __ptext26 1489                                        __ptext18 13D1  
                                      __ptext51 1D8D                                        __ptext43 0624  
                                      __ptext35 1F98                                        __ptext27 1085  
                                      __ptext19 1F1C                                        __ptext60 1334  
                                      __ptext52 08D0                                        __ptext44 1220  
                                      __ptext36 12EB                                        __ptext28 1EC7  
                                      __ptext61 1F58                                        __ptext53 10DF  
                                      __ptext45 0E1C                                        __ptext37 1E04  
                                      __ptext29 1E50                                        __ptext70 0ADB  
                                      __ptext62 1E7A                                        __ptext54 1D3B  
                                      __ptext46 1F39                                        __ptext38 137F  
                                      __ptext71 1E91                                        __ptext63 1D72  
                                      __ptext55 11E9                                        __ptext47 0C3A  
                                      __ptext39 009A                                        __ptext80 0800  
                                      __ptext72 1E14                                        __ptext64 1D69  
                                      __ptext56 1D58                                        __ptext48 03F8  
                                      __ptext81 1000                                        __ptext73 1D38  
                                      __ptext65 1D60                                        __ptext57 1D84  
                                      __ptext49 1F78                                        __ptext82 1D32  
                                      __ptext74 1EAB                                        __ptext58 172E  
                                      __ptext83 1D41                                        __ptext75 1FDC  
                                      __ptext67 07F3                                        __ptext59 1D7B  
                                      __ptext76 11B3                                        __ptext68 1D52  
                                      __ptext77 1D45                                        __ptext69 1D34  
                                      __ptext78 1D33                                        __ptext79 1D35  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _offCheck 014E                                     ??_fadeColor 00DA  
                         __end_of_BEAT_detected 1D96                                        _lastBeat 0143  
                                      _firstMsg 0164                                        _lastTime 0145  
                              _TM1650_isEnabled 1D3B                                   __size_of_main 0035  
                                 __size_of_init 0020            __end_of_TMR0_DefaultInterruptHandler 1D35  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 1D34  
                          __CFG_WDTCWS$WDTCWS_7 0000                                     ??_decrement 004A  
                          _I2C1_MasterTRBInsert 079E                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                    __end_of_ADCC_StartConversion 1D7B  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0039  
                    _INTERRUPT_InterruptManager 0004                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 01E2                             _EUSART1_Receive_ISR 11B3  
                           __end_of_pulseColors 0ADB                           ??_TM1650_fastPrintNum 003D  
                             TM1650_setDigit@dp 0035                                      _INTCONbits 000B  
                                      init@port 0020                                   _HueToRGB$2876 00A0  
                                   ??_increment 004A                                      _LED_setHSL 009A  
          __end_of_ADCC_DefaultInterruptHandler 1D33           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1D32                                        intlevel1 0000  
                                _thresholdCount 013D                            ?_EUSART1_Receive_ISR 0076  
                                 writeData@data 002E                                ___lwmod@dividend 0022  
                       ?_PIN_MANAGER_Initialize 0076                        __end_of_I2C1_MasterWrite 1085  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0014  
        __end_of_EUSART1_SetOverrunErrorHandler 1DB1         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1DA8                   __end_of_I2C1_FunctionComplete 1E28  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 1EC7  
                                   led@lastTime 0137                   ?_TMR0_DefaultInterruptHandler 0076  
                        TM1650_fastPrintNum@num 003B  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 1EC7  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 015A  
                                 __pstringtext1 1800                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0020                                     ?_CLOCK_init 0076  
                               _TMR0_Initialize 1E28                                 ___lwmod@counter 0025  
                                   dmx@lastTime 0139                                   fadeColor@time 00DC  
                      _I2C1_MasterWriteTRBBuild 1FB9                                     ??_writeData 002F  
                                    _TX1STAbits 011E                                   ___fladd@signs 0039  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 10DF                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1E50                                    ___fladd@aexp 003A  
                                  ___fladd@bexp 003B                              __size_of_I2C1_Stop 001A  
                 ?_ADCC_DefaultInterruptHandler 0076                                     _toggleCheck 014C  
                          __Umul8_16@multiplier 0028                         ??_EUSART1_RxDataHandler 0076  
                             __Umul8_16@product 0024  
