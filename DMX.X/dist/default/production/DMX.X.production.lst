

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 29 15:42:42 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	intentry,global,class=CODE,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	dabs	1,0xCA0,32
    85                           	dabs	1,0xC20,80
    86                           	dabs	1,0xBA0,80
    87                           	dabs	1,0xB20,80
    88                           	dabs	1,0xAA0,80
    89                           	dabs	1,0xA20,80
    90                           	dabs	1,0x9A0,80
    91                           	dabs	1,0x96F,1
    92                           	dabs	1,0x25EF,0,_dmxData
    93                           	dabs	1,0x7E,2
    94  0000                     
    95                           ; Version 2.05
    96                           ; Generated 20/12/2018 GMT
    97                           ; 
    98                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F18446 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  008C                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  008E                     	;# 
   155  008F                     	;# 
   156  0090                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0094                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  010F                     	;# 
   184  0110                     	;# 
   185  0111                     	;# 
   186  0112                     	;# 
   187  0113                     	;# 
   188  0114                     	;# 
   189  0115                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  0118                     	;# 
   193  0119                     	;# 
   194  0119                     	;# 
   195  0119                     	;# 
   196  011A                     	;# 
   197  011A                     	;# 
   198  011A                     	;# 
   199  011B                     	;# 
   200  011B                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011B                     	;# 
   204  011C                     	;# 
   205  011C                     	;# 
   206  011C                     	;# 
   207  011D                     	;# 
   208  011D                     	;# 
   209  011D                     	;# 
   210  011E                     	;# 
   211  011E                     	;# 
   212  011E                     	;# 
   213  011F                     	;# 
   214  011F                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  011F                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  018E                     	;# 
   221  018F                     	;# 
   222  0190                     	;# 
   223  0191                     	;# 
   224  0192                     	;# 
   225  0196                     	;# 
   226  0197                     	;# 
   227  0198                     	;# 
   228  0199                     	;# 
   229  019A                     	;# 
   230  019B                     	;# 
   231  019C                     	;# 
   232  020C                     	;# 
   233  020D                     	;# 
   234  020E                     	;# 
   235  020E                     	;# 
   236  020F                     	;# 
   237  020F                     	;# 
   238  0210                     	;# 
   239  0210                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0213                     	;# 
   244  0214                     	;# 
   245  0214                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0216                     	;# 
   249  0216                     	;# 
   250  0217                     	;# 
   251  0217                     	;# 
   252  0218                     	;# 
   253  0219                     	;# 
   254  021A                     	;# 
   255  021A                     	;# 
   256  021B                     	;# 
   257  021B                     	;# 
   258  021C                     	;# 
   259  021C                     	;# 
   260  021D                     	;# 
   261  021D                     	;# 
   262  021E                     	;# 
   263  021F                     	;# 
   264  028C                     	;# 
   265  028C                     	;# 
   266  028D                     	;# 
   267  028D                     	;# 
   268  028E                     	;# 
   269  028F                     	;# 
   270  0290                     	;# 
   271  0291                     	;# 
   272  0292                     	;# 
   273  0292                     	;# 
   274  0293                     	;# 
   275  0293                     	;# 
   276  0294                     	;# 
   277  0295                     	;# 
   278  0296                     	;# 
   279  0297                     	;# 
   280  0298                     	;# 
   281  0298                     	;# 
   282  0299                     	;# 
   283  0299                     	;# 
   284  029A                     	;# 
   285  029B                     	;# 
   286  029C                     	;# 
   287  029D                     	;# 
   288  029F                     	;# 
   289  030C                     	;# 
   290  030C                     	;# 
   291  030D                     	;# 
   292  030E                     	;# 
   293  030F                     	;# 
   294  0310                     	;# 
   295  0310                     	;# 
   296  0311                     	;# 
   297  0312                     	;# 
   298  0313                     	;# 
   299  0314                     	;# 
   300  0314                     	;# 
   301  0315                     	;# 
   302  0316                     	;# 
   303  0317                     	;# 
   304  0318                     	;# 
   305  0318                     	;# 
   306  0319                     	;# 
   307  031A                     	;# 
   308  031B                     	;# 
   309  038C                     	;# 
   310  038C                     	;# 
   311  038D                     	;# 
   312  038E                     	;# 
   313  0390                     	;# 
   314  0390                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  048C                     	;# 
   318  048C                     	;# 
   319  048D                     	;# 
   320  048E                     	;# 
   321  048F                     	;# 
   322  048F                     	;# 
   323  0490                     	;# 
   324  0491                     	;# 
   325  0492                     	;# 
   326  0492                     	;# 
   327  0493                     	;# 
   328  0494                     	;# 
   329  0495                     	;# 
   330  0495                     	;# 
   331  0496                     	;# 
   332  0497                     	;# 
   333  0498                     	;# 
   334  0499                     	;# 
   335  049A                     	;# 
   336  049B                     	;# 
   337  049C                     	;# 
   338  049D                     	;# 
   339  058C                     	;# 
   340  058C                     	;# 
   341  058D                     	;# 
   342  058E                     	;# 
   343  058F                     	;# 
   344  058F                     	;# 
   345  0590                     	;# 
   346  0591                     	;# 
   347  0592                     	;# 
   348  0593                     	;# 
   349  059C                     	;# 
   350  059C                     	;# 
   351  059D                     	;# 
   352  059D                     	;# 
   353  059E                     	;# 
   354  059F                     	;# 
   355  060C                     	;# 
   356  060C                     	;# 
   357  060D                     	;# 
   358  060D                     	;# 
   359  060E                     	;# 
   360  060F                     	;# 
   361  0610                     	;# 
   362  0611                     	;# 
   363  0612                     	;# 
   364  0613                     	;# 
   365  0614                     	;# 
   366  0616                     	;# 
   367  0616                     	;# 
   368  0617                     	;# 
   369  0617                     	;# 
   370  0618                     	;# 
   371  0619                     	;# 
   372  061A                     	;# 
   373  061B                     	;# 
   374  061C                     	;# 
   375  061D                     	;# 
   376  061E                     	;# 
   377  070C                     	;# 
   378  070D                     	;# 
   379  070E                     	;# 
   380  070F                     	;# 
   381  0710                     	;# 
   382  0711                     	;# 
   383  0712                     	;# 
   384  0713                     	;# 
   385  0714                     	;# 
   386  0716                     	;# 
   387  0717                     	;# 
   388  0718                     	;# 
   389  0719                     	;# 
   390  071A                     	;# 
   391  071B                     	;# 
   392  071C                     	;# 
   393  071D                     	;# 
   394  071E                     	;# 
   395  0796                     	;# 
   396  0797                     	;# 
   397  0798                     	;# 
   398  0799                     	;# 
   399  079A                     	;# 
   400  079B                     	;# 
   401  079C                     	;# 
   402  079D                     	;# 
   403  080C                     	;# 
   404  080D                     	;# 
   405  080E                     	;# 
   406  080F                     	;# 
   407  0810                     	;# 
   408  0811                     	;# 
   409  0812                     	;# 
   410  0813                     	;# 
   411  0814                     	;# 
   412  081A                     	;# 
   413  081A                     	;# 
   414  081B                     	;# 
   415  081C                     	;# 
   416  081C                     	;# 
   417  081D                     	;# 
   418  081E                     	;# 
   419  081F                     	;# 
   420  088C                     	;# 
   421  088D                     	;# 
   422  088E                     	;# 
   423  088F                     	;# 
   424  0890                     	;# 
   425  0891                     	;# 
   426  0892                     	;# 
   427  0893                     	;# 
   428  0895                     	;# 
   429  0896                     	;# 
   430  0897                     	;# 
   431  0898                     	;# 
   432  0899                     	;# 
   433  089A                     	;# 
   434  089B                     	;# 
   435  090C                     	;# 
   436  090E                     	;# 
   437  090F                     	;# 
   438  091F                     	;# 
   439  098F                     	;# 
   440  098F                     	;# 
   441  0990                     	;# 
   442  0991                     	;# 
   443  0992                     	;# 
   444  0993                     	;# 
   445  0994                     	;# 
   446  0995                     	;# 
   447  0996                     	;# 
   448  0997                     	;# 
   449  1E0F                     	;# 
   450  1E10                     	;# 
   451  1E11                     	;# 
   452  1E12                     	;# 
   453  1E13                     	;# 
   454  1E14                     	;# 
   455  1E15                     	;# 
   456  1E16                     	;# 
   457  1E17                     	;# 
   458  1E18                     	;# 
   459  1E19                     	;# 
   460  1E1A                     	;# 
   461  1E1B                     	;# 
   462  1E1C                     	;# 
   463  1E1D                     	;# 
   464  1E1E                     	;# 
   465  1E1F                     	;# 
   466  1E20                     	;# 
   467  1E21                     	;# 
   468  1E22                     	;# 
   469  1E23                     	;# 
   470  1E24                     	;# 
   471  1E25                     	;# 
   472  1E26                     	;# 
   473  1E27                     	;# 
   474  1E28                     	;# 
   475  1E29                     	;# 
   476  1E2A                     	;# 
   477  1E2B                     	;# 
   478  1E2C                     	;# 
   479  1E2D                     	;# 
   480  1E2E                     	;# 
   481  1E2F                     	;# 
   482  1E30                     	;# 
   483  1E31                     	;# 
   484  1E32                     	;# 
   485  1E33                     	;# 
   486  1E34                     	;# 
   487  1E35                     	;# 
   488  1E36                     	;# 
   489  1E37                     	;# 
   490  1E8F                     	;# 
   491  1E90                     	;# 
   492  1E91                     	;# 
   493  1E92                     	;# 
   494  1E93                     	;# 
   495  1E94                     	;# 
   496  1E95                     	;# 
   497  1E96                     	;# 
   498  1E97                     	;# 
   499  1E9C                     	;# 
   500  1E9D                     	;# 
   501  1E9E                     	;# 
   502  1EA1                     	;# 
   503  1EA2                     	;# 
   504  1EA3                     	;# 
   505  1EA4                     	;# 
   506  1EA9                     	;# 
   507  1EAA                     	;# 
   508  1EB1                     	;# 
   509  1EB2                     	;# 
   510  1EB8                     	;# 
   511  1EB9                     	;# 
   512  1EBA                     	;# 
   513  1EBB                     	;# 
   514  1EBC                     	;# 
   515  1EBD                     	;# 
   516  1EBE                     	;# 
   517  1EC3                     	;# 
   518  1EC5                     	;# 
   519  1EC6                     	;# 
   520  1EC7                     	;# 
   521  1EC8                     	;# 
   522  1EC9                     	;# 
   523  1ECA                     	;# 
   524  1ECB                     	;# 
   525  1ECB                     	;# 
   526  1ECB                     	;# 
   527  1ECC                     	;# 
   528  1ECC                     	;# 
   529  1ECC                     	;# 
   530  1F10                     	;# 
   531  1F11                     	;# 
   532  1F12                     	;# 
   533  1F14                     	;# 
   534  1F15                     	;# 
   535  1F1C                     	;# 
   536  1F1D                     	;# 
   537  1F1E                     	;# 
   538  1F1F                     	;# 
   539  1F20                     	;# 
   540  1F21                     	;# 
   541  1F22                     	;# 
   542  1F23                     	;# 
   543  1F24                     	;# 
   544  1F25                     	;# 
   545  1F26                     	;# 
   546  1F27                     	;# 
   547  1F38                     	;# 
   548  1F39                     	;# 
   549  1F3A                     	;# 
   550  1F3B                     	;# 
   551  1F3C                     	;# 
   552  1F3D                     	;# 
   553  1F3E                     	;# 
   554  1F3F                     	;# 
   555  1F43                     	;# 
   556  1F44                     	;# 
   557  1F45                     	;# 
   558  1F46                     	;# 
   559  1F47                     	;# 
   560  1F48                     	;# 
   561  1F49                     	;# 
   562  1F4A                     	;# 
   563  1F4E                     	;# 
   564  1F4F                     	;# 
   565  1F50                     	;# 
   566  1F51                     	;# 
   567  1F52                     	;# 
   568  1F53                     	;# 
   569  1F54                     	;# 
   570  1F55                     	;# 
   571  1FE4                     	;# 
   572  1FE5                     	;# 
   573  1FE6                     	;# 
   574  1FE7                     	;# 
   575  1FE8                     	;# 
   576  1FE8                     	;# 
   577  1FE9                     	;# 
   578  1FEA                     	;# 
   579  1FEB                     	;# 
   580  1FED                     	;# 
   581  1FEE                     	;# 
   582  1FEF                     	;# 
   583  0000                     	;# 
   584  0001                     	;# 
   585  0002                     	;# 
   586  0003                     	;# 
   587  0004                     	;# 
   588  0005                     	;# 
   589  0006                     	;# 
   590  0007                     	;# 
   591  0008                     	;# 
   592  0009                     	;# 
   593  000A                     	;# 
   594  000B                     	;# 
   595  000C                     	;# 
   596  000D                     	;# 
   597  000E                     	;# 
   598  0012                     	;# 
   599  0013                     	;# 
   600  0014                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  008C                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0092                     	;# 
   614  0092                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0094                     	;# 
   618  0095                     	;# 
   619  0096                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  010F                     	;# 
   638  0110                     	;# 
   639  0111                     	;# 
   640  0112                     	;# 
   641  0113                     	;# 
   642  0114                     	;# 
   643  0115                     	;# 
   644  0116                     	;# 
   645  0117                     	;# 
   646  0118                     	;# 
   647  0119                     	;# 
   648  0119                     	;# 
   649  0119                     	;# 
   650  011A                     	;# 
   651  011A                     	;# 
   652  011A                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011B                     	;# 
   656  011B                     	;# 
   657  011B                     	;# 
   658  011C                     	;# 
   659  011C                     	;# 
   660  011C                     	;# 
   661  011D                     	;# 
   662  011D                     	;# 
   663  011D                     	;# 
   664  011E                     	;# 
   665  011E                     	;# 
   666  011E                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  011F                     	;# 
   670  011F                     	;# 
   671  011F                     	;# 
   672  018C                     	;# 
   673  018D                     	;# 
   674  018E                     	;# 
   675  018F                     	;# 
   676  0190                     	;# 
   677  0191                     	;# 
   678  0192                     	;# 
   679  0196                     	;# 
   680  0197                     	;# 
   681  0198                     	;# 
   682  0199                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019C                     	;# 
   686  020C                     	;# 
   687  020D                     	;# 
   688  020E                     	;# 
   689  020E                     	;# 
   690  020F                     	;# 
   691  020F                     	;# 
   692  0210                     	;# 
   693  0210                     	;# 
   694  0211                     	;# 
   695  0211                     	;# 
   696  0212                     	;# 
   697  0213                     	;# 
   698  0214                     	;# 
   699  0214                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0216                     	;# 
   703  0216                     	;# 
   704  0217                     	;# 
   705  0217                     	;# 
   706  0218                     	;# 
   707  0219                     	;# 
   708  021A                     	;# 
   709  021A                     	;# 
   710  021B                     	;# 
   711  021B                     	;# 
   712  021C                     	;# 
   713  021C                     	;# 
   714  021D                     	;# 
   715  021D                     	;# 
   716  021E                     	;# 
   717  021F                     	;# 
   718  028C                     	;# 
   719  028C                     	;# 
   720  028D                     	;# 
   721  028D                     	;# 
   722  028E                     	;# 
   723  028F                     	;# 
   724  0290                     	;# 
   725  0291                     	;# 
   726  0292                     	;# 
   727  0292                     	;# 
   728  0293                     	;# 
   729  0293                     	;# 
   730  0294                     	;# 
   731  0295                     	;# 
   732  0296                     	;# 
   733  0297                     	;# 
   734  0298                     	;# 
   735  0298                     	;# 
   736  0299                     	;# 
   737  0299                     	;# 
   738  029A                     	;# 
   739  029B                     	;# 
   740  029C                     	;# 
   741  029D                     	;# 
   742  029F                     	;# 
   743  030C                     	;# 
   744  030C                     	;# 
   745  030D                     	;# 
   746  030E                     	;# 
   747  030F                     	;# 
   748  0310                     	;# 
   749  0310                     	;# 
   750  0311                     	;# 
   751  0312                     	;# 
   752  0313                     	;# 
   753  0314                     	;# 
   754  0314                     	;# 
   755  0315                     	;# 
   756  0316                     	;# 
   757  0317                     	;# 
   758  0318                     	;# 
   759  0318                     	;# 
   760  0319                     	;# 
   761  031A                     	;# 
   762  031B                     	;# 
   763  038C                     	;# 
   764  038C                     	;# 
   765  038D                     	;# 
   766  038E                     	;# 
   767  0390                     	;# 
   768  0390                     	;# 
   769  0391                     	;# 
   770  0392                     	;# 
   771  048C                     	;# 
   772  048C                     	;# 
   773  048D                     	;# 
   774  048E                     	;# 
   775  048F                     	;# 
   776  048F                     	;# 
   777  0490                     	;# 
   778  0491                     	;# 
   779  0492                     	;# 
   780  0492                     	;# 
   781  0493                     	;# 
   782  0494                     	;# 
   783  0495                     	;# 
   784  0495                     	;# 
   785  0496                     	;# 
   786  0497                     	;# 
   787  0498                     	;# 
   788  0499                     	;# 
   789  049A                     	;# 
   790  049B                     	;# 
   791  049C                     	;# 
   792  049D                     	;# 
   793  058C                     	;# 
   794  058C                     	;# 
   795  058D                     	;# 
   796  058E                     	;# 
   797  058F                     	;# 
   798  058F                     	;# 
   799  0590                     	;# 
   800  0591                     	;# 
   801  0592                     	;# 
   802  0593                     	;# 
   803  059C                     	;# 
   804  059C                     	;# 
   805  059D                     	;# 
   806  059D                     	;# 
   807  059E                     	;# 
   808  059F                     	;# 
   809  060C                     	;# 
   810  060C                     	;# 
   811  060D                     	;# 
   812  060D                     	;# 
   813  060E                     	;# 
   814  060F                     	;# 
   815  0610                     	;# 
   816  0611                     	;# 
   817  0612                     	;# 
   818  0613                     	;# 
   819  0614                     	;# 
   820  0616                     	;# 
   821  0616                     	;# 
   822  0617                     	;# 
   823  0617                     	;# 
   824  0618                     	;# 
   825  0619                     	;# 
   826  061A                     	;# 
   827  061B                     	;# 
   828  061C                     	;# 
   829  061D                     	;# 
   830  061E                     	;# 
   831  070C                     	;# 
   832  070D                     	;# 
   833  070E                     	;# 
   834  070F                     	;# 
   835  0710                     	;# 
   836  0711                     	;# 
   837  0712                     	;# 
   838  0713                     	;# 
   839  0714                     	;# 
   840  0716                     	;# 
   841  0717                     	;# 
   842  0718                     	;# 
   843  0719                     	;# 
   844  071A                     	;# 
   845  071B                     	;# 
   846  071C                     	;# 
   847  071D                     	;# 
   848  071E                     	;# 
   849  0796                     	;# 
   850  0797                     	;# 
   851  0798                     	;# 
   852  0799                     	;# 
   853  079A                     	;# 
   854  079B                     	;# 
   855  079C                     	;# 
   856  079D                     	;# 
   857  080C                     	;# 
   858  080D                     	;# 
   859  080E                     	;# 
   860  080F                     	;# 
   861  0810                     	;# 
   862  0811                     	;# 
   863  0812                     	;# 
   864  0813                     	;# 
   865  0814                     	;# 
   866  081A                     	;# 
   867  081A                     	;# 
   868  081B                     	;# 
   869  081C                     	;# 
   870  081C                     	;# 
   871  081D                     	;# 
   872  081E                     	;# 
   873  081F                     	;# 
   874  088C                     	;# 
   875  088D                     	;# 
   876  088E                     	;# 
   877  088F                     	;# 
   878  0890                     	;# 
   879  0891                     	;# 
   880  0892                     	;# 
   881  0893                     	;# 
   882  0895                     	;# 
   883  0896                     	;# 
   884  0897                     	;# 
   885  0898                     	;# 
   886  0899                     	;# 
   887  089A                     	;# 
   888  089B                     	;# 
   889  090C                     	;# 
   890  090E                     	;# 
   891  090F                     	;# 
   892  091F                     	;# 
   893  098F                     	;# 
   894  098F                     	;# 
   895  0990                     	;# 
   896  0991                     	;# 
   897  0992                     	;# 
   898  0993                     	;# 
   899  0994                     	;# 
   900  0995                     	;# 
   901  0996                     	;# 
   902  0997                     	;# 
   903  1E0F                     	;# 
   904  1E10                     	;# 
   905  1E11                     	;# 
   906  1E12                     	;# 
   907  1E13                     	;# 
   908  1E14                     	;# 
   909  1E15                     	;# 
   910  1E16                     	;# 
   911  1E17                     	;# 
   912  1E18                     	;# 
   913  1E19                     	;# 
   914  1E1A                     	;# 
   915  1E1B                     	;# 
   916  1E1C                     	;# 
   917  1E1D                     	;# 
   918  1E1E                     	;# 
   919  1E1F                     	;# 
   920  1E20                     	;# 
   921  1E21                     	;# 
   922  1E22                     	;# 
   923  1E23                     	;# 
   924  1E24                     	;# 
   925  1E25                     	;# 
   926  1E26                     	;# 
   927  1E27                     	;# 
   928  1E28                     	;# 
   929  1E29                     	;# 
   930  1E2A                     	;# 
   931  1E2B                     	;# 
   932  1E2C                     	;# 
   933  1E2D                     	;# 
   934  1E2E                     	;# 
   935  1E2F                     	;# 
   936  1E30                     	;# 
   937  1E31                     	;# 
   938  1E32                     	;# 
   939  1E33                     	;# 
   940  1E34                     	;# 
   941  1E35                     	;# 
   942  1E36                     	;# 
   943  1E37                     	;# 
   944  1E8F                     	;# 
   945  1E90                     	;# 
   946  1E91                     	;# 
   947  1E92                     	;# 
   948  1E93                     	;# 
   949  1E94                     	;# 
   950  1E95                     	;# 
   951  1E96                     	;# 
   952  1E97                     	;# 
   953  1E9C                     	;# 
   954  1E9D                     	;# 
   955  1E9E                     	;# 
   956  1EA1                     	;# 
   957  1EA2                     	;# 
   958  1EA3                     	;# 
   959  1EA4                     	;# 
   960  1EA9                     	;# 
   961  1EAA                     	;# 
   962  1EB1                     	;# 
   963  1EB2                     	;# 
   964  1EB8                     	;# 
   965  1EB9                     	;# 
   966  1EBA                     	;# 
   967  1EBB                     	;# 
   968  1EBC                     	;# 
   969  1EBD                     	;# 
   970  1EBE                     	;# 
   971  1EC3                     	;# 
   972  1EC5                     	;# 
   973  1EC6                     	;# 
   974  1EC7                     	;# 
   975  1EC8                     	;# 
   976  1EC9                     	;# 
   977  1ECA                     	;# 
   978  1ECB                     	;# 
   979  1ECB                     	;# 
   980  1ECB                     	;# 
   981  1ECC                     	;# 
   982  1ECC                     	;# 
   983  1ECC                     	;# 
   984  1F10                     	;# 
   985  1F11                     	;# 
   986  1F12                     	;# 
   987  1F14                     	;# 
   988  1F15                     	;# 
   989  1F1C                     	;# 
   990  1F1D                     	;# 
   991  1F1E                     	;# 
   992  1F1F                     	;# 
   993  1F20                     	;# 
   994  1F21                     	;# 
   995  1F22                     	;# 
   996  1F23                     	;# 
   997  1F24                     	;# 
   998  1F25                     	;# 
   999  1F26                     	;# 
  1000  1F27                     	;# 
  1001  1F38                     	;# 
  1002  1F39                     	;# 
  1003  1F3A                     	;# 
  1004  1F3B                     	;# 
  1005  1F3C                     	;# 
  1006  1F3D                     	;# 
  1007  1F3E                     	;# 
  1008  1F3F                     	;# 
  1009  1F43                     	;# 
  1010  1F44                     	;# 
  1011  1F45                     	;# 
  1012  1F46                     	;# 
  1013  1F47                     	;# 
  1014  1F48                     	;# 
  1015  1F49                     	;# 
  1016  1F4A                     	;# 
  1017  1F4E                     	;# 
  1018  1F4F                     	;# 
  1019  1F50                     	;# 
  1020  1F51                     	;# 
  1021  1F52                     	;# 
  1022  1F53                     	;# 
  1023  1F54                     	;# 
  1024  1F55                     	;# 
  1025  1FE4                     	;# 
  1026  1FE5                     	;# 
  1027  1FE6                     	;# 
  1028  1FE7                     	;# 
  1029  1FE8                     	;# 
  1030  1FE8                     	;# 
  1031  1FE9                     	;# 
  1032  1FEA                     	;# 
  1033  1FEB                     	;# 
  1034  1FED                     	;# 
  1035  1FEE                     	;# 
  1036  1FEF                     	;# 
  1037  0000                     	;# 
  1038  0001                     	;# 
  1039  0002                     	;# 
  1040  0003                     	;# 
  1041  0004                     	;# 
  1042  0005                     	;# 
  1043  0006                     	;# 
  1044  0007                     	;# 
  1045  0008                     	;# 
  1046  0009                     	;# 
  1047  000A                     	;# 
  1048  000B                     	;# 
  1049  000C                     	;# 
  1050  000D                     	;# 
  1051  000E                     	;# 
  1052  0012                     	;# 
  1053  0013                     	;# 
  1054  0014                     	;# 
  1055  0018                     	;# 
  1056  0019                     	;# 
  1057  001A                     	;# 
  1058  008C                     	;# 
  1059  008C                     	;# 
  1060  008D                     	;# 
  1061  008E                     	;# 
  1062  008E                     	;# 
  1063  008F                     	;# 
  1064  0090                     	;# 
  1065  0090                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0094                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009D                     	;# 
  1084  009E                     	;# 
  1085  009F                     	;# 
  1086  010C                     	;# 
  1087  010C                     	;# 
  1088  010D                     	;# 
  1089  010E                     	;# 
  1090  010F                     	;# 
  1091  010F                     	;# 
  1092  0110                     	;# 
  1093  0111                     	;# 
  1094  0112                     	;# 
  1095  0113                     	;# 
  1096  0114                     	;# 
  1097  0115                     	;# 
  1098  0116                     	;# 
  1099  0117                     	;# 
  1100  0118                     	;# 
  1101  0119                     	;# 
  1102  0119                     	;# 
  1103  0119                     	;# 
  1104  011A                     	;# 
  1105  011A                     	;# 
  1106  011A                     	;# 
  1107  011B                     	;# 
  1108  011B                     	;# 
  1109  011B                     	;# 
  1110  011B                     	;# 
  1111  011B                     	;# 
  1112  011C                     	;# 
  1113  011C                     	;# 
  1114  011C                     	;# 
  1115  011D                     	;# 
  1116  011D                     	;# 
  1117  011D                     	;# 
  1118  011E                     	;# 
  1119  011E                     	;# 
  1120  011E                     	;# 
  1121  011F                     	;# 
  1122  011F                     	;# 
  1123  011F                     	;# 
  1124  011F                     	;# 
  1125  011F                     	;# 
  1126  018C                     	;# 
  1127  018D                     	;# 
  1128  018E                     	;# 
  1129  018F                     	;# 
  1130  0190                     	;# 
  1131  0191                     	;# 
  1132  0192                     	;# 
  1133  0196                     	;# 
  1134  0197                     	;# 
  1135  0198                     	;# 
  1136  0199                     	;# 
  1137  019A                     	;# 
  1138  019B                     	;# 
  1139  019C                     	;# 
  1140  020C                     	;# 
  1141  020D                     	;# 
  1142  020E                     	;# 
  1143  020E                     	;# 
  1144  020F                     	;# 
  1145  020F                     	;# 
  1146  0210                     	;# 
  1147  0210                     	;# 
  1148  0211                     	;# 
  1149  0211                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0214                     	;# 
  1153  0214                     	;# 
  1154  0215                     	;# 
  1155  0215                     	;# 
  1156  0216                     	;# 
  1157  0216                     	;# 
  1158  0217                     	;# 
  1159  0217                     	;# 
  1160  0218                     	;# 
  1161  0219                     	;# 
  1162  021A                     	;# 
  1163  021A                     	;# 
  1164  021B                     	;# 
  1165  021B                     	;# 
  1166  021C                     	;# 
  1167  021C                     	;# 
  1168  021D                     	;# 
  1169  021D                     	;# 
  1170  021E                     	;# 
  1171  021F                     	;# 
  1172  028C                     	;# 
  1173  028C                     	;# 
  1174  028D                     	;# 
  1175  028D                     	;# 
  1176  028E                     	;# 
  1177  028F                     	;# 
  1178  0290                     	;# 
  1179  0291                     	;# 
  1180  0292                     	;# 
  1181  0292                     	;# 
  1182  0293                     	;# 
  1183  0293                     	;# 
  1184  0294                     	;# 
  1185  0295                     	;# 
  1186  0296                     	;# 
  1187  0297                     	;# 
  1188  0298                     	;# 
  1189  0298                     	;# 
  1190  0299                     	;# 
  1191  0299                     	;# 
  1192  029A                     	;# 
  1193  029B                     	;# 
  1194  029C                     	;# 
  1195  029D                     	;# 
  1196  029F                     	;# 
  1197  030C                     	;# 
  1198  030C                     	;# 
  1199  030D                     	;# 
  1200  030E                     	;# 
  1201  030F                     	;# 
  1202  0310                     	;# 
  1203  0310                     	;# 
  1204  0311                     	;# 
  1205  0312                     	;# 
  1206  0313                     	;# 
  1207  0314                     	;# 
  1208  0314                     	;# 
  1209  0315                     	;# 
  1210  0316                     	;# 
  1211  0317                     	;# 
  1212  0318                     	;# 
  1213  0318                     	;# 
  1214  0319                     	;# 
  1215  031A                     	;# 
  1216  031B                     	;# 
  1217  038C                     	;# 
  1218  038C                     	;# 
  1219  038D                     	;# 
  1220  038E                     	;# 
  1221  0390                     	;# 
  1222  0390                     	;# 
  1223  0391                     	;# 
  1224  0392                     	;# 
  1225  048C                     	;# 
  1226  048C                     	;# 
  1227  048D                     	;# 
  1228  048E                     	;# 
  1229  048F                     	;# 
  1230  048F                     	;# 
  1231  0490                     	;# 
  1232  0491                     	;# 
  1233  0492                     	;# 
  1234  0492                     	;# 
  1235  0493                     	;# 
  1236  0494                     	;# 
  1237  0495                     	;# 
  1238  0495                     	;# 
  1239  0496                     	;# 
  1240  0497                     	;# 
  1241  0498                     	;# 
  1242  0499                     	;# 
  1243  049A                     	;# 
  1244  049B                     	;# 
  1245  049C                     	;# 
  1246  049D                     	;# 
  1247  058C                     	;# 
  1248  058C                     	;# 
  1249  058D                     	;# 
  1250  058E                     	;# 
  1251  058F                     	;# 
  1252  058F                     	;# 
  1253  0590                     	;# 
  1254  0591                     	;# 
  1255  0592                     	;# 
  1256  0593                     	;# 
  1257  059C                     	;# 
  1258  059C                     	;# 
  1259  059D                     	;# 
  1260  059D                     	;# 
  1261  059E                     	;# 
  1262  059F                     	;# 
  1263  060C                     	;# 
  1264  060C                     	;# 
  1265  060D                     	;# 
  1266  060D                     	;# 
  1267  060E                     	;# 
  1268  060F                     	;# 
  1269  0610                     	;# 
  1270  0611                     	;# 
  1271  0612                     	;# 
  1272  0613                     	;# 
  1273  0614                     	;# 
  1274  0616                     	;# 
  1275  0616                     	;# 
  1276  0617                     	;# 
  1277  0617                     	;# 
  1278  0618                     	;# 
  1279  0619                     	;# 
  1280  061A                     	;# 
  1281  061B                     	;# 
  1282  061C                     	;# 
  1283  061D                     	;# 
  1284  061E                     	;# 
  1285  070C                     	;# 
  1286  070D                     	;# 
  1287  070E                     	;# 
  1288  070F                     	;# 
  1289  0710                     	;# 
  1290  0711                     	;# 
  1291  0712                     	;# 
  1292  0713                     	;# 
  1293  0714                     	;# 
  1294  0716                     	;# 
  1295  0717                     	;# 
  1296  0718                     	;# 
  1297  0719                     	;# 
  1298  071A                     	;# 
  1299  071B                     	;# 
  1300  071C                     	;# 
  1301  071D                     	;# 
  1302  071E                     	;# 
  1303  0796                     	;# 
  1304  0797                     	;# 
  1305  0798                     	;# 
  1306  0799                     	;# 
  1307  079A                     	;# 
  1308  079B                     	;# 
  1309  079C                     	;# 
  1310  079D                     	;# 
  1311  080C                     	;# 
  1312  080D                     	;# 
  1313  080E                     	;# 
  1314  080F                     	;# 
  1315  0810                     	;# 
  1316  0811                     	;# 
  1317  0812                     	;# 
  1318  0813                     	;# 
  1319  0814                     	;# 
  1320  081A                     	;# 
  1321  081A                     	;# 
  1322  081B                     	;# 
  1323  081C                     	;# 
  1324  081C                     	;# 
  1325  081D                     	;# 
  1326  081E                     	;# 
  1327  081F                     	;# 
  1328  088C                     	;# 
  1329  088D                     	;# 
  1330  088E                     	;# 
  1331  088F                     	;# 
  1332  0890                     	;# 
  1333  0891                     	;# 
  1334  0892                     	;# 
  1335  0893                     	;# 
  1336  0895                     	;# 
  1337  0896                     	;# 
  1338  0897                     	;# 
  1339  0898                     	;# 
  1340  0899                     	;# 
  1341  089A                     	;# 
  1342  089B                     	;# 
  1343  090C                     	;# 
  1344  090E                     	;# 
  1345  090F                     	;# 
  1346  091F                     	;# 
  1347  098F                     	;# 
  1348  098F                     	;# 
  1349  0990                     	;# 
  1350  0991                     	;# 
  1351  0992                     	;# 
  1352  0993                     	;# 
  1353  0994                     	;# 
  1354  0995                     	;# 
  1355  0996                     	;# 
  1356  0997                     	;# 
  1357  1E0F                     	;# 
  1358  1E10                     	;# 
  1359  1E11                     	;# 
  1360  1E12                     	;# 
  1361  1E13                     	;# 
  1362  1E14                     	;# 
  1363  1E15                     	;# 
  1364  1E16                     	;# 
  1365  1E17                     	;# 
  1366  1E18                     	;# 
  1367  1E19                     	;# 
  1368  1E1A                     	;# 
  1369  1E1B                     	;# 
  1370  1E1C                     	;# 
  1371  1E1D                     	;# 
  1372  1E1E                     	;# 
  1373  1E1F                     	;# 
  1374  1E20                     	;# 
  1375  1E21                     	;# 
  1376  1E22                     	;# 
  1377  1E23                     	;# 
  1378  1E24                     	;# 
  1379  1E25                     	;# 
  1380  1E26                     	;# 
  1381  1E27                     	;# 
  1382  1E28                     	;# 
  1383  1E29                     	;# 
  1384  1E2A                     	;# 
  1385  1E2B                     	;# 
  1386  1E2C                     	;# 
  1387  1E2D                     	;# 
  1388  1E2E                     	;# 
  1389  1E2F                     	;# 
  1390  1E30                     	;# 
  1391  1E31                     	;# 
  1392  1E32                     	;# 
  1393  1E33                     	;# 
  1394  1E34                     	;# 
  1395  1E35                     	;# 
  1396  1E36                     	;# 
  1397  1E37                     	;# 
  1398  1E8F                     	;# 
  1399  1E90                     	;# 
  1400  1E91                     	;# 
  1401  1E92                     	;# 
  1402  1E93                     	;# 
  1403  1E94                     	;# 
  1404  1E95                     	;# 
  1405  1E96                     	;# 
  1406  1E97                     	;# 
  1407  1E9C                     	;# 
  1408  1E9D                     	;# 
  1409  1E9E                     	;# 
  1410  1EA1                     	;# 
  1411  1EA2                     	;# 
  1412  1EA3                     	;# 
  1413  1EA4                     	;# 
  1414  1EA9                     	;# 
  1415  1EAA                     	;# 
  1416  1EB1                     	;# 
  1417  1EB2                     	;# 
  1418  1EB8                     	;# 
  1419  1EB9                     	;# 
  1420  1EBA                     	;# 
  1421  1EBB                     	;# 
  1422  1EBC                     	;# 
  1423  1EBD                     	;# 
  1424  1EBE                     	;# 
  1425  1EC3                     	;# 
  1426  1EC5                     	;# 
  1427  1EC6                     	;# 
  1428  1EC7                     	;# 
  1429  1EC8                     	;# 
  1430  1EC9                     	;# 
  1431  1ECA                     	;# 
  1432  1ECB                     	;# 
  1433  1ECB                     	;# 
  1434  1ECB                     	;# 
  1435  1ECC                     	;# 
  1436  1ECC                     	;# 
  1437  1ECC                     	;# 
  1438  1F10                     	;# 
  1439  1F11                     	;# 
  1440  1F12                     	;# 
  1441  1F14                     	;# 
  1442  1F15                     	;# 
  1443  1F1C                     	;# 
  1444  1F1D                     	;# 
  1445  1F1E                     	;# 
  1446  1F1F                     	;# 
  1447  1F20                     	;# 
  1448  1F21                     	;# 
  1449  1F22                     	;# 
  1450  1F23                     	;# 
  1451  1F24                     	;# 
  1452  1F25                     	;# 
  1453  1F26                     	;# 
  1454  1F27                     	;# 
  1455  1F38                     	;# 
  1456  1F39                     	;# 
  1457  1F3A                     	;# 
  1458  1F3B                     	;# 
  1459  1F3C                     	;# 
  1460  1F3D                     	;# 
  1461  1F3E                     	;# 
  1462  1F3F                     	;# 
  1463  1F43                     	;# 
  1464  1F44                     	;# 
  1465  1F45                     	;# 
  1466  1F46                     	;# 
  1467  1F47                     	;# 
  1468  1F48                     	;# 
  1469  1F49                     	;# 
  1470  1F4A                     	;# 
  1471  1F4E                     	;# 
  1472  1F4F                     	;# 
  1473  1F50                     	;# 
  1474  1F51                     	;# 
  1475  1F52                     	;# 
  1476  1F53                     	;# 
  1477  1F54                     	;# 
  1478  1F55                     	;# 
  1479  1FE4                     	;# 
  1480  1FE5                     	;# 
  1481  1FE6                     	;# 
  1482  1FE7                     	;# 
  1483  1FE8                     	;# 
  1484  1FE8                     	;# 
  1485  1FE9                     	;# 
  1486  1FEA                     	;# 
  1487  1FEB                     	;# 
  1488  1FED                     	;# 
  1489  1FEE                     	;# 
  1490  1FEF                     	;# 
  1491  0000                     	;# 
  1492  0001                     	;# 
  1493  0002                     	;# 
  1494  0003                     	;# 
  1495  0004                     	;# 
  1496  0005                     	;# 
  1497  0006                     	;# 
  1498  0007                     	;# 
  1499  0008                     	;# 
  1500  0009                     	;# 
  1501  000A                     	;# 
  1502  000B                     	;# 
  1503  000C                     	;# 
  1504  000D                     	;# 
  1505  000E                     	;# 
  1506  0012                     	;# 
  1507  0013                     	;# 
  1508  0014                     	;# 
  1509  0018                     	;# 
  1510  0019                     	;# 
  1511  001A                     	;# 
  1512  008C                     	;# 
  1513  008C                     	;# 
  1514  008D                     	;# 
  1515  008E                     	;# 
  1516  008E                     	;# 
  1517  008F                     	;# 
  1518  0090                     	;# 
  1519  0090                     	;# 
  1520  0091                     	;# 
  1521  0092                     	;# 
  1522  0092                     	;# 
  1523  0093                     	;# 
  1524  0094                     	;# 
  1525  0094                     	;# 
  1526  0095                     	;# 
  1527  0096                     	;# 
  1528  0096                     	;# 
  1529  0097                     	;# 
  1530  0098                     	;# 
  1531  0099                     	;# 
  1532  009A                     	;# 
  1533  009B                     	;# 
  1534  009B                     	;# 
  1535  009C                     	;# 
  1536  009D                     	;# 
  1537  009D                     	;# 
  1538  009E                     	;# 
  1539  009F                     	;# 
  1540  010C                     	;# 
  1541  010C                     	;# 
  1542  010D                     	;# 
  1543  010E                     	;# 
  1544  010F                     	;# 
  1545  010F                     	;# 
  1546  0110                     	;# 
  1547  0111                     	;# 
  1548  0112                     	;# 
  1549  0113                     	;# 
  1550  0114                     	;# 
  1551  0115                     	;# 
  1552  0116                     	;# 
  1553  0117                     	;# 
  1554  0118                     	;# 
  1555  0119                     	;# 
  1556  0119                     	;# 
  1557  0119                     	;# 
  1558  011A                     	;# 
  1559  011A                     	;# 
  1560  011A                     	;# 
  1561  011B                     	;# 
  1562  011B                     	;# 
  1563  011B                     	;# 
  1564  011B                     	;# 
  1565  011B                     	;# 
  1566  011C                     	;# 
  1567  011C                     	;# 
  1568  011C                     	;# 
  1569  011D                     	;# 
  1570  011D                     	;# 
  1571  011D                     	;# 
  1572  011E                     	;# 
  1573  011E                     	;# 
  1574  011E                     	;# 
  1575  011F                     	;# 
  1576  011F                     	;# 
  1577  011F                     	;# 
  1578  011F                     	;# 
  1579  011F                     	;# 
  1580  018C                     	;# 
  1581  018D                     	;# 
  1582  018E                     	;# 
  1583  018F                     	;# 
  1584  0190                     	;# 
  1585  0191                     	;# 
  1586  0192                     	;# 
  1587  0196                     	;# 
  1588  0197                     	;# 
  1589  0198                     	;# 
  1590  0199                     	;# 
  1591  019A                     	;# 
  1592  019B                     	;# 
  1593  019C                     	;# 
  1594  020C                     	;# 
  1595  020D                     	;# 
  1596  020E                     	;# 
  1597  020E                     	;# 
  1598  020F                     	;# 
  1599  020F                     	;# 
  1600  0210                     	;# 
  1601  0210                     	;# 
  1602  0211                     	;# 
  1603  0211                     	;# 
  1604  0212                     	;# 
  1605  0213                     	;# 
  1606  0214                     	;# 
  1607  0214                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0216                     	;# 
  1611  0216                     	;# 
  1612  0217                     	;# 
  1613  0217                     	;# 
  1614  0218                     	;# 
  1615  0219                     	;# 
  1616  021A                     	;# 
  1617  021A                     	;# 
  1618  021B                     	;# 
  1619  021B                     	;# 
  1620  021C                     	;# 
  1621  021C                     	;# 
  1622  021D                     	;# 
  1623  021D                     	;# 
  1624  021E                     	;# 
  1625  021F                     	;# 
  1626  028C                     	;# 
  1627  028C                     	;# 
  1628  028D                     	;# 
  1629  028D                     	;# 
  1630  028E                     	;# 
  1631  028F                     	;# 
  1632  0290                     	;# 
  1633  0291                     	;# 
  1634  0292                     	;# 
  1635  0292                     	;# 
  1636  0293                     	;# 
  1637  0293                     	;# 
  1638  0294                     	;# 
  1639  0295                     	;# 
  1640  0296                     	;# 
  1641  0297                     	;# 
  1642  0298                     	;# 
  1643  0298                     	;# 
  1644  0299                     	;# 
  1645  0299                     	;# 
  1646  029A                     	;# 
  1647  029B                     	;# 
  1648  029C                     	;# 
  1649  029D                     	;# 
  1650  029F                     	;# 
  1651  030C                     	;# 
  1652  030C                     	;# 
  1653  030D                     	;# 
  1654  030E                     	;# 
  1655  030F                     	;# 
  1656  0310                     	;# 
  1657  0310                     	;# 
  1658  0311                     	;# 
  1659  0312                     	;# 
  1660  0313                     	;# 
  1661  0314                     	;# 
  1662  0314                     	;# 
  1663  0315                     	;# 
  1664  0316                     	;# 
  1665  0317                     	;# 
  1666  0318                     	;# 
  1667  0318                     	;# 
  1668  0319                     	;# 
  1669  031A                     	;# 
  1670  031B                     	;# 
  1671  038C                     	;# 
  1672  038C                     	;# 
  1673  038D                     	;# 
  1674  038E                     	;# 
  1675  0390                     	;# 
  1676  0390                     	;# 
  1677  0391                     	;# 
  1678  0392                     	;# 
  1679  048C                     	;# 
  1680  048C                     	;# 
  1681  048D                     	;# 
  1682  048E                     	;# 
  1683  048F                     	;# 
  1684  048F                     	;# 
  1685  0490                     	;# 
  1686  0491                     	;# 
  1687  0492                     	;# 
  1688  0492                     	;# 
  1689  0493                     	;# 
  1690  0494                     	;# 
  1691  0495                     	;# 
  1692  0495                     	;# 
  1693  0496                     	;# 
  1694  0497                     	;# 
  1695  0498                     	;# 
  1696  0499                     	;# 
  1697  049A                     	;# 
  1698  049B                     	;# 
  1699  049C                     	;# 
  1700  049D                     	;# 
  1701  058C                     	;# 
  1702  058C                     	;# 
  1703  058D                     	;# 
  1704  058E                     	;# 
  1705  058F                     	;# 
  1706  058F                     	;# 
  1707  0590                     	;# 
  1708  0591                     	;# 
  1709  0592                     	;# 
  1710  0593                     	;# 
  1711  059C                     	;# 
  1712  059C                     	;# 
  1713  059D                     	;# 
  1714  059D                     	;# 
  1715  059E                     	;# 
  1716  059F                     	;# 
  1717  060C                     	;# 
  1718  060C                     	;# 
  1719  060D                     	;# 
  1720  060D                     	;# 
  1721  060E                     	;# 
  1722  060F                     	;# 
  1723  0610                     	;# 
  1724  0611                     	;# 
  1725  0612                     	;# 
  1726  0613                     	;# 
  1727  0614                     	;# 
  1728  0616                     	;# 
  1729  0616                     	;# 
  1730  0617                     	;# 
  1731  0617                     	;# 
  1732  0618                     	;# 
  1733  0619                     	;# 
  1734  061A                     	;# 
  1735  061B                     	;# 
  1736  061C                     	;# 
  1737  061D                     	;# 
  1738  061E                     	;# 
  1739  070C                     	;# 
  1740  070D                     	;# 
  1741  070E                     	;# 
  1742  070F                     	;# 
  1743  0710                     	;# 
  1744  0711                     	;# 
  1745  0712                     	;# 
  1746  0713                     	;# 
  1747  0714                     	;# 
  1748  0716                     	;# 
  1749  0717                     	;# 
  1750  0718                     	;# 
  1751  0719                     	;# 
  1752  071A                     	;# 
  1753  071B                     	;# 
  1754  071C                     	;# 
  1755  071D                     	;# 
  1756  071E                     	;# 
  1757  0796                     	;# 
  1758  0797                     	;# 
  1759  0798                     	;# 
  1760  0799                     	;# 
  1761  079A                     	;# 
  1762  079B                     	;# 
  1763  079C                     	;# 
  1764  079D                     	;# 
  1765  080C                     	;# 
  1766  080D                     	;# 
  1767  080E                     	;# 
  1768  080F                     	;# 
  1769  0810                     	;# 
  1770  0811                     	;# 
  1771  0812                     	;# 
  1772  0813                     	;# 
  1773  0814                     	;# 
  1774  081A                     	;# 
  1775  081A                     	;# 
  1776  081B                     	;# 
  1777  081C                     	;# 
  1778  081C                     	;# 
  1779  081D                     	;# 
  1780  081E                     	;# 
  1781  081F                     	;# 
  1782  088C                     	;# 
  1783  088D                     	;# 
  1784  088E                     	;# 
  1785  088F                     	;# 
  1786  0890                     	;# 
  1787  0891                     	;# 
  1788  0892                     	;# 
  1789  0893                     	;# 
  1790  0895                     	;# 
  1791  0896                     	;# 
  1792  0897                     	;# 
  1793  0898                     	;# 
  1794  0899                     	;# 
  1795  089A                     	;# 
  1796  089B                     	;# 
  1797  090C                     	;# 
  1798  090E                     	;# 
  1799  090F                     	;# 
  1800  091F                     	;# 
  1801  098F                     	;# 
  1802  098F                     	;# 
  1803  0990                     	;# 
  1804  0991                     	;# 
  1805  0992                     	;# 
  1806  0993                     	;# 
  1807  0994                     	;# 
  1808  0995                     	;# 
  1809  0996                     	;# 
  1810  0997                     	;# 
  1811  1E0F                     	;# 
  1812  1E10                     	;# 
  1813  1E11                     	;# 
  1814  1E12                     	;# 
  1815  1E13                     	;# 
  1816  1E14                     	;# 
  1817  1E15                     	;# 
  1818  1E16                     	;# 
  1819  1E17                     	;# 
  1820  1E18                     	;# 
  1821  1E19                     	;# 
  1822  1E1A                     	;# 
  1823  1E1B                     	;# 
  1824  1E1C                     	;# 
  1825  1E1D                     	;# 
  1826  1E1E                     	;# 
  1827  1E1F                     	;# 
  1828  1E20                     	;# 
  1829  1E21                     	;# 
  1830  1E22                     	;# 
  1831  1E23                     	;# 
  1832  1E24                     	;# 
  1833  1E25                     	;# 
  1834  1E26                     	;# 
  1835  1E27                     	;# 
  1836  1E28                     	;# 
  1837  1E29                     	;# 
  1838  1E2A                     	;# 
  1839  1E2B                     	;# 
  1840  1E2C                     	;# 
  1841  1E2D                     	;# 
  1842  1E2E                     	;# 
  1843  1E2F                     	;# 
  1844  1E30                     	;# 
  1845  1E31                     	;# 
  1846  1E32                     	;# 
  1847  1E33                     	;# 
  1848  1E34                     	;# 
  1849  1E35                     	;# 
  1850  1E36                     	;# 
  1851  1E37                     	;# 
  1852  1E8F                     	;# 
  1853  1E90                     	;# 
  1854  1E91                     	;# 
  1855  1E92                     	;# 
  1856  1E93                     	;# 
  1857  1E94                     	;# 
  1858  1E95                     	;# 
  1859  1E96                     	;# 
  1860  1E97                     	;# 
  1861  1E9C                     	;# 
  1862  1E9D                     	;# 
  1863  1E9E                     	;# 
  1864  1EA1                     	;# 
  1865  1EA2                     	;# 
  1866  1EA3                     	;# 
  1867  1EA4                     	;# 
  1868  1EA9                     	;# 
  1869  1EAA                     	;# 
  1870  1EB1                     	;# 
  1871  1EB2                     	;# 
  1872  1EB8                     	;# 
  1873  1EB9                     	;# 
  1874  1EBA                     	;# 
  1875  1EBB                     	;# 
  1876  1EBC                     	;# 
  1877  1EBD                     	;# 
  1878  1EBE                     	;# 
  1879  1EC3                     	;# 
  1880  1EC5                     	;# 
  1881  1EC6                     	;# 
  1882  1EC7                     	;# 
  1883  1EC8                     	;# 
  1884  1EC9                     	;# 
  1885  1ECA                     	;# 
  1886  1ECB                     	;# 
  1887  1ECB                     	;# 
  1888  1ECB                     	;# 
  1889  1ECC                     	;# 
  1890  1ECC                     	;# 
  1891  1ECC                     	;# 
  1892  1F10                     	;# 
  1893  1F11                     	;# 
  1894  1F12                     	;# 
  1895  1F14                     	;# 
  1896  1F15                     	;# 
  1897  1F1C                     	;# 
  1898  1F1D                     	;# 
  1899  1F1E                     	;# 
  1900  1F1F                     	;# 
  1901  1F20                     	;# 
  1902  1F21                     	;# 
  1903  1F22                     	;# 
  1904  1F23                     	;# 
  1905  1F24                     	;# 
  1906  1F25                     	;# 
  1907  1F26                     	;# 
  1908  1F27                     	;# 
  1909  1F38                     	;# 
  1910  1F39                     	;# 
  1911  1F3A                     	;# 
  1912  1F3B                     	;# 
  1913  1F3C                     	;# 
  1914  1F3D                     	;# 
  1915  1F3E                     	;# 
  1916  1F3F                     	;# 
  1917  1F43                     	;# 
  1918  1F44                     	;# 
  1919  1F45                     	;# 
  1920  1F46                     	;# 
  1921  1F47                     	;# 
  1922  1F48                     	;# 
  1923  1F49                     	;# 
  1924  1F4A                     	;# 
  1925  1F4E                     	;# 
  1926  1F4F                     	;# 
  1927  1F50                     	;# 
  1928  1F51                     	;# 
  1929  1F52                     	;# 
  1930  1F53                     	;# 
  1931  1F54                     	;# 
  1932  1F55                     	;# 
  1933  1FE4                     	;# 
  1934  1FE5                     	;# 
  1935  1FE6                     	;# 
  1936  1FE7                     	;# 
  1937  1FE8                     	;# 
  1938  1FE8                     	;# 
  1939  1FE9                     	;# 
  1940  1FEA                     	;# 
  1941  1FEB                     	;# 
  1942  1FED                     	;# 
  1943  1FEE                     	;# 
  1944  1FEF                     	;# 
  1945  0000                     	;# 
  1946  0001                     	;# 
  1947  0002                     	;# 
  1948  0003                     	;# 
  1949  0004                     	;# 
  1950  0005                     	;# 
  1951  0006                     	;# 
  1952  0007                     	;# 
  1953  0008                     	;# 
  1954  0009                     	;# 
  1955  000A                     	;# 
  1956  000B                     	;# 
  1957  000C                     	;# 
  1958  000D                     	;# 
  1959  000E                     	;# 
  1960  0012                     	;# 
  1961  0013                     	;# 
  1962  0014                     	;# 
  1963  0018                     	;# 
  1964  0019                     	;# 
  1965  001A                     	;# 
  1966  008C                     	;# 
  1967  008C                     	;# 
  1968  008D                     	;# 
  1969  008E                     	;# 
  1970  008E                     	;# 
  1971  008F                     	;# 
  1972  0090                     	;# 
  1973  0090                     	;# 
  1974  0091                     	;# 
  1975  0092                     	;# 
  1976  0092                     	;# 
  1977  0093                     	;# 
  1978  0094                     	;# 
  1979  0094                     	;# 
  1980  0095                     	;# 
  1981  0096                     	;# 
  1982  0096                     	;# 
  1983  0097                     	;# 
  1984  0098                     	;# 
  1985  0099                     	;# 
  1986  009A                     	;# 
  1987  009B                     	;# 
  1988  009B                     	;# 
  1989  009C                     	;# 
  1990  009D                     	;# 
  1991  009D                     	;# 
  1992  009E                     	;# 
  1993  009F                     	;# 
  1994  010C                     	;# 
  1995  010C                     	;# 
  1996  010D                     	;# 
  1997  010E                     	;# 
  1998  010F                     	;# 
  1999  010F                     	;# 
  2000  0110                     	;# 
  2001  0111                     	;# 
  2002  0112                     	;# 
  2003  0113                     	;# 
  2004  0114                     	;# 
  2005  0115                     	;# 
  2006  0116                     	;# 
  2007  0117                     	;# 
  2008  0118                     	;# 
  2009  0119                     	;# 
  2010  0119                     	;# 
  2011  0119                     	;# 
  2012  011A                     	;# 
  2013  011A                     	;# 
  2014  011A                     	;# 
  2015  011B                     	;# 
  2016  011B                     	;# 
  2017  011B                     	;# 
  2018  011B                     	;# 
  2019  011B                     	;# 
  2020  011C                     	;# 
  2021  011C                     	;# 
  2022  011C                     	;# 
  2023  011D                     	;# 
  2024  011D                     	;# 
  2025  011D                     	;# 
  2026  011E                     	;# 
  2027  011E                     	;# 
  2028  011E                     	;# 
  2029  011F                     	;# 
  2030  011F                     	;# 
  2031  011F                     	;# 
  2032  011F                     	;# 
  2033  011F                     	;# 
  2034  018C                     	;# 
  2035  018D                     	;# 
  2036  018E                     	;# 
  2037  018F                     	;# 
  2038  0190                     	;# 
  2039  0191                     	;# 
  2040  0192                     	;# 
  2041  0196                     	;# 
  2042  0197                     	;# 
  2043  0198                     	;# 
  2044  0199                     	;# 
  2045  019A                     	;# 
  2046  019B                     	;# 
  2047  019C                     	;# 
  2048  020C                     	;# 
  2049  020D                     	;# 
  2050  020E                     	;# 
  2051  020E                     	;# 
  2052  020F                     	;# 
  2053  020F                     	;# 
  2054  0210                     	;# 
  2055  0210                     	;# 
  2056  0211                     	;# 
  2057  0211                     	;# 
  2058  0212                     	;# 
  2059  0213                     	;# 
  2060  0214                     	;# 
  2061  0214                     	;# 
  2062  0215                     	;# 
  2063  0215                     	;# 
  2064  0216                     	;# 
  2065  0216                     	;# 
  2066  0217                     	;# 
  2067  0217                     	;# 
  2068  0218                     	;# 
  2069  0219                     	;# 
  2070  021A                     	;# 
  2071  021A                     	;# 
  2072  021B                     	;# 
  2073  021B                     	;# 
  2074  021C                     	;# 
  2075  021C                     	;# 
  2076  021D                     	;# 
  2077  021D                     	;# 
  2078  021E                     	;# 
  2079  021F                     	;# 
  2080  028C                     	;# 
  2081  028C                     	;# 
  2082  028D                     	;# 
  2083  028D                     	;# 
  2084  028E                     	;# 
  2085  028F                     	;# 
  2086  0290                     	;# 
  2087  0291                     	;# 
  2088  0292                     	;# 
  2089  0292                     	;# 
  2090  0293                     	;# 
  2091  0293                     	;# 
  2092  0294                     	;# 
  2093  0295                     	;# 
  2094  0296                     	;# 
  2095  0297                     	;# 
  2096  0298                     	;# 
  2097  0298                     	;# 
  2098  0299                     	;# 
  2099  0299                     	;# 
  2100  029A                     	;# 
  2101  029B                     	;# 
  2102  029C                     	;# 
  2103  029D                     	;# 
  2104  029F                     	;# 
  2105  030C                     	;# 
  2106  030C                     	;# 
  2107  030D                     	;# 
  2108  030E                     	;# 
  2109  030F                     	;# 
  2110  0310                     	;# 
  2111  0310                     	;# 
  2112  0311                     	;# 
  2113  0312                     	;# 
  2114  0313                     	;# 
  2115  0314                     	;# 
  2116  0314                     	;# 
  2117  0315                     	;# 
  2118  0316                     	;# 
  2119  0317                     	;# 
  2120  0318                     	;# 
  2121  0318                     	;# 
  2122  0319                     	;# 
  2123  031A                     	;# 
  2124  031B                     	;# 
  2125  038C                     	;# 
  2126  038C                     	;# 
  2127  038D                     	;# 
  2128  038E                     	;# 
  2129  0390                     	;# 
  2130  0390                     	;# 
  2131  0391                     	;# 
  2132  0392                     	;# 
  2133  048C                     	;# 
  2134  048C                     	;# 
  2135  048D                     	;# 
  2136  048E                     	;# 
  2137  048F                     	;# 
  2138  048F                     	;# 
  2139  0490                     	;# 
  2140  0491                     	;# 
  2141  0492                     	;# 
  2142  0492                     	;# 
  2143  0493                     	;# 
  2144  0494                     	;# 
  2145  0495                     	;# 
  2146  0495                     	;# 
  2147  0496                     	;# 
  2148  0497                     	;# 
  2149  0498                     	;# 
  2150  0499                     	;# 
  2151  049A                     	;# 
  2152  049B                     	;# 
  2153  049C                     	;# 
  2154  049D                     	;# 
  2155  058C                     	;# 
  2156  058C                     	;# 
  2157  058D                     	;# 
  2158  058E                     	;# 
  2159  058F                     	;# 
  2160  058F                     	;# 
  2161  0590                     	;# 
  2162  0591                     	;# 
  2163  0592                     	;# 
  2164  0593                     	;# 
  2165  059C                     	;# 
  2166  059C                     	;# 
  2167  059D                     	;# 
  2168  059D                     	;# 
  2169  059E                     	;# 
  2170  059F                     	;# 
  2171  060C                     	;# 
  2172  060C                     	;# 
  2173  060D                     	;# 
  2174  060D                     	;# 
  2175  060E                     	;# 
  2176  060F                     	;# 
  2177  0610                     	;# 
  2178  0611                     	;# 
  2179  0612                     	;# 
  2180  0613                     	;# 
  2181  0614                     	;# 
  2182  0616                     	;# 
  2183  0616                     	;# 
  2184  0617                     	;# 
  2185  0617                     	;# 
  2186  0618                     	;# 
  2187  0619                     	;# 
  2188  061A                     	;# 
  2189  061B                     	;# 
  2190  061C                     	;# 
  2191  061D                     	;# 
  2192  061E                     	;# 
  2193  070C                     	;# 
  2194  070D                     	;# 
  2195  070E                     	;# 
  2196  070F                     	;# 
  2197  0710                     	;# 
  2198  0711                     	;# 
  2199  0712                     	;# 
  2200  0713                     	;# 
  2201  0714                     	;# 
  2202  0716                     	;# 
  2203  0717                     	;# 
  2204  0718                     	;# 
  2205  0719                     	;# 
  2206  071A                     	;# 
  2207  071B                     	;# 
  2208  071C                     	;# 
  2209  071D                     	;# 
  2210  071E                     	;# 
  2211  0796                     	;# 
  2212  0797                     	;# 
  2213  0798                     	;# 
  2214  0799                     	;# 
  2215  079A                     	;# 
  2216  079B                     	;# 
  2217  079C                     	;# 
  2218  079D                     	;# 
  2219  080C                     	;# 
  2220  080D                     	;# 
  2221  080E                     	;# 
  2222  080F                     	;# 
  2223  0810                     	;# 
  2224  0811                     	;# 
  2225  0812                     	;# 
  2226  0813                     	;# 
  2227  0814                     	;# 
  2228  081A                     	;# 
  2229  081A                     	;# 
  2230  081B                     	;# 
  2231  081C                     	;# 
  2232  081C                     	;# 
  2233  081D                     	;# 
  2234  081E                     	;# 
  2235  081F                     	;# 
  2236  088C                     	;# 
  2237  088D                     	;# 
  2238  088E                     	;# 
  2239  088F                     	;# 
  2240  0890                     	;# 
  2241  0891                     	;# 
  2242  0892                     	;# 
  2243  0893                     	;# 
  2244  0895                     	;# 
  2245  0896                     	;# 
  2246  0897                     	;# 
  2247  0898                     	;# 
  2248  0899                     	;# 
  2249  089A                     	;# 
  2250  089B                     	;# 
  2251  090C                     	;# 
  2252  090E                     	;# 
  2253  090F                     	;# 
  2254  091F                     	;# 
  2255  098F                     	;# 
  2256  098F                     	;# 
  2257  0990                     	;# 
  2258  0991                     	;# 
  2259  0992                     	;# 
  2260  0993                     	;# 
  2261  0994                     	;# 
  2262  0995                     	;# 
  2263  0996                     	;# 
  2264  0997                     	;# 
  2265  1E0F                     	;# 
  2266  1E10                     	;# 
  2267  1E11                     	;# 
  2268  1E12                     	;# 
  2269  1E13                     	;# 
  2270  1E14                     	;# 
  2271  1E15                     	;# 
  2272  1E16                     	;# 
  2273  1E17                     	;# 
  2274  1E18                     	;# 
  2275  1E19                     	;# 
  2276  1E1A                     	;# 
  2277  1E1B                     	;# 
  2278  1E1C                     	;# 
  2279  1E1D                     	;# 
  2280  1E1E                     	;# 
  2281  1E1F                     	;# 
  2282  1E20                     	;# 
  2283  1E21                     	;# 
  2284  1E22                     	;# 
  2285  1E23                     	;# 
  2286  1E24                     	;# 
  2287  1E25                     	;# 
  2288  1E26                     	;# 
  2289  1E27                     	;# 
  2290  1E28                     	;# 
  2291  1E29                     	;# 
  2292  1E2A                     	;# 
  2293  1E2B                     	;# 
  2294  1E2C                     	;# 
  2295  1E2D                     	;# 
  2296  1E2E                     	;# 
  2297  1E2F                     	;# 
  2298  1E30                     	;# 
  2299  1E31                     	;# 
  2300  1E32                     	;# 
  2301  1E33                     	;# 
  2302  1E34                     	;# 
  2303  1E35                     	;# 
  2304  1E36                     	;# 
  2305  1E37                     	;# 
  2306  1E8F                     	;# 
  2307  1E90                     	;# 
  2308  1E91                     	;# 
  2309  1E92                     	;# 
  2310  1E93                     	;# 
  2311  1E94                     	;# 
  2312  1E95                     	;# 
  2313  1E96                     	;# 
  2314  1E97                     	;# 
  2315  1E9C                     	;# 
  2316  1E9D                     	;# 
  2317  1E9E                     	;# 
  2318  1EA1                     	;# 
  2319  1EA2                     	;# 
  2320  1EA3                     	;# 
  2321  1EA4                     	;# 
  2322  1EA9                     	;# 
  2323  1EAA                     	;# 
  2324  1EB1                     	;# 
  2325  1EB2                     	;# 
  2326  1EB8                     	;# 
  2327  1EB9                     	;# 
  2328  1EBA                     	;# 
  2329  1EBB                     	;# 
  2330  1EBC                     	;# 
  2331  1EBD                     	;# 
  2332  1EBE                     	;# 
  2333  1EC3                     	;# 
  2334  1EC5                     	;# 
  2335  1EC6                     	;# 
  2336  1EC7                     	;# 
  2337  1EC8                     	;# 
  2338  1EC9                     	;# 
  2339  1ECA                     	;# 
  2340  1ECB                     	;# 
  2341  1ECB                     	;# 
  2342  1ECB                     	;# 
  2343  1ECC                     	;# 
  2344  1ECC                     	;# 
  2345  1ECC                     	;# 
  2346  1F10                     	;# 
  2347  1F11                     	;# 
  2348  1F12                     	;# 
  2349  1F14                     	;# 
  2350  1F15                     	;# 
  2351  1F1C                     	;# 
  2352  1F1D                     	;# 
  2353  1F1E                     	;# 
  2354  1F1F                     	;# 
  2355  1F20                     	;# 
  2356  1F21                     	;# 
  2357  1F22                     	;# 
  2358  1F23                     	;# 
  2359  1F24                     	;# 
  2360  1F25                     	;# 
  2361  1F26                     	;# 
  2362  1F27                     	;# 
  2363  1F38                     	;# 
  2364  1F39                     	;# 
  2365  1F3A                     	;# 
  2366  1F3B                     	;# 
  2367  1F3C                     	;# 
  2368  1F3D                     	;# 
  2369  1F3E                     	;# 
  2370  1F3F                     	;# 
  2371  1F43                     	;# 
  2372  1F44                     	;# 
  2373  1F45                     	;# 
  2374  1F46                     	;# 
  2375  1F47                     	;# 
  2376  1F48                     	;# 
  2377  1F49                     	;# 
  2378  1F4A                     	;# 
  2379  1F4E                     	;# 
  2380  1F4F                     	;# 
  2381  1F50                     	;# 
  2382  1F51                     	;# 
  2383  1F52                     	;# 
  2384  1F53                     	;# 
  2385  1F54                     	;# 
  2386  1F55                     	;# 
  2387  1FE4                     	;# 
  2388  1FE5                     	;# 
  2389  1FE6                     	;# 
  2390  1FE7                     	;# 
  2391  1FE8                     	;# 
  2392  1FE8                     	;# 
  2393  1FE9                     	;# 
  2394  1FEA                     	;# 
  2395  1FEB                     	;# 
  2396  1FED                     	;# 
  2397  1FEE                     	;# 
  2398  1FEF                     	;# 
  2399  0000                     	;# 
  2400  0001                     	;# 
  2401  0002                     	;# 
  2402  0003                     	;# 
  2403  0004                     	;# 
  2404  0005                     	;# 
  2405  0006                     	;# 
  2406  0007                     	;# 
  2407  0008                     	;# 
  2408  0009                     	;# 
  2409  000A                     	;# 
  2410  000B                     	;# 
  2411  000C                     	;# 
  2412  000D                     	;# 
  2413  000E                     	;# 
  2414  0012                     	;# 
  2415  0013                     	;# 
  2416  0014                     	;# 
  2417  0018                     	;# 
  2418  0019                     	;# 
  2419  001A                     	;# 
  2420  008C                     	;# 
  2421  008C                     	;# 
  2422  008D                     	;# 
  2423  008E                     	;# 
  2424  008E                     	;# 
  2425  008F                     	;# 
  2426  0090                     	;# 
  2427  0090                     	;# 
  2428  0091                     	;# 
  2429  0092                     	;# 
  2430  0092                     	;# 
  2431  0093                     	;# 
  2432  0094                     	;# 
  2433  0094                     	;# 
  2434  0095                     	;# 
  2435  0096                     	;# 
  2436  0096                     	;# 
  2437  0097                     	;# 
  2438  0098                     	;# 
  2439  0099                     	;# 
  2440  009A                     	;# 
  2441  009B                     	;# 
  2442  009B                     	;# 
  2443  009C                     	;# 
  2444  009D                     	;# 
  2445  009D                     	;# 
  2446  009E                     	;# 
  2447  009F                     	;# 
  2448  010C                     	;# 
  2449  010C                     	;# 
  2450  010D                     	;# 
  2451  010E                     	;# 
  2452  010F                     	;# 
  2453  010F                     	;# 
  2454  0110                     	;# 
  2455  0111                     	;# 
  2456  0112                     	;# 
  2457  0113                     	;# 
  2458  0114                     	;# 
  2459  0115                     	;# 
  2460  0116                     	;# 
  2461  0117                     	;# 
  2462  0118                     	;# 
  2463  0119                     	;# 
  2464  0119                     	;# 
  2465  0119                     	;# 
  2466  011A                     	;# 
  2467  011A                     	;# 
  2468  011A                     	;# 
  2469  011B                     	;# 
  2470  011B                     	;# 
  2471  011B                     	;# 
  2472  011B                     	;# 
  2473  011B                     	;# 
  2474  011C                     	;# 
  2475  011C                     	;# 
  2476  011C                     	;# 
  2477  011D                     	;# 
  2478  011D                     	;# 
  2479  011D                     	;# 
  2480  011E                     	;# 
  2481  011E                     	;# 
  2482  011E                     	;# 
  2483  011F                     	;# 
  2484  011F                     	;# 
  2485  011F                     	;# 
  2486  011F                     	;# 
  2487  011F                     	;# 
  2488  018C                     	;# 
  2489  018D                     	;# 
  2490  018E                     	;# 
  2491  018F                     	;# 
  2492  0190                     	;# 
  2493  0191                     	;# 
  2494  0192                     	;# 
  2495  0196                     	;# 
  2496  0197                     	;# 
  2497  0198                     	;# 
  2498  0199                     	;# 
  2499  019A                     	;# 
  2500  019B                     	;# 
  2501  019C                     	;# 
  2502  020C                     	;# 
  2503  020D                     	;# 
  2504  020E                     	;# 
  2505  020E                     	;# 
  2506  020F                     	;# 
  2507  020F                     	;# 
  2508  0210                     	;# 
  2509  0210                     	;# 
  2510  0211                     	;# 
  2511  0211                     	;# 
  2512  0212                     	;# 
  2513  0213                     	;# 
  2514  0214                     	;# 
  2515  0214                     	;# 
  2516  0215                     	;# 
  2517  0215                     	;# 
  2518  0216                     	;# 
  2519  0216                     	;# 
  2520  0217                     	;# 
  2521  0217                     	;# 
  2522  0218                     	;# 
  2523  0219                     	;# 
  2524  021A                     	;# 
  2525  021A                     	;# 
  2526  021B                     	;# 
  2527  021B                     	;# 
  2528  021C                     	;# 
  2529  021C                     	;# 
  2530  021D                     	;# 
  2531  021D                     	;# 
  2532  021E                     	;# 
  2533  021F                     	;# 
  2534  028C                     	;# 
  2535  028C                     	;# 
  2536  028D                     	;# 
  2537  028D                     	;# 
  2538  028E                     	;# 
  2539  028F                     	;# 
  2540  0290                     	;# 
  2541  0291                     	;# 
  2542  0292                     	;# 
  2543  0292                     	;# 
  2544  0293                     	;# 
  2545  0293                     	;# 
  2546  0294                     	;# 
  2547  0295                     	;# 
  2548  0296                     	;# 
  2549  0297                     	;# 
  2550  0298                     	;# 
  2551  0298                     	;# 
  2552  0299                     	;# 
  2553  0299                     	;# 
  2554  029A                     	;# 
  2555  029B                     	;# 
  2556  029C                     	;# 
  2557  029D                     	;# 
  2558  029F                     	;# 
  2559  030C                     	;# 
  2560  030C                     	;# 
  2561  030D                     	;# 
  2562  030E                     	;# 
  2563  030F                     	;# 
  2564  0310                     	;# 
  2565  0310                     	;# 
  2566  0311                     	;# 
  2567  0312                     	;# 
  2568  0313                     	;# 
  2569  0314                     	;# 
  2570  0314                     	;# 
  2571  0315                     	;# 
  2572  0316                     	;# 
  2573  0317                     	;# 
  2574  0318                     	;# 
  2575  0318                     	;# 
  2576  0319                     	;# 
  2577  031A                     	;# 
  2578  031B                     	;# 
  2579  038C                     	;# 
  2580  038C                     	;# 
  2581  038D                     	;# 
  2582  038E                     	;# 
  2583  0390                     	;# 
  2584  0390                     	;# 
  2585  0391                     	;# 
  2586  0392                     	;# 
  2587  048C                     	;# 
  2588  048C                     	;# 
  2589  048D                     	;# 
  2590  048E                     	;# 
  2591  048F                     	;# 
  2592  048F                     	;# 
  2593  0490                     	;# 
  2594  0491                     	;# 
  2595  0492                     	;# 
  2596  0492                     	;# 
  2597  0493                     	;# 
  2598  0494                     	;# 
  2599  0495                     	;# 
  2600  0495                     	;# 
  2601  0496                     	;# 
  2602  0497                     	;# 
  2603  0498                     	;# 
  2604  0499                     	;# 
  2605  049A                     	;# 
  2606  049B                     	;# 
  2607  049C                     	;# 
  2608  049D                     	;# 
  2609  058C                     	;# 
  2610  058C                     	;# 
  2611  058D                     	;# 
  2612  058E                     	;# 
  2613  058F                     	;# 
  2614  058F                     	;# 
  2615  0590                     	;# 
  2616  0591                     	;# 
  2617  0592                     	;# 
  2618  0593                     	;# 
  2619  059C                     	;# 
  2620  059C                     	;# 
  2621  059D                     	;# 
  2622  059D                     	;# 
  2623  059E                     	;# 
  2624  059F                     	;# 
  2625  060C                     	;# 
  2626  060C                     	;# 
  2627  060D                     	;# 
  2628  060D                     	;# 
  2629  060E                     	;# 
  2630  060F                     	;# 
  2631  0610                     	;# 
  2632  0611                     	;# 
  2633  0612                     	;# 
  2634  0613                     	;# 
  2635  0614                     	;# 
  2636  0616                     	;# 
  2637  0616                     	;# 
  2638  0617                     	;# 
  2639  0617                     	;# 
  2640  0618                     	;# 
  2641  0619                     	;# 
  2642  061A                     	;# 
  2643  061B                     	;# 
  2644  061C                     	;# 
  2645  061D                     	;# 
  2646  061E                     	;# 
  2647  070C                     	;# 
  2648  070D                     	;# 
  2649  070E                     	;# 
  2650  070F                     	;# 
  2651  0710                     	;# 
  2652  0711                     	;# 
  2653  0712                     	;# 
  2654  0713                     	;# 
  2655  0714                     	;# 
  2656  0716                     	;# 
  2657  0717                     	;# 
  2658  0718                     	;# 
  2659  0719                     	;# 
  2660  071A                     	;# 
  2661  071B                     	;# 
  2662  071C                     	;# 
  2663  071D                     	;# 
  2664  071E                     	;# 
  2665  0796                     	;# 
  2666  0797                     	;# 
  2667  0798                     	;# 
  2668  0799                     	;# 
  2669  079A                     	;# 
  2670  079B                     	;# 
  2671  079C                     	;# 
  2672  079D                     	;# 
  2673  080C                     	;# 
  2674  080D                     	;# 
  2675  080E                     	;# 
  2676  080F                     	;# 
  2677  0810                     	;# 
  2678  0811                     	;# 
  2679  0812                     	;# 
  2680  0813                     	;# 
  2681  0814                     	;# 
  2682  081A                     	;# 
  2683  081A                     	;# 
  2684  081B                     	;# 
  2685  081C                     	;# 
  2686  081C                     	;# 
  2687  081D                     	;# 
  2688  081E                     	;# 
  2689  081F                     	;# 
  2690  088C                     	;# 
  2691  088D                     	;# 
  2692  088E                     	;# 
  2693  088F                     	;# 
  2694  0890                     	;# 
  2695  0891                     	;# 
  2696  0892                     	;# 
  2697  0893                     	;# 
  2698  0895                     	;# 
  2699  0896                     	;# 
  2700  0897                     	;# 
  2701  0898                     	;# 
  2702  0899                     	;# 
  2703  089A                     	;# 
  2704  089B                     	;# 
  2705  090C                     	;# 
  2706  090E                     	;# 
  2707  090F                     	;# 
  2708  091F                     	;# 
  2709  098F                     	;# 
  2710  098F                     	;# 
  2711  0990                     	;# 
  2712  0991                     	;# 
  2713  0992                     	;# 
  2714  0993                     	;# 
  2715  0994                     	;# 
  2716  0995                     	;# 
  2717  0996                     	;# 
  2718  0997                     	;# 
  2719  1E0F                     	;# 
  2720  1E10                     	;# 
  2721  1E11                     	;# 
  2722  1E12                     	;# 
  2723  1E13                     	;# 
  2724  1E14                     	;# 
  2725  1E15                     	;# 
  2726  1E16                     	;# 
  2727  1E17                     	;# 
  2728  1E18                     	;# 
  2729  1E19                     	;# 
  2730  1E1A                     	;# 
  2731  1E1B                     	;# 
  2732  1E1C                     	;# 
  2733  1E1D                     	;# 
  2734  1E1E                     	;# 
  2735  1E1F                     	;# 
  2736  1E20                     	;# 
  2737  1E21                     	;# 
  2738  1E22                     	;# 
  2739  1E23                     	;# 
  2740  1E24                     	;# 
  2741  1E25                     	;# 
  2742  1E26                     	;# 
  2743  1E27                     	;# 
  2744  1E28                     	;# 
  2745  1E29                     	;# 
  2746  1E2A                     	;# 
  2747  1E2B                     	;# 
  2748  1E2C                     	;# 
  2749  1E2D                     	;# 
  2750  1E2E                     	;# 
  2751  1E2F                     	;# 
  2752  1E30                     	;# 
  2753  1E31                     	;# 
  2754  1E32                     	;# 
  2755  1E33                     	;# 
  2756  1E34                     	;# 
  2757  1E35                     	;# 
  2758  1E36                     	;# 
  2759  1E37                     	;# 
  2760  1E8F                     	;# 
  2761  1E90                     	;# 
  2762  1E91                     	;# 
  2763  1E92                     	;# 
  2764  1E93                     	;# 
  2765  1E94                     	;# 
  2766  1E95                     	;# 
  2767  1E96                     	;# 
  2768  1E97                     	;# 
  2769  1E9C                     	;# 
  2770  1E9D                     	;# 
  2771  1E9E                     	;# 
  2772  1EA1                     	;# 
  2773  1EA2                     	;# 
  2774  1EA3                     	;# 
  2775  1EA4                     	;# 
  2776  1EA9                     	;# 
  2777  1EAA                     	;# 
  2778  1EB1                     	;# 
  2779  1EB2                     	;# 
  2780  1EB8                     	;# 
  2781  1EB9                     	;# 
  2782  1EBA                     	;# 
  2783  1EBB                     	;# 
  2784  1EBC                     	;# 
  2785  1EBD                     	;# 
  2786  1EBE                     	;# 
  2787  1EC3                     	;# 
  2788  1EC5                     	;# 
  2789  1EC6                     	;# 
  2790  1EC7                     	;# 
  2791  1EC8                     	;# 
  2792  1EC9                     	;# 
  2793  1ECA                     	;# 
  2794  1ECB                     	;# 
  2795  1ECB                     	;# 
  2796  1ECB                     	;# 
  2797  1ECC                     	;# 
  2798  1ECC                     	;# 
  2799  1ECC                     	;# 
  2800  1F10                     	;# 
  2801  1F11                     	;# 
  2802  1F12                     	;# 
  2803  1F14                     	;# 
  2804  1F15                     	;# 
  2805  1F1C                     	;# 
  2806  1F1D                     	;# 
  2807  1F1E                     	;# 
  2808  1F1F                     	;# 
  2809  1F20                     	;# 
  2810  1F21                     	;# 
  2811  1F22                     	;# 
  2812  1F23                     	;# 
  2813  1F24                     	;# 
  2814  1F25                     	;# 
  2815  1F26                     	;# 
  2816  1F27                     	;# 
  2817  1F38                     	;# 
  2818  1F39                     	;# 
  2819  1F3A                     	;# 
  2820  1F3B                     	;# 
  2821  1F3C                     	;# 
  2822  1F3D                     	;# 
  2823  1F3E                     	;# 
  2824  1F3F                     	;# 
  2825  1F43                     	;# 
  2826  1F44                     	;# 
  2827  1F45                     	;# 
  2828  1F46                     	;# 
  2829  1F47                     	;# 
  2830  1F48                     	;# 
  2831  1F49                     	;# 
  2832  1F4A                     	;# 
  2833  1F4E                     	;# 
  2834  1F4F                     	;# 
  2835  1F50                     	;# 
  2836  1F51                     	;# 
  2837  1F52                     	;# 
  2838  1F53                     	;# 
  2839  1F54                     	;# 
  2840  1F55                     	;# 
  2841  1FE4                     	;# 
  2842  1FE5                     	;# 
  2843  1FE6                     	;# 
  2844  1FE7                     	;# 
  2845  1FE8                     	;# 
  2846  1FE8                     	;# 
  2847  1FE9                     	;# 
  2848  1FEA                     	;# 
  2849  1FEB                     	;# 
  2850  1FED                     	;# 
  2851  1FEE                     	;# 
  2852  1FEF                     	;# 
  2853  0000                     	;# 
  2854  0001                     	;# 
  2855  0002                     	;# 
  2856  0003                     	;# 
  2857  0004                     	;# 
  2858  0005                     	;# 
  2859  0006                     	;# 
  2860  0007                     	;# 
  2861  0008                     	;# 
  2862  0009                     	;# 
  2863  000A                     	;# 
  2864  000B                     	;# 
  2865  000C                     	;# 
  2866  000D                     	;# 
  2867  000E                     	;# 
  2868  0012                     	;# 
  2869  0013                     	;# 
  2870  0014                     	;# 
  2871  0018                     	;# 
  2872  0019                     	;# 
  2873  001A                     	;# 
  2874  008C                     	;# 
  2875  008C                     	;# 
  2876  008D                     	;# 
  2877  008E                     	;# 
  2878  008E                     	;# 
  2879  008F                     	;# 
  2880  0090                     	;# 
  2881  0090                     	;# 
  2882  0091                     	;# 
  2883  0092                     	;# 
  2884  0092                     	;# 
  2885  0093                     	;# 
  2886  0094                     	;# 
  2887  0094                     	;# 
  2888  0095                     	;# 
  2889  0096                     	;# 
  2890  0096                     	;# 
  2891  0097                     	;# 
  2892  0098                     	;# 
  2893  0099                     	;# 
  2894  009A                     	;# 
  2895  009B                     	;# 
  2896  009B                     	;# 
  2897  009C                     	;# 
  2898  009D                     	;# 
  2899  009D                     	;# 
  2900  009E                     	;# 
  2901  009F                     	;# 
  2902  010C                     	;# 
  2903  010C                     	;# 
  2904  010D                     	;# 
  2905  010E                     	;# 
  2906  010F                     	;# 
  2907  010F                     	;# 
  2908  0110                     	;# 
  2909  0111                     	;# 
  2910  0112                     	;# 
  2911  0113                     	;# 
  2912  0114                     	;# 
  2913  0115                     	;# 
  2914  0116                     	;# 
  2915  0117                     	;# 
  2916  0118                     	;# 
  2917  0119                     	;# 
  2918  0119                     	;# 
  2919  0119                     	;# 
  2920  011A                     	;# 
  2921  011A                     	;# 
  2922  011A                     	;# 
  2923  011B                     	;# 
  2924  011B                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011C                     	;# 
  2929  011C                     	;# 
  2930  011C                     	;# 
  2931  011D                     	;# 
  2932  011D                     	;# 
  2933  011D                     	;# 
  2934  011E                     	;# 
  2935  011E                     	;# 
  2936  011E                     	;# 
  2937  011F                     	;# 
  2938  011F                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  018C                     	;# 
  2943  018D                     	;# 
  2944  018E                     	;# 
  2945  018F                     	;# 
  2946  0190                     	;# 
  2947  0191                     	;# 
  2948  0192                     	;# 
  2949  0196                     	;# 
  2950  0197                     	;# 
  2951  0198                     	;# 
  2952  0199                     	;# 
  2953  019A                     	;# 
  2954  019B                     	;# 
  2955  019C                     	;# 
  2956  020C                     	;# 
  2957  020D                     	;# 
  2958  020E                     	;# 
  2959  020E                     	;# 
  2960  020F                     	;# 
  2961  020F                     	;# 
  2962  0210                     	;# 
  2963  0210                     	;# 
  2964  0211                     	;# 
  2965  0211                     	;# 
  2966  0212                     	;# 
  2967  0213                     	;# 
  2968  0214                     	;# 
  2969  0214                     	;# 
  2970  0215                     	;# 
  2971  0215                     	;# 
  2972  0216                     	;# 
  2973  0216                     	;# 
  2974  0217                     	;# 
  2975  0217                     	;# 
  2976  0218                     	;# 
  2977  0219                     	;# 
  2978  021A                     	;# 
  2979  021A                     	;# 
  2980  021B                     	;# 
  2981  021B                     	;# 
  2982  021C                     	;# 
  2983  021C                     	;# 
  2984  021D                     	;# 
  2985  021D                     	;# 
  2986  021E                     	;# 
  2987  021F                     	;# 
  2988  028C                     	;# 
  2989  028C                     	;# 
  2990  028D                     	;# 
  2991  028D                     	;# 
  2992  028E                     	;# 
  2993  028F                     	;# 
  2994  0290                     	;# 
  2995  0291                     	;# 
  2996  0292                     	;# 
  2997  0292                     	;# 
  2998  0293                     	;# 
  2999  0293                     	;# 
  3000  0294                     	;# 
  3001  0295                     	;# 
  3002  0296                     	;# 
  3003  0297                     	;# 
  3004  0298                     	;# 
  3005  0298                     	;# 
  3006  0299                     	;# 
  3007  0299                     	;# 
  3008  029A                     	;# 
  3009  029B                     	;# 
  3010  029C                     	;# 
  3011  029D                     	;# 
  3012  029F                     	;# 
  3013  030C                     	;# 
  3014  030C                     	;# 
  3015  030D                     	;# 
  3016  030E                     	;# 
  3017  030F                     	;# 
  3018  0310                     	;# 
  3019  0310                     	;# 
  3020  0311                     	;# 
  3021  0312                     	;# 
  3022  0313                     	;# 
  3023  0314                     	;# 
  3024  0314                     	;# 
  3025  0315                     	;# 
  3026  0316                     	;# 
  3027  0317                     	;# 
  3028  0318                     	;# 
  3029  0318                     	;# 
  3030  0319                     	;# 
  3031  031A                     	;# 
  3032  031B                     	;# 
  3033  038C                     	;# 
  3034  038C                     	;# 
  3035  038D                     	;# 
  3036  038E                     	;# 
  3037  0390                     	;# 
  3038  0390                     	;# 
  3039  0391                     	;# 
  3040  0392                     	;# 
  3041  048C                     	;# 
  3042  048C                     	;# 
  3043  048D                     	;# 
  3044  048E                     	;# 
  3045  048F                     	;# 
  3046  048F                     	;# 
  3047  0490                     	;# 
  3048  0491                     	;# 
  3049  0492                     	;# 
  3050  0492                     	;# 
  3051  0493                     	;# 
  3052  0494                     	;# 
  3053  0495                     	;# 
  3054  0495                     	;# 
  3055  0496                     	;# 
  3056  0497                     	;# 
  3057  0498                     	;# 
  3058  0499                     	;# 
  3059  049A                     	;# 
  3060  049B                     	;# 
  3061  049C                     	;# 
  3062  049D                     	;# 
  3063  058C                     	;# 
  3064  058C                     	;# 
  3065  058D                     	;# 
  3066  058E                     	;# 
  3067  058F                     	;# 
  3068  058F                     	;# 
  3069  0590                     	;# 
  3070  0591                     	;# 
  3071  0592                     	;# 
  3072  0593                     	;# 
  3073  059C                     	;# 
  3074  059C                     	;# 
  3075  059D                     	;# 
  3076  059D                     	;# 
  3077  059E                     	;# 
  3078  059F                     	;# 
  3079  060C                     	;# 
  3080  060C                     	;# 
  3081  060D                     	;# 
  3082  060D                     	;# 
  3083  060E                     	;# 
  3084  060F                     	;# 
  3085  0610                     	;# 
  3086  0611                     	;# 
  3087  0612                     	;# 
  3088  0613                     	;# 
  3089  0614                     	;# 
  3090  0616                     	;# 
  3091  0616                     	;# 
  3092  0617                     	;# 
  3093  0617                     	;# 
  3094  0618                     	;# 
  3095  0619                     	;# 
  3096  061A                     	;# 
  3097  061B                     	;# 
  3098  061C                     	;# 
  3099  061D                     	;# 
  3100  061E                     	;# 
  3101  070C                     	;# 
  3102  070D                     	;# 
  3103  070E                     	;# 
  3104  070F                     	;# 
  3105  0710                     	;# 
  3106  0711                     	;# 
  3107  0712                     	;# 
  3108  0713                     	;# 
  3109  0714                     	;# 
  3110  0716                     	;# 
  3111  0717                     	;# 
  3112  0718                     	;# 
  3113  0719                     	;# 
  3114  071A                     	;# 
  3115  071B                     	;# 
  3116  071C                     	;# 
  3117  071D                     	;# 
  3118  071E                     	;# 
  3119  0796                     	;# 
  3120  0797                     	;# 
  3121  0798                     	;# 
  3122  0799                     	;# 
  3123  079A                     	;# 
  3124  079B                     	;# 
  3125  079C                     	;# 
  3126  079D                     	;# 
  3127  080C                     	;# 
  3128  080D                     	;# 
  3129  080E                     	;# 
  3130  080F                     	;# 
  3131  0810                     	;# 
  3132  0811                     	;# 
  3133  0812                     	;# 
  3134  0813                     	;# 
  3135  0814                     	;# 
  3136  081A                     	;# 
  3137  081A                     	;# 
  3138  081B                     	;# 
  3139  081C                     	;# 
  3140  081C                     	;# 
  3141  081D                     	;# 
  3142  081E                     	;# 
  3143  081F                     	;# 
  3144  088C                     	;# 
  3145  088D                     	;# 
  3146  088E                     	;# 
  3147  088F                     	;# 
  3148  0890                     	;# 
  3149  0891                     	;# 
  3150  0892                     	;# 
  3151  0893                     	;# 
  3152  0895                     	;# 
  3153  0896                     	;# 
  3154  0897                     	;# 
  3155  0898                     	;# 
  3156  0899                     	;# 
  3157  089A                     	;# 
  3158  089B                     	;# 
  3159  090C                     	;# 
  3160  090E                     	;# 
  3161  090F                     	;# 
  3162  091F                     	;# 
  3163  098F                     	;# 
  3164  098F                     	;# 
  3165  0990                     	;# 
  3166  0991                     	;# 
  3167  0992                     	;# 
  3168  0993                     	;# 
  3169  0994                     	;# 
  3170  0995                     	;# 
  3171  0996                     	;# 
  3172  0997                     	;# 
  3173  1E0F                     	;# 
  3174  1E10                     	;# 
  3175  1E11                     	;# 
  3176  1E12                     	;# 
  3177  1E13                     	;# 
  3178  1E14                     	;# 
  3179  1E15                     	;# 
  3180  1E16                     	;# 
  3181  1E17                     	;# 
  3182  1E18                     	;# 
  3183  1E19                     	;# 
  3184  1E1A                     	;# 
  3185  1E1B                     	;# 
  3186  1E1C                     	;# 
  3187  1E1D                     	;# 
  3188  1E1E                     	;# 
  3189  1E1F                     	;# 
  3190  1E20                     	;# 
  3191  1E21                     	;# 
  3192  1E22                     	;# 
  3193  1E23                     	;# 
  3194  1E24                     	;# 
  3195  1E25                     	;# 
  3196  1E26                     	;# 
  3197  1E27                     	;# 
  3198  1E28                     	;# 
  3199  1E29                     	;# 
  3200  1E2A                     	;# 
  3201  1E2B                     	;# 
  3202  1E2C                     	;# 
  3203  1E2D                     	;# 
  3204  1E2E                     	;# 
  3205  1E2F                     	;# 
  3206  1E30                     	;# 
  3207  1E31                     	;# 
  3208  1E32                     	;# 
  3209  1E33                     	;# 
  3210  1E34                     	;# 
  3211  1E35                     	;# 
  3212  1E36                     	;# 
  3213  1E37                     	;# 
  3214  1E8F                     	;# 
  3215  1E90                     	;# 
  3216  1E91                     	;# 
  3217  1E92                     	;# 
  3218  1E93                     	;# 
  3219  1E94                     	;# 
  3220  1E95                     	;# 
  3221  1E96                     	;# 
  3222  1E97                     	;# 
  3223  1E9C                     	;# 
  3224  1E9D                     	;# 
  3225  1E9E                     	;# 
  3226  1EA1                     	;# 
  3227  1EA2                     	;# 
  3228  1EA3                     	;# 
  3229  1EA4                     	;# 
  3230  1EA9                     	;# 
  3231  1EAA                     	;# 
  3232  1EB1                     	;# 
  3233  1EB2                     	;# 
  3234  1EB8                     	;# 
  3235  1EB9                     	;# 
  3236  1EBA                     	;# 
  3237  1EBB                     	;# 
  3238  1EBC                     	;# 
  3239  1EBD                     	;# 
  3240  1EBE                     	;# 
  3241  1EC3                     	;# 
  3242  1EC5                     	;# 
  3243  1EC6                     	;# 
  3244  1EC7                     	;# 
  3245  1EC8                     	;# 
  3246  1EC9                     	;# 
  3247  1ECA                     	;# 
  3248  1ECB                     	;# 
  3249  1ECB                     	;# 
  3250  1ECB                     	;# 
  3251  1ECC                     	;# 
  3252  1ECC                     	;# 
  3253  1ECC                     	;# 
  3254  1F10                     	;# 
  3255  1F11                     	;# 
  3256  1F12                     	;# 
  3257  1F14                     	;# 
  3258  1F15                     	;# 
  3259  1F1C                     	;# 
  3260  1F1D                     	;# 
  3261  1F1E                     	;# 
  3262  1F1F                     	;# 
  3263  1F20                     	;# 
  3264  1F21                     	;# 
  3265  1F22                     	;# 
  3266  1F23                     	;# 
  3267  1F24                     	;# 
  3268  1F25                     	;# 
  3269  1F26                     	;# 
  3270  1F27                     	;# 
  3271  1F38                     	;# 
  3272  1F39                     	;# 
  3273  1F3A                     	;# 
  3274  1F3B                     	;# 
  3275  1F3C                     	;# 
  3276  1F3D                     	;# 
  3277  1F3E                     	;# 
  3278  1F3F                     	;# 
  3279  1F43                     	;# 
  3280  1F44                     	;# 
  3281  1F45                     	;# 
  3282  1F46                     	;# 
  3283  1F47                     	;# 
  3284  1F48                     	;# 
  3285  1F49                     	;# 
  3286  1F4A                     	;# 
  3287  1F4E                     	;# 
  3288  1F4F                     	;# 
  3289  1F50                     	;# 
  3290  1F51                     	;# 
  3291  1F52                     	;# 
  3292  1F53                     	;# 
  3293  1F54                     	;# 
  3294  1F55                     	;# 
  3295  1FE4                     	;# 
  3296  1FE5                     	;# 
  3297  1FE6                     	;# 
  3298  1FE7                     	;# 
  3299  1FE8                     	;# 
  3300  1FE8                     	;# 
  3301  1FE9                     	;# 
  3302  1FEA                     	;# 
  3303  1FEB                     	;# 
  3304  1FED                     	;# 
  3305  1FEE                     	;# 
  3306  1FEF                     	;# 
  3307  0000                     	;# 
  3308  0001                     	;# 
  3309  0002                     	;# 
  3310  0003                     	;# 
  3311  0004                     	;# 
  3312  0005                     	;# 
  3313  0006                     	;# 
  3314  0007                     	;# 
  3315  0008                     	;# 
  3316  0009                     	;# 
  3317  000A                     	;# 
  3318  000B                     	;# 
  3319  000C                     	;# 
  3320  000D                     	;# 
  3321  000E                     	;# 
  3322  0012                     	;# 
  3323  0013                     	;# 
  3324  0014                     	;# 
  3325  0018                     	;# 
  3326  0019                     	;# 
  3327  001A                     	;# 
  3328  008C                     	;# 
  3329  008C                     	;# 
  3330  008D                     	;# 
  3331  008E                     	;# 
  3332  008E                     	;# 
  3333  008F                     	;# 
  3334  0090                     	;# 
  3335  0090                     	;# 
  3336  0091                     	;# 
  3337  0092                     	;# 
  3338  0092                     	;# 
  3339  0093                     	;# 
  3340  0094                     	;# 
  3341  0094                     	;# 
  3342  0095                     	;# 
  3343  0096                     	;# 
  3344  0096                     	;# 
  3345  0097                     	;# 
  3346  0098                     	;# 
  3347  0099                     	;# 
  3348  009A                     	;# 
  3349  009B                     	;# 
  3350  009B                     	;# 
  3351  009C                     	;# 
  3352  009D                     	;# 
  3353  009D                     	;# 
  3354  009E                     	;# 
  3355  009F                     	;# 
  3356  010C                     	;# 
  3357  010C                     	;# 
  3358  010D                     	;# 
  3359  010E                     	;# 
  3360  010F                     	;# 
  3361  010F                     	;# 
  3362  0110                     	;# 
  3363  0111                     	;# 
  3364  0112                     	;# 
  3365  0113                     	;# 
  3366  0114                     	;# 
  3367  0115                     	;# 
  3368  0116                     	;# 
  3369  0117                     	;# 
  3370  0118                     	;# 
  3371  0119                     	;# 
  3372  0119                     	;# 
  3373  0119                     	;# 
  3374  011A                     	;# 
  3375  011A                     	;# 
  3376  011A                     	;# 
  3377  011B                     	;# 
  3378  011B                     	;# 
  3379  011B                     	;# 
  3380  011B                     	;# 
  3381  011B                     	;# 
  3382  011C                     	;# 
  3383  011C                     	;# 
  3384  011C                     	;# 
  3385  011D                     	;# 
  3386  011D                     	;# 
  3387  011D                     	;# 
  3388  011E                     	;# 
  3389  011E                     	;# 
  3390  011E                     	;# 
  3391  011F                     	;# 
  3392  011F                     	;# 
  3393  011F                     	;# 
  3394  011F                     	;# 
  3395  011F                     	;# 
  3396  018C                     	;# 
  3397  018D                     	;# 
  3398  018E                     	;# 
  3399  018F                     	;# 
  3400  0190                     	;# 
  3401  0191                     	;# 
  3402  0192                     	;# 
  3403  0196                     	;# 
  3404  0197                     	;# 
  3405  0198                     	;# 
  3406  0199                     	;# 
  3407  019A                     	;# 
  3408  019B                     	;# 
  3409  019C                     	;# 
  3410  020C                     	;# 
  3411  020D                     	;# 
  3412  020E                     	;# 
  3413  020E                     	;# 
  3414  020F                     	;# 
  3415  020F                     	;# 
  3416  0210                     	;# 
  3417  0210                     	;# 
  3418  0211                     	;# 
  3419  0211                     	;# 
  3420  0212                     	;# 
  3421  0213                     	;# 
  3422  0214                     	;# 
  3423  0214                     	;# 
  3424  0215                     	;# 
  3425  0215                     	;# 
  3426  0216                     	;# 
  3427  0216                     	;# 
  3428  0217                     	;# 
  3429  0217                     	;# 
  3430  0218                     	;# 
  3431  0219                     	;# 
  3432  021A                     	;# 
  3433  021A                     	;# 
  3434  021B                     	;# 
  3435  021B                     	;# 
  3436  021C                     	;# 
  3437  021C                     	;# 
  3438  021D                     	;# 
  3439  021D                     	;# 
  3440  021E                     	;# 
  3441  021F                     	;# 
  3442  028C                     	;# 
  3443  028C                     	;# 
  3444  028D                     	;# 
  3445  028D                     	;# 
  3446  028E                     	;# 
  3447  028F                     	;# 
  3448  0290                     	;# 
  3449  0291                     	;# 
  3450  0292                     	;# 
  3451  0292                     	;# 
  3452  0293                     	;# 
  3453  0293                     	;# 
  3454  0294                     	;# 
  3455  0295                     	;# 
  3456  0296                     	;# 
  3457  0297                     	;# 
  3458  0298                     	;# 
  3459  0298                     	;# 
  3460  0299                     	;# 
  3461  0299                     	;# 
  3462  029A                     	;# 
  3463  029B                     	;# 
  3464  029C                     	;# 
  3465  029D                     	;# 
  3466  029F                     	;# 
  3467  030C                     	;# 
  3468  030C                     	;# 
  3469  030D                     	;# 
  3470  030E                     	;# 
  3471  030F                     	;# 
  3472  0310                     	;# 
  3473  0310                     	;# 
  3474  0311                     	;# 
  3475  0312                     	;# 
  3476  0313                     	;# 
  3477  0314                     	;# 
  3478  0314                     	;# 
  3479  0315                     	;# 
  3480  0316                     	;# 
  3481  0317                     	;# 
  3482  0318                     	;# 
  3483  0318                     	;# 
  3484  0319                     	;# 
  3485  031A                     	;# 
  3486  031B                     	;# 
  3487  038C                     	;# 
  3488  038C                     	;# 
  3489  038D                     	;# 
  3490  038E                     	;# 
  3491  0390                     	;# 
  3492  0390                     	;# 
  3493  0391                     	;# 
  3494  0392                     	;# 
  3495  048C                     	;# 
  3496  048C                     	;# 
  3497  048D                     	;# 
  3498  048E                     	;# 
  3499  048F                     	;# 
  3500  048F                     	;# 
  3501  0490                     	;# 
  3502  0491                     	;# 
  3503  0492                     	;# 
  3504  0492                     	;# 
  3505  0493                     	;# 
  3506  0494                     	;# 
  3507  0495                     	;# 
  3508  0495                     	;# 
  3509  0496                     	;# 
  3510  0497                     	;# 
  3511  0498                     	;# 
  3512  0499                     	;# 
  3513  049A                     	;# 
  3514  049B                     	;# 
  3515  049C                     	;# 
  3516  049D                     	;# 
  3517  058C                     	;# 
  3518  058C                     	;# 
  3519  058D                     	;# 
  3520  058E                     	;# 
  3521  058F                     	;# 
  3522  058F                     	;# 
  3523  0590                     	;# 
  3524  0591                     	;# 
  3525  0592                     	;# 
  3526  0593                     	;# 
  3527  059C                     	;# 
  3528  059C                     	;# 
  3529  059D                     	;# 
  3530  059D                     	;# 
  3531  059E                     	;# 
  3532  059F                     	;# 
  3533  060C                     	;# 
  3534  060C                     	;# 
  3535  060D                     	;# 
  3536  060D                     	;# 
  3537  060E                     	;# 
  3538  060F                     	;# 
  3539  0610                     	;# 
  3540  0611                     	;# 
  3541  0612                     	;# 
  3542  0613                     	;# 
  3543  0614                     	;# 
  3544  0616                     	;# 
  3545  0616                     	;# 
  3546  0617                     	;# 
  3547  0617                     	;# 
  3548  0618                     	;# 
  3549  0619                     	;# 
  3550  061A                     	;# 
  3551  061B                     	;# 
  3552  061C                     	;# 
  3553  061D                     	;# 
  3554  061E                     	;# 
  3555  070C                     	;# 
  3556  070D                     	;# 
  3557  070E                     	;# 
  3558  070F                     	;# 
  3559  0710                     	;# 
  3560  0711                     	;# 
  3561  0712                     	;# 
  3562  0713                     	;# 
  3563  0714                     	;# 
  3564  0716                     	;# 
  3565  0717                     	;# 
  3566  0718                     	;# 
  3567  0719                     	;# 
  3568  071A                     	;# 
  3569  071B                     	;# 
  3570  071C                     	;# 
  3571  071D                     	;# 
  3572  071E                     	;# 
  3573  0796                     	;# 
  3574  0797                     	;# 
  3575  0798                     	;# 
  3576  0799                     	;# 
  3577  079A                     	;# 
  3578  079B                     	;# 
  3579  079C                     	;# 
  3580  079D                     	;# 
  3581  080C                     	;# 
  3582  080D                     	;# 
  3583  080E                     	;# 
  3584  080F                     	;# 
  3585  0810                     	;# 
  3586  0811                     	;# 
  3587  0812                     	;# 
  3588  0813                     	;# 
  3589  0814                     	;# 
  3590  081A                     	;# 
  3591  081A                     	;# 
  3592  081B                     	;# 
  3593  081C                     	;# 
  3594  081C                     	;# 
  3595  081D                     	;# 
  3596  081E                     	;# 
  3597  081F                     	;# 
  3598  088C                     	;# 
  3599  088D                     	;# 
  3600  088E                     	;# 
  3601  088F                     	;# 
  3602  0890                     	;# 
  3603  0891                     	;# 
  3604  0892                     	;# 
  3605  0893                     	;# 
  3606  0895                     	;# 
  3607  0896                     	;# 
  3608  0897                     	;# 
  3609  0898                     	;# 
  3610  0899                     	;# 
  3611  089A                     	;# 
  3612  089B                     	;# 
  3613  090C                     	;# 
  3614  090E                     	;# 
  3615  090F                     	;# 
  3616  091F                     	;# 
  3617  098F                     	;# 
  3618  098F                     	;# 
  3619  0990                     	;# 
  3620  0991                     	;# 
  3621  0992                     	;# 
  3622  0993                     	;# 
  3623  0994                     	;# 
  3624  0995                     	;# 
  3625  0996                     	;# 
  3626  0997                     	;# 
  3627  1E0F                     	;# 
  3628  1E10                     	;# 
  3629  1E11                     	;# 
  3630  1E12                     	;# 
  3631  1E13                     	;# 
  3632  1E14                     	;# 
  3633  1E15                     	;# 
  3634  1E16                     	;# 
  3635  1E17                     	;# 
  3636  1E18                     	;# 
  3637  1E19                     	;# 
  3638  1E1A                     	;# 
  3639  1E1B                     	;# 
  3640  1E1C                     	;# 
  3641  1E1D                     	;# 
  3642  1E1E                     	;# 
  3643  1E1F                     	;# 
  3644  1E20                     	;# 
  3645  1E21                     	;# 
  3646  1E22                     	;# 
  3647  1E23                     	;# 
  3648  1E24                     	;# 
  3649  1E25                     	;# 
  3650  1E26                     	;# 
  3651  1E27                     	;# 
  3652  1E28                     	;# 
  3653  1E29                     	;# 
  3654  1E2A                     	;# 
  3655  1E2B                     	;# 
  3656  1E2C                     	;# 
  3657  1E2D                     	;# 
  3658  1E2E                     	;# 
  3659  1E2F                     	;# 
  3660  1E30                     	;# 
  3661  1E31                     	;# 
  3662  1E32                     	;# 
  3663  1E33                     	;# 
  3664  1E34                     	;# 
  3665  1E35                     	;# 
  3666  1E36                     	;# 
  3667  1E37                     	;# 
  3668  1E8F                     	;# 
  3669  1E90                     	;# 
  3670  1E91                     	;# 
  3671  1E92                     	;# 
  3672  1E93                     	;# 
  3673  1E94                     	;# 
  3674  1E95                     	;# 
  3675  1E96                     	;# 
  3676  1E97                     	;# 
  3677  1E9C                     	;# 
  3678  1E9D                     	;# 
  3679  1E9E                     	;# 
  3680  1EA1                     	;# 
  3681  1EA2                     	;# 
  3682  1EA3                     	;# 
  3683  1EA4                     	;# 
  3684  1EA9                     	;# 
  3685  1EAA                     	;# 
  3686  1EB1                     	;# 
  3687  1EB2                     	;# 
  3688  1EB8                     	;# 
  3689  1EB9                     	;# 
  3690  1EBA                     	;# 
  3691  1EBB                     	;# 
  3692  1EBC                     	;# 
  3693  1EBD                     	;# 
  3694  1EBE                     	;# 
  3695  1EC3                     	;# 
  3696  1EC5                     	;# 
  3697  1EC6                     	;# 
  3698  1EC7                     	;# 
  3699  1EC8                     	;# 
  3700  1EC9                     	;# 
  3701  1ECA                     	;# 
  3702  1ECB                     	;# 
  3703  1ECB                     	;# 
  3704  1ECB                     	;# 
  3705  1ECC                     	;# 
  3706  1ECC                     	;# 
  3707  1ECC                     	;# 
  3708  1F10                     	;# 
  3709  1F11                     	;# 
  3710  1F12                     	;# 
  3711  1F14                     	;# 
  3712  1F15                     	;# 
  3713  1F1C                     	;# 
  3714  1F1D                     	;# 
  3715  1F1E                     	;# 
  3716  1F1F                     	;# 
  3717  1F20                     	;# 
  3718  1F21                     	;# 
  3719  1F22                     	;# 
  3720  1F23                     	;# 
  3721  1F24                     	;# 
  3722  1F25                     	;# 
  3723  1F26                     	;# 
  3724  1F27                     	;# 
  3725  1F38                     	;# 
  3726  1F39                     	;# 
  3727  1F3A                     	;# 
  3728  1F3B                     	;# 
  3729  1F3C                     	;# 
  3730  1F3D                     	;# 
  3731  1F3E                     	;# 
  3732  1F3F                     	;# 
  3733  1F43                     	;# 
  3734  1F44                     	;# 
  3735  1F45                     	;# 
  3736  1F46                     	;# 
  3737  1F47                     	;# 
  3738  1F48                     	;# 
  3739  1F49                     	;# 
  3740  1F4A                     	;# 
  3741  1F4E                     	;# 
  3742  1F4F                     	;# 
  3743  1F50                     	;# 
  3744  1F51                     	;# 
  3745  1F52                     	;# 
  3746  1F53                     	;# 
  3747  1F54                     	;# 
  3748  1F55                     	;# 
  3749  1FE4                     	;# 
  3750  1FE5                     	;# 
  3751  1FE6                     	;# 
  3752  1FE7                     	;# 
  3753  1FE8                     	;# 
  3754  1FE8                     	;# 
  3755  1FE9                     	;# 
  3756  1FEA                     	;# 
  3757  1FEB                     	;# 
  3758  1FED                     	;# 
  3759  1FEE                     	;# 
  3760  1FEF                     	;# 
  3761  0000                     	;# 
  3762  0001                     	;# 
  3763  0002                     	;# 
  3764  0003                     	;# 
  3765  0004                     	;# 
  3766  0005                     	;# 
  3767  0006                     	;# 
  3768  0007                     	;# 
  3769  0008                     	;# 
  3770  0009                     	;# 
  3771  000A                     	;# 
  3772  000B                     	;# 
  3773  000C                     	;# 
  3774  000D                     	;# 
  3775  000E                     	;# 
  3776  0012                     	;# 
  3777  0013                     	;# 
  3778  0014                     	;# 
  3779  0018                     	;# 
  3780  0019                     	;# 
  3781  001A                     	;# 
  3782  008C                     	;# 
  3783  008C                     	;# 
  3784  008D                     	;# 
  3785  008E                     	;# 
  3786  008E                     	;# 
  3787  008F                     	;# 
  3788  0090                     	;# 
  3789  0090                     	;# 
  3790  0091                     	;# 
  3791  0092                     	;# 
  3792  0092                     	;# 
  3793  0093                     	;# 
  3794  0094                     	;# 
  3795  0094                     	;# 
  3796  0095                     	;# 
  3797  0096                     	;# 
  3798  0096                     	;# 
  3799  0097                     	;# 
  3800  0098                     	;# 
  3801  0099                     	;# 
  3802  009A                     	;# 
  3803  009B                     	;# 
  3804  009B                     	;# 
  3805  009C                     	;# 
  3806  009D                     	;# 
  3807  009D                     	;# 
  3808  009E                     	;# 
  3809  009F                     	;# 
  3810  010C                     	;# 
  3811  010C                     	;# 
  3812  010D                     	;# 
  3813  010E                     	;# 
  3814  010F                     	;# 
  3815  010F                     	;# 
  3816  0110                     	;# 
  3817  0111                     	;# 
  3818  0112                     	;# 
  3819  0113                     	;# 
  3820  0114                     	;# 
  3821  0115                     	;# 
  3822  0116                     	;# 
  3823  0117                     	;# 
  3824  0118                     	;# 
  3825  0119                     	;# 
  3826  0119                     	;# 
  3827  0119                     	;# 
  3828  011A                     	;# 
  3829  011A                     	;# 
  3830  011A                     	;# 
  3831  011B                     	;# 
  3832  011B                     	;# 
  3833  011B                     	;# 
  3834  011B                     	;# 
  3835  011B                     	;# 
  3836  011C                     	;# 
  3837  011C                     	;# 
  3838  011C                     	;# 
  3839  011D                     	;# 
  3840  011D                     	;# 
  3841  011D                     	;# 
  3842  011E                     	;# 
  3843  011E                     	;# 
  3844  011E                     	;# 
  3845  011F                     	;# 
  3846  011F                     	;# 
  3847  011F                     	;# 
  3848  011F                     	;# 
  3849  011F                     	;# 
  3850  018C                     	;# 
  3851  018D                     	;# 
  3852  018E                     	;# 
  3853  018F                     	;# 
  3854  0190                     	;# 
  3855  0191                     	;# 
  3856  0192                     	;# 
  3857  0196                     	;# 
  3858  0197                     	;# 
  3859  0198                     	;# 
  3860  0199                     	;# 
  3861  019A                     	;# 
  3862  019B                     	;# 
  3863  019C                     	;# 
  3864  020C                     	;# 
  3865  020D                     	;# 
  3866  020E                     	;# 
  3867  020E                     	;# 
  3868  020F                     	;# 
  3869  020F                     	;# 
  3870  0210                     	;# 
  3871  0210                     	;# 
  3872  0211                     	;# 
  3873  0211                     	;# 
  3874  0212                     	;# 
  3875  0213                     	;# 
  3876  0214                     	;# 
  3877  0214                     	;# 
  3878  0215                     	;# 
  3879  0215                     	;# 
  3880  0216                     	;# 
  3881  0216                     	;# 
  3882  0217                     	;# 
  3883  0217                     	;# 
  3884  0218                     	;# 
  3885  0219                     	;# 
  3886  021A                     	;# 
  3887  021A                     	;# 
  3888  021B                     	;# 
  3889  021B                     	;# 
  3890  021C                     	;# 
  3891  021C                     	;# 
  3892  021D                     	;# 
  3893  021D                     	;# 
  3894  021E                     	;# 
  3895  021F                     	;# 
  3896  028C                     	;# 
  3897  028C                     	;# 
  3898  028D                     	;# 
  3899  028D                     	;# 
  3900  028E                     	;# 
  3901  028F                     	;# 
  3902  0290                     	;# 
  3903  0291                     	;# 
  3904  0292                     	;# 
  3905  0292                     	;# 
  3906  0293                     	;# 
  3907  0293                     	;# 
  3908  0294                     	;# 
  3909  0295                     	;# 
  3910  0296                     	;# 
  3911  0297                     	;# 
  3912  0298                     	;# 
  3913  0298                     	;# 
  3914  0299                     	;# 
  3915  0299                     	;# 
  3916  029A                     	;# 
  3917  029B                     	;# 
  3918  029C                     	;# 
  3919  029D                     	;# 
  3920  029F                     	;# 
  3921  030C                     	;# 
  3922  030C                     	;# 
  3923  030D                     	;# 
  3924  030E                     	;# 
  3925  030F                     	;# 
  3926  0310                     	;# 
  3927  0310                     	;# 
  3928  0311                     	;# 
  3929  0312                     	;# 
  3930  0313                     	;# 
  3931  0314                     	;# 
  3932  0314                     	;# 
  3933  0315                     	;# 
  3934  0316                     	;# 
  3935  0317                     	;# 
  3936  0318                     	;# 
  3937  0318                     	;# 
  3938  0319                     	;# 
  3939  031A                     	;# 
  3940  031B                     	;# 
  3941  038C                     	;# 
  3942  038C                     	;# 
  3943  038D                     	;# 
  3944  038E                     	;# 
  3945  0390                     	;# 
  3946  0390                     	;# 
  3947  0391                     	;# 
  3948  0392                     	;# 
  3949  048C                     	;# 
  3950  048C                     	;# 
  3951  048D                     	;# 
  3952  048E                     	;# 
  3953  048F                     	;# 
  3954  048F                     	;# 
  3955  0490                     	;# 
  3956  0491                     	;# 
  3957  0492                     	;# 
  3958  0492                     	;# 
  3959  0493                     	;# 
  3960  0494                     	;# 
  3961  0495                     	;# 
  3962  0495                     	;# 
  3963  0496                     	;# 
  3964  0497                     	;# 
  3965  0498                     	;# 
  3966  0499                     	;# 
  3967  049A                     	;# 
  3968  049B                     	;# 
  3969  049C                     	;# 
  3970  049D                     	;# 
  3971  058C                     	;# 
  3972  058C                     	;# 
  3973  058D                     	;# 
  3974  058E                     	;# 
  3975  058F                     	;# 
  3976  058F                     	;# 
  3977  0590                     	;# 
  3978  0591                     	;# 
  3979  0592                     	;# 
  3980  0593                     	;# 
  3981  059C                     	;# 
  3982  059C                     	;# 
  3983  059D                     	;# 
  3984  059D                     	;# 
  3985  059E                     	;# 
  3986  059F                     	;# 
  3987  060C                     	;# 
  3988  060C                     	;# 
  3989  060D                     	;# 
  3990  060D                     	;# 
  3991  060E                     	;# 
  3992  060F                     	;# 
  3993  0610                     	;# 
  3994  0611                     	;# 
  3995  0612                     	;# 
  3996  0613                     	;# 
  3997  0614                     	;# 
  3998  0616                     	;# 
  3999  0616                     	;# 
  4000  0617                     	;# 
  4001  0617                     	;# 
  4002  0618                     	;# 
  4003  0619                     	;# 
  4004  061A                     	;# 
  4005  061B                     	;# 
  4006  061C                     	;# 
  4007  061D                     	;# 
  4008  061E                     	;# 
  4009  070C                     	;# 
  4010  070D                     	;# 
  4011  070E                     	;# 
  4012  070F                     	;# 
  4013  0710                     	;# 
  4014  0711                     	;# 
  4015  0712                     	;# 
  4016  0713                     	;# 
  4017  0714                     	;# 
  4018  0716                     	;# 
  4019  0717                     	;# 
  4020  0718                     	;# 
  4021  0719                     	;# 
  4022  071A                     	;# 
  4023  071B                     	;# 
  4024  071C                     	;# 
  4025  071D                     	;# 
  4026  071E                     	;# 
  4027  0796                     	;# 
  4028  0797                     	;# 
  4029  0798                     	;# 
  4030  0799                     	;# 
  4031  079A                     	;# 
  4032  079B                     	;# 
  4033  079C                     	;# 
  4034  079D                     	;# 
  4035  080C                     	;# 
  4036  080D                     	;# 
  4037  080E                     	;# 
  4038  080F                     	;# 
  4039  0810                     	;# 
  4040  0811                     	;# 
  4041  0812                     	;# 
  4042  0813                     	;# 
  4043  0814                     	;# 
  4044  081A                     	;# 
  4045  081A                     	;# 
  4046  081B                     	;# 
  4047  081C                     	;# 
  4048  081C                     	;# 
  4049  081D                     	;# 
  4050  081E                     	;# 
  4051  081F                     	;# 
  4052  088C                     	;# 
  4053  088D                     	;# 
  4054  088E                     	;# 
  4055  088F                     	;# 
  4056  0890                     	;# 
  4057  0891                     	;# 
  4058  0892                     	;# 
  4059  0893                     	;# 
  4060  0895                     	;# 
  4061  0896                     	;# 
  4062  0897                     	;# 
  4063  0898                     	;# 
  4064  0899                     	;# 
  4065  089A                     	;# 
  4066  089B                     	;# 
  4067  090C                     	;# 
  4068  090E                     	;# 
  4069  090F                     	;# 
  4070  091F                     	;# 
  4071  098F                     	;# 
  4072  098F                     	;# 
  4073  0990                     	;# 
  4074  0991                     	;# 
  4075  0992                     	;# 
  4076  0993                     	;# 
  4077  0994                     	;# 
  4078  0995                     	;# 
  4079  0996                     	;# 
  4080  0997                     	;# 
  4081  1E0F                     	;# 
  4082  1E10                     	;# 
  4083  1E11                     	;# 
  4084  1E12                     	;# 
  4085  1E13                     	;# 
  4086  1E14                     	;# 
  4087  1E15                     	;# 
  4088  1E16                     	;# 
  4089  1E17                     	;# 
  4090  1E18                     	;# 
  4091  1E19                     	;# 
  4092  1E1A                     	;# 
  4093  1E1B                     	;# 
  4094  1E1C                     	;# 
  4095  1E1D                     	;# 
  4096  1E1E                     	;# 
  4097  1E1F                     	;# 
  4098  1E20                     	;# 
  4099  1E21                     	;# 
  4100  1E22                     	;# 
  4101  1E23                     	;# 
  4102  1E24                     	;# 
  4103  1E25                     	;# 
  4104  1E26                     	;# 
  4105  1E27                     	;# 
  4106  1E28                     	;# 
  4107  1E29                     	;# 
  4108  1E2A                     	;# 
  4109  1E2B                     	;# 
  4110  1E2C                     	;# 
  4111  1E2D                     	;# 
  4112  1E2E                     	;# 
  4113  1E2F                     	;# 
  4114  1E30                     	;# 
  4115  1E31                     	;# 
  4116  1E32                     	;# 
  4117  1E33                     	;# 
  4118  1E34                     	;# 
  4119  1E35                     	;# 
  4120  1E36                     	;# 
  4121  1E37                     	;# 
  4122  1E8F                     	;# 
  4123  1E90                     	;# 
  4124  1E91                     	;# 
  4125  1E92                     	;# 
  4126  1E93                     	;# 
  4127  1E94                     	;# 
  4128  1E95                     	;# 
  4129  1E96                     	;# 
  4130  1E97                     	;# 
  4131  1E9C                     	;# 
  4132  1E9D                     	;# 
  4133  1E9E                     	;# 
  4134  1EA1                     	;# 
  4135  1EA2                     	;# 
  4136  1EA3                     	;# 
  4137  1EA4                     	;# 
  4138  1EA9                     	;# 
  4139  1EAA                     	;# 
  4140  1EB1                     	;# 
  4141  1EB2                     	;# 
  4142  1EB8                     	;# 
  4143  1EB9                     	;# 
  4144  1EBA                     	;# 
  4145  1EBB                     	;# 
  4146  1EBC                     	;# 
  4147  1EBD                     	;# 
  4148  1EBE                     	;# 
  4149  1EC3                     	;# 
  4150  1EC5                     	;# 
  4151  1EC6                     	;# 
  4152  1EC7                     	;# 
  4153  1EC8                     	;# 
  4154  1EC9                     	;# 
  4155  1ECA                     	;# 
  4156  1ECB                     	;# 
  4157  1ECB                     	;# 
  4158  1ECB                     	;# 
  4159  1ECC                     	;# 
  4160  1ECC                     	;# 
  4161  1ECC                     	;# 
  4162  1F10                     	;# 
  4163  1F11                     	;# 
  4164  1F12                     	;# 
  4165  1F14                     	;# 
  4166  1F15                     	;# 
  4167  1F1C                     	;# 
  4168  1F1D                     	;# 
  4169  1F1E                     	;# 
  4170  1F1F                     	;# 
  4171  1F20                     	;# 
  4172  1F21                     	;# 
  4173  1F22                     	;# 
  4174  1F23                     	;# 
  4175  1F24                     	;# 
  4176  1F25                     	;# 
  4177  1F26                     	;# 
  4178  1F27                     	;# 
  4179  1F38                     	;# 
  4180  1F39                     	;# 
  4181  1F3A                     	;# 
  4182  1F3B                     	;# 
  4183  1F3C                     	;# 
  4184  1F3D                     	;# 
  4185  1F3E                     	;# 
  4186  1F3F                     	;# 
  4187  1F43                     	;# 
  4188  1F44                     	;# 
  4189  1F45                     	;# 
  4190  1F46                     	;# 
  4191  1F47                     	;# 
  4192  1F48                     	;# 
  4193  1F49                     	;# 
  4194  1F4A                     	;# 
  4195  1F4E                     	;# 
  4196  1F4F                     	;# 
  4197  1F50                     	;# 
  4198  1F51                     	;# 
  4199  1F52                     	;# 
  4200  1F53                     	;# 
  4201  1F54                     	;# 
  4202  1F55                     	;# 
  4203  1FE4                     	;# 
  4204  1FE5                     	;# 
  4205  1FE6                     	;# 
  4206  1FE7                     	;# 
  4207  1FE8                     	;# 
  4208  1FE8                     	;# 
  4209  1FE9                     	;# 
  4210  1FEA                     	;# 
  4211  1FEB                     	;# 
  4212  1FED                     	;# 
  4213  1FEE                     	;# 
  4214  1FEF                     	;# 
  4215  0000                     	;# 
  4216  0001                     	;# 
  4217  0002                     	;# 
  4218  0003                     	;# 
  4219  0004                     	;# 
  4220  0005                     	;# 
  4221  0006                     	;# 
  4222  0007                     	;# 
  4223  0008                     	;# 
  4224  0009                     	;# 
  4225  000A                     	;# 
  4226  000B                     	;# 
  4227  000C                     	;# 
  4228  000D                     	;# 
  4229  000E                     	;# 
  4230  0012                     	;# 
  4231  0013                     	;# 
  4232  0014                     	;# 
  4233  0018                     	;# 
  4234  0019                     	;# 
  4235  001A                     	;# 
  4236  008C                     	;# 
  4237  008C                     	;# 
  4238  008D                     	;# 
  4239  008E                     	;# 
  4240  008E                     	;# 
  4241  008F                     	;# 
  4242  0090                     	;# 
  4243  0090                     	;# 
  4244  0091                     	;# 
  4245  0092                     	;# 
  4246  0092                     	;# 
  4247  0093                     	;# 
  4248  0094                     	;# 
  4249  0094                     	;# 
  4250  0095                     	;# 
  4251  0096                     	;# 
  4252  0096                     	;# 
  4253  0097                     	;# 
  4254  0098                     	;# 
  4255  0099                     	;# 
  4256  009A                     	;# 
  4257  009B                     	;# 
  4258  009B                     	;# 
  4259  009C                     	;# 
  4260  009D                     	;# 
  4261  009D                     	;# 
  4262  009E                     	;# 
  4263  009F                     	;# 
  4264  010C                     	;# 
  4265  010C                     	;# 
  4266  010D                     	;# 
  4267  010E                     	;# 
  4268  010F                     	;# 
  4269  010F                     	;# 
  4270  0110                     	;# 
  4271  0111                     	;# 
  4272  0112                     	;# 
  4273  0113                     	;# 
  4274  0114                     	;# 
  4275  0115                     	;# 
  4276  0116                     	;# 
  4277  0117                     	;# 
  4278  0118                     	;# 
  4279  0119                     	;# 
  4280  0119                     	;# 
  4281  0119                     	;# 
  4282  011A                     	;# 
  4283  011A                     	;# 
  4284  011A                     	;# 
  4285  011B                     	;# 
  4286  011B                     	;# 
  4287  011B                     	;# 
  4288  011B                     	;# 
  4289  011B                     	;# 
  4290  011C                     	;# 
  4291  011C                     	;# 
  4292  011C                     	;# 
  4293  011D                     	;# 
  4294  011D                     	;# 
  4295  011D                     	;# 
  4296  011E                     	;# 
  4297  011E                     	;# 
  4298  011E                     	;# 
  4299  011F                     	;# 
  4300  011F                     	;# 
  4301  011F                     	;# 
  4302  011F                     	;# 
  4303  011F                     	;# 
  4304  018C                     	;# 
  4305  018D                     	;# 
  4306  018E                     	;# 
  4307  018F                     	;# 
  4308  0190                     	;# 
  4309  0191                     	;# 
  4310  0192                     	;# 
  4311  0196                     	;# 
  4312  0197                     	;# 
  4313  0198                     	;# 
  4314  0199                     	;# 
  4315  019A                     	;# 
  4316  019B                     	;# 
  4317  019C                     	;# 
  4318  020C                     	;# 
  4319  020D                     	;# 
  4320  020E                     	;# 
  4321  020E                     	;# 
  4322  020F                     	;# 
  4323  020F                     	;# 
  4324  0210                     	;# 
  4325  0210                     	;# 
  4326  0211                     	;# 
  4327  0211                     	;# 
  4328  0212                     	;# 
  4329  0213                     	;# 
  4330  0214                     	;# 
  4331  0214                     	;# 
  4332  0215                     	;# 
  4333  0215                     	;# 
  4334  0216                     	;# 
  4335  0216                     	;# 
  4336  0217                     	;# 
  4337  0217                     	;# 
  4338  0218                     	;# 
  4339  0219                     	;# 
  4340  021A                     	;# 
  4341  021A                     	;# 
  4342  021B                     	;# 
  4343  021B                     	;# 
  4344  021C                     	;# 
  4345  021C                     	;# 
  4346  021D                     	;# 
  4347  021D                     	;# 
  4348  021E                     	;# 
  4349  021F                     	;# 
  4350  028C                     	;# 
  4351  028C                     	;# 
  4352  028D                     	;# 
  4353  028D                     	;# 
  4354  028E                     	;# 
  4355  028F                     	;# 
  4356  0290                     	;# 
  4357  0291                     	;# 
  4358  0292                     	;# 
  4359  0292                     	;# 
  4360  0293                     	;# 
  4361  0293                     	;# 
  4362  0294                     	;# 
  4363  0295                     	;# 
  4364  0296                     	;# 
  4365  0297                     	;# 
  4366  0298                     	;# 
  4367  0298                     	;# 
  4368  0299                     	;# 
  4369  0299                     	;# 
  4370  029A                     	;# 
  4371  029B                     	;# 
  4372  029C                     	;# 
  4373  029D                     	;# 
  4374  029F                     	;# 
  4375  030C                     	;# 
  4376  030C                     	;# 
  4377  030D                     	;# 
  4378  030E                     	;# 
  4379  030F                     	;# 
  4380  0310                     	;# 
  4381  0310                     	;# 
  4382  0311                     	;# 
  4383  0312                     	;# 
  4384  0313                     	;# 
  4385  0314                     	;# 
  4386  0314                     	;# 
  4387  0315                     	;# 
  4388  0316                     	;# 
  4389  0317                     	;# 
  4390  0318                     	;# 
  4391  0318                     	;# 
  4392  0319                     	;# 
  4393  031A                     	;# 
  4394  031B                     	;# 
  4395  038C                     	;# 
  4396  038C                     	;# 
  4397  038D                     	;# 
  4398  038E                     	;# 
  4399  0390                     	;# 
  4400  0390                     	;# 
  4401  0391                     	;# 
  4402  0392                     	;# 
  4403  048C                     	;# 
  4404  048C                     	;# 
  4405  048D                     	;# 
  4406  048E                     	;# 
  4407  048F                     	;# 
  4408  048F                     	;# 
  4409  0490                     	;# 
  4410  0491                     	;# 
  4411  0492                     	;# 
  4412  0492                     	;# 
  4413  0493                     	;# 
  4414  0494                     	;# 
  4415  0495                     	;# 
  4416  0495                     	;# 
  4417  0496                     	;# 
  4418  0497                     	;# 
  4419  0498                     	;# 
  4420  0499                     	;# 
  4421  049A                     	;# 
  4422  049B                     	;# 
  4423  049C                     	;# 
  4424  049D                     	;# 
  4425  058C                     	;# 
  4426  058C                     	;# 
  4427  058D                     	;# 
  4428  058E                     	;# 
  4429  058F                     	;# 
  4430  058F                     	;# 
  4431  0590                     	;# 
  4432  0591                     	;# 
  4433  0592                     	;# 
  4434  0593                     	;# 
  4435  059C                     	;# 
  4436  059C                     	;# 
  4437  059D                     	;# 
  4438  059D                     	;# 
  4439  059E                     	;# 
  4440  059F                     	;# 
  4441  060C                     	;# 
  4442  060C                     	;# 
  4443  060D                     	;# 
  4444  060D                     	;# 
  4445  060E                     	;# 
  4446  060F                     	;# 
  4447  0610                     	;# 
  4448  0611                     	;# 
  4449  0612                     	;# 
  4450  0613                     	;# 
  4451  0614                     	;# 
  4452  0616                     	;# 
  4453  0616                     	;# 
  4454  0617                     	;# 
  4455  0617                     	;# 
  4456  0618                     	;# 
  4457  0619                     	;# 
  4458  061A                     	;# 
  4459  061B                     	;# 
  4460  061C                     	;# 
  4461  061D                     	;# 
  4462  061E                     	;# 
  4463  070C                     	;# 
  4464  070D                     	;# 
  4465  070E                     	;# 
  4466  070F                     	;# 
  4467  0710                     	;# 
  4468  0711                     	;# 
  4469  0712                     	;# 
  4470  0713                     	;# 
  4471  0714                     	;# 
  4472  0716                     	;# 
  4473  0717                     	;# 
  4474  0718                     	;# 
  4475  0719                     	;# 
  4476  071A                     	;# 
  4477  071B                     	;# 
  4478  071C                     	;# 
  4479  071D                     	;# 
  4480  071E                     	;# 
  4481  0796                     	;# 
  4482  0797                     	;# 
  4483  0798                     	;# 
  4484  0799                     	;# 
  4485  079A                     	;# 
  4486  079B                     	;# 
  4487  079C                     	;# 
  4488  079D                     	;# 
  4489  080C                     	;# 
  4490  080D                     	;# 
  4491  080E                     	;# 
  4492  080F                     	;# 
  4493  0810                     	;# 
  4494  0811                     	;# 
  4495  0812                     	;# 
  4496  0813                     	;# 
  4497  0814                     	;# 
  4498  081A                     	;# 
  4499  081A                     	;# 
  4500  081B                     	;# 
  4501  081C                     	;# 
  4502  081C                     	;# 
  4503  081D                     	;# 
  4504  081E                     	;# 
  4505  081F                     	;# 
  4506  088C                     	;# 
  4507  088D                     	;# 
  4508  088E                     	;# 
  4509  088F                     	;# 
  4510  0890                     	;# 
  4511  0891                     	;# 
  4512  0892                     	;# 
  4513  0893                     	;# 
  4514  0895                     	;# 
  4515  0896                     	;# 
  4516  0897                     	;# 
  4517  0898                     	;# 
  4518  0899                     	;# 
  4519  089A                     	;# 
  4520  089B                     	;# 
  4521  090C                     	;# 
  4522  090E                     	;# 
  4523  090F                     	;# 
  4524  091F                     	;# 
  4525  098F                     	;# 
  4526  098F                     	;# 
  4527  0990                     	;# 
  4528  0991                     	;# 
  4529  0992                     	;# 
  4530  0993                     	;# 
  4531  0994                     	;# 
  4532  0995                     	;# 
  4533  0996                     	;# 
  4534  0997                     	;# 
  4535  1E0F                     	;# 
  4536  1E10                     	;# 
  4537  1E11                     	;# 
  4538  1E12                     	;# 
  4539  1E13                     	;# 
  4540  1E14                     	;# 
  4541  1E15                     	;# 
  4542  1E16                     	;# 
  4543  1E17                     	;# 
  4544  1E18                     	;# 
  4545  1E19                     	;# 
  4546  1E1A                     	;# 
  4547  1E1B                     	;# 
  4548  1E1C                     	;# 
  4549  1E1D                     	;# 
  4550  1E1E                     	;# 
  4551  1E1F                     	;# 
  4552  1E20                     	;# 
  4553  1E21                     	;# 
  4554  1E22                     	;# 
  4555  1E23                     	;# 
  4556  1E24                     	;# 
  4557  1E25                     	;# 
  4558  1E26                     	;# 
  4559  1E27                     	;# 
  4560  1E28                     	;# 
  4561  1E29                     	;# 
  4562  1E2A                     	;# 
  4563  1E2B                     	;# 
  4564  1E2C                     	;# 
  4565  1E2D                     	;# 
  4566  1E2E                     	;# 
  4567  1E2F                     	;# 
  4568  1E30                     	;# 
  4569  1E31                     	;# 
  4570  1E32                     	;# 
  4571  1E33                     	;# 
  4572  1E34                     	;# 
  4573  1E35                     	;# 
  4574  1E36                     	;# 
  4575  1E37                     	;# 
  4576  1E8F                     	;# 
  4577  1E90                     	;# 
  4578  1E91                     	;# 
  4579  1E92                     	;# 
  4580  1E93                     	;# 
  4581  1E94                     	;# 
  4582  1E95                     	;# 
  4583  1E96                     	;# 
  4584  1E97                     	;# 
  4585  1E9C                     	;# 
  4586  1E9D                     	;# 
  4587  1E9E                     	;# 
  4588  1EA1                     	;# 
  4589  1EA2                     	;# 
  4590  1EA3                     	;# 
  4591  1EA4                     	;# 
  4592  1EA9                     	;# 
  4593  1EAA                     	;# 
  4594  1EB1                     	;# 
  4595  1EB2                     	;# 
  4596  1EB8                     	;# 
  4597  1EB9                     	;# 
  4598  1EBA                     	;# 
  4599  1EBB                     	;# 
  4600  1EBC                     	;# 
  4601  1EBD                     	;# 
  4602  1EBE                     	;# 
  4603  1EC3                     	;# 
  4604  1EC5                     	;# 
  4605  1EC6                     	;# 
  4606  1EC7                     	;# 
  4607  1EC8                     	;# 
  4608  1EC9                     	;# 
  4609  1ECA                     	;# 
  4610  1ECB                     	;# 
  4611  1ECB                     	;# 
  4612  1ECB                     	;# 
  4613  1ECC                     	;# 
  4614  1ECC                     	;# 
  4615  1ECC                     	;# 
  4616  1F10                     	;# 
  4617  1F11                     	;# 
  4618  1F12                     	;# 
  4619  1F14                     	;# 
  4620  1F15                     	;# 
  4621  1F1C                     	;# 
  4622  1F1D                     	;# 
  4623  1F1E                     	;# 
  4624  1F1F                     	;# 
  4625  1F20                     	;# 
  4626  1F21                     	;# 
  4627  1F22                     	;# 
  4628  1F23                     	;# 
  4629  1F24                     	;# 
  4630  1F25                     	;# 
  4631  1F26                     	;# 
  4632  1F27                     	;# 
  4633  1F38                     	;# 
  4634  1F39                     	;# 
  4635  1F3A                     	;# 
  4636  1F3B                     	;# 
  4637  1F3C                     	;# 
  4638  1F3D                     	;# 
  4639  1F3E                     	;# 
  4640  1F3F                     	;# 
  4641  1F43                     	;# 
  4642  1F44                     	;# 
  4643  1F45                     	;# 
  4644  1F46                     	;# 
  4645  1F47                     	;# 
  4646  1F48                     	;# 
  4647  1F49                     	;# 
  4648  1F4A                     	;# 
  4649  1F4E                     	;# 
  4650  1F4F                     	;# 
  4651  1F50                     	;# 
  4652  1F51                     	;# 
  4653  1F52                     	;# 
  4654  1F53                     	;# 
  4655  1F54                     	;# 
  4656  1F55                     	;# 
  4657  1FE4                     	;# 
  4658  1FE5                     	;# 
  4659  1FE6                     	;# 
  4660  1FE7                     	;# 
  4661  1FE8                     	;# 
  4662  1FE8                     	;# 
  4663  1FE9                     	;# 
  4664  1FEA                     	;# 
  4665  1FEB                     	;# 
  4666  1FED                     	;# 
  4667  1FEE                     	;# 
  4668  1FEF                     	;# 
  4669  0000                     	;# 
  4670  0001                     	;# 
  4671  0002                     	;# 
  4672  0003                     	;# 
  4673  0004                     	;# 
  4674  0005                     	;# 
  4675  0006                     	;# 
  4676  0007                     	;# 
  4677  0008                     	;# 
  4678  0009                     	;# 
  4679  000A                     	;# 
  4680  000B                     	;# 
  4681  000C                     	;# 
  4682  000D                     	;# 
  4683  000E                     	;# 
  4684  0012                     	;# 
  4685  0013                     	;# 
  4686  0014                     	;# 
  4687  0018                     	;# 
  4688  0019                     	;# 
  4689  001A                     	;# 
  4690  008C                     	;# 
  4691  008C                     	;# 
  4692  008D                     	;# 
  4693  008E                     	;# 
  4694  008E                     	;# 
  4695  008F                     	;# 
  4696  0090                     	;# 
  4697  0090                     	;# 
  4698  0091                     	;# 
  4699  0092                     	;# 
  4700  0092                     	;# 
  4701  0093                     	;# 
  4702  0094                     	;# 
  4703  0094                     	;# 
  4704  0095                     	;# 
  4705  0096                     	;# 
  4706  0096                     	;# 
  4707  0097                     	;# 
  4708  0098                     	;# 
  4709  0099                     	;# 
  4710  009A                     	;# 
  4711  009B                     	;# 
  4712  009B                     	;# 
  4713  009C                     	;# 
  4714  009D                     	;# 
  4715  009D                     	;# 
  4716  009E                     	;# 
  4717  009F                     	;# 
  4718  010C                     	;# 
  4719  010C                     	;# 
  4720  010D                     	;# 
  4721  010E                     	;# 
  4722  010F                     	;# 
  4723  010F                     	;# 
  4724  0110                     	;# 
  4725  0111                     	;# 
  4726  0112                     	;# 
  4727  0113                     	;# 
  4728  0114                     	;# 
  4729  0115                     	;# 
  4730  0116                     	;# 
  4731  0117                     	;# 
  4732  0118                     	;# 
  4733  0119                     	;# 
  4734  0119                     	;# 
  4735  0119                     	;# 
  4736  011A                     	;# 
  4737  011A                     	;# 
  4738  011A                     	;# 
  4739  011B                     	;# 
  4740  011B                     	;# 
  4741  011B                     	;# 
  4742  011B                     	;# 
  4743  011B                     	;# 
  4744  011C                     	;# 
  4745  011C                     	;# 
  4746  011C                     	;# 
  4747  011D                     	;# 
  4748  011D                     	;# 
  4749  011D                     	;# 
  4750  011E                     	;# 
  4751  011E                     	;# 
  4752  011E                     	;# 
  4753  011F                     	;# 
  4754  011F                     	;# 
  4755  011F                     	;# 
  4756  011F                     	;# 
  4757  011F                     	;# 
  4758  018C                     	;# 
  4759  018D                     	;# 
  4760  018E                     	;# 
  4761  018F                     	;# 
  4762  0190                     	;# 
  4763  0191                     	;# 
  4764  0192                     	;# 
  4765  0196                     	;# 
  4766  0197                     	;# 
  4767  0198                     	;# 
  4768  0199                     	;# 
  4769  019A                     	;# 
  4770  019B                     	;# 
  4771  019C                     	;# 
  4772  020C                     	;# 
  4773  020D                     	;# 
  4774  020E                     	;# 
  4775  020E                     	;# 
  4776  020F                     	;# 
  4777  020F                     	;# 
  4778  0210                     	;# 
  4779  0210                     	;# 
  4780  0211                     	;# 
  4781  0211                     	;# 
  4782  0212                     	;# 
  4783  0213                     	;# 
  4784  0214                     	;# 
  4785  0214                     	;# 
  4786  0215                     	;# 
  4787  0215                     	;# 
  4788  0216                     	;# 
  4789  0216                     	;# 
  4790  0217                     	;# 
  4791  0217                     	;# 
  4792  0218                     	;# 
  4793  0219                     	;# 
  4794  021A                     	;# 
  4795  021A                     	;# 
  4796  021B                     	;# 
  4797  021B                     	;# 
  4798  021C                     	;# 
  4799  021C                     	;# 
  4800  021D                     	;# 
  4801  021D                     	;# 
  4802  021E                     	;# 
  4803  021F                     	;# 
  4804  028C                     	;# 
  4805  028C                     	;# 
  4806  028D                     	;# 
  4807  028D                     	;# 
  4808  028E                     	;# 
  4809  028F                     	;# 
  4810  0290                     	;# 
  4811  0291                     	;# 
  4812  0292                     	;# 
  4813  0292                     	;# 
  4814  0293                     	;# 
  4815  0293                     	;# 
  4816  0294                     	;# 
  4817  0295                     	;# 
  4818  0296                     	;# 
  4819  0297                     	;# 
  4820  0298                     	;# 
  4821  0298                     	;# 
  4822  0299                     	;# 
  4823  0299                     	;# 
  4824  029A                     	;# 
  4825  029B                     	;# 
  4826  029C                     	;# 
  4827  029D                     	;# 
  4828  029F                     	;# 
  4829  030C                     	;# 
  4830  030C                     	;# 
  4831  030D                     	;# 
  4832  030E                     	;# 
  4833  030F                     	;# 
  4834  0310                     	;# 
  4835  0310                     	;# 
  4836  0311                     	;# 
  4837  0312                     	;# 
  4838  0313                     	;# 
  4839  0314                     	;# 
  4840  0314                     	;# 
  4841  0315                     	;# 
  4842  0316                     	;# 
  4843  0317                     	;# 
  4844  0318                     	;# 
  4845  0318                     	;# 
  4846  0319                     	;# 
  4847  031A                     	;# 
  4848  031B                     	;# 
  4849  038C                     	;# 
  4850  038C                     	;# 
  4851  038D                     	;# 
  4852  038E                     	;# 
  4853  0390                     	;# 
  4854  0390                     	;# 
  4855  0391                     	;# 
  4856  0392                     	;# 
  4857  048C                     	;# 
  4858  048C                     	;# 
  4859  048D                     	;# 
  4860  048E                     	;# 
  4861  048F                     	;# 
  4862  048F                     	;# 
  4863  0490                     	;# 
  4864  0491                     	;# 
  4865  0492                     	;# 
  4866  0492                     	;# 
  4867  0493                     	;# 
  4868  0494                     	;# 
  4869  0495                     	;# 
  4870  0495                     	;# 
  4871  0496                     	;# 
  4872  0497                     	;# 
  4873  0498                     	;# 
  4874  0499                     	;# 
  4875  049A                     	;# 
  4876  049B                     	;# 
  4877  049C                     	;# 
  4878  049D                     	;# 
  4879  058C                     	;# 
  4880  058C                     	;# 
  4881  058D                     	;# 
  4882  058E                     	;# 
  4883  058F                     	;# 
  4884  058F                     	;# 
  4885  0590                     	;# 
  4886  0591                     	;# 
  4887  0592                     	;# 
  4888  0593                     	;# 
  4889  059C                     	;# 
  4890  059C                     	;# 
  4891  059D                     	;# 
  4892  059D                     	;# 
  4893  059E                     	;# 
  4894  059F                     	;# 
  4895  060C                     	;# 
  4896  060C                     	;# 
  4897  060D                     	;# 
  4898  060D                     	;# 
  4899  060E                     	;# 
  4900  060F                     	;# 
  4901  0610                     	;# 
  4902  0611                     	;# 
  4903  0612                     	;# 
  4904  0613                     	;# 
  4905  0614                     	;# 
  4906  0616                     	;# 
  4907  0616                     	;# 
  4908  0617                     	;# 
  4909  0617                     	;# 
  4910  0618                     	;# 
  4911  0619                     	;# 
  4912  061A                     	;# 
  4913  061B                     	;# 
  4914  061C                     	;# 
  4915  061D                     	;# 
  4916  061E                     	;# 
  4917  070C                     	;# 
  4918  070D                     	;# 
  4919  070E                     	;# 
  4920  070F                     	;# 
  4921  0710                     	;# 
  4922  0711                     	;# 
  4923  0712                     	;# 
  4924  0713                     	;# 
  4925  0714                     	;# 
  4926  0716                     	;# 
  4927  0717                     	;# 
  4928  0718                     	;# 
  4929  0719                     	;# 
  4930  071A                     	;# 
  4931  071B                     	;# 
  4932  071C                     	;# 
  4933  071D                     	;# 
  4934  071E                     	;# 
  4935  0796                     	;# 
  4936  0797                     	;# 
  4937  0798                     	;# 
  4938  0799                     	;# 
  4939  079A                     	;# 
  4940  079B                     	;# 
  4941  079C                     	;# 
  4942  079D                     	;# 
  4943  080C                     	;# 
  4944  080D                     	;# 
  4945  080E                     	;# 
  4946  080F                     	;# 
  4947  0810                     	;# 
  4948  0811                     	;# 
  4949  0812                     	;# 
  4950  0813                     	;# 
  4951  0814                     	;# 
  4952  081A                     	;# 
  4953  081A                     	;# 
  4954  081B                     	;# 
  4955  081C                     	;# 
  4956  081C                     	;# 
  4957  081D                     	;# 
  4958  081E                     	;# 
  4959  081F                     	;# 
  4960  088C                     	;# 
  4961  088D                     	;# 
  4962  088E                     	;# 
  4963  088F                     	;# 
  4964  0890                     	;# 
  4965  0891                     	;# 
  4966  0892                     	;# 
  4967  0893                     	;# 
  4968  0895                     	;# 
  4969  0896                     	;# 
  4970  0897                     	;# 
  4971  0898                     	;# 
  4972  0899                     	;# 
  4973  089A                     	;# 
  4974  089B                     	;# 
  4975  090C                     	;# 
  4976  090E                     	;# 
  4977  090F                     	;# 
  4978  091F                     	;# 
  4979  098F                     	;# 
  4980  098F                     	;# 
  4981  0990                     	;# 
  4982  0991                     	;# 
  4983  0992                     	;# 
  4984  0993                     	;# 
  4985  0994                     	;# 
  4986  0995                     	;# 
  4987  0996                     	;# 
  4988  0997                     	;# 
  4989  1E0F                     	;# 
  4990  1E10                     	;# 
  4991  1E11                     	;# 
  4992  1E12                     	;# 
  4993  1E13                     	;# 
  4994  1E14                     	;# 
  4995  1E15                     	;# 
  4996  1E16                     	;# 
  4997  1E17                     	;# 
  4998  1E18                     	;# 
  4999  1E19                     	;# 
  5000  1E1A                     	;# 
  5001  1E1B                     	;# 
  5002  1E1C                     	;# 
  5003  1E1D                     	;# 
  5004  1E1E                     	;# 
  5005  1E1F                     	;# 
  5006  1E20                     	;# 
  5007  1E21                     	;# 
  5008  1E22                     	;# 
  5009  1E23                     	;# 
  5010  1E24                     	;# 
  5011  1E25                     	;# 
  5012  1E26                     	;# 
  5013  1E27                     	;# 
  5014  1E28                     	;# 
  5015  1E29                     	;# 
  5016  1E2A                     	;# 
  5017  1E2B                     	;# 
  5018  1E2C                     	;# 
  5019  1E2D                     	;# 
  5020  1E2E                     	;# 
  5021  1E2F                     	;# 
  5022  1E30                     	;# 
  5023  1E31                     	;# 
  5024  1E32                     	;# 
  5025  1E33                     	;# 
  5026  1E34                     	;# 
  5027  1E35                     	;# 
  5028  1E36                     	;# 
  5029  1E37                     	;# 
  5030  1E8F                     	;# 
  5031  1E90                     	;# 
  5032  1E91                     	;# 
  5033  1E92                     	;# 
  5034  1E93                     	;# 
  5035  1E94                     	;# 
  5036  1E95                     	;# 
  5037  1E96                     	;# 
  5038  1E97                     	;# 
  5039  1E9C                     	;# 
  5040  1E9D                     	;# 
  5041  1E9E                     	;# 
  5042  1EA1                     	;# 
  5043  1EA2                     	;# 
  5044  1EA3                     	;# 
  5045  1EA4                     	;# 
  5046  1EA9                     	;# 
  5047  1EAA                     	;# 
  5048  1EB1                     	;# 
  5049  1EB2                     	;# 
  5050  1EB8                     	;# 
  5051  1EB9                     	;# 
  5052  1EBA                     	;# 
  5053  1EBB                     	;# 
  5054  1EBC                     	;# 
  5055  1EBD                     	;# 
  5056  1EBE                     	;# 
  5057  1EC3                     	;# 
  5058  1EC5                     	;# 
  5059  1EC6                     	;# 
  5060  1EC7                     	;# 
  5061  1EC8                     	;# 
  5062  1EC9                     	;# 
  5063  1ECA                     	;# 
  5064  1ECB                     	;# 
  5065  1ECB                     	;# 
  5066  1ECB                     	;# 
  5067  1ECC                     	;# 
  5068  1ECC                     	;# 
  5069  1ECC                     	;# 
  5070  1F10                     	;# 
  5071  1F11                     	;# 
  5072  1F12                     	;# 
  5073  1F14                     	;# 
  5074  1F15                     	;# 
  5075  1F1C                     	;# 
  5076  1F1D                     	;# 
  5077  1F1E                     	;# 
  5078  1F1F                     	;# 
  5079  1F20                     	;# 
  5080  1F21                     	;# 
  5081  1F22                     	;# 
  5082  1F23                     	;# 
  5083  1F24                     	;# 
  5084  1F25                     	;# 
  5085  1F26                     	;# 
  5086  1F27                     	;# 
  5087  1F38                     	;# 
  5088  1F39                     	;# 
  5089  1F3A                     	;# 
  5090  1F3B                     	;# 
  5091  1F3C                     	;# 
  5092  1F3D                     	;# 
  5093  1F3E                     	;# 
  5094  1F3F                     	;# 
  5095  1F43                     	;# 
  5096  1F44                     	;# 
  5097  1F45                     	;# 
  5098  1F46                     	;# 
  5099  1F47                     	;# 
  5100  1F48                     	;# 
  5101  1F49                     	;# 
  5102  1F4A                     	;# 
  5103  1F4E                     	;# 
  5104  1F4F                     	;# 
  5105  1F50                     	;# 
  5106  1F51                     	;# 
  5107  1F52                     	;# 
  5108  1F53                     	;# 
  5109  1F54                     	;# 
  5110  1F55                     	;# 
  5111  1FE4                     	;# 
  5112  1FE5                     	;# 
  5113  1FE6                     	;# 
  5114  1FE7                     	;# 
  5115  1FE8                     	;# 
  5116  1FE8                     	;# 
  5117  1FE9                     	;# 
  5118  1FEA                     	;# 
  5119  1FEB                     	;# 
  5120  1FED                     	;# 
  5121  1FEE                     	;# 
  5122  1FEF                     	;# 
  5123  0000                     	;# 
  5124  0001                     	;# 
  5125  0002                     	;# 
  5126  0003                     	;# 
  5127  0004                     	;# 
  5128  0005                     	;# 
  5129  0006                     	;# 
  5130  0007                     	;# 
  5131  0008                     	;# 
  5132  0009                     	;# 
  5133  000A                     	;# 
  5134  000B                     	;# 
  5135  000C                     	;# 
  5136  000D                     	;# 
  5137  000E                     	;# 
  5138  0012                     	;# 
  5139  0013                     	;# 
  5140  0014                     	;# 
  5141  0018                     	;# 
  5142  0019                     	;# 
  5143  001A                     	;# 
  5144  008C                     	;# 
  5145  008C                     	;# 
  5146  008D                     	;# 
  5147  008E                     	;# 
  5148  008E                     	;# 
  5149  008F                     	;# 
  5150  0090                     	;# 
  5151  0090                     	;# 
  5152  0091                     	;# 
  5153  0092                     	;# 
  5154  0092                     	;# 
  5155  0093                     	;# 
  5156  0094                     	;# 
  5157  0094                     	;# 
  5158  0095                     	;# 
  5159  0096                     	;# 
  5160  0096                     	;# 
  5161  0097                     	;# 
  5162  0098                     	;# 
  5163  0099                     	;# 
  5164  009A                     	;# 
  5165  009B                     	;# 
  5166  009B                     	;# 
  5167  009C                     	;# 
  5168  009D                     	;# 
  5169  009D                     	;# 
  5170  009E                     	;# 
  5171  009F                     	;# 
  5172  010C                     	;# 
  5173  010C                     	;# 
  5174  010D                     	;# 
  5175  010E                     	;# 
  5176  010F                     	;# 
  5177  010F                     	;# 
  5178  0110                     	;# 
  5179  0111                     	;# 
  5180  0112                     	;# 
  5181  0113                     	;# 
  5182  0114                     	;# 
  5183  0115                     	;# 
  5184  0116                     	;# 
  5185  0117                     	;# 
  5186  0118                     	;# 
  5187  0119                     	;# 
  5188  0119                     	;# 
  5189  0119                     	;# 
  5190  011A                     	;# 
  5191  011A                     	;# 
  5192  011A                     	;# 
  5193  011B                     	;# 
  5194  011B                     	;# 
  5195  011B                     	;# 
  5196  011B                     	;# 
  5197  011B                     	;# 
  5198  011C                     	;# 
  5199  011C                     	;# 
  5200  011C                     	;# 
  5201  011D                     	;# 
  5202  011D                     	;# 
  5203  011D                     	;# 
  5204  011E                     	;# 
  5205  011E                     	;# 
  5206  011E                     	;# 
  5207  011F                     	;# 
  5208  011F                     	;# 
  5209  011F                     	;# 
  5210  011F                     	;# 
  5211  011F                     	;# 
  5212  018C                     	;# 
  5213  018D                     	;# 
  5214  018E                     	;# 
  5215  018F                     	;# 
  5216  0190                     	;# 
  5217  0191                     	;# 
  5218  0192                     	;# 
  5219  0196                     	;# 
  5220  0197                     	;# 
  5221  0198                     	;# 
  5222  0199                     	;# 
  5223  019A                     	;# 
  5224  019B                     	;# 
  5225  019C                     	;# 
  5226  020C                     	;# 
  5227  020D                     	;# 
  5228  020E                     	;# 
  5229  020E                     	;# 
  5230  020F                     	;# 
  5231  020F                     	;# 
  5232  0210                     	;# 
  5233  0210                     	;# 
  5234  0211                     	;# 
  5235  0211                     	;# 
  5236  0212                     	;# 
  5237  0213                     	;# 
  5238  0214                     	;# 
  5239  0214                     	;# 
  5240  0215                     	;# 
  5241  0215                     	;# 
  5242  0216                     	;# 
  5243  0216                     	;# 
  5244  0217                     	;# 
  5245  0217                     	;# 
  5246  0218                     	;# 
  5247  0219                     	;# 
  5248  021A                     	;# 
  5249  021A                     	;# 
  5250  021B                     	;# 
  5251  021B                     	;# 
  5252  021C                     	;# 
  5253  021C                     	;# 
  5254  021D                     	;# 
  5255  021D                     	;# 
  5256  021E                     	;# 
  5257  021F                     	;# 
  5258  028C                     	;# 
  5259  028C                     	;# 
  5260  028D                     	;# 
  5261  028D                     	;# 
  5262  028E                     	;# 
  5263  028F                     	;# 
  5264  0290                     	;# 
  5265  0291                     	;# 
  5266  0292                     	;# 
  5267  0292                     	;# 
  5268  0293                     	;# 
  5269  0293                     	;# 
  5270  0294                     	;# 
  5271  0295                     	;# 
  5272  0296                     	;# 
  5273  0297                     	;# 
  5274  0298                     	;# 
  5275  0298                     	;# 
  5276  0299                     	;# 
  5277  0299                     	;# 
  5278  029A                     	;# 
  5279  029B                     	;# 
  5280  029C                     	;# 
  5281  029D                     	;# 
  5282  029F                     	;# 
  5283  030C                     	;# 
  5284  030C                     	;# 
  5285  030D                     	;# 
  5286  030E                     	;# 
  5287  030F                     	;# 
  5288  0310                     	;# 
  5289  0310                     	;# 
  5290  0311                     	;# 
  5291  0312                     	;# 
  5292  0313                     	;# 
  5293  0314                     	;# 
  5294  0314                     	;# 
  5295  0315                     	;# 
  5296  0316                     	;# 
  5297  0317                     	;# 
  5298  0318                     	;# 
  5299  0318                     	;# 
  5300  0319                     	;# 
  5301  031A                     	;# 
  5302  031B                     	;# 
  5303  038C                     	;# 
  5304  038C                     	;# 
  5305  038D                     	;# 
  5306  038E                     	;# 
  5307  0390                     	;# 
  5308  0390                     	;# 
  5309  0391                     	;# 
  5310  0392                     	;# 
  5311  048C                     	;# 
  5312  048C                     	;# 
  5313  048D                     	;# 
  5314  048E                     	;# 
  5315  048F                     	;# 
  5316  048F                     	;# 
  5317  0490                     	;# 
  5318  0491                     	;# 
  5319  0492                     	;# 
  5320  0492                     	;# 
  5321  0493                     	;# 
  5322  0494                     	;# 
  5323  0495                     	;# 
  5324  0495                     	;# 
  5325  0496                     	;# 
  5326  0497                     	;# 
  5327  0498                     	;# 
  5328  0499                     	;# 
  5329  049A                     	;# 
  5330  049B                     	;# 
  5331  049C                     	;# 
  5332  049D                     	;# 
  5333  058C                     	;# 
  5334  058C                     	;# 
  5335  058D                     	;# 
  5336  058E                     	;# 
  5337  058F                     	;# 
  5338  058F                     	;# 
  5339  0590                     	;# 
  5340  0591                     	;# 
  5341  0592                     	;# 
  5342  0593                     	;# 
  5343  059C                     	;# 
  5344  059C                     	;# 
  5345  059D                     	;# 
  5346  059D                     	;# 
  5347  059E                     	;# 
  5348  059F                     	;# 
  5349  060C                     	;# 
  5350  060C                     	;# 
  5351  060D                     	;# 
  5352  060D                     	;# 
  5353  060E                     	;# 
  5354  060F                     	;# 
  5355  0610                     	;# 
  5356  0611                     	;# 
  5357  0612                     	;# 
  5358  0613                     	;# 
  5359  0614                     	;# 
  5360  0616                     	;# 
  5361  0616                     	;# 
  5362  0617                     	;# 
  5363  0617                     	;# 
  5364  0618                     	;# 
  5365  0619                     	;# 
  5366  061A                     	;# 
  5367  061B                     	;# 
  5368  061C                     	;# 
  5369  061D                     	;# 
  5370  061E                     	;# 
  5371  070C                     	;# 
  5372  070D                     	;# 
  5373  070E                     	;# 
  5374  070F                     	;# 
  5375  0710                     	;# 
  5376  0711                     	;# 
  5377  0712                     	;# 
  5378  0713                     	;# 
  5379  0714                     	;# 
  5380  0716                     	;# 
  5381  0717                     	;# 
  5382  0718                     	;# 
  5383  0719                     	;# 
  5384  071A                     	;# 
  5385  071B                     	;# 
  5386  071C                     	;# 
  5387  071D                     	;# 
  5388  071E                     	;# 
  5389  0796                     	;# 
  5390  0797                     	;# 
  5391  0798                     	;# 
  5392  0799                     	;# 
  5393  079A                     	;# 
  5394  079B                     	;# 
  5395  079C                     	;# 
  5396  079D                     	;# 
  5397  080C                     	;# 
  5398  080D                     	;# 
  5399  080E                     	;# 
  5400  080F                     	;# 
  5401  0810                     	;# 
  5402  0811                     	;# 
  5403  0812                     	;# 
  5404  0813                     	;# 
  5405  0814                     	;# 
  5406  081A                     	;# 
  5407  081A                     	;# 
  5408  081B                     	;# 
  5409  081C                     	;# 
  5410  081C                     	;# 
  5411  081D                     	;# 
  5412  081E                     	;# 
  5413  081F                     	;# 
  5414  088C                     	;# 
  5415  088D                     	;# 
  5416  088E                     	;# 
  5417  088F                     	;# 
  5418  0890                     	;# 
  5419  0891                     	;# 
  5420  0892                     	;# 
  5421  0893                     	;# 
  5422  0895                     	;# 
  5423  0896                     	;# 
  5424  0897                     	;# 
  5425  0898                     	;# 
  5426  0899                     	;# 
  5427  089A                     	;# 
  5428  089B                     	;# 
  5429  090C                     	;# 
  5430  090E                     	;# 
  5431  090F                     	;# 
  5432  091F                     	;# 
  5433  098F                     	;# 
  5434  098F                     	;# 
  5435  0990                     	;# 
  5436  0991                     	;# 
  5437  0992                     	;# 
  5438  0993                     	;# 
  5439  0994                     	;# 
  5440  0995                     	;# 
  5441  0996                     	;# 
  5442  0997                     	;# 
  5443  1E0F                     	;# 
  5444  1E10                     	;# 
  5445  1E11                     	;# 
  5446  1E12                     	;# 
  5447  1E13                     	;# 
  5448  1E14                     	;# 
  5449  1E15                     	;# 
  5450  1E16                     	;# 
  5451  1E17                     	;# 
  5452  1E18                     	;# 
  5453  1E19                     	;# 
  5454  1E1A                     	;# 
  5455  1E1B                     	;# 
  5456  1E1C                     	;# 
  5457  1E1D                     	;# 
  5458  1E1E                     	;# 
  5459  1E1F                     	;# 
  5460  1E20                     	;# 
  5461  1E21                     	;# 
  5462  1E22                     	;# 
  5463  1E23                     	;# 
  5464  1E24                     	;# 
  5465  1E25                     	;# 
  5466  1E26                     	;# 
  5467  1E27                     	;# 
  5468  1E28                     	;# 
  5469  1E29                     	;# 
  5470  1E2A                     	;# 
  5471  1E2B                     	;# 
  5472  1E2C                     	;# 
  5473  1E2D                     	;# 
  5474  1E2E                     	;# 
  5475  1E2F                     	;# 
  5476  1E30                     	;# 
  5477  1E31                     	;# 
  5478  1E32                     	;# 
  5479  1E33                     	;# 
  5480  1E34                     	;# 
  5481  1E35                     	;# 
  5482  1E36                     	;# 
  5483  1E37                     	;# 
  5484  1E8F                     	;# 
  5485  1E90                     	;# 
  5486  1E91                     	;# 
  5487  1E92                     	;# 
  5488  1E93                     	;# 
  5489  1E94                     	;# 
  5490  1E95                     	;# 
  5491  1E96                     	;# 
  5492  1E97                     	;# 
  5493  1E9C                     	;# 
  5494  1E9D                     	;# 
  5495  1E9E                     	;# 
  5496  1EA1                     	;# 
  5497  1EA2                     	;# 
  5498  1EA3                     	;# 
  5499  1EA4                     	;# 
  5500  1EA9                     	;# 
  5501  1EAA                     	;# 
  5502  1EB1                     	;# 
  5503  1EB2                     	;# 
  5504  1EB8                     	;# 
  5505  1EB9                     	;# 
  5506  1EBA                     	;# 
  5507  1EBB                     	;# 
  5508  1EBC                     	;# 
  5509  1EBD                     	;# 
  5510  1EBE                     	;# 
  5511  1EC3                     	;# 
  5512  1EC5                     	;# 
  5513  1EC6                     	;# 
  5514  1EC7                     	;# 
  5515  1EC8                     	;# 
  5516  1EC9                     	;# 
  5517  1ECA                     	;# 
  5518  1ECB                     	;# 
  5519  1ECB                     	;# 
  5520  1ECB                     	;# 
  5521  1ECC                     	;# 
  5522  1ECC                     	;# 
  5523  1ECC                     	;# 
  5524  1F10                     	;# 
  5525  1F11                     	;# 
  5526  1F12                     	;# 
  5527  1F14                     	;# 
  5528  1F15                     	;# 
  5529  1F1C                     	;# 
  5530  1F1D                     	;# 
  5531  1F1E                     	;# 
  5532  1F1F                     	;# 
  5533  1F20                     	;# 
  5534  1F21                     	;# 
  5535  1F22                     	;# 
  5536  1F23                     	;# 
  5537  1F24                     	;# 
  5538  1F25                     	;# 
  5539  1F26                     	;# 
  5540  1F27                     	;# 
  5541  1F38                     	;# 
  5542  1F39                     	;# 
  5543  1F3A                     	;# 
  5544  1F3B                     	;# 
  5545  1F3C                     	;# 
  5546  1F3D                     	;# 
  5547  1F3E                     	;# 
  5548  1F3F                     	;# 
  5549  1F43                     	;# 
  5550  1F44                     	;# 
  5551  1F45                     	;# 
  5552  1F46                     	;# 
  5553  1F47                     	;# 
  5554  1F48                     	;# 
  5555  1F49                     	;# 
  5556  1F4A                     	;# 
  5557  1F4E                     	;# 
  5558  1F4F                     	;# 
  5559  1F50                     	;# 
  5560  1F51                     	;# 
  5561  1F52                     	;# 
  5562  1F53                     	;# 
  5563  1F54                     	;# 
  5564  1F55                     	;# 
  5565  1FE4                     	;# 
  5566  1FE5                     	;# 
  5567  1FE6                     	;# 
  5568  1FE7                     	;# 
  5569  1FE8                     	;# 
  5570  1FE8                     	;# 
  5571  1FE9                     	;# 
  5572  1FEA                     	;# 
  5573  1FEB                     	;# 
  5574  1FED                     	;# 
  5575  1FEE                     	;# 
  5576  1FEF                     	;# 
  5577  0000                     	;# 
  5578  0001                     	;# 
  5579  0002                     	;# 
  5580  0003                     	;# 
  5581  0004                     	;# 
  5582  0005                     	;# 
  5583  0006                     	;# 
  5584  0007                     	;# 
  5585  0008                     	;# 
  5586  0009                     	;# 
  5587  000A                     	;# 
  5588  000B                     	;# 
  5589  000C                     	;# 
  5590  000D                     	;# 
  5591  000E                     	;# 
  5592  0012                     	;# 
  5593  0013                     	;# 
  5594  0014                     	;# 
  5595  0018                     	;# 
  5596  0019                     	;# 
  5597  001A                     	;# 
  5598  008C                     	;# 
  5599  008C                     	;# 
  5600  008D                     	;# 
  5601  008E                     	;# 
  5602  008E                     	;# 
  5603  008F                     	;# 
  5604  0090                     	;# 
  5605  0090                     	;# 
  5606  0091                     	;# 
  5607  0092                     	;# 
  5608  0092                     	;# 
  5609  0093                     	;# 
  5610  0094                     	;# 
  5611  0094                     	;# 
  5612  0095                     	;# 
  5613  0096                     	;# 
  5614  0096                     	;# 
  5615  0097                     	;# 
  5616  0098                     	;# 
  5617  0099                     	;# 
  5618  009A                     	;# 
  5619  009B                     	;# 
  5620  009B                     	;# 
  5621  009C                     	;# 
  5622  009D                     	;# 
  5623  009D                     	;# 
  5624  009E                     	;# 
  5625  009F                     	;# 
  5626  010C                     	;# 
  5627  010C                     	;# 
  5628  010D                     	;# 
  5629  010E                     	;# 
  5630  010F                     	;# 
  5631  010F                     	;# 
  5632  0110                     	;# 
  5633  0111                     	;# 
  5634  0112                     	;# 
  5635  0113                     	;# 
  5636  0114                     	;# 
  5637  0115                     	;# 
  5638  0116                     	;# 
  5639  0117                     	;# 
  5640  0118                     	;# 
  5641  0119                     	;# 
  5642  0119                     	;# 
  5643  0119                     	;# 
  5644  011A                     	;# 
  5645  011A                     	;# 
  5646  011A                     	;# 
  5647  011B                     	;# 
  5648  011B                     	;# 
  5649  011B                     	;# 
  5650  011B                     	;# 
  5651  011B                     	;# 
  5652  011C                     	;# 
  5653  011C                     	;# 
  5654  011C                     	;# 
  5655  011D                     	;# 
  5656  011D                     	;# 
  5657  011D                     	;# 
  5658  011E                     	;# 
  5659  011E                     	;# 
  5660  011E                     	;# 
  5661  011F                     	;# 
  5662  011F                     	;# 
  5663  011F                     	;# 
  5664  011F                     	;# 
  5665  011F                     	;# 
  5666  018C                     	;# 
  5667  018D                     	;# 
  5668  018E                     	;# 
  5669  018F                     	;# 
  5670  0190                     	;# 
  5671  0191                     	;# 
  5672  0192                     	;# 
  5673  0196                     	;# 
  5674  0197                     	;# 
  5675  0198                     	;# 
  5676  0199                     	;# 
  5677  019A                     	;# 
  5678  019B                     	;# 
  5679  019C                     	;# 
  5680  020C                     	;# 
  5681  020D                     	;# 
  5682  020E                     	;# 
  5683  020E                     	;# 
  5684  020F                     	;# 
  5685  020F                     	;# 
  5686  0210                     	;# 
  5687  0210                     	;# 
  5688  0211                     	;# 
  5689  0211                     	;# 
  5690  0212                     	;# 
  5691  0213                     	;# 
  5692  0214                     	;# 
  5693  0214                     	;# 
  5694  0215                     	;# 
  5695  0215                     	;# 
  5696  0216                     	;# 
  5697  0216                     	;# 
  5698  0217                     	;# 
  5699  0217                     	;# 
  5700  0218                     	;# 
  5701  0219                     	;# 
  5702  021A                     	;# 
  5703  021A                     	;# 
  5704  021B                     	;# 
  5705  021B                     	;# 
  5706  021C                     	;# 
  5707  021C                     	;# 
  5708  021D                     	;# 
  5709  021D                     	;# 
  5710  021E                     	;# 
  5711  021F                     	;# 
  5712  028C                     	;# 
  5713  028C                     	;# 
  5714  028D                     	;# 
  5715  028D                     	;# 
  5716  028E                     	;# 
  5717  028F                     	;# 
  5718  0290                     	;# 
  5719  0291                     	;# 
  5720  0292                     	;# 
  5721  0292                     	;# 
  5722  0293                     	;# 
  5723  0293                     	;# 
  5724  0294                     	;# 
  5725  0295                     	;# 
  5726  0296                     	;# 
  5727  0297                     	;# 
  5728  0298                     	;# 
  5729  0298                     	;# 
  5730  0299                     	;# 
  5731  0299                     	;# 
  5732  029A                     	;# 
  5733  029B                     	;# 
  5734  029C                     	;# 
  5735  029D                     	;# 
  5736  029F                     	;# 
  5737  030C                     	;# 
  5738  030C                     	;# 
  5739  030D                     	;# 
  5740  030E                     	;# 
  5741  030F                     	;# 
  5742  0310                     	;# 
  5743  0310                     	;# 
  5744  0311                     	;# 
  5745  0312                     	;# 
  5746  0313                     	;# 
  5747  0314                     	;# 
  5748  0314                     	;# 
  5749  0315                     	;# 
  5750  0316                     	;# 
  5751  0317                     	;# 
  5752  0318                     	;# 
  5753  0318                     	;# 
  5754  0319                     	;# 
  5755  031A                     	;# 
  5756  031B                     	;# 
  5757  038C                     	;# 
  5758  038C                     	;# 
  5759  038D                     	;# 
  5760  038E                     	;# 
  5761  0390                     	;# 
  5762  0390                     	;# 
  5763  0391                     	;# 
  5764  0392                     	;# 
  5765  048C                     	;# 
  5766  048C                     	;# 
  5767  048D                     	;# 
  5768  048E                     	;# 
  5769  048F                     	;# 
  5770  048F                     	;# 
  5771  0490                     	;# 
  5772  0491                     	;# 
  5773  0492                     	;# 
  5774  0492                     	;# 
  5775  0493                     	;# 
  5776  0494                     	;# 
  5777  0495                     	;# 
  5778  0495                     	;# 
  5779  0496                     	;# 
  5780  0497                     	;# 
  5781  0498                     	;# 
  5782  0499                     	;# 
  5783  049A                     	;# 
  5784  049B                     	;# 
  5785  049C                     	;# 
  5786  049D                     	;# 
  5787  058C                     	;# 
  5788  058C                     	;# 
  5789  058D                     	;# 
  5790  058E                     	;# 
  5791  058F                     	;# 
  5792  058F                     	;# 
  5793  0590                     	;# 
  5794  0591                     	;# 
  5795  0592                     	;# 
  5796  0593                     	;# 
  5797  059C                     	;# 
  5798  059C                     	;# 
  5799  059D                     	;# 
  5800  059D                     	;# 
  5801  059E                     	;# 
  5802  059F                     	;# 
  5803  060C                     	;# 
  5804  060C                     	;# 
  5805  060D                     	;# 
  5806  060D                     	;# 
  5807  060E                     	;# 
  5808  060F                     	;# 
  5809  0610                     	;# 
  5810  0611                     	;# 
  5811  0612                     	;# 
  5812  0613                     	;# 
  5813  0614                     	;# 
  5814  0616                     	;# 
  5815  0616                     	;# 
  5816  0617                     	;# 
  5817  0617                     	;# 
  5818  0618                     	;# 
  5819  0619                     	;# 
  5820  061A                     	;# 
  5821  061B                     	;# 
  5822  061C                     	;# 
  5823  061D                     	;# 
  5824  061E                     	;# 
  5825  070C                     	;# 
  5826  070D                     	;# 
  5827  070E                     	;# 
  5828  070F                     	;# 
  5829  0710                     	;# 
  5830  0711                     	;# 
  5831  0712                     	;# 
  5832  0713                     	;# 
  5833  0714                     	;# 
  5834  0716                     	;# 
  5835  0717                     	;# 
  5836  0718                     	;# 
  5837  0719                     	;# 
  5838  071A                     	;# 
  5839  071B                     	;# 
  5840  071C                     	;# 
  5841  071D                     	;# 
  5842  071E                     	;# 
  5843  0796                     	;# 
  5844  0797                     	;# 
  5845  0798                     	;# 
  5846  0799                     	;# 
  5847  079A                     	;# 
  5848  079B                     	;# 
  5849  079C                     	;# 
  5850  079D                     	;# 
  5851  080C                     	;# 
  5852  080D                     	;# 
  5853  080E                     	;# 
  5854  080F                     	;# 
  5855  0810                     	;# 
  5856  0811                     	;# 
  5857  0812                     	;# 
  5858  0813                     	;# 
  5859  0814                     	;# 
  5860  081A                     	;# 
  5861  081A                     	;# 
  5862  081B                     	;# 
  5863  081C                     	;# 
  5864  081C                     	;# 
  5865  081D                     	;# 
  5866  081E                     	;# 
  5867  081F                     	;# 
  5868  088C                     	;# 
  5869  088D                     	;# 
  5870  088E                     	;# 
  5871  088F                     	;# 
  5872  0890                     	;# 
  5873  0891                     	;# 
  5874  0892                     	;# 
  5875  0893                     	;# 
  5876  0895                     	;# 
  5877  0896                     	;# 
  5878  0897                     	;# 
  5879  0898                     	;# 
  5880  0899                     	;# 
  5881  089A                     	;# 
  5882  089B                     	;# 
  5883  090C                     	;# 
  5884  090E                     	;# 
  5885  090F                     	;# 
  5886  091F                     	;# 
  5887  098F                     	;# 
  5888  098F                     	;# 
  5889  0990                     	;# 
  5890  0991                     	;# 
  5891  0992                     	;# 
  5892  0993                     	;# 
  5893  0994                     	;# 
  5894  0995                     	;# 
  5895  0996                     	;# 
  5896  0997                     	;# 
  5897  1E0F                     	;# 
  5898  1E10                     	;# 
  5899  1E11                     	;# 
  5900  1E12                     	;# 
  5901  1E13                     	;# 
  5902  1E14                     	;# 
  5903  1E15                     	;# 
  5904  1E16                     	;# 
  5905  1E17                     	;# 
  5906  1E18                     	;# 
  5907  1E19                     	;# 
  5908  1E1A                     	;# 
  5909  1E1B                     	;# 
  5910  1E1C                     	;# 
  5911  1E1D                     	;# 
  5912  1E1E                     	;# 
  5913  1E1F                     	;# 
  5914  1E20                     	;# 
  5915  1E21                     	;# 
  5916  1E22                     	;# 
  5917  1E23                     	;# 
  5918  1E24                     	;# 
  5919  1E25                     	;# 
  5920  1E26                     	;# 
  5921  1E27                     	;# 
  5922  1E28                     	;# 
  5923  1E29                     	;# 
  5924  1E2A                     	;# 
  5925  1E2B                     	;# 
  5926  1E2C                     	;# 
  5927  1E2D                     	;# 
  5928  1E2E                     	;# 
  5929  1E2F                     	;# 
  5930  1E30                     	;# 
  5931  1E31                     	;# 
  5932  1E32                     	;# 
  5933  1E33                     	;# 
  5934  1E34                     	;# 
  5935  1E35                     	;# 
  5936  1E36                     	;# 
  5937  1E37                     	;# 
  5938  1E8F                     	;# 
  5939  1E90                     	;# 
  5940  1E91                     	;# 
  5941  1E92                     	;# 
  5942  1E93                     	;# 
  5943  1E94                     	;# 
  5944  1E95                     	;# 
  5945  1E96                     	;# 
  5946  1E97                     	;# 
  5947  1E9C                     	;# 
  5948  1E9D                     	;# 
  5949  1E9E                     	;# 
  5950  1EA1                     	;# 
  5951  1EA2                     	;# 
  5952  1EA3                     	;# 
  5953  1EA4                     	;# 
  5954  1EA9                     	;# 
  5955  1EAA                     	;# 
  5956  1EB1                     	;# 
  5957  1EB2                     	;# 
  5958  1EB8                     	;# 
  5959  1EB9                     	;# 
  5960  1EBA                     	;# 
  5961  1EBB                     	;# 
  5962  1EBC                     	;# 
  5963  1EBD                     	;# 
  5964  1EBE                     	;# 
  5965  1EC3                     	;# 
  5966  1EC5                     	;# 
  5967  1EC6                     	;# 
  5968  1EC7                     	;# 
  5969  1EC8                     	;# 
  5970  1EC9                     	;# 
  5971  1ECA                     	;# 
  5972  1ECB                     	;# 
  5973  1ECB                     	;# 
  5974  1ECB                     	;# 
  5975  1ECC                     	;# 
  5976  1ECC                     	;# 
  5977  1ECC                     	;# 
  5978  1F10                     	;# 
  5979  1F11                     	;# 
  5980  1F12                     	;# 
  5981  1F14                     	;# 
  5982  1F15                     	;# 
  5983  1F1C                     	;# 
  5984  1F1D                     	;# 
  5985  1F1E                     	;# 
  5986  1F1F                     	;# 
  5987  1F20                     	;# 
  5988  1F21                     	;# 
  5989  1F22                     	;# 
  5990  1F23                     	;# 
  5991  1F24                     	;# 
  5992  1F25                     	;# 
  5993  1F26                     	;# 
  5994  1F27                     	;# 
  5995  1F38                     	;# 
  5996  1F39                     	;# 
  5997  1F3A                     	;# 
  5998  1F3B                     	;# 
  5999  1F3C                     	;# 
  6000  1F3D                     	;# 
  6001  1F3E                     	;# 
  6002  1F3F                     	;# 
  6003  1F43                     	;# 
  6004  1F44                     	;# 
  6005  1F45                     	;# 
  6006  1F46                     	;# 
  6007  1F47                     	;# 
  6008  1F48                     	;# 
  6009  1F49                     	;# 
  6010  1F4A                     	;# 
  6011  1F4E                     	;# 
  6012  1F4F                     	;# 
  6013  1F50                     	;# 
  6014  1F51                     	;# 
  6015  1F52                     	;# 
  6016  1F53                     	;# 
  6017  1F54                     	;# 
  6018  1F55                     	;# 
  6019  1FE4                     	;# 
  6020  1FE5                     	;# 
  6021  1FE6                     	;# 
  6022  1FE7                     	;# 
  6023  1FE8                     	;# 
  6024  1FE8                     	;# 
  6025  1FE9                     	;# 
  6026  1FEA                     	;# 
  6027  1FEB                     	;# 
  6028  1FED                     	;# 
  6029  1FEE                     	;# 
  6030  1FEF                     	;# 
  6031  0000                     	;# 
  6032  0001                     	;# 
  6033  0002                     	;# 
  6034  0003                     	;# 
  6035  0004                     	;# 
  6036  0005                     	;# 
  6037  0006                     	;# 
  6038  0007                     	;# 
  6039  0008                     	;# 
  6040  0009                     	;# 
  6041  000A                     	;# 
  6042  000B                     	;# 
  6043  000C                     	;# 
  6044  000D                     	;# 
  6045  000E                     	;# 
  6046  0012                     	;# 
  6047  0013                     	;# 
  6048  0014                     	;# 
  6049  0018                     	;# 
  6050  0019                     	;# 
  6051  001A                     	;# 
  6052  008C                     	;# 
  6053  008C                     	;# 
  6054  008D                     	;# 
  6055  008E                     	;# 
  6056  008E                     	;# 
  6057  008F                     	;# 
  6058  0090                     	;# 
  6059  0090                     	;# 
  6060  0091                     	;# 
  6061  0092                     	;# 
  6062  0092                     	;# 
  6063  0093                     	;# 
  6064  0094                     	;# 
  6065  0094                     	;# 
  6066  0095                     	;# 
  6067  0096                     	;# 
  6068  0096                     	;# 
  6069  0097                     	;# 
  6070  0098                     	;# 
  6071  0099                     	;# 
  6072  009A                     	;# 
  6073  009B                     	;# 
  6074  009B                     	;# 
  6075  009C                     	;# 
  6076  009D                     	;# 
  6077  009D                     	;# 
  6078  009E                     	;# 
  6079  009F                     	;# 
  6080  010C                     	;# 
  6081  010C                     	;# 
  6082  010D                     	;# 
  6083  010E                     	;# 
  6084  010F                     	;# 
  6085  010F                     	;# 
  6086  0110                     	;# 
  6087  0111                     	;# 
  6088  0112                     	;# 
  6089  0113                     	;# 
  6090  0114                     	;# 
  6091  0115                     	;# 
  6092  0116                     	;# 
  6093  0117                     	;# 
  6094  0118                     	;# 
  6095  0119                     	;# 
  6096  0119                     	;# 
  6097  0119                     	;# 
  6098  011A                     	;# 
  6099  011A                     	;# 
  6100  011A                     	;# 
  6101  011B                     	;# 
  6102  011B                     	;# 
  6103  011B                     	;# 
  6104  011B                     	;# 
  6105  011B                     	;# 
  6106  011C                     	;# 
  6107  011C                     	;# 
  6108  011C                     	;# 
  6109  011D                     	;# 
  6110  011D                     	;# 
  6111  011D                     	;# 
  6112  011E                     	;# 
  6113  011E                     	;# 
  6114  011E                     	;# 
  6115  011F                     	;# 
  6116  011F                     	;# 
  6117  011F                     	;# 
  6118  011F                     	;# 
  6119  011F                     	;# 
  6120  018C                     	;# 
  6121  018D                     	;# 
  6122  018E                     	;# 
  6123  018F                     	;# 
  6124  0190                     	;# 
  6125  0191                     	;# 
  6126  0192                     	;# 
  6127  0196                     	;# 
  6128  0197                     	;# 
  6129  0198                     	;# 
  6130  0199                     	;# 
  6131  019A                     	;# 
  6132  019B                     	;# 
  6133  019C                     	;# 
  6134  020C                     	;# 
  6135  020D                     	;# 
  6136  020E                     	;# 
  6137  020E                     	;# 
  6138  020F                     	;# 
  6139  020F                     	;# 
  6140  0210                     	;# 
  6141  0210                     	;# 
  6142  0211                     	;# 
  6143  0211                     	;# 
  6144  0212                     	;# 
  6145  0213                     	;# 
  6146  0214                     	;# 
  6147  0214                     	;# 
  6148  0215                     	;# 
  6149  0215                     	;# 
  6150  0216                     	;# 
  6151  0216                     	;# 
  6152  0217                     	;# 
  6153  0217                     	;# 
  6154  0218                     	;# 
  6155  0219                     	;# 
  6156  021A                     	;# 
  6157  021A                     	;# 
  6158  021B                     	;# 
  6159  021B                     	;# 
  6160  021C                     	;# 
  6161  021C                     	;# 
  6162  021D                     	;# 
  6163  021D                     	;# 
  6164  021E                     	;# 
  6165  021F                     	;# 
  6166  028C                     	;# 
  6167  028C                     	;# 
  6168  028D                     	;# 
  6169  028D                     	;# 
  6170  028E                     	;# 
  6171  028F                     	;# 
  6172  0290                     	;# 
  6173  0291                     	;# 
  6174  0292                     	;# 
  6175  0292                     	;# 
  6176  0293                     	;# 
  6177  0293                     	;# 
  6178  0294                     	;# 
  6179  0295                     	;# 
  6180  0296                     	;# 
  6181  0297                     	;# 
  6182  0298                     	;# 
  6183  0298                     	;# 
  6184  0299                     	;# 
  6185  0299                     	;# 
  6186  029A                     	;# 
  6187  029B                     	;# 
  6188  029C                     	;# 
  6189  029D                     	;# 
  6190  029F                     	;# 
  6191  030C                     	;# 
  6192  030C                     	;# 
  6193  030D                     	;# 
  6194  030E                     	;# 
  6195  030F                     	;# 
  6196  0310                     	;# 
  6197  0310                     	;# 
  6198  0311                     	;# 
  6199  0312                     	;# 
  6200  0313                     	;# 
  6201  0314                     	;# 
  6202  0314                     	;# 
  6203  0315                     	;# 
  6204  0316                     	;# 
  6205  0317                     	;# 
  6206  0318                     	;# 
  6207  0318                     	;# 
  6208  0319                     	;# 
  6209  031A                     	;# 
  6210  031B                     	;# 
  6211  038C                     	;# 
  6212  038C                     	;# 
  6213  038D                     	;# 
  6214  038E                     	;# 
  6215  0390                     	;# 
  6216  0390                     	;# 
  6217  0391                     	;# 
  6218  0392                     	;# 
  6219  048C                     	;# 
  6220  048C                     	;# 
  6221  048D                     	;# 
  6222  048E                     	;# 
  6223  048F                     	;# 
  6224  048F                     	;# 
  6225  0490                     	;# 
  6226  0491                     	;# 
  6227  0492                     	;# 
  6228  0492                     	;# 
  6229  0493                     	;# 
  6230  0494                     	;# 
  6231  0495                     	;# 
  6232  0495                     	;# 
  6233  0496                     	;# 
  6234  0497                     	;# 
  6235  0498                     	;# 
  6236  0499                     	;# 
  6237  049A                     	;# 
  6238  049B                     	;# 
  6239  049C                     	;# 
  6240  049D                     	;# 
  6241  058C                     	;# 
  6242  058C                     	;# 
  6243  058D                     	;# 
  6244  058E                     	;# 
  6245  058F                     	;# 
  6246  058F                     	;# 
  6247  0590                     	;# 
  6248  0591                     	;# 
  6249  0592                     	;# 
  6250  0593                     	;# 
  6251  059C                     	;# 
  6252  059C                     	;# 
  6253  059D                     	;# 
  6254  059D                     	;# 
  6255  059E                     	;# 
  6256  059F                     	;# 
  6257  060C                     	;# 
  6258  060C                     	;# 
  6259  060D                     	;# 
  6260  060D                     	;# 
  6261  060E                     	;# 
  6262  060F                     	;# 
  6263  0610                     	;# 
  6264  0611                     	;# 
  6265  0612                     	;# 
  6266  0613                     	;# 
  6267  0614                     	;# 
  6268  0616                     	;# 
  6269  0616                     	;# 
  6270  0617                     	;# 
  6271  0617                     	;# 
  6272  0618                     	;# 
  6273  0619                     	;# 
  6274  061A                     	;# 
  6275  061B                     	;# 
  6276  061C                     	;# 
  6277  061D                     	;# 
  6278  061E                     	;# 
  6279  070C                     	;# 
  6280  070D                     	;# 
  6281  070E                     	;# 
  6282  070F                     	;# 
  6283  0710                     	;# 
  6284  0711                     	;# 
  6285  0712                     	;# 
  6286  0713                     	;# 
  6287  0714                     	;# 
  6288  0716                     	;# 
  6289  0717                     	;# 
  6290  0718                     	;# 
  6291  0719                     	;# 
  6292  071A                     	;# 
  6293  071B                     	;# 
  6294  071C                     	;# 
  6295  071D                     	;# 
  6296  071E                     	;# 
  6297  0796                     	;# 
  6298  0797                     	;# 
  6299  0798                     	;# 
  6300  0799                     	;# 
  6301  079A                     	;# 
  6302  079B                     	;# 
  6303  079C                     	;# 
  6304  079D                     	;# 
  6305  080C                     	;# 
  6306  080D                     	;# 
  6307  080E                     	;# 
  6308  080F                     	;# 
  6309  0810                     	;# 
  6310  0811                     	;# 
  6311  0812                     	;# 
  6312  0813                     	;# 
  6313  0814                     	;# 
  6314  081A                     	;# 
  6315  081A                     	;# 
  6316  081B                     	;# 
  6317  081C                     	;# 
  6318  081C                     	;# 
  6319  081D                     	;# 
  6320  081E                     	;# 
  6321  081F                     	;# 
  6322  088C                     	;# 
  6323  088D                     	;# 
  6324  088E                     	;# 
  6325  088F                     	;# 
  6326  0890                     	;# 
  6327  0891                     	;# 
  6328  0892                     	;# 
  6329  0893                     	;# 
  6330  0895                     	;# 
  6331  0896                     	;# 
  6332  0897                     	;# 
  6333  0898                     	;# 
  6334  0899                     	;# 
  6335  089A                     	;# 
  6336  089B                     	;# 
  6337  090C                     	;# 
  6338  090E                     	;# 
  6339  090F                     	;# 
  6340  091F                     	;# 
  6341  098F                     	;# 
  6342  098F                     	;# 
  6343  0990                     	;# 
  6344  0991                     	;# 
  6345  0992                     	;# 
  6346  0993                     	;# 
  6347  0994                     	;# 
  6348  0995                     	;# 
  6349  0996                     	;# 
  6350  0997                     	;# 
  6351  1E0F                     	;# 
  6352  1E10                     	;# 
  6353  1E11                     	;# 
  6354  1E12                     	;# 
  6355  1E13                     	;# 
  6356  1E14                     	;# 
  6357  1E15                     	;# 
  6358  1E16                     	;# 
  6359  1E17                     	;# 
  6360  1E18                     	;# 
  6361  1E19                     	;# 
  6362  1E1A                     	;# 
  6363  1E1B                     	;# 
  6364  1E1C                     	;# 
  6365  1E1D                     	;# 
  6366  1E1E                     	;# 
  6367  1E1F                     	;# 
  6368  1E20                     	;# 
  6369  1E21                     	;# 
  6370  1E22                     	;# 
  6371  1E23                     	;# 
  6372  1E24                     	;# 
  6373  1E25                     	;# 
  6374  1E26                     	;# 
  6375  1E27                     	;# 
  6376  1E28                     	;# 
  6377  1E29                     	;# 
  6378  1E2A                     	;# 
  6379  1E2B                     	;# 
  6380  1E2C                     	;# 
  6381  1E2D                     	;# 
  6382  1E2E                     	;# 
  6383  1E2F                     	;# 
  6384  1E30                     	;# 
  6385  1E31                     	;# 
  6386  1E32                     	;# 
  6387  1E33                     	;# 
  6388  1E34                     	;# 
  6389  1E35                     	;# 
  6390  1E36                     	;# 
  6391  1E37                     	;# 
  6392  1E8F                     	;# 
  6393  1E90                     	;# 
  6394  1E91                     	;# 
  6395  1E92                     	;# 
  6396  1E93                     	;# 
  6397  1E94                     	;# 
  6398  1E95                     	;# 
  6399  1E96                     	;# 
  6400  1E97                     	;# 
  6401  1E9C                     	;# 
  6402  1E9D                     	;# 
  6403  1E9E                     	;# 
  6404  1EA1                     	;# 
  6405  1EA2                     	;# 
  6406  1EA3                     	;# 
  6407  1EA4                     	;# 
  6408  1EA9                     	;# 
  6409  1EAA                     	;# 
  6410  1EB1                     	;# 
  6411  1EB2                     	;# 
  6412  1EB8                     	;# 
  6413  1EB9                     	;# 
  6414  1EBA                     	;# 
  6415  1EBB                     	;# 
  6416  1EBC                     	;# 
  6417  1EBD                     	;# 
  6418  1EBE                     	;# 
  6419  1EC3                     	;# 
  6420  1EC5                     	;# 
  6421  1EC6                     	;# 
  6422  1EC7                     	;# 
  6423  1EC8                     	;# 
  6424  1EC9                     	;# 
  6425  1ECA                     	;# 
  6426  1ECB                     	;# 
  6427  1ECB                     	;# 
  6428  1ECB                     	;# 
  6429  1ECC                     	;# 
  6430  1ECC                     	;# 
  6431  1ECC                     	;# 
  6432  1F10                     	;# 
  6433  1F11                     	;# 
  6434  1F12                     	;# 
  6435  1F14                     	;# 
  6436  1F15                     	;# 
  6437  1F1C                     	;# 
  6438  1F1D                     	;# 
  6439  1F1E                     	;# 
  6440  1F1F                     	;# 
  6441  1F20                     	;# 
  6442  1F21                     	;# 
  6443  1F22                     	;# 
  6444  1F23                     	;# 
  6445  1F24                     	;# 
  6446  1F25                     	;# 
  6447  1F26                     	;# 
  6448  1F27                     	;# 
  6449  1F38                     	;# 
  6450  1F39                     	;# 
  6451  1F3A                     	;# 
  6452  1F3B                     	;# 
  6453  1F3C                     	;# 
  6454  1F3D                     	;# 
  6455  1F3E                     	;# 
  6456  1F3F                     	;# 
  6457  1F43                     	;# 
  6458  1F44                     	;# 
  6459  1F45                     	;# 
  6460  1F46                     	;# 
  6461  1F47                     	;# 
  6462  1F48                     	;# 
  6463  1F49                     	;# 
  6464  1F4A                     	;# 
  6465  1F4E                     	;# 
  6466  1F4F                     	;# 
  6467  1F50                     	;# 
  6468  1F51                     	;# 
  6469  1F52                     	;# 
  6470  1F53                     	;# 
  6471  1F54                     	;# 
  6472  1F55                     	;# 
  6473  1FE4                     	;# 
  6474  1FE5                     	;# 
  6475  1FE6                     	;# 
  6476  1FE7                     	;# 
  6477  1FE8                     	;# 
  6478  1FE8                     	;# 
  6479  1FE9                     	;# 
  6480  1FEA                     	;# 
  6481  1FEB                     	;# 
  6482  1FED                     	;# 
  6483  1FEE                     	;# 
  6484  1FEF                     	;_dmxData
  6485                           
  6486                           	psect	idataBANK0
  6487  0E33                     __pidataBANK0:	
  6488                           
  6489                           ;initializer for _threshold
  6490  0E33  3490               	retlw	144
  6491  0E34  3406               	retlw	6
  6492                           
  6493                           ;initializer for _address
  6494  0E35  3401               	retlw	1
  6495  0E36  3400               	retlw	0
  6496                           
  6497                           	psect	idataBANK1
  6498  0002                     __pidataBANK1:	
  6499                           
  6500                           ;initializer for _delay
  6501  0002  340A               	retlw	10
  6502  0003  3400               	retlw	0
  6503                           
  6504                           	psect	stringtext1
  6505  0433                     __pstringtext1:	
  6506  0433                     _charTable:	
  6507  0433  3400               	retlw	0
  6508  0434  3482               	retlw	130
  6509  0435  3421               	retlw	33
  6510  0436  3400               	retlw	0
  6511  0437  3400               	retlw	0
  6512  0438  3400               	retlw	0
  6513  0439  3400               	retlw	0
  6514  043A  3402               	retlw	2
  6515  043B  3439               	retlw	57
  6516  043C  340F               	retlw	15
  6517  043D  3400               	retlw	0
  6518  043E  3400               	retlw	0
  6519  043F  3400               	retlw	0
  6520  0440  3440               	retlw	64
  6521  0441  3480               	retlw	128
  6522  0442  3400               	retlw	0
  6523  0443  343F               	retlw	63
  6524  0444  3406               	retlw	6
  6525  0445  345B               	retlw	91
  6526  0446  344F               	retlw	79
  6527  0447  3466               	retlw	102
  6528  0448  346D               	retlw	109
  6529  0449  347D               	retlw	125
  6530  044A  3407               	retlw	7
  6531  044B  347F               	retlw	127
  6532  044C  346F               	retlw	111
  6533  044D  3400               	retlw	0
  6534  044E  3400               	retlw	0
  6535  044F  3400               	retlw	0
  6536  0450  3448               	retlw	72
  6537  0451  3400               	retlw	0
  6538  0452  3453               	retlw	83
  6539  0453  3400               	retlw	0
  6540  0454  3477               	retlw	119
  6541  0455  347C               	retlw	124
  6542  0456  3439               	retlw	57
  6543  0457  345E               	retlw	94
  6544  0458  3479               	retlw	121
  6545  0459  3471               	retlw	113
  6546  045A  346F               	retlw	111
  6547  045B  3476               	retlw	118
  6548  045C  3406               	retlw	6
  6549  045D  341E               	retlw	30
  6550  045E  3400               	retlw	0
  6551  045F  3438               	retlw	56
  6552  0460  3400               	retlw	0
  6553  0461  3454               	retlw	84
  6554  0462  343F               	retlw	63
  6555  0463  3473               	retlw	115
  6556  0464  3467               	retlw	103
  6557  0465  3450               	retlw	80
  6558  0466  346D               	retlw	109
  6559  0467  3478               	retlw	120
  6560  0468  343E               	retlw	62
  6561  0469  3400               	retlw	0
  6562  046A  3400               	retlw	0
  6563  046B  3400               	retlw	0
  6564  046C  346E               	retlw	110
  6565  046D  3400               	retlw	0
  6566  046E  3439               	retlw	57
  6567  046F  3400               	retlw	0
  6568  0470  340F               	retlw	15
  6569  0471  3400               	retlw	0
  6570  0472  3408               	retlw	8
  6571  0473  3463               	retlw	99
  6572  0474  345F               	retlw	95
  6573  0475  347C               	retlw	124
  6574  0476  3458               	retlw	88
  6575  0477  345E               	retlw	94
  6576  0478  347B               	retlw	123
  6577  0479  3471               	retlw	113
  6578  047A  346F               	retlw	111
  6579  047B  3474               	retlw	116
  6580  047C  3402               	retlw	2
  6581  047D  341E               	retlw	30
  6582  047E  3400               	retlw	0
  6583  047F  3406               	retlw	6
  6584  0480  3400               	retlw	0
  6585  0481  3454               	retlw	84
  6586  0482  345C               	retlw	92
  6587  0483  3473               	retlw	115
  6588  0484  3467               	retlw	103
  6589  0485  3450               	retlw	80
  6590  0486  346D               	retlw	109
  6591  0487  3478               	retlw	120
  6592  0488  341C               	retlw	28
  6593  0489  3400               	retlw	0
  6594  048A  3400               	retlw	0
  6595  048B  3400               	retlw	0
  6596  048C  346E               	retlw	110
  6597  048D  3400               	retlw	0
  6598  048E  3439               	retlw	57
  6599  048F  3430               	retlw	48
  6600  0490  340F               	retlw	15
  6601  0491  3400               	retlw	0
  6602  0492  3400               	retlw	0
  6603  0493                     __end_of_charTable:	
  6604                           
  6605                           	psect	nvBANK0
  6606  006F                     __pnvBANK0:	
  6607  006F                     _eusart1TxBufferRemaining:	
  6608  006F                     	ds	1
  6609                           
  6610                           	psect	nvBANK1
  6611  00CA                     __pnvBANK1:	
  6612  00CA                     _ADCC_ADTI_InterruptHandler:	
  6613  00CA                     	ds	2
  6614  00CC                     _TMR0_InterruptHandler:	
  6615  00CC                     	ds	2
  6616  00CE                     _EUSART1_ErrorHandler:	
  6617  00CE                     	ds	2
  6618  00D0                     _EUSART1_OverrunErrorHandler:	
  6619  00D0                     	ds	2
  6620  00D2                     _EUSART1_FramingErrorHandler:	
  6621  00D2                     	ds	2
  6622  00D4                     _EUSART1_RxDefaultInterruptHandler:	
  6623  00D4                     	ds	2
  6624  00D6                     _EUSART1_TxDefaultInterruptHandler:	
  6625  00D6                     	ds	2
  6626  000B                     _INTCONbits	set	11
  6627  0014                     _TRISC	set	20
  6628  0013                     _TRISB	set	19
  6629  0012                     _TRISA	set	18
  6630  001A                     _LATC	set	26
  6631  0019                     _LATB	set	25
  6632  0018                     _LATA	set	24
  6633  000C                     _PORTA	set	12
  6634  000E                     _PORTC	set	14
  6635  00A3                     _TRISC3	set	163
  6636  00A4                     _TRISC4	set	164
  6637  00A6                     _TRISC6	set	166
  6638  00A7                     _TRISC7	set	167
  6639  00CE                     _LATB6	set	206
  6640  009E                     _TRISB6	set	158
  6641  0090                     _ADERRL	set	144
  6642  0091                     _ADERRH	set	145
  6643  009B                     _ADPREVL	set	155
  6644  009C                     _ADPREVH	set	156
  6645  0094                     _ADFLTRL	set	148
  6646  0095                     _ADFLTRH	set	149
  6647  0096                     _ADACCL	set	150
  6648  0097                     _ADACCH	set	151
  6649  0099                     _ADCNT	set	153
  6650  009D                     _ADRESL	set	157
  6651  009E                     _ADRESH	set	158
  6652  009F                     _ADPCH	set	159
  6653  009A                     _ADRPT	set	154
  6654  0098                     _ADACCU	set	152
  6655  0093                     _ADSTPTH	set	147
  6656  0092                     _ADSTPTL	set	146
  6657  008F                     _ADUTHH	set	143
  6658  008E                     _ADUTHL	set	142
  6659  008D                     _ADLTHH	set	141
  6660  008C                     _ADLTHL	set	140
  6661  011A                     _TXREG	set	282
  6662  0112                     _ADCON1bits	set	274
  6663  0115                     _ADSTATbits	set	277
  6664  0113                     _ADCON2bits	set	275
  6665  0114                     _ADCON3bits	set	276
  6666  0111                     _ADCON0bits	set	273
  6667  0111                     _ADCON0	set	273
  6668  0118                     _ADCLK	set	280
  6669  0117                     _ADACT	set	279
  6670  0116                     _ADREF	set	278
  6671  0115                     _ADSTAT	set	277
  6672  0114                     _ADCON3	set	276
  6673  0113                     _ADCON2	set	275
  6674  0112                     _ADCON1	set	274
  6675  0110                     _ADPREH	set	272
  6676  010F                     _ADPREL	set	271
  6677  010E                     _ADCAP	set	270
  6678  010D                     _ADACQH	set	269
  6679  010C                     _ADACQL	set	268
  6680  0119                     _RC1REG	set	281
  6681  011D                     _RC1STAbits	set	285
  6682  011A                     _TX1REG	set	282
  6683  011E                     _TX1STAbits	set	286
  6684  011C                     _SP1BRGH	set	284
  6685  011B                     _SP1BRGL	set	283
  6686  011E                     _TX1STA	set	286
  6687  011D                     _RC1STA	set	285
  6688  011F                     _BAUD1CON	set	287
  6689  018C                     _SSP1BUF	set	396
  6690  0191                     _SSP1CON2bits	set	401
  6691  0190                     _SSP1CON1bits	set	400
  6692  018D                     _SSP1ADD	set	397
  6693  0192                     _SSP1CON3	set	402
  6694  0190                     _SSP1CON1	set	400
  6695  018F                     _SSP1STAT	set	399
  6696  028E                     _T2CONbits	set	654
  6697  0290                     _T2CLKCON	set	656
  6698  0318                     _CCPR4L	set	792
  6699  0319                     _CCPR4H	set	793
  6700  0314                     _CCPR3L	set	788
  6701  0315                     _CCPR3H	set	789
  6702  0310                     _CCPR2L	set	784
  6703  0311                     _CCPR2H	set	785
  6704  030C                     _CCPR1L	set	780
  6705  030D                     _CCPR1H	set	781
  6706  031A                     _CCP4CONbits	set	794
  6707  0316                     _CCP3CONbits	set	790
  6708  0312                     _CCP2CONbits	set	786
  6709  030E                     _CCP1CONbits	set	782
  6710  059E                     _T0CON0bits	set	1438
  6711  059E                     _T0CON0	set	1438
  6712  059C                     _TMR0L	set	1436
  6713  059D                     _TMR0H	set	1437
  6714  059F                     _T0CON1	set	1439
  6715  070D                     _PIR1bits	set	1805
  6716  0717                     _PIE1bits	set	1815
  6717  070F                     _PIR3bits	set	1807
  6718  070C                     _PIR0bits	set	1804
  6719  0716                     _PIE0bits	set	1814
  6720  0719                     _PIE3bits	set	1817
  6721  079D                     _PMD7	set	1949
  6722  079C                     _PMD6	set	1948
  6723  079B                     _PMD5	set	1947
  6724  079A                     _PMD4	set	1946
  6725  0799                     _PMD3	set	1945
  6726  0798                     _PMD2	set	1944
  6727  0797                     _PMD1	set	1943
  6728  0796                     _PMD0	set	1942
  6729  0892                     _OSCTUNE	set	2194
  6730  0893                     _OSCFRQ	set	2195
  6731  0891                     _OSCEN	set	2193
  6732  088F                     _OSCCON3	set	2191
  6733  088D                     _OSCCON1	set	2189
  6734  1ECB                     _RX1DTPPS	set	7883
  6735  1EC6                     _SSP1DATPPS	set	7878
  6736  1EC5                     _SSP1CLKPPS	set	7877
  6737  1F23                     _RC3PPS	set	7971
  6738  1F24                     _RC4PPS	set	7972
  6739  1F26                     _RC6PPS	set	7974
  6740  1F27                     _RC7PPS	set	7975
  6741  1F15                     _RA5PPS	set	7957
  6742  1F14                     _RA4PPS	set	7956
  6743  1F51                     _SLRCONC	set	8017
  6744  1F46                     _SLRCONB	set	8006
  6745  1F3B                     _SLRCONA	set	7995
  6746  1F50                     _ODCONC	set	8016
  6747  1F45                     _ODCONB	set	8005
  6748  1F3A                     _ODCONA	set	7994
  6749  1F4F                     _WPUC	set	8015
  6750  1F39                     _WPUA	set	7993
  6751  1F44                     _WPUB	set	8004
  6752  1F38                     _ANSELA	set	7992
  6753  1F43                     _ANSELB	set	8003
  6754  1F4E                     _ANSELC	set	8014
  6755                           
  6756                           ; #config settings
  6757  0000                     
  6758                           	psect	cinit
  6759  003B                     start_initialization:	
  6760  003B                     __initialization:		;BIGRAM
  6761                           
  6762                           ; Initialize objects allocated to BANK0
  6763  003B  318E  2633  3180   	fcall	__pidataBANK0	;fetch initializer
  6764  003E  00EB               	movwf	__pdataBANK0& (0+127)
  6765  003F  318E  2634  3180   	fcall	__pidataBANK0+1	;fetch initializer
  6766  0042  00EC               	movwf	(__pdataBANK0+1)& (0+127)
  6767  0043  318E  2635  3180   	fcall	__pidataBANK0+2	;fetch initializer
  6768  0046  00ED               	movwf	(__pdataBANK0+2)& (0+127)
  6769  0047  318E  2636  3180   	fcall	__pidataBANK0+3	;fetch initializer
  6770  004A  00EE               	movwf	(__pdataBANK0+3)& (0+127)
  6771                           
  6772                           ; Initialize objects allocated to BANK1
  6773  004B  0141               	movlb	1	; select bank1
  6774  004C  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  6775  004F  00D8               	movwf	__pdataBANK1& (0+127)
  6776  0050  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  6777  0053  00D9               	movwf	(__pdataBANK1+1)& (0+127)
  6778                           
  6779                           ; Clear objects allocated to BIGRAM
  6780  0054  30EF               	movlw	low (0+9711)
  6781  0055  0084               	movwf	4
  6782  0056  3025               	movlw	high (0+9711)
  6783  0057  0085               	movwf	5
  6784  0058  3001               	movlw	1
  6785  0059  00FE               	movwf	btemp
  6786  005A  3002               	movlw	2
  6787  005B  00FF               	movwf	btemp+1
  6788  005C  318E  26C5  3180   	fcall	clear_ram0
  6789                           
  6790                           ; Clear objects allocated to COMMON
  6791  005F  01F0               	clrf	__pbssCOMMON& (0+127)
  6792  0060  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  6793  0061  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  6794  0062  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  6795  0063  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  6796  0064  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  6797                           
  6798                           ; Clear objects allocated to BANK0
  6799  0065  3046               	movlw	low __pbssBANK0
  6800  0066  0084               	movwf	4
  6801  0067  3000               	movlw	high __pbssBANK0
  6802  0068  0085               	movwf	5
  6803  0069  3025               	movlw	37
  6804  006A  00FE               	movwf	btemp
  6805  006B  3000               	movlw	0
  6806  006C  00FF               	movwf	btemp+1
  6807  006D  318E  26C5  3180   	fcall	clear_ram0
  6808                           
  6809                           ; Clear objects allocated to BANK1
  6810  0070  30A0               	movlw	low __pbssBANK1
  6811  0071  0084               	movwf	4
  6812  0072  3000               	movlw	high __pbssBANK1
  6813  0073  0085               	movwf	5
  6814  0074  302A               	movlw	42
  6815  0075  00FE               	movwf	btemp
  6816  0076  3000               	movlw	0
  6817  0077  00FF               	movwf	btemp+1
  6818  0078  318E  26C5  3180   	fcall	clear_ram0
  6819                           
  6820                           ; Clear objects allocated to BANK2
  6821  007B  3020               	movlw	low __pbssBANK2
  6822  007C  0084               	movwf	4
  6823  007D  3001               	movlw	high __pbssBANK2
  6824  007E  0085               	movwf	5
  6825  007F  3020               	movlw	32
  6826  0080  00FE               	movwf	btemp
  6827  0081  3000               	movlw	0
  6828  0082  00FF               	movwf	btemp+1
  6829  0083  318E  26C5         	fcall	clear_ram0
  6830  0085                     end_of_initialization:	
  6831                           ;End of C runtime variable initialization code
  6832                           
  6833  0085                     __end_of__initialization:	
  6834  0085  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6835  0086  0140               	movlb	0
  6836  0087  3185  2DF2         	ljmp	_main	;jump to C main() function
  6837                           
  6838                           	psect	bssCOMMON
  6839  0070                     __pbssCOMMON:	
  6840  0070                     _eusart1RxTail:	
  6841  0070                     	ds	1
  6842  0071                     _eusart1RxHead:	
  6843  0071                     	ds	1
  6844  0072                     _eusart1TxTail:	
  6845  0072                     	ds	1
  6846  0073                     _eusart1TxHead:	
  6847  0073                     	ds	1
  6848  0074                     I2C1_ISR@i2c_address:	
  6849  0074                     	ds	2
  6850                           
  6851                           	psect	bssBANK0
  6852  0046                     __pbssBANK0:	
  6853  0046                     _i2c1_object:	
  6854  0046                     	ds	5
  6855  004B                     _lastRun:	
  6856  004B                     	ds	2
  6857  004D                     _lastBeat:	
  6858  004D                     	ds	2
  6859  004F                     _lastActiveTime:	
  6860  004F                     	ds	2
  6861  0051                     controller@lastTime:	
  6862  0051                     	ds	2
  6863  0053                     _lastTime:	
  6864  0053                     	ds	2
  6865  0055                     _currentTime:	
  6866  0055                     	ds	2
  6867  0057                     _lastDetected:	
  6868  0057                     	ds	1
  6869  0058                     _thresholdExceeded:	
  6870  0058                     	ds	1
  6871  0059                     _detected:	
  6872  0059                     	ds	1
  6873  005A                     _menu:	
  6874  005A                     	ds	1
  6875  005B                     _enter:	
  6876  005B                     	ds	1
  6877  005C                     _down:	
  6878  005C                     	ds	1
  6879  005D                     _up:	
  6880  005D                     	ds	1
  6881  005E                     _isOn:	
  6882  005E                     	ds	1
  6883  005F                     I2C1_ISR@i2c_10bit_address_restart:	
  6884  005F                     	ds	1
  6885  0060                     I2C1_ISR@i2c_bytes_left:	
  6886  0060                     	ds	1
  6887  0061                     I2C1_ISR@pi2c_buf_ptr:	
  6888  0061                     	ds	1
  6889  0062                     _p_i2c1_current:	
  6890  0062                     	ds	1
  6891  0063                     _p_i2c1_trb_current:	
  6892  0063                     	ds	1
  6893  0064                     _i2c1_trb_count:	
  6894  0064                     	ds	1
  6895  0065                     _i2c1_state:	
  6896  0065                     	ds	1
  6897  0066                     _eusart1RxLastError:	
  6898  0066                     	ds	1
  6899  0067                     _eusart1RxCount:	
  6900  0067                     	ds	1
  6901  0068                     _i2c1_tr_queue:	
  6902  0068                     	ds	3
  6903                           
  6904                           	psect	dataBANK0
  6905  006B                     __pdataBANK0:	
  6906  006B                     _threshold:	
  6907  006B                     	ds	2
  6908  006D                     _address:	
  6909  006D                     	ds	2
  6910                           
  6911                           	psect	bssBANK1
  6912  00A0                     __pbssBANK1:	
  6913  00A0                     _eusart1RxStatusBuffer:	
  6914  00A0                     	ds	8
  6915  00A8                     _eusart1RxBuffer:	
  6916  00A8                     	ds	8
  6917  00B0                     _eusart1TxBuffer:	
  6918  00B0                     	ds	8
  6919  00B8                     led@lastTime:	
  6920  00B8                     	ds	2
  6921  00BA                     _dmxPointer:	
  6922  00BA                     	ds	2
  6923  00BC                     _thresholdCount:	
  6924  00BC                     	ds	2
  6925  00BE                     _bpm:	
  6926  00BE                     	ds	2
  6927  00C0                     _count:	
  6928  00C0                     	ds	2
  6929  00C2                     I2C1_MasterRead@trBlock:	
  6930  00C2                     	ds	4
  6931  00C6                     I2C1_MasterWrite@trBlock:	
  6932  00C6                     	ds	4
  6933                           
  6934                           	psect	dataBANK1
  6935  00D8                     __pdataBANK1:	
  6936  00D8                     _delay:	
  6937  00D8                     	ds	2
  6938                           
  6939                           	psect	bssBANK2
  6940  0120                     __pbssBANK2:	
  6941  0120                     _buttons:	
  6942  0120                     	ds	32
  6943                           
  6944                           	psect	clrtext
  6945  0EC5                     clear_ram0:	
  6946                           ;	Called with FSR0 containing the base address, and
  6947                           ;	btemp/btemp+1 has the size to clear
  6948                           
  6949  0EC5  0064               	clrwdt	;clear the watchdog before getting into this loop
  6950  0EC6                     clrloop0:	
  6951  0EC6  0180               	clrf	0	;clear RAM location pointed to by FSR
  6952  0EC7  3101               	addfsr 0,1
  6953  0EC8  3001               	movlw	1
  6954  0EC9  02FE               	subwf	126,f
  6955  0ECA  3000               	movlw	0
  6956  0ECB  3BFF               	subwfb	127,f
  6957  0ECC  087F               	movf	127,w
  6958  0ECD  047E               	iorwf	126,w
  6959  0ECE  1903               	btfsc	3,2
  6960  0ECF  3400               	retlw	0	;all done for this memory range, return
  6961  0ED0  2EC6               	goto	clrloop0	;have we reached the end yet?
  6962                           
  6963                           	psect	cstackBANK1
  6964  00DA                     __pcstackBANK1:	
  6965  00DA                     ??_main:	
  6966                           
  6967                           ; 1 bytes @ 0x0
  6968  00DA                     	ds	2
  6969                           
  6970                           	psect	cstackCOMMON
  6971  0076                     __pcstackCOMMON:	
  6972  0076                     ?_EUSART1_Receive_ISR:	
  6973  0076                     ?_EUSART1_Transmit_ISR:	
  6974                           ; 1 bytes @ 0x0
  6975                           
  6976  0076                     ??_EUSART1_Transmit_ISR:	
  6977                           ; 1 bytes @ 0x0
  6978                           
  6979  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  6980                           ; 1 bytes @ 0x0
  6981                           
  6982  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  6983                           ; 1 bytes @ 0x0
  6984                           
  6985  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  6986                           ; 1 bytes @ 0x0
  6987                           
  6988  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  6989                           ; 1 bytes @ 0x0
  6990                           
  6991  0076                     ?_EUSART1_DefaultErrorHandler:	
  6992                           ; 1 bytes @ 0x0
  6993                           
  6994  0076                     ?_EUSART1_RxDataHandler:	
  6995                           ; 1 bytes @ 0x0
  6996                           
  6997  0076                     ??_EUSART1_RxDataHandler:	
  6998                           ; 1 bytes @ 0x0
  6999                           
  7000  0076                     ?_PMD_Initialize:	
  7001                           ; 1 bytes @ 0x0
  7002                           
  7003  0076                     ?_PIN_MANAGER_Initialize:	
  7004                           ; 1 bytes @ 0x0
  7005                           
  7006  0076                     ?_OSCILLATOR_Initialize:	
  7007                           ; 1 bytes @ 0x0
  7008                           
  7009  0076                     ?_I2C1_Initialize:	
  7010                           ; 1 bytes @ 0x0
  7011                           
  7012  0076                     ?_ADCC_Initialize:	
  7013                           ; 1 bytes @ 0x0
  7014                           
  7015  0076                     ?_TMR0_Initialize:	
  7016                           ; 1 bytes @ 0x0
  7017                           
  7018  0076                     ?_TMR0_ISR:	
  7019                           ; 1 bytes @ 0x0
  7020                           
  7021  0076                     ??_TMR0_ISR:	
  7022                           ; 1 bytes @ 0x0
  7023                           
  7024  0076                     ?_I2C1_BusCollisionISR:	
  7025                           ; 1 bytes @ 0x0
  7026                           
  7027  0076                     ??_I2C1_BusCollisionISR:	
  7028                           ; 1 bytes @ 0x0
  7029                           
  7030  0076                     ?_I2C1_ISR:	
  7031                           ; 1 bytes @ 0x0
  7032                           
  7033  0076                     ?_ADCC_ThresholdISR:	
  7034                           ; 1 bytes @ 0x0
  7035                           
  7036  0076                     ??_ADCC_ThresholdISR:	
  7037                           ; 1 bytes @ 0x0
  7038                           
  7039  0076                     ?_TMR0_DefaultInterruptHandler:	
  7040                           ; 1 bytes @ 0x0
  7041                           
  7042  0076                     ??_TMR0_DefaultInterruptHandler:	
  7043                           ; 1 bytes @ 0x0
  7044                           
  7045  0076                     ?_I2C1_Stop:	
  7046                           ; 1 bytes @ 0x0
  7047                           
  7048  0076                     ??_I2C1_Stop:	
  7049                           ; 1 bytes @ 0x0
  7050                           
  7051  0076                     ?_I2C1_FunctionComplete:	
  7052                           ; 1 bytes @ 0x0
  7053                           
  7054  0076                     ??_I2C1_FunctionComplete:	
  7055                           ; 1 bytes @ 0x0
  7056                           
  7057  0076                     ?_ADCC_DefaultInterruptHandler:	
  7058                           ; 1 bytes @ 0x0
  7059                           
  7060  0076                     ??_ADCC_DefaultInterruptHandler:	
  7061                           ; 1 bytes @ 0x0
  7062                           
  7063  0076                     ?_CLOCK_init:	
  7064                           ; 1 bytes @ 0x0
  7065                           
  7066  0076                     ?_DMX_ISR:	
  7067                           ; 1 bytes @ 0x0
  7068                           
  7069  0076                     ??_DMX_ISR:	
  7070                           ; 1 bytes @ 0x0
  7071                           
  7072  0076                     ?_TM1650_init:	
  7073                           ; 1 bytes @ 0x0
  7074                           
  7075  0076                     ?_BUTTONS_init:	
  7076                           ; 1 bytes @ 0x0
  7077                           
  7078  0076                     ?_CONTROLLER_init:	
  7079                           ; 1 bytes @ 0x0
  7080                           
  7081  0076                     ?_initLED:	
  7082                           ; 1 bytes @ 0x0
  7083                           
  7084  0076                     ?_BEAT_init:	
  7085                           ; 1 bytes @ 0x0
  7086                           
  7087  0076                     ?_BEAT_task:	
  7088                           ; 1 bytes @ 0x0
  7089                           
  7090  0076                     ?_LED_task:	
  7091                           ; 1 bytes @ 0x0
  7092                           
  7093  0076                     ?_BUTTONS_task:	
  7094                           ; 1 bytes @ 0x0
  7095                           
  7096  0076                     ?_CONTROLLER_task:	
  7097                           ; 1 bytes @ 0x0
  7098                           
  7099  0076                     ?_CLOCK_timerCallback:	
  7100                           ; 1 bytes @ 0x0
  7101                           
  7102  0076                     ??_CLOCK_timerCallback:	
  7103                           ; 1 bytes @ 0x0
  7104                           
  7105  0076                     ?_TM1650_enable:	
  7106                           ; 1 bytes @ 0x0
  7107                           
  7108  0076                     ?_EUSART1_Initialize:	
  7109                           ; 1 bytes @ 0x0
  7110                           
  7111  0076                     ?_SYSTEM_Initialize:	
  7112                           ; 1 bytes @ 0x0
  7113                           
  7114  0076                     ?_INTERRUPT_InterruptManager:	
  7115                           ; 1 bytes @ 0x0
  7116                           
  7117  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  7118                           ; 1 bytes @ 0x0
  7119                           
  7120  0076                     ?_ADCC_StartConversion:	
  7121                           ; 1 bytes @ 0x0
  7122                           
  7123  0076                     ?_main:	
  7124                           ; 1 bytes @ 0x0
  7125                           
  7126  0076                     ?_TM1650_isEnabled:	
  7127                           ; 1 bytes @ 0x0
  7128                           
  7129  0076                     ?_address_inc:	
  7130                           ; 1 bytes @ 0x0
  7131                           
  7132  0076                     ?_address_dec:	
  7133                           ; 1 bytes @ 0x0
  7134                           
  7135  0076                     ?_adcThresholdHandler:	
  7136                           ; 1 bytes @ 0x0
  7137                           
  7138  0076                     ??_adcThresholdHandler:	
  7139                           ; 1 bytes @ 0x0
  7140                           
  7141  0076                     ?_BEAT_detected:	
  7142                           ; 1 bytes @ 0x0
  7143                           
  7144                           
  7145                           ; 1 bytes @ 0x0
  7146  0076                     	ds	1
  7147  0077                     ??_EUSART1_Receive_ISR:	
  7148  0077                     ??_EUSART1_DefaultErrorHandler:	
  7149                           ; 1 bytes @ 0x1
  7150                           
  7151  0077                     I2C1_Stop@completion_code:	
  7152                           ; 1 bytes @ 0x1
  7153                           
  7154                           
  7155                           ; 1 bytes @ 0x1
  7156  0077                     	ds	1
  7157  0078                     ??_I2C1_ISR:	
  7158                           
  7159                           ; 1 bytes @ 0x2
  7160  0078                     	ds	4
  7161  007C                     ??_INTERRUPT_InterruptManager:	
  7162                           
  7163                           	psect	cstackBANK0
  7164  0020                     __pcstackBANK0:	
  7165                           ; 1 bytes @ 0x6
  7166                           
  7167  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7168  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7169                           ; 1 bytes @ 0x0
  7170                           
  7171  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7172                           ; 1 bytes @ 0x0
  7173                           
  7174  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7175                           ; 1 bytes @ 0x0
  7176                           
  7177  0020                     ?_EUSART1_SetErrorHandler:	
  7178                           ; 1 bytes @ 0x0
  7179                           
  7180  0020                     ??_PMD_Initialize:	
  7181                           ; 1 bytes @ 0x0
  7182                           
  7183  0020                     ??_PIN_MANAGER_Initialize:	
  7184                           ; 1 bytes @ 0x0
  7185                           
  7186  0020                     ??_OSCILLATOR_Initialize:	
  7187                           ; 1 bytes @ 0x0
  7188                           
  7189  0020                     ??_I2C1_Initialize:	
  7190                           ; 1 bytes @ 0x0
  7191                           
  7192  0020                     ?_TMR0_SetInterruptHandler:	
  7193                           ; 1 bytes @ 0x0
  7194                           
  7195  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7196                           ; 1 bytes @ 0x0
  7197                           
  7198  0020                     ?_I2C1_MasterTRBInsert:	
  7199                           ; 1 bytes @ 0x0
  7200                           
  7201  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7202                           ; 1 bytes @ 0x0
  7203                           
  7204  0020                     ??_initLED:	
  7205                           ; 1 bytes @ 0x0
  7206                           
  7207  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7208                           ; 1 bytes @ 0x0
  7209                           
  7210  0020                     ??_ADCC_StartConversion:	
  7211                           ; 1 bytes @ 0x0
  7212                           
  7213  0020                     ?_ADCC_SetUpperThreshold:	
  7214                           ; 1 bytes @ 0x0
  7215                           
  7216  0020                     ??_TM1650_isEnabled:	
  7217                           ; 1 bytes @ 0x0
  7218                           
  7219  0020                     ?_init:	
  7220                           ; 1 bytes @ 0x0
  7221                           
  7222  0020                     ??_BEAT_detected:	
  7223                           ; 1 bytes @ 0x0
  7224                           
  7225  0020                     ?_LED_setColor:	
  7226                           ; 1 bytes @ 0x0
  7227                           
  7228  0020                     ?_CLOCK_getTime:	
  7229                           ; 1 bytes @ 0x0
  7230                           
  7231  0020                     ?_BUTTONS_isClicked:	
  7232                           ; 2 bytes @ 0x0
  7233                           
  7234  0020                     ?___lwdiv:	
  7235                           ; 2 bytes @ 0x0
  7236                           
  7237  0020                     ?___lwmod:	
  7238                           ; 2 bytes @ 0x0
  7239                           
  7240  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7241                           ; 2 bytes @ 0x0
  7242                           
  7243  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7244                           ; 1 bytes @ 0x0
  7245                           
  7246  0020                     ADCC_StartConversion@channel:	
  7247                           ; 1 bytes @ 0x0
  7248                           
  7249  0020                     LED_setColor@green:	
  7250                           ; 1 bytes @ 0x0
  7251                           
  7252  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7253                           ; 1 bytes @ 0x0
  7254                           
  7255  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7256                           ; 2 bytes @ 0x0
  7257                           
  7258  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7259                           ; 2 bytes @ 0x0
  7260                           
  7261  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7262                           ; 2 bytes @ 0x0
  7263                           
  7264  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7265                           ; 2 bytes @ 0x0
  7266                           
  7267  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7268                           ; 2 bytes @ 0x0
  7269                           
  7270  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7271                           ; 2 bytes @ 0x0
  7272                           
  7273  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7274                           ; 2 bytes @ 0x0
  7275                           
  7276  0020                     init@port:	
  7277                           ; 2 bytes @ 0x0
  7278                           
  7279  0020                     ___lwdiv@divisor:	
  7280                           ; 2 bytes @ 0x0
  7281                           
  7282  0020                     ___lwmod@divisor:	
  7283                           ; 2 bytes @ 0x0
  7284                           
  7285                           
  7286                           ; 2 bytes @ 0x0
  7287  0020                     	ds	1
  7288  0021                     I2C1_MasterTRBInsert@pflag:	
  7289  0021                     I2C1_MasterWriteTRBBuild@length:	
  7290                           ; 1 bytes @ 0x1
  7291                           
  7292  0021                     LED_setColor@white:	
  7293                           ; 1 bytes @ 0x1
  7294                           
  7295                           
  7296                           ; 1 bytes @ 0x1
  7297  0021                     	ds	1
  7298  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7299  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7300                           ; 1 bytes @ 0x2
  7301                           
  7302  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7303                           ; 1 bytes @ 0x2
  7304                           
  7305  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7306                           ; 1 bytes @ 0x2
  7307                           
  7308  0022                     ??_EUSART1_SetErrorHandler:	
  7309                           ; 1 bytes @ 0x2
  7310                           
  7311  0022                     ??_ADCC_Initialize:	
  7312                           ; 1 bytes @ 0x2
  7313                           
  7314  0022                     ??_TMR0_Initialize:	
  7315                           ; 1 bytes @ 0x2
  7316                           
  7317  0022                     ??_TMR0_SetInterruptHandler:	
  7318                           ; 1 bytes @ 0x2
  7319                           
  7320  0022                     ??_I2C1_MasterTRBInsert:	
  7321                           ; 1 bytes @ 0x2
  7322                           
  7323  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7324                           ; 1 bytes @ 0x2
  7325                           
  7326  0022                     ??_CLOCK_init:	
  7327                           ; 1 bytes @ 0x2
  7328                           
  7329  0022                     ??_BEAT_init:	
  7330                           ; 1 bytes @ 0x2
  7331                           
  7332  0022                     ??_BUTTONS_task:	
  7333                           ; 1 bytes @ 0x2
  7334                           
  7335  0022                     ??_EUSART1_Initialize:	
  7336                           ; 1 bytes @ 0x2
  7337                           
  7338  0022                     ??_ADCC_SetUpperThreshold:	
  7339                           ; 1 bytes @ 0x2
  7340                           
  7341  0022                     ??_CLOCK_getTime:	
  7342                           ; 1 bytes @ 0x2
  7343                           
  7344  0022                     init@pin:	
  7345                           ; 1 bytes @ 0x2
  7346                           
  7347  0022                     LED_setColor@blue:	
  7348                           ; 1 bytes @ 0x2
  7349                           
  7350  0022                     I2C1_MasterWriteTRBBuild@address:	
  7351                           ; 1 bytes @ 0x2
  7352                           
  7353  0022                     ___lwdiv@dividend:	
  7354                           ; 2 bytes @ 0x2
  7355                           
  7356  0022                     ___lwmod@dividend:	
  7357                           ; 2 bytes @ 0x2
  7358                           
  7359                           
  7360                           ; 2 bytes @ 0x2
  7361  0022                     	ds	1
  7362  0023                     ??_SYSTEM_Initialize:	
  7363  0023                     ??_init:	
  7364                           ; 1 bytes @ 0x3
  7365                           
  7366  0023                     ??_BUTTONS_isClicked:	
  7367                           ; 1 bytes @ 0x3
  7368                           
  7369  0023                     ??_LED_setColor:	
  7370                           ; 1 bytes @ 0x3
  7371                           
  7372  0023                     I2C1_MasterTRBInsert@count:	
  7373                           ; 1 bytes @ 0x3
  7374                           
  7375  0023                     BUTTONS_isClicked@button:	
  7376                           ; 1 bytes @ 0x3
  7377                           
  7378                           
  7379                           ; 1 bytes @ 0x3
  7380  0023                     	ds	1
  7381  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7382  0024                     ??___lwdiv:	
  7383                           ; 1 bytes @ 0x4
  7384                           
  7385  0024                     ??___lwmod:	
  7386                           ; 1 bytes @ 0x4
  7387                           
  7388  0024                     init@btn:	
  7389                           ; 1 bytes @ 0x4
  7390                           
  7391                           
  7392                           ; 1 bytes @ 0x4
  7393  0024                     	ds	1
  7394  0025                     ??_BUTTONS_init:	
  7395  0025                     BUTTONS_task@i:	
  7396                           ; 1 bytes @ 0x5
  7397                           
  7398  0025                     ___lwdiv@counter:	
  7399                           ; 1 bytes @ 0x5
  7400                           
  7401  0025                     ___lwmod@counter:	
  7402                           ; 1 bytes @ 0x5
  7403                           
  7404                           
  7405                           ; 1 bytes @ 0x5
  7406  0025                     	ds	1
  7407  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7408  0026                     BUTTONS_task@time:	
  7409                           ; 1 bytes @ 0x6
  7410                           
  7411  0026                     ___lwdiv@quotient:	
  7412                           ; 2 bytes @ 0x6
  7413                           
  7414                           
  7415                           ; 2 bytes @ 0x6
  7416  0026                     	ds	1
  7417  0027                     ?_I2C1_MasterWrite:	
  7418  0027                     I2C1_MasterWrite@length:	
  7419                           ; 1 bytes @ 0x7
  7420                           
  7421  0027                     LED_setColor@lo1:	
  7422                           ; 1 bytes @ 0x7
  7423                           
  7424                           
  7425                           ; 2 bytes @ 0x7
  7426  0027                     	ds	1
  7427  0028                     ??_BEAT_task:	
  7428  0028                     BUTTONS_task@btn:	
  7429                           ; 1 bytes @ 0x8
  7430                           
  7431  0028                     I2C1_MasterWrite@address:	
  7432                           ; 1 bytes @ 0x8
  7433                           
  7434                           
  7435                           ; 2 bytes @ 0x8
  7436  0028                     	ds	2
  7437  002A                     I2C1_MasterWrite@pflag:	
  7438  002A                     BEAT_task@offset:	
  7439                           ; 1 bytes @ 0xA
  7440                           
  7441                           
  7442                           ; 2 bytes @ 0xA
  7443  002A                     	ds	1
  7444  002B                     ??_I2C1_MasterWrite:	
  7445  002B                     LED_setColor@lo2:	
  7446                           ; 1 bytes @ 0xB
  7447                           
  7448                           
  7449                           ; 2 bytes @ 0xB
  7450  002B                     	ds	2
  7451  002D                     I2C1_MasterWrite@pdata:	
  7452                           
  7453                           ; 1 bytes @ 0xD
  7454  002D                     	ds	1
  7455  002E                     ?_writeData:	
  7456  002E                     writeData@data:	
  7457                           ; 1 bytes @ 0xE
  7458                           
  7459                           
  7460                           ; 1 bytes @ 0xE
  7461  002E                     	ds	1
  7462  002F                     ??_writeData:	
  7463  002F                     LED_setColor@lo3:	
  7464                           ; 1 bytes @ 0xF
  7465                           
  7466                           
  7467                           ; 2 bytes @ 0xF
  7468  002F                     	ds	3
  7469  0032                     writeData@address:	
  7470                           
  7471                           ; 1 bytes @ 0x12
  7472  0032                     	ds	1
  7473  0033                     writeData@status:	
  7474  0033                     LED_setColor@lo4:	
  7475                           ; 1 bytes @ 0x13
  7476                           
  7477                           
  7478                           ; 2 bytes @ 0x13
  7479  0033                     	ds	1
  7480  0034                     ??_TM1650_enable:	
  7481  0034                     ?_TM1650_setDigit:	
  7482                           ; 1 bytes @ 0x14
  7483                           
  7484  0034                     TM1650_setDigit@data:	
  7485                           ; 1 bytes @ 0x14
  7486                           
  7487  0034                     TM1650_enable@enable:	
  7488                           ; 1 bytes @ 0x14
  7489                           
  7490                           
  7491                           ; 1 bytes @ 0x14
  7492  0034                     	ds	1
  7493  0035                     ??_TM1650_init:	
  7494  0035                     LED_setColor@red:	
  7495                           ; 1 bytes @ 0x15
  7496                           
  7497  0035                     TM1650_setDigit@dp:	
  7498                           ; 1 bytes @ 0x15
  7499                           
  7500                           
  7501                           ; 2 bytes @ 0x15
  7502  0035                     	ds	1
  7503  0036                     ??_LED_task:	
  7504                           
  7505                           ; 1 bytes @ 0x16
  7506  0036                     	ds	1
  7507  0037                     ??_TM1650_setDigit:	
  7508                           
  7509                           ; 1 bytes @ 0x17
  7510  0037                     	ds	3
  7511  003A                     TM1650_setDigit@digit:	
  7512                           
  7513                           ; 1 bytes @ 0x1A
  7514  003A                     	ds	1
  7515  003B                     ?_TM1650_fastPrintNum:	
  7516  003B                     TM1650_fastPrintNum@num:	
  7517                           ; 1 bytes @ 0x1B
  7518                           
  7519                           
  7520                           ; 2 bytes @ 0x1B
  7521  003B                     	ds	2
  7522  003D                     ??_TM1650_fastPrintNum:	
  7523                           
  7524                           ; 1 bytes @ 0x1D
  7525  003D                     	ds	1
  7526  003E                     TM1650_fastPrintNum@numWrite:	
  7527                           
  7528                           ; 2 bytes @ 0x1E
  7529  003E                     	ds	2
  7530  0040                     TM1650_fastPrintNum@i:	
  7531                           
  7532                           ; 2 bytes @ 0x20
  7533  0040                     	ds	1
  7534  0041                     LED_task@time:	
  7535                           
  7536                           ; 2 bytes @ 0x21
  7537  0041                     	ds	1
  7538  0042                     ??_CONTROLLER_init:	
  7539  0042                     ??_CONTROLLER_task:	
  7540                           ; 1 bytes @ 0x22
  7541                           
  7542  0042                     ??_address_inc:	
  7543                           ; 1 bytes @ 0x22
  7544                           
  7545  0042                     ??_address_dec:	
  7546                           ; 1 bytes @ 0x22
  7547                           
  7548                           
  7549                           ; 1 bytes @ 0x22
  7550  0042                     	ds	2
  7551  0044                     CONTROLLER_task@time:	
  7552                           
  7553                           ; 2 bytes @ 0x24
  7554  0044                     	ds	2
  7555                           
  7556                           	psect	maintext
  7557  05F2                     __pmaintext:	
  7558 ;;
  7559 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7560 ;;
  7561 ;; *************** function _main *****************
  7562 ;; Defined at:
  7563 ;;		line 15 in file "main.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      void 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : B3F/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7579 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7580 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7581 ;;Total ram usage:        2 bytes
  7582 ;; Hardware stack levels required when called:   12
  7583 ;; This function calls:
  7584 ;;		_BEAT_init
  7585 ;;		_BEAT_task
  7586 ;;		_BUTTONS_init
  7587 ;;		_BUTTONS_task
  7588 ;;		_CLOCK_init
  7589 ;;		_CONTROLLER_init
  7590 ;;		_CONTROLLER_task
  7591 ;;		_EUSART1_SetRxInterruptHandler
  7592 ;;		_LED_task
  7593 ;;		_SYSTEM_Initialize
  7594 ;;		_TM1650_init
  7595 ;;		_initLED
  7596 ;; This function is called by:
  7597 ;;		Startup code after reset
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           
  7602                           ;psect for function _main
  7603  05F2                     _main:	
  7604                           
  7605                           ;main.c: 17:     SYSTEM_Initialize();
  7606                           
  7607                           ;incstack = 0
  7608                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7609  05F2  318F  274E  3185   	fcall	_SYSTEM_Initialize
  7610                           
  7611                           ;main.c: 18:     CLOCK_init();
  7612  05F5  318E  2648  3185   	fcall	_CLOCK_init
  7613                           
  7614                           ;main.c: 19:     TRISB6 = 0;
  7615  05F8  0140               	movlb	0	; select bank0
  7616  05F9  1313               	bcf	19,6	;volatile
  7617                           
  7618                           ;main.c: 20:     LATB6 = 0;
  7619  05FA  1319               	bcf	25,6	;volatile
  7620                           
  7621                           ;main.c: 21:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  7622  05FB  3063               	movlw	low _DMX_ISR
  7623  05FC  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  7624  05FD  3007               	movlw	high _DMX_ISR
  7625  05FE  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  7626  05FF  318E  26A0  3185   	fcall	_EUSART1_SetRxInterruptHandler
  7627                           
  7628                           ;main.c: 27:     (INTCONbits.GIE = 1);
  7629  0602  178B               	bsf	11,7	;volatile
  7630                           
  7631                           ;main.c: 30:     (INTCONbits.PEIE = 1);
  7632  0603  170B               	bsf	11,6	;volatile
  7633                           
  7634                           ;main.c: 37:      _delay((unsigned long)((500)*(32000000/4000.0)));
  7635  0604  3015               	movlw	21
  7636  0605  0141               	movlb	1	; select bank1
  7637  0606  00DB               	movwf	(??_main^(0+128)+1)
  7638  0607  304B               	movlw	75
  7639  0608  00DA               	movwf	??_main^(0+128)
  7640  0609  30BE               	movlw	190
  7641  060A                     u2567:	
  7642  060A  0B89               	decfsz	9,f
  7643  060B  2E0A               	goto	u2567
  7644  060C  0BDA               	decfsz	??_main^(0+128),f
  7645  060D  2E0A               	goto	u2567
  7646  060E  0BDB               	decfsz	(??_main^(0+128)+1),f
  7647  060F  2E0A               	goto	u2567
  7648  0610  0000               	nop
  7649                           
  7650                           ;main.c: 38:     TM1650_init();
  7651  0611  318E  262F  3185   	fcall	_TM1650_init
  7652                           
  7653                           ;main.c: 39:     BUTTONS_init();
  7654  0614  3185  2577  3185   	fcall	_BUTTONS_init
  7655                           
  7656                           ;main.c: 40:     CONTROLLER_init();
  7657  0617  318E  2650  3185   	fcall	_CONTROLLER_init
  7658                           
  7659                           ;main.c: 41:     initLED();
  7660  061A  3186  26EE  3185   	fcall	_initLED
  7661                           
  7662                           ;main.c: 42:     BEAT_init();
  7663  061D  318E  26FC  3185   	fcall	_BEAT_init
  7664  0620                     l4091:	
  7665                           
  7666                           ;main.c: 46:         BEAT_task();
  7667  0620  3182  229C  3185   	fcall	_BEAT_task
  7668                           
  7669                           ;main.c: 47:         LED_task();
  7670  0623  3184  2493  3185   	fcall	_LED_task
  7671                           
  7672                           ;main.c: 48:         BUTTONS_task();
  7673  0626  3181  21D2  3185   	fcall	_BUTTONS_task
  7674                           
  7675                           ;main.c: 49:         CONTROLLER_task();
  7676  0629  3183  23D1  3185   	fcall	_CONTROLLER_task
  7677  062C  2E20               	goto	l4091
  7678  062D                     __end_of_main:	
  7679                           
  7680                           	psect	text1
  7681  06EE                     __ptext1:	
  7682 ;; *************** function _initLED *****************
  7683 ;; Defined at:
  7684 ;;		line 9 in file "led.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;		None
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;		None
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      void 
  7691 ;; Registers used:
  7692 ;;		wreg, status,2, status,0
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7702 ;;Total ram usage:        0 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:    4
  7705 ;; This function calls:
  7706 ;;		Nothing
  7707 ;; This function is called by:
  7708 ;;		_main
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           
  7713                           ;psect for function _initLED
  7714  06EE                     _initLED:	
  7715                           
  7716                           ;led.c: 12:     TRISC7 = 0;
  7717                           
  7718                           ;incstack = 0
  7719                           ; Regs used in _initLED: [wreg+status,2+status,0]
  7720  06EE  0140               	movlb	0	; select bank0
  7721  06EF  1394               	bcf	20,7	;volatile
  7722                           
  7723                           ;led.c: 13:     TRISC6 = 0;
  7724  06F0  1314               	bcf	20,6	;volatile
  7725                           
  7726                           ;led.c: 14:     TRISC4 = 0;
  7727  06F1  1214               	bcf	20,4	;volatile
  7728                           
  7729                           ;led.c: 15:     TRISC3 = 0;
  7730  06F2  1194               	bcf	20,3	;volatile
  7731                           
  7732                           ;led.c: 17:     T2CLKCON = 0x01;
  7733  06F3  3001               	movlw	1
  7734  06F4  0145               	movlb	5	; select bank5
  7735  06F5  0090               	movwf	16	;volatile
  7736                           
  7737                           ;led.c: 18:     T2CONbits.ON = 1;
  7738  06F6  178E               	bsf	14,7	;volatile
  7739                           
  7740                           ;led.c: 20:     CCP1CONbits.CCP1EN = 1;
  7741  06F7  0146               	movlb	6	; select bank6
  7742  06F8  178E               	bsf	14,7	;volatile
  7743                           
  7744                           ;led.c: 21:     CCP1CONbits.MODE = 0b1100;
  7745  06F9  080E               	movf	14,w	;volatile
  7746  06FA  39F0               	andlw	-16
  7747  06FB  380C               	iorlw	12
  7748  06FC  008E               	movwf	14	;volatile
  7749                           
  7750                           ;led.c: 22:     CCP2CONbits.CCP2EN = 1;
  7751  06FD  1792               	bsf	18,7	;volatile
  7752                           
  7753                           ;led.c: 23:     CCP2CONbits.MODE = 0b1100;
  7754  06FE  0812               	movf	18,w	;volatile
  7755  06FF  39F0               	andlw	-16
  7756  0700  380C               	iorlw	12
  7757  0701  0092               	movwf	18	;volatile
  7758                           
  7759                           ;led.c: 24:     CCP3CONbits.CCP3EN = 1;
  7760  0702  1796               	bsf	22,7	;volatile
  7761                           
  7762                           ;led.c: 25:     CCP3CONbits.MODE = 0b1100;
  7763  0703  0816               	movf	22,w	;volatile
  7764  0704  39F0               	andlw	-16
  7765  0705  380C               	iorlw	12
  7766  0706  0096               	movwf	22	;volatile
  7767                           
  7768                           ;led.c: 26:     CCP4CONbits.CCP4EN = 1;
  7769  0707  179A               	bsf	26,7	;volatile
  7770                           
  7771                           ;led.c: 27:     CCP4CONbits.MODE = 0b1100;
  7772  0708  081A               	movf	26,w	;volatile
  7773  0709  39F0               	andlw	-16
  7774  070A  380C               	iorlw	12
  7775  070B  009A               	movwf	26	;volatile
  7776                           
  7777                           ;led.c: 30:     RC7PPS = 0x09;
  7778  070C  3009               	movlw	9
  7779  070D  017E               	movlb	62	; select bank62
  7780  070E  00A7               	movwf	39	;volatile
  7781                           
  7782                           ;led.c: 31:     RC6PPS = 0x0A;
  7783  070F  300A               	movlw	10
  7784  0710  00A6               	movwf	38	;volatile
  7785                           
  7786                           ;led.c: 32:     RC4PPS = 0x0B;
  7787  0711  300B               	movlw	11
  7788  0712  00A4               	movwf	36	;volatile
  7789                           
  7790                           ;led.c: 33:     RC3PPS = 0x0C;
  7791  0713  300C               	movlw	12
  7792  0714  00A3               	movwf	35	;volatile
  7793  0715  0008               	return
  7794  0716                     __end_of_initLED:	
  7795                           
  7796                           	psect	text2
  7797  0E2F                     __ptext2:	
  7798 ;; *************** function _TM1650_init *****************
  7799 ;; Defined at:
  7800 ;;		line 28 in file "tm1650.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;		None
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7818 ;;Total ram usage:        0 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:    9
  7821 ;; This function calls:
  7822 ;;		_TM1650_enable
  7823 ;; This function is called by:
  7824 ;;		_main
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           
  7829                           ;psect for function _TM1650_init
  7830  0E2F                     _TM1650_init:	
  7831                           
  7832                           ;tm1650.c: 29:     TM1650_enable(1);
  7833                           
  7834                           ;incstack = 0
  7835                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7836  0E2F  3001               	movlw	1
  7837  0E30  318F  2724         	fcall	_TM1650_enable
  7838  0E32  0008               	return
  7839  0E33                     __end_of_TM1650_init:	
  7840                           
  7841                           	psect	text3
  7842  0F4E                     __ptext3:	
  7843 ;; *************** function _SYSTEM_Initialize *****************
  7844 ;; Defined at:
  7845 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0, pclath, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    6
  7866 ;; This function calls:
  7867 ;;		_ADCC_Initialize
  7868 ;;		_EUSART1_Initialize
  7869 ;;		_I2C1_Initialize
  7870 ;;		_OSCILLATOR_Initialize
  7871 ;;		_PIN_MANAGER_Initialize
  7872 ;;		_PMD_Initialize
  7873 ;;		_TMR0_Initialize
  7874 ;; This function is called by:
  7875 ;;		_main
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           
  7880                           ;psect for function _SYSTEM_Initialize
  7881  0F4E                     _SYSTEM_Initialize:	
  7882                           
  7883                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7884                           
  7885                           ;incstack = 0
  7886                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7887  0F4E  318E  26BB  318F   	fcall	_PMD_Initialize
  7888                           
  7889                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7890  0F51  3186  2694  318F   	fcall	_PIN_MANAGER_Initialize
  7891                           
  7892                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7893  0F54  318E  26B2  318F   	fcall	_OSCILLATOR_Initialize
  7894                           
  7895                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  7896  0F57  318F  2791  318F   	fcall	_I2C1_Initialize
  7897                           
  7898                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  7899  0F5A  3187  273D  318F   	fcall	_ADCC_Initialize
  7900                           
  7901                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  7902  0F5D  318F  2710  318F   	fcall	_TMR0_Initialize
  7903                           
  7904                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  7905  0F60  3185  2534         	fcall	_EUSART1_Initialize
  7906  0F62  0008               	return
  7907  0F63                     __end_of_SYSTEM_Initialize:	
  7908                           
  7909                           	psect	text4
  7910  0F10                     __ptext4:	
  7911 ;; *************** function _TMR0_Initialize *****************
  7912 ;; Defined at:
  7913 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0, pclath, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    5
  7934 ;; This function calls:
  7935 ;;		_TMR0_SetInterruptHandler
  7936 ;; This function is called by:
  7937 ;;		_SYSTEM_Initialize
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           
  7942                           ;psect for function _TMR0_Initialize
  7943  0F10                     _TMR0_Initialize:	
  7944                           
  7945                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7949  0F10  3045               	movlw	69
  7950  0F11  014B               	movlb	11	; select bank11
  7951  0F12  009F               	movwf	31	;volatile
  7952                           
  7953                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  7954  0F13  30F9               	movlw	249
  7955  0F14  009D               	movwf	29	;volatile
  7956                           
  7957                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  7958  0F15  019C               	clrf	28	;volatile
  7959                           
  7960                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  7961  0F16  014E               	movlb	14	; select bank14
  7962  0F17  128C               	bcf	12,5	;volatile
  7963                           
  7964                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  7965  0F18  1696               	bsf	22,5	;volatile
  7966                           
  7967                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7968  0F19  301D               	movlw	low _TMR0_DefaultInterruptHandler
  7969  0F1A  0140               	movlb	0	; select bank0
  7970  0F1B  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7971  0F1C  300E               	movlw	high _TMR0_DefaultInterruptHandler
  7972  0F1D  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7973  0F1E  318E  2673         	fcall	_TMR0_SetInterruptHandler
  7974                           
  7975                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  7976  0F20  3080               	movlw	128
  7977  0F21  014B               	movlb	11	; select bank11
  7978  0F22  009E               	movwf	30	;volatile
  7979  0F23  0008               	return
  7980  0F24                     __end_of_TMR0_Initialize:	
  7981                           
  7982                           	psect	text5
  7983  0EBB                     __ptext5:	
  7984 ;; *************** function _PMD_Initialize *****************
  7985 ;; Defined at:
  7986 ;;		line 75 in file "mcc_generated_files/mcc.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;		None
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;		None
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  1    wreg      void 
  7993 ;; Registers used:
  7994 ;;		status,2
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8004 ;;Total ram usage:        0 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    4
  8007 ;; This function calls:
  8008 ;;		Nothing
  8009 ;; This function is called by:
  8010 ;;		_SYSTEM_Initialize
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           
  8015                           ;psect for function _PMD_Initialize
  8016  0EBB                     _PMD_Initialize:	
  8017                           
  8018                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  8019                           
  8020                           ;incstack = 0
  8021                           ; Regs used in _PMD_Initialize: [status,2]
  8022  0EBB  014F               	movlb	15	; select bank15
  8023  0EBC  0196               	clrf	22	;volatile
  8024                           
  8025                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  8026  0EBD  0197               	clrf	23	;volatile
  8027                           
  8028                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  8029  0EBE  0198               	clrf	24	;volatile
  8030                           
  8031                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  8032  0EBF  0199               	clrf	25	;volatile
  8033                           
  8034                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  8035  0EC0  019A               	clrf	26	;volatile
  8036                           
  8037                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  8038  0EC1  019B               	clrf	27	;volatile
  8039                           
  8040                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  8041  0EC2  019C               	clrf	28	;volatile
  8042                           
  8043                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  8044  0EC3  019D               	clrf	29	;volatile
  8045  0EC4  0008               	return
  8046  0EC5                     __end_of_PMD_Initialize:	
  8047                           
  8048                           	psect	text6
  8049  0694                     __ptext6:	
  8050 ;; *************** function _PIN_MANAGER_Initialize *****************
  8051 ;; Defined at:
  8052 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, status,2
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    4
  8073 ;; This function calls:
  8074 ;;		Nothing
  8075 ;; This function is called by:
  8076 ;;		_SYSTEM_Initialize
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           
  8081                           ;psect for function _PIN_MANAGER_Initialize
  8082  0694                     _PIN_MANAGER_Initialize:	
  8083                           
  8084                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8085                           
  8086                           ;incstack = 0
  8087                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8088  0694  0140               	movlb	0	; select bank0
  8089  0695  0198               	clrf	24	;volatile
  8090                           
  8091                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8092  0696  0199               	clrf	25	;volatile
  8093                           
  8094                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8095  0697  019A               	clrf	26	;volatile
  8096                           
  8097                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8098  0698  303F               	movlw	63
  8099  0699  0092               	movwf	18	;volatile
  8100                           
  8101                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  8102  069A  30F0               	movlw	240
  8103  069B  0093               	movwf	19	;volatile
  8104                           
  8105                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8106  069C  30FF               	movlw	255
  8107  069D  0094               	movwf	20	;volatile
  8108                           
  8109                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8110  069E  30F8               	movlw	248
  8111  069F  017E               	movlb	62	; select bank62
  8112  06A0  00CE               	movwf	78	;volatile
  8113                           
  8114                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8115  06A1  30E0               	movlw	224
  8116  06A2  00C3               	movwf	67	;volatile
  8117                           
  8118                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8119  06A3  3003               	movlw	3
  8120  06A4  00B8               	movwf	56	;volatile
  8121                           
  8122                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8123  06A5  01C4               	clrf	68	;volatile
  8124                           
  8125                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8126  06A6  3004               	movlw	4
  8127  06A7  00B9               	movwf	57	;volatile
  8128                           
  8129                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8130  06A8  3007               	movlw	7
  8131  06A9  00CF               	movwf	79	;volatile
  8132                           
  8133                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8134  06AA  01BA               	clrf	58	;volatile
  8135                           
  8136                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8137  06AB  01C5               	clrf	69	;volatile
  8138                           
  8139                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8140  06AC  01D0               	clrf	80	;volatile
  8141                           
  8142                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8143  06AD  3037               	movlw	55
  8144  06AE  00BB               	movwf	59	;volatile
  8145                           
  8146                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8147  06AF  30F0               	movlw	240
  8148  06B0  00C6               	movwf	70	;volatile
  8149                           
  8150                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8151  06B1  30FF               	movlw	255
  8152  06B2  00D1               	movwf	81	;volatile
  8153                           
  8154                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8155  06B3  3005               	movlw	5
  8156  06B4  017D               	movlb	61	; select bank61
  8157  06B5  00C5               	movwf	69	;volatile
  8158                           
  8159                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8160  06B6  3014               	movlw	20
  8161  06B7  017E               	movlb	62	; select bank62
  8162  06B8  0094               	movwf	20	;volatile
  8163                           
  8164                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  8165  06B9  3013               	movlw	19
  8166  06BA  0095               	movwf	21	;volatile
  8167                           
  8168                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  8169  06BB  3004               	movlw	4
  8170  06BC  017D               	movlb	61	; select bank61
  8171  06BD  00C6               	movwf	70	;volatile
  8172                           
  8173                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  8174  06BE  300C               	movlw	12
  8175  06BF  00CB               	movwf	75	;volatile
  8176  06C0  0008               	return
  8177  06C1                     __end_of_PIN_MANAGER_Initialize:	
  8178                           
  8179                           	psect	text7
  8180  0EB2                     __ptext7:	
  8181 ;; *************** function _OSCILLATOR_Initialize *****************
  8182 ;; Defined at:
  8183 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;		None
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;		None
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  1    wreg      void 
  8190 ;; Registers used:
  8191 ;;		wreg, status,2
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8201 ;;Total ram usage:        0 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; Hardware stack levels required when called:    4
  8204 ;; This function calls:
  8205 ;;		Nothing
  8206 ;; This function is called by:
  8207 ;;		_SYSTEM_Initialize
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           
  8212                           ;psect for function _OSCILLATOR_Initialize
  8213  0EB2                     _OSCILLATOR_Initialize:	
  8214                           
  8215                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8216                           
  8217                           ;incstack = 0
  8218                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8219  0EB2  3060               	movlw	96
  8220  0EB3  0151               	movlb	17	; select bank17
  8221  0EB4  008D               	movwf	13	;volatile
  8222                           
  8223                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8224  0EB5  018F               	clrf	15	;volatile
  8225                           
  8226                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8227  0EB6  0191               	clrf	17	;volatile
  8228                           
  8229                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8230  0EB7  3006               	movlw	6
  8231  0EB8  0093               	movwf	19	;volatile
  8232                           
  8233                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  8234  0EB9  0192               	clrf	18	;volatile
  8235  0EBA  0008               	return
  8236  0EBB                     __end_of_OSCILLATOR_Initialize:	
  8237                           
  8238                           	psect	text8
  8239  0F91                     __ptext8:	
  8240 ;; *************** function _I2C1_Initialize *****************
  8241 ;; Defined at:
  8242 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;		None
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1    wreg      void 
  8249 ;; Registers used:
  8250 ;;		wreg, status,2
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8258 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8259 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8260 ;;Total ram usage:        1 bytes
  8261 ;; Hardware stack levels used:    1
  8262 ;; Hardware stack levels required when called:    4
  8263 ;; This function calls:
  8264 ;;		Nothing
  8265 ;; This function is called by:
  8266 ;;		_SYSTEM_Initialize
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           
  8271                           ;psect for function _I2C1_Initialize
  8272  0F91                     _I2C1_Initialize:	
  8273                           
  8274                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8275                           
  8276                           ;incstack = 0
  8277                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8278  0F91  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8279  0F92  0140               	movlb	0	; select bank0
  8280  0F93  00A0               	movwf	??_I2C1_Initialize
  8281  0F94  0820               	movf	??_I2C1_Initialize,w
  8282  0F95  00C7               	movwf	low ((_i2c1_object| 0+1))
  8283                           
  8284                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8285  0F96  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8286  0F97  00A0               	movwf	??_I2C1_Initialize
  8287  0F98  0820               	movf	??_I2C1_Initialize,w
  8288  0F99  00C6               	movwf	_i2c1_object
  8289                           
  8290                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8291  0F9A  14C8               	bsf	_i2c1_object+2,1
  8292                           
  8293                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8294  0F9B  1048               	bcf	_i2c1_object+2,0
  8295                           
  8296                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8297  0F9C  01CA               	clrf	_i2c1_object+4
  8298                           
  8299                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8300  0F9D  0143               	movlb	3	; select bank3
  8301  0F9E  018F               	clrf	15	;volatile
  8302                           
  8303                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8304  0F9F  3028               	movlw	40
  8305  0FA0  0090               	movwf	16	;volatile
  8306                           
  8307                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8308  0FA1  0192               	clrf	18	;volatile
  8309                           
  8310                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  8311  0FA2  3050               	movlw	80
  8312  0FA3  008D               	movwf	13	;volatile
  8313                           
  8314                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8315  0FA4  014E               	movlb	14	; select bank14
  8316  0FA5  100F               	bcf	15,0	;volatile
  8317                           
  8318                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8319  0FA6  108F               	bcf	15,1	;volatile
  8320                           
  8321                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8322  0FA7  1419               	bsf	25,0	;volatile
  8323                           
  8324                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8325  0FA8  1499               	bsf	25,1	;volatile
  8326  0FA9  0008               	return
  8327  0FAA                     __end_of_I2C1_Initialize:	
  8328                           
  8329                           	psect	text9
  8330  0534                     __ptext9:	
  8331 ;; *************** function _EUSART1_Initialize *****************
  8332 ;; Defined at:
  8333 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;		None
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;		None
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0, pclath, cstack
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8349 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8350 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8351 ;;Total ram usage:        1 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; Hardware stack levels required when called:    5
  8354 ;; This function calls:
  8355 ;;		_EUSART1_SetErrorHandler
  8356 ;;		_EUSART1_SetFramingErrorHandler
  8357 ;;		_EUSART1_SetOverrunErrorHandler
  8358 ;;		_EUSART1_SetRxInterruptHandler
  8359 ;;		_EUSART1_SetTxInterruptHandler
  8360 ;; This function is called by:
  8361 ;;		_SYSTEM_Initialize
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           
  8366                           ;psect for function _EUSART1_Initialize
  8367  0534                     _EUSART1_Initialize:	
  8368                           
  8369                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8370                           
  8371                           ;incstack = 0
  8372                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8373  0534  014E               	movlb	14	; select bank14
  8374  0535  1299               	bcf	25,5	;volatile
  8375                           
  8376                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8377  0536  3062               	movlw	low _EUSART1_Receive_ISR
  8378  0537  0140               	movlb	0	; select bank0
  8379  0538  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8380  0539  3006               	movlw	high _EUSART1_Receive_ISR
  8381  053A  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8382  053B  318E  26A0  3185   	fcall	_EUSART1_SetRxInterruptHandler
  8383                           
  8384                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8385  053E  014E               	movlb	14	; select bank14
  8386  053F  1219               	bcf	25,4	;volatile
  8387                           
  8388                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8389  0540  30C6               	movlw	low _EUSART1_Transmit_ISR
  8390  0541  0140               	movlb	0	; select bank0
  8391  0542  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8392  0543  300F               	movlw	high _EUSART1_Transmit_ISR
  8393  0544  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8394  0545  318E  26A9  3185   	fcall	_EUSART1_SetTxInterruptHandler
  8395                           
  8396                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8397  0548  3008               	movlw	8
  8398  0549  0142               	movlb	2	; select bank2
  8399  054A  009F               	movwf	31	;volatile
  8400                           
  8401                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8402  054B  3090               	movlw	144
  8403  054C  009D               	movwf	29	;volatile
  8404                           
  8405                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8406  054D  3004               	movlw	4
  8407  054E  009E               	movwf	30	;volatile
  8408                           
  8409                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8410  054F  301F               	movlw	31
  8411  0550  009B               	movwf	27	;volatile
  8412                           
  8413                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8414  0551  019C               	clrf	28	;volatile
  8415                           
  8416                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8417  0552  301C               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8418  0553  0140               	movlb	0	; select bank0
  8419  0554  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8420  0555  300E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8421  0556  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8422  0557  318E  268E  3185   	fcall	_EUSART1_SetFramingErrorHandler
  8423                           
  8424                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8425  055A  302B               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8426  055B  0140               	movlb	0	; select bank0
  8427  055C  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8428  055D  300E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8429  055E  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8430  055F  318E  2697  3185   	fcall	_EUSART1_SetOverrunErrorHandler
  8431                           
  8432                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8433  0562  301E               	movlw	low _EUSART1_DefaultErrorHandler
  8434  0563  0140               	movlb	0	; select bank0
  8435  0564  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8436  0565  300E               	movlw	high _EUSART1_DefaultErrorHandler
  8437  0566  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8438  0567  318E  2685         	fcall	_EUSART1_SetErrorHandler
  8439                           
  8440                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8441  0569  0140               	movlb	0	; select bank0
  8442  056A  01E6               	clrf	_eusart1RxLastError	;volatile
  8443                           
  8444                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8445  056B  01F3               	clrf	_eusart1TxHead	;volatile
  8446                           
  8447                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8448  056C  01F2               	clrf	_eusart1TxTail	;volatile
  8449                           
  8450                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8451  056D  3008               	movlw	8
  8452  056E  00A2               	movwf	??_EUSART1_Initialize
  8453  056F  0822               	movf	??_EUSART1_Initialize,w
  8454  0570  00EF               	movwf	_eusart1TxBufferRemaining	;volatile
  8455                           
  8456                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8457  0571  01F1               	clrf	_eusart1RxHead	;volatile
  8458                           
  8459                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8460  0572  01F0               	clrf	_eusart1RxTail	;volatile
  8461                           
  8462                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8463  0573  01E7               	clrf	_eusart1RxCount	;volatile
  8464                           
  8465                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8466  0574  014E               	movlb	14	; select bank14
  8467  0575  1699               	bsf	25,5	;volatile
  8468  0576  0008               	return
  8469  0577                     __end_of_EUSART1_Initialize:	
  8470                           
  8471                           	psect	text10
  8472  0EA9                     __ptext10:	
  8473 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8474 ;; Defined at:
  8475 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8478 ;;		 -> EUSART1_Transmit_ISR(1), 
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;		None
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  1    wreg      void 
  8483 ;; Registers used:
  8484 ;;		wreg
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8494 ;;Total ram usage:        2 bytes
  8495 ;; Hardware stack levels used:    1
  8496 ;; Hardware stack levels required when called:    4
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_EUSART1_Initialize
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           
  8505                           ;psect for function _EUSART1_SetTxInterruptHandler
  8506  0EA9                     _EUSART1_SetTxInterruptHandler:	
  8507                           
  8508                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8509                           
  8510                           ;incstack = 0
  8511                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  8512  0EA9  0140               	movlb	0	; select bank0
  8513  0EAA  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  8514  0EAB  0141               	movlb	1	; select bank1
  8515  0EAC  00D7               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128)
  8516  0EAD  0140               	movlb	0	; select bank0
  8517  0EAE  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  8518  0EAF  0141               	movlb	1	; select bank1
  8519  0EB0  00D6               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+128)
  8520  0EB1  0008               	return
  8521  0EB2                     __end_of_EUSART1_SetTxInterruptHandler:	
  8522                           
  8523                           	psect	text11
  8524  0EA0                     __ptext11:	
  8525 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  8526 ;; Defined at:
  8527 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8530 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;		None
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  1    wreg      void 
  8535 ;; Registers used:
  8536 ;;		wreg
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8546 ;;Total ram usage:        2 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:    4
  8549 ;; This function calls:
  8550 ;;		Nothing
  8551 ;; This function is called by:
  8552 ;;		_EUSART1_Initialize
  8553 ;;		_main
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           
  8558                           ;psect for function _EUSART1_SetRxInterruptHandler
  8559  0EA0                     _EUSART1_SetRxInterruptHandler:	
  8560                           
  8561                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8562                           
  8563                           ;incstack = 0
  8564                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  8565  0EA0  0140               	movlb	0	; select bank0
  8566  0EA1  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  8567  0EA2  0141               	movlb	1	; select bank1
  8568  0EA3  00D5               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
  8569  0EA4  0140               	movlb	0	; select bank0
  8570  0EA5  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  8571  0EA6  0141               	movlb	1	; select bank1
  8572  0EA7  00D4               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
  8573  0EA8  0008               	return
  8574  0EA9                     __end_of_EUSART1_SetRxInterruptHandler:	
  8575                           
  8576                           	psect	text12
  8577  0E97                     __ptext12:	
  8578 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8579 ;; Defined at:
  8580 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8583 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;		None
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  1    wreg      void 
  8588 ;; Registers used:
  8589 ;;		wreg
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8598 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8599 ;;Total ram usage:        2 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    4
  8602 ;; This function calls:
  8603 ;;		Nothing
  8604 ;; This function is called by:
  8605 ;;		_EUSART1_Initialize
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           
  8610                           ;psect for function _EUSART1_SetOverrunErrorHandler
  8611  0E97                     _EUSART1_SetOverrunErrorHandler:	
  8612                           
  8613                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  8614                           
  8615                           ;incstack = 0
  8616                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  8617  0E97  0140               	movlb	0	; select bank0
  8618  0E98  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  8619  0E99  0141               	movlb	1	; select bank1
  8620  0E9A  00D1               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  8621  0E9B  0140               	movlb	0	; select bank0
  8622  0E9C  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  8623  0E9D  0141               	movlb	1	; select bank1
  8624  0E9E  00D0               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  8625  0E9F  0008               	return
  8626  0EA0                     __end_of_EUSART1_SetOverrunErrorHandler:	
  8627                           
  8628                           	psect	text13
  8629  0E8E                     __ptext13:	
  8630 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8631 ;; Defined at:
  8632 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8635 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;		None
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      void 
  8640 ;; Registers used:
  8641 ;;		wreg
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8650 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8651 ;;Total ram usage:        2 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    4
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_EUSART1_Initialize
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           
  8662                           ;psect for function _EUSART1_SetFramingErrorHandler
  8663  0E8E                     _EUSART1_SetFramingErrorHandler:	
  8664                           
  8665                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  8666                           
  8667                           ;incstack = 0
  8668                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  8669  0E8E  0140               	movlb	0	; select bank0
  8670  0E8F  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  8671  0E90  0141               	movlb	1	; select bank1
  8672  0E91  00D3               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  8673  0E92  0140               	movlb	0	; select bank0
  8674  0E93  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  8675  0E94  0141               	movlb	1	; select bank1
  8676  0E95  00D2               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  8677  0E96  0008               	return
  8678  0E97                     __end_of_EUSART1_SetFramingErrorHandler:	
  8679                           
  8680                           	psect	text14
  8681  0E85                     __ptext14:	
  8682 ;; *************** function _EUSART1_SetErrorHandler *****************
  8683 ;; Defined at:
  8684 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8687 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8703 ;;Total ram usage:        2 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    4
  8706 ;; This function calls:
  8707 ;;		Nothing
  8708 ;; This function is called by:
  8709 ;;		_EUSART1_Initialize
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           
  8714                           ;psect for function _EUSART1_SetErrorHandler
  8715  0E85                     _EUSART1_SetErrorHandler:	
  8716                           
  8717                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  8718                           
  8719                           ;incstack = 0
  8720                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  8721  0E85  0140               	movlb	0	; select bank0
  8722  0E86  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  8723  0E87  0141               	movlb	1	; select bank1
  8724  0E88  00CF               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
  8725  0E89  0140               	movlb	0	; select bank0
  8726  0E8A  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  8727  0E8B  0141               	movlb	1	; select bank1
  8728  0E8C  00CE               	movwf	_EUSART1_ErrorHandler^(0+128)
  8729  0E8D  0008               	return
  8730  0E8E                     __end_of_EUSART1_SetErrorHandler:	
  8731                           
  8732                           	psect	text15
  8733  073D                     __ptext15:	
  8734 ;; *************** function _ADCC_Initialize *****************
  8735 ;; Defined at:
  8736 ;;		line 64 in file "mcc_generated_files/adcc.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;		None
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      void 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0, pclath, cstack
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8754 ;;Total ram usage:        0 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:    5
  8757 ;; This function calls:
  8758 ;;		_ADCC_SetADTIInterruptHandler
  8759 ;; This function is called by:
  8760 ;;		_SYSTEM_Initialize
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           
  8765                           ;psect for function _ADCC_Initialize
  8766  073D                     _ADCC_Initialize:	
  8767                           
  8768                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  8769                           
  8770                           ;incstack = 0
  8771                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8772  073D  0141               	movlb	1	; select bank1
  8773  073E  018C               	clrf	12	;volatile
  8774                           
  8775                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  8776  073F  018D               	clrf	13	;volatile
  8777                           
  8778                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  8779  0740  018E               	clrf	14	;volatile
  8780                           
  8781                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  8782  0741  018F               	clrf	15	;volatile
  8783                           
  8784                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  8785  0742  0192               	clrf	18	;volatile
  8786                           
  8787                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  8788  0743  0193               	clrf	19	;volatile
  8789                           
  8790                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  8791  0744  0198               	clrf	24	;volatile
  8792                           
  8793                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  8794  0745  019A               	clrf	26	;volatile
  8795                           
  8796                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  8797  0746  019F               	clrf	31	;volatile
  8798                           
  8799                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  8800  0747  0142               	movlb	2	; select bank2
  8801  0748  018C               	clrf	12	;volatile
  8802                           
  8803                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  8804  0749  018D               	clrf	13	;volatile
  8805                           
  8806                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  8807  074A  018E               	clrf	14	;volatile
  8808                           
  8809                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  8810  074B  018F               	clrf	15	;volatile
  8811                           
  8812                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  8813  074C  0190               	clrf	16	;volatile
  8814                           
  8815                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  8816  074D  0192               	clrf	18	;volatile
  8817                           
  8818                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  8819  074E  3054               	movlw	84
  8820  074F  0093               	movwf	19	;volatile
  8821                           
  8822                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  8823  0750  3056               	movlw	86
  8824  0751  0094               	movwf	20	;volatile
  8825                           
  8826                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  8827  0752  0195               	clrf	21	;volatile
  8828                           
  8829                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  8830  0753  0196               	clrf	22	;volatile
  8831                           
  8832                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  8833  0754  0197               	clrf	23	;volatile
  8834                           
  8835                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  8836  0755  0198               	clrf	24	;volatile
  8837                           
  8838                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  8839  0756  30D4               	movlw	212
  8840  0757  0091               	movwf	17	;volatile
  8841                           
  8842                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  8843  0758  014E               	movlb	14	; select bank14
  8844  0759  108D               	bcf	13,1	;volatile
  8845                           
  8846                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  8847  075A  1497               	bsf	23,1	;volatile
  8848                           
  8849                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  8850  075B  301B               	movlw	low _ADCC_DefaultInterruptHandler
  8851  075C  0140               	movlb	0	; select bank0
  8852  075D  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  8853  075E  300E               	movlw	high _ADCC_DefaultInterruptHandler
  8854  075F  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  8855  0760  318E  2658         	fcall	_ADCC_SetADTIInterruptHandler
  8856  0762  0008               	return
  8857  0763                     __end_of_ADCC_Initialize:	
  8858                           
  8859                           	psect	text16
  8860  0493                     __ptext16:	
  8861 ;; *************** function _LED_task *****************
  8862 ;; Defined at:
  8863 ;;		line 66 in file "led.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;		None
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;  time            2   33[BANK0 ] unsigned short 
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8879 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8880 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8881 ;;Total ram usage:       13 bytes
  8882 ;; Hardware stack levels used:    1
  8883 ;; Hardware stack levels required when called:    5
  8884 ;; This function calls:
  8885 ;;		_BEAT_detected
  8886 ;;		_CLOCK_getTime
  8887 ;;		_LED_setColor
  8888 ;; This function is called by:
  8889 ;;		_main
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           
  8894                           ;psect for function _LED_task
  8895  0493                     _LED_task:	
  8896                           
  8897                           ;led.c: 67:     time_t time = CLOCK_getTime();
  8898                           
  8899                           ;incstack = 0
  8900                           ; Regs used in _LED_task: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8901  0493  318E  2642  3184   	fcall	_CLOCK_getTime
  8902  0496  0140               	movlb	0	; select bank0
  8903  0497  0821               	movf	?_CLOCK_getTime+1,w
  8904  0498  00C2               	movwf	LED_task@time+1
  8905  0499  0820               	movf	?_CLOCK_getTime,w
  8906  049A  00C1               	movwf	LED_task@time
  8907                           
  8908                           ;led.c: 69:     if (time - lastTime < 100)
  8909  049B  0141               	movlb	1	; select bank1
  8910  049C  0838               	movf	led@lastTime^(0+128),w
  8911  049D  0140               	movlb	0	; select bank0
  8912  049E  0241               	subwf	LED_task@time,w
  8913  049F  00B6               	movwf	??_LED_task
  8914  04A0  0141               	movlb	1	; select bank1
  8915  04A1  0839               	movf	(led@lastTime+1)^(0+128),w
  8916  04A2  0140               	movlb	0	; select bank0
  8917  04A3  3B42               	subwfb	LED_task@time+1,w
  8918  04A4  00B7               	movwf	??_LED_task+1
  8919  04A5  3000               	movlw	0
  8920  04A6  0237               	subwf	??_LED_task+1,w
  8921  04A7  3064               	movlw	100
  8922  04A8  1903               	skipnz
  8923  04A9  0236               	subwf	??_LED_task,w
  8924  04AA  1C03               	btfss	3,0
  8925  04AB  0008               	return
  8926                           
  8927                           ;led.c: 72:     lastTime = time;
  8928  04AC  0842               	movf	LED_task@time+1,w
  8929  04AD  0141               	movlb	1	; select bank1
  8930  04AE  00B9               	movwf	(led@lastTime+1)^(0+128)
  8931  04AF  0140               	movlb	0	; select bank0
  8932  04B0  0841               	movf	LED_task@time,w
  8933  04B1  0141               	movlb	1	; select bank1
  8934  04B2  00B8               	movwf	led@lastTime^(0+128)
  8935                           
  8936                           ;led.c: 74:     LED_setColor(dmxData[address+1], dmxData[address+2], dmxData[address+3],
      +                           dmxData[address+4]);
  8937  04B3  30F1               	movlw	241
  8938  04B4  0140               	movlb	0	; select bank0
  8939  04B5  00B6               	movwf	??_LED_task
  8940  04B6  3025               	movlw	37
  8941  04B7  00B7               	movwf	??_LED_task+1
  8942  04B8  086D               	movf	_address,w
  8943  04B9  0736               	addwf	??_LED_task,w
  8944  04BA  0086               	movwf	6
  8945  04BB  086E               	movf	_address+1,w
  8946  04BC  3D37               	addwfc	??_LED_task+1,w
  8947  04BD  0087               	movwf	7
  8948  04BE  0801               	movf	1,w
  8949  04BF  00B8               	movwf	??_LED_task+2
  8950  04C0  0838               	movf	??_LED_task+2,w
  8951  04C1  00A0               	movwf	LED_setColor@green
  8952  04C2  30F2               	movlw	242
  8953  04C3  00B9               	movwf	??_LED_task+3
  8954  04C4  3025               	movlw	37
  8955  04C5  00BA               	movwf	??_LED_task+4
  8956  04C6  086D               	movf	_address,w
  8957  04C7  0739               	addwf	??_LED_task+3,w
  8958  04C8  0086               	movwf	6
  8959  04C9  086E               	movf	_address+1,w
  8960  04CA  3D3A               	addwfc	??_LED_task+4,w
  8961  04CB  0087               	movwf	7
  8962  04CC  0801               	movf	1,w
  8963  04CD  00BB               	movwf	??_LED_task+5
  8964  04CE  083B               	movf	??_LED_task+5,w
  8965  04CF  00A1               	movwf	LED_setColor@white
  8966  04D0  30F3               	movlw	243
  8967  04D1  00BC               	movwf	??_LED_task+6
  8968  04D2  3025               	movlw	37
  8969  04D3  00BD               	movwf	??_LED_task+7
  8970  04D4  086D               	movf	_address,w
  8971  04D5  073C               	addwf	??_LED_task+6,w
  8972  04D6  0086               	movwf	6
  8973  04D7  086E               	movf	_address+1,w
  8974  04D8  3D3D               	addwfc	??_LED_task+7,w
  8975  04D9  0087               	movwf	7
  8976  04DA  0801               	movf	1,w
  8977  04DB  00BE               	movwf	??_LED_task+8
  8978  04DC  083E               	movf	??_LED_task+8,w
  8979  04DD  00A2               	movwf	LED_setColor@blue
  8980  04DE  30F0               	movlw	240
  8981  04DF  00BF               	movwf	??_LED_task+9
  8982  04E0  3025               	movlw	37
  8983  04E1  00C0               	movwf	??_LED_task+10
  8984  04E2  086D               	movf	_address,w
  8985  04E3  073F               	addwf	??_LED_task+9,w
  8986  04E4  0086               	movwf	6
  8987  04E5  086E               	movf	_address+1,w
  8988  04E6  3D40               	addwfc	??_LED_task+10,w
  8989  04E7  0087               	movwf	7
  8990  04E8  0801               	movf	1,w
  8991  04E9  3185  25B6  3184   	fcall	_LED_setColor
  8992                           
  8993                           ;led.c: 75:     if(BEAT_detected()) {
  8994  04EC  318E  267C         	fcall	_BEAT_detected
  8995  04EE  0008               	return
  8996  04EF                     __end_of_LED_task:	
  8997                           
  8998                           	psect	text17
  8999  05B6                     __ptext17:	
  9000 ;; *************** function _LED_setColor *****************
  9001 ;; Defined at:
  9002 ;;		line 37 in file "led.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  red             1    wreg     unsigned char 
  9005 ;;  green           1    0[BANK0 ] unsigned char 
  9006 ;;  white           1    1[BANK0 ] unsigned char 
  9007 ;;  blue            1    2[BANK0 ] unsigned char 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;  red             1   21[BANK0 ] unsigned char 
  9010 ;;  lo4             2   19[BANK0 ] int 
  9011 ;;  hi4             2    0        int 
  9012 ;;  lo3             2   15[BANK0 ] int 
  9013 ;;  hi3             2    0        int 
  9014 ;;  lo2             2   11[BANK0 ] int 
  9015 ;;  hi2             2    0        int 
  9016 ;;  lo1             2    7[BANK0 ] int 
  9017 ;;  hi1             2    0        int 
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      void 
  9020 ;; Registers used:
  9021 ;;		wreg, status,2
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9027 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9028 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9030 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9031 ;;Total ram usage:       22 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:    4
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_LED_task
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           
  9042                           ;psect for function _LED_setColor
  9043  05B6                     _LED_setColor:	
  9044                           
  9045                           ;incstack = 0
  9046                           ; Regs used in _LED_setColor: [wreg+status,2]
  9047                           ;LED_setColor@red stored from wreg
  9048  05B6  0140               	movlb	0	; select bank0
  9049  05B7  00B5               	movwf	LED_setColor@red
  9050                           
  9051                           ;led.c: 38:     red/=2;
  9052  05B8  1003               	clrc
  9053  05B9  0CB5               	rrf	LED_setColor@red,f
  9054                           
  9055                           ;led.c: 39:     green/=2;
  9056  05BA  1003               	clrc
  9057  05BB  0CA0               	rrf	LED_setColor@green,f
  9058                           
  9059                           ;led.c: 40:     blue/=2;
  9060  05BC  1003               	clrc
  9061  05BD  0CA2               	rrf	LED_setColor@blue,f
  9062                           
  9063                           ;led.c: 41:     white/=2;
  9064  05BE  1003               	clrc
  9065  05BF  0CA1               	rrf	LED_setColor@white,f
  9066                           
  9067                           ;led.c: 43:     int lo1 = red & 0x00FF;
  9068  05C0  0835               	movf	LED_setColor@red,w
  9069  05C1  00A3               	movwf	??_LED_setColor
  9070  05C2  01A4               	clrf	??_LED_setColor+1
  9071  05C3  0823               	movf	??_LED_setColor,w
  9072  05C4  00A7               	movwf	LED_setColor@lo1
  9073  05C5  0824               	movf	??_LED_setColor+1,w
  9074  05C6  00A8               	movwf	LED_setColor@lo1+1
  9075                           
  9076                           ;led.c: 45:     int lo2 = green & 0x00FF;
  9077  05C7  0820               	movf	LED_setColor@green,w
  9078  05C8  00A3               	movwf	??_LED_setColor
  9079  05C9  01A4               	clrf	??_LED_setColor+1
  9080  05CA  0823               	movf	??_LED_setColor,w
  9081  05CB  00AB               	movwf	LED_setColor@lo2
  9082  05CC  0824               	movf	??_LED_setColor+1,w
  9083  05CD  00AC               	movwf	LED_setColor@lo2+1
  9084                           
  9085                           ;led.c: 47:     int lo3 = blue & 0x00FF;
  9086  05CE  0822               	movf	LED_setColor@blue,w
  9087  05CF  00A3               	movwf	??_LED_setColor
  9088  05D0  01A4               	clrf	??_LED_setColor+1
  9089  05D1  0823               	movf	??_LED_setColor,w
  9090  05D2  00AF               	movwf	LED_setColor@lo3
  9091  05D3  0824               	movf	??_LED_setColor+1,w
  9092  05D4  00B0               	movwf	LED_setColor@lo3+1
  9093                           
  9094                           ;led.c: 49:     int lo4 = white & 0x00FF;
  9095  05D5  0821               	movf	LED_setColor@white,w
  9096  05D6  00A3               	movwf	??_LED_setColor
  9097  05D7  01A4               	clrf	??_LED_setColor+1
  9098  05D8  0823               	movf	??_LED_setColor,w
  9099  05D9  00B3               	movwf	LED_setColor@lo4
  9100  05DA  0824               	movf	??_LED_setColor+1,w
  9101  05DB  00B4               	movwf	LED_setColor@lo4+1
  9102                           
  9103                           ;led.c: 51:     CCPR1H = hi1;
  9104  05DC  0146               	movlb	6	; select bank6
  9105  05DD  018D               	clrf	13	;volatile
  9106                           
  9107                           ;led.c: 52:     CCPR1L = lo1;
  9108  05DE  0140               	movlb	0	; select bank0
  9109  05DF  0827               	movf	LED_setColor@lo1,w
  9110  05E0  0146               	movlb	6	; select bank6
  9111  05E1  008C               	movwf	12	;volatile
  9112                           
  9113                           ;led.c: 54:     CCPR2H = hi2;
  9114  05E2  0191               	clrf	17	;volatile
  9115                           
  9116                           ;led.c: 55:     CCPR2L = lo2;
  9117  05E3  0140               	movlb	0	; select bank0
  9118  05E4  082B               	movf	LED_setColor@lo2,w
  9119  05E5  0146               	movlb	6	; select bank6
  9120  05E6  0090               	movwf	16	;volatile
  9121                           
  9122                           ;led.c: 57:     CCPR3H = hi3;
  9123  05E7  0195               	clrf	21	;volatile
  9124                           
  9125                           ;led.c: 58:     CCPR3L = lo3;
  9126  05E8  0140               	movlb	0	; select bank0
  9127  05E9  082F               	movf	LED_setColor@lo3,w
  9128  05EA  0146               	movlb	6	; select bank6
  9129  05EB  0094               	movwf	20	;volatile
  9130                           
  9131                           ;led.c: 60:     CCPR4H = hi4;
  9132  05EC  0199               	clrf	25	;volatile
  9133                           
  9134                           ;led.c: 61:     CCPR4L = lo4;
  9135  05ED  0140               	movlb	0	; select bank0
  9136  05EE  0833               	movf	LED_setColor@lo4,w
  9137  05EF  0146               	movlb	6	; select bank6
  9138  05F0  0098               	movwf	24	;volatile
  9139  05F1  0008               	return
  9140  05F2                     __end_of_LED_setColor:	
  9141                           
  9142                           	psect	text18
  9143  0E7C                     __ptext18:	
  9144 ;; *************** function _BEAT_detected *****************
  9145 ;; Defined at:
  9146 ;;		line 41 in file "beat.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;		None
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      _Bool 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2, status,0
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9164 ;;Total ram usage:        0 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    4
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_LED_task
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           
  9175                           ;psect for function _BEAT_detected
  9176  0E7C                     _BEAT_detected:	
  9177                           
  9178                           ;beat.c: 42:     if (detected) {
  9179                           
  9180                           ;incstack = 0
  9181                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
  9182  0E7C  0140               	movlb	0	; select bank0
  9183  0E7D  0859               	movf	_detected,w
  9184  0E7E  1903               	btfsc	3,2
  9185  0E7F  2E83               	goto	l3833
  9186                           
  9187                           ;beat.c: 43:         detected = 0;
  9188  0E80  01D9               	clrf	_detected
  9189                           
  9190                           ;beat.c: 44:         return 1;
  9191  0E81  3001               	movlw	1
  9192  0E82  0008               	return
  9193  0E83                     l3833:	
  9194                           
  9195                           ;beat.c: 46:     return 0;
  9196  0E83  3000               	movlw	0
  9197  0E84  0008               	return
  9198  0E85                     __end_of_BEAT_detected:	
  9199                           
  9200                           	psect	text19
  9201  03D1                     __ptext19:	
  9202 ;; *************** function _CONTROLLER_task *****************
  9203 ;; Defined at:
  9204 ;;		line 48 in file "controller.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;		None
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;  time            2   36[BANK0 ] unsigned short 
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9219 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9221 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9222 ;;Total ram usage:        4 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; Hardware stack levels required when called:   11
  9225 ;; This function calls:
  9226 ;;		_BUTTONS_isClicked
  9227 ;;		_CLOCK_getTime
  9228 ;;		_TM1650_enable
  9229 ;;		_address_dec
  9230 ;;		_address_inc
  9231 ;; This function is called by:
  9232 ;;		_main
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           
  9237                           ;psect for function _CONTROLLER_task
  9238  03D1                     _CONTROLLER_task:	
  9239                           
  9240                           ;controller.c: 49:     time_t time = CLOCK_getTime();
  9241                           
  9242                           ;incstack = 0
  9243                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9244  03D1  318E  2642  3183   	fcall	_CLOCK_getTime
  9245  03D4  0140               	movlb	0	; select bank0
  9246  03D5  0821               	movf	?_CLOCK_getTime+1,w
  9247  03D6  00C5               	movwf	CONTROLLER_task@time+1
  9248  03D7  0820               	movf	?_CLOCK_getTime,w
  9249  03D8  00C4               	movwf	CONTROLLER_task@time
  9250                           
  9251                           ;controller.c: 51:     if (time - lastTime < 35)
  9252  03D9  0851               	movf	controller@lastTime,w
  9253  03DA  0244               	subwf	CONTROLLER_task@time,w
  9254  03DB  00C2               	movwf	??_CONTROLLER_task
  9255  03DC  0852               	movf	controller@lastTime+1,w
  9256  03DD  3B45               	subwfb	CONTROLLER_task@time+1,w
  9257  03DE  00C3               	movwf	??_CONTROLLER_task+1
  9258  03DF  3000               	movlw	0
  9259  03E0  0243               	subwf	??_CONTROLLER_task+1,w
  9260  03E1  3023               	movlw	35
  9261  03E2  1903               	skipnz
  9262  03E3  0242               	subwf	??_CONTROLLER_task,w
  9263  03E4  1C03               	btfss	3,0
  9264  03E5  0008               	return
  9265                           
  9266                           ;controller.c: 53:     lastTime = time;
  9267  03E6  0845               	movf	CONTROLLER_task@time+1,w
  9268  03E7  00D2               	movwf	controller@lastTime+1
  9269  03E8  0844               	movf	CONTROLLER_task@time,w
  9270  03E9  00D1               	movwf	controller@lastTime
  9271                           
  9272                           ;controller.c: 55:     if (BUTTONS_isClicked(up)) {
  9273  03EA  085D               	movf	_up,w
  9274  03EB  3187  2788  3183   	fcall	_BUTTONS_isClicked
  9275  03EE  0140               	movlb	0	; select bank0
  9276  03EF  0820               	movf	?_BUTTONS_isClicked,w
  9277  03F0  0421               	iorwf	?_BUTTONS_isClicked+1,w
  9278  03F1  1903               	btfsc	3,2
  9279  03F2  2BFF               	goto	l4051
  9280                           
  9281                           ;controller.c: 56:         address_inc();
  9282  03F3  318F  2763  3183   	fcall	_address_inc
  9283                           
  9284                           ;controller.c: 57:         lastActiveTime = time;
  9285  03F6  0140               	movlb	0	; select bank0
  9286  03F7  0845               	movf	CONTROLLER_task@time+1,w
  9287  03F8  00D0               	movwf	_lastActiveTime+1
  9288  03F9  0844               	movf	CONTROLLER_task@time,w
  9289  03FA  00CF               	movwf	_lastActiveTime
  9290                           
  9291                           ;controller.c: 58:         TM1650_enable(1);
  9292  03FB  3001               	movlw	1
  9293  03FC  318F  2724         	fcall	_TM1650_enable
  9294                           
  9295                           ;controller.c: 59:     } else if (BUTTONS_isClicked(down)) {
  9296  03FE  0008               	return
  9297  03FF                     l4051:	
  9298  03FF  085C               	movf	_down,w
  9299  0400  3187  2788  3183   	fcall	_BUTTONS_isClicked
  9300  0403  0140               	movlb	0	; select bank0
  9301  0404  0820               	movf	?_BUTTONS_isClicked,w
  9302  0405  0421               	iorwf	?_BUTTONS_isClicked+1,w
  9303  0406  1903               	btfsc	3,2
  9304  0407  2C14               	goto	l4059
  9305                           
  9306                           ;controller.c: 60:         address_dec();
  9307  0408  318F  2739  3183   	fcall	_address_dec
  9308                           
  9309                           ;controller.c: 61:         lastActiveTime = time;
  9310  040B  0140               	movlb	0	; select bank0
  9311  040C  0845               	movf	CONTROLLER_task@time+1,w
  9312  040D  00D0               	movwf	_lastActiveTime+1
  9313  040E  0844               	movf	CONTROLLER_task@time,w
  9314  040F  00CF               	movwf	_lastActiveTime
  9315                           
  9316                           ;controller.c: 62:         TM1650_enable(1);
  9317  0410  3001               	movlw	1
  9318  0411  318F  2724         	fcall	_TM1650_enable
  9319                           
  9320                           ;controller.c: 63:     } else {
  9321  0413  0008               	return
  9322  0414                     l4059:	
  9323                           
  9324                           ;controller.c: 64:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
  9325  0414  318E  2642  3183   	fcall	_CLOCK_getTime
  9326  0417  0140               	movlb	0	; select bank0
  9327  0418  084F               	movf	_lastActiveTime,w
  9328  0419  0220               	subwf	?_CLOCK_getTime,w
  9329  041A  00C2               	movwf	??_CONTROLLER_task
  9330  041B  0850               	movf	_lastActiveTime+1,w
  9331  041C  3B21               	subwfb	?_CLOCK_getTime+1,w
  9332  041D  00C3               	movwf	??_CONTROLLER_task+1
  9333  041E  3013               	movlw	19
  9334  041F  0243               	subwf	??_CONTROLLER_task+1,w
  9335  0420  3088               	movlw	136
  9336  0421  1903               	skipnz
  9337  0422  0242               	subwf	??_CONTROLLER_task,w
  9338  0423  1C03               	skipc
  9339  0424  0008               	return
  9340                           
  9341                           ;controller.c: 65:             TM1650_enable(0);
  9342  0425  3000               	movlw	0
  9343  0426  318F  2724  3183   	fcall	_TM1650_enable
  9344                           
  9345                           ;controller.c: 66:             lastActiveTime = CLOCK_getTime() - 5001;
  9346  0429  318E  2642         	fcall	_CLOCK_getTime
  9347  042B  0140               	movlb	0	; select bank0
  9348  042C  0820               	movf	?_CLOCK_getTime,w
  9349  042D  3E77               	addlw	119
  9350  042E  00CF               	movwf	_lastActiveTime
  9351  042F  30EC               	movlw	236
  9352  0430  3D21               	addwfc	?_CLOCK_getTime+1,w
  9353  0431  00D0               	movwf	_lastActiveTime+1
  9354  0432  0008               	return
  9355  0433                     __end_of_CONTROLLER_task:	
  9356                           
  9357                           	psect	text20
  9358  0F63                     __ptext20:	
  9359 ;; *************** function _address_inc *****************
  9360 ;; Defined at:
  9361 ;;		line 19 in file "controller.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;		None
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;		None
  9366 ;; Return value:  Size  Location     Type
  9367 ;;                  1    wreg      void 
  9368 ;; Registers used:
  9369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9370 ;; Tracked objects:
  9371 ;;		On entry : 0/0
  9372 ;;		On exit  : 0/0
  9373 ;;		Unchanged: 0/0
  9374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9379 ;;Total ram usage:        0 bytes
  9380 ;; Hardware stack levels used:    1
  9381 ;; Hardware stack levels required when called:   10
  9382 ;; This function calls:
  9383 ;;		_TM1650_fastPrintNum
  9384 ;; This function is called by:
  9385 ;;		_CONTROLLER_task
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           
  9390                           ;psect for function _address_inc
  9391  0F63                     _address_inc:	
  9392                           
  9393                           ;controller.c: 21:     if(address == 512) {
  9394                           
  9395                           ;incstack = 0
  9396                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9397  0F63  3002               	movlw	2
  9398  0F64  0140               	movlb	0	; select bank0
  9399  0F65  066E               	xorwf	_address+1,w
  9400  0F66  046D               	iorwf	_address,w
  9401  0F67  1D03               	btfss	3,2
  9402  0F68  2F6E               	goto	l3813
  9403                           
  9404                           ;controller.c: 22:         address = 1;
  9405  0F69  3001               	movlw	1
  9406  0F6A  00ED               	movwf	_address
  9407  0F6B  3000               	movlw	0
  9408  0F6C  00EE               	movwf	_address+1
  9409                           
  9410                           ;controller.c: 23:     } else {
  9411  0F6D  2F72               	goto	l3815
  9412  0F6E                     l3813:	
  9413                           
  9414                           ;controller.c: 24:         address++;
  9415  0F6E  3001               	movlw	1
  9416  0F6F  07ED               	addwf	_address,f
  9417  0F70  3000               	movlw	0
  9418  0F71  3DEE               	addwfc	_address+1,f
  9419  0F72                     l3815:	
  9420                           
  9421                           ;controller.c: 28:     TM1650_fastPrintNum(address);
  9422  0F72  086E               	movf	_address+1,w
  9423  0F73  00BC               	movwf	TM1650_fastPrintNum@num+1
  9424  0F74  086D               	movf	_address,w
  9425  0F75  00BB               	movwf	TM1650_fastPrintNum@num
  9426  0F76  3183  2357         	fcall	_TM1650_fastPrintNum
  9427  0F78  0008               	return
  9428  0F79                     __end_of_address_inc:	
  9429                           
  9430                           	psect	text21
  9431  0F39                     __ptext21:	
  9432 ;; *************** function _address_dec *****************
  9433 ;; Defined at:
  9434 ;;		line 34 in file "controller.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;		None
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      void 
  9441 ;; Registers used:
  9442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9452 ;;Total ram usage:        0 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:   10
  9455 ;; This function calls:
  9456 ;;		_TM1650_fastPrintNum
  9457 ;; This function is called by:
  9458 ;;		_CONTROLLER_task
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           
  9463                           ;psect for function _address_dec
  9464  0F39                     _address_dec:	
  9465                           
  9466                           ;controller.c: 36:     if(address == 1) {
  9467                           
  9468                           ;incstack = 0
  9469                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9470  0F39  0140               	movlb	0	; select bank0
  9471  0F3A  036D               	decf	_address,w
  9472  0F3B  046E               	iorwf	_address+1,w
  9473  0F3C  1D03               	btfss	3,2
  9474  0F3D  2F43               	goto	l3821
  9475                           
  9476                           ;controller.c: 37:         address = 512;
  9477  0F3E  3000               	movlw	0
  9478  0F3F  00ED               	movwf	_address
  9479  0F40  3002               	movlw	2
  9480  0F41  00EE               	movwf	_address+1
  9481                           
  9482                           ;controller.c: 38:     } else {
  9483  0F42  2F47               	goto	l3823
  9484  0F43                     l3821:	
  9485                           
  9486                           ;controller.c: 39:         address--;
  9487  0F43  3001               	movlw	1
  9488  0F44  02ED               	subwf	_address,f
  9489  0F45  3000               	movlw	0
  9490  0F46  3BEE               	subwfb	_address+1,f
  9491  0F47                     l3823:	
  9492                           
  9493                           ;controller.c: 43:     TM1650_fastPrintNum(address);
  9494  0F47  086E               	movf	_address+1,w
  9495  0F48  00BC               	movwf	TM1650_fastPrintNum@num+1
  9496  0F49  086D               	movf	_address,w
  9497  0F4A  00BB               	movwf	TM1650_fastPrintNum@num
  9498  0F4B  3183  2357         	fcall	_TM1650_fastPrintNum
  9499  0F4D  0008               	return
  9500  0F4E                     __end_of_address_dec:	
  9501                           
  9502                           	psect	text22
  9503  0F24                     __ptext22:	
  9504 ;; *************** function _TM1650_enable *****************
  9505 ;; Defined at:
  9506 ;;		line 56 in file "tm1650.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;  enable          1    wreg     _Bool 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  enable          1   20[BANK0 ] _Bool 
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1    wreg      void 
  9513 ;; Registers used:
  9514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9521 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9523 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9524 ;;Total ram usage:        1 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; Hardware stack levels required when called:    8
  9527 ;; This function calls:
  9528 ;;		_writeData
  9529 ;; This function is called by:
  9530 ;;		_TM1650_init
  9531 ;;		_CONTROLLER_task
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           
  9536                           ;psect for function _TM1650_enable
  9537  0F24                     _TM1650_enable:	
  9538                           
  9539                           ;incstack = 0
  9540                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9541                           ;TM1650_enable@enable stored from wreg
  9542  0F24  0140               	movlb	0	; select bank0
  9543  0F25  00B4               	movwf	TM1650_enable@enable
  9544                           
  9545                           ;tm1650.c: 57:     if(enable) {
  9546  0F26  0834               	movf	TM1650_enable@enable,w
  9547  0F27  1903               	btfsc	3,2
  9548  0F28  2F32               	goto	l3773
  9549                           
  9550                           ;tm1650.c: 58:         writeData(0x24, 1);
  9551  0F29  01AE               	clrf	writeData@data
  9552  0F2A  0AAE               	incf	writeData@data,f
  9553  0F2B  3024               	movlw	36
  9554  0F2C  318F  27E3         	fcall	_writeData
  9555                           
  9556                           ;tm1650.c: 59:         isOn = 1;
  9557  0F2E  0140               	movlb	0	; select bank0
  9558  0F2F  01DE               	clrf	_isOn
  9559  0F30  0ADE               	incf	_isOn,f
  9560                           
  9561                           ;tm1650.c: 60:     } else {
  9562  0F31  0008               	return
  9563  0F32                     l3773:	
  9564                           
  9565                           ;tm1650.c: 61:         writeData(0x24, 0);
  9566  0F32  01AE               	clrf	writeData@data
  9567  0F33  3024               	movlw	36
  9568  0F34  318F  27E3         	fcall	_writeData
  9569                           
  9570                           ;tm1650.c: 62:         isOn = 0;
  9571  0F36  0140               	movlb	0	; select bank0
  9572  0F37  01DE               	clrf	_isOn
  9573  0F38  0008               	return
  9574  0F39                     __end_of_TM1650_enable:	
  9575                           
  9576                           	psect	text23
  9577  0788                     __ptext23:	
  9578 ;; *************** function _BUTTONS_isClicked *****************
  9579 ;; Defined at:
  9580 ;;		line 71 in file "buttons.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;  button          1    wreg     PTR struct .
  9583 ;;		 -> buttons(32), NULL(0), 
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  button          1    3[BANK0 ] PTR struct .
  9586 ;;		 -> buttons(32), NULL(0), 
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  2    0[BANK0 ] int 
  9589 ;; Registers used:
  9590 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9596 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9597 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9600 ;;Total ram usage:        4 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    4
  9603 ;; This function calls:
  9604 ;;		Nothing
  9605 ;; This function is called by:
  9606 ;;		_CONTROLLER_task
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           
  9611                           ;psect for function _BUTTONS_isClicked
  9612  0788                     _BUTTONS_isClicked:	
  9613                           
  9614                           ;incstack = 0
  9615                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
  9616                           ;BUTTONS_isClicked@button stored from wreg
  9617  0788  0140               	movlb	0	; select bank0
  9618  0789  00A3               	movwf	BUTTONS_isClicked@button
  9619                           
  9620                           ;buttons.c: 72:     if (button->event == EVENT_PRESSED) {
  9621  078A  0823               	movf	BUTTONS_isClicked@button,w
  9622  078B  3E05               	addlw	5
  9623  078C  0086               	movwf	6
  9624  078D  3001               	movlw	1	; select bank2/3
  9625  078E  0087               	movwf	7
  9626  078F  0301               	decf	1,w
  9627  0790  1D03               	btfss	3,2
  9628  0791  2F9D               	goto	l3799
  9629                           
  9630                           ;buttons.c: 73:         button->event = EVENT_IDLE;
  9631  0792  0823               	movf	BUTTONS_isClicked@button,w
  9632  0793  3E05               	addlw	5
  9633  0794  0086               	movwf	6
  9634  0795  3001               	movlw	1	; select bank2/3
  9635  0796  0087               	movwf	7
  9636  0797  0181               	clrf	1
  9637  0798                     l3793:	
  9638                           
  9639                           ;buttons.c: 74:         return 1;
  9640  0798  3001               	movlw	1
  9641  0799  00A0               	movwf	?_BUTTONS_isClicked
  9642  079A  3000               	movlw	0
  9643  079B  00A1               	movwf	?_BUTTONS_isClicked+1
  9644  079C  0008               	return
  9645  079D                     l3799:	
  9646  079D  0823               	movf	BUTTONS_isClicked@button,w
  9647  079E  3E05               	addlw	5
  9648  079F  0086               	movwf	6
  9649  07A0  3001               	movlw	1	; select bank2/3
  9650  07A1  0087               	movwf	7
  9651  07A2  3002               	movlw	2
  9652  07A3  0601               	xorwf	1,w
  9653  07A4  1903               	btfsc	3,2
  9654  07A5  2F98               	goto	l3793
  9655                           
  9656                           ;buttons.c: 78:     return 0;
  9657  07A6  01A0               	clrf	?_BUTTONS_isClicked
  9658  07A7  01A1               	clrf	?_BUTTONS_isClicked+1
  9659  07A8  0008               	return
  9660  07A9                     __end_of_BUTTONS_isClicked:	
  9661                           
  9662                           	psect	text24
  9663  0E50                     __ptext24:	
  9664 ;; *************** function _CONTROLLER_init *****************
  9665 ;; Defined at:
  9666 ;;		line 12 in file "controller.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;		None
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;		None
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9684 ;;Total ram usage:        0 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:   10
  9687 ;; This function calls:
  9688 ;;		_TM1650_fastPrintNum
  9689 ;; This function is called by:
  9690 ;;		_main
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694                           
  9695                           ;psect for function _CONTROLLER_init
  9696  0E50                     _CONTROLLER_init:	
  9697                           
  9698                           ;controller.c: 13:     TM1650_fastPrintNum(address);
  9699                           
  9700                           ;incstack = 0
  9701                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9702  0E50  0140               	movlb	0	; select bank0
  9703  0E51  086E               	movf	_address+1,w
  9704  0E52  00BC               	movwf	TM1650_fastPrintNum@num+1
  9705  0E53  086D               	movf	_address,w
  9706  0E54  00BB               	movwf	TM1650_fastPrintNum@num
  9707  0E55  3183  2357         	fcall	_TM1650_fastPrintNum
  9708  0E57  0008               	return
  9709  0E58                     __end_of_CONTROLLER_init:	
  9710                           
  9711                           	psect	text25
  9712  0357                     __ptext25:	
  9713 ;; *************** function _TM1650_fastPrintNum *****************
  9714 ;; Defined at:
  9715 ;;		line 36 in file "tm1650.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  num             2   27[BANK0 ] unsigned short 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;  numWrite        2   30[BANK0 ] int 
  9720 ;;  i               2   32[BANK0 ] int 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      void 
  9723 ;; Registers used:
  9724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9730 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9731 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9733 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9734 ;;Total ram usage:        7 bytes
  9735 ;; Hardware stack levels used:    1
  9736 ;; Hardware stack levels required when called:    9
  9737 ;; This function calls:
  9738 ;;		_TM1650_setDigit
  9739 ;;		___lwdiv
  9740 ;;		___lwmod
  9741 ;; This function is called by:
  9742 ;;		_CONTROLLER_init
  9743 ;;		_address_inc
  9744 ;;		_address_dec
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           
  9749                           ;psect for function _TM1650_fastPrintNum
  9750  0357                     _TM1650_fastPrintNum:	
  9751                           
  9752                           ;tm1650.c: 37:     if(num > 9999) {
  9753                           
  9754                           ;incstack = 0
  9755                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9756  0357  3027               	movlw	39
  9757  0358  0140               	movlb	0	; select bank0
  9758  0359  023C               	subwf	TM1650_fastPrintNum@num+1,w
  9759  035A  3010               	movlw	16
  9760  035B  1903               	skipnz
  9761  035C  023B               	subwf	TM1650_fastPrintNum@num,w
  9762  035D  1C03               	skipc
  9763  035E  2B8E               	goto	l3613
  9764                           
  9765                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
  9766  035F  3045               	movlw	69
  9767  0360  00BD               	movwf	??_TM1650_fastPrintNum
  9768  0361  083D               	movf	??_TM1650_fastPrintNum,w
  9769  0362  00B4               	movwf	TM1650_setDigit@data
  9770  0363  3000               	movlw	0
  9771  0364  00B5               	movwf	TM1650_setDigit@dp
  9772  0365  00B6               	movwf	TM1650_setDigit@dp+1
  9773  0366  3000               	movlw	0
  9774  0367  318F  27AA  3183   	fcall	_TM1650_setDigit
  9775                           
  9776                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
  9777  036A  3045               	movlw	69
  9778  036B  0140               	movlb	0	; select bank0
  9779  036C  00BD               	movwf	??_TM1650_fastPrintNum
  9780  036D  083D               	movf	??_TM1650_fastPrintNum,w
  9781  036E  00B4               	movwf	TM1650_setDigit@data
  9782  036F  3000               	movlw	0
  9783  0370  00B5               	movwf	TM1650_setDigit@dp
  9784  0371  00B6               	movwf	TM1650_setDigit@dp+1
  9785  0372  3001               	movlw	1
  9786  0373  318F  27AA  3183   	fcall	_TM1650_setDigit
  9787                           
  9788                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
  9789  0376  3045               	movlw	69
  9790  0377  0140               	movlb	0	; select bank0
  9791  0378  00BD               	movwf	??_TM1650_fastPrintNum
  9792  0379  083D               	movf	??_TM1650_fastPrintNum,w
  9793  037A  00B4               	movwf	TM1650_setDigit@data
  9794  037B  3000               	movlw	0
  9795  037C  00B5               	movwf	TM1650_setDigit@dp
  9796  037D  00B6               	movwf	TM1650_setDigit@dp+1
  9797  037E  3002               	movlw	2
  9798  037F  318F  27AA  3183   	fcall	_TM1650_setDigit
  9799                           
  9800                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
  9801  0382  3045               	movlw	69
  9802  0383  0140               	movlb	0	; select bank0
  9803  0384  00BD               	movwf	??_TM1650_fastPrintNum
  9804  0385  083D               	movf	??_TM1650_fastPrintNum,w
  9805  0386  00B4               	movwf	TM1650_setDigit@data
  9806  0387  3000               	movlw	0
  9807  0388  00B5               	movwf	TM1650_setDigit@dp
  9808  0389  00B6               	movwf	TM1650_setDigit@dp+1
  9809  038A  3003               	movlw	3
  9810  038B  318F  27AA         	fcall	_TM1650_setDigit
  9811                           
  9812                           ;tm1650.c: 42:     } else {
  9813  038D  0008               	return
  9814  038E                     l3613:	
  9815                           
  9816                           ;tm1650.c: 43:         int i=0;
  9817  038E  01C0               	clrf	TM1650_fastPrintNum@i
  9818  038F  01C1               	clrf	TM1650_fastPrintNum@i+1
  9819                           
  9820                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
  9821  0390  01C0               	clrf	TM1650_fastPrintNum@i
  9822  0391  01C1               	clrf	TM1650_fastPrintNum@i+1
  9823  0392                     l3619:	
  9824                           
  9825                           ;tm1650.c: 45:             int numWrite = num %10;
  9826  0392  300A               	movlw	10
  9827  0393  0140               	movlb	0	; select bank0
  9828  0394  00A0               	movwf	___lwmod@divisor
  9829  0395  3000               	movlw	0
  9830  0396  00A1               	movwf	___lwmod@divisor+1
  9831  0397  083C               	movf	TM1650_fastPrintNum@num+1,w
  9832  0398  00A3               	movwf	___lwmod@dividend+1
  9833  0399  083B               	movf	TM1650_fastPrintNum@num,w
  9834  039A  00A2               	movwf	___lwmod@dividend
  9835  039B  3186  26C1  3183   	fcall	___lwmod
  9836  039E  0140               	movlb	0	; select bank0
  9837  039F  0821               	movf	?___lwmod+1,w
  9838  03A0  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
  9839  03A1  0820               	movf	?___lwmod,w
  9840  03A2  00BE               	movwf	TM1650_fastPrintNum@numWrite
  9841                           
  9842                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
  9843  03A3  083E               	movf	TM1650_fastPrintNum@numWrite,w
  9844  03A4  3E30               	addlw	48
  9845  03A5  00BD               	movwf	??_TM1650_fastPrintNum
  9846  03A6  083D               	movf	??_TM1650_fastPrintNum,w
  9847  03A7  00B4               	movwf	TM1650_setDigit@data
  9848  03A8  3000               	movlw	0
  9849  03A9  00B5               	movwf	TM1650_setDigit@dp
  9850  03AA  00B6               	movwf	TM1650_setDigit@dp+1
  9851  03AB  0840               	movf	TM1650_fastPrintNum@i,w
  9852  03AC  3C03               	sublw	3
  9853  03AD  318F  27AA  3183   	fcall	_TM1650_setDigit
  9854                           
  9855                           ;tm1650.c: 47:             num = num/10;
  9856  03B0  300A               	movlw	10
  9857  03B1  0140               	movlb	0	; select bank0
  9858  03B2  00A0               	movwf	___lwdiv@divisor
  9859  03B3  3000               	movlw	0
  9860  03B4  00A1               	movwf	___lwdiv@divisor+1
  9861  03B5  083C               	movf	TM1650_fastPrintNum@num+1,w
  9862  03B6  00A3               	movwf	___lwdiv@dividend+1
  9863  03B7  083B               	movf	TM1650_fastPrintNum@num,w
  9864  03B8  00A2               	movwf	___lwdiv@dividend
  9865  03B9  3186  262D  3183   	fcall	___lwdiv
  9866  03BC  0140               	movlb	0	; select bank0
  9867  03BD  0821               	movf	?___lwdiv+1,w
  9868  03BE  00BC               	movwf	TM1650_fastPrintNum@num+1
  9869  03BF  0820               	movf	?___lwdiv,w
  9870  03C0  00BB               	movwf	TM1650_fastPrintNum@num
  9871                           
  9872                           ;tm1650.c: 48:         }
  9873  03C1  3001               	movlw	1
  9874  03C2  07C0               	addwf	TM1650_fastPrintNum@i,f
  9875  03C3  3000               	movlw	0
  9876  03C4  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
  9877  03C5  0841               	movf	TM1650_fastPrintNum@i+1,w
  9878  03C6  3A80               	xorlw	128
  9879  03C7  00BD               	movwf	??_TM1650_fastPrintNum
  9880  03C8  3080               	movlw	128
  9881  03C9  023D               	subwf	??_TM1650_fastPrintNum,w
  9882  03CA  1D03               	skipz
  9883  03CB  2BCE               	goto	u2235
  9884  03CC  3004               	movlw	4
  9885  03CD  0240               	subwf	TM1650_fastPrintNum@i,w
  9886  03CE                     u2235:	
  9887  03CE  1803               	btfsc	3,0
  9888  03CF  0008               	return
  9889  03D0  2B92               	goto	l3619
  9890  03D1                     __end_of_TM1650_fastPrintNum:	
  9891                           
  9892                           	psect	text26
  9893  06C1                     __ptext26:	
  9894 ;; *************** function ___lwmod *****************
  9895 ;; Defined at:
  9896 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;  divisor         2    0[BANK0 ] unsigned int 
  9899 ;;  dividend        2    2[BANK0 ] unsigned int 
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;  counter         1    5[BANK0 ] unsigned char 
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  2    0[BANK0 ] unsigned int 
  9904 ;; Registers used:
  9905 ;;		wreg, status,2, status,0
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9911 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9913 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9914 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9915 ;;Total ram usage:        6 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; Hardware stack levels required when called:    4
  9918 ;; This function calls:
  9919 ;;		Nothing
  9920 ;; This function is called by:
  9921 ;;		_TM1650_fastPrintNum
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           
  9926                           ;psect for function ___lwmod
  9927  06C1                     ___lwmod:	
  9928                           
  9929                           ;incstack = 0
  9930                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9931  06C1  0140               	movlb	0	; select bank0
  9932  06C2  0820               	movf	___lwmod@divisor,w
  9933  06C3  0421               	iorwf	___lwmod@divisor+1,w
  9934  06C4  1903               	btfsc	3,2
  9935  06C5  2EE9               	goto	l3591
  9936  06C6  01A5               	clrf	___lwmod@counter
  9937  06C7  0AA5               	incf	___lwmod@counter,f
  9938  06C8                     l3581:	
  9939  06C8  1BA1               	btfsc	___lwmod@divisor+1,7
  9940  06C9  2ED4               	goto	l3583
  9941  06CA  3001               	movlw	1
  9942  06CB                     u2175:	
  9943  06CB  35A0               	lslf	___lwmod@divisor,f
  9944  06CC  0DA1               	rlf	___lwmod@divisor+1,f
  9945  06CD  0B89               	decfsz	9,f
  9946  06CE  2ECB               	goto	u2175
  9947  06CF  3001               	movlw	1
  9948  06D0  00A4               	movwf	??___lwmod
  9949  06D1  0824               	movf	??___lwmod,w
  9950  06D2  07A5               	addwf	___lwmod@counter,f
  9951  06D3  2EC8               	goto	l3581
  9952  06D4                     l3583:	
  9953  06D4  0821               	movf	___lwmod@divisor+1,w
  9954  06D5  0223               	subwf	___lwmod@dividend+1,w
  9955  06D6  1D03               	skipz
  9956  06D7  2EDA               	goto	u2195
  9957  06D8  0820               	movf	___lwmod@divisor,w
  9958  06D9  0222               	subwf	___lwmod@dividend,w
  9959  06DA                     u2195:	
  9960  06DA  1C03               	skipc
  9961  06DB  2EE0               	goto	l3587
  9962  06DC  0820               	movf	___lwmod@divisor,w
  9963  06DD  02A2               	subwf	___lwmod@dividend,f
  9964  06DE  0821               	movf	___lwmod@divisor+1,w
  9965  06DF  3BA3               	subwfb	___lwmod@dividend+1,f
  9966  06E0                     l3587:	
  9967  06E0  3001               	movlw	1
  9968  06E1                     u2205:	
  9969  06E1  36A1               	lsrf	___lwmod@divisor+1,f
  9970  06E2  0CA0               	rrf	___lwmod@divisor,f
  9971  06E3  0B89               	decfsz	9,f
  9972  06E4  2EE1               	goto	u2205
  9973  06E5  3001               	movlw	1
  9974  06E6  02A5               	subwf	___lwmod@counter,f
  9975  06E7  1D03               	btfss	3,2
  9976  06E8  2ED4               	goto	l3583
  9977  06E9                     l3591:	
  9978  06E9  0823               	movf	___lwmod@dividend+1,w
  9979  06EA  00A1               	movwf	?___lwmod+1
  9980  06EB  0822               	movf	___lwmod@dividend,w
  9981  06EC  00A0               	movwf	?___lwmod
  9982  06ED  0008               	return
  9983  06EE                     __end_of___lwmod:	
  9984                           
  9985                           	psect	text27
  9986  0FAA                     __ptext27:	
  9987 ;; *************** function _TM1650_setDigit *****************
  9988 ;; Defined at:
  9989 ;;		line 24 in file "tm1650.c"
  9990 ;; Parameters:    Size  Location     Type
  9991 ;;  digit           1    wreg     unsigned char 
  9992 ;;  data            1   20[BANK0 ] unsigned char 
  9993 ;;  dp              2   21[BANK0 ] int 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  digit           1   26[BANK0 ] unsigned char 
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10005 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10007 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10008 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10009 ;;Total ram usage:        7 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:    8
 10012 ;; This function calls:
 10013 ;;		_writeData
 10014 ;; This function is called by:
 10015 ;;		_TM1650_fastPrintNum
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           
 10020                           ;psect for function _TM1650_setDigit
 10021  0FAA                     _TM1650_setDigit:	
 10022                           
 10023                           ;incstack = 0
 10024                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10025                           ;TM1650_setDigit@digit stored from wreg
 10026  0FAA  0140               	movlb	0	; select bank0
 10027  0FAB  00BA               	movwf	TM1650_setDigit@digit
 10028                           
 10029                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
 10030  0FAC  0834               	movf	TM1650_setDigit@data,w
 10031  0FAD  3E13               	addlw	low ((_charTable+65504)| (0+32768))
 10032  0FAE  0084               	movwf	4
 10033  0FAF  3084               	movlw	high ((_charTable+65504)| (0+32768))
 10034  0FB0  1803               	skipnc
 10035  0FB1  3E01               	addlw	1
 10036  0FB2  0085               	movwf	5
 10037  0FB3  0800               	movf	0,w	;code access
 10038  0FB4  00B7               	movwf	??_TM1650_setDigit
 10039  0FB5  0835               	movf	TM1650_setDigit@dp,w
 10040  0FB6  00B8               	movwf	??_TM1650_setDigit+1
 10041  0FB7  3006               	movlw	6
 10042  0FB8                     u2085:	
 10043  0FB8  35B8               	lslf	??_TM1650_setDigit+1,f
 10044  0FB9  3EFF               	addlw	-1
 10045  0FBA  1D03               	skipz
 10046  0FBB  2FB8               	goto	u2085
 10047  0FBC  3538               	lslf	??_TM1650_setDigit+1,w
 10048  0FBD  0437               	iorwf	??_TM1650_setDigit,w
 10049  0FBE  00B9               	movwf	??_TM1650_setDigit+2
 10050  0FBF  0839               	movf	??_TM1650_setDigit+2,w
 10051  0FC0  00AE               	movwf	writeData@data
 10052  0FC1  083A               	movf	TM1650_setDigit@digit,w
 10053  0FC2  3E34               	addlw	52
 10054  0FC3  318F  27E3         	fcall	_writeData
 10055  0FC5  0008               	return
 10056  0FC6                     __end_of_TM1650_setDigit:	
 10057                           
 10058                           	psect	text28
 10059  0FE3                     __ptext28:	
 10060 ;; *************** function _writeData *****************
 10061 ;; Defined at:
 10062 ;;		line 18 in file "tm1650.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  address         1    wreg     unsigned char 
 10065 ;;  data            1   14[BANK0 ] unsigned char 
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;  address         1   18[BANK0 ] unsigned char 
 10068 ;;  status          1   19[BANK0 ] volatile enum E10866
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10078 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10079 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10080 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10081 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10082 ;;Total ram usage:        6 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:    7
 10085 ;; This function calls:
 10086 ;;		_I2C1_MasterWrite
 10087 ;; This function is called by:
 10088 ;;		_TM1650_setDigit
 10089 ;;		_TM1650_enable
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           
 10094                           ;psect for function _writeData
 10095  0FE3                     _writeData:	
 10096                           
 10097                           ;incstack = 0
 10098                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10099                           ;writeData@address stored from wreg
 10100  0FE3  0140               	movlb	0	; select bank0
 10101  0FE4  00B2               	movwf	writeData@address
 10102                           
 10103                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10104  0FE5  3002               	movlw	2
 10105  0FE6  00AF               	movwf	??_writeData
 10106  0FE7  082F               	movf	??_writeData,w
 10107  0FE8  00B3               	movwf	writeData@status	;volatile
 10108                           
 10109                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
 10110  0FE9  01A7               	clrf	I2C1_MasterWrite@length
 10111  0FEA  0AA7               	incf	I2C1_MasterWrite@length,f
 10112  0FEB  0832               	movf	writeData@address,w
 10113  0FEC  00AF               	movwf	??_writeData
 10114  0FED  01B0               	clrf	??_writeData+1
 10115  0FEE  082F               	movf	??_writeData,w
 10116  0FEF  00A8               	movwf	I2C1_MasterWrite@address
 10117  0FF0  0830               	movf	??_writeData+1,w
 10118  0FF1  00A9               	movwf	I2C1_MasterWrite@address+1
 10119  0FF2  3033               	movlw	(low (writeData@status| 0))& (0+255)
 10120  0FF3  00B1               	movwf	??_writeData+2
 10121  0FF4  0831               	movf	??_writeData+2,w
 10122  0FF5  00AA               	movwf	I2C1_MasterWrite@pflag
 10123  0FF6  302E               	movlw	(low (writeData@data| 0))& (0+255)
 10124  0FF7  3187  2716  318F   	fcall	_I2C1_MasterWrite
 10125  0FFA                     l3543:	
 10126                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
 10127                           
 10128  0FFA  3002               	movlw	2
 10129  0FFB  0140               	movlb	0	; select bank0
 10130  0FFC  0633               	xorwf	writeData@status,w	;volatile
 10131  0FFD  1D03               	btfss	3,2
 10132  0FFE  0008               	return
 10133  0FFF  2FFA               	goto	l3543
 10134  1000                     __end_of_writeData:	
 10135                           
 10136                           	psect	text29
 10137  0716                     __ptext29:	
 10138 ;; *************** function _I2C1_MasterWrite *****************
 10139 ;; Defined at:
 10140 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;  pdata           1    wreg     PTR unsigned char 
 10143 ;;		 -> writeData@data(1), 
 10144 ;;  length          1    7[BANK0 ] unsigned char 
 10145 ;;  address         2    8[BANK0 ] unsigned short 
 10146 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 10147 ;;		 -> writeData@status(1), 
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 10150 ;;		 -> writeData@data(1), 
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10160 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10163 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10164 ;;Total ram usage:        7 bytes
 10165 ;; Hardware stack levels used:    1
 10166 ;; Hardware stack levels required when called:    6
 10167 ;; This function calls:
 10168 ;;		_I2C1_MasterTRBInsert
 10169 ;;		_I2C1_MasterWriteTRBBuild
 10170 ;; This function is called by:
 10171 ;;		_writeData
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           
 10176                           ;psect for function _I2C1_MasterWrite
 10177  0716                     _I2C1_MasterWrite:	
 10178                           
 10179                           ;incstack = 0
 10180                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10181                           ;I2C1_MasterWrite@pdata stored from wreg
 10182  0716  0140               	movlb	0	; select bank0
 10183  0717  00AD               	movwf	I2C1_MasterWrite@pdata
 10184                           
 10185                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 10186  0718  1848               	btfsc	_i2c1_object+2,0
 10187  0719  2F37               	goto	l3537
 10188                           
 10189                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 10190  071A  082D               	movf	I2C1_MasterWrite@pdata,w
 10191  071B  00AB               	movwf	??_I2C1_MasterWrite
 10192  071C  082B               	movf	??_I2C1_MasterWrite,w
 10193  071D  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 10194  071E  0827               	movf	I2C1_MasterWrite@length,w
 10195  071F  00AC               	movwf	??_I2C1_MasterWrite+1
 10196  0720  082C               	movf	??_I2C1_MasterWrite+1,w
 10197  0721  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 10198  0722  0829               	movf	I2C1_MasterWrite@address+1,w
 10199  0723  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 10200  0724  0828               	movf	I2C1_MasterWrite@address,w
 10201  0725  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 10202  0726  30C6               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
 10203  0727  3187  27A9  3187   	fcall	_I2C1_MasterWriteTRBBuild
 10204                           
 10205                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 10206  072A  30C6               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
 10207  072B  0140               	movlb	0	; select bank0
 10208  072C  00AB               	movwf	??_I2C1_MasterWrite
 10209  072D  082B               	movf	??_I2C1_MasterWrite,w
 10210  072E  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 10211  072F  082A               	movf	I2C1_MasterWrite@pflag,w
 10212  0730  00AC               	movwf	??_I2C1_MasterWrite+1
 10213  0731  082C               	movf	??_I2C1_MasterWrite+1,w
 10214  0732  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 10215  0733  3001               	movlw	1
 10216  0734  3184  24EF         	fcall	_I2C1_MasterTRBInsert
 10217                           
 10218                           ;mcc_generated_files/i2c1.c: 613:     }
 10219  0736  0008               	return
 10220  0737                     l3537:	
 10221                           
 10222                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 10223  0737  082A               	movf	I2C1_MasterWrite@pflag,w
 10224  0738  0086               	movwf	6
 10225  0739  0187               	clrf	7
 10226  073A  0181               	clrf	1
 10227  073B  0A81               	incf	1,f
 10228  073C  0008               	return
 10229  073D                     __end_of_I2C1_MasterWrite:	
 10230                           
 10231                           	psect	text30
 10232  07A9                     __ptext30:	
 10233 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 10234 ;; Defined at:
 10235 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  ptrb            1    wreg     PTR struct .
 10238 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 10239 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 10240 ;;		 -> writeData@data(1), 
 10241 ;;  length          1    1[BANK0 ] unsigned char 
 10242 ;;  address         2    2[BANK0 ] unsigned short 
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;  ptrb            1    6[BANK0 ] PTR struct .
 10245 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  1    wreg      void 
 10248 ;; Registers used:
 10249 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10255 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10257 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10258 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10259 ;;Total ram usage:        7 bytes
 10260 ;; Hardware stack levels used:    1
 10261 ;; Hardware stack levels required when called:    4
 10262 ;; This function calls:
 10263 ;;		Nothing
 10264 ;; This function is called by:
 10265 ;;		_I2C1_MasterWrite
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           
 10270                           ;psect for function _I2C1_MasterWriteTRBBuild
 10271  07A9                     _I2C1_MasterWriteTRBBuild:	
 10272                           
 10273                           ;incstack = 0
 10274                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 10275                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 10276  07A9  0140               	movlb	0	; select bank0
 10277  07AA  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 10278                           
 10279                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 10280  07AB  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 10281  07AC  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 10282  07AD  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 10283  07AE  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10284  07AF  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 10285  07B0  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 10286  07B1  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10287  07B2  0086               	movwf	6
 10288  07B3  0187               	clrf	7
 10289  07B4  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10290  07B5  3FC0               	movwi [0]fsr1
 10291  07B6  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 10292  07B7  3FC1               	movwi [1]fsr1
 10293                           
 10294                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 10295  07B8  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 10296  07B9  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10297  07BA  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10298  07BB  3E02               	addlw	2
 10299  07BC  0086               	movwf	6
 10300  07BD  0187               	clrf	7
 10301  07BE  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10302  07BF  0081               	movwf	1
 10303                           
 10304                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 10305  07C0  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 10306  07C1  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10307  07C2  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10308  07C3  3E03               	addlw	3
 10309  07C4  0086               	movwf	6
 10310  07C5  0187               	clrf	7
 10311  07C6  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10312  07C7  0081               	movwf	1
 10313  07C8  0008               	return
 10314  07C9                     __end_of_I2C1_MasterWriteTRBBuild:	
 10315                           
 10316                           	psect	text31
 10317  04EF                     __ptext31:	
 10318 ;; *************** function _I2C1_MasterTRBInsert *****************
 10319 ;; Defined at:
 10320 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  count           1    wreg     unsigned char 
 10323 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 10324 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 10325 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 10326 ;;		 -> writeData@status(1), 
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;  count           1    3[BANK0 ] unsigned char 
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      void 
 10331 ;; Registers used:
 10332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10341 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10342 ;;Total ram usage:        4 bytes
 10343 ;; Hardware stack levels used:    1
 10344 ;; Hardware stack levels required when called:    5
 10345 ;; This function calls:
 10346 ;;		_I2C1_WaitForLastPacketToComplete
 10347 ;; This function is called by:
 10348 ;;		_I2C1_MasterWrite
 10349 ;;		_I2C1_MasterRead
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353                           
 10354                           ;psect for function _I2C1_MasterTRBInsert
 10355  04EF                     _I2C1_MasterTRBInsert:	
 10356                           
 10357                           ;incstack = 0
 10358                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10359                           ;I2C1_MasterTRBInsert@count stored from wreg
 10360  04EF  0140               	movlb	0	; select bank0
 10361  04F0  00A3               	movwf	I2C1_MasterTRBInsert@count
 10362                           
 10363                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 10364  04F1  1848               	btfsc	_i2c1_object+2,0
 10365  04F2  2D23               	goto	l3525
 10366                           
 10367                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 10368  04F3  3002               	movlw	2
 10369  04F4  00A2               	movwf	??_I2C1_MasterTRBInsert
 10370  04F5  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10371  04F6  0086               	movwf	6
 10372  04F7  0187               	clrf	7
 10373  04F8  0822               	movf	??_I2C1_MasterTRBInsert,w
 10374  04F9  0081               	movwf	1
 10375                           
 10376                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 10377  04FA  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 10378  04FB  00A2               	movwf	??_I2C1_MasterTRBInsert
 10379  04FC  0A46               	incf	_i2c1_object,w
 10380  04FD  0086               	movwf	6
 10381  04FE  0187               	clrf	7
 10382  04FF  0822               	movf	??_I2C1_MasterTRBInsert,w
 10383  0500  0081               	movwf	1
 10384                           
 10385                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 10386  0501  0823               	movf	I2C1_MasterTRBInsert@count,w
 10387  0502  00A2               	movwf	??_I2C1_MasterTRBInsert
 10388  0503  0846               	movf	_i2c1_object,w
 10389  0504  0086               	movwf	6
 10390  0505  0187               	clrf	7
 10391  0506  0822               	movf	??_I2C1_MasterTRBInsert,w
 10392  0507  0081               	movwf	1
 10393                           
 10394                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 10395  0508  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10396  0509  00A2               	movwf	??_I2C1_MasterTRBInsert
 10397  050A  0846               	movf	_i2c1_object,w
 10398  050B  3E02               	addlw	2
 10399  050C  0086               	movwf	6
 10400  050D  0187               	clrf	7
 10401  050E  0822               	movf	??_I2C1_MasterTRBInsert,w
 10402  050F  0081               	movwf	1
 10403                           
 10404                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 10405  0510  3003               	movlw	3
 10406  0511  00A2               	movwf	??_I2C1_MasterTRBInsert
 10407  0512  0822               	movf	??_I2C1_MasterTRBInsert,w
 10408  0513  07C6               	addwf	_i2c1_object,f
 10409                           
 10410                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 10411  0514  0846               	movf	_i2c1_object,w
 10412  0515  3A6B               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 10413  0516  1D03               	skipz
 10414  0517  2D1C               	goto	l3521
 10415                           
 10416                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 10417  0518  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 10418  0519  00A2               	movwf	??_I2C1_MasterTRBInsert
 10419  051A  0822               	movf	??_I2C1_MasterTRBInsert,w
 10420  051B  00C6               	movwf	_i2c1_object
 10421  051C                     l3521:	
 10422                           
 10423                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 10424  051C  10C8               	bcf	_i2c1_object+2,1
 10425                           
 10426                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 10427  051D  0847               	movf	low ((_i2c1_object| 0+1)),w
 10428  051E  0646               	xorwf	_i2c1_object,w
 10429  051F  1D03               	skipz
 10430  0520  2D28               	goto	l3527
 10431                           
 10432                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 10433  0521  1448               	bsf	_i2c1_object+2,0
 10434  0522  2D28               	goto	l3527
 10435  0523                     l3525:	
 10436                           
 10437                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 10438  0523  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10439  0524  0086               	movwf	6
 10440  0525  0187               	clrf	7
 10441  0526  0181               	clrf	1
 10442  0527  0A81               	incf	1,f
 10443  0528                     l3527:	
 10444                           
 10445                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 10446  0528  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10447  0529  0086               	movwf	6
 10448  052A  0187               	clrf	7
 10449  052B  3002               	movlw	2
 10450  052C  0601               	xorwf	1,w
 10451  052D  1D03               	btfss	3,2
 10452  052E  0008               	return
 10453                           
 10454                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 10455  052F  318E  2637         	fcall	_I2C1_WaitForLastPacketToComplete
 10456                           
 10457                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 10458  0531  014E               	movlb	14	; select bank14
 10459  0532  140F               	bsf	15,0	;volatile
 10460  0533  0008               	return
 10461  0534                     __end_of_I2C1_MasterTRBInsert:	
 10462                           
 10463                           	psect	text32
 10464  0E37                     __ptext32:	
 10465 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 10466 ;; Defined at:
 10467 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;		None
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;		None
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  1    wreg      void 
 10474 ;; Registers used:
 10475 ;;		wreg, status,2, status,0
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10485 ;;Total ram usage:        0 bytes
 10486 ;; Hardware stack levels used:    1
 10487 ;; Hardware stack levels required when called:    4
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_I2C1_MasterTRBInsert
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           
 10496                           ;psect for function _I2C1_WaitForLastPacketToComplete
 10497  0E37                     _I2C1_WaitForLastPacketToComplete:	
 10498  0E37                     l3507:	
 10499                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 10500                           
 10501                           ;incstack = 0
 10502                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 10503                           
 10504                           
 10505                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 10506  0E37  0140               	movlb	0	; select bank0
 10507  0E38  0865               	movf	_i2c1_state,w
 10508  0E39  1903               	btfsc	3,2
 10509  0E3A  0008               	return
 10510  0E3B  2E37               	goto	l3507
 10511  0E3C                     __end_of_I2C1_WaitForLastPacketToComplete:	
 10512                           
 10513                           	psect	text33
 10514  0E48                     __ptext33:	
 10515 ;; *************** function _CLOCK_init *****************
 10516 ;; Defined at:
 10517 ;;		line 9 in file "clock.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;		None
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      void 
 10524 ;; Registers used:
 10525 ;;		wreg, status,2, status,0, pclath, cstack
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10535 ;;Total ram usage:        0 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; Hardware stack levels required when called:    5
 10538 ;; This function calls:
 10539 ;;		_TMR0_SetInterruptHandler
 10540 ;; This function is called by:
 10541 ;;		_main
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           
 10546                           ;psect for function _CLOCK_init
 10547  0E48                     _CLOCK_init:	
 10548                           
 10549                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 10550                           
 10551                           ;incstack = 0
 10552                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 10553  0E48  303C               	movlw	low _CLOCK_timerCallback
 10554  0E49  0140               	movlb	0	; select bank0
 10555  0E4A  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10556  0E4B  300E               	movlw	high _CLOCK_timerCallback
 10557  0E4C  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10558  0E4D  318E  2673         	fcall	_TMR0_SetInterruptHandler
 10559  0E4F  0008               	return
 10560  0E50                     __end_of_CLOCK_init:	
 10561                           
 10562                           	psect	text34
 10563  0E73                     __ptext34:	
 10564 ;; *************** function _TMR0_SetInterruptHandler *****************
 10565 ;; Defined at:
 10566 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10569 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;		None
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1    wreg      void 
 10574 ;; Registers used:
 10575 ;;		wreg
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10584 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10585 ;;Total ram usage:        2 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:    4
 10588 ;; This function calls:
 10589 ;;		Nothing
 10590 ;; This function is called by:
 10591 ;;		_TMR0_Initialize
 10592 ;;		_CLOCK_init
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           
 10597                           ;psect for function _TMR0_SetInterruptHandler
 10598  0E73                     _TMR0_SetInterruptHandler:	
 10599                           
 10600                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 10601                           
 10602                           ;incstack = 0
 10603                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 10604  0E73  0140               	movlb	0	; select bank0
 10605  0E74  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 10606  0E75  0141               	movlb	1	; select bank1
 10607  0E76  00CD               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 10608  0E77  0140               	movlb	0	; select bank0
 10609  0E78  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 10610  0E79  0141               	movlb	1	; select bank1
 10611  0E7A  00CC               	movwf	_TMR0_InterruptHandler^(0+128)
 10612  0E7B  0008               	return
 10613  0E7C                     __end_of_TMR0_SetInterruptHandler:	
 10614                           
 10615                           	psect	text35
 10616  01D2                     __ptext35:	
 10617 ;; *************** function _BUTTONS_task *****************
 10618 ;; Defined at:
 10619 ;;		line 34 in file "buttons.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;		None
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  btn             1    8[BANK0 ] PTR struct .
 10624 ;;		 -> buttons(32), 
 10625 ;;  i               1    5[BANK0 ] unsigned char 
 10626 ;;  time            2    6[BANK0 ] unsigned short 
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10637 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10638 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10639 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10640 ;;Total ram usage:        7 bytes
 10641 ;; Hardware stack levels used:    1
 10642 ;; Hardware stack levels required when called:    5
 10643 ;; This function calls:
 10644 ;;		_CLOCK_getTime
 10645 ;; This function is called by:
 10646 ;;		_main
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           
 10651                           ;psect for function _BUTTONS_task
 10652  01D2                     _BUTTONS_task:	
 10653                           
 10654                           ;buttons.c: 35:     time_t time = CLOCK_getTime();
 10655                           
 10656                           ;incstack = 0
 10657                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10658  01D2  318E  2642  3181   	fcall	_CLOCK_getTime
 10659  01D5  0140               	movlb	0	; select bank0
 10660  01D6  0821               	movf	?_CLOCK_getTime+1,w
 10661  01D7  00A7               	movwf	BUTTONS_task@time+1
 10662  01D8  0820               	movf	?_CLOCK_getTime,w
 10663  01D9  00A6               	movwf	BUTTONS_task@time
 10664                           
 10665                           ;buttons.c: 38:     if (time - lastTime < 50)
 10666  01DA  0853               	movf	_lastTime,w
 10667  01DB  0226               	subwf	BUTTONS_task@time,w
 10668  01DC  00A2               	movwf	??_BUTTONS_task
 10669  01DD  0854               	movf	_lastTime+1,w
 10670  01DE  3B27               	subwfb	BUTTONS_task@time+1,w
 10671  01DF  00A3               	movwf	??_BUTTONS_task+1
 10672  01E0  3000               	movlw	0
 10673  01E1  0223               	subwf	??_BUTTONS_task+1,w
 10674  01E2  3032               	movlw	50
 10675  01E3  1903               	skipnz
 10676  01E4  0222               	subwf	??_BUTTONS_task,w
 10677  01E5  1C03               	btfss	3,0
 10678  01E6  0008               	return
 10679                           
 10680                           ;buttons.c: 41:     lastTime = time;
 10681  01E7  0827               	movf	BUTTONS_task@time+1,w
 10682  01E8  00D4               	movwf	_lastTime+1
 10683  01E9  0826               	movf	BUTTONS_task@time,w
 10684  01EA  00D3               	movwf	_lastTime
 10685                           
 10686                           ;buttons.c: 44:     for (uint8_t i = 0; i < 4; i++) {
 10687  01EB  01A5               	clrf	BUTTONS_task@i
 10688  01EC                     l4005:	
 10689                           
 10690                           ;buttons.c: 45:         button_t* btn = buttons + i;
 10691  01EC  0825               	movf	BUTTONS_task@i,w
 10692  01ED  00A2               	movwf	??_BUTTONS_task
 10693  01EE  3002               	movlw	2
 10694  01EF                     u2405:	
 10695  01EF  35A2               	lslf	??_BUTTONS_task,f
 10696  01F0  3EFF               	addlw	-1
 10697  01F1  1D03               	skipz
 10698  01F2  29EF               	goto	u2405
 10699  01F3  3522               	lslf	??_BUTTONS_task,w
 10700  01F4  3E20               	addlw	(low (_buttons| (0+256)))& (0+255)
 10701  01F5  00A3               	movwf	??_BUTTONS_task+1
 10702  01F6  0823               	movf	??_BUTTONS_task+1,w
 10703  01F7  00A8               	movwf	BUTTONS_task@btn
 10704                           
 10705                           ;buttons.c: 48:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 10706  01F8  0828               	movf	BUTTONS_task@btn,w
 10707  01F9  0086               	movwf	6
 10708  01FA  3001               	movlw	1	; select bank2/3
 10709  01FB  0087               	movwf	7
 10710  01FC  3F40               	moviw [0]fsr1
 10711  01FD  00A2               	movwf	??_BUTTONS_task
 10712  01FE  3F41               	moviw [1]fsr1
 10713  01FF  00A3               	movwf	??_BUTTONS_task+1
 10714  0200  0822               	movf	??_BUTTONS_task,w
 10715  0201  0086               	movwf	6
 10716  0202  0823               	movf	??_BUTTONS_task+1,w
 10717  0203  0087               	movwf	7
 10718  0204  3001               	movlw	1
 10719  0205  00A4               	movwf	??_BUTTONS_task+2
 10720  0206  0828               	movf	BUTTONS_task@btn,w
 10721  0207  3E02               	addlw	2
 10722  0208  0084               	movwf	4
 10723  0209  3001               	movlw	1	; select bank2/3
 10724  020A  0085               	movwf	5
 10725  020B  0A00               	incf	0,w
 10726  020C  2A0E               	goto	u2414
 10727  020D                     u2415:	
 10728  020D  35A4               	lslf	??_BUTTONS_task+2,f
 10729  020E                     u2414:	
 10730  020E  0B89               	decfsz	9,f
 10731  020F  2A0D               	goto	u2415
 10732  0210  0824               	movf	??_BUTTONS_task+2,w
 10733  0211  0501               	andwf	1,w
 10734  0212  1D03               	btfss	3,2
 10735  0213  2A1C               	goto	l4011
 10736                           
 10737                           ;buttons.c: 49:             btn->state = STATE_PRESSED;
 10738  0214  0828               	movf	BUTTONS_task@btn,w
 10739  0215  3E03               	addlw	3
 10740  0216  0086               	movwf	6
 10741  0217  3001               	movlw	1	; select bank2/3
 10742  0218  0087               	movwf	7
 10743  0219  0181               	clrf	1
 10744  021A  0A81               	incf	1,f
 10745                           
 10746                           ;buttons.c: 50:         } else {
 10747  021B  2A22               	goto	l806
 10748  021C                     l4011:	
 10749                           
 10750                           ;buttons.c: 51:             btn->state = STATE_UNPRESSED;
 10751  021C  0828               	movf	BUTTONS_task@btn,w
 10752  021D  3E03               	addlw	3
 10753  021E  0086               	movwf	6
 10754  021F  3001               	movlw	1	; select bank2/3
 10755  0220  0087               	movwf	7
 10756  0221  0181               	clrf	1
 10757  0222                     l806:	
 10758                           ;buttons.c: 52:         }
 10759                           
 10760                           
 10761                           ;buttons.c: 54:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
 10762  0222  0828               	movf	BUTTONS_task@btn,w
 10763  0223  3E03               	addlw	3
 10764  0224  0086               	movwf	6
 10765  0225  3001               	movlw	1	; select bank2/3
 10766  0226  0087               	movwf	7
 10767  0227  0301               	decf	1,w
 10768  0228  1D03               	btfss	3,2
 10769  0229  2A43               	goto	l4017
 10770  022A  0828               	movf	BUTTONS_task@btn,w
 10771  022B  3E04               	addlw	4
 10772  022C  0086               	movwf	6
 10773  022D  3001               	movlw	1	; select bank2/3
 10774  022E  0087               	movwf	7
 10775  022F  0801               	movf	1,w
 10776  0230  1D03               	btfss	3,2
 10777  0231  2A43               	goto	l4017
 10778                           
 10779                           ;buttons.c: 56:             btn->event = EVENT_PRESSED;
 10780  0232  0828               	movf	BUTTONS_task@btn,w
 10781  0233  3E05               	addlw	5
 10782  0234  0086               	movwf	6
 10783  0235  3001               	movlw	1	; select bank2/3
 10784  0236  0087               	movwf	7
 10785  0237  0181               	clrf	1
 10786  0238  0A81               	incf	1,f
 10787                           
 10788                           ;buttons.c: 57:             btn->pressTime = time;
 10789  0239  0828               	movf	BUTTONS_task@btn,w
 10790  023A  3E06               	addlw	6
 10791  023B  0086               	movwf	6
 10792  023C  3001               	movlw	1	; select bank2/3
 10793  023D  0087               	movwf	7
 10794  023E  0826               	movf	BUTTONS_task@time,w
 10795  023F  3FC0               	movwi [0]fsr1
 10796  0240  0827               	movf	BUTTONS_task@time+1,w
 10797  0241  3FC1               	movwi [1]fsr1
 10798                           
 10799                           ;buttons.c: 58:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 10800  0242  2A85               	goto	l808
 10801  0243                     l4017:	
 10802  0243  0828               	movf	BUTTONS_task@btn,w
 10803  0244  3E03               	addlw	3
 10804  0245  0086               	movwf	6
 10805  0246  3001               	movlw	1	; select bank2/3
 10806  0247  0087               	movwf	7
 10807  0248  0301               	decf	1,w
 10808  0249  1D03               	btfss	3,2
 10809  024A  2A6F               	goto	l4025
 10810  024B  0828               	movf	BUTTONS_task@btn,w
 10811  024C  3E04               	addlw	4
 10812  024D  0086               	movwf	6
 10813  024E  3001               	movlw	1	; select bank2/3
 10814  024F  0087               	movwf	7
 10815  0250  0301               	decf	1,w
 10816  0251  1D03               	btfss	3,2
 10817  0252  2A6F               	goto	l4025
 10818                           
 10819                           ;buttons.c: 60:             if(time - btn->pressTime > 500) {
 10820  0253  0828               	movf	BUTTONS_task@btn,w
 10821  0254  3E06               	addlw	6
 10822  0255  0086               	movwf	6
 10823  0256  3001               	movlw	1	; select bank2/3
 10824  0257  0087               	movwf	7
 10825  0258  3F40               	moviw [0]fsr1
 10826  0259  0226               	subwf	BUTTONS_task@time,w
 10827  025A  00A2               	movwf	??_BUTTONS_task
 10828  025B  3F41               	moviw [1]fsr1
 10829  025C  3B27               	subwfb	BUTTONS_task@time+1,w
 10830  025D  00A3               	movwf	??_BUTTONS_task+1
 10831  025E  3001               	movlw	1
 10832  025F  0223               	subwf	??_BUTTONS_task+1,w
 10833  0260  30F5               	movlw	245
 10834  0261  1903               	skipnz
 10835  0262  0222               	subwf	??_BUTTONS_task,w
 10836  0263  1C03               	skipc
 10837  0264  2A85               	goto	l808
 10838                           
 10839                           ;buttons.c: 61:                 btn->event = EVENT_HELD;
 10840  0265  3002               	movlw	2
 10841  0266  00A2               	movwf	??_BUTTONS_task
 10842  0267  0828               	movf	BUTTONS_task@btn,w
 10843  0268  3E05               	addlw	5
 10844  0269  0086               	movwf	6
 10845  026A  3001               	movlw	1	; select bank2/3
 10846  026B  0087               	movwf	7
 10847  026C  0822               	movf	??_BUTTONS_task,w
 10848  026D  0081               	movwf	1
 10849  026E  2A85               	goto	l808
 10850  026F                     l4025:	
 10851  026F  0828               	movf	BUTTONS_task@btn,w
 10852  0270  3E03               	addlw	3
 10853  0271  0086               	movwf	6
 10854  0272  3001               	movlw	1	; select bank2/3
 10855  0273  0087               	movwf	7
 10856  0274  0801               	movf	1,w
 10857  0275  1D03               	btfss	3,2
 10858  0276  2A85               	goto	l808
 10859  0277  0828               	movf	BUTTONS_task@btn,w
 10860  0278  3E04               	addlw	4
 10861  0279  0086               	movwf	6
 10862  027A  3001               	movlw	1	; select bank2/3
 10863  027B  0087               	movwf	7
 10864  027C  0301               	decf	1,w
 10865  027D  1D03               	btfss	3,2
 10866  027E  2A85               	goto	l808
 10867                           
 10868                           ;buttons.c: 64:             btn->event = EVENT_IDLE;
 10869  027F  0828               	movf	BUTTONS_task@btn,w
 10870  0280  3E05               	addlw	5
 10871  0281  0086               	movwf	6
 10872  0282  3001               	movlw	1	; select bank2/3
 10873  0283  0087               	movwf	7
 10874  0284  0181               	clrf	1
 10875  0285                     l808:	
 10876                           
 10877                           ;buttons.c: 67:         btn->lastState = btn->state;
 10878  0285  0828               	movf	BUTTONS_task@btn,w
 10879  0286  3E03               	addlw	3
 10880  0287  0086               	movwf	6
 10881  0288  3001               	movlw	1	; select bank2/3
 10882  0289  0087               	movwf	7
 10883  028A  0801               	movf	1,w
 10884  028B  00A2               	movwf	??_BUTTONS_task
 10885  028C  0828               	movf	BUTTONS_task@btn,w
 10886  028D  3E04               	addlw	4
 10887  028E  0086               	movwf	6
 10888  028F  3001               	movlw	1	; select bank2/3
 10889  0290  0087               	movwf	7
 10890  0291  0822               	movf	??_BUTTONS_task,w
 10891  0292  0081               	movwf	1
 10892                           
 10893                           ;buttons.c: 68:     }
 10894  0293  3001               	movlw	1
 10895  0294  00A2               	movwf	??_BUTTONS_task
 10896  0295  0822               	movf	??_BUTTONS_task,w
 10897  0296  07A5               	addwf	BUTTONS_task@i,f
 10898  0297  3004               	movlw	4
 10899  0298  0225               	subwf	BUTTONS_task@i,w
 10900  0299  1803               	btfsc	3,0
 10901  029A  0008               	return
 10902  029B  29EC               	goto	l4005
 10903  029C                     __end_of_BUTTONS_task:	
 10904                           
 10905                           	psect	text36
 10906  0577                     __ptext36:	
 10907 ;; *************** function _BUTTONS_init *****************
 10908 ;; Defined at:
 10909 ;;		line 21 in file "buttons.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;		None
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10925 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10926 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10927 ;;Total ram usage:        1 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    5
 10930 ;; This function calls:
 10931 ;;		_init
 10932 ;; This function is called by:
 10933 ;;		_main
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           
 10938                           ;psect for function _BUTTONS_init
 10939  0577                     _BUTTONS_init:	
 10940                           
 10941                           ;buttons.c: 22:     menu = &buttons[0];
 10942                           
 10943                           ;incstack = 0
 10944                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10945  0577  3020               	movlw	(low (_buttons| (0+256)))& (0+255)
 10946  0578  0140               	movlb	0	; select bank0
 10947  0579  00A5               	movwf	??_BUTTONS_init
 10948  057A  0825               	movf	??_BUTTONS_init,w
 10949  057B  00DA               	movwf	_menu
 10950                           
 10951                           ;buttons.c: 23:     up = &buttons[1];
 10952  057C  3028               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 10953  057D  00A5               	movwf	??_BUTTONS_init
 10954  057E  0825               	movf	??_BUTTONS_init,w
 10955  057F  00DD               	movwf	_up
 10956                           
 10957                           ;buttons.c: 24:     down = &buttons[2];
 10958  0580  3030               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 10959  0581  00A5               	movwf	??_BUTTONS_init
 10960  0582  0825               	movf	??_BUTTONS_init,w
 10961  0583  00DC               	movwf	_down
 10962                           
 10963                           ;buttons.c: 25:     enter = &buttons[3];
 10964  0584  3038               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 10965  0585  00A5               	movwf	??_BUTTONS_init
 10966  0586  0825               	movf	??_BUTTONS_init,w
 10967  0587  00DB               	movwf	_enter
 10968                           
 10969                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 10970  0588  300E               	movlw	14
 10971  0589  00A0               	movwf	init@port
 10972  058A  3000               	movlw	0
 10973  058B  00A1               	movwf	init@port+1
 10974  058C  3002               	movlw	2
 10975  058D  00A5               	movwf	??_BUTTONS_init
 10976  058E  0825               	movf	??_BUTTONS_init,w
 10977  058F  00A2               	movwf	init@pin
 10978  0590  085A               	movf	_menu,w
 10979  0591  3187  27C9  3185   	fcall	_init
 10980                           
 10981                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 10982  0594  300C               	movlw	12
 10983  0595  0140               	movlb	0	; select bank0
 10984  0596  00A0               	movwf	init@port
 10985  0597  3000               	movlw	0
 10986  0598  00A1               	movwf	init@port+1
 10987  0599  3002               	movlw	2
 10988  059A  00A5               	movwf	??_BUTTONS_init
 10989  059B  0825               	movf	??_BUTTONS_init,w
 10990  059C  00A2               	movwf	init@pin
 10991  059D  085B               	movf	_enter,w
 10992  059E  3187  27C9  3185   	fcall	_init
 10993                           
 10994                           ;buttons.c: 29:     init(down, &PORTC, 0);
 10995  05A1  300E               	movlw	14
 10996  05A2  0140               	movlb	0	; select bank0
 10997  05A3  00A0               	movwf	init@port
 10998  05A4  3000               	movlw	0
 10999  05A5  00A1               	movwf	init@port+1
 11000  05A6  01A2               	clrf	init@pin
 11001  05A7  085C               	movf	_down,w
 11002  05A8  3187  27C9  3185   	fcall	_init
 11003                           
 11004                           ;buttons.c: 30:     init(up, &PORTC, 1);
 11005  05AB  300E               	movlw	14
 11006  05AC  0140               	movlb	0	; select bank0
 11007  05AD  00A0               	movwf	init@port
 11008  05AE  3000               	movlw	0
 11009  05AF  00A1               	movwf	init@port+1
 11010  05B0  01A2               	clrf	init@pin
 11011  05B1  0AA2               	incf	init@pin,f
 11012  05B2  085D               	movf	_up,w
 11013  05B3  3187  27C9         	fcall	_init
 11014  05B5  0008               	return
 11015  05B6                     __end_of_BUTTONS_init:	
 11016                           
 11017                           	psect	text37
 11018  07C9                     __ptext37:	
 11019 ;; *************** function _init *****************
 11020 ;; Defined at:
 11021 ;;		line 14 in file "buttons.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;  btn             1    wreg     PTR struct .
 11024 ;;		 -> buttons(32), NULL(0), 
 11025 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 11026 ;;		 -> PORTA(1), PORTC(1), 
 11027 ;;  pin             1    2[BANK0 ] unsigned char 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  btn             1    4[BANK0 ] PTR struct .
 11030 ;;		 -> buttons(32), NULL(0), 
 11031 ;; Return value:  Size  Location     Type
 11032 ;;                  1    wreg      void 
 11033 ;; Registers used:
 11034 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11040 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11041 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11042 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11043 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11044 ;;Total ram usage:        5 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:    4
 11047 ;; This function calls:
 11048 ;;		Nothing
 11049 ;; This function is called by:
 11050 ;;		_BUTTONS_init
 11051 ;; This function uses a non-reentrant model
 11052 ;;
 11053                           
 11054                           
 11055                           ;psect for function _init
 11056  07C9                     _init:	
 11057                           
 11058                           ;incstack = 0
 11059                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 11060                           ;init@btn stored from wreg
 11061  07C9  0140               	movlb	0	; select bank0
 11062  07CA  00A4               	movwf	init@btn
 11063                           
 11064                           ;buttons.c: 15:     btn->port = port;
 11065  07CB  0824               	movf	init@btn,w
 11066  07CC  0086               	movwf	6
 11067  07CD  3001               	movlw	1	; select bank2/3
 11068  07CE  0087               	movwf	7
 11069  07CF  0820               	movf	init@port,w
 11070  07D0  3FC0               	movwi [0]fsr1
 11071  07D1  0821               	movf	init@port+1,w
 11072  07D2  3FC1               	movwi [1]fsr1
 11073                           
 11074                           ;buttons.c: 16:     btn->pin = pin;
 11075  07D3  0822               	movf	init@pin,w
 11076  07D4  00A3               	movwf	??_init
 11077  07D5  0824               	movf	init@btn,w
 11078  07D6  3E02               	addlw	2
 11079  07D7  0086               	movwf	6
 11080  07D8  3001               	movlw	1	; select bank2/3
 11081  07D9  0087               	movwf	7
 11082  07DA  0823               	movf	??_init,w
 11083  07DB  0081               	movwf	1
 11084                           
 11085                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 11086  07DC  0824               	movf	init@btn,w
 11087  07DD  3E03               	addlw	3
 11088  07DE  0086               	movwf	6
 11089  07DF  3001               	movlw	1	; select bank2/3
 11090  07E0  0087               	movwf	7
 11091  07E1  0181               	clrf	1
 11092                           
 11093                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 11094  07E2  0824               	movf	init@btn,w
 11095  07E3  3E05               	addlw	5
 11096  07E4  0086               	movwf	6
 11097  07E5  3001               	movlw	1	; select bank2/3
 11098  07E6  0087               	movwf	7
 11099  07E7  0181               	clrf	1
 11100  07E8  0008               	return
 11101  07E9                     __end_of_init:	
 11102                           
 11103                           	psect	text38
 11104  029C                     __ptext38:	
 11105 ;; *************** function _BEAT_task *****************
 11106 ;; Defined at:
 11107 ;;		line 57 in file "beat.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;		None
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  offset          2   10[BANK0 ] unsigned short 
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  1    wreg      void 
 11114 ;; Registers used:
 11115 ;;		wreg, status,2, status,0, pclath, cstack
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11122 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11124 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11125 ;;Total ram usage:        4 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:    5
 11128 ;; This function calls:
 11129 ;;		_ADCC_SetUpperThreshold
 11130 ;;		_CLOCK_getTime
 11131 ;;		_TM1650_isEnabled
 11132 ;;		___lwdiv
 11133 ;; This function is called by:
 11134 ;;		_main
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           
 11138                           
 11139                           ;psect for function _BEAT_task
 11140  029C                     _BEAT_task:	
 11141                           
 11142                           ;beat.c: 59:     if (TM1650_isEnabled())
 11143                           
 11144                           ;incstack = 0
 11145                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 11146  029C  318E  2624  3182   	fcall	_TM1650_isEnabled
 11147  029F  3A00               	xorlw	0
 11148  02A0  1D03               	btfss	3,2
 11149  02A1  0008               	return
 11150                           
 11151                           ;beat.c: 62:     if (CLOCK_getTime() - lastRun < delay)
 11152  02A2  318E  2642  3182   	fcall	_CLOCK_getTime
 11153  02A5  0140               	movlb	0	; select bank0
 11154  02A6  084B               	movf	_lastRun,w
 11155  02A7  0220               	subwf	?_CLOCK_getTime,w
 11156  02A8  00A8               	movwf	??_BEAT_task
 11157  02A9  084C               	movf	_lastRun+1,w
 11158  02AA  3B21               	subwfb	?_CLOCK_getTime+1,w
 11159  02AB  00A9               	movwf	??_BEAT_task+1
 11160  02AC  0141               	movlb	1	; select bank1
 11161  02AD  0859               	movf	(_delay+1)^(0+128),w
 11162  02AE  0140               	movlb	0	; select bank0
 11163  02AF  0229               	subwf	??_BEAT_task+1,w
 11164  02B0  1D03               	skipz
 11165  02B1  2AB6               	goto	u2315
 11166  02B2  0141               	movlb	1	; select bank1
 11167  02B3  0858               	movf	_delay^(0+128),w
 11168  02B4  0140               	movlb	0	; select bank0
 11169  02B5  0228               	subwf	??_BEAT_task,w
 11170  02B6                     u2315:	
 11171  02B6  1C03               	btfss	3,0
 11172  02B7  0008               	return
 11173                           
 11174                           ;beat.c: 65:     lastRun = CLOCK_getTime();
 11175  02B8  318E  2642  3182   	fcall	_CLOCK_getTime
 11176  02BB  0140               	movlb	0	; select bank0
 11177  02BC  0821               	movf	?_CLOCK_getTime+1,w
 11178  02BD  00CC               	movwf	_lastRun+1
 11179  02BE  0820               	movf	?_CLOCK_getTime,w
 11180  02BF  00CB               	movwf	_lastRun
 11181                           
 11182                           ;beat.c: 67:     if (thresholdExceeded == 1) {
 11183  02C0  0358               	decf	_thresholdExceeded,w
 11184  02C1  1D03               	btfss	3,2
 11185  02C2  2AC9               	goto	l3935
 11186                           
 11187                           ;beat.c: 71:         thresholdCount++;
 11188  02C3  3001               	movlw	1
 11189  02C4  0141               	movlb	1	; select bank1
 11190  02C5  07BC               	addwf	_thresholdCount^(0+128),f
 11191  02C6  3000               	movlw	0
 11192  02C7  3DBD               	addwfc	(_thresholdCount+1)^(0+128),f
 11193                           
 11194                           ;beat.c: 72:     } else {
 11195  02C8  2AD0               	goto	l3939
 11196  02C9                     l3935:	
 11197                           
 11198                           ;beat.c: 74:         thresholdCount = 0;
 11199  02C9  0141               	movlb	1	; select bank1
 11200  02CA  01BC               	clrf	_thresholdCount^(0+128)
 11201  02CB  01BD               	clrf	(_thresholdCount+1)^(0+128)
 11202                           
 11203                           ;beat.c: 75:         delay = 20;
 11204  02CC  3014               	movlw	20
 11205  02CD  00D8               	movwf	_delay^(0+128)
 11206  02CE  3000               	movlw	0
 11207  02CF  00D9               	movwf	(_delay^(0+128)+1)
 11208  02D0                     l3939:	
 11209                           
 11210                           ;beat.c: 81:     if (thresholdExceeded == 1 && lastDetected == 0) {
 11211  02D0  0140               	movlb	0	; select bank0
 11212  02D1  0358               	decf	_thresholdExceeded,w
 11213  02D2  1D03               	btfss	3,2
 11214  02D3  2B10               	goto	l3957
 11215  02D4  0857               	movf	_lastDetected,w
 11216  02D5  1D03               	btfss	3,2
 11217  02D6  2B10               	goto	l3957
 11218                           
 11219                           ;beat.c: 83:         detected = 1;
 11220  02D7  01D9               	clrf	_detected
 11221  02D8  0AD9               	incf	_detected,f
 11222                           
 11223                           ;beat.c: 86:         delay = 100;
 11224  02D9  3064               	movlw	100
 11225  02DA  0141               	movlb	1	; select bank1
 11226  02DB  00D8               	movwf	_delay^(0+128)
 11227  02DC  3000               	movlw	0
 11228  02DD  00D9               	movwf	(_delay^(0+128)+1)
 11229                           
 11230                           ;beat.c: 89:         time_t offset = CLOCK_getTime() - lastBeat;
 11231  02DE  318E  2642  3182   	fcall	_CLOCK_getTime
 11232  02E1  0140               	movlb	0	; select bank0
 11233  02E2  084D               	movf	_lastBeat,w
 11234  02E3  0220               	subwf	?_CLOCK_getTime,w
 11235  02E4  00AA               	movwf	BEAT_task@offset
 11236  02E5  084E               	movf	_lastBeat+1,w
 11237  02E6  3B21               	subwfb	?_CLOCK_getTime+1,w
 11238  02E7  00AB               	movwf	BEAT_task@offset+1
 11239                           
 11240                           ;beat.c: 91:         lastBeat = CLOCK_getTime();
 11241  02E8  318E  2642  3182   	fcall	_CLOCK_getTime
 11242  02EB  0140               	movlb	0	; select bank0
 11243  02EC  0821               	movf	?_CLOCK_getTime+1,w
 11244  02ED  00CE               	movwf	_lastBeat+1
 11245  02EE  0820               	movf	?_CLOCK_getTime,w
 11246  02EF  00CD               	movwf	_lastBeat
 11247                           
 11248                           ;beat.c: 93:         if (offset < 150)
 11249  02F0  3000               	movlw	0
 11250  02F1  022B               	subwf	BEAT_task@offset+1,w
 11251  02F2  3096               	movlw	150
 11252  02F3  1903               	skipnz
 11253  02F4  022A               	subwf	BEAT_task@offset,w
 11254  02F5  1803               	skipnc
 11255  02F6  2AFD               	goto	l3955
 11256                           
 11257                           ;beat.c: 94:             bpm = 400;
 11258  02F7  3090               	movlw	144
 11259  02F8  0141               	movlb	1	; select bank1
 11260  02F9  00BE               	movwf	_bpm^(0+128)
 11261  02FA  3001               	movlw	1
 11262  02FB  00BF               	movwf	(_bpm^(0+128)+1)
 11263  02FC  2B10               	goto	l3957
 11264  02FD                     l3955:	
 11265                           
 11266                           ;beat.c: 96:             bpm = 60 * 1000 / offset;
 11267  02FD  082B               	movf	BEAT_task@offset+1,w
 11268  02FE  00A1               	movwf	___lwdiv@divisor+1
 11269  02FF  082A               	movf	BEAT_task@offset,w
 11270  0300  00A0               	movwf	___lwdiv@divisor
 11271  0301  3060               	movlw	96
 11272  0302  00A2               	movwf	___lwdiv@dividend
 11273  0303  30EA               	movlw	234
 11274  0304  00A3               	movwf	___lwdiv@dividend+1
 11275  0305  3186  262D  3182   	fcall	___lwdiv
 11276  0308  0140               	movlb	0	; select bank0
 11277  0309  0821               	movf	?___lwdiv+1,w
 11278  030A  0141               	movlb	1	; select bank1
 11279  030B  00BF               	movwf	(_bpm+1)^(0+128)
 11280  030C  0140               	movlb	0	; select bank0
 11281  030D  0820               	movf	?___lwdiv,w
 11282  030E  0141               	movlb	1	; select bank1
 11283  030F  00BE               	movwf	_bpm^(0+128)
 11284  0310                     l3957:	
 11285                           
 11286                           ;beat.c: 102:     lastDetected = thresholdExceeded;
 11287  0310  0140               	movlb	0	; select bank0
 11288  0311  0858               	movf	_thresholdExceeded,w
 11289  0312  00A8               	movwf	??_BEAT_task
 11290  0313  0828               	movf	??_BEAT_task,w
 11291  0314  00D7               	movwf	_lastDetected
 11292                           
 11293                           ;beat.c: 103:     thresholdExceeded = 0;
 11294  0315  01D8               	clrf	_thresholdExceeded
 11295                           
 11296                           ;beat.c: 105:     if (thresholdCount > 3) {
 11297  0316  0141               	movlb	1	; select bank1
 11298  0317  083D               	movf	(_thresholdCount+1)^(0+128),w
 11299  0318  3A80               	xorlw	128
 11300  0319  0140               	movlb	0	; select bank0
 11301  031A  00A8               	movwf	??_BEAT_task
 11302  031B  3080               	movlw	128
 11303  031C  0228               	subwf	??_BEAT_task,w
 11304  031D  1D03               	skipz
 11305  031E  2B22               	goto	u2365
 11306  031F  3004               	movlw	4
 11307  0320  0141               	movlb	1	; select bank1
 11308  0321  023C               	subwf	_thresholdCount^(0+128),w
 11309  0322                     u2365:	
 11310  0322  1C03               	skipc
 11311  0323  2B3B               	goto	l3971
 11312                           
 11313                           ;beat.c: 106:         threshold += 1;
 11314  0324  3001               	movlw	1
 11315  0325  0140               	movlb	0	; select bank0
 11316  0326  07EB               	addwf	_threshold,f
 11317  0327  3000               	movlw	0
 11318  0328  3DEC               	addwfc	_threshold+1,f
 11319                           
 11320                           ;beat.c: 107:         ADCC_SetUpperThreshold(threshold);
 11321  0329  086C               	movf	_threshold+1,w
 11322  032A  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 11323  032B  086B               	movf	_threshold,w
 11324  032C  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 11325  032D  318E  2661  3182   	fcall	_ADCC_SetUpperThreshold
 11326                           
 11327                           ;beat.c: 108:         thresholdCount = 0;
 11328  0330  0141               	movlb	1	; select bank1
 11329  0331  01BC               	clrf	_thresholdCount^(0+128)
 11330  0332  01BD               	clrf	(_thresholdCount+1)^(0+128)
 11331                           
 11332                           ;beat.c: 111:         lastBeat = CLOCK_getTime();
 11333  0333  318E  2642         	fcall	_CLOCK_getTime
 11334  0335  0140               	movlb	0	; select bank0
 11335  0336  0821               	movf	?_CLOCK_getTime+1,w
 11336  0337  00CE               	movwf	_lastBeat+1
 11337  0338  0820               	movf	?_CLOCK_getTime,w
 11338  0339  00CD               	movwf	_lastBeat
 11339                           
 11340                           ;beat.c: 112:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 11341  033A  0008               	return
 11342  033B                     l3971:	
 11343  033B  318E  2642  3182   	fcall	_CLOCK_getTime
 11344  033E  0140               	movlb	0	; select bank0
 11345  033F  084D               	movf	_lastBeat,w
 11346  0340  0220               	subwf	?_CLOCK_getTime,w
 11347  0341  00A8               	movwf	??_BEAT_task
 11348  0342  084E               	movf	_lastBeat+1,w
 11349  0343  3B21               	subwfb	?_CLOCK_getTime+1,w
 11350  0344  00A9               	movwf	??_BEAT_task+1
 11351  0345  3003               	movlw	3
 11352  0346  0229               	subwf	??_BEAT_task+1,w
 11353  0347  30E9               	movlw	233
 11354  0348  1903               	skipnz
 11355  0349  0228               	subwf	??_BEAT_task,w
 11356  034A  1C03               	skipc
 11357  034B  0008               	return
 11358                           
 11359                           ;beat.c: 113:         threshold -= 1;
 11360  034C  3001               	movlw	1
 11361  034D  02EB               	subwf	_threshold,f
 11362  034E  3000               	movlw	0
 11363  034F  3BEC               	subwfb	_threshold+1,f
 11364                           
 11365                           ;beat.c: 114:         ADCC_SetUpperThreshold(threshold);
 11366  0350  086C               	movf	_threshold+1,w
 11367  0351  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 11368  0352  086B               	movf	_threshold,w
 11369  0353  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 11370  0354  318E  2661         	fcall	_ADCC_SetUpperThreshold
 11371  0356  0008               	return
 11372  0357                     __end_of_BEAT_task:	
 11373                           
 11374                           	psect	text39
 11375  062D                     __ptext39:	
 11376 ;; *************** function ___lwdiv *****************
 11377 ;; Defined at:
 11378 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 11379 ;; Parameters:    Size  Location     Type
 11380 ;;  divisor         2    0[BANK0 ] unsigned int 
 11381 ;;  dividend        2    2[BANK0 ] unsigned int 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;  quotient        2    6[BANK0 ] unsigned int 
 11384 ;;  counter         1    5[BANK0 ] unsigned char 
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  2    0[BANK0 ] unsigned int 
 11387 ;; Registers used:
 11388 ;;		wreg, status,2, status,0
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11394 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11395 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11396 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11397 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11398 ;;Total ram usage:        8 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; Hardware stack levels required when called:    4
 11401 ;; This function calls:
 11402 ;;		Nothing
 11403 ;; This function is called by:
 11404 ;;		_TM1650_fastPrintNum
 11405 ;;		_BEAT_task
 11406 ;; This function uses a non-reentrant model
 11407 ;;
 11408                           
 11409                           
 11410                           ;psect for function ___lwdiv
 11411  062D                     ___lwdiv:	
 11412                           
 11413                           ;incstack = 0
 11414                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11415  062D  0140               	movlb	0	; select bank0
 11416  062E  01A6               	clrf	___lwdiv@quotient
 11417  062F  01A7               	clrf	___lwdiv@quotient+1
 11418  0630  0820               	movf	___lwdiv@divisor,w
 11419  0631  0421               	iorwf	___lwdiv@divisor+1,w
 11420  0632  1903               	btfsc	3,2
 11421  0633  2E5D               	goto	l3569
 11422  0634  01A5               	clrf	___lwdiv@counter
 11423  0635  0AA5               	incf	___lwdiv@counter,f
 11424  0636                     l3557:	
 11425  0636  1BA1               	btfsc	___lwdiv@divisor+1,7
 11426  0637  2E42               	goto	l3559
 11427  0638  3001               	movlw	1
 11428  0639                     u2105:	
 11429  0639  35A0               	lslf	___lwdiv@divisor,f
 11430  063A  0DA1               	rlf	___lwdiv@divisor+1,f
 11431  063B  0B89               	decfsz	9,f
 11432  063C  2E39               	goto	u2105
 11433  063D  3001               	movlw	1
 11434  063E  00A4               	movwf	??___lwdiv
 11435  063F  0824               	movf	??___lwdiv,w
 11436  0640  07A5               	addwf	___lwdiv@counter,f
 11437  0641  2E36               	goto	l3557
 11438  0642                     l3559:	
 11439  0642  3001               	movlw	1
 11440  0643                     u2125:	
 11441  0643  35A6               	lslf	___lwdiv@quotient,f
 11442  0644  0DA7               	rlf	___lwdiv@quotient+1,f
 11443  0645  0B89               	decfsz	9,f
 11444  0646  2E43               	goto	u2125
 11445  0647  0821               	movf	___lwdiv@divisor+1,w
 11446  0648  0223               	subwf	___lwdiv@dividend+1,w
 11447  0649  1D03               	skipz
 11448  064A  2E4D               	goto	u2135
 11449  064B  0820               	movf	___lwdiv@divisor,w
 11450  064C  0222               	subwf	___lwdiv@dividend,w
 11451  064D                     u2135:	
 11452  064D  1C03               	skipc
 11453  064E  2E54               	goto	l3565
 11454  064F  0820               	movf	___lwdiv@divisor,w
 11455  0650  02A2               	subwf	___lwdiv@dividend,f
 11456  0651  0821               	movf	___lwdiv@divisor+1,w
 11457  0652  3BA3               	subwfb	___lwdiv@dividend+1,f
 11458  0653  1426               	bsf	___lwdiv@quotient,0
 11459  0654                     l3565:	
 11460  0654  3001               	movlw	1
 11461  0655                     u2145:	
 11462  0655  36A1               	lsrf	___lwdiv@divisor+1,f
 11463  0656  0CA0               	rrf	___lwdiv@divisor,f
 11464  0657  0B89               	decfsz	9,f
 11465  0658  2E55               	goto	u2145
 11466  0659  3001               	movlw	1
 11467  065A  02A5               	subwf	___lwdiv@counter,f
 11468  065B  1D03               	btfss	3,2
 11469  065C  2E42               	goto	l3559
 11470  065D                     l3569:	
 11471  065D  0827               	movf	___lwdiv@quotient+1,w
 11472  065E  00A1               	movwf	?___lwdiv+1
 11473  065F  0826               	movf	___lwdiv@quotient,w
 11474  0660  00A0               	movwf	?___lwdiv
 11475  0661  0008               	return
 11476  0662                     __end_of___lwdiv:	
 11477                           
 11478                           	psect	text40
 11479  0E24                     __ptext40:	
 11480 ;; *************** function _TM1650_isEnabled *****************
 11481 ;; Defined at:
 11482 ;;		line 70 in file "tm1650.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;		None
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;		None
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      _Bool 
 11489 ;; Registers used:
 11490 ;;		wreg
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11500 ;;Total ram usage:        0 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; Hardware stack levels required when called:    4
 11503 ;; This function calls:
 11504 ;;		Nothing
 11505 ;; This function is called by:
 11506 ;;		_BEAT_task
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           
 11511                           ;psect for function _TM1650_isEnabled
 11512  0E24                     _TM1650_isEnabled:	
 11513                           
 11514                           ;tm1650.c: 71:     return isOn;
 11515                           
 11516                           ;incstack = 0
 11517                           ; Regs used in _TM1650_isEnabled: [wreg]
 11518  0E24  0140               	movlb	0	; select bank0
 11519  0E25  085E               	movf	_isOn,w
 11520  0E26  0008               	return
 11521  0E27                     __end_of_TM1650_isEnabled:	
 11522                           
 11523                           	psect	text41
 11524  0E42                     __ptext41:	
 11525 ;; *************** function _CLOCK_getTime *****************
 11526 ;; Defined at:
 11527 ;;		line 17 in file "clock.c"
 11528 ;; Parameters:    Size  Location     Type
 11529 ;;		None
 11530 ;; Auto vars:     Size  Location     Type
 11531 ;;		None
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  2    0[BANK0 ] unsigned short 
 11534 ;; Registers used:
 11535 ;;		wreg
 11536 ;; Tracked objects:
 11537 ;;		On entry : 0/0
 11538 ;;		On exit  : 0/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11544 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11545 ;;Total ram usage:        2 bytes
 11546 ;; Hardware stack levels used:    1
 11547 ;; Hardware stack levels required when called:    4
 11548 ;; This function calls:
 11549 ;;		Nothing
 11550 ;; This function is called by:
 11551 ;;		_BUTTONS_task
 11552 ;;		_CONTROLLER_task
 11553 ;;		_BEAT_task
 11554 ;;		_LED_task
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _CLOCK_getTime
 11560  0E42                     _CLOCK_getTime:	
 11561                           
 11562                           ;clock.c: 18:     return currentTime;
 11563                           
 11564                           ;incstack = 0
 11565                           ; Regs used in _CLOCK_getTime: [wreg]
 11566  0E42  0140               	movlb	0	; select bank0
 11567  0E43  0856               	movf	_currentTime+1,w
 11568  0E44  00A1               	movwf	?_CLOCK_getTime+1
 11569  0E45  0855               	movf	_currentTime,w
 11570  0E46  00A0               	movwf	?_CLOCK_getTime
 11571  0E47  0008               	return
 11572  0E48                     __end_of_CLOCK_getTime:	
 11573                           
 11574                           	psect	text42
 11575  0EFC                     __ptext42:	
 11576 ;; *************** function _BEAT_init *****************
 11577 ;; Defined at:
 11578 ;;		line 31 in file "beat.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;		None
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;		None
 11583 ;; Return value:  Size  Location     Type
 11584 ;;                  1    wreg      void 
 11585 ;; Registers used:
 11586 ;;		wreg, status,2, status,0, pclath, cstack
 11587 ;; Tracked objects:
 11588 ;;		On entry : 0/0
 11589 ;;		On exit  : 0/0
 11590 ;;		Unchanged: 0/0
 11591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11596 ;;Total ram usage:        0 bytes
 11597 ;; Hardware stack levels used:    1
 11598 ;; Hardware stack levels required when called:    5
 11599 ;; This function calls:
 11600 ;;		_ADCC_SetADTIInterruptHandler
 11601 ;;		_ADCC_SetUpperThreshold
 11602 ;;		_ADCC_StartConversion
 11603 ;; This function is called by:
 11604 ;;		_main
 11605 ;; This function uses a non-reentrant model
 11606 ;;
 11607                           
 11608                           
 11609                           ;psect for function _BEAT_init
 11610  0EFC                     _BEAT_init:	
 11611                           
 11612                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 11613                           
 11614                           ;incstack = 0
 11615                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 11616  0EFC  0140               	movlb	0	; select bank0
 11617  0EFD  086C               	movf	_threshold+1,w
 11618  0EFE  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 11619  0EFF  086B               	movf	_threshold,w
 11620  0F00  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 11621  0F01  318E  2661  318E   	fcall	_ADCC_SetUpperThreshold
 11622                           
 11623                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 11624  0F04  3027               	movlw	low _adcThresholdHandler
 11625  0F05  0140               	movlb	0	; select bank0
 11626  0F06  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 11627  0F07  300E               	movlw	high _adcThresholdHandler
 11628  0F08  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 11629  0F09  318E  2658  318E   	fcall	_ADCC_SetADTIInterruptHandler
 11630                           
 11631                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 11632  0F0C  300F               	movlw	15
 11633  0F0D  318E  266A         	fcall	_ADCC_StartConversion
 11634  0F0F  0008               	return
 11635  0F10                     __end_of_BEAT_init:	
 11636                           
 11637                           	psect	text43
 11638  0E6A                     __ptext43:	
 11639 ;; *************** function _ADCC_StartConversion *****************
 11640 ;; Defined at:
 11641 ;;		line 121 in file "mcc_generated_files/adcc.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;  channel         1    wreg     enum E10867
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;  channel         1    0[BANK0 ] enum E10867
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  1    wreg      void 
 11648 ;; Registers used:
 11649 ;;		wreg
 11650 ;; Tracked objects:
 11651 ;;		On entry : 0/0
 11652 ;;		On exit  : 0/0
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11658 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11659 ;;Total ram usage:        1 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:    4
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_BEAT_init
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           
 11670                           ;psect for function _ADCC_StartConversion
 11671  0E6A                     _ADCC_StartConversion:	
 11672                           
 11673                           ;incstack = 0
 11674                           ; Regs used in _ADCC_StartConversion: [wreg]
 11675                           ;ADCC_StartConversion@channel stored from wreg
 11676  0E6A  0140               	movlb	0	; select bank0
 11677  0E6B  00A0               	movwf	ADCC_StartConversion@channel
 11678                           
 11679                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 11680  0E6C  0820               	movf	ADCC_StartConversion@channel,w
 11681  0E6D  0141               	movlb	1	; select bank1
 11682  0E6E  009F               	movwf	31	;volatile
 11683                           
 11684                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 11685  0E6F  0142               	movlb	2	; select bank2
 11686  0E70  1791               	bsf	17,7	;volatile
 11687                           
 11688                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 11689  0E71  1411               	bsf	17,0	;volatile
 11690  0E72  0008               	return
 11691  0E73                     __end_of_ADCC_StartConversion:	
 11692                           
 11693                           	psect	text44
 11694  0E61                     __ptext44:	
 11695 ;; *************** function _ADCC_SetUpperThreshold *****************
 11696 ;; Defined at:
 11697 ;;		line 251 in file "mcc_generated_files/adcc.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;		None
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, status,2
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11711 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11714 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11715 ;;Total ram usage:        2 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; Hardware stack levels required when called:    4
 11718 ;; This function calls:
 11719 ;;		Nothing
 11720 ;; This function is called by:
 11721 ;;		_BEAT_init
 11722 ;;		_BEAT_task
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           
 11727                           ;psect for function _ADCC_SetUpperThreshold
 11728  0E61                     _ADCC_SetUpperThreshold:	
 11729                           
 11730                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 11731                           
 11732                           ;incstack = 0
 11733                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 11734  0E61  0140               	movlb	0	; select bank0
 11735  0E62  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 11736  0E63  0141               	movlb	1	; select bank1
 11737  0E64  008F               	movwf	15	;volatile
 11738                           
 11739                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 11740  0E65  0140               	movlb	0	; select bank0
 11741  0E66  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 11742  0E67  0141               	movlb	1	; select bank1
 11743  0E68  008E               	movwf	14	;volatile
 11744  0E69  0008               	return
 11745  0E6A                     __end_of_ADCC_SetUpperThreshold:	
 11746                           
 11747                           	psect	text45
 11748  0E58                     __ptext45:	
 11749 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 11750 ;; Defined at:
 11751 ;;		line 317 in file "mcc_generated_files/adcc.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11754 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;		None
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  1    wreg      void 
 11759 ;; Registers used:
 11760 ;;		wreg
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11769 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11770 ;;Total ram usage:        2 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; Hardware stack levels required when called:    4
 11773 ;; This function calls:
 11774 ;;		Nothing
 11775 ;; This function is called by:
 11776 ;;		_ADCC_Initialize
 11777 ;;		_BEAT_init
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781                           
 11782                           ;psect for function _ADCC_SetADTIInterruptHandler
 11783  0E58                     _ADCC_SetADTIInterruptHandler:	
 11784                           
 11785                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 11786                           
 11787                           ;incstack = 0
 11788                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 11789  0E58  0140               	movlb	0	; select bank0
 11790  0E59  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 11791  0E5A  0141               	movlb	1	; select bank1
 11792  0E5B  00CB               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128)
 11793  0E5C  0140               	movlb	0	; select bank0
 11794  0E5D  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 11795  0E5E  0141               	movlb	1	; select bank1
 11796  0E5F  00CA               	movwf	_ADCC_ADTI_InterruptHandler^(0+128)
 11797  0E60  0008               	return
 11798  0E61                     __end_of_ADCC_SetADTIInterruptHandler:	
 11799                           
 11800                           	psect	intentry
 11801  0004                     __pintentry:	
 11802 ;; *************** function _INTERRUPT_InterruptManager *****************
 11803 ;; Defined at:
 11804 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;		None
 11807 ;; Auto vars:     Size  Location     Type
 11808 ;;		None
 11809 ;; Return value:  Size  Location     Type
 11810 ;;                  1    wreg      void 
 11811 ;; Registers used:
 11812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11813 ;; Tracked objects:
 11814 ;;		On entry : 0/0
 11815 ;;		On exit  : 0/0
 11816 ;;		Unchanged: 0/0
 11817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11822 ;;Total ram usage:        0 bytes
 11823 ;; Hardware stack levels used:    1
 11824 ;; Hardware stack levels required when called:    3
 11825 ;; This function calls:
 11826 ;;		Absolute function
 11827 ;;		_ADCC_ThresholdISR
 11828 ;;		_DMX_ISR
 11829 ;;		_EUSART1_Receive_ISR
 11830 ;;		_EUSART1_Transmit_ISR
 11831 ;;		_I2C1_BusCollisionISR
 11832 ;;		_I2C1_ISR
 11833 ;;		_TMR0_ISR
 11834 ;; This function is called by:
 11835 ;;		Interrupt level 1
 11836 ;; This function uses a non-reentrant model
 11837 ;;
 11838                           
 11839  0004                     _INTERRUPT_InterruptManager:	
 11840                           
 11841                           ;incstack = 0
 11842  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11843                           
 11844                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11845  0005  3180               	pagesel	$
 11846                           
 11847                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 11848  0006  014E               	movlb	14	; select bank14
 11849  0007  1A96               	btfsc	22,5	;volatile
 11850  0008  1E8C               	btfss	12,5	;volatile
 11851  0009  280E               	goto	i1l280
 11852                           
 11853                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 11854  000A  318E  26DE  3180   	fcall	_TMR0_ISR
 11855                           
 11856                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 11857  000D  2837               	goto	i1l294
 11858  000E                     i1l280:	
 11859                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 11860                           
 11861  000E  1F0B               	btfss	11,6	;volatile
 11862  000F  2837               	goto	i1l294
 11863                           
 11864                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 11865  0010  1899               	btfsc	25,1	;volatile
 11866  0011  1C8F               	btfss	15,1	;volatile
 11867  0012  2817               	goto	i1l283
 11868                           
 11869                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 11870  0013  318E  2621  3180   	fcall	_I2C1_BusCollisionISR
 11871                           
 11872                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 11873  0016  2837               	goto	i1l294
 11874  0017                     i1l283:	
 11875                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 11876                           
 11877  0017  1819               	btfsc	25,0	;volatile
 11878  0018  1C0F               	btfss	15,0	;volatile
 11879  0019  281E               	goto	i1l285
 11880                           
 11881                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 11882  001A  3180  2089  3180   	fcall	_I2C1_ISR
 11883                           
 11884                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 11885  001D  2837               	goto	i1l294
 11886  001E                     i1l285:	
 11887                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 11888                           
 11889  001E  1A19               	btfsc	25,4	;volatile
 11890  001F  1E0F               	btfss	15,4	;volatile
 11891  0020  2828               	goto	i1l287
 11892                           
 11893                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 11894  0021  0141               	movlb	1	; select bank1
 11895  0022  0857               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128),w
 11896  0023  008A               	movwf	10
 11897  0024  0856               	movf	_EUSART1_TxDefaultInterruptHandler^(0+128),w
 11898  0025  000A               	callw
 11899  0026  3180               	pagesel	$
 11900                           
 11901                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 11902  0027  2837               	goto	i1l294
 11903  0028                     i1l287:	
 11904                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 11905                           
 11906  0028  1A99               	btfsc	25,5	;volatile
 11907  0029  1E8F               	btfss	15,5	;volatile
 11908  002A  2832               	goto	i1l289
 11909                           
 11910                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 11911  002B  0141               	movlb	1	; select bank1
 11912  002C  0855               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
 11913  002D  008A               	movwf	10
 11914  002E  0854               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
 11915  002F  000A               	callw
 11916  0030  3180               	pagesel	$
 11917                           
 11918                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 11919  0031  2837               	goto	i1l294
 11920  0032                     i1l289:	
 11921                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 11922                           
 11923  0032  1897               	btfsc	23,1	;volatile
 11924  0033  1C8D               	btfss	13,1	;volatile
 11925  0034  2837               	goto	i1l294
 11926                           
 11927                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 11928  0035  318E  26D1         	fcall	_ADCC_ThresholdISR
 11929  0037                     i1l294:	
 11930                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 11931                           
 11932  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11933  0038  0009               	retfie
 11934  0039                     __end_of_INTERRUPT_InterruptManager:	
 11935                           
 11936                           	psect	text47
 11937  0EDE                     __ptext47:	
 11938 ;; *************** function _TMR0_ISR *****************
 11939 ;; Defined at:
 11940 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;		None
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1    wreg      void 
 11947 ;; Registers used:
 11948 ;;		wreg, status,2, status,0, pclath, cstack
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11958 ;;Total ram usage:        0 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; Hardware stack levels required when called:    1
 11961 ;; This function calls:
 11962 ;;		Absolute function
 11963 ;;		_CLOCK_timerCallback
 11964 ;;		_TMR0_DefaultInterruptHandler
 11965 ;; This function is called by:
 11966 ;;		_INTERRUPT_InterruptManager
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970                           
 11971                           ;psect for function _TMR0_ISR
 11972  0EDE                     _TMR0_ISR:	
 11973                           
 11974                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 11975                           
 11976                           ;incstack = 0
 11977                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11978  0EDE  014E               	movlb	14	; select bank14
 11979  0EDF  128C               	bcf	12,5	;volatile
 11980                           
 11981                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 11982  0EE0  0141               	movlb	1	; select bank1
 11983  0EE1  084C               	movf	_TMR0_InterruptHandler^(0+128),w
 11984  0EE2  044D               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 11985  0EE3  1903               	btfsc	3,2
 11986  0EE4  0008               	return
 11987                           
 11988                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 11989  0EE5  084D               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 11990  0EE6  008A               	movwf	10
 11991  0EE7  084C               	movf	_TMR0_InterruptHandler^(0+128),w
 11992  0EE8  000A               	callw
 11993  0EE9  318E               	pagesel	$
 11994  0EEA  0008               	return
 11995  0EEB                     __end_of_TMR0_ISR:	
 11996                           
 11997                           	psect	text48
 11998  0E3C                     __ptext48:	
 11999 ;; *************** function _CLOCK_timerCallback *****************
 12000 ;; Defined at:
 12001 ;;		line 21 in file "clock.c"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;		None
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;		None
 12006 ;; Return value:  Size  Location     Type
 12007 ;;                  1    wreg      void 
 12008 ;; Registers used:
 12009 ;;		wreg
 12010 ;; Tracked objects:
 12011 ;;		On entry : 0/0
 12012 ;;		On exit  : 0/0
 12013 ;;		Unchanged: 0/0
 12014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12019 ;;Total ram usage:        0 bytes
 12020 ;; Hardware stack levels used:    1
 12021 ;; This function calls:
 12022 ;;		Nothing
 12023 ;; This function is called by:
 12024 ;;		_CLOCK_init
 12025 ;;		_TMR0_ISR
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           
 12030                           ;psect for function _CLOCK_timerCallback
 12031  0E3C                     _CLOCK_timerCallback:	
 12032                           
 12033                           ;clock.c: 22:     currentTime++;
 12034                           
 12035                           ;incstack = 0
 12036                           ; Regs used in _CLOCK_timerCallback: [wreg]
 12037  0E3C  3001               	movlw	1
 12038  0E3D  0140               	movlb	0	; select bank0
 12039  0E3E  07D5               	addwf	_currentTime,f
 12040  0E3F  3000               	movlw	0
 12041  0E40  3DD6               	addwfc	_currentTime+1,f
 12042  0E41  0008               	return
 12043  0E42                     __end_of_CLOCK_timerCallback:	
 12044                           
 12045                           	psect	text49
 12046  0E1D                     __ptext49:	
 12047 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 12048 ;; Defined at:
 12049 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 12050 ;; Parameters:    Size  Location     Type
 12051 ;;		None
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;		None
 12054 ;; Return value:  Size  Location     Type
 12055 ;;                  1    wreg      void 
 12056 ;; Registers used:
 12057 ;;		None
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12067 ;;Total ram usage:        0 bytes
 12068 ;; Hardware stack levels used:    1
 12069 ;; This function calls:
 12070 ;;		Nothing
 12071 ;; This function is called by:
 12072 ;;		_TMR0_Initialize
 12073 ;;		_TMR0_ISR
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           
 12078                           ;psect for function _TMR0_DefaultInterruptHandler
 12079  0E1D                     _TMR0_DefaultInterruptHandler:	
 12080                           
 12081                           ;incstack = 0
 12082                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 12083  0E1D  0008               	return
 12084  0E1E                     __end_of_TMR0_DefaultInterruptHandler:	
 12085                           
 12086                           	psect	text50
 12087  0089                     __ptext50:	
 12088 ;; *************** function _I2C1_ISR *****************
 12089 ;; Defined at:
 12090 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;		None
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;		None
 12095 ;; Return value:  Size  Location     Type
 12096 ;;                  1    wreg      void 
 12097 ;; Registers used:
 12098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12099 ;; Tracked objects:
 12100 ;;		On entry : 0/0
 12101 ;;		On exit  : 0/0
 12102 ;;		Unchanged: 0/0
 12103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12106 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12108 ;;Total ram usage:        4 bytes
 12109 ;; Hardware stack levels used:    1
 12110 ;; Hardware stack levels required when called:    1
 12111 ;; This function calls:
 12112 ;;		_I2C1_FunctionComplete
 12113 ;;		_I2C1_Stop
 12114 ;; This function is called by:
 12115 ;;		_INTERRUPT_InterruptManager
 12116 ;; This function uses a non-reentrant model
 12117 ;;
 12118                           
 12119                           
 12120                           ;psect for function _I2C1_ISR
 12121  0089                     _I2C1_ISR:	
 12122                           
 12123                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 12124                           
 12125                           ;incstack = 0
 12126                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12127  0089  014E               	movlb	14	; select bank14
 12128  008A  100F               	bcf	15,0	;volatile
 12129                           
 12130                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 12131  008B  0143               	movlb	3	; select bank3
 12132  008C  1F90               	btfss	16,7	;volatile
 12133  008D  29A5               	goto	i1l3193
 12134                           
 12135                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 12136  008E  1390               	bcf	16,7	;volatile
 12137                           
 12138                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 12139  008F  0140               	movlb	0	; select bank0
 12140  0090  01E5               	clrf	_i2c1_state
 12141                           
 12142                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 12143  0091  0862               	movf	_p_i2c1_current,w
 12144  0092  3E02               	addlw	2
 12145  0093  0086               	movwf	6
 12146  0094  0187               	clrf	7
 12147  0095  0801               	movf	1,w
 12148  0096  0086               	movwf	6
 12149  0097  0187               	clrf	7
 12150  0098  0181               	clrf	1
 12151  0099  0A81               	incf	1,f
 12152                           
 12153                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 12154  009A  01E2               	clrf	_p_i2c1_current
 12155  009B  0008               	return
 12156  009C                     i1l402:	
 12157                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 12158                           
 12159                           
 12160                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 12161  009C  18C8               	btfsc	_i2c1_object+2,1
 12162  009D  0008               	return
 12163                           
 12164                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 12165  009E  0847               	movf	low ((_i2c1_object| 0+1)),w
 12166  009F  00F8               	movwf	??_I2C1_ISR
 12167  00A0  0878               	movf	??_I2C1_ISR,w
 12168  00A1  00E2               	movwf	_p_i2c1_current
 12169                           
 12170                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 12171  00A2  0847               	movf	low ((_i2c1_object| 0+1)),w
 12172  00A3  0086               	movwf	6
 12173  00A4  0187               	clrf	7
 12174  00A5  0801               	movf	1,w
 12175  00A6  00F8               	movwf	??_I2C1_ISR
 12176  00A7  0878               	movf	??_I2C1_ISR,w
 12177  00A8  00E4               	movwf	_i2c1_trb_count
 12178                           
 12179                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 12180  00A9  0847               	movf	low ((_i2c1_object| 0+1)),w
 12181  00AA  0086               	movwf	6
 12182  00AB  0187               	clrf	7
 12183  00AC  3F41               	moviw [1]fsr1
 12184  00AD  00E3               	movwf	_p_i2c1_trb_current
 12185                           
 12186                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 12187  00AE  3003               	movlw	3
 12188  00AF  00F8               	movwf	??_I2C1_ISR
 12189  00B0  0878               	movf	??_I2C1_ISR,w
 12190  00B1  07C7               	addwf	low ((_i2c1_object| 0+1)),f
 12191                           
 12192                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 12193  00B2  0847               	movf	low ((_i2c1_object| 0+1)),w
 12194  00B3  3A6B               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 12195  00B4  1D03               	skipz
 12196  00B5  28BA               	goto	i1l3081
 12197                           
 12198                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 12199  00B6  3068               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12200  00B7  00F8               	movwf	??_I2C1_ISR
 12201  00B8  0878               	movf	??_I2C1_ISR,w
 12202  00B9  00C7               	movwf	low ((_i2c1_object| 0+1))
 12203  00BA                     i1l3081:	
 12204                           
 12205                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 12206  00BA  1048               	bcf	_i2c1_object+2,0
 12207                           
 12208                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 12209  00BB  0847               	movf	low ((_i2c1_object| 0+1)),w
 12210  00BC  0646               	xorwf	_i2c1_object,w
 12211  00BD  1903               	btfsc	3,2
 12212                           
 12213                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 12214  00BE  14C8               	bsf	_i2c1_object+2,1
 12215                           
 12216                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 12217                           
 12218                           ;mcc_generated_files/i2c1.c: 290:                 }
 12219  00BF  0143               	movlb	3	; select bank3
 12220  00C0  1411               	bsf	17,0	;volatile
 12221  00C1                     i1l3085:	
 12222                           
 12223                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 12224  00C1  3002               	movlw	2
 12225  00C2  00F8               	movwf	??_I2C1_ISR
 12226  00C3  0878               	movf	??_I2C1_ISR,w
 12227  00C4  0140               	movlb	0	; select bank0
 12228  00C5  00E5               	movwf	_i2c1_state
 12229  00C6  0008               	return
 12230  00C7                     i1l407:	
 12231                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 12232                           
 12233  00C7  294E               	goto	i1l428
 12234  00C8                     i1l408:	
 12235                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 12236                           
 12237                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 12238                           
 12239                           
 12240                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 12241  00C8  0143               	movlb	3	; select bank3
 12242  00C9  1F11               	btfss	17,6	;volatile
 12243  00CA  28D4               	goto	i1l3093
 12244                           
 12245                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 12246  00CB  3001               	movlw	1
 12247  00CC  00F8               	movwf	??_I2C1_ISR
 12248  00CD  0878               	movf	??_I2C1_ISR,w
 12249  00CE  0140               	movlb	0	; select bank0
 12250  00CF  07CA               	addwf	_i2c1_object+4,f
 12251                           
 12252                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12253  00D0  3004               	movlw	4
 12254  00D1  318F  2779         	fcall	_I2C1_Stop
 12255                           
 12256                           ;mcc_generated_files/i2c1.c: 319:             }
 12257  00D3  0008               	return
 12258  00D4                     i1l3093:	
 12259                           
 12260                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 12261  00D4  0875               	movf	I2C1_ISR@i2c_address+1,w
 12262  00D5  00F9               	movwf	??_I2C1_ISR+1
 12263  00D6  0874               	movf	I2C1_ISR@i2c_address,w
 12264  00D7  00F8               	movwf	??_I2C1_ISR
 12265  00D8  36F9               	lsrf	??_I2C1_ISR+1,f
 12266  00D9  0CF8               	rrf	??_I2C1_ISR,f
 12267  00DA  0878               	movf	??_I2C1_ISR,w
 12268  00DB  008C               	movwf	12	;volatile
 12269                           
 12270                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 12271  00DC  1C74               	btfss	I2C1_ISR@i2c_address,0
 12272  00DD  28E4               	goto	i1l3099
 12273                           
 12274                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 12275  00DE  300B               	movlw	11
 12276  00DF  00F8               	movwf	??_I2C1_ISR
 12277  00E0  0878               	movf	??_I2C1_ISR,w
 12278  00E1  0140               	movlb	0	; select bank0
 12279  00E2  00E5               	movwf	_i2c1_state
 12280                           
 12281                           ;mcc_generated_files/i2c1.c: 331:                 }
 12282  00E3  0008               	return
 12283  00E4                     i1l3099:	
 12284                           
 12285                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 12286  00E4  3003               	movlw	3
 12287  00E5  00F8               	movwf	??_I2C1_ISR
 12288  00E6  0878               	movf	??_I2C1_ISR,w
 12289  00E7  0140               	movlb	0	; select bank0
 12290  00E8  00E5               	movwf	_i2c1_state
 12291  00E9  0008               	return
 12292  00EA                     i1l413:	
 12293                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 12294                           
 12295                           
 12296                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 12297  00EA  0143               	movlb	3	; select bank3
 12298  00EB  1F11               	btfss	17,6	;volatile
 12299  00EC  28F6               	goto	i1l414
 12300                           
 12301                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 12302  00ED  3001               	movlw	1
 12303  00EE  00F8               	movwf	??_I2C1_ISR
 12304  00EF  0878               	movf	??_I2C1_ISR,w
 12305  00F0  0140               	movlb	0	; select bank0
 12306  00F1  07CA               	addwf	_i2c1_object+4,f
 12307                           
 12308                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12309  00F2  3004               	movlw	4
 12310  00F3  318F  2779         	fcall	_I2C1_Stop
 12311                           
 12312                           ;mcc_generated_files/i2c1.c: 347:             }
 12313  00F5  0008               	return
 12314  00F6                     i1l414:	
 12315                           ;mcc_generated_files/i2c1.c: 348:             else
 12316                           
 12317                           
 12318                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 12319  00F6  1491               	bsf	17,1	;volatile
 12320                           
 12321                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 12322  00F7  0875               	movf	I2C1_ISR@i2c_address+1,w
 12323  00F8  00F9               	movwf	??_I2C1_ISR+1
 12324  00F9  0874               	movf	I2C1_ISR@i2c_address,w
 12325  00FA  00F8               	movwf	??_I2C1_ISR
 12326  00FB  0879               	movf	??_I2C1_ISR+1,w
 12327  00FC  00F8               	movwf	??_I2C1_ISR
 12328  00FD  01F9               	clrf	??_I2C1_ISR+1
 12329  00FE  3006               	movlw	6
 12330  00FF  0578               	andwf	??_I2C1_ISR,w
 12331  0100  00FA               	movwf	??_I2C1_ISR+2
 12332  0101  3000               	movlw	0
 12333  0102  0579               	andwf	??_I2C1_ISR+1,w
 12334  0103  00FB               	movwf	??_I2C1_ISR+3
 12335  0104  30F0               	movlw	240
 12336  0105  047A               	iorwf	??_I2C1_ISR+2,w
 12337  0106  00F4               	movwf	I2C1_ISR@i2c_address
 12338  0107  3000               	movlw	0
 12339  0108  047B               	iorwf	??_I2C1_ISR+3,w
 12340  0109  00F5               	movwf	I2C1_ISR@i2c_address+1
 12341                           
 12342                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 12343  010A  1474               	bsf	I2C1_ISR@i2c_address,0
 12344                           
 12345                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 12346  010B  0140               	movlb	0	; select bank0
 12347  010C  01DF               	clrf	I2C1_ISR@i2c_10bit_address_restart
 12348  010D  0ADF               	incf	I2C1_ISR@i2c_10bit_address_restart,f
 12349  010E  28C1               	goto	i1l3085
 12350  010F                     i1l3113:	
 12351                           
 12352                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 12353  010F  035F               	decf	I2C1_ISR@i2c_10bit_address_restart,w
 12354  0110  1903               	btfsc	3,2
 12355  0111  2923               	goto	i1l3133
 12356                           
 12357                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 12358  0112  0863               	movf	_p_i2c1_trb_current,w
 12359  0113  0086               	movwf	6
 12360  0114  0187               	clrf	7
 12361  0115  3F40               	moviw [0]fsr1
 12362  0116  00F4               	movwf	I2C1_ISR@i2c_address
 12363  0117  3F41               	moviw [1]fsr1
 12364  0118  00F5               	movwf	I2C1_ISR@i2c_address+1
 12365                           
 12366                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 12367  0119  0863               	movf	_p_i2c1_trb_current,w
 12368  011A  0086               	movwf	6
 12369  011B  0187               	clrf	7
 12370  011C  3F43               	moviw [3]fsr1
 12371  011D  00E1               	movwf	I2C1_ISR@pi2c_buf_ptr
 12372                           
 12373                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 12374  011E  0863               	movf	_p_i2c1_trb_current,w
 12375  011F  0086               	movwf	6
 12376  0120  0187               	clrf	7
 12377  0121  3F42               	moviw [2]fsr1
 12378  0122  00E0               	movwf	I2C1_ISR@i2c_bytes_left
 12379  0123                     i1l3133:	
 12380                           
 12381                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 12382  0123  0874               	movf	I2C1_ISR@i2c_address,w
 12383  0124  0143               	movlb	3	; select bank3
 12384  0125  008C               	movwf	12	;volatile
 12385                           
 12386                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 12387  0126  1C74               	btfss	I2C1_ISR@i2c_address,0
 12388  0127  28E4               	goto	i1l3099
 12389                           
 12390                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 12391  0128  3005               	movlw	5
 12392  0129  00F8               	movwf	??_I2C1_ISR
 12393  012A  0878               	movf	??_I2C1_ISR,w
 12394  012B  0140               	movlb	0	; select bank0
 12395  012C  00E5               	movwf	_i2c1_state
 12396                           
 12397                           ;mcc_generated_files/i2c1.c: 419:                 }
 12398  012D  0008               	return
 12399  012E                     i1l424:	
 12400                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 12401                           
 12402                           
 12403                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 12404  012E  0143               	movlb	3	; select bank3
 12405  012F  1F11               	btfss	17,6	;volatile
 12406  0130  293C               	goto	i1l3147
 12407                           
 12408                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 12409  0131  3001               	movlw	1
 12410  0132  00F8               	movwf	??_I2C1_ISR
 12411  0133  0878               	movf	??_I2C1_ISR,w
 12412  0134  0140               	movlb	0	; select bank0
 12413  0135  07CA               	addwf	_i2c1_object+4,f
 12414                           
 12415                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 12416  0136  0143               	movlb	3	; select bank3
 12417  0137  1311               	bcf	17,6	;volatile
 12418                           
 12419                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 12420  0138  3005               	movlw	5
 12421  0139  318F  2779         	fcall	_I2C1_Stop
 12422                           
 12423                           ;mcc_generated_files/i2c1.c: 442:             }
 12424  013B  0008               	return
 12425  013C                     i1l3147:	
 12426                           
 12427                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 12428  013C  3001               	movlw	1
 12429  013D  0140               	movlb	0	; select bank0
 12430  013E  02E0               	subwf	I2C1_ISR@i2c_bytes_left,f
 12431  013F  0A60               	incf	I2C1_ISR@i2c_bytes_left,w
 12432  0140  1D03               	btfss	3,2
 12433  0141  2951               	goto	i1l3155
 12434                           
 12435                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 12436  0142  3004               	movlw	4
 12437  0143  00F8               	movwf	??_I2C1_ISR
 12438  0144  0878               	movf	??_I2C1_ISR,w
 12439  0145  07E3               	addwf	_p_i2c1_trb_current,f
 12440                           
 12441                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 12442  0146  3001               	movlw	1
 12443  0147  02E4               	subwf	_i2c1_trb_count,f
 12444  0148  1D03               	btfss	3,2
 12445  0149  294E               	goto	i1l428
 12446                           
 12447                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12448  014A  3000               	movlw	0
 12449  014B  318F  2779         	fcall	_I2C1_Stop
 12450                           
 12451                           ;mcc_generated_files/i2c1.c: 457:                     }
 12452  014D  0008               	return
 12453  014E                     i1l428:	
 12454                           ;mcc_generated_files/i2c1.c: 458:                     else
 12455                           
 12456                           
 12457                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 12458  014E  0143               	movlb	3	; select bank3
 12459  014F  1491               	bsf	17,1	;volatile
 12460  0150  28C1               	goto	i1l3085
 12461  0151                     i1l3155:	
 12462                           
 12463                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 12464  0151  0861               	movf	I2C1_ISR@pi2c_buf_ptr,w
 12465  0152  0086               	movwf	6
 12466  0153  0187               	clrf	7
 12467  0154  0801               	movf	1,w
 12468  0155  0143               	movlb	3	; select bank3
 12469  0156  008C               	movwf	12	;volatile
 12470  0157  3001               	movlw	1
 12471  0158  00F8               	movwf	??_I2C1_ISR
 12472  0159  0878               	movf	??_I2C1_ISR,w
 12473  015A  0140               	movlb	0	; select bank0
 12474  015B  07E1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 12475  015C  0008               	return
 12476  015D                     i1l431:	
 12477                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 12478                           
 12479                           
 12480                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 12481  015D  0143               	movlb	3	; select bank3
 12482  015E  1F11               	btfss	17,6	;volatile
 12483  015F  296B               	goto	i1l432
 12484                           
 12485                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 12486  0160  3001               	movlw	1
 12487  0161  00F8               	movwf	??_I2C1_ISR
 12488  0162  0878               	movf	??_I2C1_ISR,w
 12489  0163  0140               	movlb	0	; select bank0
 12490  0164  07CA               	addwf	_i2c1_object+4,f
 12491                           
 12492                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12493  0165  3004               	movlw	4
 12494  0166  318F  2779         	fcall	_I2C1_Stop
 12495                           
 12496                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 12497  0168  0143               	movlb	3	; select bank3
 12498  0169  1311               	bcf	17,6	;volatile
 12499                           
 12500                           ;mcc_generated_files/i2c1.c: 495:             }
 12501  016A  0008               	return
 12502  016B                     i1l432:	
 12503                           ;mcc_generated_files/i2c1.c: 496:             else
 12504                           
 12505                           
 12506                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 12507  016B  1591               	bsf	17,3	;volatile
 12508                           
 12509                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 12510  016C  3008               	movlw	8
 12511  016D  00F8               	movwf	??_I2C1_ISR
 12512  016E  0878               	movf	??_I2C1_ISR,w
 12513  016F  0140               	movlb	0	; select bank0
 12514  0170  00E5               	movwf	_i2c1_state
 12515  0171  0008               	return
 12516  0172                     i1l3167:	
 12517                           
 12518                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 12519  0172  3008               	movlw	8
 12520  0173  00F8               	movwf	??_I2C1_ISR
 12521  0174  0878               	movf	??_I2C1_ISR,w
 12522  0175  00E5               	movwf	_i2c1_state
 12523                           
 12524                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 12525  0176  0143               	movlb	3	; select bank3
 12526  0177  1591               	bsf	17,3	;volatile
 12527                           
 12528                           ;mcc_generated_files/i2c1.c: 513:             break;
 12529  0178  0008               	return
 12530  0179                     i1l3171:	
 12531                           
 12532                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 12533  0179  0143               	movlb	3	; select bank3
 12534  017A  080C               	movf	12,w	;volatile
 12535  017B  00F8               	movwf	??_I2C1_ISR
 12536  017C  0140               	movlb	0	; select bank0
 12537  017D  0861               	movf	I2C1_ISR@pi2c_buf_ptr,w
 12538  017E  0086               	movwf	6
 12539  017F  0187               	clrf	7
 12540  0180  0878               	movf	??_I2C1_ISR,w
 12541  0181  0081               	movwf	1
 12542  0182  3001               	movlw	1
 12543  0183  00F8               	movwf	??_I2C1_ISR
 12544  0184  0878               	movf	??_I2C1_ISR,w
 12545  0185  07E1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 12546                           
 12547                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 12548  0186  3001               	movlw	1
 12549  0187  02E0               	subwf	I2C1_ISR@i2c_bytes_left,f
 12550  0188  1903               	btfsc	3,2
 12551  0189  2992               	goto	i1l436
 12552                           
 12553                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 12554  018A  0143               	movlb	3	; select bank3
 12555  018B  1291               	bcf	17,5	;volatile
 12556                           
 12557                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 12558  018C  3006               	movlw	6
 12559  018D  00F8               	movwf	??_I2C1_ISR
 12560  018E  0878               	movf	??_I2C1_ISR,w
 12561  018F  0140               	movlb	0	; select bank0
 12562  0190  00E5               	movwf	_i2c1_state
 12563                           
 12564                           ;mcc_generated_files/i2c1.c: 532:             }
 12565  0191  2996               	goto	i1l3183
 12566  0192                     i1l436:	
 12567                           ;mcc_generated_files/i2c1.c: 533:             else
 12568                           
 12569                           
 12570                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 12571  0192  0143               	movlb	3	; select bank3
 12572  0193  1691               	bsf	17,5	;volatile
 12573                           
 12574                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 12575  0194  318E  26EB         	fcall	_I2C1_FunctionComplete
 12576  0196                     i1l3183:	
 12577                           
 12578                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 12579  0196  0143               	movlb	3	; select bank3
 12580  0197  1611               	bsf	17,4	;volatile
 12581                           
 12582                           ;mcc_generated_files/i2c1.c: 545:             break;
 12583  0198  0008               	return
 12584  0199                     i1l3185:	
 12585                           
 12586                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12587  0199  3000               	movlw	0
 12588  019A  318F  2779         	fcall	_I2C1_Stop
 12589                           
 12590                           ;mcc_generated_files/i2c1.c: 552:             break;
 12591  019C  0008               	return
 12592  019D                     i1l3187:	
 12593                           
 12594                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 12595  019D  3001               	movlw	1
 12596  019E  00F8               	movwf	??_I2C1_ISR
 12597  019F  0878               	movf	??_I2C1_ISR,w
 12598  01A0  07CA               	addwf	_i2c1_object+4,f
 12599                           
 12600                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 12601  01A1  3006               	movlw	6
 12602  01A2  318F  2779         	fcall	_I2C1_Stop
 12603                           
 12604                           ;mcc_generated_files/i2c1.c: 560:             break;
 12605  01A4  0008               	return
 12606  01A5                     i1l3193:	
 12607  01A5  0140               	movlb	0	; select bank0
 12608  01A6  0865               	movf	_i2c1_state,w
 12609  01A7  00F8               	movwf	??_I2C1_ISR
 12610  01A8  01F9               	clrf	??_I2C1_ISR+1
 12611                           
 12612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12613                           ; Switch size 1, requested type "simple"
 12614                           ; Number of cases is 1, Range of values is 0 to 0
 12615                           ; switch strategies available:
 12616                           ; Name         Instructions Cycles
 12617                           ; simple_byte            4     3 (average)
 12618                           ; direct_byte            8     6 (fixed)
 12619                           ; jumptable            260     6 (fixed)
 12620                           ;	Chosen strategy is simple_byte
 12621  01A9  0879               	movf	??_I2C1_ISR+1,w
 12622  01AA  3A00               	xorlw	0	; case 0
 12623  01AB  1903               	skipnz
 12624  01AC  29AE               	goto	i1l4119
 12625  01AD  299D               	goto	i1l3187
 12626  01AE                     i1l4119:	
 12627                           
 12628                           ; Switch size 1, requested type "simple"
 12629                           ; Number of cases is 11, Range of values is 0 to 11
 12630                           ; switch strategies available:
 12631                           ; Name         Instructions Cycles
 12632                           ; direct_byte           30     6 (fixed)
 12633                           ; simple_byte           34    18 (average)
 12634                           ; jumptable            260     6 (fixed)
 12635                           ;	Chosen strategy is simple_byte
 12636  01AE  0878               	movf	??_I2C1_ISR,w
 12637  01AF  3A00               	xorlw	0	; case 0
 12638  01B0  1903               	skipnz
 12639  01B1  289C               	goto	i1l402
 12640  01B2  3A01               	xorlw	1	; case 1
 12641  01B3  1903               	skipnz
 12642  01B4  28C7               	goto	i1l407
 12643  01B5  3A03               	xorlw	3	; case 2
 12644  01B6  1903               	skipnz
 12645  01B7  290F               	goto	i1l3113
 12646  01B8  3A01               	xorlw	1	; case 3
 12647  01B9  1903               	skipnz
 12648  01BA  292E               	goto	i1l424
 12649  01BB  3A07               	xorlw	7	; case 4
 12650  01BC  1903               	skipnz
 12651  01BD  2999               	goto	i1l3185
 12652  01BE  3A01               	xorlw	1	; case 5
 12653  01BF  1903               	skipnz
 12654  01C0  295D               	goto	i1l431
 12655  01C1  3A03               	xorlw	3	; case 6
 12656  01C2  1903               	skipnz
 12657  01C3  2972               	goto	i1l3167
 12658  01C4  3A01               	xorlw	1	; case 7
 12659  01C5  1903               	skipnz
 12660  01C6  2999               	goto	i1l3185
 12661  01C7  3A0F               	xorlw	15	; case 8
 12662  01C8  1903               	skipnz
 12663  01C9  2979               	goto	i1l3171
 12664  01CA  3A02               	xorlw	2	; case 10
 12665  01CB  1903               	skipnz
 12666  01CC  28C8               	goto	i1l408
 12667  01CD  3A01               	xorlw	1	; case 11
 12668  01CE  1903               	skipnz
 12669  01CF  28EA               	goto	i1l413
 12670  01D0  299D               	goto	i1l3187
 12671  01D1  0008               	return
 12672  01D2                     __end_of_I2C1_ISR:	
 12673                           
 12674                           	psect	text51
 12675  0F79                     __ptext51:	
 12676 ;; *************** function _I2C1_Stop *****************
 12677 ;; Defined at:
 12678 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;  completion_c    1    wreg     enum E10866
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;  completion_c    1    1[COMMON] enum E10866
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  1    wreg      void 
 12685 ;; Registers used:
 12686 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12696 ;;Total ram usage:        2 bytes
 12697 ;; Hardware stack levels used:    1
 12698 ;; This function calls:
 12699 ;;		Nothing
 12700 ;; This function is called by:
 12701 ;;		_I2C1_ISR
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           
 12706                           ;psect for function _I2C1_Stop
 12707  0F79                     _I2C1_Stop:	
 12708                           
 12709                           ;incstack = 0
 12710                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 12711                           ;I2C1_Stop@completion_code stored from wreg
 12712  0F79  00F7               	movwf	I2C1_Stop@completion_code
 12713                           
 12714                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 12715  0F7A  0143               	movlb	3	; select bank3
 12716  0F7B  1511               	bsf	17,2	;volatile
 12717                           
 12718                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 12719  0F7C  0140               	movlb	0	; select bank0
 12720  0F7D  0862               	movf	_p_i2c1_current,w
 12721  0F7E  3E02               	addlw	2
 12722  0F7F  0086               	movwf	6
 12723  0F80  0187               	clrf	7
 12724  0F81  0801               	movf	1,w
 12725  0F82  1903               	btfsc	3,2
 12726  0F83  2F8F               	goto	i1l2879
 12727                           
 12728                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 12729  0F84  0877               	movf	I2C1_Stop@completion_code,w
 12730  0F85  00F6               	movwf	??_I2C1_Stop
 12731  0F86  0862               	movf	_p_i2c1_current,w
 12732  0F87  3E02               	addlw	2
 12733  0F88  0086               	movwf	6
 12734  0F89  0187               	clrf	7
 12735  0F8A  0801               	movf	1,w
 12736  0F8B  0086               	movwf	6
 12737  0F8C  0187               	clrf	7
 12738  0F8D  0876               	movf	??_I2C1_Stop,w
 12739  0F8E  0081               	movwf	1
 12740  0F8F                     i1l2879:	
 12741                           
 12742                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 12743  0F8F  01E5               	clrf	_i2c1_state
 12744  0F90  0008               	return
 12745  0F91                     __end_of_I2C1_Stop:	
 12746                           
 12747                           	psect	text52
 12748  0EEB                     __ptext52:	
 12749 ;; *************** function _I2C1_FunctionComplete *****************
 12750 ;; Defined at:
 12751 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;		None
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;		None
 12756 ;; Return value:  Size  Location     Type
 12757 ;;                  1    wreg      void 
 12758 ;; Registers used:
 12759 ;;		wreg, status,2, status,0
 12760 ;; Tracked objects:
 12761 ;;		On entry : 0/0
 12762 ;;		On exit  : 0/0
 12763 ;;		Unchanged: 0/0
 12764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12769 ;;Total ram usage:        1 bytes
 12770 ;; Hardware stack levels used:    1
 12771 ;; This function calls:
 12772 ;;		Nothing
 12773 ;; This function is called by:
 12774 ;;		_I2C1_ISR
 12775 ;; This function uses a non-reentrant model
 12776 ;;
 12777                           
 12778                           
 12779                           ;psect for function _I2C1_FunctionComplete
 12780  0EEB                     _I2C1_FunctionComplete:	
 12781                           
 12782                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 12783                           
 12784                           ;incstack = 0
 12785                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 12786  0EEB  3004               	movlw	4
 12787  0EEC  00F6               	movwf	??_I2C1_FunctionComplete
 12788  0EED  0876               	movf	??_I2C1_FunctionComplete,w
 12789  0EEE  0140               	movlb	0	; select bank0
 12790  0EEF  07E3               	addwf	_p_i2c1_trb_current,f
 12791                           
 12792                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 12793  0EF0  3001               	movlw	1
 12794  0EF1  02E4               	subwf	_i2c1_trb_count,f
 12795  0EF2  1D03               	btfss	3,2
 12796  0EF3  2EF9               	goto	i1l443
 12797                           
 12798                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 12799  0EF4  3004               	movlw	4
 12800  0EF5  00F6               	movwf	??_I2C1_FunctionComplete
 12801  0EF6  0876               	movf	??_I2C1_FunctionComplete,w
 12802  0EF7  00E5               	movwf	_i2c1_state
 12803                           
 12804                           ;mcc_generated_files/i2c1.c: 575:     }
 12805  0EF8  0008               	return
 12806  0EF9                     i1l443:	
 12807                           ;mcc_generated_files/i2c1.c: 576:     else
 12808                           
 12809                           
 12810                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 12811  0EF9  01E5               	clrf	_i2c1_state
 12812  0EFA  0AE5               	incf	_i2c1_state,f
 12813  0EFB  0008               	return
 12814  0EFC                     __end_of_I2C1_FunctionComplete:	
 12815                           
 12816                           	psect	text53
 12817  0E21                     __ptext53:	
 12818 ;; *************** function _I2C1_BusCollisionISR *****************
 12819 ;; Defined at:
 12820 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 12821 ;; Parameters:    Size  Location     Type
 12822 ;;		None
 12823 ;; Auto vars:     Size  Location     Type
 12824 ;;		None
 12825 ;; Return value:  Size  Location     Type
 12826 ;;                  1    wreg      void 
 12827 ;; Registers used:
 12828 ;;		None
 12829 ;; Tracked objects:
 12830 ;;		On entry : 0/0
 12831 ;;		On exit  : 0/0
 12832 ;;		Unchanged: 0/0
 12833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12838 ;;Total ram usage:        0 bytes
 12839 ;; Hardware stack levels used:    1
 12840 ;; This function calls:
 12841 ;;		Nothing
 12842 ;; This function is called by:
 12843 ;;		_INTERRUPT_InterruptManager
 12844 ;; This function uses a non-reentrant model
 12845 ;;
 12846                           
 12847                           
 12848                           ;psect for function _I2C1_BusCollisionISR
 12849  0E21                     _I2C1_BusCollisionISR:	
 12850                           
 12851                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 12852                           
 12853                           ;incstack = 0
 12854                           ; Regs used in _I2C1_BusCollisionISR: []
 12855  0E21  014E               	movlb	14	; select bank14
 12856  0E22  108F               	bcf	15,1	;volatile
 12857  0E23  0008               	return
 12858  0E24                     __end_of_I2C1_BusCollisionISR:	
 12859                           
 12860                           	psect	text54
 12861  0FC6                     __ptext54:	
 12862 ;; *************** function _EUSART1_Transmit_ISR *****************
 12863 ;; Defined at:
 12864 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;		None
 12867 ;; Auto vars:     Size  Location     Type
 12868 ;;		None
 12869 ;; Return value:  Size  Location     Type
 12870 ;;                  1    wreg      void 
 12871 ;; Registers used:
 12872 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12873 ;; Tracked objects:
 12874 ;;		On entry : 0/0
 12875 ;;		On exit  : 0/0
 12876 ;;		Unchanged: 0/0
 12877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12882 ;;Total ram usage:        1 bytes
 12883 ;; Hardware stack levels used:    1
 12884 ;; This function calls:
 12885 ;;		Nothing
 12886 ;; This function is called by:
 12887 ;;		_EUSART1_Initialize
 12888 ;;		_INTERRUPT_InterruptManager
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           
 12893                           ;psect for function _EUSART1_Transmit_ISR
 12894  0FC6                     _EUSART1_Transmit_ISR:	
 12895                           
 12896                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 12897                           
 12898                           ;incstack = 0
 12899                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 12900  0FC6  3008               	movlw	8
 12901  0FC7  0140               	movlb	0	; select bank0
 12902  0FC8  026F               	subwf	_eusart1TxBufferRemaining,w	;volatile
 12903  0FC9  1803               	skipnc
 12904  0FCA  2FE0               	goto	i1l106
 12905                           
 12906                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 12907  0FCB  0872               	movf	_eusart1TxTail,w
 12908  0FCC  3EB0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 12909  0FCD  0086               	movwf	6
 12910  0FCE  0187               	clrf	7
 12911  0FCF  0801               	movf	1,w
 12912  0FD0  0142               	movlb	2	; select bank2
 12913  0FD1  009A               	movwf	26	;volatile
 12914  0FD2  3001               	movlw	1
 12915  0FD3  00F6               	movwf	??_EUSART1_Transmit_ISR
 12916  0FD4  0876               	movf	??_EUSART1_Transmit_ISR,w
 12917  0FD5  07F2               	addwf	_eusart1TxTail,f	;volatile
 12918                           
 12919                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 12920  0FD6  3008               	movlw	8
 12921  0FD7  0272               	subwf	_eusart1TxTail,w	;volatile
 12922  0FD8  1803               	btfsc	3,0
 12923                           
 12924                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 12925  0FD9  01F2               	clrf	_eusart1TxTail	;volatile
 12926                           
 12927                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 12928  0FDA  3001               	movlw	1
 12929  0FDB  00F6               	movwf	??_EUSART1_Transmit_ISR
 12930  0FDC  0876               	movf	??_EUSART1_Transmit_ISR,w
 12931  0FDD  0140               	movlb	0	; select bank0
 12932  0FDE  07EF               	addwf	_eusart1TxBufferRemaining,f	;volatile
 12933                           
 12934                           ;mcc_generated_files/eusart1.c: 206:     }
 12935  0FDF  0008               	return
 12936  0FE0                     i1l106:	
 12937                           ;mcc_generated_files/eusart1.c: 207:     else
 12938                           
 12939                           
 12940                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 12941  0FE0  014E               	movlb	14	; select bank14
 12942  0FE1  1219               	bcf	25,4	;volatile
 12943  0FE2  0008               	return
 12944  0FE3                     __end_of_EUSART1_Transmit_ISR:	
 12945                           
 12946                           	psect	text55
 12947  0763                     __ptext55:	
 12948 ;; *************** function _DMX_ISR *****************
 12949 ;; Defined at:
 12950 ;;		line 6 in file "dmx.c"
 12951 ;; Parameters:    Size  Location     Type
 12952 ;;		None
 12953 ;; Auto vars:     Size  Location     Type
 12954 ;;		None
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  1    wreg      void 
 12957 ;; Registers used:
 12958 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12967 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12968 ;;Total ram usage:        4 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; This function calls:
 12971 ;;		Nothing
 12972 ;; This function is called by:
 12973 ;;		_main
 12974 ;;		_INTERRUPT_InterruptManager
 12975 ;; This function uses a non-reentrant model
 12976 ;;
 12977                           
 12978                           
 12979                           ;psect for function _DMX_ISR
 12980  0763                     _DMX_ISR:	
 12981                           
 12982                           ;dmx.c: 7:         LATB6 = 1;
 12983                           
 12984                           ;incstack = 0
 12985                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 12986  0763  0140               	movlb	0	; select bank0
 12987  0764  1719               	bsf	25,6	;volatile
 12988                           
 12989                           ;dmx.c: 8:         LATB6 = 0;
 12990  0765  1319               	bcf	25,6	;volatile
 12991                           
 12992                           ;dmx.c: 9:     if (RC1STAbits.FERR) {
 12993  0766  0142               	movlb	2	; select bank2
 12994  0767  1D1D               	btfss	29,2	;volatile
 12995  0768  2F6D               	goto	i1l3371
 12996                           
 12997                           ;dmx.c: 11:         dmxPointer = 0;
 12998  0769  0141               	movlb	1	; select bank1
 12999  076A  01BA               	clrf	_dmxPointer^(0+128)
 13000  076B  01BB               	clrf	(_dmxPointer+1)^(0+128)
 13001                           
 13002                           ;dmx.c: 12:     } else {
 13003  076C  2F72               	goto	i1l3373
 13004  076D                     i1l3371:	
 13005                           
 13006                           ;dmx.c: 13:         dmxPointer++;
 13007  076D  3001               	movlw	1
 13008  076E  0141               	movlb	1	; select bank1
 13009  076F  07BA               	addwf	_dmxPointer^(0+128),f
 13010  0770  3000               	movlw	0
 13011  0771  3DBB               	addwfc	(_dmxPointer+1)^(0+128),f
 13012  0772                     i1l3373:	
 13013                           
 13014                           ;dmx.c: 15:     dmxData[dmxPointer] = RC1REG;
 13015  0772  30EF               	movlw	239
 13016  0773  00F6               	movwf	??_DMX_ISR
 13017  0774  3025               	movlw	37
 13018  0775  00F7               	movwf	??_DMX_ISR+1
 13019  0776  083A               	movf	_dmxPointer^(0+128),w
 13020  0777  0776               	addwf	??_DMX_ISR,w
 13021  0778  00F8               	movwf	??_DMX_ISR+2
 13022  0779  083B               	movf	(_dmxPointer+1)^(0+128),w
 13023  077A  3D77               	addwfc	??_DMX_ISR+1,w
 13024  077B  00F9               	movwf	??_DMX_ISR+3
 13025  077C  0878               	movf	??_DMX_ISR+2,w
 13026  077D  0086               	movwf	6
 13027  077E  0879               	movf	??_DMX_ISR+3,w
 13028  077F  0087               	movwf	7
 13029  0780  0142               	movlb	2	; select bank2
 13030  0781  0819               	movf	25,w	;volatile
 13031  0782  0081               	movwf	1
 13032                           
 13033                           ;dmx.c: 17:     if (RC1STAbits.OERR) {
 13034  0783  1C9D               	btfss	29,1	;volatile
 13035  0784  0008               	return
 13036                           
 13037                           ;dmx.c: 18:         RC1STAbits.CREN = 0;
 13038  0785  121D               	bcf	29,4	;volatile
 13039                           
 13040                           ;dmx.c: 19:         RC1STAbits.CREN = 1;
 13041  0786  161D               	bsf	29,4	;volatile
 13042  0787  0008               	return
 13043  0788                     __end_of_DMX_ISR:	
 13044                           
 13045                           	psect	text56
 13046  0662                     __ptext56:	
 13047 ;; *************** function _EUSART1_Receive_ISR *****************
 13048 ;; Defined at:
 13049 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 13050 ;; Parameters:    Size  Location     Type
 13051 ;;		None
 13052 ;; Auto vars:     Size  Location     Type
 13053 ;;		None
 13054 ;; Return value:  Size  Location     Type
 13055 ;;                  1    wreg      void 
 13056 ;; Registers used:
 13057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13058 ;; Tracked objects:
 13059 ;;		On entry : 0/0
 13060 ;;		On exit  : 0/0
 13061 ;;		Unchanged: 0/0
 13062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13067 ;;Total ram usage:        0 bytes
 13068 ;; Hardware stack levels used:    1
 13069 ;; Hardware stack levels required when called:    2
 13070 ;; This function calls:
 13071 ;;		Absolute function
 13072 ;;		_EUSART1_DefaultErrorHandler
 13073 ;;		_EUSART1_DefaultFramingErrorHandler
 13074 ;;		_EUSART1_DefaultOverrunErrorHandler
 13075 ;;		_EUSART1_RxDataHandler
 13076 ;; This function is called by:
 13077 ;;		_EUSART1_Initialize
 13078 ;;		_INTERRUPT_InterruptManager
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           
 13083                           ;psect for function _EUSART1_Receive_ISR
 13084  0662                     _EUSART1_Receive_ISR:	
 13085                           
 13086                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 13087                           
 13088                           ;incstack = 0
 13089                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13090  0662  0871               	movf	_eusart1RxHead,w	;volatile
 13091  0663  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 13092  0664  0086               	movwf	6
 13093  0665  0187               	clrf	7
 13094  0666  0181               	clrf	1
 13095                           
 13096                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 13097  0667  0142               	movlb	2	; select bank2
 13098  0668  1D1D               	btfss	29,2	;volatile
 13099  0669  2E75               	goto	i1l3023
 13100                           
 13101                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 13102  066A  0871               	movf	_eusart1RxHead,w	;volatile
 13103  066B  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 13104  066C  0086               	movwf	6
 13105  066D  0187               	clrf	7
 13106  066E  1481               	bsf	1,1
 13107                           
 13108                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 13109  066F  0141               	movlb	1	; select bank1
 13110  0670  0853               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 13111  0671  008A               	movwf	10
 13112  0672  0852               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 13113  0673  000A               	callw
 13114  0674  3186               	pagesel	$
 13115  0675                     i1l3023:	
 13116                           
 13117                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 13118  0675  0142               	movlb	2	; select bank2
 13119  0676  1C9D               	btfss	29,1	;volatile
 13120  0677  2E83               	goto	i1l3029
 13121                           
 13122                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 13123  0678  0871               	movf	_eusart1RxHead,w	;volatile
 13124  0679  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 13125  067A  0086               	movwf	6
 13126  067B  0187               	clrf	7
 13127  067C  1501               	bsf	1,2
 13128                           
 13129                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 13130  067D  0141               	movlb	1	; select bank1
 13131  067E  0851               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 13132  067F  008A               	movwf	10
 13133  0680  0850               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 13134  0681  000A               	callw
 13135  0682  3186               	pagesel	$
 13136  0683                     i1l3029:	
 13137                           
 13138                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 13139  0683  0871               	movf	_eusart1RxHead,w	;volatile
 13140  0684  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 13141  0685  0086               	movwf	6
 13142  0686  0187               	clrf	7
 13143  0687  0801               	movf	1,w
 13144  0688  1903               	btfsc	3,2
 13145  0689  2E91               	goto	i1l3033
 13146                           
 13147                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 13148  068A  0141               	movlb	1	; select bank1
 13149  068B  084F               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 13150  068C  008A               	movwf	10
 13151  068D  084E               	movf	_EUSART1_ErrorHandler^(0+128),w
 13152  068E  000A               	callw
 13153  068F  3186               	pagesel	$
 13154                           
 13155                           ;mcc_generated_files/eusart1.c: 230:     } else {
 13156  0690  0008               	return
 13157  0691                     i1l3033:	
 13158                           
 13159                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 13160  0691  3187  27E9         	fcall	_EUSART1_RxDataHandler
 13161  0693  0008               	return
 13162  0694                     __end_of_EUSART1_Receive_ISR:	
 13163                           
 13164                           	psect	text57
 13165  0E2B                     __ptext57:	
 13166 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 13167 ;; Defined at:
 13168 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;		None
 13171 ;; Auto vars:     Size  Location     Type
 13172 ;;		None
 13173 ;; Return value:  Size  Location     Type
 13174 ;;                  1    wreg      void 
 13175 ;; Registers used:
 13176 ;;		None
 13177 ;; Tracked objects:
 13178 ;;		On entry : 0/0
 13179 ;;		On exit  : 0/0
 13180 ;;		Unchanged: 0/0
 13181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13186 ;;Total ram usage:        0 bytes
 13187 ;; Hardware stack levels used:    1
 13188 ;; This function calls:
 13189 ;;		Nothing
 13190 ;; This function is called by:
 13191 ;;		_EUSART1_Initialize
 13192 ;;		_EUSART1_Receive_ISR
 13193 ;; This function uses a non-reentrant model
 13194 ;;
 13195                           
 13196                           
 13197                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 13198  0E2B                     _EUSART1_DefaultOverrunErrorHandler:	
 13199                           
 13200                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 13201                           
 13202                           ;incstack = 0
 13203                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 13204  0E2B  0142               	movlb	2	; select bank2
 13205  0E2C  121D               	bcf	29,4	;volatile
 13206                           
 13207                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 13208  0E2D  161D               	bsf	29,4	;volatile
 13209  0E2E  0008               	return
 13210  0E2F                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 13211                           
 13212                           	psect	text58
 13213  0E1C                     __ptext58:	
 13214 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 13215 ;; Defined at:
 13216 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;		None
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;		None
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  1    wreg      void 
 13223 ;; Registers used:
 13224 ;;		None
 13225 ;; Tracked objects:
 13226 ;;		On entry : 0/0
 13227 ;;		On exit  : 0/0
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13234 ;;Total ram usage:        0 bytes
 13235 ;; Hardware stack levels used:    1
 13236 ;; This function calls:
 13237 ;;		Nothing
 13238 ;; This function is called by:
 13239 ;;		_EUSART1_Initialize
 13240 ;;		_EUSART1_Receive_ISR
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           
 13245                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 13246  0E1C                     _EUSART1_DefaultFramingErrorHandler:	
 13247                           
 13248                           ;incstack = 0
 13249                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 13250  0E1C  0008               	return
 13251  0E1D                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 13252                           
 13253                           	psect	text59
 13254  0E1E                     __ptext59:	
 13255 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 13256 ;; Defined at:
 13257 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;		None
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;		None
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  1    wreg      void 
 13264 ;; Registers used:
 13265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/0
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13275 ;;Total ram usage:        0 bytes
 13276 ;; Hardware stack levels used:    1
 13277 ;; Hardware stack levels required when called:    1
 13278 ;; This function calls:
 13279 ;;		_EUSART1_RxDataHandler
 13280 ;; This function is called by:
 13281 ;;		_EUSART1_Initialize
 13282 ;;		_EUSART1_Receive_ISR
 13283 ;; This function uses a non-reentrant model
 13284 ;;
 13285                           
 13286                           
 13287                           ;psect for function _EUSART1_DefaultErrorHandler
 13288  0E1E                     _EUSART1_DefaultErrorHandler:	
 13289                           
 13290                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 13291                           
 13292                           ;incstack = 0
 13293                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13294  0E1E  3187  27E9         	fcall	_EUSART1_RxDataHandler
 13295  0E20  0008               	return
 13296  0E21                     __end_of_EUSART1_DefaultErrorHandler:	
 13297                           
 13298                           	psect	text60
 13299  07E9                     __ptext60:	
 13300 ;; *************** function _EUSART1_RxDataHandler *****************
 13301 ;; Defined at:
 13302 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;		None
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13320 ;;Total ram usage:        1 bytes
 13321 ;; Hardware stack levels used:    1
 13322 ;; This function calls:
 13323 ;;		Nothing
 13324 ;; This function is called by:
 13325 ;;		_EUSART1_Receive_ISR
 13326 ;;		_EUSART1_DefaultErrorHandler
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           
 13331                           ;psect for function _EUSART1_RxDataHandler
 13332  07E9                     _EUSART1_RxDataHandler:	
 13333                           
 13334                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 13335                           
 13336                           ;incstack = 0
 13337                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 13338  07E9  0142               	movlb	2	; select bank2
 13339  07EA  0819               	movf	25,w	;volatile
 13340  07EB  00F6               	movwf	??_EUSART1_RxDataHandler
 13341  07EC  0871               	movf	_eusart1RxHead,w
 13342  07ED  3EA8               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 13343  07EE  0086               	movwf	6
 13344  07EF  0187               	clrf	7
 13345  07F0  0876               	movf	??_EUSART1_RxDataHandler,w
 13346  07F1  0081               	movwf	1
 13347  07F2  3001               	movlw	1
 13348  07F3  00F6               	movwf	??_EUSART1_RxDataHandler
 13349  07F4  0876               	movf	??_EUSART1_RxDataHandler,w
 13350  07F5  07F1               	addwf	_eusart1RxHead,f	;volatile
 13351                           
 13352                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 13353  07F6  3008               	movlw	8
 13354  07F7  0271               	subwf	_eusart1RxHead,w	;volatile
 13355  07F8  1803               	btfsc	3,0
 13356                           
 13357                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 13358  07F9  01F1               	clrf	_eusart1RxHead	;volatile
 13359                           
 13360                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 13361  07FA  3001               	movlw	1
 13362  07FB  00F6               	movwf	??_EUSART1_RxDataHandler
 13363  07FC  0876               	movf	??_EUSART1_RxDataHandler,w
 13364  07FD  0140               	movlb	0	; select bank0
 13365  07FE  07E7               	addwf	_eusart1RxCount,f	;volatile
 13366  07FF  0008               	return
 13367  0800                     __end_of_EUSART1_RxDataHandler:	
 13368                           
 13369                           	psect	text61
 13370  0ED1                     __ptext61:	
 13371 ;; *************** function _ADCC_ThresholdISR *****************
 13372 ;; Defined at:
 13373 ;;		line 308 in file "mcc_generated_files/adcc.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;		None
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;		None
 13378 ;; Return value:  Size  Location     Type
 13379 ;;                  1    wreg      void 
 13380 ;; Registers used:
 13381 ;;		wreg, status,2, status,0, pclath, cstack
 13382 ;; Tracked objects:
 13383 ;;		On entry : 0/0
 13384 ;;		On exit  : 0/0
 13385 ;;		Unchanged: 0/0
 13386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13391 ;;Total ram usage:        0 bytes
 13392 ;; Hardware stack levels used:    1
 13393 ;; Hardware stack levels required when called:    1
 13394 ;; This function calls:
 13395 ;;		Absolute function
 13396 ;;		_ADCC_DefaultInterruptHandler
 13397 ;;		_adcThresholdHandler
 13398 ;; This function is called by:
 13399 ;;		_INTERRUPT_InterruptManager
 13400 ;; This function uses a non-reentrant model
 13401 ;;
 13402                           
 13403                           
 13404                           ;psect for function _ADCC_ThresholdISR
 13405  0ED1                     _ADCC_ThresholdISR:	
 13406                           
 13407                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 13408                           
 13409                           ;incstack = 0
 13410                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 13411  0ED1  014E               	movlb	14	; select bank14
 13412  0ED2  108D               	bcf	13,1	;volatile
 13413                           
 13414                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 13415  0ED3  0141               	movlb	1	; select bank1
 13416  0ED4  084A               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 13417  0ED5  044B               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 13418  0ED6  1903               	btfsc	3,2
 13419  0ED7  0008               	return
 13420                           
 13421                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 13422  0ED8  084B               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 13423  0ED9  008A               	movwf	10
 13424  0EDA  084A               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 13425  0EDB  000A               	callw
 13426  0EDC  318E               	pagesel	$
 13427  0EDD  0008               	return
 13428  0EDE                     __end_of_ADCC_ThresholdISR:	
 13429                           
 13430                           	psect	text62
 13431  0E1B                     __ptext62:	
 13432 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13433 ;; Defined at:
 13434 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;		None
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;		None
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  1    wreg      void 
 13441 ;; Registers used:
 13442 ;;		None
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13452 ;;Total ram usage:        0 bytes
 13453 ;; Hardware stack levels used:    1
 13454 ;; This function calls:
 13455 ;;		Nothing
 13456 ;; This function is called by:
 13457 ;;		_ADCC_Initialize
 13458 ;;		_ADCC_ThresholdISR
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           
 13463                           ;psect for function _ADCC_DefaultInterruptHandler
 13464  0E1B                     _ADCC_DefaultInterruptHandler:	
 13465                           
 13466                           ;incstack = 0
 13467                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 13468  0E1B  0008               	return
 13469  0E1C                     __end_of_ADCC_DefaultInterruptHandler:	
 13470                           
 13471                           	psect	text63
 13472  0E27                     __ptext63:	
 13473 ;; *************** function _adcThresholdHandler *****************
 13474 ;; Defined at:
 13475 ;;		line 27 in file "beat.c"
 13476 ;; Parameters:    Size  Location     Type
 13477 ;;		None
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;		None
 13480 ;; Return value:  Size  Location     Type
 13481 ;;                  1    wreg      void 
 13482 ;; Registers used:
 13483 ;;		None
 13484 ;; Tracked objects:
 13485 ;;		On entry : 0/0
 13486 ;;		On exit  : 0/0
 13487 ;;		Unchanged: 0/0
 13488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13493 ;;Total ram usage:        0 bytes
 13494 ;; Hardware stack levels used:    1
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		_BEAT_init
 13499 ;;		_ADCC_ThresholdISR
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           
 13504                           ;psect for function _adcThresholdHandler
 13505  0E27                     _adcThresholdHandler:	
 13506                           
 13507                           ;beat.c: 28:     thresholdExceeded = 1;
 13508                           
 13509                           ;incstack = 0
 13510                           ; Regs used in _adcThresholdHandler: []
 13511  0E27  0140               	movlb	0	; select bank0
 13512  0E28  01D8               	clrf	_thresholdExceeded
 13513  0E29  0AD8               	incf	_thresholdExceeded,f
 13514  0E2A  0008               	return
 13515  0E2B                     __end_of_adcThresholdHandler:	
 13516  007E                     btemp	set	126	;btemp
 13517  007E                     int$flags	set	126
 13518  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        6
    BSS         117
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     38      80
    BANK1            80      2      60
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S1469$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_setColor
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23333
                                              0 BANK1      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
      _EUSART1_SetRxInterruptHandler
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                            13    13      0     743
                                             22 BANK0     13    13      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_setColor                                        22    19      3     678
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      4     4      0   11216
                                             34 BANK0      4     4      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    4     1      3     165
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum                                  7     5      2    4467
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _TM1650_setDigit                                      7     4      3    2952
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (11) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     _TM1650_isEnabled
     ___lwdiv
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
       ___lwmod
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
   _EUSART1_SetRxInterruptHandler
   _LED_task
     _BEAT_detected
     _CLOCK_getTime
     _LED_setColor
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      B8       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2      3C       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      B8      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 29 15:42:42 2019

                      _eusart1TxBufferRemaining 006F                        ??_ADCC_SetUpperThreshold 0022  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0076  
                                            _up 005D                              __size_of_BEAT_init 0014  
                            __size_of_BEAT_task 00BB                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 0E27                                             l806 0222  
                                           l808 0285                                             _bpm 00BE  
                       __size_of_PMD_Initialize 000A                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                   __CFG_BBEN$OFF 0000  
                               __end_of_DMX_ISR 0788                                __end_of_I2C1_ISR 01D2  
                                          l4011 021C                                            l4005 01EC  
                                          l4025 026F                                            l4017 0243  
                                          l4051 03FF                                            l3521 051C  
                                          l3507 0E37                                            l4059 0414  
                                          l4091 0620                                            l3525 0523  
                                          l3613 038E                            _ADCC_StartConversion 0E6A  
                                          l3527 0528                                            l3543 0FFA  
                                          l3537 0737                                            l3619 0392  
                                          l3565 0654                                            l3557 0636  
                                          l3581 06C8                                            l3821 0F43  
                                          l3813 0F6E                                            l3559 0642  
                                          l3583 06D4                                            l3591 06E9  
                                          l3823 0F47                                            l3815 0F72  
                                          l3569 065D                                            l3833 0E83  
                                          l3587 06E0                                            l3773 0F32  
                                          l3935 02C9                                            l3793 0798  
                                          l3971 033B                                            l3955 02FD  
                                          l3939 02D0                                            l3957 0310  
                                          l3799 079D                                  ?_TM1650_enable 0076  
                                          u2105 0639                                            u2125 0643  
                                          u2205 06E1                                            _LATA 0018  
                                          _LATB 0019                                            u2135 064D  
                                          _LATC 001A                                            u2145 0655  
                                          u2315 02B6                                            u2235 03CE  
                                          u2405 01EF                                            u2085 0FB8  
                                          u2414 020E                                            u2415 020D  
                                          u2175 06CB                                            u2195 06DA  
                                          u2365 0322                                            u2567 060A  
                                          _PMD0 0796                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _PMD6 079C                                            _PMD7 079D  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0076                                   ?_BUTTONS_task 0076  
                          ?_adcThresholdHandler 0076                                            _isOn 005E  
                                          _main 05F2                                            _down 005C  
                                          _init 07C9                                            _menu 005A  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0039  
                       __end_of_TM1650_setDigit 0FC6                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 0015                            __size_of_address_inc 0016  
                I2C1_MasterWriteTRBBuild@length 0021                         __end_of_TMR0_Initialize 0F24  
                                    _i2c1_state 0065                  ??_TMR0_DefaultInterruptHandler 0076  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 0EBB                        __end_of_TM1650_isEnabled 0E27  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 00A0  
                                         _ADCAP 010E                                           _ADACT 0117  
                              __end_of_LED_task 04EF                                           ?_main 0076  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                                         _ADREF 0116                               __end_of_I2C1_Stop 0F91  
                                 __CFG_WDTE$OFF 0000                                           _ADRPT 009A  
                                         _LATB6 00CE                                 __end_of___lwdiv 0662  
                    _ADCC_ADTI_InterruptHandler 00CA                                           i1l106 0FE0  
                                         i1l402 009C                                           i1l413 00EA  
                                         i1l414 00F6                                           i1l431 015D  
                                         i1l407 00C7                                           i1l432 016B  
                                         i1l424 012E                                           i1l408 00C8  
                                         i1l280 000E                                 __end_of___lwmod 06EE  
                                         i1l443 0EF9                                           i1l283 0017  
                                         i1l436 0192                                           i1l428 014E  
                                         i1l285 001E                                           i1l294 0037  
                                         i1l287 0028                                           i1l289 0032  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         _TXREG 011A               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 0E24                       ?_TMR0_SetInterruptHandler 0020  
                          _EUSART1_Transmit_ISR 0FC6                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 0EEB                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                               __end_of_initLED 0716                                           _delay 00D8  
                                         _count 00C0                                           _enter 005B  
                         ?_ADCC_StartConversion 0076                                           pclath 000A  
                                ??_BUTTONS_init 0025                                  ??_BUTTONS_task 0022  
                         ??_adcThresholdHandler 0076                               __end_of_BEAT_init 0F10  
                             __end_of_BEAT_task 0357                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0E1D  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0076  
           ?_EUSART1_DefaultFramingErrorHandler 0076              _EUSART1_DefaultFramingErrorHandler 0E1C  
               I2C1_MasterWriteTRBBuild@address 0022                                 __initialization 003B  
                          TM1650_setDigit@digit 003A                           I2C1_MasterWrite@pdata 002D  
                         I2C1_MasterWrite@pflag 002A                      __end_of_EUSART1_Initialize 0577  
                                  __end_of_main 062D                                    __end_of_init 07E9  
                               _CONTROLLER_init 0E50                                 _CONTROLLER_task 03D1  
                                 ?_LED_setColor 0020                    __size_of_CLOCK_timerCallback 0006  
                                __CFG_SAFEN$OFF 0000                 __size_of_ADCC_SetUpperThreshold 0009  
                         __end_of_CLOCK_getTime 0E48                     ?_INTERRUPT_InterruptManager 0076  
                                   _i2c1_object 0046                                          ??_main 00DA  
                                        ??_init 0023                                       ??_DMX_ISR 0076  
                         ?_EUSART1_Transmit_ISR 0076                                 ??_TM1650_enable 0034  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR1L 030C  
                                        _CCPR3H 0315                                          _CCPR2L 0310  
                                        _CCPR4H 0319                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                                        _RC1REG 0119                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC3PPS 1F23                                          _RC4PPS 1F24  
                                        i1l3023 0675                                          i1l3033 0691  
                                        i1l3113 010F                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          i1l3029 0683  
                                        i1l3133 0123                                          i1l3081 00BA  
                                        i1l3171 0179                                          i1l3155 0151  
                                        i1l3147 013C                                          _RC7PPS 1F27  
                                        i1l3093 00D4                                          i1l3085 00C1  
                                        i1l4119 01AE                                          i1l3183 0196  
                                        i1l3167 0172                                          i1l3185 0199  
                                        i1l3193 01A5                                          i1l3371 076D  
                                        i1l3187 019D                                          i1l3099 00E4  
                                        i1l3373 0772                                  __CFG_WDTCCS$SC 0000  
                                        i1l2879 0F8F                                          _OSCFRQ 0893  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                        _TRISC3 00A3                                          _TRISB6 009E  
                                        _TRISC4 00A4                                          _TRISC6 00A6  
                                        _TRISC7 00A7                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 0062  
                                ??_LED_setColor 0023                     __end_of_TM1650_fastPrintNum 03D1  
                             _ADCC_ThresholdISR 0ED1                                  __CFG_STVREN$ON 0000  
                                     ??___lwdiv 0024                                       ??___lwmod 0024  
                      ?_EUSART1_SetErrorHandler 0020                      ??_I2C1_MasterWriteTRBBuild 0024  
                              ?_TMR0_Initialize 0076                              ?_ADCC_ThresholdISR 0076  
                                     ?_I2C1_ISR 0076                          __size_of_BEAT_detected 0009  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 004F                            __size_of_TM1650_init 0004  
                                     ??_initLED 0020                                 _ADCC_Initialize 073D  
                                _PMD_Initialize 0EBB                                    ??_CLOCK_init 0022  
                           ??_ADCC_ThresholdISR 0076                          ??_ADCC_StartConversion 0020  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 0E61  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                 _eusart1RxBuffer 00A8  
                               _eusart1TxBuffer 00B0                               _SYSTEM_Initialize 0F4E  
                       __end_of__initialization 0085                         __end_of_CONTROLLER_init 0E58  
                       __end_of_CONTROLLER_task 0433                              ?_SYSTEM_Initialize 0076  
                                     ?_LED_task 0076                                  _i2c1_trb_count 0064  
                __size_of_EUSART1_RxDataHandler 0017                       __end_of_ADCC_ThresholdISR 0EDE  
                 __end_of_EUSART1_RxDataHandler 0800                           _I2C1_FunctionComplete 0EEB  
                          _I2C1_BusCollisionISR 0E21                                  __pcstackCOMMON 0076  
                            __end_of_CLOCK_init 0E50                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK0 0E33                                    __pidataBANK1 0002  
                           ??_SYSTEM_Initialize 0023                                       ?_TMR0_ISR 0076  
                   TM1650_fastPrintNum@numWrite 003E                                      ??_I2C1_ISR 0078  
                          __end_of_BUTTONS_init 05B6                          __end_of_PMD_Initialize 0EC5  
                          __end_of_BUTTONS_task 029C                          ??_EUSART1_Transmit_ISR 0076  
                   __end_of_EUSART1_Receive_ISR 0694                               _thresholdExceeded 0058  
                   ADCC_StartConversion@channel 0020                               LED_setColor@green 0020  
                             LED_setColor@white 0021                       __end_of_SYSTEM_Initialize 0F63  
                                 _eusart1RxHead 0071                                   _eusart1TxHead 0073  
                                 _eusart1RxTail 0070                                      __pbssBANK0 0046  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                 _eusart1TxTail 0072               _EUSART1_TxDefaultInterruptHandler 00D6  
               ??_EUSART1_SetRxInterruptHandler 0022                                   _BEAT_detected 0E7C  
                                    ??_LED_task 0036                           ?_I2C1_BusCollisionISR 0076  
               __end_of_EUSART1_SetErrorHandler 0E8E                                      __pmaintext 05F2  
              __end_of_TMR0_SetInterruptHandler 0E7C                                      ??_TMR0_ISR 0076  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 0763                                      __pintentry 0004  
                               _I2C1_Initialize 0F91                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 0E61           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 0E58                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0076                               ?_TM1650_isEnabled 0076  
        __end_of_EUSART1_SetFramingErrorHandler 0E97         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 0E8E                                    LED_task@time 0041  
                                       _DMX_ISR 0763                              ??_TM1650_isEnabled 0020  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       _I2C1_Stop 0F79  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                    _dmxPointer 00BA                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 05F2  
                             __end_of_charTable 0493                             _CLOCK_timerCallback 0E3C  
                                ?_BEAT_detected 0076                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0042  
                              ?_CONTROLLER_init 0076                                   ??_address_inc 0042  
                              ?_CONTROLLER_task 0076                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0076                                       _BEAT_init 0EFC  
                 __size_of_I2C1_MasterTRBInsert 0045                                       _BEAT_task 029C  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 0063  
                          ?_CLOCK_timerCallback 0076                                         ___lwdiv 062D  
                                       ___lwmod 06C1                                         _address 006D  
                                       _dmxData 25EF                                         __ptext1 06EE  
                                       __ptext2 0E2F                                         __ptext3 0F4E  
                                       __ptext4 0F10                                         __ptext5 0EBB  
                                       __ptext6 0694                                         __ptext7 0EB2  
                                       __ptext8 0F91                                         __ptext9 0534  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                                       _initLED 06EE                                         _lastRun 004B  
                         _OSCILLATOR_Initialize 0EB2                                       _T2CONbits 028E  
                                       _buttons 0120                              _EUSART1_Initialize 0534  
                      ??_PIN_MANAGER_Initialize 0020                                 __CFG_WRTSAF$OFF 0000  
                                    ?_I2C1_Stop 0076                     __end_of_adcThresholdHandler 0E2B  
                 ??_EUSART1_DefaultErrorHandler 0077                      __size_of_SYSTEM_Initialize 0015  
                          I2C1_ISR@pi2c_buf_ptr 0061                                         clrloop0 0EC6  
                          end_of_initialization 0085                             ?_EUSART1_Initialize 0076  
                                       init@btn 0024                                         init@pin 0022  
                   _EUSART1_OverrunErrorHandler 00D0                          ??_I2C1_BusCollisionISR 0076  
                       __end_of_I2C1_Initialize 0FAA           __end_of_EUSART1_SetRxInterruptHandler 0EA9  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 0EA0  
                                    ?_BEAT_init 0076                                      ?_BEAT_task 0076  
                         __size_of_BUTTONS_init 003F                           __size_of_BUTTONS_task 00CA  
                         ??_CLOCK_timerCallback 0076                             __end_of_address_dec 0F4E  
                           __end_of_address_inc 0F79                                ?_ADCC_Initialize 0076  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                      _TMR0_SetInterruptHandler 0E73                       __size_of_I2C1_MasterWrite 0027  
                             __size_of_I2C1_ISR 0149                               __end_of_writeData 1000  
                       ?_ADCC_SetUpperThreshold 0020                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 0F39               I2C1_ISR@i2c_10bit_address_restart 005F  
                        __size_of_CLOCK_getTime 0006                                    _BUTTONS_init 0577  
                                  _BUTTONS_task 01D2                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
          __size_of_EUSART1_DefaultErrorHandler 0003                               __size_of_LED_task 005C  
                ??_ADCC_DefaultInterruptHandler 0076                                   ??_TM1650_init 0035  
                       I2C1_MasterWrite@trBlock 00C6                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0077                        __size_of_TM1650_setDigit 001C  
                        ?_OSCILLATOR_Initialize 0076                  __end_of_ADCC_SetUpperThreshold 0E6A  
                  __size_of_TM1650_fastPrintNum 007A                           __size_of_LED_setColor 003C  
                                  _lastDetected 0057                             start_initialization 003B  
                                   ??_I2C1_Stop 0076                        __size_of_TMR0_Initialize 0014  
               __size_of_PIN_MANAGER_Initialize 002D                             TM1650_setDigit@data 0034  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020   EUSART1_SetTxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0020  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 0788  
                            ?_BUTTONS_isClicked 0020                                     _address_dec 0F39  
                                   _address_inc 0F63                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0076                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                             ??_BUTTONS_isClicked 0023  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 07E9  
                                  _LED_setColor 05B6                  ?_EUSART1_SetRxInterruptHandler 0020  
                                   __pdataBANK0 006B                                     __pdataBANK1 00D8  
                                 _CLOCK_getTime 0E42                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 0067                                     __pbssBIGRAM 25EF  
                                      ?_DMX_ISR 0076                             __end_of_TM1650_init 0E33  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 00D4  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 001D  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00DA  
                                 _i2c1_tr_queue 0068                       __end_of_BUTTONS_isClicked 07A9  
               ??_EUSART1_SetTxInterruptHandler 0022                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0076  
                     __size_of_TM1650_isEnabled 0003                    __size_of_EUSART1_Receive_ISR 0032  
                              LED_setColor@blue 0022                                       _charTable 0433  
                         _TMR0_InterruptHandler 00CC                                       __pnvBANK0 006F  
                                     __pnvBANK1 00CA                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 0694                                        ?___lwdiv 0020  
                                      ?___lwmod 0020                                  ?_CLOCK_getTime 0020  
                                      _I2C1_ISR 0089                    ??_INTERRUPT_InterruptManager 007C  
                               writeData@status 0033                                _I2C1_MasterWrite 0716  
                                      _BAUD1CON 011F                                        ?_initLED 0076  
                  __end_of_I2C1_MasterTRBInsert 0534      __end_of_EUSART1_DefaultOverrunErrorHandler 0E2F  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 0E2B  
                          _EUSART1_ErrorHandler 00CE                         _EUSART1_SetErrorHandler 0E85  
                             ??_TM1650_setDigit 0037                                ___lwdiv@quotient 0026  
                                      _T2CLKCON 0290        __end_of_I2C1_WaitForLastPacketToComplete 0E3C  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0076                _I2C1_WaitForLastPacketToComplete 0E37  
                        I2C1_MasterRead@trBlock 00C2                               ??_TMR0_Initialize 0022  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0023  
                                     clear_ram0 0EC5                                        _PIE0bits 0716  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _LED_task 0493             __size_of_INTERRUPT_InterruptManager 0035  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                          TM1650_fastPrintNum@i 0040                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0076                             CONTROLLER_task@time 0044  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 0EDE  
                                      _SSP1STAT 018F                        __size_of_CONTROLLER_init 0008  
                      __size_of_CONTROLLER_task 0062                                     _TM1650_init 0E2F  
                                     _threshold 006B                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                __size_of_DMX_ISR 0025  
                                     _writeData 0FE3                      __size_of_BUTTONS_isClicked 0021  
                  __size_of_adcThresholdHandler 0004                     __end_of_CLOCK_timerCallback 0E42  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 0357  
                                    _ADSTATbits 0115                              controller@lastTime 0051  
         __end_of_EUSART1_SetTxInterruptHandler 0EB2          __size_of_EUSART1_SetTxInterruptHandler 0009  
                 _EUSART1_SetTxInterruptHandler 0EA9                   __size_of_I2C1_BusCollisionISR 0003  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 0060  
                       ??_OSCILLATOR_Initialize 0020                     __size_of_EUSART1_Initialize 0043  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
              __end_of_I2C1_MasterWriteTRBBuild 07C9                            ?_TM1650_fastPrintNum 003B  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                               LED_setColor@lo1 0027                                 LED_setColor@lo2 002B  
                           TM1650_enable@enable 0034                                 LED_setColor@lo3 002F  
                               LED_setColor@lo4 0033             __end_of_EUSART1_DefaultErrorHandler 0E21  
                   _EUSART1_DefaultErrorHandler 0E1E                                 LED_setColor@red 0035  
                                   _currentTime 0055                                      _CLOCK_init 0E48  
                              __size_of_initLED 0028                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0074                                 ___lwdiv@counter 0025  
                                      _detected 0059                                      ?_writeData 002E  
                                      __ptext10 0EA9                                        __ptext11 0EA0  
                                      __ptext20 0F63                                        __ptext12 0E97  
                                      __ptext21 0F39                                        __ptext13 0E8E  
                                      __ptext30 07A9                                        __ptext22 0F24  
                                      __ptext14 0E85                                        __ptext31 04EF  
                                      __ptext23 0788                                        __ptext15 073D  
                                      __ptext40 0E24                                        __ptext32 0E37  
                                      __ptext24 0E50                                        __ptext16 0493  
                                      __ptext41 0E42                                        __ptext33 0E48  
                                      __ptext25 0357                                        __ptext17 05B6  
                                      __ptext50 0089                                        __ptext42 0EFC  
                                      __ptext34 0E73                                        __ptext26 06C1  
                                      __ptext18 0E7C                                        __ptext51 0F79  
                                      __ptext43 0E6A                                        __ptext35 01D2  
                                      __ptext27 0FAA                                        __ptext19 03D1  
                                      __ptext60 07E9                                        __ptext52 0EEB  
                                      __ptext44 0E61                                        __ptext36 0577  
                                      __ptext28 0FE3                                        __ptext61 0ED1  
                                      __ptext53 0E21                                        __ptext45 0E58  
                                      __ptext37 07C9                                        __ptext29 0716  
                                      __ptext62 0E1B                                        __ptext54 0FC6  
                                      __ptext38 029C                                        __ptext63 0E27  
                                      __ptext55 0763                                        __ptext47 0EDE  
                                      __ptext39 062D                                        __ptext56 0662  
                                      __ptext48 0E3C                                        __ptext57 0E2B  
                                      __ptext49 0E1D                                        __ptext58 0E1C  
                                      __ptext59 0E1E                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                           __end_of_BEAT_detected 0E85  
                                      _lastBeat 004D                                        _lastTime 0053  
                              _TM1650_isEnabled 0E24                                   __size_of_main 003B  
                                 __size_of_init 0020                                    ?_address_dec 0076  
          __end_of_TMR0_DefaultInterruptHandler 0E1E           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 0E1D                                    ?_address_inc 0076  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 04EF  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                  __end_of_ADCC_StartConversion 0E73                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 0039                      _INTERRUPT_InterruptManager 0004  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 00D2  
                           _EUSART1_Receive_ISR 0662                           ??_TM1650_fastPrintNum 003D  
                             TM1650_setDigit@dp 0035                                      _INTCONbits 000B  
                             ??_CONTROLLER_init 0042                               ??_CONTROLLER_task 0042  
                                      init@port 0020            __end_of_ADCC_DefaultInterruptHandler 0E1C  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 0E1B  
                                      intlevel1 0000                                  _thresholdCount 00BC  
                          ?_EUSART1_Receive_ISR 0076                                   writeData@data 002E  
                              ___lwmod@dividend 0022                         ?_PIN_MANAGER_Initialize 0076  
                      __end_of_I2C1_MasterWrite 073D                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 0EA0  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 0E97  
                 __end_of_I2C1_FunctionComplete 0EFC                           ?_I2C1_MasterTRBInsert 0020  
                  __end_of_EUSART1_Transmit_ISR 0FE3                                     led@lastTime 00B8  
                 ?_TMR0_DefaultInterruptHandler 0076                          TM1650_fastPrintNum@num 003B  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                  ?_EUSART1_SetTxInterruptHandler 0020  
                               _TM1650_setDigit 0FAA                        __size_of_I2C1_Initialize 0019  
                            _eusart1RxLastError 0066                                   __pstringtext1 0433  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0020                                     ?_CLOCK_init 0076  
                               _TMR0_Initialize 0F10                                 ___lwmod@counter 0025  
                      _I2C1_MasterWriteTRBBuild 07A9                                     ??_writeData 002F  
                                    _TX1STAbits 011E                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0077                  __end_of_PIN_MANAGER_Initialize 06C1  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 0F24  
                            __size_of_I2C1_Stop 0018                   ?_ADCC_DefaultInterruptHandler 0076  
                       ??_EUSART1_RxDataHandler 0076  
