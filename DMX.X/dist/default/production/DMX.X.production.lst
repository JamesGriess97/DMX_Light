

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 14:33:39 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	intentry,global,class=CODE,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	dabs	1,0xCA0,32
   104                           	dabs	1,0xC20,80
   105                           	dabs	1,0xBA0,80
   106                           	dabs	1,0xB20,80
   107                           	dabs	1,0xAA0,80
   108                           	dabs	1,0xA20,80
   109                           	dabs	1,0x9A0,80
   110                           	dabs	1,0x96F,1
   111                           	dabs	1,0x25EF,0,_dmxData
   112                           	dabs	1,0x7E,2
   113  0000                     
   114                           ; Version 2.05
   115                           ; Generated 20/12/2018 GMT
   116                           ; 
   117                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution.
   131                           ; 
   132                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   133                           ;        software without specific prior written permission.
   134                           ; 
   135                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   136                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   137                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   138                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   139                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   140                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   141                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   142                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   143                           ; 
   144                           ; 
   145                           ; Code-generator required, PIC16F18446 Definitions
   146                           ; 
   147                           ; SFR Addresses
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  008C                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  010F                     	;# 
   203  0110                     	;# 
   204  0111                     	;# 
   205  0112                     	;# 
   206  0113                     	;# 
   207  0114                     	;# 
   208  0115                     	;# 
   209  0116                     	;# 
   210  0117                     	;# 
   211  0118                     	;# 
   212  0119                     	;# 
   213  0119                     	;# 
   214  0119                     	;# 
   215  011A                     	;# 
   216  011A                     	;# 
   217  011A                     	;# 
   218  011B                     	;# 
   219  011B                     	;# 
   220  011B                     	;# 
   221  011B                     	;# 
   222  011B                     	;# 
   223  011C                     	;# 
   224  011C                     	;# 
   225  011C                     	;# 
   226  011D                     	;# 
   227  011D                     	;# 
   228  011D                     	;# 
   229  011E                     	;# 
   230  011E                     	;# 
   231  011E                     	;# 
   232  011F                     	;# 
   233  011F                     	;# 
   234  011F                     	;# 
   235  011F                     	;# 
   236  011F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  018E                     	;# 
   240  018F                     	;# 
   241  0190                     	;# 
   242  0191                     	;# 
   243  0192                     	;# 
   244  0196                     	;# 
   245  0197                     	;# 
   246  0198                     	;# 
   247  0199                     	;# 
   248  019A                     	;# 
   249  019B                     	;# 
   250  019C                     	;# 
   251  020C                     	;# 
   252  020D                     	;# 
   253  020E                     	;# 
   254  020E                     	;# 
   255  020F                     	;# 
   256  020F                     	;# 
   257  0210                     	;# 
   258  0210                     	;# 
   259  0211                     	;# 
   260  0211                     	;# 
   261  0212                     	;# 
   262  0213                     	;# 
   263  0214                     	;# 
   264  0214                     	;# 
   265  0215                     	;# 
   266  0215                     	;# 
   267  0216                     	;# 
   268  0216                     	;# 
   269  0217                     	;# 
   270  0217                     	;# 
   271  0218                     	;# 
   272  0219                     	;# 
   273  021A                     	;# 
   274  021A                     	;# 
   275  021B                     	;# 
   276  021B                     	;# 
   277  021C                     	;# 
   278  021C                     	;# 
   279  021D                     	;# 
   280  021D                     	;# 
   281  021E                     	;# 
   282  021F                     	;# 
   283  028C                     	;# 
   284  028C                     	;# 
   285  028D                     	;# 
   286  028D                     	;# 
   287  028E                     	;# 
   288  028F                     	;# 
   289  0290                     	;# 
   290  0291                     	;# 
   291  0292                     	;# 
   292  0292                     	;# 
   293  0293                     	;# 
   294  0293                     	;# 
   295  0294                     	;# 
   296  0295                     	;# 
   297  0296                     	;# 
   298  0297                     	;# 
   299  0298                     	;# 
   300  0298                     	;# 
   301  0299                     	;# 
   302  0299                     	;# 
   303  029A                     	;# 
   304  029B                     	;# 
   305  029C                     	;# 
   306  029D                     	;# 
   307  029F                     	;# 
   308  030C                     	;# 
   309  030C                     	;# 
   310  030D                     	;# 
   311  030E                     	;# 
   312  030F                     	;# 
   313  0310                     	;# 
   314  0310                     	;# 
   315  0311                     	;# 
   316  0312                     	;# 
   317  0313                     	;# 
   318  0314                     	;# 
   319  0314                     	;# 
   320  0315                     	;# 
   321  0316                     	;# 
   322  0317                     	;# 
   323  0318                     	;# 
   324  0318                     	;# 
   325  0319                     	;# 
   326  031A                     	;# 
   327  031B                     	;# 
   328  038C                     	;# 
   329  038C                     	;# 
   330  038D                     	;# 
   331  038E                     	;# 
   332  0390                     	;# 
   333  0390                     	;# 
   334  0391                     	;# 
   335  0392                     	;# 
   336  048C                     	;# 
   337  048C                     	;# 
   338  048D                     	;# 
   339  048E                     	;# 
   340  048F                     	;# 
   341  048F                     	;# 
   342  0490                     	;# 
   343  0491                     	;# 
   344  0492                     	;# 
   345  0492                     	;# 
   346  0493                     	;# 
   347  0494                     	;# 
   348  0495                     	;# 
   349  0495                     	;# 
   350  0496                     	;# 
   351  0497                     	;# 
   352  0498                     	;# 
   353  0499                     	;# 
   354  049A                     	;# 
   355  049B                     	;# 
   356  049C                     	;# 
   357  049D                     	;# 
   358  058C                     	;# 
   359  058C                     	;# 
   360  058D                     	;# 
   361  058E                     	;# 
   362  058F                     	;# 
   363  058F                     	;# 
   364  0590                     	;# 
   365  0591                     	;# 
   366  0592                     	;# 
   367  0593                     	;# 
   368  059C                     	;# 
   369  059C                     	;# 
   370  059D                     	;# 
   371  059D                     	;# 
   372  059E                     	;# 
   373  059F                     	;# 
   374  060C                     	;# 
   375  060C                     	;# 
   376  060D                     	;# 
   377  060D                     	;# 
   378  060E                     	;# 
   379  060F                     	;# 
   380  0610                     	;# 
   381  0611                     	;# 
   382  0612                     	;# 
   383  0613                     	;# 
   384  0614                     	;# 
   385  0616                     	;# 
   386  0616                     	;# 
   387  0617                     	;# 
   388  0617                     	;# 
   389  0618                     	;# 
   390  0619                     	;# 
   391  061A                     	;# 
   392  061B                     	;# 
   393  061C                     	;# 
   394  061D                     	;# 
   395  061E                     	;# 
   396  070C                     	;# 
   397  070D                     	;# 
   398  070E                     	;# 
   399  070F                     	;# 
   400  0710                     	;# 
   401  0711                     	;# 
   402  0712                     	;# 
   403  0713                     	;# 
   404  0714                     	;# 
   405  0716                     	;# 
   406  0717                     	;# 
   407  0718                     	;# 
   408  0719                     	;# 
   409  071A                     	;# 
   410  071B                     	;# 
   411  071C                     	;# 
   412  071D                     	;# 
   413  071E                     	;# 
   414  0796                     	;# 
   415  0797                     	;# 
   416  0798                     	;# 
   417  0799                     	;# 
   418  079A                     	;# 
   419  079B                     	;# 
   420  079C                     	;# 
   421  079D                     	;# 
   422  080C                     	;# 
   423  080D                     	;# 
   424  080E                     	;# 
   425  080F                     	;# 
   426  0810                     	;# 
   427  0811                     	;# 
   428  0812                     	;# 
   429  0813                     	;# 
   430  0814                     	;# 
   431  081A                     	;# 
   432  081A                     	;# 
   433  081B                     	;# 
   434  081C                     	;# 
   435  081C                     	;# 
   436  081D                     	;# 
   437  081E                     	;# 
   438  081F                     	;# 
   439  088C                     	;# 
   440  088D                     	;# 
   441  088E                     	;# 
   442  088F                     	;# 
   443  0890                     	;# 
   444  0891                     	;# 
   445  0892                     	;# 
   446  0893                     	;# 
   447  0895                     	;# 
   448  0896                     	;# 
   449  0897                     	;# 
   450  0898                     	;# 
   451  0899                     	;# 
   452  089A                     	;# 
   453  089B                     	;# 
   454  090C                     	;# 
   455  090E                     	;# 
   456  090F                     	;# 
   457  091F                     	;# 
   458  098F                     	;# 
   459  098F                     	;# 
   460  0990                     	;# 
   461  0991                     	;# 
   462  0992                     	;# 
   463  0993                     	;# 
   464  0994                     	;# 
   465  0995                     	;# 
   466  0996                     	;# 
   467  0997                     	;# 
   468  1E0F                     	;# 
   469  1E10                     	;# 
   470  1E11                     	;# 
   471  1E12                     	;# 
   472  1E13                     	;# 
   473  1E14                     	;# 
   474  1E15                     	;# 
   475  1E16                     	;# 
   476  1E17                     	;# 
   477  1E18                     	;# 
   478  1E19                     	;# 
   479  1E1A                     	;# 
   480  1E1B                     	;# 
   481  1E1C                     	;# 
   482  1E1D                     	;# 
   483  1E1E                     	;# 
   484  1E1F                     	;# 
   485  1E20                     	;# 
   486  1E21                     	;# 
   487  1E22                     	;# 
   488  1E23                     	;# 
   489  1E24                     	;# 
   490  1E25                     	;# 
   491  1E26                     	;# 
   492  1E27                     	;# 
   493  1E28                     	;# 
   494  1E29                     	;# 
   495  1E2A                     	;# 
   496  1E2B                     	;# 
   497  1E2C                     	;# 
   498  1E2D                     	;# 
   499  1E2E                     	;# 
   500  1E2F                     	;# 
   501  1E30                     	;# 
   502  1E31                     	;# 
   503  1E32                     	;# 
   504  1E33                     	;# 
   505  1E34                     	;# 
   506  1E35                     	;# 
   507  1E36                     	;# 
   508  1E37                     	;# 
   509  1E8F                     	;# 
   510  1E90                     	;# 
   511  1E91                     	;# 
   512  1E92                     	;# 
   513  1E93                     	;# 
   514  1E94                     	;# 
   515  1E95                     	;# 
   516  1E96                     	;# 
   517  1E97                     	;# 
   518  1E9C                     	;# 
   519  1E9D                     	;# 
   520  1E9E                     	;# 
   521  1EA1                     	;# 
   522  1EA2                     	;# 
   523  1EA3                     	;# 
   524  1EA4                     	;# 
   525  1EA9                     	;# 
   526  1EAA                     	;# 
   527  1EB1                     	;# 
   528  1EB2                     	;# 
   529  1EB8                     	;# 
   530  1EB9                     	;# 
   531  1EBA                     	;# 
   532  1EBB                     	;# 
   533  1EBC                     	;# 
   534  1EBD                     	;# 
   535  1EBE                     	;# 
   536  1EC3                     	;# 
   537  1EC5                     	;# 
   538  1EC6                     	;# 
   539  1EC7                     	;# 
   540  1EC8                     	;# 
   541  1EC9                     	;# 
   542  1ECA                     	;# 
   543  1ECB                     	;# 
   544  1ECB                     	;# 
   545  1ECB                     	;# 
   546  1ECC                     	;# 
   547  1ECC                     	;# 
   548  1ECC                     	;# 
   549  1F10                     	;# 
   550  1F11                     	;# 
   551  1F12                     	;# 
   552  1F14                     	;# 
   553  1F15                     	;# 
   554  1F1C                     	;# 
   555  1F1D                     	;# 
   556  1F1E                     	;# 
   557  1F1F                     	;# 
   558  1F20                     	;# 
   559  1F21                     	;# 
   560  1F22                     	;# 
   561  1F23                     	;# 
   562  1F24                     	;# 
   563  1F25                     	;# 
   564  1F26                     	;# 
   565  1F27                     	;# 
   566  1F38                     	;# 
   567  1F39                     	;# 
   568  1F3A                     	;# 
   569  1F3B                     	;# 
   570  1F3C                     	;# 
   571  1F3D                     	;# 
   572  1F3E                     	;# 
   573  1F3F                     	;# 
   574  1F43                     	;# 
   575  1F44                     	;# 
   576  1F45                     	;# 
   577  1F46                     	;# 
   578  1F47                     	;# 
   579  1F48                     	;# 
   580  1F49                     	;# 
   581  1F4A                     	;# 
   582  1F4E                     	;# 
   583  1F4F                     	;# 
   584  1F50                     	;# 
   585  1F51                     	;# 
   586  1F52                     	;# 
   587  1F53                     	;# 
   588  1F54                     	;# 
   589  1F55                     	;# 
   590  1FE4                     	;# 
   591  1FE5                     	;# 
   592  1FE6                     	;# 
   593  1FE7                     	;# 
   594  1FE8                     	;# 
   595  1FE8                     	;# 
   596  1FE9                     	;# 
   597  1FEA                     	;# 
   598  1FEB                     	;# 
   599  1FED                     	;# 
   600  1FEE                     	;# 
   601  1FEF                     	;# 
   602  0000                     	;# 
   603  0001                     	;# 
   604  0002                     	;# 
   605  0003                     	;# 
   606  0004                     	;# 
   607  0005                     	;# 
   608  0006                     	;# 
   609  0007                     	;# 
   610  0008                     	;# 
   611  0009                     	;# 
   612  000A                     	;# 
   613  000B                     	;# 
   614  000C                     	;# 
   615  000D                     	;# 
   616  000E                     	;# 
   617  0012                     	;# 
   618  0013                     	;# 
   619  0014                     	;# 
   620  0018                     	;# 
   621  0019                     	;# 
   622  001A                     	;# 
   623  008C                     	;# 
   624  008C                     	;# 
   625  008D                     	;# 
   626  008E                     	;# 
   627  008E                     	;# 
   628  008F                     	;# 
   629  0090                     	;# 
   630  0090                     	;# 
   631  0091                     	;# 
   632  0092                     	;# 
   633  0092                     	;# 
   634  0093                     	;# 
   635  0094                     	;# 
   636  0094                     	;# 
   637  0095                     	;# 
   638  0096                     	;# 
   639  0096                     	;# 
   640  0097                     	;# 
   641  0098                     	;# 
   642  0099                     	;# 
   643  009A                     	;# 
   644  009B                     	;# 
   645  009B                     	;# 
   646  009C                     	;# 
   647  009D                     	;# 
   648  009D                     	;# 
   649  009E                     	;# 
   650  009F                     	;# 
   651  010C                     	;# 
   652  010C                     	;# 
   653  010D                     	;# 
   654  010E                     	;# 
   655  010F                     	;# 
   656  010F                     	;# 
   657  0110                     	;# 
   658  0111                     	;# 
   659  0112                     	;# 
   660  0113                     	;# 
   661  0114                     	;# 
   662  0115                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0118                     	;# 
   666  0119                     	;# 
   667  0119                     	;# 
   668  0119                     	;# 
   669  011A                     	;# 
   670  011A                     	;# 
   671  011A                     	;# 
   672  011B                     	;# 
   673  011B                     	;# 
   674  011B                     	;# 
   675  011B                     	;# 
   676  011B                     	;# 
   677  011C                     	;# 
   678  011C                     	;# 
   679  011C                     	;# 
   680  011D                     	;# 
   681  011D                     	;# 
   682  011D                     	;# 
   683  011E                     	;# 
   684  011E                     	;# 
   685  011E                     	;# 
   686  011F                     	;# 
   687  011F                     	;# 
   688  011F                     	;# 
   689  011F                     	;# 
   690  011F                     	;# 
   691  018C                     	;# 
   692  018D                     	;# 
   693  018E                     	;# 
   694  018F                     	;# 
   695  0190                     	;# 
   696  0191                     	;# 
   697  0192                     	;# 
   698  0196                     	;# 
   699  0197                     	;# 
   700  0198                     	;# 
   701  0199                     	;# 
   702  019A                     	;# 
   703  019B                     	;# 
   704  019C                     	;# 
   705  020C                     	;# 
   706  020D                     	;# 
   707  020E                     	;# 
   708  020E                     	;# 
   709  020F                     	;# 
   710  020F                     	;# 
   711  0210                     	;# 
   712  0210                     	;# 
   713  0211                     	;# 
   714  0211                     	;# 
   715  0212                     	;# 
   716  0213                     	;# 
   717  0214                     	;# 
   718  0214                     	;# 
   719  0215                     	;# 
   720  0215                     	;# 
   721  0216                     	;# 
   722  0216                     	;# 
   723  0217                     	;# 
   724  0217                     	;# 
   725  0218                     	;# 
   726  0219                     	;# 
   727  021A                     	;# 
   728  021A                     	;# 
   729  021B                     	;# 
   730  021B                     	;# 
   731  021C                     	;# 
   732  021C                     	;# 
   733  021D                     	;# 
   734  021D                     	;# 
   735  021E                     	;# 
   736  021F                     	;# 
   737  028C                     	;# 
   738  028C                     	;# 
   739  028D                     	;# 
   740  028D                     	;# 
   741  028E                     	;# 
   742  028F                     	;# 
   743  0290                     	;# 
   744  0291                     	;# 
   745  0292                     	;# 
   746  0292                     	;# 
   747  0293                     	;# 
   748  0293                     	;# 
   749  0294                     	;# 
   750  0295                     	;# 
   751  0296                     	;# 
   752  0297                     	;# 
   753  0298                     	;# 
   754  0298                     	;# 
   755  0299                     	;# 
   756  0299                     	;# 
   757  029A                     	;# 
   758  029B                     	;# 
   759  029C                     	;# 
   760  029D                     	;# 
   761  029F                     	;# 
   762  030C                     	;# 
   763  030C                     	;# 
   764  030D                     	;# 
   765  030E                     	;# 
   766  030F                     	;# 
   767  0310                     	;# 
   768  0310                     	;# 
   769  0311                     	;# 
   770  0312                     	;# 
   771  0313                     	;# 
   772  0314                     	;# 
   773  0314                     	;# 
   774  0315                     	;# 
   775  0316                     	;# 
   776  0317                     	;# 
   777  0318                     	;# 
   778  0318                     	;# 
   779  0319                     	;# 
   780  031A                     	;# 
   781  031B                     	;# 
   782  038C                     	;# 
   783  038C                     	;# 
   784  038D                     	;# 
   785  038E                     	;# 
   786  0390                     	;# 
   787  0390                     	;# 
   788  0391                     	;# 
   789  0392                     	;# 
   790  048C                     	;# 
   791  048C                     	;# 
   792  048D                     	;# 
   793  048E                     	;# 
   794  048F                     	;# 
   795  048F                     	;# 
   796  0490                     	;# 
   797  0491                     	;# 
   798  0492                     	;# 
   799  0492                     	;# 
   800  0493                     	;# 
   801  0494                     	;# 
   802  0495                     	;# 
   803  0495                     	;# 
   804  0496                     	;# 
   805  0497                     	;# 
   806  0498                     	;# 
   807  0499                     	;# 
   808  049A                     	;# 
   809  049B                     	;# 
   810  049C                     	;# 
   811  049D                     	;# 
   812  058C                     	;# 
   813  058C                     	;# 
   814  058D                     	;# 
   815  058E                     	;# 
   816  058F                     	;# 
   817  058F                     	;# 
   818  0590                     	;# 
   819  0591                     	;# 
   820  0592                     	;# 
   821  0593                     	;# 
   822  059C                     	;# 
   823  059C                     	;# 
   824  059D                     	;# 
   825  059D                     	;# 
   826  059E                     	;# 
   827  059F                     	;# 
   828  060C                     	;# 
   829  060C                     	;# 
   830  060D                     	;# 
   831  060D                     	;# 
   832  060E                     	;# 
   833  060F                     	;# 
   834  0610                     	;# 
   835  0611                     	;# 
   836  0612                     	;# 
   837  0613                     	;# 
   838  0614                     	;# 
   839  0616                     	;# 
   840  0616                     	;# 
   841  0617                     	;# 
   842  0617                     	;# 
   843  0618                     	;# 
   844  0619                     	;# 
   845  061A                     	;# 
   846  061B                     	;# 
   847  061C                     	;# 
   848  061D                     	;# 
   849  061E                     	;# 
   850  070C                     	;# 
   851  070D                     	;# 
   852  070E                     	;# 
   853  070F                     	;# 
   854  0710                     	;# 
   855  0711                     	;# 
   856  0712                     	;# 
   857  0713                     	;# 
   858  0714                     	;# 
   859  0716                     	;# 
   860  0717                     	;# 
   861  0718                     	;# 
   862  0719                     	;# 
   863  071A                     	;# 
   864  071B                     	;# 
   865  071C                     	;# 
   866  071D                     	;# 
   867  071E                     	;# 
   868  0796                     	;# 
   869  0797                     	;# 
   870  0798                     	;# 
   871  0799                     	;# 
   872  079A                     	;# 
   873  079B                     	;# 
   874  079C                     	;# 
   875  079D                     	;# 
   876  080C                     	;# 
   877  080D                     	;# 
   878  080E                     	;# 
   879  080F                     	;# 
   880  0810                     	;# 
   881  0811                     	;# 
   882  0812                     	;# 
   883  0813                     	;# 
   884  0814                     	;# 
   885  081A                     	;# 
   886  081A                     	;# 
   887  081B                     	;# 
   888  081C                     	;# 
   889  081C                     	;# 
   890  081D                     	;# 
   891  081E                     	;# 
   892  081F                     	;# 
   893  088C                     	;# 
   894  088D                     	;# 
   895  088E                     	;# 
   896  088F                     	;# 
   897  0890                     	;# 
   898  0891                     	;# 
   899  0892                     	;# 
   900  0893                     	;# 
   901  0895                     	;# 
   902  0896                     	;# 
   903  0897                     	;# 
   904  0898                     	;# 
   905  0899                     	;# 
   906  089A                     	;# 
   907  089B                     	;# 
   908  090C                     	;# 
   909  090E                     	;# 
   910  090F                     	;# 
   911  091F                     	;# 
   912  098F                     	;# 
   913  098F                     	;# 
   914  0990                     	;# 
   915  0991                     	;# 
   916  0992                     	;# 
   917  0993                     	;# 
   918  0994                     	;# 
   919  0995                     	;# 
   920  0996                     	;# 
   921  0997                     	;# 
   922  1E0F                     	;# 
   923  1E10                     	;# 
   924  1E11                     	;# 
   925  1E12                     	;# 
   926  1E13                     	;# 
   927  1E14                     	;# 
   928  1E15                     	;# 
   929  1E16                     	;# 
   930  1E17                     	;# 
   931  1E18                     	;# 
   932  1E19                     	;# 
   933  1E1A                     	;# 
   934  1E1B                     	;# 
   935  1E1C                     	;# 
   936  1E1D                     	;# 
   937  1E1E                     	;# 
   938  1E1F                     	;# 
   939  1E20                     	;# 
   940  1E21                     	;# 
   941  1E22                     	;# 
   942  1E23                     	;# 
   943  1E24                     	;# 
   944  1E25                     	;# 
   945  1E26                     	;# 
   946  1E27                     	;# 
   947  1E28                     	;# 
   948  1E29                     	;# 
   949  1E2A                     	;# 
   950  1E2B                     	;# 
   951  1E2C                     	;# 
   952  1E2D                     	;# 
   953  1E2E                     	;# 
   954  1E2F                     	;# 
   955  1E30                     	;# 
   956  1E31                     	;# 
   957  1E32                     	;# 
   958  1E33                     	;# 
   959  1E34                     	;# 
   960  1E35                     	;# 
   961  1E36                     	;# 
   962  1E37                     	;# 
   963  1E8F                     	;# 
   964  1E90                     	;# 
   965  1E91                     	;# 
   966  1E92                     	;# 
   967  1E93                     	;# 
   968  1E94                     	;# 
   969  1E95                     	;# 
   970  1E96                     	;# 
   971  1E97                     	;# 
   972  1E9C                     	;# 
   973  1E9D                     	;# 
   974  1E9E                     	;# 
   975  1EA1                     	;# 
   976  1EA2                     	;# 
   977  1EA3                     	;# 
   978  1EA4                     	;# 
   979  1EA9                     	;# 
   980  1EAA                     	;# 
   981  1EB1                     	;# 
   982  1EB2                     	;# 
   983  1EB8                     	;# 
   984  1EB9                     	;# 
   985  1EBA                     	;# 
   986  1EBB                     	;# 
   987  1EBC                     	;# 
   988  1EBD                     	;# 
   989  1EBE                     	;# 
   990  1EC3                     	;# 
   991  1EC5                     	;# 
   992  1EC6                     	;# 
   993  1EC7                     	;# 
   994  1EC8                     	;# 
   995  1EC9                     	;# 
   996  1ECA                     	;# 
   997  1ECB                     	;# 
   998  1ECB                     	;# 
   999  1ECB                     	;# 
  1000  1ECC                     	;# 
  1001  1ECC                     	;# 
  1002  1ECC                     	;# 
  1003  1F10                     	;# 
  1004  1F11                     	;# 
  1005  1F12                     	;# 
  1006  1F14                     	;# 
  1007  1F15                     	;# 
  1008  1F1C                     	;# 
  1009  1F1D                     	;# 
  1010  1F1E                     	;# 
  1011  1F1F                     	;# 
  1012  1F20                     	;# 
  1013  1F21                     	;# 
  1014  1F22                     	;# 
  1015  1F23                     	;# 
  1016  1F24                     	;# 
  1017  1F25                     	;# 
  1018  1F26                     	;# 
  1019  1F27                     	;# 
  1020  1F38                     	;# 
  1021  1F39                     	;# 
  1022  1F3A                     	;# 
  1023  1F3B                     	;# 
  1024  1F3C                     	;# 
  1025  1F3D                     	;# 
  1026  1F3E                     	;# 
  1027  1F3F                     	;# 
  1028  1F43                     	;# 
  1029  1F44                     	;# 
  1030  1F45                     	;# 
  1031  1F46                     	;# 
  1032  1F47                     	;# 
  1033  1F48                     	;# 
  1034  1F49                     	;# 
  1035  1F4A                     	;# 
  1036  1F4E                     	;# 
  1037  1F4F                     	;# 
  1038  1F50                     	;# 
  1039  1F51                     	;# 
  1040  1F52                     	;# 
  1041  1F53                     	;# 
  1042  1F54                     	;# 
  1043  1F55                     	;# 
  1044  1FE4                     	;# 
  1045  1FE5                     	;# 
  1046  1FE6                     	;# 
  1047  1FE7                     	;# 
  1048  1FE8                     	;# 
  1049  1FE8                     	;# 
  1050  1FE9                     	;# 
  1051  1FEA                     	;# 
  1052  1FEB                     	;# 
  1053  1FED                     	;# 
  1054  1FEE                     	;# 
  1055  1FEF                     	;# 
  1056  0000                     	;# 
  1057  0001                     	;# 
  1058  0002                     	;# 
  1059  0003                     	;# 
  1060  0004                     	;# 
  1061  0005                     	;# 
  1062  0006                     	;# 
  1063  0007                     	;# 
  1064  0008                     	;# 
  1065  0009                     	;# 
  1066  000A                     	;# 
  1067  000B                     	;# 
  1068  000C                     	;# 
  1069  000D                     	;# 
  1070  000E                     	;# 
  1071  0012                     	;# 
  1072  0013                     	;# 
  1073  0014                     	;# 
  1074  0018                     	;# 
  1075  0019                     	;# 
  1076  001A                     	;# 
  1077  008C                     	;# 
  1078  008C                     	;# 
  1079  008D                     	;# 
  1080  008E                     	;# 
  1081  008E                     	;# 
  1082  008F                     	;# 
  1083  0090                     	;# 
  1084  0090                     	;# 
  1085  0091                     	;# 
  1086  0092                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0094                     	;# 
  1090  0094                     	;# 
  1091  0095                     	;# 
  1092  0096                     	;# 
  1093  0096                     	;# 
  1094  0097                     	;# 
  1095  0098                     	;# 
  1096  0099                     	;# 
  1097  009A                     	;# 
  1098  009B                     	;# 
  1099  009B                     	;# 
  1100  009C                     	;# 
  1101  009D                     	;# 
  1102  009D                     	;# 
  1103  009E                     	;# 
  1104  009F                     	;# 
  1105  010C                     	;# 
  1106  010C                     	;# 
  1107  010D                     	;# 
  1108  010E                     	;# 
  1109  010F                     	;# 
  1110  010F                     	;# 
  1111  0110                     	;# 
  1112  0111                     	;# 
  1113  0112                     	;# 
  1114  0113                     	;# 
  1115  0114                     	;# 
  1116  0115                     	;# 
  1117  0116                     	;# 
  1118  0117                     	;# 
  1119  0118                     	;# 
  1120  0119                     	;# 
  1121  0119                     	;# 
  1122  0119                     	;# 
  1123  011A                     	;# 
  1124  011A                     	;# 
  1125  011A                     	;# 
  1126  011B                     	;# 
  1127  011B                     	;# 
  1128  011B                     	;# 
  1129  011B                     	;# 
  1130  011B                     	;# 
  1131  011C                     	;# 
  1132  011C                     	;# 
  1133  011C                     	;# 
  1134  011D                     	;# 
  1135  011D                     	;# 
  1136  011D                     	;# 
  1137  011E                     	;# 
  1138  011E                     	;# 
  1139  011E                     	;# 
  1140  011F                     	;# 
  1141  011F                     	;# 
  1142  011F                     	;# 
  1143  011F                     	;# 
  1144  011F                     	;# 
  1145  018C                     	;# 
  1146  018D                     	;# 
  1147  018E                     	;# 
  1148  018F                     	;# 
  1149  0190                     	;# 
  1150  0191                     	;# 
  1151  0192                     	;# 
  1152  0196                     	;# 
  1153  0197                     	;# 
  1154  0198                     	;# 
  1155  0199                     	;# 
  1156  019A                     	;# 
  1157  019B                     	;# 
  1158  019C                     	;# 
  1159  020C                     	;# 
  1160  020D                     	;# 
  1161  020E                     	;# 
  1162  020E                     	;# 
  1163  020F                     	;# 
  1164  020F                     	;# 
  1165  0210                     	;# 
  1166  0210                     	;# 
  1167  0211                     	;# 
  1168  0211                     	;# 
  1169  0212                     	;# 
  1170  0213                     	;# 
  1171  0214                     	;# 
  1172  0214                     	;# 
  1173  0215                     	;# 
  1174  0215                     	;# 
  1175  0216                     	;# 
  1176  0216                     	;# 
  1177  0217                     	;# 
  1178  0217                     	;# 
  1179  0218                     	;# 
  1180  0219                     	;# 
  1181  021A                     	;# 
  1182  021A                     	;# 
  1183  021B                     	;# 
  1184  021B                     	;# 
  1185  021C                     	;# 
  1186  021C                     	;# 
  1187  021D                     	;# 
  1188  021D                     	;# 
  1189  021E                     	;# 
  1190  021F                     	;# 
  1191  028C                     	;# 
  1192  028C                     	;# 
  1193  028D                     	;# 
  1194  028D                     	;# 
  1195  028E                     	;# 
  1196  028F                     	;# 
  1197  0290                     	;# 
  1198  0291                     	;# 
  1199  0292                     	;# 
  1200  0292                     	;# 
  1201  0293                     	;# 
  1202  0293                     	;# 
  1203  0294                     	;# 
  1204  0295                     	;# 
  1205  0296                     	;# 
  1206  0297                     	;# 
  1207  0298                     	;# 
  1208  0298                     	;# 
  1209  0299                     	;# 
  1210  0299                     	;# 
  1211  029A                     	;# 
  1212  029B                     	;# 
  1213  029C                     	;# 
  1214  029D                     	;# 
  1215  029F                     	;# 
  1216  030C                     	;# 
  1217  030C                     	;# 
  1218  030D                     	;# 
  1219  030E                     	;# 
  1220  030F                     	;# 
  1221  0310                     	;# 
  1222  0310                     	;# 
  1223  0311                     	;# 
  1224  0312                     	;# 
  1225  0313                     	;# 
  1226  0314                     	;# 
  1227  0314                     	;# 
  1228  0315                     	;# 
  1229  0316                     	;# 
  1230  0317                     	;# 
  1231  0318                     	;# 
  1232  0318                     	;# 
  1233  0319                     	;# 
  1234  031A                     	;# 
  1235  031B                     	;# 
  1236  038C                     	;# 
  1237  038C                     	;# 
  1238  038D                     	;# 
  1239  038E                     	;# 
  1240  0390                     	;# 
  1241  0390                     	;# 
  1242  0391                     	;# 
  1243  0392                     	;# 
  1244  048C                     	;# 
  1245  048C                     	;# 
  1246  048D                     	;# 
  1247  048E                     	;# 
  1248  048F                     	;# 
  1249  048F                     	;# 
  1250  0490                     	;# 
  1251  0491                     	;# 
  1252  0492                     	;# 
  1253  0492                     	;# 
  1254  0493                     	;# 
  1255  0494                     	;# 
  1256  0495                     	;# 
  1257  0495                     	;# 
  1258  0496                     	;# 
  1259  0497                     	;# 
  1260  0498                     	;# 
  1261  0499                     	;# 
  1262  049A                     	;# 
  1263  049B                     	;# 
  1264  049C                     	;# 
  1265  049D                     	;# 
  1266  058C                     	;# 
  1267  058C                     	;# 
  1268  058D                     	;# 
  1269  058E                     	;# 
  1270  058F                     	;# 
  1271  058F                     	;# 
  1272  0590                     	;# 
  1273  0591                     	;# 
  1274  0592                     	;# 
  1275  0593                     	;# 
  1276  059C                     	;# 
  1277  059C                     	;# 
  1278  059D                     	;# 
  1279  059D                     	;# 
  1280  059E                     	;# 
  1281  059F                     	;# 
  1282  060C                     	;# 
  1283  060C                     	;# 
  1284  060D                     	;# 
  1285  060D                     	;# 
  1286  060E                     	;# 
  1287  060F                     	;# 
  1288  0610                     	;# 
  1289  0611                     	;# 
  1290  0612                     	;# 
  1291  0613                     	;# 
  1292  0614                     	;# 
  1293  0616                     	;# 
  1294  0616                     	;# 
  1295  0617                     	;# 
  1296  0617                     	;# 
  1297  0618                     	;# 
  1298  0619                     	;# 
  1299  061A                     	;# 
  1300  061B                     	;# 
  1301  061C                     	;# 
  1302  061D                     	;# 
  1303  061E                     	;# 
  1304  070C                     	;# 
  1305  070D                     	;# 
  1306  070E                     	;# 
  1307  070F                     	;# 
  1308  0710                     	;# 
  1309  0711                     	;# 
  1310  0712                     	;# 
  1311  0713                     	;# 
  1312  0714                     	;# 
  1313  0716                     	;# 
  1314  0717                     	;# 
  1315  0718                     	;# 
  1316  0719                     	;# 
  1317  071A                     	;# 
  1318  071B                     	;# 
  1319  071C                     	;# 
  1320  071D                     	;# 
  1321  071E                     	;# 
  1322  0796                     	;# 
  1323  0797                     	;# 
  1324  0798                     	;# 
  1325  0799                     	;# 
  1326  079A                     	;# 
  1327  079B                     	;# 
  1328  079C                     	;# 
  1329  079D                     	;# 
  1330  080C                     	;# 
  1331  080D                     	;# 
  1332  080E                     	;# 
  1333  080F                     	;# 
  1334  0810                     	;# 
  1335  0811                     	;# 
  1336  0812                     	;# 
  1337  0813                     	;# 
  1338  0814                     	;# 
  1339  081A                     	;# 
  1340  081A                     	;# 
  1341  081B                     	;# 
  1342  081C                     	;# 
  1343  081C                     	;# 
  1344  081D                     	;# 
  1345  081E                     	;# 
  1346  081F                     	;# 
  1347  088C                     	;# 
  1348  088D                     	;# 
  1349  088E                     	;# 
  1350  088F                     	;# 
  1351  0890                     	;# 
  1352  0891                     	;# 
  1353  0892                     	;# 
  1354  0893                     	;# 
  1355  0895                     	;# 
  1356  0896                     	;# 
  1357  0897                     	;# 
  1358  0898                     	;# 
  1359  0899                     	;# 
  1360  089A                     	;# 
  1361  089B                     	;# 
  1362  090C                     	;# 
  1363  090E                     	;# 
  1364  090F                     	;# 
  1365  091F                     	;# 
  1366  098F                     	;# 
  1367  098F                     	;# 
  1368  0990                     	;# 
  1369  0991                     	;# 
  1370  0992                     	;# 
  1371  0993                     	;# 
  1372  0994                     	;# 
  1373  0995                     	;# 
  1374  0996                     	;# 
  1375  0997                     	;# 
  1376  1E0F                     	;# 
  1377  1E10                     	;# 
  1378  1E11                     	;# 
  1379  1E12                     	;# 
  1380  1E13                     	;# 
  1381  1E14                     	;# 
  1382  1E15                     	;# 
  1383  1E16                     	;# 
  1384  1E17                     	;# 
  1385  1E18                     	;# 
  1386  1E19                     	;# 
  1387  1E1A                     	;# 
  1388  1E1B                     	;# 
  1389  1E1C                     	;# 
  1390  1E1D                     	;# 
  1391  1E1E                     	;# 
  1392  1E1F                     	;# 
  1393  1E20                     	;# 
  1394  1E21                     	;# 
  1395  1E22                     	;# 
  1396  1E23                     	;# 
  1397  1E24                     	;# 
  1398  1E25                     	;# 
  1399  1E26                     	;# 
  1400  1E27                     	;# 
  1401  1E28                     	;# 
  1402  1E29                     	;# 
  1403  1E2A                     	;# 
  1404  1E2B                     	;# 
  1405  1E2C                     	;# 
  1406  1E2D                     	;# 
  1407  1E2E                     	;# 
  1408  1E2F                     	;# 
  1409  1E30                     	;# 
  1410  1E31                     	;# 
  1411  1E32                     	;# 
  1412  1E33                     	;# 
  1413  1E34                     	;# 
  1414  1E35                     	;# 
  1415  1E36                     	;# 
  1416  1E37                     	;# 
  1417  1E8F                     	;# 
  1418  1E90                     	;# 
  1419  1E91                     	;# 
  1420  1E92                     	;# 
  1421  1E93                     	;# 
  1422  1E94                     	;# 
  1423  1E95                     	;# 
  1424  1E96                     	;# 
  1425  1E97                     	;# 
  1426  1E9C                     	;# 
  1427  1E9D                     	;# 
  1428  1E9E                     	;# 
  1429  1EA1                     	;# 
  1430  1EA2                     	;# 
  1431  1EA3                     	;# 
  1432  1EA4                     	;# 
  1433  1EA9                     	;# 
  1434  1EAA                     	;# 
  1435  1EB1                     	;# 
  1436  1EB2                     	;# 
  1437  1EB8                     	;# 
  1438  1EB9                     	;# 
  1439  1EBA                     	;# 
  1440  1EBB                     	;# 
  1441  1EBC                     	;# 
  1442  1EBD                     	;# 
  1443  1EBE                     	;# 
  1444  1EC3                     	;# 
  1445  1EC5                     	;# 
  1446  1EC6                     	;# 
  1447  1EC7                     	;# 
  1448  1EC8                     	;# 
  1449  1EC9                     	;# 
  1450  1ECA                     	;# 
  1451  1ECB                     	;# 
  1452  1ECB                     	;# 
  1453  1ECB                     	;# 
  1454  1ECC                     	;# 
  1455  1ECC                     	;# 
  1456  1ECC                     	;# 
  1457  1F10                     	;# 
  1458  1F11                     	;# 
  1459  1F12                     	;# 
  1460  1F14                     	;# 
  1461  1F15                     	;# 
  1462  1F1C                     	;# 
  1463  1F1D                     	;# 
  1464  1F1E                     	;# 
  1465  1F1F                     	;# 
  1466  1F20                     	;# 
  1467  1F21                     	;# 
  1468  1F22                     	;# 
  1469  1F23                     	;# 
  1470  1F24                     	;# 
  1471  1F25                     	;# 
  1472  1F26                     	;# 
  1473  1F27                     	;# 
  1474  1F38                     	;# 
  1475  1F39                     	;# 
  1476  1F3A                     	;# 
  1477  1F3B                     	;# 
  1478  1F3C                     	;# 
  1479  1F3D                     	;# 
  1480  1F3E                     	;# 
  1481  1F3F                     	;# 
  1482  1F43                     	;# 
  1483  1F44                     	;# 
  1484  1F45                     	;# 
  1485  1F46                     	;# 
  1486  1F47                     	;# 
  1487  1F48                     	;# 
  1488  1F49                     	;# 
  1489  1F4A                     	;# 
  1490  1F4E                     	;# 
  1491  1F4F                     	;# 
  1492  1F50                     	;# 
  1493  1F51                     	;# 
  1494  1F52                     	;# 
  1495  1F53                     	;# 
  1496  1F54                     	;# 
  1497  1F55                     	;# 
  1498  1FE4                     	;# 
  1499  1FE5                     	;# 
  1500  1FE6                     	;# 
  1501  1FE7                     	;# 
  1502  1FE8                     	;# 
  1503  1FE8                     	;# 
  1504  1FE9                     	;# 
  1505  1FEA                     	;# 
  1506  1FEB                     	;# 
  1507  1FED                     	;# 
  1508  1FEE                     	;# 
  1509  1FEF                     	;# 
  1510  0000                     	;# 
  1511  0001                     	;# 
  1512  0002                     	;# 
  1513  0003                     	;# 
  1514  0004                     	;# 
  1515  0005                     	;# 
  1516  0006                     	;# 
  1517  0007                     	;# 
  1518  0008                     	;# 
  1519  0009                     	;# 
  1520  000A                     	;# 
  1521  000B                     	;# 
  1522  000C                     	;# 
  1523  000D                     	;# 
  1524  000E                     	;# 
  1525  0012                     	;# 
  1526  0013                     	;# 
  1527  0014                     	;# 
  1528  0018                     	;# 
  1529  0019                     	;# 
  1530  001A                     	;# 
  1531  008C                     	;# 
  1532  008C                     	;# 
  1533  008D                     	;# 
  1534  008E                     	;# 
  1535  008E                     	;# 
  1536  008F                     	;# 
  1537  0090                     	;# 
  1538  0090                     	;# 
  1539  0091                     	;# 
  1540  0092                     	;# 
  1541  0092                     	;# 
  1542  0093                     	;# 
  1543  0094                     	;# 
  1544  0094                     	;# 
  1545  0095                     	;# 
  1546  0096                     	;# 
  1547  0096                     	;# 
  1548  0097                     	;# 
  1549  0098                     	;# 
  1550  0099                     	;# 
  1551  009A                     	;# 
  1552  009B                     	;# 
  1553  009B                     	;# 
  1554  009C                     	;# 
  1555  009D                     	;# 
  1556  009D                     	;# 
  1557  009E                     	;# 
  1558  009F                     	;# 
  1559  010C                     	;# 
  1560  010C                     	;# 
  1561  010D                     	;# 
  1562  010E                     	;# 
  1563  010F                     	;# 
  1564  010F                     	;# 
  1565  0110                     	;# 
  1566  0111                     	;# 
  1567  0112                     	;# 
  1568  0113                     	;# 
  1569  0114                     	;# 
  1570  0115                     	;# 
  1571  0116                     	;# 
  1572  0117                     	;# 
  1573  0118                     	;# 
  1574  0119                     	;# 
  1575  0119                     	;# 
  1576  0119                     	;# 
  1577  011A                     	;# 
  1578  011A                     	;# 
  1579  011A                     	;# 
  1580  011B                     	;# 
  1581  011B                     	;# 
  1582  011B                     	;# 
  1583  011B                     	;# 
  1584  011B                     	;# 
  1585  011C                     	;# 
  1586  011C                     	;# 
  1587  011C                     	;# 
  1588  011D                     	;# 
  1589  011D                     	;# 
  1590  011D                     	;# 
  1591  011E                     	;# 
  1592  011E                     	;# 
  1593  011E                     	;# 
  1594  011F                     	;# 
  1595  011F                     	;# 
  1596  011F                     	;# 
  1597  011F                     	;# 
  1598  011F                     	;# 
  1599  018C                     	;# 
  1600  018D                     	;# 
  1601  018E                     	;# 
  1602  018F                     	;# 
  1603  0190                     	;# 
  1604  0191                     	;# 
  1605  0192                     	;# 
  1606  0196                     	;# 
  1607  0197                     	;# 
  1608  0198                     	;# 
  1609  0199                     	;# 
  1610  019A                     	;# 
  1611  019B                     	;# 
  1612  019C                     	;# 
  1613  020C                     	;# 
  1614  020D                     	;# 
  1615  020E                     	;# 
  1616  020E                     	;# 
  1617  020F                     	;# 
  1618  020F                     	;# 
  1619  0210                     	;# 
  1620  0210                     	;# 
  1621  0211                     	;# 
  1622  0211                     	;# 
  1623  0212                     	;# 
  1624  0213                     	;# 
  1625  0214                     	;# 
  1626  0214                     	;# 
  1627  0215                     	;# 
  1628  0215                     	;# 
  1629  0216                     	;# 
  1630  0216                     	;# 
  1631  0217                     	;# 
  1632  0217                     	;# 
  1633  0218                     	;# 
  1634  0219                     	;# 
  1635  021A                     	;# 
  1636  021A                     	;# 
  1637  021B                     	;# 
  1638  021B                     	;# 
  1639  021C                     	;# 
  1640  021C                     	;# 
  1641  021D                     	;# 
  1642  021D                     	;# 
  1643  021E                     	;# 
  1644  021F                     	;# 
  1645  028C                     	;# 
  1646  028C                     	;# 
  1647  028D                     	;# 
  1648  028D                     	;# 
  1649  028E                     	;# 
  1650  028F                     	;# 
  1651  0290                     	;# 
  1652  0291                     	;# 
  1653  0292                     	;# 
  1654  0292                     	;# 
  1655  0293                     	;# 
  1656  0293                     	;# 
  1657  0294                     	;# 
  1658  0295                     	;# 
  1659  0296                     	;# 
  1660  0297                     	;# 
  1661  0298                     	;# 
  1662  0298                     	;# 
  1663  0299                     	;# 
  1664  0299                     	;# 
  1665  029A                     	;# 
  1666  029B                     	;# 
  1667  029C                     	;# 
  1668  029D                     	;# 
  1669  029F                     	;# 
  1670  030C                     	;# 
  1671  030C                     	;# 
  1672  030D                     	;# 
  1673  030E                     	;# 
  1674  030F                     	;# 
  1675  0310                     	;# 
  1676  0310                     	;# 
  1677  0311                     	;# 
  1678  0312                     	;# 
  1679  0313                     	;# 
  1680  0314                     	;# 
  1681  0314                     	;# 
  1682  0315                     	;# 
  1683  0316                     	;# 
  1684  0317                     	;# 
  1685  0318                     	;# 
  1686  0318                     	;# 
  1687  0319                     	;# 
  1688  031A                     	;# 
  1689  031B                     	;# 
  1690  038C                     	;# 
  1691  038C                     	;# 
  1692  038D                     	;# 
  1693  038E                     	;# 
  1694  0390                     	;# 
  1695  0390                     	;# 
  1696  0391                     	;# 
  1697  0392                     	;# 
  1698  048C                     	;# 
  1699  048C                     	;# 
  1700  048D                     	;# 
  1701  048E                     	;# 
  1702  048F                     	;# 
  1703  048F                     	;# 
  1704  0490                     	;# 
  1705  0491                     	;# 
  1706  0492                     	;# 
  1707  0492                     	;# 
  1708  0493                     	;# 
  1709  0494                     	;# 
  1710  0495                     	;# 
  1711  0495                     	;# 
  1712  0496                     	;# 
  1713  0497                     	;# 
  1714  0498                     	;# 
  1715  0499                     	;# 
  1716  049A                     	;# 
  1717  049B                     	;# 
  1718  049C                     	;# 
  1719  049D                     	;# 
  1720  058C                     	;# 
  1721  058C                     	;# 
  1722  058D                     	;# 
  1723  058E                     	;# 
  1724  058F                     	;# 
  1725  058F                     	;# 
  1726  0590                     	;# 
  1727  0591                     	;# 
  1728  0592                     	;# 
  1729  0593                     	;# 
  1730  059C                     	;# 
  1731  059C                     	;# 
  1732  059D                     	;# 
  1733  059D                     	;# 
  1734  059E                     	;# 
  1735  059F                     	;# 
  1736  060C                     	;# 
  1737  060C                     	;# 
  1738  060D                     	;# 
  1739  060D                     	;# 
  1740  060E                     	;# 
  1741  060F                     	;# 
  1742  0610                     	;# 
  1743  0611                     	;# 
  1744  0612                     	;# 
  1745  0613                     	;# 
  1746  0614                     	;# 
  1747  0616                     	;# 
  1748  0616                     	;# 
  1749  0617                     	;# 
  1750  0617                     	;# 
  1751  0618                     	;# 
  1752  0619                     	;# 
  1753  061A                     	;# 
  1754  061B                     	;# 
  1755  061C                     	;# 
  1756  061D                     	;# 
  1757  061E                     	;# 
  1758  070C                     	;# 
  1759  070D                     	;# 
  1760  070E                     	;# 
  1761  070F                     	;# 
  1762  0710                     	;# 
  1763  0711                     	;# 
  1764  0712                     	;# 
  1765  0713                     	;# 
  1766  0714                     	;# 
  1767  0716                     	;# 
  1768  0717                     	;# 
  1769  0718                     	;# 
  1770  0719                     	;# 
  1771  071A                     	;# 
  1772  071B                     	;# 
  1773  071C                     	;# 
  1774  071D                     	;# 
  1775  071E                     	;# 
  1776  0796                     	;# 
  1777  0797                     	;# 
  1778  0798                     	;# 
  1779  0799                     	;# 
  1780  079A                     	;# 
  1781  079B                     	;# 
  1782  079C                     	;# 
  1783  079D                     	;# 
  1784  080C                     	;# 
  1785  080D                     	;# 
  1786  080E                     	;# 
  1787  080F                     	;# 
  1788  0810                     	;# 
  1789  0811                     	;# 
  1790  0812                     	;# 
  1791  0813                     	;# 
  1792  0814                     	;# 
  1793  081A                     	;# 
  1794  081A                     	;# 
  1795  081B                     	;# 
  1796  081C                     	;# 
  1797  081C                     	;# 
  1798  081D                     	;# 
  1799  081E                     	;# 
  1800  081F                     	;# 
  1801  088C                     	;# 
  1802  088D                     	;# 
  1803  088E                     	;# 
  1804  088F                     	;# 
  1805  0890                     	;# 
  1806  0891                     	;# 
  1807  0892                     	;# 
  1808  0893                     	;# 
  1809  0895                     	;# 
  1810  0896                     	;# 
  1811  0897                     	;# 
  1812  0898                     	;# 
  1813  0899                     	;# 
  1814  089A                     	;# 
  1815  089B                     	;# 
  1816  090C                     	;# 
  1817  090E                     	;# 
  1818  090F                     	;# 
  1819  091F                     	;# 
  1820  098F                     	;# 
  1821  098F                     	;# 
  1822  0990                     	;# 
  1823  0991                     	;# 
  1824  0992                     	;# 
  1825  0993                     	;# 
  1826  0994                     	;# 
  1827  0995                     	;# 
  1828  0996                     	;# 
  1829  0997                     	;# 
  1830  1E0F                     	;# 
  1831  1E10                     	;# 
  1832  1E11                     	;# 
  1833  1E12                     	;# 
  1834  1E13                     	;# 
  1835  1E14                     	;# 
  1836  1E15                     	;# 
  1837  1E16                     	;# 
  1838  1E17                     	;# 
  1839  1E18                     	;# 
  1840  1E19                     	;# 
  1841  1E1A                     	;# 
  1842  1E1B                     	;# 
  1843  1E1C                     	;# 
  1844  1E1D                     	;# 
  1845  1E1E                     	;# 
  1846  1E1F                     	;# 
  1847  1E20                     	;# 
  1848  1E21                     	;# 
  1849  1E22                     	;# 
  1850  1E23                     	;# 
  1851  1E24                     	;# 
  1852  1E25                     	;# 
  1853  1E26                     	;# 
  1854  1E27                     	;# 
  1855  1E28                     	;# 
  1856  1E29                     	;# 
  1857  1E2A                     	;# 
  1858  1E2B                     	;# 
  1859  1E2C                     	;# 
  1860  1E2D                     	;# 
  1861  1E2E                     	;# 
  1862  1E2F                     	;# 
  1863  1E30                     	;# 
  1864  1E31                     	;# 
  1865  1E32                     	;# 
  1866  1E33                     	;# 
  1867  1E34                     	;# 
  1868  1E35                     	;# 
  1869  1E36                     	;# 
  1870  1E37                     	;# 
  1871  1E8F                     	;# 
  1872  1E90                     	;# 
  1873  1E91                     	;# 
  1874  1E92                     	;# 
  1875  1E93                     	;# 
  1876  1E94                     	;# 
  1877  1E95                     	;# 
  1878  1E96                     	;# 
  1879  1E97                     	;# 
  1880  1E9C                     	;# 
  1881  1E9D                     	;# 
  1882  1E9E                     	;# 
  1883  1EA1                     	;# 
  1884  1EA2                     	;# 
  1885  1EA3                     	;# 
  1886  1EA4                     	;# 
  1887  1EA9                     	;# 
  1888  1EAA                     	;# 
  1889  1EB1                     	;# 
  1890  1EB2                     	;# 
  1891  1EB8                     	;# 
  1892  1EB9                     	;# 
  1893  1EBA                     	;# 
  1894  1EBB                     	;# 
  1895  1EBC                     	;# 
  1896  1EBD                     	;# 
  1897  1EBE                     	;# 
  1898  1EC3                     	;# 
  1899  1EC5                     	;# 
  1900  1EC6                     	;# 
  1901  1EC7                     	;# 
  1902  1EC8                     	;# 
  1903  1EC9                     	;# 
  1904  1ECA                     	;# 
  1905  1ECB                     	;# 
  1906  1ECB                     	;# 
  1907  1ECB                     	;# 
  1908  1ECC                     	;# 
  1909  1ECC                     	;# 
  1910  1ECC                     	;# 
  1911  1F10                     	;# 
  1912  1F11                     	;# 
  1913  1F12                     	;# 
  1914  1F14                     	;# 
  1915  1F15                     	;# 
  1916  1F1C                     	;# 
  1917  1F1D                     	;# 
  1918  1F1E                     	;# 
  1919  1F1F                     	;# 
  1920  1F20                     	;# 
  1921  1F21                     	;# 
  1922  1F22                     	;# 
  1923  1F23                     	;# 
  1924  1F24                     	;# 
  1925  1F25                     	;# 
  1926  1F26                     	;# 
  1927  1F27                     	;# 
  1928  1F38                     	;# 
  1929  1F39                     	;# 
  1930  1F3A                     	;# 
  1931  1F3B                     	;# 
  1932  1F3C                     	;# 
  1933  1F3D                     	;# 
  1934  1F3E                     	;# 
  1935  1F3F                     	;# 
  1936  1F43                     	;# 
  1937  1F44                     	;# 
  1938  1F45                     	;# 
  1939  1F46                     	;# 
  1940  1F47                     	;# 
  1941  1F48                     	;# 
  1942  1F49                     	;# 
  1943  1F4A                     	;# 
  1944  1F4E                     	;# 
  1945  1F4F                     	;# 
  1946  1F50                     	;# 
  1947  1F51                     	;# 
  1948  1F52                     	;# 
  1949  1F53                     	;# 
  1950  1F54                     	;# 
  1951  1F55                     	;# 
  1952  1FE4                     	;# 
  1953  1FE5                     	;# 
  1954  1FE6                     	;# 
  1955  1FE7                     	;# 
  1956  1FE8                     	;# 
  1957  1FE8                     	;# 
  1958  1FE9                     	;# 
  1959  1FEA                     	;# 
  1960  1FEB                     	;# 
  1961  1FED                     	;# 
  1962  1FEE                     	;# 
  1963  1FEF                     	;# 
  1964  0000                     	;# 
  1965  0001                     	;# 
  1966  0002                     	;# 
  1967  0003                     	;# 
  1968  0004                     	;# 
  1969  0005                     	;# 
  1970  0006                     	;# 
  1971  0007                     	;# 
  1972  0008                     	;# 
  1973  0009                     	;# 
  1974  000A                     	;# 
  1975  000B                     	;# 
  1976  000C                     	;# 
  1977  000D                     	;# 
  1978  000E                     	;# 
  1979  0012                     	;# 
  1980  0013                     	;# 
  1981  0014                     	;# 
  1982  0018                     	;# 
  1983  0019                     	;# 
  1984  001A                     	;# 
  1985  008C                     	;# 
  1986  008C                     	;# 
  1987  008D                     	;# 
  1988  008E                     	;# 
  1989  008E                     	;# 
  1990  008F                     	;# 
  1991  0090                     	;# 
  1992  0090                     	;# 
  1993  0091                     	;# 
  1994  0092                     	;# 
  1995  0092                     	;# 
  1996  0093                     	;# 
  1997  0094                     	;# 
  1998  0094                     	;# 
  1999  0095                     	;# 
  2000  0096                     	;# 
  2001  0096                     	;# 
  2002  0097                     	;# 
  2003  0098                     	;# 
  2004  0099                     	;# 
  2005  009A                     	;# 
  2006  009B                     	;# 
  2007  009B                     	;# 
  2008  009C                     	;# 
  2009  009D                     	;# 
  2010  009D                     	;# 
  2011  009E                     	;# 
  2012  009F                     	;# 
  2013  010C                     	;# 
  2014  010C                     	;# 
  2015  010D                     	;# 
  2016  010E                     	;# 
  2017  010F                     	;# 
  2018  010F                     	;# 
  2019  0110                     	;# 
  2020  0111                     	;# 
  2021  0112                     	;# 
  2022  0113                     	;# 
  2023  0114                     	;# 
  2024  0115                     	;# 
  2025  0116                     	;# 
  2026  0117                     	;# 
  2027  0118                     	;# 
  2028  0119                     	;# 
  2029  0119                     	;# 
  2030  0119                     	;# 
  2031  011A                     	;# 
  2032  011A                     	;# 
  2033  011A                     	;# 
  2034  011B                     	;# 
  2035  011B                     	;# 
  2036  011B                     	;# 
  2037  011B                     	;# 
  2038  011B                     	;# 
  2039  011C                     	;# 
  2040  011C                     	;# 
  2041  011C                     	;# 
  2042  011D                     	;# 
  2043  011D                     	;# 
  2044  011D                     	;# 
  2045  011E                     	;# 
  2046  011E                     	;# 
  2047  011E                     	;# 
  2048  011F                     	;# 
  2049  011F                     	;# 
  2050  011F                     	;# 
  2051  011F                     	;# 
  2052  011F                     	;# 
  2053  018C                     	;# 
  2054  018D                     	;# 
  2055  018E                     	;# 
  2056  018F                     	;# 
  2057  0190                     	;# 
  2058  0191                     	;# 
  2059  0192                     	;# 
  2060  0196                     	;# 
  2061  0197                     	;# 
  2062  0198                     	;# 
  2063  0199                     	;# 
  2064  019A                     	;# 
  2065  019B                     	;# 
  2066  019C                     	;# 
  2067  020C                     	;# 
  2068  020D                     	;# 
  2069  020E                     	;# 
  2070  020E                     	;# 
  2071  020F                     	;# 
  2072  020F                     	;# 
  2073  0210                     	;# 
  2074  0210                     	;# 
  2075  0211                     	;# 
  2076  0211                     	;# 
  2077  0212                     	;# 
  2078  0213                     	;# 
  2079  0214                     	;# 
  2080  0214                     	;# 
  2081  0215                     	;# 
  2082  0215                     	;# 
  2083  0216                     	;# 
  2084  0216                     	;# 
  2085  0217                     	;# 
  2086  0217                     	;# 
  2087  0218                     	;# 
  2088  0219                     	;# 
  2089  021A                     	;# 
  2090  021A                     	;# 
  2091  021B                     	;# 
  2092  021B                     	;# 
  2093  021C                     	;# 
  2094  021C                     	;# 
  2095  021D                     	;# 
  2096  021D                     	;# 
  2097  021E                     	;# 
  2098  021F                     	;# 
  2099  028C                     	;# 
  2100  028C                     	;# 
  2101  028D                     	;# 
  2102  028D                     	;# 
  2103  028E                     	;# 
  2104  028F                     	;# 
  2105  0290                     	;# 
  2106  0291                     	;# 
  2107  0292                     	;# 
  2108  0292                     	;# 
  2109  0293                     	;# 
  2110  0293                     	;# 
  2111  0294                     	;# 
  2112  0295                     	;# 
  2113  0296                     	;# 
  2114  0297                     	;# 
  2115  0298                     	;# 
  2116  0298                     	;# 
  2117  0299                     	;# 
  2118  0299                     	;# 
  2119  029A                     	;# 
  2120  029B                     	;# 
  2121  029C                     	;# 
  2122  029D                     	;# 
  2123  029F                     	;# 
  2124  030C                     	;# 
  2125  030C                     	;# 
  2126  030D                     	;# 
  2127  030E                     	;# 
  2128  030F                     	;# 
  2129  0310                     	;# 
  2130  0310                     	;# 
  2131  0311                     	;# 
  2132  0312                     	;# 
  2133  0313                     	;# 
  2134  0314                     	;# 
  2135  0314                     	;# 
  2136  0315                     	;# 
  2137  0316                     	;# 
  2138  0317                     	;# 
  2139  0318                     	;# 
  2140  0318                     	;# 
  2141  0319                     	;# 
  2142  031A                     	;# 
  2143  031B                     	;# 
  2144  038C                     	;# 
  2145  038C                     	;# 
  2146  038D                     	;# 
  2147  038E                     	;# 
  2148  0390                     	;# 
  2149  0390                     	;# 
  2150  0391                     	;# 
  2151  0392                     	;# 
  2152  048C                     	;# 
  2153  048C                     	;# 
  2154  048D                     	;# 
  2155  048E                     	;# 
  2156  048F                     	;# 
  2157  048F                     	;# 
  2158  0490                     	;# 
  2159  0491                     	;# 
  2160  0492                     	;# 
  2161  0492                     	;# 
  2162  0493                     	;# 
  2163  0494                     	;# 
  2164  0495                     	;# 
  2165  0495                     	;# 
  2166  0496                     	;# 
  2167  0497                     	;# 
  2168  0498                     	;# 
  2169  0499                     	;# 
  2170  049A                     	;# 
  2171  049B                     	;# 
  2172  049C                     	;# 
  2173  049D                     	;# 
  2174  058C                     	;# 
  2175  058C                     	;# 
  2176  058D                     	;# 
  2177  058E                     	;# 
  2178  058F                     	;# 
  2179  058F                     	;# 
  2180  0590                     	;# 
  2181  0591                     	;# 
  2182  0592                     	;# 
  2183  0593                     	;# 
  2184  059C                     	;# 
  2185  059C                     	;# 
  2186  059D                     	;# 
  2187  059D                     	;# 
  2188  059E                     	;# 
  2189  059F                     	;# 
  2190  060C                     	;# 
  2191  060C                     	;# 
  2192  060D                     	;# 
  2193  060D                     	;# 
  2194  060E                     	;# 
  2195  060F                     	;# 
  2196  0610                     	;# 
  2197  0611                     	;# 
  2198  0612                     	;# 
  2199  0613                     	;# 
  2200  0614                     	;# 
  2201  0616                     	;# 
  2202  0616                     	;# 
  2203  0617                     	;# 
  2204  0617                     	;# 
  2205  0618                     	;# 
  2206  0619                     	;# 
  2207  061A                     	;# 
  2208  061B                     	;# 
  2209  061C                     	;# 
  2210  061D                     	;# 
  2211  061E                     	;# 
  2212  070C                     	;# 
  2213  070D                     	;# 
  2214  070E                     	;# 
  2215  070F                     	;# 
  2216  0710                     	;# 
  2217  0711                     	;# 
  2218  0712                     	;# 
  2219  0713                     	;# 
  2220  0714                     	;# 
  2221  0716                     	;# 
  2222  0717                     	;# 
  2223  0718                     	;# 
  2224  0719                     	;# 
  2225  071A                     	;# 
  2226  071B                     	;# 
  2227  071C                     	;# 
  2228  071D                     	;# 
  2229  071E                     	;# 
  2230  0796                     	;# 
  2231  0797                     	;# 
  2232  0798                     	;# 
  2233  0799                     	;# 
  2234  079A                     	;# 
  2235  079B                     	;# 
  2236  079C                     	;# 
  2237  079D                     	;# 
  2238  080C                     	;# 
  2239  080D                     	;# 
  2240  080E                     	;# 
  2241  080F                     	;# 
  2242  0810                     	;# 
  2243  0811                     	;# 
  2244  0812                     	;# 
  2245  0813                     	;# 
  2246  0814                     	;# 
  2247  081A                     	;# 
  2248  081A                     	;# 
  2249  081B                     	;# 
  2250  081C                     	;# 
  2251  081C                     	;# 
  2252  081D                     	;# 
  2253  081E                     	;# 
  2254  081F                     	;# 
  2255  088C                     	;# 
  2256  088D                     	;# 
  2257  088E                     	;# 
  2258  088F                     	;# 
  2259  0890                     	;# 
  2260  0891                     	;# 
  2261  0892                     	;# 
  2262  0893                     	;# 
  2263  0895                     	;# 
  2264  0896                     	;# 
  2265  0897                     	;# 
  2266  0898                     	;# 
  2267  0899                     	;# 
  2268  089A                     	;# 
  2269  089B                     	;# 
  2270  090C                     	;# 
  2271  090E                     	;# 
  2272  090F                     	;# 
  2273  091F                     	;# 
  2274  098F                     	;# 
  2275  098F                     	;# 
  2276  0990                     	;# 
  2277  0991                     	;# 
  2278  0992                     	;# 
  2279  0993                     	;# 
  2280  0994                     	;# 
  2281  0995                     	;# 
  2282  0996                     	;# 
  2283  0997                     	;# 
  2284  1E0F                     	;# 
  2285  1E10                     	;# 
  2286  1E11                     	;# 
  2287  1E12                     	;# 
  2288  1E13                     	;# 
  2289  1E14                     	;# 
  2290  1E15                     	;# 
  2291  1E16                     	;# 
  2292  1E17                     	;# 
  2293  1E18                     	;# 
  2294  1E19                     	;# 
  2295  1E1A                     	;# 
  2296  1E1B                     	;# 
  2297  1E1C                     	;# 
  2298  1E1D                     	;# 
  2299  1E1E                     	;# 
  2300  1E1F                     	;# 
  2301  1E20                     	;# 
  2302  1E21                     	;# 
  2303  1E22                     	;# 
  2304  1E23                     	;# 
  2305  1E24                     	;# 
  2306  1E25                     	;# 
  2307  1E26                     	;# 
  2308  1E27                     	;# 
  2309  1E28                     	;# 
  2310  1E29                     	;# 
  2311  1E2A                     	;# 
  2312  1E2B                     	;# 
  2313  1E2C                     	;# 
  2314  1E2D                     	;# 
  2315  1E2E                     	;# 
  2316  1E2F                     	;# 
  2317  1E30                     	;# 
  2318  1E31                     	;# 
  2319  1E32                     	;# 
  2320  1E33                     	;# 
  2321  1E34                     	;# 
  2322  1E35                     	;# 
  2323  1E36                     	;# 
  2324  1E37                     	;# 
  2325  1E8F                     	;# 
  2326  1E90                     	;# 
  2327  1E91                     	;# 
  2328  1E92                     	;# 
  2329  1E93                     	;# 
  2330  1E94                     	;# 
  2331  1E95                     	;# 
  2332  1E96                     	;# 
  2333  1E97                     	;# 
  2334  1E9C                     	;# 
  2335  1E9D                     	;# 
  2336  1E9E                     	;# 
  2337  1EA1                     	;# 
  2338  1EA2                     	;# 
  2339  1EA3                     	;# 
  2340  1EA4                     	;# 
  2341  1EA9                     	;# 
  2342  1EAA                     	;# 
  2343  1EB1                     	;# 
  2344  1EB2                     	;# 
  2345  1EB8                     	;# 
  2346  1EB9                     	;# 
  2347  1EBA                     	;# 
  2348  1EBB                     	;# 
  2349  1EBC                     	;# 
  2350  1EBD                     	;# 
  2351  1EBE                     	;# 
  2352  1EC3                     	;# 
  2353  1EC5                     	;# 
  2354  1EC6                     	;# 
  2355  1EC7                     	;# 
  2356  1EC8                     	;# 
  2357  1EC9                     	;# 
  2358  1ECA                     	;# 
  2359  1ECB                     	;# 
  2360  1ECB                     	;# 
  2361  1ECB                     	;# 
  2362  1ECC                     	;# 
  2363  1ECC                     	;# 
  2364  1ECC                     	;# 
  2365  1F10                     	;# 
  2366  1F11                     	;# 
  2367  1F12                     	;# 
  2368  1F14                     	;# 
  2369  1F15                     	;# 
  2370  1F1C                     	;# 
  2371  1F1D                     	;# 
  2372  1F1E                     	;# 
  2373  1F1F                     	;# 
  2374  1F20                     	;# 
  2375  1F21                     	;# 
  2376  1F22                     	;# 
  2377  1F23                     	;# 
  2378  1F24                     	;# 
  2379  1F25                     	;# 
  2380  1F26                     	;# 
  2381  1F27                     	;# 
  2382  1F38                     	;# 
  2383  1F39                     	;# 
  2384  1F3A                     	;# 
  2385  1F3B                     	;# 
  2386  1F3C                     	;# 
  2387  1F3D                     	;# 
  2388  1F3E                     	;# 
  2389  1F3F                     	;# 
  2390  1F43                     	;# 
  2391  1F44                     	;# 
  2392  1F45                     	;# 
  2393  1F46                     	;# 
  2394  1F47                     	;# 
  2395  1F48                     	;# 
  2396  1F49                     	;# 
  2397  1F4A                     	;# 
  2398  1F4E                     	;# 
  2399  1F4F                     	;# 
  2400  1F50                     	;# 
  2401  1F51                     	;# 
  2402  1F52                     	;# 
  2403  1F53                     	;# 
  2404  1F54                     	;# 
  2405  1F55                     	;# 
  2406  1FE4                     	;# 
  2407  1FE5                     	;# 
  2408  1FE6                     	;# 
  2409  1FE7                     	;# 
  2410  1FE8                     	;# 
  2411  1FE8                     	;# 
  2412  1FE9                     	;# 
  2413  1FEA                     	;# 
  2414  1FEB                     	;# 
  2415  1FED                     	;# 
  2416  1FEE                     	;# 
  2417  1FEF                     	;# 
  2418  0000                     	;# 
  2419  0001                     	;# 
  2420  0002                     	;# 
  2421  0003                     	;# 
  2422  0004                     	;# 
  2423  0005                     	;# 
  2424  0006                     	;# 
  2425  0007                     	;# 
  2426  0008                     	;# 
  2427  0009                     	;# 
  2428  000A                     	;# 
  2429  000B                     	;# 
  2430  000C                     	;# 
  2431  000D                     	;# 
  2432  000E                     	;# 
  2433  0012                     	;# 
  2434  0013                     	;# 
  2435  0014                     	;# 
  2436  0018                     	;# 
  2437  0019                     	;# 
  2438  001A                     	;# 
  2439  008C                     	;# 
  2440  008C                     	;# 
  2441  008D                     	;# 
  2442  008E                     	;# 
  2443  008E                     	;# 
  2444  008F                     	;# 
  2445  0090                     	;# 
  2446  0090                     	;# 
  2447  0091                     	;# 
  2448  0092                     	;# 
  2449  0092                     	;# 
  2450  0093                     	;# 
  2451  0094                     	;# 
  2452  0094                     	;# 
  2453  0095                     	;# 
  2454  0096                     	;# 
  2455  0096                     	;# 
  2456  0097                     	;# 
  2457  0098                     	;# 
  2458  0099                     	;# 
  2459  009A                     	;# 
  2460  009B                     	;# 
  2461  009B                     	;# 
  2462  009C                     	;# 
  2463  009D                     	;# 
  2464  009D                     	;# 
  2465  009E                     	;# 
  2466  009F                     	;# 
  2467  010C                     	;# 
  2468  010C                     	;# 
  2469  010D                     	;# 
  2470  010E                     	;# 
  2471  010F                     	;# 
  2472  010F                     	;# 
  2473  0110                     	;# 
  2474  0111                     	;# 
  2475  0112                     	;# 
  2476  0113                     	;# 
  2477  0114                     	;# 
  2478  0115                     	;# 
  2479  0116                     	;# 
  2480  0117                     	;# 
  2481  0118                     	;# 
  2482  0119                     	;# 
  2483  0119                     	;# 
  2484  0119                     	;# 
  2485  011A                     	;# 
  2486  011A                     	;# 
  2487  011A                     	;# 
  2488  011B                     	;# 
  2489  011B                     	;# 
  2490  011B                     	;# 
  2491  011B                     	;# 
  2492  011B                     	;# 
  2493  011C                     	;# 
  2494  011C                     	;# 
  2495  011C                     	;# 
  2496  011D                     	;# 
  2497  011D                     	;# 
  2498  011D                     	;# 
  2499  011E                     	;# 
  2500  011E                     	;# 
  2501  011E                     	;# 
  2502  011F                     	;# 
  2503  011F                     	;# 
  2504  011F                     	;# 
  2505  011F                     	;# 
  2506  011F                     	;# 
  2507  018C                     	;# 
  2508  018D                     	;# 
  2509  018E                     	;# 
  2510  018F                     	;# 
  2511  0190                     	;# 
  2512  0191                     	;# 
  2513  0192                     	;# 
  2514  0196                     	;# 
  2515  0197                     	;# 
  2516  0198                     	;# 
  2517  0199                     	;# 
  2518  019A                     	;# 
  2519  019B                     	;# 
  2520  019C                     	;# 
  2521  020C                     	;# 
  2522  020D                     	;# 
  2523  020E                     	;# 
  2524  020E                     	;# 
  2525  020F                     	;# 
  2526  020F                     	;# 
  2527  0210                     	;# 
  2528  0210                     	;# 
  2529  0211                     	;# 
  2530  0211                     	;# 
  2531  0212                     	;# 
  2532  0213                     	;# 
  2533  0214                     	;# 
  2534  0214                     	;# 
  2535  0215                     	;# 
  2536  0215                     	;# 
  2537  0216                     	;# 
  2538  0216                     	;# 
  2539  0217                     	;# 
  2540  0217                     	;# 
  2541  0218                     	;# 
  2542  0219                     	;# 
  2543  021A                     	;# 
  2544  021A                     	;# 
  2545  021B                     	;# 
  2546  021B                     	;# 
  2547  021C                     	;# 
  2548  021C                     	;# 
  2549  021D                     	;# 
  2550  021D                     	;# 
  2551  021E                     	;# 
  2552  021F                     	;# 
  2553  028C                     	;# 
  2554  028C                     	;# 
  2555  028D                     	;# 
  2556  028D                     	;# 
  2557  028E                     	;# 
  2558  028F                     	;# 
  2559  0290                     	;# 
  2560  0291                     	;# 
  2561  0292                     	;# 
  2562  0292                     	;# 
  2563  0293                     	;# 
  2564  0293                     	;# 
  2565  0294                     	;# 
  2566  0295                     	;# 
  2567  0296                     	;# 
  2568  0297                     	;# 
  2569  0298                     	;# 
  2570  0298                     	;# 
  2571  0299                     	;# 
  2572  0299                     	;# 
  2573  029A                     	;# 
  2574  029B                     	;# 
  2575  029C                     	;# 
  2576  029D                     	;# 
  2577  029F                     	;# 
  2578  030C                     	;# 
  2579  030C                     	;# 
  2580  030D                     	;# 
  2581  030E                     	;# 
  2582  030F                     	;# 
  2583  0310                     	;# 
  2584  0310                     	;# 
  2585  0311                     	;# 
  2586  0312                     	;# 
  2587  0313                     	;# 
  2588  0314                     	;# 
  2589  0314                     	;# 
  2590  0315                     	;# 
  2591  0316                     	;# 
  2592  0317                     	;# 
  2593  0318                     	;# 
  2594  0318                     	;# 
  2595  0319                     	;# 
  2596  031A                     	;# 
  2597  031B                     	;# 
  2598  038C                     	;# 
  2599  038C                     	;# 
  2600  038D                     	;# 
  2601  038E                     	;# 
  2602  0390                     	;# 
  2603  0390                     	;# 
  2604  0391                     	;# 
  2605  0392                     	;# 
  2606  048C                     	;# 
  2607  048C                     	;# 
  2608  048D                     	;# 
  2609  048E                     	;# 
  2610  048F                     	;# 
  2611  048F                     	;# 
  2612  0490                     	;# 
  2613  0491                     	;# 
  2614  0492                     	;# 
  2615  0492                     	;# 
  2616  0493                     	;# 
  2617  0494                     	;# 
  2618  0495                     	;# 
  2619  0495                     	;# 
  2620  0496                     	;# 
  2621  0497                     	;# 
  2622  0498                     	;# 
  2623  0499                     	;# 
  2624  049A                     	;# 
  2625  049B                     	;# 
  2626  049C                     	;# 
  2627  049D                     	;# 
  2628  058C                     	;# 
  2629  058C                     	;# 
  2630  058D                     	;# 
  2631  058E                     	;# 
  2632  058F                     	;# 
  2633  058F                     	;# 
  2634  0590                     	;# 
  2635  0591                     	;# 
  2636  0592                     	;# 
  2637  0593                     	;# 
  2638  059C                     	;# 
  2639  059C                     	;# 
  2640  059D                     	;# 
  2641  059D                     	;# 
  2642  059E                     	;# 
  2643  059F                     	;# 
  2644  060C                     	;# 
  2645  060C                     	;# 
  2646  060D                     	;# 
  2647  060D                     	;# 
  2648  060E                     	;# 
  2649  060F                     	;# 
  2650  0610                     	;# 
  2651  0611                     	;# 
  2652  0612                     	;# 
  2653  0613                     	;# 
  2654  0614                     	;# 
  2655  0616                     	;# 
  2656  0616                     	;# 
  2657  0617                     	;# 
  2658  0617                     	;# 
  2659  0618                     	;# 
  2660  0619                     	;# 
  2661  061A                     	;# 
  2662  061B                     	;# 
  2663  061C                     	;# 
  2664  061D                     	;# 
  2665  061E                     	;# 
  2666  070C                     	;# 
  2667  070D                     	;# 
  2668  070E                     	;# 
  2669  070F                     	;# 
  2670  0710                     	;# 
  2671  0711                     	;# 
  2672  0712                     	;# 
  2673  0713                     	;# 
  2674  0714                     	;# 
  2675  0716                     	;# 
  2676  0717                     	;# 
  2677  0718                     	;# 
  2678  0719                     	;# 
  2679  071A                     	;# 
  2680  071B                     	;# 
  2681  071C                     	;# 
  2682  071D                     	;# 
  2683  071E                     	;# 
  2684  0796                     	;# 
  2685  0797                     	;# 
  2686  0798                     	;# 
  2687  0799                     	;# 
  2688  079A                     	;# 
  2689  079B                     	;# 
  2690  079C                     	;# 
  2691  079D                     	;# 
  2692  080C                     	;# 
  2693  080D                     	;# 
  2694  080E                     	;# 
  2695  080F                     	;# 
  2696  0810                     	;# 
  2697  0811                     	;# 
  2698  0812                     	;# 
  2699  0813                     	;# 
  2700  0814                     	;# 
  2701  081A                     	;# 
  2702  081A                     	;# 
  2703  081B                     	;# 
  2704  081C                     	;# 
  2705  081C                     	;# 
  2706  081D                     	;# 
  2707  081E                     	;# 
  2708  081F                     	;# 
  2709  088C                     	;# 
  2710  088D                     	;# 
  2711  088E                     	;# 
  2712  088F                     	;# 
  2713  0890                     	;# 
  2714  0891                     	;# 
  2715  0892                     	;# 
  2716  0893                     	;# 
  2717  0895                     	;# 
  2718  0896                     	;# 
  2719  0897                     	;# 
  2720  0898                     	;# 
  2721  0899                     	;# 
  2722  089A                     	;# 
  2723  089B                     	;# 
  2724  090C                     	;# 
  2725  090E                     	;# 
  2726  090F                     	;# 
  2727  091F                     	;# 
  2728  098F                     	;# 
  2729  098F                     	;# 
  2730  0990                     	;# 
  2731  0991                     	;# 
  2732  0992                     	;# 
  2733  0993                     	;# 
  2734  0994                     	;# 
  2735  0995                     	;# 
  2736  0996                     	;# 
  2737  0997                     	;# 
  2738  1E0F                     	;# 
  2739  1E10                     	;# 
  2740  1E11                     	;# 
  2741  1E12                     	;# 
  2742  1E13                     	;# 
  2743  1E14                     	;# 
  2744  1E15                     	;# 
  2745  1E16                     	;# 
  2746  1E17                     	;# 
  2747  1E18                     	;# 
  2748  1E19                     	;# 
  2749  1E1A                     	;# 
  2750  1E1B                     	;# 
  2751  1E1C                     	;# 
  2752  1E1D                     	;# 
  2753  1E1E                     	;# 
  2754  1E1F                     	;# 
  2755  1E20                     	;# 
  2756  1E21                     	;# 
  2757  1E22                     	;# 
  2758  1E23                     	;# 
  2759  1E24                     	;# 
  2760  1E25                     	;# 
  2761  1E26                     	;# 
  2762  1E27                     	;# 
  2763  1E28                     	;# 
  2764  1E29                     	;# 
  2765  1E2A                     	;# 
  2766  1E2B                     	;# 
  2767  1E2C                     	;# 
  2768  1E2D                     	;# 
  2769  1E2E                     	;# 
  2770  1E2F                     	;# 
  2771  1E30                     	;# 
  2772  1E31                     	;# 
  2773  1E32                     	;# 
  2774  1E33                     	;# 
  2775  1E34                     	;# 
  2776  1E35                     	;# 
  2777  1E36                     	;# 
  2778  1E37                     	;# 
  2779  1E8F                     	;# 
  2780  1E90                     	;# 
  2781  1E91                     	;# 
  2782  1E92                     	;# 
  2783  1E93                     	;# 
  2784  1E94                     	;# 
  2785  1E95                     	;# 
  2786  1E96                     	;# 
  2787  1E97                     	;# 
  2788  1E9C                     	;# 
  2789  1E9D                     	;# 
  2790  1E9E                     	;# 
  2791  1EA1                     	;# 
  2792  1EA2                     	;# 
  2793  1EA3                     	;# 
  2794  1EA4                     	;# 
  2795  1EA9                     	;# 
  2796  1EAA                     	;# 
  2797  1EB1                     	;# 
  2798  1EB2                     	;# 
  2799  1EB8                     	;# 
  2800  1EB9                     	;# 
  2801  1EBA                     	;# 
  2802  1EBB                     	;# 
  2803  1EBC                     	;# 
  2804  1EBD                     	;# 
  2805  1EBE                     	;# 
  2806  1EC3                     	;# 
  2807  1EC5                     	;# 
  2808  1EC6                     	;# 
  2809  1EC7                     	;# 
  2810  1EC8                     	;# 
  2811  1EC9                     	;# 
  2812  1ECA                     	;# 
  2813  1ECB                     	;# 
  2814  1ECB                     	;# 
  2815  1ECB                     	;# 
  2816  1ECC                     	;# 
  2817  1ECC                     	;# 
  2818  1ECC                     	;# 
  2819  1F10                     	;# 
  2820  1F11                     	;# 
  2821  1F12                     	;# 
  2822  1F14                     	;# 
  2823  1F15                     	;# 
  2824  1F1C                     	;# 
  2825  1F1D                     	;# 
  2826  1F1E                     	;# 
  2827  1F1F                     	;# 
  2828  1F20                     	;# 
  2829  1F21                     	;# 
  2830  1F22                     	;# 
  2831  1F23                     	;# 
  2832  1F24                     	;# 
  2833  1F25                     	;# 
  2834  1F26                     	;# 
  2835  1F27                     	;# 
  2836  1F38                     	;# 
  2837  1F39                     	;# 
  2838  1F3A                     	;# 
  2839  1F3B                     	;# 
  2840  1F3C                     	;# 
  2841  1F3D                     	;# 
  2842  1F3E                     	;# 
  2843  1F3F                     	;# 
  2844  1F43                     	;# 
  2845  1F44                     	;# 
  2846  1F45                     	;# 
  2847  1F46                     	;# 
  2848  1F47                     	;# 
  2849  1F48                     	;# 
  2850  1F49                     	;# 
  2851  1F4A                     	;# 
  2852  1F4E                     	;# 
  2853  1F4F                     	;# 
  2854  1F50                     	;# 
  2855  1F51                     	;# 
  2856  1F52                     	;# 
  2857  1F53                     	;# 
  2858  1F54                     	;# 
  2859  1F55                     	;# 
  2860  1FE4                     	;# 
  2861  1FE5                     	;# 
  2862  1FE6                     	;# 
  2863  1FE7                     	;# 
  2864  1FE8                     	;# 
  2865  1FE8                     	;# 
  2866  1FE9                     	;# 
  2867  1FEA                     	;# 
  2868  1FEB                     	;# 
  2869  1FED                     	;# 
  2870  1FEE                     	;# 
  2871  1FEF                     	;# 
  2872  0000                     	;# 
  2873  0001                     	;# 
  2874  0002                     	;# 
  2875  0003                     	;# 
  2876  0004                     	;# 
  2877  0005                     	;# 
  2878  0006                     	;# 
  2879  0007                     	;# 
  2880  0008                     	;# 
  2881  0009                     	;# 
  2882  000A                     	;# 
  2883  000B                     	;# 
  2884  000C                     	;# 
  2885  000D                     	;# 
  2886  000E                     	;# 
  2887  0012                     	;# 
  2888  0013                     	;# 
  2889  0014                     	;# 
  2890  0018                     	;# 
  2891  0019                     	;# 
  2892  001A                     	;# 
  2893  008C                     	;# 
  2894  008C                     	;# 
  2895  008D                     	;# 
  2896  008E                     	;# 
  2897  008E                     	;# 
  2898  008F                     	;# 
  2899  0090                     	;# 
  2900  0090                     	;# 
  2901  0091                     	;# 
  2902  0092                     	;# 
  2903  0092                     	;# 
  2904  0093                     	;# 
  2905  0094                     	;# 
  2906  0094                     	;# 
  2907  0095                     	;# 
  2908  0096                     	;# 
  2909  0096                     	;# 
  2910  0097                     	;# 
  2911  0098                     	;# 
  2912  0099                     	;# 
  2913  009A                     	;# 
  2914  009B                     	;# 
  2915  009B                     	;# 
  2916  009C                     	;# 
  2917  009D                     	;# 
  2918  009D                     	;# 
  2919  009E                     	;# 
  2920  009F                     	;# 
  2921  010C                     	;# 
  2922  010C                     	;# 
  2923  010D                     	;# 
  2924  010E                     	;# 
  2925  010F                     	;# 
  2926  010F                     	;# 
  2927  0110                     	;# 
  2928  0111                     	;# 
  2929  0112                     	;# 
  2930  0113                     	;# 
  2931  0114                     	;# 
  2932  0115                     	;# 
  2933  0116                     	;# 
  2934  0117                     	;# 
  2935  0118                     	;# 
  2936  0119                     	;# 
  2937  0119                     	;# 
  2938  0119                     	;# 
  2939  011A                     	;# 
  2940  011A                     	;# 
  2941  011A                     	;# 
  2942  011B                     	;# 
  2943  011B                     	;# 
  2944  011B                     	;# 
  2945  011B                     	;# 
  2946  011B                     	;# 
  2947  011C                     	;# 
  2948  011C                     	;# 
  2949  011C                     	;# 
  2950  011D                     	;# 
  2951  011D                     	;# 
  2952  011D                     	;# 
  2953  011E                     	;# 
  2954  011E                     	;# 
  2955  011E                     	;# 
  2956  011F                     	;# 
  2957  011F                     	;# 
  2958  011F                     	;# 
  2959  011F                     	;# 
  2960  011F                     	;# 
  2961  018C                     	;# 
  2962  018D                     	;# 
  2963  018E                     	;# 
  2964  018F                     	;# 
  2965  0190                     	;# 
  2966  0191                     	;# 
  2967  0192                     	;# 
  2968  0196                     	;# 
  2969  0197                     	;# 
  2970  0198                     	;# 
  2971  0199                     	;# 
  2972  019A                     	;# 
  2973  019B                     	;# 
  2974  019C                     	;# 
  2975  020C                     	;# 
  2976  020D                     	;# 
  2977  020E                     	;# 
  2978  020E                     	;# 
  2979  020F                     	;# 
  2980  020F                     	;# 
  2981  0210                     	;# 
  2982  0210                     	;# 
  2983  0211                     	;# 
  2984  0211                     	;# 
  2985  0212                     	;# 
  2986  0213                     	;# 
  2987  0214                     	;# 
  2988  0214                     	;# 
  2989  0215                     	;# 
  2990  0215                     	;# 
  2991  0216                     	;# 
  2992  0216                     	;# 
  2993  0217                     	;# 
  2994  0217                     	;# 
  2995  0218                     	;# 
  2996  0219                     	;# 
  2997  021A                     	;# 
  2998  021A                     	;# 
  2999  021B                     	;# 
  3000  021B                     	;# 
  3001  021C                     	;# 
  3002  021C                     	;# 
  3003  021D                     	;# 
  3004  021D                     	;# 
  3005  021E                     	;# 
  3006  021F                     	;# 
  3007  028C                     	;# 
  3008  028C                     	;# 
  3009  028D                     	;# 
  3010  028D                     	;# 
  3011  028E                     	;# 
  3012  028F                     	;# 
  3013  0290                     	;# 
  3014  0291                     	;# 
  3015  0292                     	;# 
  3016  0292                     	;# 
  3017  0293                     	;# 
  3018  0293                     	;# 
  3019  0294                     	;# 
  3020  0295                     	;# 
  3021  0296                     	;# 
  3022  0297                     	;# 
  3023  0298                     	;# 
  3024  0298                     	;# 
  3025  0299                     	;# 
  3026  0299                     	;# 
  3027  029A                     	;# 
  3028  029B                     	;# 
  3029  029C                     	;# 
  3030  029D                     	;# 
  3031  029F                     	;# 
  3032  030C                     	;# 
  3033  030C                     	;# 
  3034  030D                     	;# 
  3035  030E                     	;# 
  3036  030F                     	;# 
  3037  0310                     	;# 
  3038  0310                     	;# 
  3039  0311                     	;# 
  3040  0312                     	;# 
  3041  0313                     	;# 
  3042  0314                     	;# 
  3043  0314                     	;# 
  3044  0315                     	;# 
  3045  0316                     	;# 
  3046  0317                     	;# 
  3047  0318                     	;# 
  3048  0318                     	;# 
  3049  0319                     	;# 
  3050  031A                     	;# 
  3051  031B                     	;# 
  3052  038C                     	;# 
  3053  038C                     	;# 
  3054  038D                     	;# 
  3055  038E                     	;# 
  3056  0390                     	;# 
  3057  0390                     	;# 
  3058  0391                     	;# 
  3059  0392                     	;# 
  3060  048C                     	;# 
  3061  048C                     	;# 
  3062  048D                     	;# 
  3063  048E                     	;# 
  3064  048F                     	;# 
  3065  048F                     	;# 
  3066  0490                     	;# 
  3067  0491                     	;# 
  3068  0492                     	;# 
  3069  0492                     	;# 
  3070  0493                     	;# 
  3071  0494                     	;# 
  3072  0495                     	;# 
  3073  0495                     	;# 
  3074  0496                     	;# 
  3075  0497                     	;# 
  3076  0498                     	;# 
  3077  0499                     	;# 
  3078  049A                     	;# 
  3079  049B                     	;# 
  3080  049C                     	;# 
  3081  049D                     	;# 
  3082  058C                     	;# 
  3083  058C                     	;# 
  3084  058D                     	;# 
  3085  058E                     	;# 
  3086  058F                     	;# 
  3087  058F                     	;# 
  3088  0590                     	;# 
  3089  0591                     	;# 
  3090  0592                     	;# 
  3091  0593                     	;# 
  3092  059C                     	;# 
  3093  059C                     	;# 
  3094  059D                     	;# 
  3095  059D                     	;# 
  3096  059E                     	;# 
  3097  059F                     	;# 
  3098  060C                     	;# 
  3099  060C                     	;# 
  3100  060D                     	;# 
  3101  060D                     	;# 
  3102  060E                     	;# 
  3103  060F                     	;# 
  3104  0610                     	;# 
  3105  0611                     	;# 
  3106  0612                     	;# 
  3107  0613                     	;# 
  3108  0614                     	;# 
  3109  0616                     	;# 
  3110  0616                     	;# 
  3111  0617                     	;# 
  3112  0617                     	;# 
  3113  0618                     	;# 
  3114  0619                     	;# 
  3115  061A                     	;# 
  3116  061B                     	;# 
  3117  061C                     	;# 
  3118  061D                     	;# 
  3119  061E                     	;# 
  3120  070C                     	;# 
  3121  070D                     	;# 
  3122  070E                     	;# 
  3123  070F                     	;# 
  3124  0710                     	;# 
  3125  0711                     	;# 
  3126  0712                     	;# 
  3127  0713                     	;# 
  3128  0714                     	;# 
  3129  0716                     	;# 
  3130  0717                     	;# 
  3131  0718                     	;# 
  3132  0719                     	;# 
  3133  071A                     	;# 
  3134  071B                     	;# 
  3135  071C                     	;# 
  3136  071D                     	;# 
  3137  071E                     	;# 
  3138  0796                     	;# 
  3139  0797                     	;# 
  3140  0798                     	;# 
  3141  0799                     	;# 
  3142  079A                     	;# 
  3143  079B                     	;# 
  3144  079C                     	;# 
  3145  079D                     	;# 
  3146  080C                     	;# 
  3147  080D                     	;# 
  3148  080E                     	;# 
  3149  080F                     	;# 
  3150  0810                     	;# 
  3151  0811                     	;# 
  3152  0812                     	;# 
  3153  0813                     	;# 
  3154  0814                     	;# 
  3155  081A                     	;# 
  3156  081A                     	;# 
  3157  081B                     	;# 
  3158  081C                     	;# 
  3159  081C                     	;# 
  3160  081D                     	;# 
  3161  081E                     	;# 
  3162  081F                     	;# 
  3163  088C                     	;# 
  3164  088D                     	;# 
  3165  088E                     	;# 
  3166  088F                     	;# 
  3167  0890                     	;# 
  3168  0891                     	;# 
  3169  0892                     	;# 
  3170  0893                     	;# 
  3171  0895                     	;# 
  3172  0896                     	;# 
  3173  0897                     	;# 
  3174  0898                     	;# 
  3175  0899                     	;# 
  3176  089A                     	;# 
  3177  089B                     	;# 
  3178  090C                     	;# 
  3179  090E                     	;# 
  3180  090F                     	;# 
  3181  091F                     	;# 
  3182  098F                     	;# 
  3183  098F                     	;# 
  3184  0990                     	;# 
  3185  0991                     	;# 
  3186  0992                     	;# 
  3187  0993                     	;# 
  3188  0994                     	;# 
  3189  0995                     	;# 
  3190  0996                     	;# 
  3191  0997                     	;# 
  3192  1E0F                     	;# 
  3193  1E10                     	;# 
  3194  1E11                     	;# 
  3195  1E12                     	;# 
  3196  1E13                     	;# 
  3197  1E14                     	;# 
  3198  1E15                     	;# 
  3199  1E16                     	;# 
  3200  1E17                     	;# 
  3201  1E18                     	;# 
  3202  1E19                     	;# 
  3203  1E1A                     	;# 
  3204  1E1B                     	;# 
  3205  1E1C                     	;# 
  3206  1E1D                     	;# 
  3207  1E1E                     	;# 
  3208  1E1F                     	;# 
  3209  1E20                     	;# 
  3210  1E21                     	;# 
  3211  1E22                     	;# 
  3212  1E23                     	;# 
  3213  1E24                     	;# 
  3214  1E25                     	;# 
  3215  1E26                     	;# 
  3216  1E27                     	;# 
  3217  1E28                     	;# 
  3218  1E29                     	;# 
  3219  1E2A                     	;# 
  3220  1E2B                     	;# 
  3221  1E2C                     	;# 
  3222  1E2D                     	;# 
  3223  1E2E                     	;# 
  3224  1E2F                     	;# 
  3225  1E30                     	;# 
  3226  1E31                     	;# 
  3227  1E32                     	;# 
  3228  1E33                     	;# 
  3229  1E34                     	;# 
  3230  1E35                     	;# 
  3231  1E36                     	;# 
  3232  1E37                     	;# 
  3233  1E8F                     	;# 
  3234  1E90                     	;# 
  3235  1E91                     	;# 
  3236  1E92                     	;# 
  3237  1E93                     	;# 
  3238  1E94                     	;# 
  3239  1E95                     	;# 
  3240  1E96                     	;# 
  3241  1E97                     	;# 
  3242  1E9C                     	;# 
  3243  1E9D                     	;# 
  3244  1E9E                     	;# 
  3245  1EA1                     	;# 
  3246  1EA2                     	;# 
  3247  1EA3                     	;# 
  3248  1EA4                     	;# 
  3249  1EA9                     	;# 
  3250  1EAA                     	;# 
  3251  1EB1                     	;# 
  3252  1EB2                     	;# 
  3253  1EB8                     	;# 
  3254  1EB9                     	;# 
  3255  1EBA                     	;# 
  3256  1EBB                     	;# 
  3257  1EBC                     	;# 
  3258  1EBD                     	;# 
  3259  1EBE                     	;# 
  3260  1EC3                     	;# 
  3261  1EC5                     	;# 
  3262  1EC6                     	;# 
  3263  1EC7                     	;# 
  3264  1EC8                     	;# 
  3265  1EC9                     	;# 
  3266  1ECA                     	;# 
  3267  1ECB                     	;# 
  3268  1ECB                     	;# 
  3269  1ECB                     	;# 
  3270  1ECC                     	;# 
  3271  1ECC                     	;# 
  3272  1ECC                     	;# 
  3273  1F10                     	;# 
  3274  1F11                     	;# 
  3275  1F12                     	;# 
  3276  1F14                     	;# 
  3277  1F15                     	;# 
  3278  1F1C                     	;# 
  3279  1F1D                     	;# 
  3280  1F1E                     	;# 
  3281  1F1F                     	;# 
  3282  1F20                     	;# 
  3283  1F21                     	;# 
  3284  1F22                     	;# 
  3285  1F23                     	;# 
  3286  1F24                     	;# 
  3287  1F25                     	;# 
  3288  1F26                     	;# 
  3289  1F27                     	;# 
  3290  1F38                     	;# 
  3291  1F39                     	;# 
  3292  1F3A                     	;# 
  3293  1F3B                     	;# 
  3294  1F3C                     	;# 
  3295  1F3D                     	;# 
  3296  1F3E                     	;# 
  3297  1F3F                     	;# 
  3298  1F43                     	;# 
  3299  1F44                     	;# 
  3300  1F45                     	;# 
  3301  1F46                     	;# 
  3302  1F47                     	;# 
  3303  1F48                     	;# 
  3304  1F49                     	;# 
  3305  1F4A                     	;# 
  3306  1F4E                     	;# 
  3307  1F4F                     	;# 
  3308  1F50                     	;# 
  3309  1F51                     	;# 
  3310  1F52                     	;# 
  3311  1F53                     	;# 
  3312  1F54                     	;# 
  3313  1F55                     	;# 
  3314  1FE4                     	;# 
  3315  1FE5                     	;# 
  3316  1FE6                     	;# 
  3317  1FE7                     	;# 
  3318  1FE8                     	;# 
  3319  1FE8                     	;# 
  3320  1FE9                     	;# 
  3321  1FEA                     	;# 
  3322  1FEB                     	;# 
  3323  1FED                     	;# 
  3324  1FEE                     	;# 
  3325  1FEF                     	;# 
  3326  0000                     	;# 
  3327  0001                     	;# 
  3328  0002                     	;# 
  3329  0003                     	;# 
  3330  0004                     	;# 
  3331  0005                     	;# 
  3332  0006                     	;# 
  3333  0007                     	;# 
  3334  0008                     	;# 
  3335  0009                     	;# 
  3336  000A                     	;# 
  3337  000B                     	;# 
  3338  000C                     	;# 
  3339  000D                     	;# 
  3340  000E                     	;# 
  3341  0012                     	;# 
  3342  0013                     	;# 
  3343  0014                     	;# 
  3344  0018                     	;# 
  3345  0019                     	;# 
  3346  001A                     	;# 
  3347  008C                     	;# 
  3348  008C                     	;# 
  3349  008D                     	;# 
  3350  008E                     	;# 
  3351  008E                     	;# 
  3352  008F                     	;# 
  3353  0090                     	;# 
  3354  0090                     	;# 
  3355  0091                     	;# 
  3356  0092                     	;# 
  3357  0092                     	;# 
  3358  0093                     	;# 
  3359  0094                     	;# 
  3360  0094                     	;# 
  3361  0095                     	;# 
  3362  0096                     	;# 
  3363  0096                     	;# 
  3364  0097                     	;# 
  3365  0098                     	;# 
  3366  0099                     	;# 
  3367  009A                     	;# 
  3368  009B                     	;# 
  3369  009B                     	;# 
  3370  009C                     	;# 
  3371  009D                     	;# 
  3372  009D                     	;# 
  3373  009E                     	;# 
  3374  009F                     	;# 
  3375  010C                     	;# 
  3376  010C                     	;# 
  3377  010D                     	;# 
  3378  010E                     	;# 
  3379  010F                     	;# 
  3380  010F                     	;# 
  3381  0110                     	;# 
  3382  0111                     	;# 
  3383  0112                     	;# 
  3384  0113                     	;# 
  3385  0114                     	;# 
  3386  0115                     	;# 
  3387  0116                     	;# 
  3388  0117                     	;# 
  3389  0118                     	;# 
  3390  0119                     	;# 
  3391  0119                     	;# 
  3392  0119                     	;# 
  3393  011A                     	;# 
  3394  011A                     	;# 
  3395  011A                     	;# 
  3396  011B                     	;# 
  3397  011B                     	;# 
  3398  011B                     	;# 
  3399  011B                     	;# 
  3400  011B                     	;# 
  3401  011C                     	;# 
  3402  011C                     	;# 
  3403  011C                     	;# 
  3404  011D                     	;# 
  3405  011D                     	;# 
  3406  011D                     	;# 
  3407  011E                     	;# 
  3408  011E                     	;# 
  3409  011E                     	;# 
  3410  011F                     	;# 
  3411  011F                     	;# 
  3412  011F                     	;# 
  3413  011F                     	;# 
  3414  011F                     	;# 
  3415  018C                     	;# 
  3416  018D                     	;# 
  3417  018E                     	;# 
  3418  018F                     	;# 
  3419  0190                     	;# 
  3420  0191                     	;# 
  3421  0192                     	;# 
  3422  0196                     	;# 
  3423  0197                     	;# 
  3424  0198                     	;# 
  3425  0199                     	;# 
  3426  019A                     	;# 
  3427  019B                     	;# 
  3428  019C                     	;# 
  3429  020C                     	;# 
  3430  020D                     	;# 
  3431  020E                     	;# 
  3432  020E                     	;# 
  3433  020F                     	;# 
  3434  020F                     	;# 
  3435  0210                     	;# 
  3436  0210                     	;# 
  3437  0211                     	;# 
  3438  0211                     	;# 
  3439  0212                     	;# 
  3440  0213                     	;# 
  3441  0214                     	;# 
  3442  0214                     	;# 
  3443  0215                     	;# 
  3444  0215                     	;# 
  3445  0216                     	;# 
  3446  0216                     	;# 
  3447  0217                     	;# 
  3448  0217                     	;# 
  3449  0218                     	;# 
  3450  0219                     	;# 
  3451  021A                     	;# 
  3452  021A                     	;# 
  3453  021B                     	;# 
  3454  021B                     	;# 
  3455  021C                     	;# 
  3456  021C                     	;# 
  3457  021D                     	;# 
  3458  021D                     	;# 
  3459  021E                     	;# 
  3460  021F                     	;# 
  3461  028C                     	;# 
  3462  028C                     	;# 
  3463  028D                     	;# 
  3464  028D                     	;# 
  3465  028E                     	;# 
  3466  028F                     	;# 
  3467  0290                     	;# 
  3468  0291                     	;# 
  3469  0292                     	;# 
  3470  0292                     	;# 
  3471  0293                     	;# 
  3472  0293                     	;# 
  3473  0294                     	;# 
  3474  0295                     	;# 
  3475  0296                     	;# 
  3476  0297                     	;# 
  3477  0298                     	;# 
  3478  0298                     	;# 
  3479  0299                     	;# 
  3480  0299                     	;# 
  3481  029A                     	;# 
  3482  029B                     	;# 
  3483  029C                     	;# 
  3484  029D                     	;# 
  3485  029F                     	;# 
  3486  030C                     	;# 
  3487  030C                     	;# 
  3488  030D                     	;# 
  3489  030E                     	;# 
  3490  030F                     	;# 
  3491  0310                     	;# 
  3492  0310                     	;# 
  3493  0311                     	;# 
  3494  0312                     	;# 
  3495  0313                     	;# 
  3496  0314                     	;# 
  3497  0314                     	;# 
  3498  0315                     	;# 
  3499  0316                     	;# 
  3500  0317                     	;# 
  3501  0318                     	;# 
  3502  0318                     	;# 
  3503  0319                     	;# 
  3504  031A                     	;# 
  3505  031B                     	;# 
  3506  038C                     	;# 
  3507  038C                     	;# 
  3508  038D                     	;# 
  3509  038E                     	;# 
  3510  0390                     	;# 
  3511  0390                     	;# 
  3512  0391                     	;# 
  3513  0392                     	;# 
  3514  048C                     	;# 
  3515  048C                     	;# 
  3516  048D                     	;# 
  3517  048E                     	;# 
  3518  048F                     	;# 
  3519  048F                     	;# 
  3520  0490                     	;# 
  3521  0491                     	;# 
  3522  0492                     	;# 
  3523  0492                     	;# 
  3524  0493                     	;# 
  3525  0494                     	;# 
  3526  0495                     	;# 
  3527  0495                     	;# 
  3528  0496                     	;# 
  3529  0497                     	;# 
  3530  0498                     	;# 
  3531  0499                     	;# 
  3532  049A                     	;# 
  3533  049B                     	;# 
  3534  049C                     	;# 
  3535  049D                     	;# 
  3536  058C                     	;# 
  3537  058C                     	;# 
  3538  058D                     	;# 
  3539  058E                     	;# 
  3540  058F                     	;# 
  3541  058F                     	;# 
  3542  0590                     	;# 
  3543  0591                     	;# 
  3544  0592                     	;# 
  3545  0593                     	;# 
  3546  059C                     	;# 
  3547  059C                     	;# 
  3548  059D                     	;# 
  3549  059D                     	;# 
  3550  059E                     	;# 
  3551  059F                     	;# 
  3552  060C                     	;# 
  3553  060C                     	;# 
  3554  060D                     	;# 
  3555  060D                     	;# 
  3556  060E                     	;# 
  3557  060F                     	;# 
  3558  0610                     	;# 
  3559  0611                     	;# 
  3560  0612                     	;# 
  3561  0613                     	;# 
  3562  0614                     	;# 
  3563  0616                     	;# 
  3564  0616                     	;# 
  3565  0617                     	;# 
  3566  0617                     	;# 
  3567  0618                     	;# 
  3568  0619                     	;# 
  3569  061A                     	;# 
  3570  061B                     	;# 
  3571  061C                     	;# 
  3572  061D                     	;# 
  3573  061E                     	;# 
  3574  070C                     	;# 
  3575  070D                     	;# 
  3576  070E                     	;# 
  3577  070F                     	;# 
  3578  0710                     	;# 
  3579  0711                     	;# 
  3580  0712                     	;# 
  3581  0713                     	;# 
  3582  0714                     	;# 
  3583  0716                     	;# 
  3584  0717                     	;# 
  3585  0718                     	;# 
  3586  0719                     	;# 
  3587  071A                     	;# 
  3588  071B                     	;# 
  3589  071C                     	;# 
  3590  071D                     	;# 
  3591  071E                     	;# 
  3592  0796                     	;# 
  3593  0797                     	;# 
  3594  0798                     	;# 
  3595  0799                     	;# 
  3596  079A                     	;# 
  3597  079B                     	;# 
  3598  079C                     	;# 
  3599  079D                     	;# 
  3600  080C                     	;# 
  3601  080D                     	;# 
  3602  080E                     	;# 
  3603  080F                     	;# 
  3604  0810                     	;# 
  3605  0811                     	;# 
  3606  0812                     	;# 
  3607  0813                     	;# 
  3608  0814                     	;# 
  3609  081A                     	;# 
  3610  081A                     	;# 
  3611  081B                     	;# 
  3612  081C                     	;# 
  3613  081C                     	;# 
  3614  081D                     	;# 
  3615  081E                     	;# 
  3616  081F                     	;# 
  3617  088C                     	;# 
  3618  088D                     	;# 
  3619  088E                     	;# 
  3620  088F                     	;# 
  3621  0890                     	;# 
  3622  0891                     	;# 
  3623  0892                     	;# 
  3624  0893                     	;# 
  3625  0895                     	;# 
  3626  0896                     	;# 
  3627  0897                     	;# 
  3628  0898                     	;# 
  3629  0899                     	;# 
  3630  089A                     	;# 
  3631  089B                     	;# 
  3632  090C                     	;# 
  3633  090E                     	;# 
  3634  090F                     	;# 
  3635  091F                     	;# 
  3636  098F                     	;# 
  3637  098F                     	;# 
  3638  0990                     	;# 
  3639  0991                     	;# 
  3640  0992                     	;# 
  3641  0993                     	;# 
  3642  0994                     	;# 
  3643  0995                     	;# 
  3644  0996                     	;# 
  3645  0997                     	;# 
  3646  1E0F                     	;# 
  3647  1E10                     	;# 
  3648  1E11                     	;# 
  3649  1E12                     	;# 
  3650  1E13                     	;# 
  3651  1E14                     	;# 
  3652  1E15                     	;# 
  3653  1E16                     	;# 
  3654  1E17                     	;# 
  3655  1E18                     	;# 
  3656  1E19                     	;# 
  3657  1E1A                     	;# 
  3658  1E1B                     	;# 
  3659  1E1C                     	;# 
  3660  1E1D                     	;# 
  3661  1E1E                     	;# 
  3662  1E1F                     	;# 
  3663  1E20                     	;# 
  3664  1E21                     	;# 
  3665  1E22                     	;# 
  3666  1E23                     	;# 
  3667  1E24                     	;# 
  3668  1E25                     	;# 
  3669  1E26                     	;# 
  3670  1E27                     	;# 
  3671  1E28                     	;# 
  3672  1E29                     	;# 
  3673  1E2A                     	;# 
  3674  1E2B                     	;# 
  3675  1E2C                     	;# 
  3676  1E2D                     	;# 
  3677  1E2E                     	;# 
  3678  1E2F                     	;# 
  3679  1E30                     	;# 
  3680  1E31                     	;# 
  3681  1E32                     	;# 
  3682  1E33                     	;# 
  3683  1E34                     	;# 
  3684  1E35                     	;# 
  3685  1E36                     	;# 
  3686  1E37                     	;# 
  3687  1E8F                     	;# 
  3688  1E90                     	;# 
  3689  1E91                     	;# 
  3690  1E92                     	;# 
  3691  1E93                     	;# 
  3692  1E94                     	;# 
  3693  1E95                     	;# 
  3694  1E96                     	;# 
  3695  1E97                     	;# 
  3696  1E9C                     	;# 
  3697  1E9D                     	;# 
  3698  1E9E                     	;# 
  3699  1EA1                     	;# 
  3700  1EA2                     	;# 
  3701  1EA3                     	;# 
  3702  1EA4                     	;# 
  3703  1EA9                     	;# 
  3704  1EAA                     	;# 
  3705  1EB1                     	;# 
  3706  1EB2                     	;# 
  3707  1EB8                     	;# 
  3708  1EB9                     	;# 
  3709  1EBA                     	;# 
  3710  1EBB                     	;# 
  3711  1EBC                     	;# 
  3712  1EBD                     	;# 
  3713  1EBE                     	;# 
  3714  1EC3                     	;# 
  3715  1EC5                     	;# 
  3716  1EC6                     	;# 
  3717  1EC7                     	;# 
  3718  1EC8                     	;# 
  3719  1EC9                     	;# 
  3720  1ECA                     	;# 
  3721  1ECB                     	;# 
  3722  1ECB                     	;# 
  3723  1ECB                     	;# 
  3724  1ECC                     	;# 
  3725  1ECC                     	;# 
  3726  1ECC                     	;# 
  3727  1F10                     	;# 
  3728  1F11                     	;# 
  3729  1F12                     	;# 
  3730  1F14                     	;# 
  3731  1F15                     	;# 
  3732  1F1C                     	;# 
  3733  1F1D                     	;# 
  3734  1F1E                     	;# 
  3735  1F1F                     	;# 
  3736  1F20                     	;# 
  3737  1F21                     	;# 
  3738  1F22                     	;# 
  3739  1F23                     	;# 
  3740  1F24                     	;# 
  3741  1F25                     	;# 
  3742  1F26                     	;# 
  3743  1F27                     	;# 
  3744  1F38                     	;# 
  3745  1F39                     	;# 
  3746  1F3A                     	;# 
  3747  1F3B                     	;# 
  3748  1F3C                     	;# 
  3749  1F3D                     	;# 
  3750  1F3E                     	;# 
  3751  1F3F                     	;# 
  3752  1F43                     	;# 
  3753  1F44                     	;# 
  3754  1F45                     	;# 
  3755  1F46                     	;# 
  3756  1F47                     	;# 
  3757  1F48                     	;# 
  3758  1F49                     	;# 
  3759  1F4A                     	;# 
  3760  1F4E                     	;# 
  3761  1F4F                     	;# 
  3762  1F50                     	;# 
  3763  1F51                     	;# 
  3764  1F52                     	;# 
  3765  1F53                     	;# 
  3766  1F54                     	;# 
  3767  1F55                     	;# 
  3768  1FE4                     	;# 
  3769  1FE5                     	;# 
  3770  1FE6                     	;# 
  3771  1FE7                     	;# 
  3772  1FE8                     	;# 
  3773  1FE8                     	;# 
  3774  1FE9                     	;# 
  3775  1FEA                     	;# 
  3776  1FEB                     	;# 
  3777  1FED                     	;# 
  3778  1FEE                     	;# 
  3779  1FEF                     	;# 
  3780  0000                     	;# 
  3781  0001                     	;# 
  3782  0002                     	;# 
  3783  0003                     	;# 
  3784  0004                     	;# 
  3785  0005                     	;# 
  3786  0006                     	;# 
  3787  0007                     	;# 
  3788  0008                     	;# 
  3789  0009                     	;# 
  3790  000A                     	;# 
  3791  000B                     	;# 
  3792  000C                     	;# 
  3793  000D                     	;# 
  3794  000E                     	;# 
  3795  0012                     	;# 
  3796  0013                     	;# 
  3797  0014                     	;# 
  3798  0018                     	;# 
  3799  0019                     	;# 
  3800  001A                     	;# 
  3801  008C                     	;# 
  3802  008C                     	;# 
  3803  008D                     	;# 
  3804  008E                     	;# 
  3805  008E                     	;# 
  3806  008F                     	;# 
  3807  0090                     	;# 
  3808  0090                     	;# 
  3809  0091                     	;# 
  3810  0092                     	;# 
  3811  0092                     	;# 
  3812  0093                     	;# 
  3813  0094                     	;# 
  3814  0094                     	;# 
  3815  0095                     	;# 
  3816  0096                     	;# 
  3817  0096                     	;# 
  3818  0097                     	;# 
  3819  0098                     	;# 
  3820  0099                     	;# 
  3821  009A                     	;# 
  3822  009B                     	;# 
  3823  009B                     	;# 
  3824  009C                     	;# 
  3825  009D                     	;# 
  3826  009D                     	;# 
  3827  009E                     	;# 
  3828  009F                     	;# 
  3829  010C                     	;# 
  3830  010C                     	;# 
  3831  010D                     	;# 
  3832  010E                     	;# 
  3833  010F                     	;# 
  3834  010F                     	;# 
  3835  0110                     	;# 
  3836  0111                     	;# 
  3837  0112                     	;# 
  3838  0113                     	;# 
  3839  0114                     	;# 
  3840  0115                     	;# 
  3841  0116                     	;# 
  3842  0117                     	;# 
  3843  0118                     	;# 
  3844  0119                     	;# 
  3845  0119                     	;# 
  3846  0119                     	;# 
  3847  011A                     	;# 
  3848  011A                     	;# 
  3849  011A                     	;# 
  3850  011B                     	;# 
  3851  011B                     	;# 
  3852  011B                     	;# 
  3853  011B                     	;# 
  3854  011B                     	;# 
  3855  011C                     	;# 
  3856  011C                     	;# 
  3857  011C                     	;# 
  3858  011D                     	;# 
  3859  011D                     	;# 
  3860  011D                     	;# 
  3861  011E                     	;# 
  3862  011E                     	;# 
  3863  011E                     	;# 
  3864  011F                     	;# 
  3865  011F                     	;# 
  3866  011F                     	;# 
  3867  011F                     	;# 
  3868  011F                     	;# 
  3869  018C                     	;# 
  3870  018D                     	;# 
  3871  018E                     	;# 
  3872  018F                     	;# 
  3873  0190                     	;# 
  3874  0191                     	;# 
  3875  0192                     	;# 
  3876  0196                     	;# 
  3877  0197                     	;# 
  3878  0198                     	;# 
  3879  0199                     	;# 
  3880  019A                     	;# 
  3881  019B                     	;# 
  3882  019C                     	;# 
  3883  020C                     	;# 
  3884  020D                     	;# 
  3885  020E                     	;# 
  3886  020E                     	;# 
  3887  020F                     	;# 
  3888  020F                     	;# 
  3889  0210                     	;# 
  3890  0210                     	;# 
  3891  0211                     	;# 
  3892  0211                     	;# 
  3893  0212                     	;# 
  3894  0213                     	;# 
  3895  0214                     	;# 
  3896  0214                     	;# 
  3897  0215                     	;# 
  3898  0215                     	;# 
  3899  0216                     	;# 
  3900  0216                     	;# 
  3901  0217                     	;# 
  3902  0217                     	;# 
  3903  0218                     	;# 
  3904  0219                     	;# 
  3905  021A                     	;# 
  3906  021A                     	;# 
  3907  021B                     	;# 
  3908  021B                     	;# 
  3909  021C                     	;# 
  3910  021C                     	;# 
  3911  021D                     	;# 
  3912  021D                     	;# 
  3913  021E                     	;# 
  3914  021F                     	;# 
  3915  028C                     	;# 
  3916  028C                     	;# 
  3917  028D                     	;# 
  3918  028D                     	;# 
  3919  028E                     	;# 
  3920  028F                     	;# 
  3921  0290                     	;# 
  3922  0291                     	;# 
  3923  0292                     	;# 
  3924  0292                     	;# 
  3925  0293                     	;# 
  3926  0293                     	;# 
  3927  0294                     	;# 
  3928  0295                     	;# 
  3929  0296                     	;# 
  3930  0297                     	;# 
  3931  0298                     	;# 
  3932  0298                     	;# 
  3933  0299                     	;# 
  3934  0299                     	;# 
  3935  029A                     	;# 
  3936  029B                     	;# 
  3937  029C                     	;# 
  3938  029D                     	;# 
  3939  029F                     	;# 
  3940  030C                     	;# 
  3941  030C                     	;# 
  3942  030D                     	;# 
  3943  030E                     	;# 
  3944  030F                     	;# 
  3945  0310                     	;# 
  3946  0310                     	;# 
  3947  0311                     	;# 
  3948  0312                     	;# 
  3949  0313                     	;# 
  3950  0314                     	;# 
  3951  0314                     	;# 
  3952  0315                     	;# 
  3953  0316                     	;# 
  3954  0317                     	;# 
  3955  0318                     	;# 
  3956  0318                     	;# 
  3957  0319                     	;# 
  3958  031A                     	;# 
  3959  031B                     	;# 
  3960  038C                     	;# 
  3961  038C                     	;# 
  3962  038D                     	;# 
  3963  038E                     	;# 
  3964  0390                     	;# 
  3965  0390                     	;# 
  3966  0391                     	;# 
  3967  0392                     	;# 
  3968  048C                     	;# 
  3969  048C                     	;# 
  3970  048D                     	;# 
  3971  048E                     	;# 
  3972  048F                     	;# 
  3973  048F                     	;# 
  3974  0490                     	;# 
  3975  0491                     	;# 
  3976  0492                     	;# 
  3977  0492                     	;# 
  3978  0493                     	;# 
  3979  0494                     	;# 
  3980  0495                     	;# 
  3981  0495                     	;# 
  3982  0496                     	;# 
  3983  0497                     	;# 
  3984  0498                     	;# 
  3985  0499                     	;# 
  3986  049A                     	;# 
  3987  049B                     	;# 
  3988  049C                     	;# 
  3989  049D                     	;# 
  3990  058C                     	;# 
  3991  058C                     	;# 
  3992  058D                     	;# 
  3993  058E                     	;# 
  3994  058F                     	;# 
  3995  058F                     	;# 
  3996  0590                     	;# 
  3997  0591                     	;# 
  3998  0592                     	;# 
  3999  0593                     	;# 
  4000  059C                     	;# 
  4001  059C                     	;# 
  4002  059D                     	;# 
  4003  059D                     	;# 
  4004  059E                     	;# 
  4005  059F                     	;# 
  4006  060C                     	;# 
  4007  060C                     	;# 
  4008  060D                     	;# 
  4009  060D                     	;# 
  4010  060E                     	;# 
  4011  060F                     	;# 
  4012  0610                     	;# 
  4013  0611                     	;# 
  4014  0612                     	;# 
  4015  0613                     	;# 
  4016  0614                     	;# 
  4017  0616                     	;# 
  4018  0616                     	;# 
  4019  0617                     	;# 
  4020  0617                     	;# 
  4021  0618                     	;# 
  4022  0619                     	;# 
  4023  061A                     	;# 
  4024  061B                     	;# 
  4025  061C                     	;# 
  4026  061D                     	;# 
  4027  061E                     	;# 
  4028  070C                     	;# 
  4029  070D                     	;# 
  4030  070E                     	;# 
  4031  070F                     	;# 
  4032  0710                     	;# 
  4033  0711                     	;# 
  4034  0712                     	;# 
  4035  0713                     	;# 
  4036  0714                     	;# 
  4037  0716                     	;# 
  4038  0717                     	;# 
  4039  0718                     	;# 
  4040  0719                     	;# 
  4041  071A                     	;# 
  4042  071B                     	;# 
  4043  071C                     	;# 
  4044  071D                     	;# 
  4045  071E                     	;# 
  4046  0796                     	;# 
  4047  0797                     	;# 
  4048  0798                     	;# 
  4049  0799                     	;# 
  4050  079A                     	;# 
  4051  079B                     	;# 
  4052  079C                     	;# 
  4053  079D                     	;# 
  4054  080C                     	;# 
  4055  080D                     	;# 
  4056  080E                     	;# 
  4057  080F                     	;# 
  4058  0810                     	;# 
  4059  0811                     	;# 
  4060  0812                     	;# 
  4061  0813                     	;# 
  4062  0814                     	;# 
  4063  081A                     	;# 
  4064  081A                     	;# 
  4065  081B                     	;# 
  4066  081C                     	;# 
  4067  081C                     	;# 
  4068  081D                     	;# 
  4069  081E                     	;# 
  4070  081F                     	;# 
  4071  088C                     	;# 
  4072  088D                     	;# 
  4073  088E                     	;# 
  4074  088F                     	;# 
  4075  0890                     	;# 
  4076  0891                     	;# 
  4077  0892                     	;# 
  4078  0893                     	;# 
  4079  0895                     	;# 
  4080  0896                     	;# 
  4081  0897                     	;# 
  4082  0898                     	;# 
  4083  0899                     	;# 
  4084  089A                     	;# 
  4085  089B                     	;# 
  4086  090C                     	;# 
  4087  090E                     	;# 
  4088  090F                     	;# 
  4089  091F                     	;# 
  4090  098F                     	;# 
  4091  098F                     	;# 
  4092  0990                     	;# 
  4093  0991                     	;# 
  4094  0992                     	;# 
  4095  0993                     	;# 
  4096  0994                     	;# 
  4097  0995                     	;# 
  4098  0996                     	;# 
  4099  0997                     	;# 
  4100  1E0F                     	;# 
  4101  1E10                     	;# 
  4102  1E11                     	;# 
  4103  1E12                     	;# 
  4104  1E13                     	;# 
  4105  1E14                     	;# 
  4106  1E15                     	;# 
  4107  1E16                     	;# 
  4108  1E17                     	;# 
  4109  1E18                     	;# 
  4110  1E19                     	;# 
  4111  1E1A                     	;# 
  4112  1E1B                     	;# 
  4113  1E1C                     	;# 
  4114  1E1D                     	;# 
  4115  1E1E                     	;# 
  4116  1E1F                     	;# 
  4117  1E20                     	;# 
  4118  1E21                     	;# 
  4119  1E22                     	;# 
  4120  1E23                     	;# 
  4121  1E24                     	;# 
  4122  1E25                     	;# 
  4123  1E26                     	;# 
  4124  1E27                     	;# 
  4125  1E28                     	;# 
  4126  1E29                     	;# 
  4127  1E2A                     	;# 
  4128  1E2B                     	;# 
  4129  1E2C                     	;# 
  4130  1E2D                     	;# 
  4131  1E2E                     	;# 
  4132  1E2F                     	;# 
  4133  1E30                     	;# 
  4134  1E31                     	;# 
  4135  1E32                     	;# 
  4136  1E33                     	;# 
  4137  1E34                     	;# 
  4138  1E35                     	;# 
  4139  1E36                     	;# 
  4140  1E37                     	;# 
  4141  1E8F                     	;# 
  4142  1E90                     	;# 
  4143  1E91                     	;# 
  4144  1E92                     	;# 
  4145  1E93                     	;# 
  4146  1E94                     	;# 
  4147  1E95                     	;# 
  4148  1E96                     	;# 
  4149  1E97                     	;# 
  4150  1E9C                     	;# 
  4151  1E9D                     	;# 
  4152  1E9E                     	;# 
  4153  1EA1                     	;# 
  4154  1EA2                     	;# 
  4155  1EA3                     	;# 
  4156  1EA4                     	;# 
  4157  1EA9                     	;# 
  4158  1EAA                     	;# 
  4159  1EB1                     	;# 
  4160  1EB2                     	;# 
  4161  1EB8                     	;# 
  4162  1EB9                     	;# 
  4163  1EBA                     	;# 
  4164  1EBB                     	;# 
  4165  1EBC                     	;# 
  4166  1EBD                     	;# 
  4167  1EBE                     	;# 
  4168  1EC3                     	;# 
  4169  1EC5                     	;# 
  4170  1EC6                     	;# 
  4171  1EC7                     	;# 
  4172  1EC8                     	;# 
  4173  1EC9                     	;# 
  4174  1ECA                     	;# 
  4175  1ECB                     	;# 
  4176  1ECB                     	;# 
  4177  1ECB                     	;# 
  4178  1ECC                     	;# 
  4179  1ECC                     	;# 
  4180  1ECC                     	;# 
  4181  1F10                     	;# 
  4182  1F11                     	;# 
  4183  1F12                     	;# 
  4184  1F14                     	;# 
  4185  1F15                     	;# 
  4186  1F1C                     	;# 
  4187  1F1D                     	;# 
  4188  1F1E                     	;# 
  4189  1F1F                     	;# 
  4190  1F20                     	;# 
  4191  1F21                     	;# 
  4192  1F22                     	;# 
  4193  1F23                     	;# 
  4194  1F24                     	;# 
  4195  1F25                     	;# 
  4196  1F26                     	;# 
  4197  1F27                     	;# 
  4198  1F38                     	;# 
  4199  1F39                     	;# 
  4200  1F3A                     	;# 
  4201  1F3B                     	;# 
  4202  1F3C                     	;# 
  4203  1F3D                     	;# 
  4204  1F3E                     	;# 
  4205  1F3F                     	;# 
  4206  1F43                     	;# 
  4207  1F44                     	;# 
  4208  1F45                     	;# 
  4209  1F46                     	;# 
  4210  1F47                     	;# 
  4211  1F48                     	;# 
  4212  1F49                     	;# 
  4213  1F4A                     	;# 
  4214  1F4E                     	;# 
  4215  1F4F                     	;# 
  4216  1F50                     	;# 
  4217  1F51                     	;# 
  4218  1F52                     	;# 
  4219  1F53                     	;# 
  4220  1F54                     	;# 
  4221  1F55                     	;# 
  4222  1FE4                     	;# 
  4223  1FE5                     	;# 
  4224  1FE6                     	;# 
  4225  1FE7                     	;# 
  4226  1FE8                     	;# 
  4227  1FE8                     	;# 
  4228  1FE9                     	;# 
  4229  1FEA                     	;# 
  4230  1FEB                     	;# 
  4231  1FED                     	;# 
  4232  1FEE                     	;# 
  4233  1FEF                     	;# 
  4234  0000                     	;# 
  4235  0001                     	;# 
  4236  0002                     	;# 
  4237  0003                     	;# 
  4238  0004                     	;# 
  4239  0005                     	;# 
  4240  0006                     	;# 
  4241  0007                     	;# 
  4242  0008                     	;# 
  4243  0009                     	;# 
  4244  000A                     	;# 
  4245  000B                     	;# 
  4246  000C                     	;# 
  4247  000D                     	;# 
  4248  000E                     	;# 
  4249  0012                     	;# 
  4250  0013                     	;# 
  4251  0014                     	;# 
  4252  0018                     	;# 
  4253  0019                     	;# 
  4254  001A                     	;# 
  4255  008C                     	;# 
  4256  008C                     	;# 
  4257  008D                     	;# 
  4258  008E                     	;# 
  4259  008E                     	;# 
  4260  008F                     	;# 
  4261  0090                     	;# 
  4262  0090                     	;# 
  4263  0091                     	;# 
  4264  0092                     	;# 
  4265  0092                     	;# 
  4266  0093                     	;# 
  4267  0094                     	;# 
  4268  0094                     	;# 
  4269  0095                     	;# 
  4270  0096                     	;# 
  4271  0096                     	;# 
  4272  0097                     	;# 
  4273  0098                     	;# 
  4274  0099                     	;# 
  4275  009A                     	;# 
  4276  009B                     	;# 
  4277  009B                     	;# 
  4278  009C                     	;# 
  4279  009D                     	;# 
  4280  009D                     	;# 
  4281  009E                     	;# 
  4282  009F                     	;# 
  4283  010C                     	;# 
  4284  010C                     	;# 
  4285  010D                     	;# 
  4286  010E                     	;# 
  4287  010F                     	;# 
  4288  010F                     	;# 
  4289  0110                     	;# 
  4290  0111                     	;# 
  4291  0112                     	;# 
  4292  0113                     	;# 
  4293  0114                     	;# 
  4294  0115                     	;# 
  4295  0116                     	;# 
  4296  0117                     	;# 
  4297  0118                     	;# 
  4298  0119                     	;# 
  4299  0119                     	;# 
  4300  0119                     	;# 
  4301  011A                     	;# 
  4302  011A                     	;# 
  4303  011A                     	;# 
  4304  011B                     	;# 
  4305  011B                     	;# 
  4306  011B                     	;# 
  4307  011B                     	;# 
  4308  011B                     	;# 
  4309  011C                     	;# 
  4310  011C                     	;# 
  4311  011C                     	;# 
  4312  011D                     	;# 
  4313  011D                     	;# 
  4314  011D                     	;# 
  4315  011E                     	;# 
  4316  011E                     	;# 
  4317  011E                     	;# 
  4318  011F                     	;# 
  4319  011F                     	;# 
  4320  011F                     	;# 
  4321  011F                     	;# 
  4322  011F                     	;# 
  4323  018C                     	;# 
  4324  018D                     	;# 
  4325  018E                     	;# 
  4326  018F                     	;# 
  4327  0190                     	;# 
  4328  0191                     	;# 
  4329  0192                     	;# 
  4330  0196                     	;# 
  4331  0197                     	;# 
  4332  0198                     	;# 
  4333  0199                     	;# 
  4334  019A                     	;# 
  4335  019B                     	;# 
  4336  019C                     	;# 
  4337  020C                     	;# 
  4338  020D                     	;# 
  4339  020E                     	;# 
  4340  020E                     	;# 
  4341  020F                     	;# 
  4342  020F                     	;# 
  4343  0210                     	;# 
  4344  0210                     	;# 
  4345  0211                     	;# 
  4346  0211                     	;# 
  4347  0212                     	;# 
  4348  0213                     	;# 
  4349  0214                     	;# 
  4350  0214                     	;# 
  4351  0215                     	;# 
  4352  0215                     	;# 
  4353  0216                     	;# 
  4354  0216                     	;# 
  4355  0217                     	;# 
  4356  0217                     	;# 
  4357  0218                     	;# 
  4358  0219                     	;# 
  4359  021A                     	;# 
  4360  021A                     	;# 
  4361  021B                     	;# 
  4362  021B                     	;# 
  4363  021C                     	;# 
  4364  021C                     	;# 
  4365  021D                     	;# 
  4366  021D                     	;# 
  4367  021E                     	;# 
  4368  021F                     	;# 
  4369  028C                     	;# 
  4370  028C                     	;# 
  4371  028D                     	;# 
  4372  028D                     	;# 
  4373  028E                     	;# 
  4374  028F                     	;# 
  4375  0290                     	;# 
  4376  0291                     	;# 
  4377  0292                     	;# 
  4378  0292                     	;# 
  4379  0293                     	;# 
  4380  0293                     	;# 
  4381  0294                     	;# 
  4382  0295                     	;# 
  4383  0296                     	;# 
  4384  0297                     	;# 
  4385  0298                     	;# 
  4386  0298                     	;# 
  4387  0299                     	;# 
  4388  0299                     	;# 
  4389  029A                     	;# 
  4390  029B                     	;# 
  4391  029C                     	;# 
  4392  029D                     	;# 
  4393  029F                     	;# 
  4394  030C                     	;# 
  4395  030C                     	;# 
  4396  030D                     	;# 
  4397  030E                     	;# 
  4398  030F                     	;# 
  4399  0310                     	;# 
  4400  0310                     	;# 
  4401  0311                     	;# 
  4402  0312                     	;# 
  4403  0313                     	;# 
  4404  0314                     	;# 
  4405  0314                     	;# 
  4406  0315                     	;# 
  4407  0316                     	;# 
  4408  0317                     	;# 
  4409  0318                     	;# 
  4410  0318                     	;# 
  4411  0319                     	;# 
  4412  031A                     	;# 
  4413  031B                     	;# 
  4414  038C                     	;# 
  4415  038C                     	;# 
  4416  038D                     	;# 
  4417  038E                     	;# 
  4418  0390                     	;# 
  4419  0390                     	;# 
  4420  0391                     	;# 
  4421  0392                     	;# 
  4422  048C                     	;# 
  4423  048C                     	;# 
  4424  048D                     	;# 
  4425  048E                     	;# 
  4426  048F                     	;# 
  4427  048F                     	;# 
  4428  0490                     	;# 
  4429  0491                     	;# 
  4430  0492                     	;# 
  4431  0492                     	;# 
  4432  0493                     	;# 
  4433  0494                     	;# 
  4434  0495                     	;# 
  4435  0495                     	;# 
  4436  0496                     	;# 
  4437  0497                     	;# 
  4438  0498                     	;# 
  4439  0499                     	;# 
  4440  049A                     	;# 
  4441  049B                     	;# 
  4442  049C                     	;# 
  4443  049D                     	;# 
  4444  058C                     	;# 
  4445  058C                     	;# 
  4446  058D                     	;# 
  4447  058E                     	;# 
  4448  058F                     	;# 
  4449  058F                     	;# 
  4450  0590                     	;# 
  4451  0591                     	;# 
  4452  0592                     	;# 
  4453  0593                     	;# 
  4454  059C                     	;# 
  4455  059C                     	;# 
  4456  059D                     	;# 
  4457  059D                     	;# 
  4458  059E                     	;# 
  4459  059F                     	;# 
  4460  060C                     	;# 
  4461  060C                     	;# 
  4462  060D                     	;# 
  4463  060D                     	;# 
  4464  060E                     	;# 
  4465  060F                     	;# 
  4466  0610                     	;# 
  4467  0611                     	;# 
  4468  0612                     	;# 
  4469  0613                     	;# 
  4470  0614                     	;# 
  4471  0616                     	;# 
  4472  0616                     	;# 
  4473  0617                     	;# 
  4474  0617                     	;# 
  4475  0618                     	;# 
  4476  0619                     	;# 
  4477  061A                     	;# 
  4478  061B                     	;# 
  4479  061C                     	;# 
  4480  061D                     	;# 
  4481  061E                     	;# 
  4482  070C                     	;# 
  4483  070D                     	;# 
  4484  070E                     	;# 
  4485  070F                     	;# 
  4486  0710                     	;# 
  4487  0711                     	;# 
  4488  0712                     	;# 
  4489  0713                     	;# 
  4490  0714                     	;# 
  4491  0716                     	;# 
  4492  0717                     	;# 
  4493  0718                     	;# 
  4494  0719                     	;# 
  4495  071A                     	;# 
  4496  071B                     	;# 
  4497  071C                     	;# 
  4498  071D                     	;# 
  4499  071E                     	;# 
  4500  0796                     	;# 
  4501  0797                     	;# 
  4502  0798                     	;# 
  4503  0799                     	;# 
  4504  079A                     	;# 
  4505  079B                     	;# 
  4506  079C                     	;# 
  4507  079D                     	;# 
  4508  080C                     	;# 
  4509  080D                     	;# 
  4510  080E                     	;# 
  4511  080F                     	;# 
  4512  0810                     	;# 
  4513  0811                     	;# 
  4514  0812                     	;# 
  4515  0813                     	;# 
  4516  0814                     	;# 
  4517  081A                     	;# 
  4518  081A                     	;# 
  4519  081B                     	;# 
  4520  081C                     	;# 
  4521  081C                     	;# 
  4522  081D                     	;# 
  4523  081E                     	;# 
  4524  081F                     	;# 
  4525  088C                     	;# 
  4526  088D                     	;# 
  4527  088E                     	;# 
  4528  088F                     	;# 
  4529  0890                     	;# 
  4530  0891                     	;# 
  4531  0892                     	;# 
  4532  0893                     	;# 
  4533  0895                     	;# 
  4534  0896                     	;# 
  4535  0897                     	;# 
  4536  0898                     	;# 
  4537  0899                     	;# 
  4538  089A                     	;# 
  4539  089B                     	;# 
  4540  090C                     	;# 
  4541  090E                     	;# 
  4542  090F                     	;# 
  4543  091F                     	;# 
  4544  098F                     	;# 
  4545  098F                     	;# 
  4546  0990                     	;# 
  4547  0991                     	;# 
  4548  0992                     	;# 
  4549  0993                     	;# 
  4550  0994                     	;# 
  4551  0995                     	;# 
  4552  0996                     	;# 
  4553  0997                     	;# 
  4554  1E0F                     	;# 
  4555  1E10                     	;# 
  4556  1E11                     	;# 
  4557  1E12                     	;# 
  4558  1E13                     	;# 
  4559  1E14                     	;# 
  4560  1E15                     	;# 
  4561  1E16                     	;# 
  4562  1E17                     	;# 
  4563  1E18                     	;# 
  4564  1E19                     	;# 
  4565  1E1A                     	;# 
  4566  1E1B                     	;# 
  4567  1E1C                     	;# 
  4568  1E1D                     	;# 
  4569  1E1E                     	;# 
  4570  1E1F                     	;# 
  4571  1E20                     	;# 
  4572  1E21                     	;# 
  4573  1E22                     	;# 
  4574  1E23                     	;# 
  4575  1E24                     	;# 
  4576  1E25                     	;# 
  4577  1E26                     	;# 
  4578  1E27                     	;# 
  4579  1E28                     	;# 
  4580  1E29                     	;# 
  4581  1E2A                     	;# 
  4582  1E2B                     	;# 
  4583  1E2C                     	;# 
  4584  1E2D                     	;# 
  4585  1E2E                     	;# 
  4586  1E2F                     	;# 
  4587  1E30                     	;# 
  4588  1E31                     	;# 
  4589  1E32                     	;# 
  4590  1E33                     	;# 
  4591  1E34                     	;# 
  4592  1E35                     	;# 
  4593  1E36                     	;# 
  4594  1E37                     	;# 
  4595  1E8F                     	;# 
  4596  1E90                     	;# 
  4597  1E91                     	;# 
  4598  1E92                     	;# 
  4599  1E93                     	;# 
  4600  1E94                     	;# 
  4601  1E95                     	;# 
  4602  1E96                     	;# 
  4603  1E97                     	;# 
  4604  1E9C                     	;# 
  4605  1E9D                     	;# 
  4606  1E9E                     	;# 
  4607  1EA1                     	;# 
  4608  1EA2                     	;# 
  4609  1EA3                     	;# 
  4610  1EA4                     	;# 
  4611  1EA9                     	;# 
  4612  1EAA                     	;# 
  4613  1EB1                     	;# 
  4614  1EB2                     	;# 
  4615  1EB8                     	;# 
  4616  1EB9                     	;# 
  4617  1EBA                     	;# 
  4618  1EBB                     	;# 
  4619  1EBC                     	;# 
  4620  1EBD                     	;# 
  4621  1EBE                     	;# 
  4622  1EC3                     	;# 
  4623  1EC5                     	;# 
  4624  1EC6                     	;# 
  4625  1EC7                     	;# 
  4626  1EC8                     	;# 
  4627  1EC9                     	;# 
  4628  1ECA                     	;# 
  4629  1ECB                     	;# 
  4630  1ECB                     	;# 
  4631  1ECB                     	;# 
  4632  1ECC                     	;# 
  4633  1ECC                     	;# 
  4634  1ECC                     	;# 
  4635  1F10                     	;# 
  4636  1F11                     	;# 
  4637  1F12                     	;# 
  4638  1F14                     	;# 
  4639  1F15                     	;# 
  4640  1F1C                     	;# 
  4641  1F1D                     	;# 
  4642  1F1E                     	;# 
  4643  1F1F                     	;# 
  4644  1F20                     	;# 
  4645  1F21                     	;# 
  4646  1F22                     	;# 
  4647  1F23                     	;# 
  4648  1F24                     	;# 
  4649  1F25                     	;# 
  4650  1F26                     	;# 
  4651  1F27                     	;# 
  4652  1F38                     	;# 
  4653  1F39                     	;# 
  4654  1F3A                     	;# 
  4655  1F3B                     	;# 
  4656  1F3C                     	;# 
  4657  1F3D                     	;# 
  4658  1F3E                     	;# 
  4659  1F3F                     	;# 
  4660  1F43                     	;# 
  4661  1F44                     	;# 
  4662  1F45                     	;# 
  4663  1F46                     	;# 
  4664  1F47                     	;# 
  4665  1F48                     	;# 
  4666  1F49                     	;# 
  4667  1F4A                     	;# 
  4668  1F4E                     	;# 
  4669  1F4F                     	;# 
  4670  1F50                     	;# 
  4671  1F51                     	;# 
  4672  1F52                     	;# 
  4673  1F53                     	;# 
  4674  1F54                     	;# 
  4675  1F55                     	;# 
  4676  1FE4                     	;# 
  4677  1FE5                     	;# 
  4678  1FE6                     	;# 
  4679  1FE7                     	;# 
  4680  1FE8                     	;# 
  4681  1FE8                     	;# 
  4682  1FE9                     	;# 
  4683  1FEA                     	;# 
  4684  1FEB                     	;# 
  4685  1FED                     	;# 
  4686  1FEE                     	;# 
  4687  1FEF                     	;# 
  4688  0000                     	;# 
  4689  0001                     	;# 
  4690  0002                     	;# 
  4691  0003                     	;# 
  4692  0004                     	;# 
  4693  0005                     	;# 
  4694  0006                     	;# 
  4695  0007                     	;# 
  4696  0008                     	;# 
  4697  0009                     	;# 
  4698  000A                     	;# 
  4699  000B                     	;# 
  4700  000C                     	;# 
  4701  000D                     	;# 
  4702  000E                     	;# 
  4703  0012                     	;# 
  4704  0013                     	;# 
  4705  0014                     	;# 
  4706  0018                     	;# 
  4707  0019                     	;# 
  4708  001A                     	;# 
  4709  008C                     	;# 
  4710  008C                     	;# 
  4711  008D                     	;# 
  4712  008E                     	;# 
  4713  008E                     	;# 
  4714  008F                     	;# 
  4715  0090                     	;# 
  4716  0090                     	;# 
  4717  0091                     	;# 
  4718  0092                     	;# 
  4719  0092                     	;# 
  4720  0093                     	;# 
  4721  0094                     	;# 
  4722  0094                     	;# 
  4723  0095                     	;# 
  4724  0096                     	;# 
  4725  0096                     	;# 
  4726  0097                     	;# 
  4727  0098                     	;# 
  4728  0099                     	;# 
  4729  009A                     	;# 
  4730  009B                     	;# 
  4731  009B                     	;# 
  4732  009C                     	;# 
  4733  009D                     	;# 
  4734  009D                     	;# 
  4735  009E                     	;# 
  4736  009F                     	;# 
  4737  010C                     	;# 
  4738  010C                     	;# 
  4739  010D                     	;# 
  4740  010E                     	;# 
  4741  010F                     	;# 
  4742  010F                     	;# 
  4743  0110                     	;# 
  4744  0111                     	;# 
  4745  0112                     	;# 
  4746  0113                     	;# 
  4747  0114                     	;# 
  4748  0115                     	;# 
  4749  0116                     	;# 
  4750  0117                     	;# 
  4751  0118                     	;# 
  4752  0119                     	;# 
  4753  0119                     	;# 
  4754  0119                     	;# 
  4755  011A                     	;# 
  4756  011A                     	;# 
  4757  011A                     	;# 
  4758  011B                     	;# 
  4759  011B                     	;# 
  4760  011B                     	;# 
  4761  011B                     	;# 
  4762  011B                     	;# 
  4763  011C                     	;# 
  4764  011C                     	;# 
  4765  011C                     	;# 
  4766  011D                     	;# 
  4767  011D                     	;# 
  4768  011D                     	;# 
  4769  011E                     	;# 
  4770  011E                     	;# 
  4771  011E                     	;# 
  4772  011F                     	;# 
  4773  011F                     	;# 
  4774  011F                     	;# 
  4775  011F                     	;# 
  4776  011F                     	;# 
  4777  018C                     	;# 
  4778  018D                     	;# 
  4779  018E                     	;# 
  4780  018F                     	;# 
  4781  0190                     	;# 
  4782  0191                     	;# 
  4783  0192                     	;# 
  4784  0196                     	;# 
  4785  0197                     	;# 
  4786  0198                     	;# 
  4787  0199                     	;# 
  4788  019A                     	;# 
  4789  019B                     	;# 
  4790  019C                     	;# 
  4791  020C                     	;# 
  4792  020D                     	;# 
  4793  020E                     	;# 
  4794  020E                     	;# 
  4795  020F                     	;# 
  4796  020F                     	;# 
  4797  0210                     	;# 
  4798  0210                     	;# 
  4799  0211                     	;# 
  4800  0211                     	;# 
  4801  0212                     	;# 
  4802  0213                     	;# 
  4803  0214                     	;# 
  4804  0214                     	;# 
  4805  0215                     	;# 
  4806  0215                     	;# 
  4807  0216                     	;# 
  4808  0216                     	;# 
  4809  0217                     	;# 
  4810  0217                     	;# 
  4811  0218                     	;# 
  4812  0219                     	;# 
  4813  021A                     	;# 
  4814  021A                     	;# 
  4815  021B                     	;# 
  4816  021B                     	;# 
  4817  021C                     	;# 
  4818  021C                     	;# 
  4819  021D                     	;# 
  4820  021D                     	;# 
  4821  021E                     	;# 
  4822  021F                     	;# 
  4823  028C                     	;# 
  4824  028C                     	;# 
  4825  028D                     	;# 
  4826  028D                     	;# 
  4827  028E                     	;# 
  4828  028F                     	;# 
  4829  0290                     	;# 
  4830  0291                     	;# 
  4831  0292                     	;# 
  4832  0292                     	;# 
  4833  0293                     	;# 
  4834  0293                     	;# 
  4835  0294                     	;# 
  4836  0295                     	;# 
  4837  0296                     	;# 
  4838  0297                     	;# 
  4839  0298                     	;# 
  4840  0298                     	;# 
  4841  0299                     	;# 
  4842  0299                     	;# 
  4843  029A                     	;# 
  4844  029B                     	;# 
  4845  029C                     	;# 
  4846  029D                     	;# 
  4847  029F                     	;# 
  4848  030C                     	;# 
  4849  030C                     	;# 
  4850  030D                     	;# 
  4851  030E                     	;# 
  4852  030F                     	;# 
  4853  0310                     	;# 
  4854  0310                     	;# 
  4855  0311                     	;# 
  4856  0312                     	;# 
  4857  0313                     	;# 
  4858  0314                     	;# 
  4859  0314                     	;# 
  4860  0315                     	;# 
  4861  0316                     	;# 
  4862  0317                     	;# 
  4863  0318                     	;# 
  4864  0318                     	;# 
  4865  0319                     	;# 
  4866  031A                     	;# 
  4867  031B                     	;# 
  4868  038C                     	;# 
  4869  038C                     	;# 
  4870  038D                     	;# 
  4871  038E                     	;# 
  4872  0390                     	;# 
  4873  0390                     	;# 
  4874  0391                     	;# 
  4875  0392                     	;# 
  4876  048C                     	;# 
  4877  048C                     	;# 
  4878  048D                     	;# 
  4879  048E                     	;# 
  4880  048F                     	;# 
  4881  048F                     	;# 
  4882  0490                     	;# 
  4883  0491                     	;# 
  4884  0492                     	;# 
  4885  0492                     	;# 
  4886  0493                     	;# 
  4887  0494                     	;# 
  4888  0495                     	;# 
  4889  0495                     	;# 
  4890  0496                     	;# 
  4891  0497                     	;# 
  4892  0498                     	;# 
  4893  0499                     	;# 
  4894  049A                     	;# 
  4895  049B                     	;# 
  4896  049C                     	;# 
  4897  049D                     	;# 
  4898  058C                     	;# 
  4899  058C                     	;# 
  4900  058D                     	;# 
  4901  058E                     	;# 
  4902  058F                     	;# 
  4903  058F                     	;# 
  4904  0590                     	;# 
  4905  0591                     	;# 
  4906  0592                     	;# 
  4907  0593                     	;# 
  4908  059C                     	;# 
  4909  059C                     	;# 
  4910  059D                     	;# 
  4911  059D                     	;# 
  4912  059E                     	;# 
  4913  059F                     	;# 
  4914  060C                     	;# 
  4915  060C                     	;# 
  4916  060D                     	;# 
  4917  060D                     	;# 
  4918  060E                     	;# 
  4919  060F                     	;# 
  4920  0610                     	;# 
  4921  0611                     	;# 
  4922  0612                     	;# 
  4923  0613                     	;# 
  4924  0614                     	;# 
  4925  0616                     	;# 
  4926  0616                     	;# 
  4927  0617                     	;# 
  4928  0617                     	;# 
  4929  0618                     	;# 
  4930  0619                     	;# 
  4931  061A                     	;# 
  4932  061B                     	;# 
  4933  061C                     	;# 
  4934  061D                     	;# 
  4935  061E                     	;# 
  4936  070C                     	;# 
  4937  070D                     	;# 
  4938  070E                     	;# 
  4939  070F                     	;# 
  4940  0710                     	;# 
  4941  0711                     	;# 
  4942  0712                     	;# 
  4943  0713                     	;# 
  4944  0714                     	;# 
  4945  0716                     	;# 
  4946  0717                     	;# 
  4947  0718                     	;# 
  4948  0719                     	;# 
  4949  071A                     	;# 
  4950  071B                     	;# 
  4951  071C                     	;# 
  4952  071D                     	;# 
  4953  071E                     	;# 
  4954  0796                     	;# 
  4955  0797                     	;# 
  4956  0798                     	;# 
  4957  0799                     	;# 
  4958  079A                     	;# 
  4959  079B                     	;# 
  4960  079C                     	;# 
  4961  079D                     	;# 
  4962  080C                     	;# 
  4963  080D                     	;# 
  4964  080E                     	;# 
  4965  080F                     	;# 
  4966  0810                     	;# 
  4967  0811                     	;# 
  4968  0812                     	;# 
  4969  0813                     	;# 
  4970  0814                     	;# 
  4971  081A                     	;# 
  4972  081A                     	;# 
  4973  081B                     	;# 
  4974  081C                     	;# 
  4975  081C                     	;# 
  4976  081D                     	;# 
  4977  081E                     	;# 
  4978  081F                     	;# 
  4979  088C                     	;# 
  4980  088D                     	;# 
  4981  088E                     	;# 
  4982  088F                     	;# 
  4983  0890                     	;# 
  4984  0891                     	;# 
  4985  0892                     	;# 
  4986  0893                     	;# 
  4987  0895                     	;# 
  4988  0896                     	;# 
  4989  0897                     	;# 
  4990  0898                     	;# 
  4991  0899                     	;# 
  4992  089A                     	;# 
  4993  089B                     	;# 
  4994  090C                     	;# 
  4995  090E                     	;# 
  4996  090F                     	;# 
  4997  091F                     	;# 
  4998  098F                     	;# 
  4999  098F                     	;# 
  5000  0990                     	;# 
  5001  0991                     	;# 
  5002  0992                     	;# 
  5003  0993                     	;# 
  5004  0994                     	;# 
  5005  0995                     	;# 
  5006  0996                     	;# 
  5007  0997                     	;# 
  5008  1E0F                     	;# 
  5009  1E10                     	;# 
  5010  1E11                     	;# 
  5011  1E12                     	;# 
  5012  1E13                     	;# 
  5013  1E14                     	;# 
  5014  1E15                     	;# 
  5015  1E16                     	;# 
  5016  1E17                     	;# 
  5017  1E18                     	;# 
  5018  1E19                     	;# 
  5019  1E1A                     	;# 
  5020  1E1B                     	;# 
  5021  1E1C                     	;# 
  5022  1E1D                     	;# 
  5023  1E1E                     	;# 
  5024  1E1F                     	;# 
  5025  1E20                     	;# 
  5026  1E21                     	;# 
  5027  1E22                     	;# 
  5028  1E23                     	;# 
  5029  1E24                     	;# 
  5030  1E25                     	;# 
  5031  1E26                     	;# 
  5032  1E27                     	;# 
  5033  1E28                     	;# 
  5034  1E29                     	;# 
  5035  1E2A                     	;# 
  5036  1E2B                     	;# 
  5037  1E2C                     	;# 
  5038  1E2D                     	;# 
  5039  1E2E                     	;# 
  5040  1E2F                     	;# 
  5041  1E30                     	;# 
  5042  1E31                     	;# 
  5043  1E32                     	;# 
  5044  1E33                     	;# 
  5045  1E34                     	;# 
  5046  1E35                     	;# 
  5047  1E36                     	;# 
  5048  1E37                     	;# 
  5049  1E8F                     	;# 
  5050  1E90                     	;# 
  5051  1E91                     	;# 
  5052  1E92                     	;# 
  5053  1E93                     	;# 
  5054  1E94                     	;# 
  5055  1E95                     	;# 
  5056  1E96                     	;# 
  5057  1E97                     	;# 
  5058  1E9C                     	;# 
  5059  1E9D                     	;# 
  5060  1E9E                     	;# 
  5061  1EA1                     	;# 
  5062  1EA2                     	;# 
  5063  1EA3                     	;# 
  5064  1EA4                     	;# 
  5065  1EA9                     	;# 
  5066  1EAA                     	;# 
  5067  1EB1                     	;# 
  5068  1EB2                     	;# 
  5069  1EB8                     	;# 
  5070  1EB9                     	;# 
  5071  1EBA                     	;# 
  5072  1EBB                     	;# 
  5073  1EBC                     	;# 
  5074  1EBD                     	;# 
  5075  1EBE                     	;# 
  5076  1EC3                     	;# 
  5077  1EC5                     	;# 
  5078  1EC6                     	;# 
  5079  1EC7                     	;# 
  5080  1EC8                     	;# 
  5081  1EC9                     	;# 
  5082  1ECA                     	;# 
  5083  1ECB                     	;# 
  5084  1ECB                     	;# 
  5085  1ECB                     	;# 
  5086  1ECC                     	;# 
  5087  1ECC                     	;# 
  5088  1ECC                     	;# 
  5089  1F10                     	;# 
  5090  1F11                     	;# 
  5091  1F12                     	;# 
  5092  1F14                     	;# 
  5093  1F15                     	;# 
  5094  1F1C                     	;# 
  5095  1F1D                     	;# 
  5096  1F1E                     	;# 
  5097  1F1F                     	;# 
  5098  1F20                     	;# 
  5099  1F21                     	;# 
  5100  1F22                     	;# 
  5101  1F23                     	;# 
  5102  1F24                     	;# 
  5103  1F25                     	;# 
  5104  1F26                     	;# 
  5105  1F27                     	;# 
  5106  1F38                     	;# 
  5107  1F39                     	;# 
  5108  1F3A                     	;# 
  5109  1F3B                     	;# 
  5110  1F3C                     	;# 
  5111  1F3D                     	;# 
  5112  1F3E                     	;# 
  5113  1F3F                     	;# 
  5114  1F43                     	;# 
  5115  1F44                     	;# 
  5116  1F45                     	;# 
  5117  1F46                     	;# 
  5118  1F47                     	;# 
  5119  1F48                     	;# 
  5120  1F49                     	;# 
  5121  1F4A                     	;# 
  5122  1F4E                     	;# 
  5123  1F4F                     	;# 
  5124  1F50                     	;# 
  5125  1F51                     	;# 
  5126  1F52                     	;# 
  5127  1F53                     	;# 
  5128  1F54                     	;# 
  5129  1F55                     	;# 
  5130  1FE4                     	;# 
  5131  1FE5                     	;# 
  5132  1FE6                     	;# 
  5133  1FE7                     	;# 
  5134  1FE8                     	;# 
  5135  1FE8                     	;# 
  5136  1FE9                     	;# 
  5137  1FEA                     	;# 
  5138  1FEB                     	;# 
  5139  1FED                     	;# 
  5140  1FEE                     	;# 
  5141  1FEF                     	;# 
  5142  0000                     	;# 
  5143  0001                     	;# 
  5144  0002                     	;# 
  5145  0003                     	;# 
  5146  0004                     	;# 
  5147  0005                     	;# 
  5148  0006                     	;# 
  5149  0007                     	;# 
  5150  0008                     	;# 
  5151  0009                     	;# 
  5152  000A                     	;# 
  5153  000B                     	;# 
  5154  000C                     	;# 
  5155  000D                     	;# 
  5156  000E                     	;# 
  5157  0012                     	;# 
  5158  0013                     	;# 
  5159  0014                     	;# 
  5160  0018                     	;# 
  5161  0019                     	;# 
  5162  001A                     	;# 
  5163  008C                     	;# 
  5164  008C                     	;# 
  5165  008D                     	;# 
  5166  008E                     	;# 
  5167  008E                     	;# 
  5168  008F                     	;# 
  5169  0090                     	;# 
  5170  0090                     	;# 
  5171  0091                     	;# 
  5172  0092                     	;# 
  5173  0092                     	;# 
  5174  0093                     	;# 
  5175  0094                     	;# 
  5176  0094                     	;# 
  5177  0095                     	;# 
  5178  0096                     	;# 
  5179  0096                     	;# 
  5180  0097                     	;# 
  5181  0098                     	;# 
  5182  0099                     	;# 
  5183  009A                     	;# 
  5184  009B                     	;# 
  5185  009B                     	;# 
  5186  009C                     	;# 
  5187  009D                     	;# 
  5188  009D                     	;# 
  5189  009E                     	;# 
  5190  009F                     	;# 
  5191  010C                     	;# 
  5192  010C                     	;# 
  5193  010D                     	;# 
  5194  010E                     	;# 
  5195  010F                     	;# 
  5196  010F                     	;# 
  5197  0110                     	;# 
  5198  0111                     	;# 
  5199  0112                     	;# 
  5200  0113                     	;# 
  5201  0114                     	;# 
  5202  0115                     	;# 
  5203  0116                     	;# 
  5204  0117                     	;# 
  5205  0118                     	;# 
  5206  0119                     	;# 
  5207  0119                     	;# 
  5208  0119                     	;# 
  5209  011A                     	;# 
  5210  011A                     	;# 
  5211  011A                     	;# 
  5212  011B                     	;# 
  5213  011B                     	;# 
  5214  011B                     	;# 
  5215  011B                     	;# 
  5216  011B                     	;# 
  5217  011C                     	;# 
  5218  011C                     	;# 
  5219  011C                     	;# 
  5220  011D                     	;# 
  5221  011D                     	;# 
  5222  011D                     	;# 
  5223  011E                     	;# 
  5224  011E                     	;# 
  5225  011E                     	;# 
  5226  011F                     	;# 
  5227  011F                     	;# 
  5228  011F                     	;# 
  5229  011F                     	;# 
  5230  011F                     	;# 
  5231  018C                     	;# 
  5232  018D                     	;# 
  5233  018E                     	;# 
  5234  018F                     	;# 
  5235  0190                     	;# 
  5236  0191                     	;# 
  5237  0192                     	;# 
  5238  0196                     	;# 
  5239  0197                     	;# 
  5240  0198                     	;# 
  5241  0199                     	;# 
  5242  019A                     	;# 
  5243  019B                     	;# 
  5244  019C                     	;# 
  5245  020C                     	;# 
  5246  020D                     	;# 
  5247  020E                     	;# 
  5248  020E                     	;# 
  5249  020F                     	;# 
  5250  020F                     	;# 
  5251  0210                     	;# 
  5252  0210                     	;# 
  5253  0211                     	;# 
  5254  0211                     	;# 
  5255  0212                     	;# 
  5256  0213                     	;# 
  5257  0214                     	;# 
  5258  0214                     	;# 
  5259  0215                     	;# 
  5260  0215                     	;# 
  5261  0216                     	;# 
  5262  0216                     	;# 
  5263  0217                     	;# 
  5264  0217                     	;# 
  5265  0218                     	;# 
  5266  0219                     	;# 
  5267  021A                     	;# 
  5268  021A                     	;# 
  5269  021B                     	;# 
  5270  021B                     	;# 
  5271  021C                     	;# 
  5272  021C                     	;# 
  5273  021D                     	;# 
  5274  021D                     	;# 
  5275  021E                     	;# 
  5276  021F                     	;# 
  5277  028C                     	;# 
  5278  028C                     	;# 
  5279  028D                     	;# 
  5280  028D                     	;# 
  5281  028E                     	;# 
  5282  028F                     	;# 
  5283  0290                     	;# 
  5284  0291                     	;# 
  5285  0292                     	;# 
  5286  0292                     	;# 
  5287  0293                     	;# 
  5288  0293                     	;# 
  5289  0294                     	;# 
  5290  0295                     	;# 
  5291  0296                     	;# 
  5292  0297                     	;# 
  5293  0298                     	;# 
  5294  0298                     	;# 
  5295  0299                     	;# 
  5296  0299                     	;# 
  5297  029A                     	;# 
  5298  029B                     	;# 
  5299  029C                     	;# 
  5300  029D                     	;# 
  5301  029F                     	;# 
  5302  030C                     	;# 
  5303  030C                     	;# 
  5304  030D                     	;# 
  5305  030E                     	;# 
  5306  030F                     	;# 
  5307  0310                     	;# 
  5308  0310                     	;# 
  5309  0311                     	;# 
  5310  0312                     	;# 
  5311  0313                     	;# 
  5312  0314                     	;# 
  5313  0314                     	;# 
  5314  0315                     	;# 
  5315  0316                     	;# 
  5316  0317                     	;# 
  5317  0318                     	;# 
  5318  0318                     	;# 
  5319  0319                     	;# 
  5320  031A                     	;# 
  5321  031B                     	;# 
  5322  038C                     	;# 
  5323  038C                     	;# 
  5324  038D                     	;# 
  5325  038E                     	;# 
  5326  0390                     	;# 
  5327  0390                     	;# 
  5328  0391                     	;# 
  5329  0392                     	;# 
  5330  048C                     	;# 
  5331  048C                     	;# 
  5332  048D                     	;# 
  5333  048E                     	;# 
  5334  048F                     	;# 
  5335  048F                     	;# 
  5336  0490                     	;# 
  5337  0491                     	;# 
  5338  0492                     	;# 
  5339  0492                     	;# 
  5340  0493                     	;# 
  5341  0494                     	;# 
  5342  0495                     	;# 
  5343  0495                     	;# 
  5344  0496                     	;# 
  5345  0497                     	;# 
  5346  0498                     	;# 
  5347  0499                     	;# 
  5348  049A                     	;# 
  5349  049B                     	;# 
  5350  049C                     	;# 
  5351  049D                     	;# 
  5352  058C                     	;# 
  5353  058C                     	;# 
  5354  058D                     	;# 
  5355  058E                     	;# 
  5356  058F                     	;# 
  5357  058F                     	;# 
  5358  0590                     	;# 
  5359  0591                     	;# 
  5360  0592                     	;# 
  5361  0593                     	;# 
  5362  059C                     	;# 
  5363  059C                     	;# 
  5364  059D                     	;# 
  5365  059D                     	;# 
  5366  059E                     	;# 
  5367  059F                     	;# 
  5368  060C                     	;# 
  5369  060C                     	;# 
  5370  060D                     	;# 
  5371  060D                     	;# 
  5372  060E                     	;# 
  5373  060F                     	;# 
  5374  0610                     	;# 
  5375  0611                     	;# 
  5376  0612                     	;# 
  5377  0613                     	;# 
  5378  0614                     	;# 
  5379  0616                     	;# 
  5380  0616                     	;# 
  5381  0617                     	;# 
  5382  0617                     	;# 
  5383  0618                     	;# 
  5384  0619                     	;# 
  5385  061A                     	;# 
  5386  061B                     	;# 
  5387  061C                     	;# 
  5388  061D                     	;# 
  5389  061E                     	;# 
  5390  070C                     	;# 
  5391  070D                     	;# 
  5392  070E                     	;# 
  5393  070F                     	;# 
  5394  0710                     	;# 
  5395  0711                     	;# 
  5396  0712                     	;# 
  5397  0713                     	;# 
  5398  0714                     	;# 
  5399  0716                     	;# 
  5400  0717                     	;# 
  5401  0718                     	;# 
  5402  0719                     	;# 
  5403  071A                     	;# 
  5404  071B                     	;# 
  5405  071C                     	;# 
  5406  071D                     	;# 
  5407  071E                     	;# 
  5408  0796                     	;# 
  5409  0797                     	;# 
  5410  0798                     	;# 
  5411  0799                     	;# 
  5412  079A                     	;# 
  5413  079B                     	;# 
  5414  079C                     	;# 
  5415  079D                     	;# 
  5416  080C                     	;# 
  5417  080D                     	;# 
  5418  080E                     	;# 
  5419  080F                     	;# 
  5420  0810                     	;# 
  5421  0811                     	;# 
  5422  0812                     	;# 
  5423  0813                     	;# 
  5424  0814                     	;# 
  5425  081A                     	;# 
  5426  081A                     	;# 
  5427  081B                     	;# 
  5428  081C                     	;# 
  5429  081C                     	;# 
  5430  081D                     	;# 
  5431  081E                     	;# 
  5432  081F                     	;# 
  5433  088C                     	;# 
  5434  088D                     	;# 
  5435  088E                     	;# 
  5436  088F                     	;# 
  5437  0890                     	;# 
  5438  0891                     	;# 
  5439  0892                     	;# 
  5440  0893                     	;# 
  5441  0895                     	;# 
  5442  0896                     	;# 
  5443  0897                     	;# 
  5444  0898                     	;# 
  5445  0899                     	;# 
  5446  089A                     	;# 
  5447  089B                     	;# 
  5448  090C                     	;# 
  5449  090E                     	;# 
  5450  090F                     	;# 
  5451  091F                     	;# 
  5452  098F                     	;# 
  5453  098F                     	;# 
  5454  0990                     	;# 
  5455  0991                     	;# 
  5456  0992                     	;# 
  5457  0993                     	;# 
  5458  0994                     	;# 
  5459  0995                     	;# 
  5460  0996                     	;# 
  5461  0997                     	;# 
  5462  1E0F                     	;# 
  5463  1E10                     	;# 
  5464  1E11                     	;# 
  5465  1E12                     	;# 
  5466  1E13                     	;# 
  5467  1E14                     	;# 
  5468  1E15                     	;# 
  5469  1E16                     	;# 
  5470  1E17                     	;# 
  5471  1E18                     	;# 
  5472  1E19                     	;# 
  5473  1E1A                     	;# 
  5474  1E1B                     	;# 
  5475  1E1C                     	;# 
  5476  1E1D                     	;# 
  5477  1E1E                     	;# 
  5478  1E1F                     	;# 
  5479  1E20                     	;# 
  5480  1E21                     	;# 
  5481  1E22                     	;# 
  5482  1E23                     	;# 
  5483  1E24                     	;# 
  5484  1E25                     	;# 
  5485  1E26                     	;# 
  5486  1E27                     	;# 
  5487  1E28                     	;# 
  5488  1E29                     	;# 
  5489  1E2A                     	;# 
  5490  1E2B                     	;# 
  5491  1E2C                     	;# 
  5492  1E2D                     	;# 
  5493  1E2E                     	;# 
  5494  1E2F                     	;# 
  5495  1E30                     	;# 
  5496  1E31                     	;# 
  5497  1E32                     	;# 
  5498  1E33                     	;# 
  5499  1E34                     	;# 
  5500  1E35                     	;# 
  5501  1E36                     	;# 
  5502  1E37                     	;# 
  5503  1E8F                     	;# 
  5504  1E90                     	;# 
  5505  1E91                     	;# 
  5506  1E92                     	;# 
  5507  1E93                     	;# 
  5508  1E94                     	;# 
  5509  1E95                     	;# 
  5510  1E96                     	;# 
  5511  1E97                     	;# 
  5512  1E9C                     	;# 
  5513  1E9D                     	;# 
  5514  1E9E                     	;# 
  5515  1EA1                     	;# 
  5516  1EA2                     	;# 
  5517  1EA3                     	;# 
  5518  1EA4                     	;# 
  5519  1EA9                     	;# 
  5520  1EAA                     	;# 
  5521  1EB1                     	;# 
  5522  1EB2                     	;# 
  5523  1EB8                     	;# 
  5524  1EB9                     	;# 
  5525  1EBA                     	;# 
  5526  1EBB                     	;# 
  5527  1EBC                     	;# 
  5528  1EBD                     	;# 
  5529  1EBE                     	;# 
  5530  1EC3                     	;# 
  5531  1EC5                     	;# 
  5532  1EC6                     	;# 
  5533  1EC7                     	;# 
  5534  1EC8                     	;# 
  5535  1EC9                     	;# 
  5536  1ECA                     	;# 
  5537  1ECB                     	;# 
  5538  1ECB                     	;# 
  5539  1ECB                     	;# 
  5540  1ECC                     	;# 
  5541  1ECC                     	;# 
  5542  1ECC                     	;# 
  5543  1F10                     	;# 
  5544  1F11                     	;# 
  5545  1F12                     	;# 
  5546  1F14                     	;# 
  5547  1F15                     	;# 
  5548  1F1C                     	;# 
  5549  1F1D                     	;# 
  5550  1F1E                     	;# 
  5551  1F1F                     	;# 
  5552  1F20                     	;# 
  5553  1F21                     	;# 
  5554  1F22                     	;# 
  5555  1F23                     	;# 
  5556  1F24                     	;# 
  5557  1F25                     	;# 
  5558  1F26                     	;# 
  5559  1F27                     	;# 
  5560  1F38                     	;# 
  5561  1F39                     	;# 
  5562  1F3A                     	;# 
  5563  1F3B                     	;# 
  5564  1F3C                     	;# 
  5565  1F3D                     	;# 
  5566  1F3E                     	;# 
  5567  1F3F                     	;# 
  5568  1F43                     	;# 
  5569  1F44                     	;# 
  5570  1F45                     	;# 
  5571  1F46                     	;# 
  5572  1F47                     	;# 
  5573  1F48                     	;# 
  5574  1F49                     	;# 
  5575  1F4A                     	;# 
  5576  1F4E                     	;# 
  5577  1F4F                     	;# 
  5578  1F50                     	;# 
  5579  1F51                     	;# 
  5580  1F52                     	;# 
  5581  1F53                     	;# 
  5582  1F54                     	;# 
  5583  1F55                     	;# 
  5584  1FE4                     	;# 
  5585  1FE5                     	;# 
  5586  1FE6                     	;# 
  5587  1FE7                     	;# 
  5588  1FE8                     	;# 
  5589  1FE8                     	;# 
  5590  1FE9                     	;# 
  5591  1FEA                     	;# 
  5592  1FEB                     	;# 
  5593  1FED                     	;# 
  5594  1FEE                     	;# 
  5595  1FEF                     	;# 
  5596  0000                     	;# 
  5597  0001                     	;# 
  5598  0002                     	;# 
  5599  0003                     	;# 
  5600  0004                     	;# 
  5601  0005                     	;# 
  5602  0006                     	;# 
  5603  0007                     	;# 
  5604  0008                     	;# 
  5605  0009                     	;# 
  5606  000A                     	;# 
  5607  000B                     	;# 
  5608  000C                     	;# 
  5609  000D                     	;# 
  5610  000E                     	;# 
  5611  0012                     	;# 
  5612  0013                     	;# 
  5613  0014                     	;# 
  5614  0018                     	;# 
  5615  0019                     	;# 
  5616  001A                     	;# 
  5617  008C                     	;# 
  5618  008C                     	;# 
  5619  008D                     	;# 
  5620  008E                     	;# 
  5621  008E                     	;# 
  5622  008F                     	;# 
  5623  0090                     	;# 
  5624  0090                     	;# 
  5625  0091                     	;# 
  5626  0092                     	;# 
  5627  0092                     	;# 
  5628  0093                     	;# 
  5629  0094                     	;# 
  5630  0094                     	;# 
  5631  0095                     	;# 
  5632  0096                     	;# 
  5633  0096                     	;# 
  5634  0097                     	;# 
  5635  0098                     	;# 
  5636  0099                     	;# 
  5637  009A                     	;# 
  5638  009B                     	;# 
  5639  009B                     	;# 
  5640  009C                     	;# 
  5641  009D                     	;# 
  5642  009D                     	;# 
  5643  009E                     	;# 
  5644  009F                     	;# 
  5645  010C                     	;# 
  5646  010C                     	;# 
  5647  010D                     	;# 
  5648  010E                     	;# 
  5649  010F                     	;# 
  5650  010F                     	;# 
  5651  0110                     	;# 
  5652  0111                     	;# 
  5653  0112                     	;# 
  5654  0113                     	;# 
  5655  0114                     	;# 
  5656  0115                     	;# 
  5657  0116                     	;# 
  5658  0117                     	;# 
  5659  0118                     	;# 
  5660  0119                     	;# 
  5661  0119                     	;# 
  5662  0119                     	;# 
  5663  011A                     	;# 
  5664  011A                     	;# 
  5665  011A                     	;# 
  5666  011B                     	;# 
  5667  011B                     	;# 
  5668  011B                     	;# 
  5669  011B                     	;# 
  5670  011B                     	;# 
  5671  011C                     	;# 
  5672  011C                     	;# 
  5673  011C                     	;# 
  5674  011D                     	;# 
  5675  011D                     	;# 
  5676  011D                     	;# 
  5677  011E                     	;# 
  5678  011E                     	;# 
  5679  011E                     	;# 
  5680  011F                     	;# 
  5681  011F                     	;# 
  5682  011F                     	;# 
  5683  011F                     	;# 
  5684  011F                     	;# 
  5685  018C                     	;# 
  5686  018D                     	;# 
  5687  018E                     	;# 
  5688  018F                     	;# 
  5689  0190                     	;# 
  5690  0191                     	;# 
  5691  0192                     	;# 
  5692  0196                     	;# 
  5693  0197                     	;# 
  5694  0198                     	;# 
  5695  0199                     	;# 
  5696  019A                     	;# 
  5697  019B                     	;# 
  5698  019C                     	;# 
  5699  020C                     	;# 
  5700  020D                     	;# 
  5701  020E                     	;# 
  5702  020E                     	;# 
  5703  020F                     	;# 
  5704  020F                     	;# 
  5705  0210                     	;# 
  5706  0210                     	;# 
  5707  0211                     	;# 
  5708  0211                     	;# 
  5709  0212                     	;# 
  5710  0213                     	;# 
  5711  0214                     	;# 
  5712  0214                     	;# 
  5713  0215                     	;# 
  5714  0215                     	;# 
  5715  0216                     	;# 
  5716  0216                     	;# 
  5717  0217                     	;# 
  5718  0217                     	;# 
  5719  0218                     	;# 
  5720  0219                     	;# 
  5721  021A                     	;# 
  5722  021A                     	;# 
  5723  021B                     	;# 
  5724  021B                     	;# 
  5725  021C                     	;# 
  5726  021C                     	;# 
  5727  021D                     	;# 
  5728  021D                     	;# 
  5729  021E                     	;# 
  5730  021F                     	;# 
  5731  028C                     	;# 
  5732  028C                     	;# 
  5733  028D                     	;# 
  5734  028D                     	;# 
  5735  028E                     	;# 
  5736  028F                     	;# 
  5737  0290                     	;# 
  5738  0291                     	;# 
  5739  0292                     	;# 
  5740  0292                     	;# 
  5741  0293                     	;# 
  5742  0293                     	;# 
  5743  0294                     	;# 
  5744  0295                     	;# 
  5745  0296                     	;# 
  5746  0297                     	;# 
  5747  0298                     	;# 
  5748  0298                     	;# 
  5749  0299                     	;# 
  5750  0299                     	;# 
  5751  029A                     	;# 
  5752  029B                     	;# 
  5753  029C                     	;# 
  5754  029D                     	;# 
  5755  029F                     	;# 
  5756  030C                     	;# 
  5757  030C                     	;# 
  5758  030D                     	;# 
  5759  030E                     	;# 
  5760  030F                     	;# 
  5761  0310                     	;# 
  5762  0310                     	;# 
  5763  0311                     	;# 
  5764  0312                     	;# 
  5765  0313                     	;# 
  5766  0314                     	;# 
  5767  0314                     	;# 
  5768  0315                     	;# 
  5769  0316                     	;# 
  5770  0317                     	;# 
  5771  0318                     	;# 
  5772  0318                     	;# 
  5773  0319                     	;# 
  5774  031A                     	;# 
  5775  031B                     	;# 
  5776  038C                     	;# 
  5777  038C                     	;# 
  5778  038D                     	;# 
  5779  038E                     	;# 
  5780  0390                     	;# 
  5781  0390                     	;# 
  5782  0391                     	;# 
  5783  0392                     	;# 
  5784  048C                     	;# 
  5785  048C                     	;# 
  5786  048D                     	;# 
  5787  048E                     	;# 
  5788  048F                     	;# 
  5789  048F                     	;# 
  5790  0490                     	;# 
  5791  0491                     	;# 
  5792  0492                     	;# 
  5793  0492                     	;# 
  5794  0493                     	;# 
  5795  0494                     	;# 
  5796  0495                     	;# 
  5797  0495                     	;# 
  5798  0496                     	;# 
  5799  0497                     	;# 
  5800  0498                     	;# 
  5801  0499                     	;# 
  5802  049A                     	;# 
  5803  049B                     	;# 
  5804  049C                     	;# 
  5805  049D                     	;# 
  5806  058C                     	;# 
  5807  058C                     	;# 
  5808  058D                     	;# 
  5809  058E                     	;# 
  5810  058F                     	;# 
  5811  058F                     	;# 
  5812  0590                     	;# 
  5813  0591                     	;# 
  5814  0592                     	;# 
  5815  0593                     	;# 
  5816  059C                     	;# 
  5817  059C                     	;# 
  5818  059D                     	;# 
  5819  059D                     	;# 
  5820  059E                     	;# 
  5821  059F                     	;# 
  5822  060C                     	;# 
  5823  060C                     	;# 
  5824  060D                     	;# 
  5825  060D                     	;# 
  5826  060E                     	;# 
  5827  060F                     	;# 
  5828  0610                     	;# 
  5829  0611                     	;# 
  5830  0612                     	;# 
  5831  0613                     	;# 
  5832  0614                     	;# 
  5833  0616                     	;# 
  5834  0616                     	;# 
  5835  0617                     	;# 
  5836  0617                     	;# 
  5837  0618                     	;# 
  5838  0619                     	;# 
  5839  061A                     	;# 
  5840  061B                     	;# 
  5841  061C                     	;# 
  5842  061D                     	;# 
  5843  061E                     	;# 
  5844  070C                     	;# 
  5845  070D                     	;# 
  5846  070E                     	;# 
  5847  070F                     	;# 
  5848  0710                     	;# 
  5849  0711                     	;# 
  5850  0712                     	;# 
  5851  0713                     	;# 
  5852  0714                     	;# 
  5853  0716                     	;# 
  5854  0717                     	;# 
  5855  0718                     	;# 
  5856  0719                     	;# 
  5857  071A                     	;# 
  5858  071B                     	;# 
  5859  071C                     	;# 
  5860  071D                     	;# 
  5861  071E                     	;# 
  5862  0796                     	;# 
  5863  0797                     	;# 
  5864  0798                     	;# 
  5865  0799                     	;# 
  5866  079A                     	;# 
  5867  079B                     	;# 
  5868  079C                     	;# 
  5869  079D                     	;# 
  5870  080C                     	;# 
  5871  080D                     	;# 
  5872  080E                     	;# 
  5873  080F                     	;# 
  5874  0810                     	;# 
  5875  0811                     	;# 
  5876  0812                     	;# 
  5877  0813                     	;# 
  5878  0814                     	;# 
  5879  081A                     	;# 
  5880  081A                     	;# 
  5881  081B                     	;# 
  5882  081C                     	;# 
  5883  081C                     	;# 
  5884  081D                     	;# 
  5885  081E                     	;# 
  5886  081F                     	;# 
  5887  088C                     	;# 
  5888  088D                     	;# 
  5889  088E                     	;# 
  5890  088F                     	;# 
  5891  0890                     	;# 
  5892  0891                     	;# 
  5893  0892                     	;# 
  5894  0893                     	;# 
  5895  0895                     	;# 
  5896  0896                     	;# 
  5897  0897                     	;# 
  5898  0898                     	;# 
  5899  0899                     	;# 
  5900  089A                     	;# 
  5901  089B                     	;# 
  5902  090C                     	;# 
  5903  090E                     	;# 
  5904  090F                     	;# 
  5905  091F                     	;# 
  5906  098F                     	;# 
  5907  098F                     	;# 
  5908  0990                     	;# 
  5909  0991                     	;# 
  5910  0992                     	;# 
  5911  0993                     	;# 
  5912  0994                     	;# 
  5913  0995                     	;# 
  5914  0996                     	;# 
  5915  0997                     	;# 
  5916  1E0F                     	;# 
  5917  1E10                     	;# 
  5918  1E11                     	;# 
  5919  1E12                     	;# 
  5920  1E13                     	;# 
  5921  1E14                     	;# 
  5922  1E15                     	;# 
  5923  1E16                     	;# 
  5924  1E17                     	;# 
  5925  1E18                     	;# 
  5926  1E19                     	;# 
  5927  1E1A                     	;# 
  5928  1E1B                     	;# 
  5929  1E1C                     	;# 
  5930  1E1D                     	;# 
  5931  1E1E                     	;# 
  5932  1E1F                     	;# 
  5933  1E20                     	;# 
  5934  1E21                     	;# 
  5935  1E22                     	;# 
  5936  1E23                     	;# 
  5937  1E24                     	;# 
  5938  1E25                     	;# 
  5939  1E26                     	;# 
  5940  1E27                     	;# 
  5941  1E28                     	;# 
  5942  1E29                     	;# 
  5943  1E2A                     	;# 
  5944  1E2B                     	;# 
  5945  1E2C                     	;# 
  5946  1E2D                     	;# 
  5947  1E2E                     	;# 
  5948  1E2F                     	;# 
  5949  1E30                     	;# 
  5950  1E31                     	;# 
  5951  1E32                     	;# 
  5952  1E33                     	;# 
  5953  1E34                     	;# 
  5954  1E35                     	;# 
  5955  1E36                     	;# 
  5956  1E37                     	;# 
  5957  1E8F                     	;# 
  5958  1E90                     	;# 
  5959  1E91                     	;# 
  5960  1E92                     	;# 
  5961  1E93                     	;# 
  5962  1E94                     	;# 
  5963  1E95                     	;# 
  5964  1E96                     	;# 
  5965  1E97                     	;# 
  5966  1E9C                     	;# 
  5967  1E9D                     	;# 
  5968  1E9E                     	;# 
  5969  1EA1                     	;# 
  5970  1EA2                     	;# 
  5971  1EA3                     	;# 
  5972  1EA4                     	;# 
  5973  1EA9                     	;# 
  5974  1EAA                     	;# 
  5975  1EB1                     	;# 
  5976  1EB2                     	;# 
  5977  1EB8                     	;# 
  5978  1EB9                     	;# 
  5979  1EBA                     	;# 
  5980  1EBB                     	;# 
  5981  1EBC                     	;# 
  5982  1EBD                     	;# 
  5983  1EBE                     	;# 
  5984  1EC3                     	;# 
  5985  1EC5                     	;# 
  5986  1EC6                     	;# 
  5987  1EC7                     	;# 
  5988  1EC8                     	;# 
  5989  1EC9                     	;# 
  5990  1ECA                     	;# 
  5991  1ECB                     	;# 
  5992  1ECB                     	;# 
  5993  1ECB                     	;# 
  5994  1ECC                     	;# 
  5995  1ECC                     	;# 
  5996  1ECC                     	;# 
  5997  1F10                     	;# 
  5998  1F11                     	;# 
  5999  1F12                     	;# 
  6000  1F14                     	;# 
  6001  1F15                     	;# 
  6002  1F1C                     	;# 
  6003  1F1D                     	;# 
  6004  1F1E                     	;# 
  6005  1F1F                     	;# 
  6006  1F20                     	;# 
  6007  1F21                     	;# 
  6008  1F22                     	;# 
  6009  1F23                     	;# 
  6010  1F24                     	;# 
  6011  1F25                     	;# 
  6012  1F26                     	;# 
  6013  1F27                     	;# 
  6014  1F38                     	;# 
  6015  1F39                     	;# 
  6016  1F3A                     	;# 
  6017  1F3B                     	;# 
  6018  1F3C                     	;# 
  6019  1F3D                     	;# 
  6020  1F3E                     	;# 
  6021  1F3F                     	;# 
  6022  1F43                     	;# 
  6023  1F44                     	;# 
  6024  1F45                     	;# 
  6025  1F46                     	;# 
  6026  1F47                     	;# 
  6027  1F48                     	;# 
  6028  1F49                     	;# 
  6029  1F4A                     	;# 
  6030  1F4E                     	;# 
  6031  1F4F                     	;# 
  6032  1F50                     	;# 
  6033  1F51                     	;# 
  6034  1F52                     	;# 
  6035  1F53                     	;# 
  6036  1F54                     	;# 
  6037  1F55                     	;# 
  6038  1FE4                     	;# 
  6039  1FE5                     	;# 
  6040  1FE6                     	;# 
  6041  1FE7                     	;# 
  6042  1FE8                     	;# 
  6043  1FE8                     	;# 
  6044  1FE9                     	;# 
  6045  1FEA                     	;# 
  6046  1FEB                     	;# 
  6047  1FED                     	;# 
  6048  1FEE                     	;# 
  6049  1FEF                     	;# 
  6050  0000                     	;# 
  6051  0001                     	;# 
  6052  0002                     	;# 
  6053  0003                     	;# 
  6054  0004                     	;# 
  6055  0005                     	;# 
  6056  0006                     	;# 
  6057  0007                     	;# 
  6058  0008                     	;# 
  6059  0009                     	;# 
  6060  000A                     	;# 
  6061  000B                     	;# 
  6062  000C                     	;# 
  6063  000D                     	;# 
  6064  000E                     	;# 
  6065  0012                     	;# 
  6066  0013                     	;# 
  6067  0014                     	;# 
  6068  0018                     	;# 
  6069  0019                     	;# 
  6070  001A                     	;# 
  6071  008C                     	;# 
  6072  008C                     	;# 
  6073  008D                     	;# 
  6074  008E                     	;# 
  6075  008E                     	;# 
  6076  008F                     	;# 
  6077  0090                     	;# 
  6078  0090                     	;# 
  6079  0091                     	;# 
  6080  0092                     	;# 
  6081  0092                     	;# 
  6082  0093                     	;# 
  6083  0094                     	;# 
  6084  0094                     	;# 
  6085  0095                     	;# 
  6086  0096                     	;# 
  6087  0096                     	;# 
  6088  0097                     	;# 
  6089  0098                     	;# 
  6090  0099                     	;# 
  6091  009A                     	;# 
  6092  009B                     	;# 
  6093  009B                     	;# 
  6094  009C                     	;# 
  6095  009D                     	;# 
  6096  009D                     	;# 
  6097  009E                     	;# 
  6098  009F                     	;# 
  6099  010C                     	;# 
  6100  010C                     	;# 
  6101  010D                     	;# 
  6102  010E                     	;# 
  6103  010F                     	;# 
  6104  010F                     	;# 
  6105  0110                     	;# 
  6106  0111                     	;# 
  6107  0112                     	;# 
  6108  0113                     	;# 
  6109  0114                     	;# 
  6110  0115                     	;# 
  6111  0116                     	;# 
  6112  0117                     	;# 
  6113  0118                     	;# 
  6114  0119                     	;# 
  6115  0119                     	;# 
  6116  0119                     	;# 
  6117  011A                     	;# 
  6118  011A                     	;# 
  6119  011A                     	;# 
  6120  011B                     	;# 
  6121  011B                     	;# 
  6122  011B                     	;# 
  6123  011B                     	;# 
  6124  011B                     	;# 
  6125  011C                     	;# 
  6126  011C                     	;# 
  6127  011C                     	;# 
  6128  011D                     	;# 
  6129  011D                     	;# 
  6130  011D                     	;# 
  6131  011E                     	;# 
  6132  011E                     	;# 
  6133  011E                     	;# 
  6134  011F                     	;# 
  6135  011F                     	;# 
  6136  011F                     	;# 
  6137  011F                     	;# 
  6138  011F                     	;# 
  6139  018C                     	;# 
  6140  018D                     	;# 
  6141  018E                     	;# 
  6142  018F                     	;# 
  6143  0190                     	;# 
  6144  0191                     	;# 
  6145  0192                     	;# 
  6146  0196                     	;# 
  6147  0197                     	;# 
  6148  0198                     	;# 
  6149  0199                     	;# 
  6150  019A                     	;# 
  6151  019B                     	;# 
  6152  019C                     	;# 
  6153  020C                     	;# 
  6154  020D                     	;# 
  6155  020E                     	;# 
  6156  020E                     	;# 
  6157  020F                     	;# 
  6158  020F                     	;# 
  6159  0210                     	;# 
  6160  0210                     	;# 
  6161  0211                     	;# 
  6162  0211                     	;# 
  6163  0212                     	;# 
  6164  0213                     	;# 
  6165  0214                     	;# 
  6166  0214                     	;# 
  6167  0215                     	;# 
  6168  0215                     	;# 
  6169  0216                     	;# 
  6170  0216                     	;# 
  6171  0217                     	;# 
  6172  0217                     	;# 
  6173  0218                     	;# 
  6174  0219                     	;# 
  6175  021A                     	;# 
  6176  021A                     	;# 
  6177  021B                     	;# 
  6178  021B                     	;# 
  6179  021C                     	;# 
  6180  021C                     	;# 
  6181  021D                     	;# 
  6182  021D                     	;# 
  6183  021E                     	;# 
  6184  021F                     	;# 
  6185  028C                     	;# 
  6186  028C                     	;# 
  6187  028D                     	;# 
  6188  028D                     	;# 
  6189  028E                     	;# 
  6190  028F                     	;# 
  6191  0290                     	;# 
  6192  0291                     	;# 
  6193  0292                     	;# 
  6194  0292                     	;# 
  6195  0293                     	;# 
  6196  0293                     	;# 
  6197  0294                     	;# 
  6198  0295                     	;# 
  6199  0296                     	;# 
  6200  0297                     	;# 
  6201  0298                     	;# 
  6202  0298                     	;# 
  6203  0299                     	;# 
  6204  0299                     	;# 
  6205  029A                     	;# 
  6206  029B                     	;# 
  6207  029C                     	;# 
  6208  029D                     	;# 
  6209  029F                     	;# 
  6210  030C                     	;# 
  6211  030C                     	;# 
  6212  030D                     	;# 
  6213  030E                     	;# 
  6214  030F                     	;# 
  6215  0310                     	;# 
  6216  0310                     	;# 
  6217  0311                     	;# 
  6218  0312                     	;# 
  6219  0313                     	;# 
  6220  0314                     	;# 
  6221  0314                     	;# 
  6222  0315                     	;# 
  6223  0316                     	;# 
  6224  0317                     	;# 
  6225  0318                     	;# 
  6226  0318                     	;# 
  6227  0319                     	;# 
  6228  031A                     	;# 
  6229  031B                     	;# 
  6230  038C                     	;# 
  6231  038C                     	;# 
  6232  038D                     	;# 
  6233  038E                     	;# 
  6234  0390                     	;# 
  6235  0390                     	;# 
  6236  0391                     	;# 
  6237  0392                     	;# 
  6238  048C                     	;# 
  6239  048C                     	;# 
  6240  048D                     	;# 
  6241  048E                     	;# 
  6242  048F                     	;# 
  6243  048F                     	;# 
  6244  0490                     	;# 
  6245  0491                     	;# 
  6246  0492                     	;# 
  6247  0492                     	;# 
  6248  0493                     	;# 
  6249  0494                     	;# 
  6250  0495                     	;# 
  6251  0495                     	;# 
  6252  0496                     	;# 
  6253  0497                     	;# 
  6254  0498                     	;# 
  6255  0499                     	;# 
  6256  049A                     	;# 
  6257  049B                     	;# 
  6258  049C                     	;# 
  6259  049D                     	;# 
  6260  058C                     	;# 
  6261  058C                     	;# 
  6262  058D                     	;# 
  6263  058E                     	;# 
  6264  058F                     	;# 
  6265  058F                     	;# 
  6266  0590                     	;# 
  6267  0591                     	;# 
  6268  0592                     	;# 
  6269  0593                     	;# 
  6270  059C                     	;# 
  6271  059C                     	;# 
  6272  059D                     	;# 
  6273  059D                     	;# 
  6274  059E                     	;# 
  6275  059F                     	;# 
  6276  060C                     	;# 
  6277  060C                     	;# 
  6278  060D                     	;# 
  6279  060D                     	;# 
  6280  060E                     	;# 
  6281  060F                     	;# 
  6282  0610                     	;# 
  6283  0611                     	;# 
  6284  0612                     	;# 
  6285  0613                     	;# 
  6286  0614                     	;# 
  6287  0616                     	;# 
  6288  0616                     	;# 
  6289  0617                     	;# 
  6290  0617                     	;# 
  6291  0618                     	;# 
  6292  0619                     	;# 
  6293  061A                     	;# 
  6294  061B                     	;# 
  6295  061C                     	;# 
  6296  061D                     	;# 
  6297  061E                     	;# 
  6298  070C                     	;# 
  6299  070D                     	;# 
  6300  070E                     	;# 
  6301  070F                     	;# 
  6302  0710                     	;# 
  6303  0711                     	;# 
  6304  0712                     	;# 
  6305  0713                     	;# 
  6306  0714                     	;# 
  6307  0716                     	;# 
  6308  0717                     	;# 
  6309  0718                     	;# 
  6310  0719                     	;# 
  6311  071A                     	;# 
  6312  071B                     	;# 
  6313  071C                     	;# 
  6314  071D                     	;# 
  6315  071E                     	;# 
  6316  0796                     	;# 
  6317  0797                     	;# 
  6318  0798                     	;# 
  6319  0799                     	;# 
  6320  079A                     	;# 
  6321  079B                     	;# 
  6322  079C                     	;# 
  6323  079D                     	;# 
  6324  080C                     	;# 
  6325  080D                     	;# 
  6326  080E                     	;# 
  6327  080F                     	;# 
  6328  0810                     	;# 
  6329  0811                     	;# 
  6330  0812                     	;# 
  6331  0813                     	;# 
  6332  0814                     	;# 
  6333  081A                     	;# 
  6334  081A                     	;# 
  6335  081B                     	;# 
  6336  081C                     	;# 
  6337  081C                     	;# 
  6338  081D                     	;# 
  6339  081E                     	;# 
  6340  081F                     	;# 
  6341  088C                     	;# 
  6342  088D                     	;# 
  6343  088E                     	;# 
  6344  088F                     	;# 
  6345  0890                     	;# 
  6346  0891                     	;# 
  6347  0892                     	;# 
  6348  0893                     	;# 
  6349  0895                     	;# 
  6350  0896                     	;# 
  6351  0897                     	;# 
  6352  0898                     	;# 
  6353  0899                     	;# 
  6354  089A                     	;# 
  6355  089B                     	;# 
  6356  090C                     	;# 
  6357  090E                     	;# 
  6358  090F                     	;# 
  6359  091F                     	;# 
  6360  098F                     	;# 
  6361  098F                     	;# 
  6362  0990                     	;# 
  6363  0991                     	;# 
  6364  0992                     	;# 
  6365  0993                     	;# 
  6366  0994                     	;# 
  6367  0995                     	;# 
  6368  0996                     	;# 
  6369  0997                     	;# 
  6370  1E0F                     	;# 
  6371  1E10                     	;# 
  6372  1E11                     	;# 
  6373  1E12                     	;# 
  6374  1E13                     	;# 
  6375  1E14                     	;# 
  6376  1E15                     	;# 
  6377  1E16                     	;# 
  6378  1E17                     	;# 
  6379  1E18                     	;# 
  6380  1E19                     	;# 
  6381  1E1A                     	;# 
  6382  1E1B                     	;# 
  6383  1E1C                     	;# 
  6384  1E1D                     	;# 
  6385  1E1E                     	;# 
  6386  1E1F                     	;# 
  6387  1E20                     	;# 
  6388  1E21                     	;# 
  6389  1E22                     	;# 
  6390  1E23                     	;# 
  6391  1E24                     	;# 
  6392  1E25                     	;# 
  6393  1E26                     	;# 
  6394  1E27                     	;# 
  6395  1E28                     	;# 
  6396  1E29                     	;# 
  6397  1E2A                     	;# 
  6398  1E2B                     	;# 
  6399  1E2C                     	;# 
  6400  1E2D                     	;# 
  6401  1E2E                     	;# 
  6402  1E2F                     	;# 
  6403  1E30                     	;# 
  6404  1E31                     	;# 
  6405  1E32                     	;# 
  6406  1E33                     	;# 
  6407  1E34                     	;# 
  6408  1E35                     	;# 
  6409  1E36                     	;# 
  6410  1E37                     	;# 
  6411  1E8F                     	;# 
  6412  1E90                     	;# 
  6413  1E91                     	;# 
  6414  1E92                     	;# 
  6415  1E93                     	;# 
  6416  1E94                     	;# 
  6417  1E95                     	;# 
  6418  1E96                     	;# 
  6419  1E97                     	;# 
  6420  1E9C                     	;# 
  6421  1E9D                     	;# 
  6422  1E9E                     	;# 
  6423  1EA1                     	;# 
  6424  1EA2                     	;# 
  6425  1EA3                     	;# 
  6426  1EA4                     	;# 
  6427  1EA9                     	;# 
  6428  1EAA                     	;# 
  6429  1EB1                     	;# 
  6430  1EB2                     	;# 
  6431  1EB8                     	;# 
  6432  1EB9                     	;# 
  6433  1EBA                     	;# 
  6434  1EBB                     	;# 
  6435  1EBC                     	;# 
  6436  1EBD                     	;# 
  6437  1EBE                     	;# 
  6438  1EC3                     	;# 
  6439  1EC5                     	;# 
  6440  1EC6                     	;# 
  6441  1EC7                     	;# 
  6442  1EC8                     	;# 
  6443  1EC9                     	;# 
  6444  1ECA                     	;# 
  6445  1ECB                     	;# 
  6446  1ECB                     	;# 
  6447  1ECB                     	;# 
  6448  1ECC                     	;# 
  6449  1ECC                     	;# 
  6450  1ECC                     	;# 
  6451  1F10                     	;# 
  6452  1F11                     	;# 
  6453  1F12                     	;# 
  6454  1F14                     	;# 
  6455  1F15                     	;# 
  6456  1F1C                     	;# 
  6457  1F1D                     	;# 
  6458  1F1E                     	;# 
  6459  1F1F                     	;# 
  6460  1F20                     	;# 
  6461  1F21                     	;# 
  6462  1F22                     	;# 
  6463  1F23                     	;# 
  6464  1F24                     	;# 
  6465  1F25                     	;# 
  6466  1F26                     	;# 
  6467  1F27                     	;# 
  6468  1F38                     	;# 
  6469  1F39                     	;# 
  6470  1F3A                     	;# 
  6471  1F3B                     	;# 
  6472  1F3C                     	;# 
  6473  1F3D                     	;# 
  6474  1F3E                     	;# 
  6475  1F3F                     	;# 
  6476  1F43                     	;# 
  6477  1F44                     	;# 
  6478  1F45                     	;# 
  6479  1F46                     	;# 
  6480  1F47                     	;# 
  6481  1F48                     	;# 
  6482  1F49                     	;# 
  6483  1F4A                     	;# 
  6484  1F4E                     	;# 
  6485  1F4F                     	;# 
  6486  1F50                     	;# 
  6487  1F51                     	;# 
  6488  1F52                     	;# 
  6489  1F53                     	;# 
  6490  1F54                     	;# 
  6491  1F55                     	;# 
  6492  1FE4                     	;# 
  6493  1FE5                     	;# 
  6494  1FE6                     	;# 
  6495  1FE7                     	;# 
  6496  1FE8                     	;# 
  6497  1FE8                     	;# 
  6498  1FE9                     	;# 
  6499  1FEA                     	;# 
  6500  1FEB                     	;# 
  6501  1FED                     	;# 
  6502  1FEE                     	;# 
  6503  1FEF                     	;_dmxData
  6504                           
  6505                           	psect	idataCOMMON
  6506  07FE                     __pidataCOMMON:	
  6507                           
  6508                           ;initializer for _address
  6509  07FE  3401               	retlw	1
  6510  07FF  3400               	retlw	0
  6511                           
  6512                           	psect	idataBANK2
  6513  10A5                     __pidataBANK2:	
  6514                           
  6515                           ;initializer for _fadeAmmount
  6516  10A5  3414               	retlw	20
  6517  10A6  3400               	retlw	0
  6518                           
  6519                           ;initializer for _delay
  6520  10A7  340A               	retlw	10
  6521  10A8  3400               	retlw	0
  6522                           
  6523                           ;initializer for _threshold
  6524  10A9  3490               	retlw	144
  6525  10AA  3406               	retlw	6
  6526                           
  6527                           	psect	idataBANK3
  6528  1131                     __pidataBANK3:	
  6529                           
  6530                           ;initializer for _color
  6531  1131  3400               	retlw	0
  6532  1132  3400               	retlw	0
  6533  1133  3400               	retlw	0
  6534  1134  3400               	retlw	0
  6535  1135  3480               	retlw	128
  6536  1136  343F               	retlw	63
  6537  1137  3400               	retlw	0
  6538  1138  3400               	retlw	0
  6539  1139  3400               	retlw	0
  6540  113A  343F               	retlw	63
  6541                           
  6542                           	psect	stringtext1
  6543  1800                     __pstringtext1:	
  6544  1800                     _charTable:	
  6545  1800  3400               	retlw	0
  6546  1801  3482               	retlw	130
  6547  1802  3421               	retlw	33
  6548  1803  3400               	retlw	0
  6549  1804  3400               	retlw	0
  6550  1805  3400               	retlw	0
  6551  1806  3400               	retlw	0
  6552  1807  3402               	retlw	2
  6553  1808  3439               	retlw	57
  6554  1809  340F               	retlw	15
  6555  180A  3400               	retlw	0
  6556  180B  3400               	retlw	0
  6557  180C  3400               	retlw	0
  6558  180D  3440               	retlw	64
  6559  180E  3480               	retlw	128
  6560  180F  3400               	retlw	0
  6561  1810  343F               	retlw	63
  6562  1811  3406               	retlw	6
  6563  1812  345B               	retlw	91
  6564  1813  344F               	retlw	79
  6565  1814  3466               	retlw	102
  6566  1815  346D               	retlw	109
  6567  1816  347D               	retlw	125
  6568  1817  3407               	retlw	7
  6569  1818  347F               	retlw	127
  6570  1819  346F               	retlw	111
  6571  181A  3400               	retlw	0
  6572  181B  3400               	retlw	0
  6573  181C  3400               	retlw	0
  6574  181D  3448               	retlw	72
  6575  181E  3400               	retlw	0
  6576  181F  3453               	retlw	83
  6577  1820  3400               	retlw	0
  6578  1821  3477               	retlw	119
  6579  1822  347C               	retlw	124
  6580  1823  3439               	retlw	57
  6581  1824  345E               	retlw	94
  6582  1825  3479               	retlw	121
  6583  1826  3471               	retlw	113
  6584  1827  346F               	retlw	111
  6585  1828  3476               	retlw	118
  6586  1829  3406               	retlw	6
  6587  182A  341E               	retlw	30
  6588  182B  3400               	retlw	0
  6589  182C  3438               	retlw	56
  6590  182D  3400               	retlw	0
  6591  182E  3454               	retlw	84
  6592  182F  343F               	retlw	63
  6593  1830  3473               	retlw	115
  6594  1831  3467               	retlw	103
  6595  1832  3450               	retlw	80
  6596  1833  346D               	retlw	109
  6597  1834  3478               	retlw	120
  6598  1835  343E               	retlw	62
  6599  1836  3400               	retlw	0
  6600  1837  3400               	retlw	0
  6601  1838  3400               	retlw	0
  6602  1839  346E               	retlw	110
  6603  183A  3400               	retlw	0
  6604  183B  3439               	retlw	57
  6605  183C  3400               	retlw	0
  6606  183D  340F               	retlw	15
  6607  183E  3400               	retlw	0
  6608  183F  3408               	retlw	8
  6609  1840  3463               	retlw	99
  6610  1841  345F               	retlw	95
  6611  1842  347C               	retlw	124
  6612  1843  3458               	retlw	88
  6613  1844  345E               	retlw	94
  6614  1845  347B               	retlw	123
  6615  1846  3471               	retlw	113
  6616  1847  346F               	retlw	111
  6617  1848  3474               	retlw	116
  6618  1849  3402               	retlw	2
  6619  184A  341E               	retlw	30
  6620  184B  3400               	retlw	0
  6621  184C  3406               	retlw	6
  6622  184D  3400               	retlw	0
  6623  184E  3454               	retlw	84
  6624  184F  345C               	retlw	92
  6625  1850  3473               	retlw	115
  6626  1851  3467               	retlw	103
  6627  1852  3450               	retlw	80
  6628  1853  346D               	retlw	109
  6629  1854  3478               	retlw	120
  6630  1855  341C               	retlw	28
  6631  1856  3400               	retlw	0
  6632  1857  3400               	retlw	0
  6633  1858  3400               	retlw	0
  6634  1859  346E               	retlw	110
  6635  185A  3400               	retlw	0
  6636  185B  3439               	retlw	57
  6637  185C  3430               	retlw	48
  6638  185D  340F               	retlw	15
  6639  185E  3400               	retlw	0
  6640  185F  3400               	retlw	0
  6641  1860                     __end_of_charTable:	
  6642                           
  6643                           	psect	nvBANK2
  6644  015F                     __pnvBANK2:	
  6645  015F                     _ADCC_ADTI_InterruptHandler:	
  6646  015F                     	ds	2
  6647  0161                     _TMR0_InterruptHandler:	
  6648  0161                     	ds	2
  6649  0163                     _EUSART1_FramingErrorHandler:	
  6650  0163                     	ds	2
  6651  0165                     _EUSART1_RxDefaultInterruptHandler:	
  6652  0165                     	ds	2
  6653  0167                     _EUSART1_TxDefaultInterruptHandler:	
  6654  0167                     	ds	2
  6655  0169                     _eusart1TxBufferRemaining:	
  6656  0169                     	ds	1
  6657                           
  6658                           	psect	nvBANK3
  6659  01DA                     __pnvBANK3:	
  6660  01DA                     _EUSART1_ErrorHandler:	
  6661  01DA                     	ds	2
  6662  01DC                     _EUSART1_OverrunErrorHandler:	
  6663  01DC                     	ds	2
  6664  000B                     _INTCONbits	set	11
  6665  0014                     _TRISC	set	20
  6666  0013                     _TRISB	set	19
  6667  0012                     _TRISA	set	18
  6668  001A                     _LATC	set	26
  6669  0019                     _LATB	set	25
  6670  0018                     _LATA	set	24
  6671  000C                     _PORTA	set	12
  6672  000E                     _PORTC	set	14
  6673  00A3                     _TRISC3	set	163
  6674  00A4                     _TRISC4	set	164
  6675  00A6                     _TRISC6	set	166
  6676  00A7                     _TRISC7	set	167
  6677  00CE                     _LATB6	set	206
  6678  009E                     _TRISB6	set	158
  6679  0090                     _ADERRL	set	144
  6680  0091                     _ADERRH	set	145
  6681  009B                     _ADPREVL	set	155
  6682  009C                     _ADPREVH	set	156
  6683  0094                     _ADFLTRL	set	148
  6684  0095                     _ADFLTRH	set	149
  6685  0096                     _ADACCL	set	150
  6686  0097                     _ADACCH	set	151
  6687  0099                     _ADCNT	set	153
  6688  009D                     _ADRESL	set	157
  6689  009E                     _ADRESH	set	158
  6690  009F                     _ADPCH	set	159
  6691  009A                     _ADRPT	set	154
  6692  0098                     _ADACCU	set	152
  6693  0093                     _ADSTPTH	set	147
  6694  0092                     _ADSTPTL	set	146
  6695  008F                     _ADUTHH	set	143
  6696  008E                     _ADUTHL	set	142
  6697  008D                     _ADLTHH	set	141
  6698  008C                     _ADLTHL	set	140
  6699  011A                     _TXREG	set	282
  6700  0112                     _ADCON1bits	set	274
  6701  0115                     _ADSTATbits	set	277
  6702  0113                     _ADCON2bits	set	275
  6703  0114                     _ADCON3bits	set	276
  6704  0111                     _ADCON0bits	set	273
  6705  0111                     _ADCON0	set	273
  6706  0118                     _ADCLK	set	280
  6707  0117                     _ADACT	set	279
  6708  0116                     _ADREF	set	278
  6709  0115                     _ADSTAT	set	277
  6710  0114                     _ADCON3	set	276
  6711  0113                     _ADCON2	set	275
  6712  0112                     _ADCON1	set	274
  6713  0110                     _ADPREH	set	272
  6714  010F                     _ADPREL	set	271
  6715  010E                     _ADCAP	set	270
  6716  010D                     _ADACQH	set	269
  6717  010C                     _ADACQL	set	268
  6718  0119                     _RC1REG	set	281
  6719  011D                     _RC1STAbits	set	285
  6720  011A                     _TX1REG	set	282
  6721  011E                     _TX1STAbits	set	286
  6722  011C                     _SP1BRGH	set	284
  6723  011B                     _SP1BRGL	set	283
  6724  011E                     _TX1STA	set	286
  6725  011D                     _RC1STA	set	285
  6726  011F                     _BAUD1CON	set	287
  6727  018C                     _SSP1BUF	set	396
  6728  0191                     _SSP1CON2bits	set	401
  6729  0190                     _SSP1CON1bits	set	400
  6730  018D                     _SSP1ADD	set	397
  6731  0192                     _SSP1CON3	set	402
  6732  0190                     _SSP1CON1	set	400
  6733  018F                     _SSP1STAT	set	399
  6734  028E                     _T2CONbits	set	654
  6735  0290                     _T2CLKCON	set	656
  6736  0318                     _CCPR4L	set	792
  6737  0319                     _CCPR4H	set	793
  6738  0314                     _CCPR3L	set	788
  6739  0315                     _CCPR3H	set	789
  6740  0310                     _CCPR2L	set	784
  6741  0311                     _CCPR2H	set	785
  6742  030C                     _CCPR1L	set	780
  6743  030D                     _CCPR1H	set	781
  6744  031A                     _CCP4CONbits	set	794
  6745  0316                     _CCP3CONbits	set	790
  6746  0312                     _CCP2CONbits	set	786
  6747  030E                     _CCP1CONbits	set	782
  6748  059E                     _T0CON0bits	set	1438
  6749  059E                     _T0CON0	set	1438
  6750  059C                     _TMR0L	set	1436
  6751  059D                     _TMR0H	set	1437
  6752  059F                     _T0CON1	set	1439
  6753  070D                     _PIR1bits	set	1805
  6754  0717                     _PIE1bits	set	1815
  6755  070F                     _PIR3bits	set	1807
  6756  070C                     _PIR0bits	set	1804
  6757  0716                     _PIE0bits	set	1814
  6758  0719                     _PIE3bits	set	1817
  6759  079D                     _PMD7	set	1949
  6760  079C                     _PMD6	set	1948
  6761  079B                     _PMD5	set	1947
  6762  079A                     _PMD4	set	1946
  6763  0799                     _PMD3	set	1945
  6764  0798                     _PMD2	set	1944
  6765  0797                     _PMD1	set	1943
  6766  0796                     _PMD0	set	1942
  6767  0892                     _OSCTUNE	set	2194
  6768  0893                     _OSCFRQ	set	2195
  6769  0891                     _OSCEN	set	2193
  6770  088F                     _OSCCON3	set	2191
  6771  088D                     _OSCCON1	set	2189
  6772  1ECB                     _RX1DTPPS	set	7883
  6773  1EC6                     _SSP1DATPPS	set	7878
  6774  1EC5                     _SSP1CLKPPS	set	7877
  6775  1F23                     _RC3PPS	set	7971
  6776  1F24                     _RC4PPS	set	7972
  6777  1F26                     _RC6PPS	set	7974
  6778  1F27                     _RC7PPS	set	7975
  6779  1F15                     _RA5PPS	set	7957
  6780  1F14                     _RA4PPS	set	7956
  6781  1F51                     _SLRCONC	set	8017
  6782  1F46                     _SLRCONB	set	8006
  6783  1F3B                     _SLRCONA	set	7995
  6784  1F50                     _ODCONC	set	8016
  6785  1F45                     _ODCONB	set	8005
  6786  1F3A                     _ODCONA	set	7994
  6787  1F4F                     _WPUC	set	8015
  6788  1F39                     _WPUA	set	7993
  6789  1F44                     _WPUB	set	8004
  6790  1F38                     _ANSELA	set	7992
  6791  1F43                     _ANSELB	set	8003
  6792  1F4E                     _ANSELC	set	8014
  6793                           
  6794                           ; #config settings
  6795  0000                     
  6796                           	psect	cinit
  6797  003B                     start_initialization:	
  6798  003B                     __initialization:		;BIGRAM
  6799                           
  6800                           ; Initialize objects allocated to COMMON
  6801  003B  3187  27FE  3180   	fcall	__pidataCOMMON	;fetch initializer
  6802  003E  00FA               	movwf	__pdataCOMMON& (0+127)
  6803  003F  3187  27FF  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  6804  0042  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  6805                           
  6806                           ; Initialize objects allocated to BANK2
  6807  0043  30A5               	movlw	low __pidataBANK2
  6808  0044  0084               	movwf	4
  6809  0045  3090               	movlw	(high __pidataBANK2)| (0+128)
  6810  0046  0085               	movwf	5
  6811  0047  306A               	movlw	low __pdataBANK2
  6812  0048  0086               	movwf	6
  6813  0049  3001               	movlw	high __pdataBANK2
  6814  004A  0087               	movwf	7
  6815  004B  3000               	movlw	0
  6816  004C  00FF               	movwf	btemp+1
  6817  004D  3006               	movlw	6
  6818  004E  3191  2147  3180   	fcall	init_ram
  6819                           
  6820                           ; Initialize objects allocated to BANK3
  6821  0051  3031               	movlw	low __pidataBANK3
  6822  0052  0084               	movwf	4
  6823  0053  3091               	movlw	(high __pidataBANK3)| (0+128)
  6824  0054  0085               	movwf	5
  6825  0055  30D0               	movlw	low __pdataBANK3
  6826  0056  0086               	movwf	6
  6827  0057  3001               	movlw	high __pdataBANK3
  6828  0058  0087               	movwf	7
  6829  0059  3000               	movlw	0
  6830  005A  00FF               	movwf	btemp+1
  6831  005B  300A               	movlw	10
  6832  005C  3191  2147  3180   	fcall	init_ram
  6833                           
  6834                           ; Clear objects allocated to BIGRAM
  6835  005F  30EF               	movlw	low (0+9711)
  6836  0060  0084               	movwf	4
  6837  0061  3025               	movlw	high (0+9711)
  6838  0062  0085               	movwf	5
  6839  0063  3001               	movlw	1
  6840  0064  00FE               	movwf	btemp
  6841  0065  3002               	movlw	2
  6842  0066  00FF               	movwf	btemp+1
  6843  0067  3191  213B  3180   	fcall	clear_ram0
  6844                           
  6845                           ; Clear objects allocated to COMMON
  6846  006A  01F6               	clrf	__pbssCOMMON& (0+127)
  6847  006B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  6848  006C  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  6849  006D  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  6850                           
  6851                           ; Clear objects allocated to BANK0
  6852  006E  01EF               	clrf	__pbssBANK0& (0+127)
  6853                           
  6854                           ; Clear objects allocated to BANK1
  6855  006F  0141               	movlb	1	; select bank1
  6856  0070  01E9               	clrf	__pbssBANK1& (0+127)
  6857  0071  01EA               	clrf	(__pbssBANK1+1)& (0+127)
  6858  0072  01EB               	clrf	(__pbssBANK1+2)& (0+127)
  6859  0073  01EC               	clrf	(__pbssBANK1+3)& (0+127)
  6860  0074  01ED               	clrf	(__pbssBANK1+4)& (0+127)
  6861  0075  01EE               	clrf	(__pbssBANK1+5)& (0+127)
  6862  0076  01EF               	clrf	(__pbssBANK1+6)& (0+127)
  6863                           
  6864                           ; Clear objects allocated to BANK2
  6865  0077  3020               	movlw	low __pbssBANK2
  6866  0078  0084               	movwf	4
  6867  0079  3001               	movlw	high __pbssBANK2
  6868  007A  0085               	movwf	5
  6869  007B  303F               	movlw	63
  6870  007C  00FE               	movwf	btemp
  6871  007D  3000               	movlw	0
  6872  007E  00FF               	movwf	btemp+1
  6873  007F  3191  213B  3180   	fcall	clear_ram0
  6874                           
  6875                           ; Clear objects allocated to BANK3
  6876  0082  30A0               	movlw	low __pbssBANK3
  6877  0083  0084               	movwf	4
  6878  0084  3001               	movlw	high __pbssBANK3
  6879  0085  0085               	movwf	5
  6880  0086  3030               	movlw	48
  6881  0087  00FE               	movwf	btemp
  6882  0088  3000               	movlw	0
  6883  0089  00FF               	movwf	btemp+1
  6884  008A  3191  213B         	fcall	clear_ram0
  6885  008C                     end_of_initialization:	
  6886                           ;End of C runtime variable initialization code
  6887                           
  6888  008C                     __end_of__initialization:	
  6889  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6890  008D  0140               	movlb	0
  6891  008E  3195  2D0E         	ljmp	_main	;jump to C main() function
  6892                           
  6893                           	psect	bssCOMMON
  6894  0076                     __pbssCOMMON:	
  6895  0076                     _eusart1RxTail:	
  6896  0076                     	ds	1
  6897  0077                     _eusart1RxHead:	
  6898  0077                     	ds	1
  6899  0078                     I2C1_ISR@i2c_address:	
  6900  0078                     	ds	2
  6901                           
  6902                           	psect	dataCOMMON
  6903  007A                     __pdataCOMMON:	
  6904  007A                     _address:	
  6905  007A                     	ds	2
  6906                           
  6907                           	psect	bssBANK0
  6908  006F                     __pbssBANK0:	
  6909  006F                     _eusart1TxHead:	
  6910  006F                     	ds	1
  6911                           
  6912                           	psect	bssBANK1
  6913  00E9                     __pbssBANK1:	
  6914  00E9                     _thresholdExceeded:	
  6915  00E9                     	ds	1
  6916  00EA                     _p_i2c1_current:	
  6917  00EA                     	ds	1
  6918  00EB                     _p_i2c1_trb_current:	
  6919  00EB                     	ds	1
  6920  00EC                     _i2c1_trb_count:	
  6921  00EC                     	ds	1
  6922  00ED                     _i2c1_state:	
  6923  00ED                     	ds	1
  6924  00EE                     _eusart1RxCount:	
  6925  00EE                     	ds	1
  6926  00EF                     _eusart1TxTail:	
  6927  00EF                     	ds	1
  6928                           
  6929                           	psect	bssBANK2
  6930  0120                     __pbssBANK2:	
  6931  0120                     _eusart1RxStatusBuffer:	
  6932  0120                     	ds	8
  6933  0128                     _i2c1_object:	
  6934  0128                     	ds	5
  6935  012D                     led@lastTime:	
  6936  012D                     	ds	2
  6937  012F                     dmx@lastTime:	
  6938  012F                     	ds	2
  6939  0131                     _dmxPointer:	
  6940  0131                     	ds	2
  6941  0133                     _thresholdCount:	
  6942  0133                     	ds	2
  6943  0135                     _lastRun:	
  6944  0135                     	ds	2
  6945  0137                     _bpm:	
  6946  0137                     	ds	2
  6947  0139                     _lastBeat:	
  6948  0139                     	ds	2
  6949  013B                     _lastActiveTime:	
  6950  013B                     	ds	2
  6951  013D                     controller@lastTime:	
  6952  013D                     	ds	2
  6953  013F                     _lastTime:	
  6954  013F                     	ds	2
  6955  0141                     _count:	
  6956  0141                     	ds	2
  6957  0143                     _currentTime:	
  6958  0143                     	ds	2
  6959  0145                     _changeColor:	
  6960  0145                     	ds	1
  6961  0146                     _toggleCheck:	
  6962  0146                     	ds	1
  6963  0147                     _dmxOn:	
  6964  0147                     	ds	1
  6965  0148                     _offCheck:	
  6966  0148                     	ds	1
  6967  0149                     _lastDetected:	
  6968  0149                     	ds	1
  6969  014A                     _detected:	
  6970  014A                     	ds	1
  6971  014B                     _menu:	
  6972  014B                     	ds	1
  6973  014C                     _enter:	
  6974  014C                     	ds	1
  6975  014D                     _down:	
  6976  014D                     	ds	1
  6977  014E                     _up:	
  6978  014E                     	ds	1
  6979  014F                     _isOn:	
  6980  014F                     	ds	1
  6981  0150                     I2C1_ISR@i2c_10bit_address_restart:	
  6982  0150                     	ds	1
  6983  0151                     I2C1_ISR@i2c_bytes_left:	
  6984  0151                     	ds	1
  6985  0152                     I2C1_ISR@pi2c_buf_ptr:	
  6986  0152                     	ds	1
  6987  0153                     _eusart1RxLastError:	
  6988  0153                     	ds	1
  6989  0154                     I2C1_MasterRead@trBlock:	
  6990  0154                     	ds	4
  6991  0158                     I2C1_MasterWrite@trBlock:	
  6992  0158                     	ds	4
  6993  015C                     _i2c1_tr_queue:	
  6994  015C                     	ds	3
  6995                           
  6996                           	psect	dataBANK2
  6997  016A                     __pdataBANK2:	
  6998  016A                     _fadeAmmount:	
  6999  016A                     	ds	2
  7000  016C                     _delay:	
  7001  016C                     	ds	2
  7002  016E                     _threshold:	
  7003  016E                     	ds	2
  7004                           
  7005                           	psect	bssBANK3
  7006  01A0                     __pbssBANK3:	
  7007  01A0                     _eusart1RxBuffer:	
  7008  01A0                     	ds	8
  7009  01A8                     _eusart1TxBuffer:	
  7010  01A8                     	ds	8
  7011  01B0                     _buttons:	
  7012  01B0                     	ds	32
  7013                           
  7014                           	psect	dataBANK3
  7015  01D0                     __pdataBANK3:	
  7016  01D0                     _color:	
  7017  01D0                     	ds	10
  7018                           
  7019                           	psect	inittext
  7020  1147                     init_ram:	
  7021  1147  00FE               	movwf	126
  7022  1148                     initloop:	
  7023  1148  0012               	moviw fsr0++
  7024  1149  001E               	movwi fsr1++
  7025  114A  3001               	movlw	1
  7026  114B  02FE               	subwf	126,f
  7027  114C  3000               	movlw	0
  7028  114D  3BFF               	subwfb	127,f
  7029  114E  087F               	movf	127,w
  7030  114F  047E               	iorwf	126,w
  7031  1150  1903               	btfsc	3,2
  7032  1151  3400               	retlw	0
  7033  1152  2948               	goto	initloop
  7034                           
  7035                           	psect	clrtext
  7036  113B                     clear_ram0:	
  7037                           ;	Called with FSR0 containing the base address, and
  7038                           ;	btemp/btemp+1 has the size to clear
  7039                           
  7040  113B  0064               	clrwdt	;clear the watchdog before getting into this loop
  7041  113C                     clrloop0:	
  7042  113C  0180               	clrf	0	;clear RAM location pointed to by FSR
  7043  113D  3101               	addfsr 0,1
  7044  113E  3001               	movlw	1
  7045  113F  02FE               	subwf	126,f
  7046  1140  3000               	movlw	0
  7047  1141  3BFF               	subwfb	127,f
  7048  1142  087F               	movf	127,w
  7049  1143  047E               	iorwf	126,w
  7050  1144  1903               	btfsc	3,2
  7051  1145  3400               	retlw	0	;all done for this memory range, return
  7052  1146  293C               	goto	clrloop0	;have we reached the end yet?
  7053                           
  7054                           	psect	cstackBANK3
  7055  01DE                     __pcstackBANK3:	
  7056  01DE                     ??_main:	
  7057                           
  7058                           ; 1 bytes @ 0x0
  7059  01DE                     	ds	2
  7060                           
  7061                           	psect	cstackBANK1
  7062  00A0                     __pcstackBANK1:	
  7063  00A0                     _HueToRGB$2787:	
  7064                           
  7065                           ; 4 bytes @ 0x0
  7066  00A0                     	ds	4
  7067  00A4                     ?___fltol:	
  7068  00A4                     ___fltol@f1:	
  7069                           ; 4 bytes @ 0x4
  7070                           
  7071                           
  7072                           ; 4 bytes @ 0x4
  7073  00A4                     	ds	4
  7074  00A8                     ??___fltol:	
  7075                           
  7076                           ; 1 bytes @ 0x8
  7077  00A8                     	ds	5
  7078  00AD                     ___fltol@sign1:	
  7079                           
  7080                           ; 1 bytes @ 0xD
  7081  00AD                     	ds	1
  7082  00AE                     ___fltol@exp1:	
  7083                           
  7084                           ; 1 bytes @ 0xE
  7085  00AE                     	ds	1
  7086  00AF                     ?_LED_setHSL:	
  7087  00AF                     LED_setHSL@hsl:	
  7088                           ; 1 bytes @ 0xF
  7089                           
  7090                           
  7091                           ; 10 bytes @ 0xF
  7092  00AF                     	ds	10
  7093  00B9                     ??_LED_setHSL:	
  7094                           
  7095                           ; 1 bytes @ 0x19
  7096  00B9                     	ds	2
  7097  00BB                     _LED_setHSL$2788:	
  7098                           
  7099                           ; 4 bytes @ 0x1B
  7100  00BB                     	ds	4
  7101  00BF                     _LED_setHSL$2791:	
  7102                           
  7103                           ; 4 bytes @ 0x1F
  7104  00BF                     	ds	4
  7105  00C3                     _LED_setHSL$2789:	
  7106                           
  7107                           ; 4 bytes @ 0x23
  7108  00C3                     	ds	4
  7109  00C7                     _LED_setHSL$2790:	
  7110                           
  7111                           ; 4 bytes @ 0x27
  7112  00C7                     	ds	4
  7113  00CB                     LED_setHSL@v1:	
  7114                           
  7115                           ; 4 bytes @ 0x2B
  7116  00CB                     	ds	4
  7117  00CF                     LED_setHSL@hue:	
  7118                           
  7119                           ; 4 bytes @ 0x2F
  7120  00CF                     	ds	4
  7121  00D3                     LED_setHSL@v2:	
  7122                           
  7123                           ; 4 bytes @ 0x33
  7124  00D3                     	ds	4
  7125  00D7                     LED_setHSL@rgb:	
  7126                           
  7127                           ; 3 bytes @ 0x37
  7128  00D7                     	ds	3
  7129  00DA                     ??_fadeColor:	
  7130                           
  7131                           ; 1 bytes @ 0x3A
  7132  00DA                     	ds	2
  7133  00DC                     fadeColor@time:	
  7134                           
  7135                           ; 2 bytes @ 0x3C
  7136  00DC                     	ds	2
  7137  00DE                     ??_LED_task:	
  7138                           
  7139                           ; 1 bytes @ 0x3E
  7140  00DE                     	ds	11
  7141                           
  7142                           	psect	cstackCOMMON
  7143  0070                     __pcstackCOMMON:	
  7144  0070                     ?_EUSART1_Receive_ISR:	
  7145  0070                     ?_EUSART1_Transmit_ISR:	
  7146                           ; 1 bytes @ 0x0
  7147                           
  7148  0070                     ??_EUSART1_Transmit_ISR:	
  7149                           ; 1 bytes @ 0x0
  7150                           
  7151  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
  7152                           ; 1 bytes @ 0x0
  7153                           
  7154  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
  7155                           ; 1 bytes @ 0x0
  7156                           
  7157  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7158                           ; 1 bytes @ 0x0
  7159                           
  7160  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7161                           ; 1 bytes @ 0x0
  7162                           
  7163  0070                     ?_EUSART1_DefaultErrorHandler:	
  7164                           ; 1 bytes @ 0x0
  7165                           
  7166  0070                     ?_EUSART1_RxDataHandler:	
  7167                           ; 1 bytes @ 0x0
  7168                           
  7169  0070                     ??_EUSART1_RxDataHandler:	
  7170                           ; 1 bytes @ 0x0
  7171                           
  7172  0070                     ?_PMD_Initialize:	
  7173                           ; 1 bytes @ 0x0
  7174                           
  7175  0070                     ?_PIN_MANAGER_Initialize:	
  7176                           ; 1 bytes @ 0x0
  7177                           
  7178  0070                     ?_OSCILLATOR_Initialize:	
  7179                           ; 1 bytes @ 0x0
  7180                           
  7181  0070                     ?_I2C1_Initialize:	
  7182                           ; 1 bytes @ 0x0
  7183                           
  7184  0070                     ?_ADCC_Initialize:	
  7185                           ; 1 bytes @ 0x0
  7186                           
  7187  0070                     ?_TMR0_Initialize:	
  7188                           ; 1 bytes @ 0x0
  7189                           
  7190  0070                     ?_TMR0_ISR:	
  7191                           ; 1 bytes @ 0x0
  7192                           
  7193  0070                     ??_TMR0_ISR:	
  7194                           ; 1 bytes @ 0x0
  7195                           
  7196  0070                     ?_I2C1_BusCollisionISR:	
  7197                           ; 1 bytes @ 0x0
  7198                           
  7199  0070                     ??_I2C1_BusCollisionISR:	
  7200                           ; 1 bytes @ 0x0
  7201                           
  7202  0070                     ?_I2C1_ISR:	
  7203                           ; 1 bytes @ 0x0
  7204                           
  7205  0070                     ?_ADCC_ThresholdISR:	
  7206                           ; 1 bytes @ 0x0
  7207                           
  7208  0070                     ??_ADCC_ThresholdISR:	
  7209                           ; 1 bytes @ 0x0
  7210                           
  7211  0070                     ?_TMR0_DefaultInterruptHandler:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0070                     ??_TMR0_DefaultInterruptHandler:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0070                     ?_I2C1_Stop:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0070                     ??_I2C1_Stop:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0070                     ?_I2C1_FunctionComplete:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0070                     ??_I2C1_FunctionComplete:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0070                     ?_ADCC_DefaultInterruptHandler:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0070                     ??_ADCC_DefaultInterruptHandler:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0070                     ?_CLOCK_init:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0070                     ?_DMX_ISR:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0070                     ??_DMX_ISR:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0070                     ?_TM1650_init:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0070                     ?_BUTTONS_init:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0070                     ?_CONTROLLER_init:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0070                     ?_initLED:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0070                     ?_BEAT_init:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0070                     ?_BEAT_task:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0070                     ?_LED_task:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0070                     ?_BUTTONS_task:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0070                     ?_CONTROLLER_task:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0070                     ?_DMX_task:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0070                     ?_CLOCK_timerCallback:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0070                     ??_CLOCK_timerCallback:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0070                     ?_TM1650_enable:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0070                     ?_EUSART1_Initialize:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0070                     ?_SYSTEM_Initialize:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0070                     ?_INTERRUPT_InterruptManager:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0070                     ?_I2C1_WaitForLastPacketToComplete:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0070                     ?_ADCC_StartConversion:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0070                     ?_main:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0070                     ?_TM1650_isEnabled:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0070                     ?_address_inc:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0070                     ?_address_dec:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0070                     ?_adcThresholdHandler:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0070                     ??_adcThresholdHandler:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0070                     ?_BEAT_detected:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0070                     ?_isDMXOn:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0070                     ?_fadeColor:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325                           
  7326                           ; 1 bytes @ 0x0
  7327  0070                     	ds	1
  7328  0071                     ??_EUSART1_Receive_ISR:	
  7329  0071                     ??_EUSART1_DefaultErrorHandler:	
  7330                           ; 1 bytes @ 0x1
  7331                           
  7332  0071                     I2C1_Stop@completion_code:	
  7333                           ; 1 bytes @ 0x1
  7334                           
  7335                           
  7336                           ; 1 bytes @ 0x1
  7337  0071                     	ds	1
  7338  0072                     ??_I2C1_ISR:	
  7339                           
  7340                           ; 1 bytes @ 0x2
  7341  0072                     	ds	4
  7342  0076                     ??_INTERRUPT_InterruptManager:	
  7343                           
  7344                           	psect	cstackBANK0
  7345  0020                     __pcstackBANK0:	
  7346                           ; 1 bytes @ 0x6
  7347                           
  7348  0020                     ?___fleq:	
  7349  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7350                           ; 1 bit 
  7351                           
  7352  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0020                     ?_EUSART1_SetErrorHandler:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0020                     ??_PMD_Initialize:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0020                     ??_PIN_MANAGER_Initialize:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0020                     ??_OSCILLATOR_Initialize:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0020                     ??_I2C1_Initialize:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0020                     ?_TMR0_SetInterruptHandler:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0020                     ?_I2C1_MasterTRBInsert:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0020                     ??_initLED:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0020                     ??_ADCC_StartConversion:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0020                     ?_ADCC_SetUpperThreshold:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0020                     ??_TM1650_isEnabled:	
  7401                           ; 1 bytes @ 0x0
  7402                           
  7403  0020                     ?_init:	
  7404                           ; 1 bytes @ 0x0
  7405                           
  7406  0020                     ??_BEAT_detected:	
  7407                           ; 1 bytes @ 0x0
  7408                           
  7409  0020                     ??_isDMXOn:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0020                     ?_LED_setColor:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0020                     ?__Umul8_16:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0020                     ?_CLOCK_getTime:	
  7419                           ; 2 bytes @ 0x0
  7420                           
  7421  0020                     ?_BUTTONS_isClicked:	
  7422                           ; 2 bytes @ 0x0
  7423                           
  7424  0020                     ?___lwdiv:	
  7425                           ; 2 bytes @ 0x0
  7426                           
  7427  0020                     ?___lwmod:	
  7428                           ; 2 bytes @ 0x0
  7429                           
  7430  0020                     ?___xxtofl:	
  7431                           ; 2 bytes @ 0x0
  7432                           
  7433  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7434                           ; 4 bytes @ 0x0
  7435                           
  7436  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0020                     ADCC_StartConversion@channel:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0020                     LED_setColor@green:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0020                     __Umul8_16@multiplicand:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7452                           ; 2 bytes @ 0x0
  7453                           
  7454  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7455                           ; 2 bytes @ 0x0
  7456                           
  7457  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7458                           ; 2 bytes @ 0x0
  7459                           
  7460  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7461                           ; 2 bytes @ 0x0
  7462                           
  7463  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7464                           ; 2 bytes @ 0x0
  7465                           
  7466  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7467                           ; 2 bytes @ 0x0
  7468                           
  7469  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7470                           ; 2 bytes @ 0x0
  7471                           
  7472  0020                     init@port:	
  7473                           ; 2 bytes @ 0x0
  7474                           
  7475  0020                     ___lwdiv@divisor:	
  7476                           ; 2 bytes @ 0x0
  7477                           
  7478  0020                     ___lwmod@divisor:	
  7479                           ; 2 bytes @ 0x0
  7480                           
  7481  0020                     ___fleq@ff1:	
  7482                           ; 2 bytes @ 0x0
  7483                           
  7484  0020                     ___xxtofl@val:	
  7485                           ; 4 bytes @ 0x0
  7486                           
  7487                           
  7488                           ; 4 bytes @ 0x0
  7489  0020                     	ds	1
  7490  0021                     I2C1_MasterTRBInsert@pflag:	
  7491  0021                     I2C1_MasterWriteTRBBuild@length:	
  7492                           ; 1 bytes @ 0x1
  7493                           
  7494  0021                     LED_setColor@white:	
  7495                           ; 1 bytes @ 0x1
  7496                           
  7497                           
  7498                           ; 1 bytes @ 0x1
  7499  0021                     	ds	1
  7500  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7501  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7502                           ; 1 bytes @ 0x2
  7503                           
  7504  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7505                           ; 1 bytes @ 0x2
  7506                           
  7507  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7508                           ; 1 bytes @ 0x2
  7509                           
  7510  0022                     ??_EUSART1_SetErrorHandler:	
  7511                           ; 1 bytes @ 0x2
  7512                           
  7513  0022                     ??_ADCC_Initialize:	
  7514                           ; 1 bytes @ 0x2
  7515                           
  7516  0022                     ??_TMR0_Initialize:	
  7517                           ; 1 bytes @ 0x2
  7518                           
  7519  0022                     ??_TMR0_SetInterruptHandler:	
  7520                           ; 1 bytes @ 0x2
  7521                           
  7522  0022                     ??_I2C1_MasterTRBInsert:	
  7523                           ; 1 bytes @ 0x2
  7524                           
  7525  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7526                           ; 1 bytes @ 0x2
  7527                           
  7528  0022                     ??_CLOCK_init:	
  7529                           ; 1 bytes @ 0x2
  7530                           
  7531  0022                     ??_BEAT_init:	
  7532                           ; 1 bytes @ 0x2
  7533                           
  7534  0022                     ??_BUTTONS_task:	
  7535                           ; 1 bytes @ 0x2
  7536                           
  7537  0022                     ??_DMX_task:	
  7538                           ; 1 bytes @ 0x2
  7539                           
  7540  0022                     ??__Umul8_16:	
  7541                           ; 1 bytes @ 0x2
  7542                           
  7543  0022                     ??_EUSART1_Initialize:	
  7544                           ; 1 bytes @ 0x2
  7545                           
  7546  0022                     ??_ADCC_SetUpperThreshold:	
  7547                           ; 1 bytes @ 0x2
  7548                           
  7549  0022                     ??_CLOCK_getTime:	
  7550                           ; 1 bytes @ 0x2
  7551                           
  7552  0022                     init@pin:	
  7553                           ; 1 bytes @ 0x2
  7554                           
  7555  0022                     LED_setColor@blue:	
  7556                           ; 1 bytes @ 0x2
  7557                           
  7558  0022                     I2C1_MasterWriteTRBBuild@address:	
  7559                           ; 1 bytes @ 0x2
  7560                           
  7561  0022                     ___lwdiv@dividend:	
  7562                           ; 2 bytes @ 0x2
  7563                           
  7564  0022                     ___lwmod@dividend:	
  7565                           ; 2 bytes @ 0x2
  7566                           
  7567                           
  7568                           ; 2 bytes @ 0x2
  7569  0022                     	ds	1
  7570  0023                     ??_SYSTEM_Initialize:	
  7571  0023                     ??_init:	
  7572                           ; 1 bytes @ 0x3
  7573                           
  7574  0023                     ??_BUTTONS_isClicked:	
  7575                           ; 1 bytes @ 0x3
  7576                           
  7577  0023                     ??_LED_setColor:	
  7578                           ; 1 bytes @ 0x3
  7579                           
  7580  0023                     I2C1_MasterTRBInsert@count:	
  7581                           ; 1 bytes @ 0x3
  7582                           
  7583  0023                     BUTTONS_isClicked@button:	
  7584                           ; 1 bytes @ 0x3
  7585                           
  7586                           
  7587                           ; 1 bytes @ 0x3
  7588  0023                     	ds	1
  7589  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7590  0024                     ??___lwdiv:	
  7591                           ; 1 bytes @ 0x4
  7592                           
  7593  0024                     ??___lwmod:	
  7594                           ; 1 bytes @ 0x4
  7595                           
  7596  0024                     ??___xxtofl:	
  7597                           ; 1 bytes @ 0x4
  7598                           
  7599  0024                     init@btn:	
  7600                           ; 1 bytes @ 0x4
  7601                           
  7602  0024                     DMX_task@time:	
  7603                           ; 1 bytes @ 0x4
  7604                           
  7605  0024                     __Umul8_16@product:	
  7606                           ; 2 bytes @ 0x4
  7607                           
  7608  0024                     ___fleq@ff2:	
  7609                           ; 2 bytes @ 0x4
  7610                           
  7611                           
  7612                           ; 4 bytes @ 0x4
  7613  0024                     	ds	1
  7614  0025                     ??_BUTTONS_init:	
  7615  0025                     BUTTONS_task@i:	
  7616                           ; 1 bytes @ 0x5
  7617                           
  7618  0025                     ___lwdiv@counter:	
  7619                           ; 1 bytes @ 0x5
  7620                           
  7621  0025                     ___lwmod@counter:	
  7622                           ; 1 bytes @ 0x5
  7623                           
  7624                           
  7625                           ; 1 bytes @ 0x5
  7626  0025                     	ds	1
  7627  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7628  0026                     BUTTONS_task@time:	
  7629                           ; 1 bytes @ 0x6
  7630                           
  7631  0026                     ___lwdiv@quotient:	
  7632                           ; 2 bytes @ 0x6
  7633                           
  7634  0026                     __Umul8_16@word_mpld:	
  7635                           ; 2 bytes @ 0x6
  7636                           
  7637                           
  7638                           ; 2 bytes @ 0x6
  7639  0026                     	ds	1
  7640  0027                     ?_I2C1_MasterWrite:	
  7641  0027                     I2C1_MasterWrite@length:	
  7642                           ; 1 bytes @ 0x7
  7643                           
  7644  0027                     LED_setColor@lo1:	
  7645                           ; 1 bytes @ 0x7
  7646                           
  7647                           
  7648                           ; 2 bytes @ 0x7
  7649  0027                     	ds	1
  7650  0028                     ??_BEAT_task:	
  7651  0028                     ??___fleq:	
  7652                           ; 1 bytes @ 0x8
  7653                           
  7654  0028                     BUTTONS_task@btn:	
  7655                           ; 1 bytes @ 0x8
  7656                           
  7657  0028                     ___xxtofl@sign:	
  7658                           ; 1 bytes @ 0x8
  7659                           
  7660  0028                     __Umul8_16@multiplier:	
  7661                           ; 1 bytes @ 0x8
  7662                           
  7663  0028                     I2C1_MasterWrite@address:	
  7664                           ; 1 bytes @ 0x8
  7665                           
  7666                           
  7667                           ; 2 bytes @ 0x8
  7668  0028                     	ds	1
  7669  0029                     ?___fladd:	
  7670  0029                     ___xxtofl@exp:	
  7671                           ; 4 bytes @ 0x9
  7672                           
  7673  0029                     ___fladd@b:	
  7674                           ; 1 bytes @ 0x9
  7675                           
  7676                           
  7677                           ; 4 bytes @ 0x9
  7678  0029                     	ds	1
  7679  002A                     I2C1_MasterWrite@pflag:	
  7680  002A                     BEAT_task@offset:	
  7681                           ; 1 bytes @ 0xA
  7682                           
  7683  002A                     ___xxtofl@arg:	
  7684                           ; 2 bytes @ 0xA
  7685                           
  7686                           
  7687                           ; 4 bytes @ 0xA
  7688  002A                     	ds	1
  7689  002B                     ??_I2C1_MasterWrite:	
  7690  002B                     LED_setColor@lo2:	
  7691                           ; 1 bytes @ 0xB
  7692                           
  7693                           
  7694                           ; 2 bytes @ 0xB
  7695  002B                     	ds	2
  7696  002D                     I2C1_MasterWrite@pdata:	
  7697  002D                     ___fladd@a:	
  7698                           ; 1 bytes @ 0xD
  7699                           
  7700                           
  7701                           ; 4 bytes @ 0xD
  7702  002D                     	ds	1
  7703  002E                     ?_writeData:	
  7704  002E                     ?___fldiv:	
  7705                           ; 1 bytes @ 0xE
  7706                           
  7707  002E                     writeData@data:	
  7708                           ; 4 bytes @ 0xE
  7709                           
  7710  002E                     ___fldiv@a:	
  7711                           ; 1 bytes @ 0xE
  7712                           
  7713                           
  7714                           ; 4 bytes @ 0xE
  7715  002E                     	ds	1
  7716  002F                     ??_writeData:	
  7717  002F                     LED_setColor@lo3:	
  7718                           ; 1 bytes @ 0xF
  7719                           
  7720                           
  7721                           ; 2 bytes @ 0xF
  7722  002F                     	ds	2
  7723  0031                     ??___fladd:	
  7724                           
  7725                           ; 1 bytes @ 0x11
  7726  0031                     	ds	1
  7727  0032                     writeData@address:	
  7728  0032                     ___fldiv@b:	
  7729                           ; 1 bytes @ 0x12
  7730                           
  7731                           
  7732                           ; 4 bytes @ 0x12
  7733  0032                     	ds	1
  7734  0033                     writeData@status:	
  7735  0033                     LED_setColor@lo4:	
  7736                           ; 1 bytes @ 0x13
  7737                           
  7738                           
  7739                           ; 2 bytes @ 0x13
  7740  0033                     	ds	1
  7741  0034                     ??_TM1650_enable:	
  7742  0034                     ?_TM1650_setDigit:	
  7743                           ; 1 bytes @ 0x14
  7744                           
  7745  0034                     TM1650_setDigit@data:	
  7746                           ; 1 bytes @ 0x14
  7747                           
  7748  0034                     TM1650_enable@enable:	
  7749                           ; 1 bytes @ 0x14
  7750                           
  7751                           
  7752                           ; 1 bytes @ 0x14
  7753  0034                     	ds	1
  7754  0035                     ??_TM1650_init:	
  7755  0035                     LED_setColor@red:	
  7756                           ; 1 bytes @ 0x15
  7757                           
  7758  0035                     TM1650_setDigit@dp:	
  7759                           ; 1 bytes @ 0x15
  7760                           
  7761                           
  7762                           ; 2 bytes @ 0x15
  7763  0035                     	ds	1
  7764  0036                     ??___fldiv:	
  7765                           
  7766                           ; 1 bytes @ 0x16
  7767  0036                     	ds	1
  7768  0037                     ??_TM1650_setDigit:	
  7769                           
  7770                           ; 1 bytes @ 0x17
  7771  0037                     	ds	2
  7772  0039                     ___fladd@signs:	
  7773                           
  7774                           ; 1 bytes @ 0x19
  7775  0039                     	ds	1
  7776  003A                     TM1650_setDigit@digit:	
  7777  003A                     ___fladd@aexp:	
  7778                           ; 1 bytes @ 0x1A
  7779                           
  7780                           
  7781                           ; 1 bytes @ 0x1A
  7782  003A                     	ds	1
  7783  003B                     ?_TM1650_fastPrintNum:	
  7784  003B                     ___fladd@bexp:	
  7785                           ; 1 bytes @ 0x1B
  7786                           
  7787  003B                     TM1650_fastPrintNum@num:	
  7788                           ; 1 bytes @ 0x1B
  7789                           
  7790  003B                     ___fldiv@rem:	
  7791                           ; 2 bytes @ 0x1B
  7792                           
  7793                           
  7794                           ; 4 bytes @ 0x1B
  7795  003B                     	ds	1
  7796  003C                     ___fladd@grs:	
  7797                           
  7798                           ; 1 bytes @ 0x1C
  7799  003C                     	ds	1
  7800  003D                     ??_TM1650_fastPrintNum:	
  7801  003D                     ?___flmul:	
  7802                           ; 1 bytes @ 0x1D
  7803                           
  7804  003D                     ___flmul@b:	
  7805                           ; 4 bytes @ 0x1D
  7806                           
  7807                           
  7808                           ; 4 bytes @ 0x1D
  7809  003D                     	ds	1
  7810  003E                     TM1650_fastPrintNum@numWrite:	
  7811                           
  7812                           ; 2 bytes @ 0x1E
  7813  003E                     	ds	1
  7814  003F                     ___fldiv@sign:	
  7815                           
  7816                           ; 1 bytes @ 0x1F
  7817  003F                     	ds	1
  7818  0040                     TM1650_fastPrintNum@i:	
  7819  0040                     ___fldiv@new_exp:	
  7820                           ; 2 bytes @ 0x20
  7821                           
  7822                           
  7823                           ; 2 bytes @ 0x20
  7824  0040                     	ds	1
  7825  0041                     ___flmul@a:	
  7826                           
  7827                           ; 4 bytes @ 0x21
  7828  0041                     	ds	1
  7829  0042                     ??_CONTROLLER_init:	
  7830  0042                     ??_CONTROLLER_task:	
  7831                           ; 1 bytes @ 0x22
  7832                           
  7833  0042                     ??_address_inc:	
  7834                           ; 1 bytes @ 0x22
  7835                           
  7836  0042                     ??_address_dec:	
  7837                           ; 1 bytes @ 0x22
  7838                           
  7839  0042                     ___fldiv@grs:	
  7840                           ; 1 bytes @ 0x22
  7841                           
  7842                           
  7843                           ; 4 bytes @ 0x22
  7844  0042                     	ds	2
  7845  0044                     CONTROLLER_task@time:	
  7846                           
  7847                           ; 2 bytes @ 0x24
  7848  0044                     	ds	1
  7849  0045                     ??___flmul:	
  7850                           
  7851                           ; 1 bytes @ 0x25
  7852  0045                     	ds	1
  7853  0046                     ___fldiv@bexp:	
  7854                           
  7855                           ; 1 bytes @ 0x26
  7856  0046                     	ds	1
  7857  0047                     ___fldiv@aexp:	
  7858                           
  7859                           ; 1 bytes @ 0x27
  7860  0047                     	ds	3
  7861  004A                     ___flmul@sign:	
  7862                           
  7863                           ; 1 bytes @ 0x2A
  7864  004A                     	ds	1
  7865  004B                     ___flmul@aexp:	
  7866                           
  7867                           ; 1 bytes @ 0x2B
  7868  004B                     	ds	1
  7869  004C                     ___flmul@grs:	
  7870                           
  7871                           ; 4 bytes @ 0x2C
  7872  004C                     	ds	4
  7873  0050                     ___flmul@bexp:	
  7874                           
  7875                           ; 1 bytes @ 0x30
  7876  0050                     	ds	1
  7877  0051                     ___flmul@prod:	
  7878                           
  7879                           ; 4 bytes @ 0x31
  7880  0051                     	ds	4
  7881  0055                     ___flmul@temp:	
  7882                           
  7883                           ; 2 bytes @ 0x35
  7884  0055                     	ds	2
  7885  0057                     ?___flge:	
  7886  0057                     ?___flsub:	
  7887                           ; 1 bit 
  7888                           
  7889  0057                     ___flge@ff1:	
  7890                           ; 4 bytes @ 0x37
  7891                           
  7892  0057                     ___flsub@a:	
  7893                           ; 4 bytes @ 0x37
  7894                           
  7895                           
  7896                           ; 4 bytes @ 0x37
  7897  0057                     	ds	4
  7898  005B                     ___flge@ff2:	
  7899  005B                     ___flsub@b:	
  7900                           ; 4 bytes @ 0x3B
  7901                           
  7902                           
  7903                           ; 4 bytes @ 0x3B
  7904  005B                     	ds	4
  7905  005F                     ??___flge:	
  7906  005F                     ??___flsub:	
  7907                           ; 1 bytes @ 0x3F
  7908                           
  7909                           
  7910                           ; 1 bytes @ 0x3F
  7911  005F                     	ds	4
  7912  0063                     ?_HueToRGB:	
  7913  0063                     HueToRGB@v1:	
  7914                           ; 4 bytes @ 0x43
  7915                           
  7916                           
  7917                           ; 4 bytes @ 0x43
  7918  0063                     	ds	4
  7919  0067                     HueToRGB@v2:	
  7920                           
  7921                           ; 4 bytes @ 0x47
  7922  0067                     	ds	4
  7923  006B                     HueToRGB@vH:	
  7924                           
  7925                           ; 4 bytes @ 0x4B
  7926  006B                     	ds	4
  7927  006F                     ??_HueToRGB:	
  7928                           
  7929                           	psect	maintext
  7930  150E                     __pmaintext:	
  7931                           ; 1 bytes @ 0x4F
  7932 ;;
  7933 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7934 ;;
  7935 ;; *************** function _main *****************
  7936 ;; Defined at:
  7937 ;;		line 15 in file "main.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;		None
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;		None
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  1    wreg      void 
  7944 ;; Registers used:
  7945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7946 ;; Tracked objects:
  7947 ;;		On entry : B3F/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7953 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7954 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7955 ;;Total ram usage:        2 bytes
  7956 ;; Hardware stack levels required when called:   12
  7957 ;; This function calls:
  7958 ;;		_BEAT_init
  7959 ;;		_BEAT_task
  7960 ;;		_BUTTONS_init
  7961 ;;		_BUTTONS_task
  7962 ;;		_CLOCK_init
  7963 ;;		_CONTROLLER_init
  7964 ;;		_CONTROLLER_task
  7965 ;;		_DMX_task
  7966 ;;		_EUSART1_SetRxInterruptHandler
  7967 ;;		_LED_task
  7968 ;;		_SYSTEM_Initialize
  7969 ;;		_TM1650_init
  7970 ;;		_initLED
  7971 ;; This function is called by:
  7972 ;;		Startup code after reset
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           
  7977                           ;psect for function _main
  7978  150E                     _main:	
  7979                           
  7980                           ;main.c: 17:     SYSTEM_Initialize();
  7981                           
  7982                           ;incstack = 0
  7983                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7984  150E  3191  21AF  3195   	fcall	_SYSTEM_Initialize
  7985                           
  7986                           ;main.c: 18:     CLOCK_init();
  7987  1511  3190  20AB  3195   	fcall	_CLOCK_init
  7988                           
  7989                           ;main.c: 19:     TRISB6 = 0;
  7990  1514  0140               	movlb	0	; select bank0
  7991  1515  1313               	bcf	19,6	;volatile
  7992                           
  7993                           ;main.c: 20:     LATB6 = 0;
  7994  1516  1319               	bcf	25,6	;volatile
  7995                           
  7996                           ;main.c: 21:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  7997  1517  303B               	movlw	low _DMX_ISR
  7998  1518  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  7999  1519  3013               	movlw	high _DMX_ISR
  8000  151A  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8001  151B  3191  210C  3195   	fcall	_EUSART1_SetRxInterruptHandler
  8002                           
  8003                           ;main.c: 27:     (INTCONbits.GIE = 1);
  8004  151E  178B               	bsf	11,7	;volatile
  8005                           
  8006                           ;main.c: 30:     (INTCONbits.PEIE = 1);
  8007  151F  170B               	bsf	11,6	;volatile
  8008                           
  8009                           ;main.c: 37:      _delay((unsigned long)((500)*(32000000/4000.0)));
  8010  1520  3015               	movlw	21
  8011  1521  0143               	movlb	3	; select bank3
  8012  1522  00DF               	movwf	(??_main^(0+384)+1)
  8013  1523  304B               	movlw	75
  8014  1524  00DE               	movwf	??_main^(0+384)
  8015  1525  30BE               	movlw	190
  8016  1526                     u6157:	
  8017  1526  0B89               	decfsz	9,f
  8018  1527  2D26               	goto	u6157
  8019  1528  0BDE               	decfsz	??_main^(0+384),f
  8020  1529  2D26               	goto	u6157
  8021  152A  0BDF               	decfsz	(??_main^(0+384)+1),f
  8022  152B  2D26               	goto	u6157
  8023  152C  0000               	nop
  8024                           
  8025                           ;main.c: 38:     TM1650_init();
  8026  152D  3190  2096  3195   	fcall	_TM1650_init
  8027                           
  8028                           ;main.c: 39:     BUTTONS_init();
  8029  1530  3195  25DD  3195   	fcall	_BUTTONS_init
  8030                           
  8031                           ;main.c: 40:     CONTROLLER_init();
  8032  1533  3190  20B3  3195   	fcall	_CONTROLLER_init
  8033                           
  8034                           ;main.c: 41:     initLED();
  8035  1536  3193  2385  3195   	fcall	_initLED
  8036                           
  8037                           ;main.c: 42:     BEAT_init();
  8038  1539  3191  21DA  3195   	fcall	_BEAT_init
  8039  153C                     l5886:	
  8040                           
  8041                           ;main.c: 46:         BEAT_task();
  8042  153C  318A  226B  3195   	fcall	_BEAT_task
  8043                           
  8044                           ;main.c: 47:         LED_task();
  8045  153F  3196  26CF  3195   	fcall	_LED_task
  8046                           
  8047                           ;main.c: 48:         BUTTONS_task();
  8048  1542  3189  2199  3195   	fcall	_BUTTONS_task
  8049                           
  8050                           ;main.c: 49:         CONTROLLER_task();
  8051  1545  3197  278A  3195   	fcall	_CONTROLLER_task
  8052                           
  8053                           ;main.c: 50:         DMX_task();
  8054  1548  3194  249B  3195   	fcall	_DMX_task
  8055  154B  2D3C               	goto	l5886
  8056  154C                     __end_of_main:	
  8057                           
  8058                           	psect	text1
  8059  1385                     __ptext1:	
  8060 ;; *************** function _initLED *****************
  8061 ;; Defined at:
  8062 ;;		line 24 in file "led.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      void 
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8080 ;;Total ram usage:        0 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    4
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           
  8091                           ;psect for function _initLED
  8092  1385                     _initLED:	
  8093                           
  8094                           ;led.c: 27:     TRISC7 = 0;
  8095                           
  8096                           ;incstack = 0
  8097                           ; Regs used in _initLED: [wreg+status,2+status,0]
  8098  1385  0140               	movlb	0	; select bank0
  8099  1386  1394               	bcf	20,7	;volatile
  8100                           
  8101                           ;led.c: 28:     TRISC6 = 0;
  8102  1387  1314               	bcf	20,6	;volatile
  8103                           
  8104                           ;led.c: 29:     TRISC4 = 0;
  8105  1388  1214               	bcf	20,4	;volatile
  8106                           
  8107                           ;led.c: 30:     TRISC3 = 0;
  8108  1389  1194               	bcf	20,3	;volatile
  8109                           
  8110                           ;led.c: 32:     T2CLKCON = 0x01;
  8111  138A  3001               	movlw	1
  8112  138B  0145               	movlb	5	; select bank5
  8113  138C  0090               	movwf	16	;volatile
  8114                           
  8115                           ;led.c: 33:     T2CONbits.ON = 1;
  8116  138D  178E               	bsf	14,7	;volatile
  8117                           
  8118                           ;led.c: 35:     CCP1CONbits.CCP1EN = 1;
  8119  138E  0146               	movlb	6	; select bank6
  8120  138F  178E               	bsf	14,7	;volatile
  8121                           
  8122                           ;led.c: 36:     CCP1CONbits.MODE = 0b1100;
  8123  1390  080E               	movf	14,w	;volatile
  8124  1391  39F0               	andlw	-16
  8125  1392  380C               	iorlw	12
  8126  1393  008E               	movwf	14	;volatile
  8127                           
  8128                           ;led.c: 37:     CCP2CONbits.CCP2EN = 1;
  8129  1394  1792               	bsf	18,7	;volatile
  8130                           
  8131                           ;led.c: 38:     CCP2CONbits.MODE = 0b1100;
  8132  1395  0812               	movf	18,w	;volatile
  8133  1396  39F0               	andlw	-16
  8134  1397  380C               	iorlw	12
  8135  1398  0092               	movwf	18	;volatile
  8136                           
  8137                           ;led.c: 39:     CCP3CONbits.CCP3EN = 1;
  8138  1399  1796               	bsf	22,7	;volatile
  8139                           
  8140                           ;led.c: 40:     CCP3CONbits.MODE = 0b1100;
  8141  139A  0816               	movf	22,w	;volatile
  8142  139B  39F0               	andlw	-16
  8143  139C  380C               	iorlw	12
  8144  139D  0096               	movwf	22	;volatile
  8145                           
  8146                           ;led.c: 41:     CCP4CONbits.CCP4EN = 1;
  8147  139E  179A               	bsf	26,7	;volatile
  8148                           
  8149                           ;led.c: 42:     CCP4CONbits.MODE = 0b1100;
  8150  139F  081A               	movf	26,w	;volatile
  8151  13A0  39F0               	andlw	-16
  8152  13A1  380C               	iorlw	12
  8153  13A2  009A               	movwf	26	;volatile
  8154                           
  8155                           ;led.c: 45:     RC7PPS = 0x09;
  8156  13A3  3009               	movlw	9
  8157  13A4  017E               	movlb	62	; select bank62
  8158  13A5  00A7               	movwf	39	;volatile
  8159                           
  8160                           ;led.c: 46:     RC6PPS = 0x0A;
  8161  13A6  300A               	movlw	10
  8162  13A7  00A6               	movwf	38	;volatile
  8163                           
  8164                           ;led.c: 47:     RC4PPS = 0x0B;
  8165  13A8  300B               	movlw	11
  8166  13A9  00A4               	movwf	36	;volatile
  8167                           
  8168                           ;led.c: 48:     RC3PPS = 0x0C;
  8169  13AA  300C               	movlw	12
  8170  13AB  00A3               	movwf	35	;volatile
  8171  13AC  0008               	return
  8172  13AD                     __end_of_initLED:	
  8173                           
  8174                           	psect	text2
  8175  1096                     __ptext2:	
  8176 ;; *************** function _TM1650_init *****************
  8177 ;; Defined at:
  8178 ;;		line 28 in file "tm1650.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;		None
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      void 
  8185 ;; Registers used:
  8186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8196 ;;Total ram usage:        0 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:    9
  8199 ;; This function calls:
  8200 ;;		_TM1650_enable
  8201 ;; This function is called by:
  8202 ;;		_main
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           
  8207                           ;psect for function _TM1650_init
  8208  1096                     _TM1650_init:	
  8209                           
  8210                           ;tm1650.c: 29:     TM1650_enable(1);
  8211                           
  8212                           ;incstack = 0
  8213                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8214  1096  3001               	movlw	1
  8215  1097  3191  2185         	fcall	_TM1650_enable
  8216  1099  0008               	return
  8217  109A                     __end_of_TM1650_init:	
  8218                           
  8219                           	psect	text3
  8220  11AF                     __ptext3:	
  8221 ;; *************** function _SYSTEM_Initialize *****************
  8222 ;; Defined at:
  8223 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;		None
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  1    wreg      void 
  8230 ;; Registers used:
  8231 ;;		wreg, status,2, status,0, pclath, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8241 ;;Total ram usage:        0 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    6
  8244 ;; This function calls:
  8245 ;;		_ADCC_Initialize
  8246 ;;		_EUSART1_Initialize
  8247 ;;		_I2C1_Initialize
  8248 ;;		_OSCILLATOR_Initialize
  8249 ;;		_PIN_MANAGER_Initialize
  8250 ;;		_PMD_Initialize
  8251 ;;		_TMR0_Initialize
  8252 ;; This function is called by:
  8253 ;;		_main
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           
  8258                           ;psect for function _SYSTEM_Initialize
  8259  11AF                     _SYSTEM_Initialize:	
  8260                           
  8261                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8262                           
  8263                           ;incstack = 0
  8264                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8265  11AF  3191  2127  3191   	fcall	_PMD_Initialize
  8266                           
  8267                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8268  11B2  3194  2404  3191   	fcall	_PIN_MANAGER_Initialize
  8269                           
  8270                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8271  11B5  3191  211E  3191   	fcall	_OSCILLATOR_Initialize
  8272                           
  8273                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  8274  11B8  3192  223F  3191   	fcall	_I2C1_Initialize
  8275                           
  8276                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8277  11BB  3193  235F  3191   	fcall	_ADCC_Initialize
  8278                           
  8279                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  8280  11BE  3191  2171  3191   	fcall	_TMR0_Initialize
  8281                           
  8282                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  8283  11C1  3195  254C         	fcall	_EUSART1_Initialize
  8284  11C3  0008               	return
  8285  11C4                     __end_of_SYSTEM_Initialize:	
  8286                           
  8287                           	psect	text4
  8288  1171                     __ptext4:	
  8289 ;; *************** function _TMR0_Initialize *****************
  8290 ;; Defined at:
  8291 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;		None
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg, status,2, status,0, pclath, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8309 ;;Total ram usage:        0 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    5
  8312 ;; This function calls:
  8313 ;;		_TMR0_SetInterruptHandler
  8314 ;; This function is called by:
  8315 ;;		_SYSTEM_Initialize
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           
  8320                           ;psect for function _TMR0_Initialize
  8321  1171                     _TMR0_Initialize:	
  8322                           
  8323                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  8324                           
  8325                           ;incstack = 0
  8326                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8327  1171  3045               	movlw	69
  8328  1172  014B               	movlb	11	; select bank11
  8329  1173  009F               	movwf	31	;volatile
  8330                           
  8331                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8332  1174  30F9               	movlw	249
  8333  1175  009D               	movwf	29	;volatile
  8334                           
  8335                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8336  1176  019C               	clrf	28	;volatile
  8337                           
  8338                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8339  1177  014E               	movlb	14	; select bank14
  8340  1178  128C               	bcf	12,5	;volatile
  8341                           
  8342                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8343  1179  1696               	bsf	22,5	;volatile
  8344                           
  8345                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8346  117A  3003               	movlw	low _TMR0_DefaultInterruptHandler
  8347  117B  0140               	movlb	0	; select bank0
  8348  117C  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8349  117D  3000               	movlw	high _TMR0_DefaultInterruptHandler
  8350  117E  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8351  117F  3190  20DF         	fcall	_TMR0_SetInterruptHandler
  8352                           
  8353                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8354  1181  3080               	movlw	128
  8355  1182  014B               	movlb	11	; select bank11
  8356  1183  009E               	movwf	30	;volatile
  8357  1184  0008               	return
  8358  1185                     __end_of_TMR0_Initialize:	
  8359                           
  8360                           	psect	text5
  8361  1127                     __ptext5:	
  8362 ;; *************** function _PMD_Initialize *****************
  8363 ;; Defined at:
  8364 ;;		line 75 in file "mcc_generated_files/mcc.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;		None
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;		None
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  1    wreg      void 
  8371 ;; Registers used:
  8372 ;;		status,2
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8382 ;;Total ram usage:        0 bytes
  8383 ;; Hardware stack levels used:    1
  8384 ;; Hardware stack levels required when called:    4
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_SYSTEM_Initialize
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           
  8393                           ;psect for function _PMD_Initialize
  8394  1127                     _PMD_Initialize:	
  8395                           
  8396                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  8397                           
  8398                           ;incstack = 0
  8399                           ; Regs used in _PMD_Initialize: [status,2]
  8400  1127  014F               	movlb	15	; select bank15
  8401  1128  0196               	clrf	22	;volatile
  8402                           
  8403                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  8404  1129  0197               	clrf	23	;volatile
  8405                           
  8406                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  8407  112A  0198               	clrf	24	;volatile
  8408                           
  8409                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  8410  112B  0199               	clrf	25	;volatile
  8411                           
  8412                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  8413  112C  019A               	clrf	26	;volatile
  8414                           
  8415                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  8416  112D  019B               	clrf	27	;volatile
  8417                           
  8418                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  8419  112E  019C               	clrf	28	;volatile
  8420                           
  8421                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  8422  112F  019D               	clrf	29	;volatile
  8423  1130  0008               	return
  8424  1131                     __end_of_PMD_Initialize:	
  8425                           
  8426                           	psect	text6
  8427  1404                     __ptext6:	
  8428 ;; *************** function _PIN_MANAGER_Initialize *****************
  8429 ;; Defined at:
  8430 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, status,2
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8448 ;;Total ram usage:        0 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:    4
  8451 ;; This function calls:
  8452 ;;		Nothing
  8453 ;; This function is called by:
  8454 ;;		_SYSTEM_Initialize
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           
  8459                           ;psect for function _PIN_MANAGER_Initialize
  8460  1404                     _PIN_MANAGER_Initialize:	
  8461                           
  8462                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8463                           
  8464                           ;incstack = 0
  8465                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8466  1404  0140               	movlb	0	; select bank0
  8467  1405  0198               	clrf	24	;volatile
  8468                           
  8469                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8470  1406  0199               	clrf	25	;volatile
  8471                           
  8472                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8473  1407  019A               	clrf	26	;volatile
  8474                           
  8475                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8476  1408  303F               	movlw	63
  8477  1409  0092               	movwf	18	;volatile
  8478                           
  8479                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  8480  140A  30F0               	movlw	240
  8481  140B  0093               	movwf	19	;volatile
  8482                           
  8483                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8484  140C  30FF               	movlw	255
  8485  140D  0094               	movwf	20	;volatile
  8486                           
  8487                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8488  140E  30F8               	movlw	248
  8489  140F  017E               	movlb	62	; select bank62
  8490  1410  00CE               	movwf	78	;volatile
  8491                           
  8492                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8493  1411  30E0               	movlw	224
  8494  1412  00C3               	movwf	67	;volatile
  8495                           
  8496                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8497  1413  3003               	movlw	3
  8498  1414  00B8               	movwf	56	;volatile
  8499                           
  8500                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8501  1415  01C4               	clrf	68	;volatile
  8502                           
  8503                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8504  1416  3004               	movlw	4
  8505  1417  00B9               	movwf	57	;volatile
  8506                           
  8507                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8508  1418  3007               	movlw	7
  8509  1419  00CF               	movwf	79	;volatile
  8510                           
  8511                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8512  141A  01BA               	clrf	58	;volatile
  8513                           
  8514                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8515  141B  01C5               	clrf	69	;volatile
  8516                           
  8517                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8518  141C  01D0               	clrf	80	;volatile
  8519                           
  8520                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8521  141D  3037               	movlw	55
  8522  141E  00BB               	movwf	59	;volatile
  8523                           
  8524                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8525  141F  30F0               	movlw	240
  8526  1420  00C6               	movwf	70	;volatile
  8527                           
  8528                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8529  1421  30FF               	movlw	255
  8530  1422  00D1               	movwf	81	;volatile
  8531                           
  8532                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8533  1423  3005               	movlw	5
  8534  1424  017D               	movlb	61	; select bank61
  8535  1425  00C5               	movwf	69	;volatile
  8536                           
  8537                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8538  1426  3014               	movlw	20
  8539  1427  017E               	movlb	62	; select bank62
  8540  1428  0094               	movwf	20	;volatile
  8541                           
  8542                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  8543  1429  3013               	movlw	19
  8544  142A  0095               	movwf	21	;volatile
  8545                           
  8546                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  8547  142B  3004               	movlw	4
  8548  142C  017D               	movlb	61	; select bank61
  8549  142D  00C6               	movwf	70	;volatile
  8550                           
  8551                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  8552  142E  300C               	movlw	12
  8553  142F  00CB               	movwf	75	;volatile
  8554  1430  0008               	return
  8555  1431                     __end_of_PIN_MANAGER_Initialize:	
  8556                           
  8557                           	psect	text7
  8558  111E                     __ptext7:	
  8559 ;; *************** function _OSCILLATOR_Initialize *****************
  8560 ;; Defined at:
  8561 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      void 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8579 ;;Total ram usage:        0 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    4
  8582 ;; This function calls:
  8583 ;;		Nothing
  8584 ;; This function is called by:
  8585 ;;		_SYSTEM_Initialize
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           
  8590                           ;psect for function _OSCILLATOR_Initialize
  8591  111E                     _OSCILLATOR_Initialize:	
  8592                           
  8593                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8594                           
  8595                           ;incstack = 0
  8596                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8597  111E  3060               	movlw	96
  8598  111F  0151               	movlb	17	; select bank17
  8599  1120  008D               	movwf	13	;volatile
  8600                           
  8601                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8602  1121  018F               	clrf	15	;volatile
  8603                           
  8604                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8605  1122  0191               	clrf	17	;volatile
  8606                           
  8607                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8608  1123  3006               	movlw	6
  8609  1124  0093               	movwf	19	;volatile
  8610                           
  8611                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  8612  1125  0192               	clrf	18	;volatile
  8613  1126  0008               	return
  8614  1127                     __end_of_OSCILLATOR_Initialize:	
  8615                           
  8616                           	psect	text8
  8617  123F                     __ptext8:	
  8618 ;; *************** function _I2C1_Initialize *****************
  8619 ;; Defined at:
  8620 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;		None
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      void 
  8627 ;; Registers used:
  8628 ;;		wreg, status,2
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8637 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8638 ;;Total ram usage:        1 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; Hardware stack levels required when called:    4
  8641 ;; This function calls:
  8642 ;;		Nothing
  8643 ;; This function is called by:
  8644 ;;		_SYSTEM_Initialize
  8645 ;; This function uses a non-reentrant model
  8646 ;;
  8647                           
  8648                           
  8649                           ;psect for function _I2C1_Initialize
  8650  123F                     _I2C1_Initialize:	
  8651                           
  8652                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8653                           
  8654                           ;incstack = 0
  8655                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8656  123F  305C               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8657  1240  0140               	movlb	0	; select bank0
  8658  1241  00A0               	movwf	??_I2C1_Initialize
  8659  1242  0820               	movf	??_I2C1_Initialize,w
  8660  1243  0142               	movlb	2	; select bank2
  8661  1244  00A9               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
  8662                           
  8663                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8664  1245  305C               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8665  1246  0140               	movlb	0	; select bank0
  8666  1247  00A0               	movwf	??_I2C1_Initialize
  8667  1248  0820               	movf	??_I2C1_Initialize,w
  8668  1249  0142               	movlb	2	; select bank2
  8669  124A  00A8               	movwf	_i2c1_object^(0+256)
  8670                           
  8671                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8672  124B  14AA               	bsf	(_i2c1_object^(0+256)+2),1
  8673                           
  8674                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8675  124C  102A               	bcf	(_i2c1_object^(0+256)+2),0
  8676                           
  8677                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8678  124D  01AC               	clrf	(_i2c1_object^(0+256)+4)
  8679                           
  8680                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8681  124E  0143               	movlb	3	; select bank3
  8682  124F  018F               	clrf	15	;volatile
  8683                           
  8684                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8685  1250  3028               	movlw	40
  8686  1251  0090               	movwf	16	;volatile
  8687                           
  8688                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8689  1252  0192               	clrf	18	;volatile
  8690                           
  8691                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  8692  1253  3050               	movlw	80
  8693  1254  008D               	movwf	13	;volatile
  8694                           
  8695                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8696  1255  014E               	movlb	14	; select bank14
  8697  1256  100F               	bcf	15,0	;volatile
  8698                           
  8699                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8700  1257  108F               	bcf	15,1	;volatile
  8701                           
  8702                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8703  1258  1419               	bsf	25,0	;volatile
  8704                           
  8705                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8706  1259  1499               	bsf	25,1	;volatile
  8707  125A  0008               	return
  8708  125B                     __end_of_I2C1_Initialize:	
  8709                           
  8710                           	psect	text9
  8711  154C                     __ptext9:	
  8712 ;; *************** function _EUSART1_Initialize *****************
  8713 ;; Defined at:
  8714 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;		None
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, status,2, status,0, pclath, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8730 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8731 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8732 ;;Total ram usage:        1 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:    5
  8735 ;; This function calls:
  8736 ;;		_EUSART1_SetErrorHandler
  8737 ;;		_EUSART1_SetFramingErrorHandler
  8738 ;;		_EUSART1_SetOverrunErrorHandler
  8739 ;;		_EUSART1_SetRxInterruptHandler
  8740 ;;		_EUSART1_SetTxInterruptHandler
  8741 ;; This function is called by:
  8742 ;;		_SYSTEM_Initialize
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           
  8747                           ;psect for function _EUSART1_Initialize
  8748  154C                     _EUSART1_Initialize:	
  8749                           
  8750                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8751                           
  8752                           ;incstack = 0
  8753                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8754  154C  014E               	movlb	14	; select bank14
  8755  154D  1299               	bcf	25,5	;volatile
  8756                           
  8757                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8758  154E  3031               	movlw	low _EUSART1_Receive_ISR
  8759  154F  0140               	movlb	0	; select bank0
  8760  1550  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8761  1551  3014               	movlw	high _EUSART1_Receive_ISR
  8762  1552  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8763  1553  3191  210C  3195   	fcall	_EUSART1_SetRxInterruptHandler
  8764                           
  8765                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8766  1556  014E               	movlb	14	; select bank14
  8767  1557  1219               	bcf	25,4	;volatile
  8768                           
  8769                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8770  1558  3097               	movlw	low _EUSART1_Transmit_ISR
  8771  1559  0140               	movlb	0	; select bank0
  8772  155A  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8773  155B  3012               	movlw	high _EUSART1_Transmit_ISR
  8774  155C  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8775  155D  3191  2115  3195   	fcall	_EUSART1_SetTxInterruptHandler
  8776                           
  8777                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8778  1560  3008               	movlw	8
  8779  1561  0142               	movlb	2	; select bank2
  8780  1562  009F               	movwf	31	;volatile
  8781                           
  8782                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8783  1563  3090               	movlw	144
  8784  1564  009D               	movwf	29	;volatile
  8785                           
  8786                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8787  1565  3004               	movlw	4
  8788  1566  009E               	movwf	30	;volatile
  8789                           
  8790                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8791  1567  301F               	movlw	31
  8792  1568  009B               	movwf	27	;volatile
  8793                           
  8794                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8795  1569  019C               	clrf	28	;volatile
  8796                           
  8797                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8798  156A  3002               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8799  156B  0140               	movlb	0	; select bank0
  8800  156C  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8801  156D  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8802  156E  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8803  156F  3190  20FA  3195   	fcall	_EUSART1_SetFramingErrorHandler
  8804                           
  8805                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8806  1572  3092               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8807  1573  0140               	movlb	0	; select bank0
  8808  1574  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8809  1575  3010               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8810  1576  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8811  1577  3191  2103  3195   	fcall	_EUSART1_SetOverrunErrorHandler
  8812                           
  8813                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8814  157A  3082               	movlw	low _EUSART1_DefaultErrorHandler
  8815  157B  0140               	movlb	0	; select bank0
  8816  157C  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8817  157D  3010               	movlw	high _EUSART1_DefaultErrorHandler
  8818  157E  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8819  157F  3190  20F1         	fcall	_EUSART1_SetErrorHandler
  8820                           
  8821                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8822  1581  0142               	movlb	2	; select bank2
  8823  1582  01D3               	clrf	_eusart1RxLastError^(0+256)	;volatile
  8824                           
  8825                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8826  1583  0140               	movlb	0	; select bank0
  8827  1584  01EF               	clrf	_eusart1TxHead	;volatile
  8828                           
  8829                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8830  1585  0141               	movlb	1	; select bank1
  8831  1586  01EF               	clrf	_eusart1TxTail^(0+128)	;volatile
  8832                           
  8833                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8834  1587  3008               	movlw	8
  8835  1588  0140               	movlb	0	; select bank0
  8836  1589  00A2               	movwf	??_EUSART1_Initialize
  8837  158A  0822               	movf	??_EUSART1_Initialize,w
  8838  158B  0142               	movlb	2	; select bank2
  8839  158C  00E9               	movwf	_eusart1TxBufferRemaining^(0+256)	;volatile
  8840                           
  8841                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8842  158D  01F7               	clrf	_eusart1RxHead	;volatile
  8843                           
  8844                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8845  158E  01F6               	clrf	_eusart1RxTail	;volatile
  8846                           
  8847                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8848  158F  0141               	movlb	1	; select bank1
  8849  1590  01EE               	clrf	_eusart1RxCount^(0+128)	;volatile
  8850                           
  8851                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8852  1591  014E               	movlb	14	; select bank14
  8853  1592  1699               	bsf	25,5	;volatile
  8854  1593  0008               	return
  8855  1594                     __end_of_EUSART1_Initialize:	
  8856                           
  8857                           	psect	text10
  8858  1115                     __ptext10:	
  8859 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8860 ;; Defined at:
  8861 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8864 ;;		 -> EUSART1_Transmit_ISR(1), 
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;		None
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      void 
  8869 ;; Registers used:
  8870 ;;		wreg
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8879 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8880 ;;Total ram usage:        2 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; Hardware stack levels required when called:    4
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_EUSART1_Initialize
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           
  8891                           ;psect for function _EUSART1_SetTxInterruptHandler
  8892  1115                     _EUSART1_SetTxInterruptHandler:	
  8893                           
  8894                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8895                           
  8896                           ;incstack = 0
  8897                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  8898  1115  0140               	movlb	0	; select bank0
  8899  1116  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  8900  1117  0142               	movlb	2	; select bank2
  8901  1118  00E8               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256)
  8902  1119  0140               	movlb	0	; select bank0
  8903  111A  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  8904  111B  0142               	movlb	2	; select bank2
  8905  111C  00E7               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+256)
  8906  111D  0008               	return
  8907  111E                     __end_of_EUSART1_SetTxInterruptHandler:	
  8908                           
  8909                           	psect	text11
  8910  110C                     __ptext11:	
  8911 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  8912 ;; Defined at:
  8913 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8916 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;		None
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  1    wreg      void 
  8921 ;; Registers used:
  8922 ;;		wreg
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8931 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8932 ;;Total ram usage:        2 bytes
  8933 ;; Hardware stack levels used:    1
  8934 ;; Hardware stack levels required when called:    4
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_EUSART1_Initialize
  8939 ;;		_main
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           
  8944                           ;psect for function _EUSART1_SetRxInterruptHandler
  8945  110C                     _EUSART1_SetRxInterruptHandler:	
  8946                           
  8947                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8948                           
  8949                           ;incstack = 0
  8950                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  8951  110C  0140               	movlb	0	; select bank0
  8952  110D  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  8953  110E  0142               	movlb	2	; select bank2
  8954  110F  00E6               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256)
  8955  1110  0140               	movlb	0	; select bank0
  8956  1111  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  8957  1112  0142               	movlb	2	; select bank2
  8958  1113  00E5               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+256)
  8959  1114  0008               	return
  8960  1115                     __end_of_EUSART1_SetRxInterruptHandler:	
  8961                           
  8962                           	psect	text12
  8963  1103                     __ptext12:	
  8964 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8965 ;; Defined at:
  8966 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8969 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8970 ;; Auto vars:     Size  Location     Type
  8971 ;;		None
  8972 ;; Return value:  Size  Location     Type
  8973 ;;                  1    wreg      void 
  8974 ;; Registers used:
  8975 ;;		wreg
  8976 ;; Tracked objects:
  8977 ;;		On entry : 0/0
  8978 ;;		On exit  : 0/0
  8979 ;;		Unchanged: 0/0
  8980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8985 ;;Total ram usage:        2 bytes
  8986 ;; Hardware stack levels used:    1
  8987 ;; Hardware stack levels required when called:    4
  8988 ;; This function calls:
  8989 ;;		Nothing
  8990 ;; This function is called by:
  8991 ;;		_EUSART1_Initialize
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           
  8996                           ;psect for function _EUSART1_SetOverrunErrorHandler
  8997  1103                     _EUSART1_SetOverrunErrorHandler:	
  8998                           
  8999                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  9000                           
  9001                           ;incstack = 0
  9002                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9003  1103  0140               	movlb	0	; select bank0
  9004  1104  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9005  1105  0143               	movlb	3	; select bank3
  9006  1106  00DD               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
  9007  1107  0140               	movlb	0	; select bank0
  9008  1108  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9009  1109  0143               	movlb	3	; select bank3
  9010  110A  00DC               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
  9011  110B  0008               	return
  9012  110C                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9013                           
  9014                           	psect	text13
  9015  10FA                     __ptext13:	
  9016 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9017 ;; Defined at:
  9018 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9021 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;		None
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9036 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9037 ;;Total ram usage:        2 bytes
  9038 ;; Hardware stack levels used:    1
  9039 ;; Hardware stack levels required when called:    4
  9040 ;; This function calls:
  9041 ;;		Nothing
  9042 ;; This function is called by:
  9043 ;;		_EUSART1_Initialize
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           
  9048                           ;psect for function _EUSART1_SetFramingErrorHandler
  9049  10FA                     _EUSART1_SetFramingErrorHandler:	
  9050                           
  9051                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  9052                           
  9053                           ;incstack = 0
  9054                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9055  10FA  0140               	movlb	0	; select bank0
  9056  10FB  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9057  10FC  0142               	movlb	2	; select bank2
  9058  10FD  00E4               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
  9059  10FE  0140               	movlb	0	; select bank0
  9060  10FF  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9061  1100  0142               	movlb	2	; select bank2
  9062  1101  00E3               	movwf	_EUSART1_FramingErrorHandler^(0+256)
  9063  1102  0008               	return
  9064  1103                     __end_of_EUSART1_SetFramingErrorHandler:	
  9065                           
  9066                           	psect	text14
  9067  10F1                     __ptext14:	
  9068 ;; *************** function _EUSART1_SetErrorHandler *****************
  9069 ;; Defined at:
  9070 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9073 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      void 
  9078 ;; Registers used:
  9079 ;;		wreg
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9085 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9088 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9089 ;;Total ram usage:        2 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:    4
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_EUSART1_Initialize
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _EUSART1_SetErrorHandler
  9101  10F1                     _EUSART1_SetErrorHandler:	
  9102                           
  9103                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  9104                           
  9105                           ;incstack = 0
  9106                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9107  10F1  0140               	movlb	0	; select bank0
  9108  10F2  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9109  10F3  0143               	movlb	3	; select bank3
  9110  10F4  00DB               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
  9111  10F5  0140               	movlb	0	; select bank0
  9112  10F6  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9113  10F7  0143               	movlb	3	; select bank3
  9114  10F8  00DA               	movwf	_EUSART1_ErrorHandler^(0+384)
  9115  10F9  0008               	return
  9116  10FA                     __end_of_EUSART1_SetErrorHandler:	
  9117                           
  9118                           	psect	text15
  9119  135F                     __ptext15:	
  9120 ;; *************** function _ADCC_Initialize *****************
  9121 ;; Defined at:
  9122 ;;		line 64 in file "mcc_generated_files/adcc.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;		None
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;		None
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		wreg, status,2, status,0, pclath, cstack
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9140 ;;Total ram usage:        0 bytes
  9141 ;; Hardware stack levels used:    1
  9142 ;; Hardware stack levels required when called:    5
  9143 ;; This function calls:
  9144 ;;		_ADCC_SetADTIInterruptHandler
  9145 ;; This function is called by:
  9146 ;;		_SYSTEM_Initialize
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           
  9151                           ;psect for function _ADCC_Initialize
  9152  135F                     _ADCC_Initialize:	
  9153                           
  9154                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  9155                           
  9156                           ;incstack = 0
  9157                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9158  135F  0141               	movlb	1	; select bank1
  9159  1360  018C               	clrf	12	;volatile
  9160                           
  9161                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  9162  1361  018D               	clrf	13	;volatile
  9163                           
  9164                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  9165  1362  018E               	clrf	14	;volatile
  9166                           
  9167                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  9168  1363  018F               	clrf	15	;volatile
  9169                           
  9170                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  9171  1364  0192               	clrf	18	;volatile
  9172                           
  9173                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  9174  1365  0193               	clrf	19	;volatile
  9175                           
  9176                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  9177  1366  0198               	clrf	24	;volatile
  9178                           
  9179                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  9180  1367  019A               	clrf	26	;volatile
  9181                           
  9182                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  9183  1368  019F               	clrf	31	;volatile
  9184                           
  9185                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  9186  1369  0142               	movlb	2	; select bank2
  9187  136A  018C               	clrf	12	;volatile
  9188                           
  9189                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  9190  136B  018D               	clrf	13	;volatile
  9191                           
  9192                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  9193  136C  018E               	clrf	14	;volatile
  9194                           
  9195                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  9196  136D  018F               	clrf	15	;volatile
  9197                           
  9198                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  9199  136E  0190               	clrf	16	;volatile
  9200                           
  9201                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  9202  136F  0192               	clrf	18	;volatile
  9203                           
  9204                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  9205  1370  3054               	movlw	84
  9206  1371  0093               	movwf	19	;volatile
  9207                           
  9208                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  9209  1372  3056               	movlw	86
  9210  1373  0094               	movwf	20	;volatile
  9211                           
  9212                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  9213  1374  0195               	clrf	21	;volatile
  9214                           
  9215                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  9216  1375  0196               	clrf	22	;volatile
  9217                           
  9218                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  9219  1376  0197               	clrf	23	;volatile
  9220                           
  9221                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  9222  1377  0198               	clrf	24	;volatile
  9223                           
  9224                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  9225  1378  30D4               	movlw	212
  9226  1379  0091               	movwf	17	;volatile
  9227                           
  9228                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  9229  137A  014E               	movlb	14	; select bank14
  9230  137B  108D               	bcf	13,1	;volatile
  9231                           
  9232                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  9233  137C  1497               	bsf	23,1	;volatile
  9234                           
  9235                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  9236  137D  3081               	movlw	low _ADCC_DefaultInterruptHandler
  9237  137E  0140               	movlb	0	; select bank0
  9238  137F  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  9239  1380  3010               	movlw	high _ADCC_DefaultInterruptHandler
  9240  1381  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  9241  1382  3190  20BB         	fcall	_ADCC_SetADTIInterruptHandler
  9242  1384  0008               	return
  9243  1385                     __end_of_ADCC_Initialize:	
  9244                           
  9245                           	psect	text16
  9246  16CF                     __ptext16:	
  9247 ;; *************** function _LED_task *****************
  9248 ;; Defined at:
  9249 ;;		line 148 in file "led.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;		None
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;		None
  9254 ;; Return value:  Size  Location     Type
  9255 ;;                  1    wreg      void 
  9256 ;; Registers used:
  9257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9258 ;; Tracked objects:
  9259 ;;		On entry : 0/0
  9260 ;;		On exit  : 0/0
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9265 ;;      Temps:          0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9266 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9267 ;;Total ram usage:       11 bytes
  9268 ;; Hardware stack levels used:    1
  9269 ;; Hardware stack levels required when called:    9
  9270 ;; This function calls:
  9271 ;;		_BEAT_detected
  9272 ;;		_LED_setColor
  9273 ;;		_fadeColor
  9274 ;;		_isDMXOn
  9275 ;; This function is called by:
  9276 ;;		_main
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           
  9281                           ;psect for function _LED_task
  9282  16CF                     _LED_task:	
  9283                           
  9284                           ;led.c: 149:     if(isDMXOn()) {
  9285                           
  9286                           ;incstack = 0
  9287                           ; Regs used in _LED_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9288  16CF  3190  208B  3196   	fcall	_isDMXOn
  9289  16D2  3A00               	xorlw	0
  9290  16D3  1903               	skipnz
  9291  16D4  2F14               	goto	l5750
  9292                           
  9293                           ;led.c: 150:         LED_setColor(dmxData[address+1], dmxData[address+2], dmxData[addres
      +                          s+3], dmxData[address+4]);
  9294  16D5  30F1               	movlw	241
  9295  16D6  0141               	movlb	1	; select bank1
  9296  16D7  00DE               	movwf	??_LED_task^(0+128)
  9297  16D8  3025               	movlw	37
  9298  16D9  00DF               	movwf	(??_LED_task^(0+128)+1)
  9299  16DA  087A               	movf	_address,w
  9300  16DB  075E               	addwf	??_LED_task^(0+128),w
  9301  16DC  0086               	movwf	6
  9302  16DD  087B               	movf	_address+1,w
  9303  16DE  3D5F               	addwfc	(??_LED_task+1)^(0+128),w
  9304  16DF  0087               	movwf	7
  9305  16E0  0801               	movf	1,w
  9306  16E1  00E0               	movwf	(??_LED_task+2)^(0+128)
  9307  16E2  0860               	movf	(??_LED_task+2)^(0+128),w
  9308  16E3  0140               	movlb	0	; select bank0
  9309  16E4  00A0               	movwf	LED_setColor@green
  9310  16E5  30F2               	movlw	242
  9311  16E6  0141               	movlb	1	; select bank1
  9312  16E7  00E1               	movwf	(??_LED_task+3)^(0+128)
  9313  16E8  3025               	movlw	37
  9314  16E9  00E2               	movwf	((??_LED_task+3)^(0+128)+1)
  9315  16EA  087A               	movf	_address,w
  9316  16EB  0761               	addwf	(??_LED_task+3)^(0+128),w
  9317  16EC  0086               	movwf	6
  9318  16ED  087B               	movf	_address+1,w
  9319  16EE  3D62               	addwfc	(??_LED_task+4)^(0+128),w
  9320  16EF  0087               	movwf	7
  9321  16F0  0801               	movf	1,w
  9322  16F1  00E3               	movwf	(??_LED_task+5)^(0+128)
  9323  16F2  0863               	movf	(??_LED_task+5)^(0+128),w
  9324  16F3  0140               	movlb	0	; select bank0
  9325  16F4  00A1               	movwf	LED_setColor@white
  9326  16F5  30F3               	movlw	243
  9327  16F6  0141               	movlb	1	; select bank1
  9328  16F7  00E4               	movwf	(??_LED_task+6)^(0+128)
  9329  16F8  3025               	movlw	37
  9330  16F9  00E5               	movwf	((??_LED_task+6)^(0+128)+1)
  9331  16FA  087A               	movf	_address,w
  9332  16FB  0764               	addwf	(??_LED_task+6)^(0+128),w
  9333  16FC  0086               	movwf	6
  9334  16FD  087B               	movf	_address+1,w
  9335  16FE  3D65               	addwfc	(??_LED_task+7)^(0+128),w
  9336  16FF  0087               	movwf	7
  9337  1700  0801               	movf	1,w
  9338  1701  00E6               	movwf	(??_LED_task+8)^(0+128)
  9339  1702  0866               	movf	(??_LED_task+8)^(0+128),w
  9340  1703  0140               	movlb	0	; select bank0
  9341  1704  00A2               	movwf	LED_setColor@blue
  9342  1705  30F0               	movlw	240
  9343  1706  0141               	movlb	1	; select bank1
  9344  1707  00E7               	movwf	(??_LED_task+9)^(0+128)
  9345  1708  3025               	movlw	37
  9346  1709  00E8               	movwf	((??_LED_task+9)^(0+128)+1)
  9347  170A  087A               	movf	_address,w
  9348  170B  0767               	addwf	(??_LED_task+9)^(0+128),w
  9349  170C  0086               	movwf	6
  9350  170D  087B               	movf	_address+1,w
  9351  170E  3D68               	addwfc	(??_LED_task+10)^(0+128),w
  9352  170F  0087               	movwf	7
  9353  1710  0801               	movf	1,w
  9354  1711  3194  24D2         	fcall	_LED_setColor
  9355                           
  9356                           ;led.c: 151:     } else {
  9357  1713  0008               	return
  9358  1714                     l5750:	
  9359                           
  9360                           ;led.c: 152:         if(BEAT_detected()) {
  9361  1714  3190  20E8  3196   	fcall	_BEAT_detected
  9362  1717  3A00               	xorlw	0
  9363  1718  1903               	skipnz
  9364  1719  2F1D               	goto	l5754
  9365                           
  9366                           ;led.c: 153:             changeColor = 1;
  9367  171A  0142               	movlb	2	; select bank2
  9368  171B  01C5               	clrf	_changeColor^(0+256)
  9369  171C  0AC5               	incf	_changeColor^(0+256),f
  9370  171D                     l5754:	
  9371                           
  9372                           ;led.c: 155:         if(changeColor) {
  9373  171D  0142               	movlb	2	; select bank2
  9374  171E  0845               	movf	_changeColor^(0+256),w
  9375  171F  1903               	btfsc	3,2
  9376  1720  0008               	return
  9377                           
  9378                           ;led.c: 156:             fadeColor();
  9379  1721  3196  2628         	fcall	_fadeColor
  9380  1723  0008               	return
  9381  1724                     __end_of_LED_task:	
  9382                           
  9383                           	psect	text17
  9384  108B                     __ptext17:	
  9385 ;; *************** function _isDMXOn *****************
  9386 ;; Defined at:
  9387 ;;		line 57 in file "dmx.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;		None
  9390 ;; Auto vars:     Size  Location     Type
  9391 ;;		None
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  1    wreg      _Bool 
  9394 ;; Registers used:
  9395 ;;		wreg
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9405 ;;Total ram usage:        0 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:    4
  9408 ;; This function calls:
  9409 ;;		Nothing
  9410 ;; This function is called by:
  9411 ;;		_LED_task
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function _isDMXOn
  9417  108B                     _isDMXOn:	
  9418                           
  9419                           ;dmx.c: 58:     return dmxOn;
  9420                           
  9421                           ;incstack = 0
  9422                           ; Regs used in _isDMXOn: [wreg]
  9423  108B  0142               	movlb	2	; select bank2
  9424  108C  0847               	movf	_dmxOn^(0+256),w
  9425  108D  0008               	return
  9426  108E                     __end_of_isDMXOn:	
  9427                           
  9428                           	psect	text18
  9429  1628                     __ptext18:	
  9430 ;; *************** function _fadeColor *****************
  9431 ;; Defined at:
  9432 ;;		line 126 in file "led.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;		None
  9435 ;; Auto vars:     Size  Location     Type
  9436 ;;  time            2   60[BANK1 ] unsigned short 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;                  1    wreg      void 
  9439 ;; Registers used:
  9440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9441 ;; Tracked objects:
  9442 ;;		On entry : 0/0
  9443 ;;		On exit  : 0/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9447 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9448 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9449 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9450 ;;Total ram usage:        4 bytes
  9451 ;; Hardware stack levels used:    1
  9452 ;; Hardware stack levels required when called:    8
  9453 ;; This function calls:
  9454 ;;		_CLOCK_getTime
  9455 ;;		_LED_setHSL
  9456 ;; This function is called by:
  9457 ;;		_LED_task
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           
  9462                           ;psect for function _fadeColor
  9463  1628                     _fadeColor:	
  9464                           
  9465                           ;led.c: 127:     time_t time = CLOCK_getTime();
  9466                           
  9467                           ;incstack = 0
  9468                           ; Regs used in _fadeColor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9469  1628  3190  20D6  3196   	fcall	_CLOCK_getTime
  9470  162B  0140               	movlb	0	; select bank0
  9471  162C  0821               	movf	?_CLOCK_getTime+1,w
  9472  162D  0141               	movlb	1	; select bank1
  9473  162E  00DD               	movwf	(fadeColor@time+1)^(0+128)
  9474  162F  0140               	movlb	0	; select bank0
  9475  1630  0820               	movf	?_CLOCK_getTime,w
  9476  1631  0141               	movlb	1	; select bank1
  9477  1632  00DC               	movwf	fadeColor@time^(0+128)
  9478                           
  9479                           ;led.c: 129:     if (time - lastTime < 10)
  9480  1633  0142               	movlb	2	; select bank2
  9481  1634  082D               	movf	led@lastTime^(0+256),w
  9482  1635  0141               	movlb	1	; select bank1
  9483  1636  025C               	subwf	fadeColor@time^(0+128),w
  9484  1637  00DA               	movwf	??_fadeColor^(0+128)
  9485  1638  0142               	movlb	2	; select bank2
  9486  1639  082E               	movf	(led@lastTime+1)^(0+256),w
  9487  163A  0141               	movlb	1	; select bank1
  9488  163B  3B5D               	subwfb	(fadeColor@time+1)^(0+128),w
  9489  163C  00DB               	movwf	(??_fadeColor+1)^(0+128)
  9490  163D  3000               	movlw	0
  9491  163E  025B               	subwf	(??_fadeColor+1)^(0+128),w
  9492  163F  300A               	movlw	10
  9493  1640  1903               	skipnz
  9494  1641  025A               	subwf	??_fadeColor^(0+128),w
  9495  1642  1C03               	btfss	3,0
  9496  1643  0008               	return
  9497                           
  9498                           ;led.c: 132:     lastTime = time;
  9499  1644  085D               	movf	(fadeColor@time+1)^(0+128),w
  9500  1645  0142               	movlb	2	; select bank2
  9501  1646  00AE               	movwf	(led@lastTime+1)^(0+256)
  9502  1647  0141               	movlb	1	; select bank1
  9503  1648  085C               	movf	fadeColor@time^(0+128),w
  9504  1649  0142               	movlb	2	; select bank2
  9505  164A  00AD               	movwf	led@lastTime^(0+256)
  9506                           
  9507                           ;led.c: 134:     if(color.H == 360) {
  9508  164B  3068               	movlw	104
  9509  164C  0143               	movlb	3	; select bank3
  9510  164D  0650               	xorwf	_color^(0+384),w
  9511  164E  1D03               	skipz
  9512  164F  2E56               	goto	l5626
  9513  1650  0351               	decf	(_color+1)^(0+384),w
  9514  1651  1D03               	btfss	3,2
  9515  1652  2E56               	goto	l5626
  9516                           
  9517                           ;led.c: 135:         color.H = 0;
  9518  1653  01D0               	clrf	_color^(0+384)
  9519  1654  01D1               	clrf	(_color+1)^(0+384)
  9520                           
  9521                           ;led.c: 136:     } else {
  9522  1655  2E5A               	goto	l1048
  9523  1656                     l5626:	
  9524                           
  9525                           ;led.c: 137:         color.H += 1;
  9526  1656  3001               	movlw	1
  9527  1657  07D0               	addwf	_color^(0+384),f
  9528  1658  3000               	movlw	0
  9529  1659  3DD1               	addwfc	(_color+1)^(0+384),f
  9530  165A                     l1048:	
  9531                           ;led.c: 138:     }
  9532                           
  9533                           
  9534                           ;led.c: 139:     fadeAmmount -= 1;
  9535  165A  30FF               	movlw	255
  9536  165B  0142               	movlb	2	; select bank2
  9537  165C  07EA               	addwf	_fadeAmmount^(0+256),f
  9538  165D  30FF               	movlw	255
  9539  165E  3DEB               	addwfc	(_fadeAmmount+1)^(0+256),f
  9540                           
  9541                           ;led.c: 140:     if(fadeAmmount == 0) {
  9542  165F  086A               	movf	_fadeAmmount^(0+256),w
  9543  1660  046B               	iorwf	(_fadeAmmount+1)^(0+256),w
  9544  1661  1D03               	btfss	3,2
  9545  1662  2E68               	goto	l5634
  9546                           
  9547                           ;led.c: 141:         fadeAmmount = 20;
  9548  1663  3014               	movlw	20
  9549  1664  00EA               	movwf	_fadeAmmount^(0+256)
  9550  1665  3000               	movlw	0
  9551  1666  00EB               	movwf	(_fadeAmmount^(0+256)+1)
  9552                           
  9553                           ;led.c: 142:         changeColor = 0;
  9554  1667  01C5               	clrf	_changeColor^(0+256)
  9555  1668                     l5634:	
  9556                           
  9557                           ;led.c: 144:     LED_setHSL(color);
  9558  1668  30D0               	movlw	low _color
  9559  1669  0086               	movwf	6
  9560  166A  3001               	movlw	high _color
  9561  166B  0087               	movwf	7
  9562  166C  30AF               	movlw	low LED_setHSL@hsl
  9563  166D  0084               	movwf	4
  9564  166E  3000               	movlw	high LED_setHSL@hsl
  9565  166F  0085               	movwf	5
  9566  1670  300A               	movlw	10
  9567  1671  0141               	movlb	1	; select bank1
  9568  1672  00DA               	movwf	??_fadeColor^(0+128)
  9569  1673                     u5810:	
  9570  1673  0016               	moviw fsr1++
  9571  1674  001A               	movwi fsr0++
  9572  1675  0BDA               	decfsz	??_fadeColor^(0+128),f
  9573  1676  2E73               	goto	u5810
  9574  1677  3180  2090         	fcall	_LED_setHSL
  9575  1679  0008               	return
  9576  167A                     __end_of_fadeColor:	
  9577                           
  9578                           	psect	text19
  9579  0090                     __ptext19:	
  9580 ;; *************** function _LED_setHSL *****************
  9581 ;; Defined at:
  9582 ;;		line 97 in file "led.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  hsl            10   15[BANK1 ] struct HSL
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;  v2              4   51[BANK1 ] float 
  9587 ;;  hue             4   47[BANK1 ] float 
  9588 ;;  v1              4   43[BANK1 ] float 
  9589 ;;  rgb             3   55[BANK1 ] struct RGB
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9599 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9600 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9601 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9602 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9603 ;;Total ram usage:       43 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    7
  9606 ;; This function calls:
  9607 ;;		_HueToRGB
  9608 ;;		_LED_setColor
  9609 ;;		___fladd
  9610 ;;		___fldiv
  9611 ;;		___fleq
  9612 ;;		___flge
  9613 ;;		___flmul
  9614 ;;		___flsub
  9615 ;;		___fltol
  9616 ;;		___xxtofl
  9617 ;; This function is called by:
  9618 ;;		_fadeColor
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           
  9623                           ;psect for function _LED_setHSL
  9624  0090                     _LED_setHSL:	
  9625                           
  9626                           ;led.c: 98:  struct RGB rgb;;led.c: 100:  if (hsl.S == 0)
  9627                           
  9628                           ;incstack = 0
  9629                           ; Regs used in _LED_setHSL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9630  0090  3002               	movlw	2
  9631  0091  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
  9632  0092  0086               	movwf	6
  9633  0093  0187               	clrf	7
  9634  0094  3F40               	moviw [0]fsr1
  9635  0095  0140               	movlb	0	; select bank0
  9636  0096  00A0               	movwf	___fleq@ff1
  9637  0097  3F41               	moviw [1]fsr1
  9638  0098  00A1               	movwf	___fleq@ff1+1
  9639  0099  3F42               	moviw [2]fsr1
  9640  009A  00A2               	movwf	___fleq@ff1+2
  9641  009B  3F43               	moviw [3]fsr1
  9642  009C  00A3               	movwf	___fleq@ff1+3
  9643  009D  3000               	movlw	0
  9644  009E  00A7               	movwf	___fleq@ff2+3
  9645  009F  3000               	movlw	0
  9646  00A0  00A6               	movwf	___fleq@ff2+2
  9647  00A1  3000               	movlw	0
  9648  00A2  00A5               	movwf	___fleq@ff2+1
  9649  00A3  3000               	movlw	0
  9650  00A4  00A4               	movwf	___fleq@ff2
  9651  00A5  3195  2594  3180   	fcall	___fleq
  9652  00A8  1C03               	btfss	3,0
  9653  00A9  28E8               	goto	l5380
  9654                           
  9655                           ;led.c: 101:  {;led.c: 102:   rgb.R = rgb.G = rgb.B = (unsigned char)(hsl.L * 255);
  9656  00AA  3001               	movlw	1
  9657  00AB  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
  9658  00AC  0086               	movwf	6
  9659  00AD  0187               	clrf	7
  9660  00AE  3002               	movlw	2
  9661  00AF  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
  9662  00B0  0084               	movwf	4
  9663  00B1  0185               	clrf	5
  9664  00B2  0141               	movlb	1	; select bank1
  9665  00B3  0838               	movf	((LED_setHSL@hsl+3)^(0+128)+6),w
  9666  00B4  0140               	movlb	0	; select bank0
  9667  00B5  00C4               	movwf	___flmul@a+3
  9668  00B6  0141               	movlb	1	; select bank1
  9669  00B7  0837               	movf	((LED_setHSL@hsl+2)^(0+128)+6),w
  9670  00B8  0140               	movlb	0	; select bank0
  9671  00B9  00C3               	movwf	___flmul@a+2
  9672  00BA  0141               	movlb	1	; select bank1
  9673  00BB  0836               	movf	((LED_setHSL@hsl+1)^(0+128)+6),w
  9674  00BC  0140               	movlb	0	; select bank0
  9675  00BD  00C2               	movwf	___flmul@a+1
  9676  00BE  0141               	movlb	1	; select bank1
  9677  00BF  0835               	movf	(LED_setHSL@hsl^(0+128)+6),w
  9678  00C0  0140               	movlb	0	; select bank0
  9679  00C1  00C1               	movwf	___flmul@a
  9680  00C2  3043               	movlw	67
  9681  00C3  00C0               	movwf	___flmul@b+3
  9682  00C4  307F               	movlw	127
  9683  00C5  00BF               	movwf	___flmul@b+2
  9684  00C6  3000               	movlw	0
  9685  00C7  00BE               	movwf	___flmul@b+1
  9686  00C8  3000               	movlw	0
  9687  00C9  00BD               	movwf	___flmul@b
  9688  00CA  3183  23EE  3180   	fcall	___flmul
  9689  00CD  0140               	movlb	0	; select bank0
  9690  00CE  0840               	movf	?___flmul+3,w
  9691  00CF  0141               	movlb	1	; select bank1
  9692  00D0  00A7               	movwf	(___fltol@f1+3)^(0+128)
  9693  00D1  0140               	movlb	0	; select bank0
  9694  00D2  083F               	movf	?___flmul+2,w
  9695  00D3  0141               	movlb	1	; select bank1
  9696  00D4  00A6               	movwf	(___fltol@f1+2)^(0+128)
  9697  00D5  0140               	movlb	0	; select bank0
  9698  00D6  083E               	movf	?___flmul+1,w
  9699  00D7  0141               	movlb	1	; select bank1
  9700  00D8  00A5               	movwf	(___fltol@f1+1)^(0+128)
  9701  00D9  0140               	movlb	0	; select bank0
  9702  00DA  083D               	movf	?___flmul,w
  9703  00DB  0141               	movlb	1	; select bank1
  9704  00DC  00A4               	movwf	___fltol@f1^(0+128)
  9705  00DD  3197  2724  3180   	fcall	___fltol
  9706  00E0  0141               	movlb	1	; select bank1
  9707  00E1  0824               	movf	?___fltol^(0+128),w
  9708  00E2  3F80               	movwi [0]fsr0
  9709  00E3  3FC0               	movwi [0]fsr1
  9710  00E4  00B9               	movwf	??_LED_setHSL^(0+128)
  9711  00E5  0839               	movf	??_LED_setHSL^(0+128),w
  9712  00E6  00D7               	movwf	LED_setHSL@rgb^(0+128)
  9713                           
  9714                           ;led.c: 103:  }
  9715  00E7  2BDD               	goto	l5404
  9716  00E8                     l5380:	
  9717                           
  9718                           ;led.c: 105:  {;led.c: 106:   float v1, v2;;led.c: 107:   float hue = (float)hsl.H / 360
      +                          ;
  9719  00E8  3043               	movlw	67
  9720  00E9  0140               	movlb	0	; select bank0
  9721  00EA  00B1               	movwf	___fldiv@a+3
  9722  00EB  30B4               	movlw	180
  9723  00EC  00B0               	movwf	___fldiv@a+2
  9724  00ED  3000               	movlw	0
  9725  00EE  00AF               	movwf	___fldiv@a+1
  9726  00EF  3000               	movlw	0
  9727  00F0  00AE               	movwf	___fldiv@a
  9728  00F1  0141               	movlb	1	; select bank1
  9729  00F2  082F               	movf	LED_setHSL@hsl^(0+128),w
  9730  00F3  0140               	movlb	0	; select bank0
  9731  00F4  00A0               	movwf	___xxtofl@val
  9732  00F5  0141               	movlb	1	; select bank1
  9733  00F6  0830               	movf	(LED_setHSL@hsl+1)^(0+128),w
  9734  00F7  0140               	movlb	0	; select bank0
  9735  00F8  00A1               	movwf	___xxtofl@val+1
  9736  00F9  0D89               	rlf	9,f
  9737  00FA  3B89               	subwfb	9,f
  9738  00FB  0989               	comf	9,f
  9739  00FC  00A2               	movwf	___xxtofl@val+2
  9740  00FD  00A3               	movwf	___xxtofl@val+3
  9741  00FE  3001               	movlw	1
  9742  00FF  3189  2103  3180   	fcall	___xxtofl
  9743  0102  0140               	movlb	0	; select bank0
  9744  0103  0823               	movf	?___xxtofl+3,w
  9745  0104  00B5               	movwf	___fldiv@b+3
  9746  0105  0822               	movf	?___xxtofl+2,w
  9747  0106  00B4               	movwf	___fldiv@b+2
  9748  0107  0821               	movf	?___xxtofl+1,w
  9749  0108  00B3               	movwf	___fldiv@b+1
  9750  0109  0820               	movf	?___xxtofl,w
  9751  010A  00B2               	movwf	___fldiv@b
  9752  010B  318C  24A4  3180   	fcall	___fldiv
  9753  010E  0140               	movlb	0	; select bank0
  9754  010F  0831               	movf	?___fldiv+3,w
  9755  0110  0141               	movlb	1	; select bank1
  9756  0111  00D2               	movwf	(LED_setHSL@hue+3)^(0+128)
  9757  0112  0140               	movlb	0	; select bank0
  9758  0113  0830               	movf	?___fldiv+2,w
  9759  0114  0141               	movlb	1	; select bank1
  9760  0115  00D1               	movwf	(LED_setHSL@hue+2)^(0+128)
  9761  0116  0140               	movlb	0	; select bank0
  9762  0117  082F               	movf	?___fldiv+1,w
  9763  0118  0141               	movlb	1	; select bank1
  9764  0119  00D0               	movwf	(LED_setHSL@hue+1)^(0+128)
  9765  011A  0140               	movlb	0	; select bank0
  9766  011B  082E               	movf	?___fldiv,w
  9767  011C  0141               	movlb	1	; select bank1
  9768  011D  00CF               	movwf	LED_setHSL@hue^(0+128)
  9769                           
  9770                           ;led.c: 109:   v2 = (hsl.L < 0.5) ? (hsl.L * (1 + hsl.S)) : ((hsl.L + hsl.S) - (hsl.L * 
      +                          hsl.S));
  9771  011E  3006               	movlw	6
  9772  011F  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
  9773  0120  0086               	movwf	6
  9774  0121  0187               	clrf	7
  9775  0122  3F40               	moviw [0]fsr1
  9776  0123  0140               	movlb	0	; select bank0
  9777  0124  00D7               	movwf	___flge@ff1
  9778  0125  3F41               	moviw [1]fsr1
  9779  0126  00D8               	movwf	___flge@ff1+1
  9780  0127  3F42               	moviw [2]fsr1
  9781  0128  00D9               	movwf	___flge@ff1+2
  9782  0129  3F43               	moviw [3]fsr1
  9783  012A  00DA               	movwf	___flge@ff1+3
  9784  012B  303F               	movlw	63
  9785  012C  00DE               	movwf	___flge@ff2+3
  9786  012D  3000               	movlw	0
  9787  012E  00DD               	movwf	___flge@ff2+2
  9788  012F  3000               	movlw	0
  9789  0130  00DC               	movwf	___flge@ff2+1
  9790  0131  3000               	movlw	0
  9791  0132  00DB               	movwf	___flge@ff2
  9792  0133  3188  2087  3180   	fcall	___flge
  9793  0136  1C03               	btfss	3,0
  9794  0137  29AB               	goto	l5386
  9795  0138  3002               	movlw	2
  9796  0139  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
  9797  013A  0086               	movwf	6
  9798  013B  0187               	clrf	7
  9799  013C  3F40               	moviw [0]fsr1
  9800  013D  0140               	movlb	0	; select bank0
  9801  013E  00A9               	movwf	___fladd@b
  9802  013F  3F41               	moviw [1]fsr1
  9803  0140  00AA               	movwf	___fladd@b+1
  9804  0141  3F42               	moviw [2]fsr1
  9805  0142  00AB               	movwf	___fladd@b+2
  9806  0143  3F43               	moviw [3]fsr1
  9807  0144  00AC               	movwf	___fladd@b+3
  9808  0145  3006               	movlw	6
  9809  0146  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
  9810  0147  0086               	movwf	6
  9811  0148  0187               	clrf	7
  9812  0149  3F40               	moviw [0]fsr1
  9813  014A  00AD               	movwf	___fladd@a
  9814  014B  3F41               	moviw [1]fsr1
  9815  014C  00AE               	movwf	___fladd@a+1
  9816  014D  3F42               	moviw [2]fsr1
  9817  014E  00AF               	movwf	___fladd@a+2
  9818  014F  3F43               	moviw [3]fsr1
  9819  0150  00B0               	movwf	___fladd@a+3
  9820  0151  318E  261E  3180   	fcall	___fladd
  9821  0154  0140               	movlb	0	; select bank0
  9822  0155  082C               	movf	?___fladd+3,w
  9823  0156  0141               	movlb	1	; select bank1
  9824  0157  00BE               	movwf	(_LED_setHSL$2788+3)^(0+128)
  9825  0158  0140               	movlb	0	; select bank0
  9826  0159  082B               	movf	?___fladd+2,w
  9827  015A  0141               	movlb	1	; select bank1
  9828  015B  00BD               	movwf	(_LED_setHSL$2788+2)^(0+128)
  9829  015C  0140               	movlb	0	; select bank0
  9830  015D  082A               	movf	?___fladd+1,w
  9831  015E  0141               	movlb	1	; select bank1
  9832  015F  00BC               	movwf	(_LED_setHSL$2788+1)^(0+128)
  9833  0160  0140               	movlb	0	; select bank0
  9834  0161  0829               	movf	?___fladd,w
  9835  0162  0141               	movlb	1	; select bank1
  9836  0163  00BB               	movwf	_LED_setHSL$2788^(0+128)
  9837  0164  3002               	movlw	2
  9838  0165  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
  9839  0166  0086               	movwf	6
  9840  0167  0187               	clrf	7
  9841  0168  3F40               	moviw [0]fsr1
  9842  0169  0140               	movlb	0	; select bank0
  9843  016A  00BD               	movwf	___flmul@b
  9844  016B  3F41               	moviw [1]fsr1
  9845  016C  00BE               	movwf	___flmul@b+1
  9846  016D  3F42               	moviw [2]fsr1
  9847  016E  00BF               	movwf	___flmul@b+2
  9848  016F  3F43               	moviw [3]fsr1
  9849  0170  00C0               	movwf	___flmul@b+3
  9850  0171  3006               	movlw	6
  9851  0172  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
  9852  0173  0086               	movwf	6
  9853  0174  0187               	clrf	7
  9854  0175  3F40               	moviw [0]fsr1
  9855  0176  00C1               	movwf	___flmul@a
  9856  0177  3F41               	moviw [1]fsr1
  9857  0178  00C2               	movwf	___flmul@a+1
  9858  0179  3F42               	moviw [2]fsr1
  9859  017A  00C3               	movwf	___flmul@a+2
  9860  017B  3F43               	moviw [3]fsr1
  9861  017C  00C4               	movwf	___flmul@a+3
  9862  017D  3183  23EE  3180   	fcall	___flmul
  9863  0180  0140               	movlb	0	; select bank0
  9864  0181  0840               	movf	?___flmul+3,w
  9865  0182  00DA               	movwf	___flsub@a+3
  9866  0183  083F               	movf	?___flmul+2,w
  9867  0184  00D9               	movwf	___flsub@a+2
  9868  0185  083E               	movf	?___flmul+1,w
  9869  0186  00D8               	movwf	___flsub@a+1
  9870  0187  083D               	movf	?___flmul,w
  9871  0188  00D7               	movwf	___flsub@a
  9872  0189  0141               	movlb	1	; select bank1
  9873  018A  083E               	movf	(_LED_setHSL$2788+3)^(0+128),w
  9874  018B  0140               	movlb	0	; select bank0
  9875  018C  00DE               	movwf	___flsub@b+3
  9876  018D  0141               	movlb	1	; select bank1
  9877  018E  083D               	movf	(_LED_setHSL$2788+2)^(0+128),w
  9878  018F  0140               	movlb	0	; select bank0
  9879  0190  00DD               	movwf	___flsub@b+2
  9880  0191  0141               	movlb	1	; select bank1
  9881  0192  083C               	movf	(_LED_setHSL$2788+1)^(0+128),w
  9882  0193  0140               	movlb	0	; select bank0
  9883  0194  00DC               	movwf	___flsub@b+1
  9884  0195  0141               	movlb	1	; select bank1
  9885  0196  083B               	movf	_LED_setHSL$2788^(0+128),w
  9886  0197  0140               	movlb	0	; select bank0
  9887  0198  00DB               	movwf	___flsub@b
  9888  0199  3192  2278  3180   	fcall	___flsub
  9889  019C  0140               	movlb	0	; select bank0
  9890  019D  085A               	movf	?___flsub+3,w
  9891  019E  0141               	movlb	1	; select bank1
  9892  019F  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
  9893  01A0  0140               	movlb	0	; select bank0
  9894  01A1  0859               	movf	?___flsub+2,w
  9895  01A2  0141               	movlb	1	; select bank1
  9896  01A3  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
  9897  01A4  0140               	movlb	0	; select bank0
  9898  01A5  0858               	movf	?___flsub+1,w
  9899  01A6  0141               	movlb	1	; select bank1
  9900  01A7  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
  9901  01A8  0140               	movlb	0	; select bank0
  9902  01A9  0857               	movf	?___flsub,w
  9903  01AA  29E9               	goto	L1
  9904  01AB                     l5386:	
  9905  01AB  3006               	movlw	6
  9906  01AC  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
  9907  01AD  0086               	movwf	6
  9908  01AE  0187               	clrf	7
  9909  01AF  3F40               	moviw [0]fsr1
  9910  01B0  0140               	movlb	0	; select bank0
  9911  01B1  00BD               	movwf	___flmul@b
  9912  01B2  3F41               	moviw [1]fsr1
  9913  01B3  00BE               	movwf	___flmul@b+1
  9914  01B4  3F42               	moviw [2]fsr1
  9915  01B5  00BF               	movwf	___flmul@b+2
  9916  01B6  3F43               	moviw [3]fsr1
  9917  01B7  00C0               	movwf	___flmul@b+3
  9918  01B8  303F               	movlw	63
  9919  01B9  00AC               	movwf	___fladd@b+3
  9920  01BA  3080               	movlw	128
  9921  01BB  00AB               	movwf	___fladd@b+2
  9922  01BC  3000               	movlw	0
  9923  01BD  00AA               	movwf	___fladd@b+1
  9924  01BE  3000               	movlw	0
  9925  01BF  00A9               	movwf	___fladd@b
  9926  01C0  3002               	movlw	2
  9927  01C1  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
  9928  01C2  0086               	movwf	6
  9929  01C3  0187               	clrf	7
  9930  01C4  3F40               	moviw [0]fsr1
  9931  01C5  00AD               	movwf	___fladd@a
  9932  01C6  3F41               	moviw [1]fsr1
  9933  01C7  00AE               	movwf	___fladd@a+1
  9934  01C8  3F42               	moviw [2]fsr1
  9935  01C9  00AF               	movwf	___fladd@a+2
  9936  01CA  3F43               	moviw [3]fsr1
  9937  01CB  00B0               	movwf	___fladd@a+3
  9938  01CC  318E  261E  3180   	fcall	___fladd
  9939  01CF  0140               	movlb	0	; select bank0
  9940  01D0  082C               	movf	?___fladd+3,w
  9941  01D1  00C4               	movwf	___flmul@a+3
  9942  01D2  082B               	movf	?___fladd+2,w
  9943  01D3  00C3               	movwf	___flmul@a+2
  9944  01D4  082A               	movf	?___fladd+1,w
  9945  01D5  00C2               	movwf	___flmul@a+1
  9946  01D6  0829               	movf	?___fladd,w
  9947  01D7  00C1               	movwf	___flmul@a
  9948  01D8  3183  23EE  3180   	fcall	___flmul
  9949  01DB  0140               	movlb	0	; select bank0
  9950  01DC  0840               	movf	?___flmul+3,w
  9951  01DD  0141               	movlb	1	; select bank1
  9952  01DE  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
  9953  01DF  0140               	movlb	0	; select bank0
  9954  01E0  083F               	movf	?___flmul+2,w
  9955  01E1  0141               	movlb	1	; select bank1
  9956  01E2  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
  9957  01E3  0140               	movlb	0	; select bank0
  9958  01E4  083E               	movf	?___flmul+1,w
  9959  01E5  0141               	movlb	1	; select bank1
  9960  01E6  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
  9961  01E7  0140               	movlb	0	; select bank0
  9962  01E8  083D               	movf	?___flmul,w
  9963  01E9                     L1:	
  9964  01E9  0141               	movlb	1	; select bank1
  9965  01EA  00D3               	movwf	LED_setHSL@v2^(0+128)
  9966                           
  9967                           ;led.c: 110:   v1 = 2 * hsl.L - v2;
  9968  01EB  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
  9969  01EC  0140               	movlb	0	; select bank0
  9970  01ED  00DA               	movwf	___flsub@a+3
  9971  01EE  0141               	movlb	1	; select bank1
  9972  01EF  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
  9973  01F0  0140               	movlb	0	; select bank0
  9974  01F1  00D9               	movwf	___flsub@a+2
  9975  01F2  0141               	movlb	1	; select bank1
  9976  01F3  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
  9977  01F4  0140               	movlb	0	; select bank0
  9978  01F5  00D8               	movwf	___flsub@a+1
  9979  01F6  0141               	movlb	1	; select bank1
  9980  01F7  0853               	movf	LED_setHSL@v2^(0+128),w
  9981  01F8  0140               	movlb	0	; select bank0
  9982  01F9  00D7               	movwf	___flsub@a
  9983  01FA  3040               	movlw	64
  9984  01FB  00C0               	movwf	___flmul@b+3
  9985  01FC  3000               	movlw	0
  9986  01FD  00BF               	movwf	___flmul@b+2
  9987  01FE  3000               	movlw	0
  9988  01FF  00BE               	movwf	___flmul@b+1
  9989  0200  3000               	movlw	0
  9990  0201  00BD               	movwf	___flmul@b
  9991  0202  3006               	movlw	6
  9992  0203  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
  9993  0204  0086               	movwf	6
  9994  0205  0187               	clrf	7
  9995  0206  3F40               	moviw [0]fsr1
  9996  0207  00C1               	movwf	___flmul@a
  9997  0208  3F41               	moviw [1]fsr1
  9998  0209  00C2               	movwf	___flmul@a+1
  9999  020A  3F42               	moviw [2]fsr1
 10000  020B  00C3               	movwf	___flmul@a+2
 10001  020C  3F43               	moviw [3]fsr1
 10002  020D  00C4               	movwf	___flmul@a+3
 10003  020E  3183  23EE  3180   	fcall	___flmul
 10004  0211  0140               	movlb	0	; select bank0
 10005  0212  0840               	movf	?___flmul+3,w
 10006  0213  00DE               	movwf	___flsub@b+3
 10007  0214  083F               	movf	?___flmul+2,w
 10008  0215  00DD               	movwf	___flsub@b+2
 10009  0216  083E               	movf	?___flmul+1,w
 10010  0217  00DC               	movwf	___flsub@b+1
 10011  0218  083D               	movf	?___flmul,w
 10012  0219  00DB               	movwf	___flsub@b
 10013  021A  3192  2278  3180   	fcall	___flsub
 10014  021D  0140               	movlb	0	; select bank0
 10015  021E  085A               	movf	?___flsub+3,w
 10016  021F  0141               	movlb	1	; select bank1
 10017  0220  00CE               	movwf	(LED_setHSL@v1+3)^(0+128)
 10018  0221  0140               	movlb	0	; select bank0
 10019  0222  0859               	movf	?___flsub+2,w
 10020  0223  0141               	movlb	1	; select bank1
 10021  0224  00CD               	movwf	(LED_setHSL@v1+2)^(0+128)
 10022  0225  0140               	movlb	0	; select bank0
 10023  0226  0858               	movf	?___flsub+1,w
 10024  0227  0141               	movlb	1	; select bank1
 10025  0228  00CC               	movwf	(LED_setHSL@v1+1)^(0+128)
 10026  0229  0140               	movlb	0	; select bank0
 10027  022A  0857               	movf	?___flsub,w
 10028  022B  0141               	movlb	1	; select bank1
 10029  022C  00CB               	movwf	LED_setHSL@v1^(0+128)
 10030                           
 10031                           ;led.c: 112:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 10032  022D  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 10033  022E  0140               	movlb	0	; select bank0
 10034  022F  00B0               	movwf	___fladd@a+3
 10035  0230  0141               	movlb	1	; select bank1
 10036  0231  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 10037  0232  0140               	movlb	0	; select bank0
 10038  0233  00AF               	movwf	___fladd@a+2
 10039  0234  0141               	movlb	1	; select bank1
 10040  0235  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 10041  0236  0140               	movlb	0	; select bank0
 10042  0237  00AE               	movwf	___fladd@a+1
 10043  0238  0141               	movlb	1	; select bank1
 10044  0239  084F               	movf	LED_setHSL@hue^(0+128),w
 10045  023A  0140               	movlb	0	; select bank0
 10046  023B  00AD               	movwf	___fladd@a
 10047  023C  303E               	movlw	62
 10048  023D  00AC               	movwf	___fladd@b+3
 10049  023E  30AA               	movlw	170
 10050  023F  00AB               	movwf	___fladd@b+2
 10051  0240  30AA               	movlw	170
 10052  0241  00AA               	movwf	___fladd@b+1
 10053  0242  30AB               	movlw	171
 10054  0243  00A9               	movwf	___fladd@b
 10055  0244  318E  261E  3180   	fcall	___fladd
 10056  0247  0140               	movlb	0	; select bank0
 10057  0248  082C               	movf	?___fladd+3,w
 10058  0249  0141               	movlb	1	; select bank1
 10059  024A  00C6               	movwf	(_LED_setHSL$2789+3)^(0+128)
 10060  024B  0140               	movlb	0	; select bank0
 10061  024C  082B               	movf	?___fladd+2,w
 10062  024D  0141               	movlb	1	; select bank1
 10063  024E  00C5               	movwf	(_LED_setHSL$2789+2)^(0+128)
 10064  024F  0140               	movlb	0	; select bank0
 10065  0250  082A               	movf	?___fladd+1,w
 10066  0251  0141               	movlb	1	; select bank1
 10067  0252  00C4               	movwf	(_LED_setHSL$2789+1)^(0+128)
 10068  0253  0140               	movlb	0	; select bank0
 10069  0254  0829               	movf	?___fladd,w
 10070  0255  0141               	movlb	1	; select bank1
 10071  0256  00C3               	movwf	_LED_setHSL$2789^(0+128)
 10072                           
 10073                           ;led.c: 112:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 10074  0257  0846               	movf	(_LED_setHSL$2789+3)^(0+128),w
 10075  0258  0140               	movlb	0	; select bank0
 10076  0259  00EE               	movwf	HueToRGB@vH+3
 10077  025A  0141               	movlb	1	; select bank1
 10078  025B  0845               	movf	(_LED_setHSL$2789+2)^(0+128),w
 10079  025C  0140               	movlb	0	; select bank0
 10080  025D  00ED               	movwf	HueToRGB@vH+2
 10081  025E  0141               	movlb	1	; select bank1
 10082  025F  0844               	movf	(_LED_setHSL$2789+1)^(0+128),w
 10083  0260  0140               	movlb	0	; select bank0
 10084  0261  00EC               	movwf	HueToRGB@vH+1
 10085  0262  0141               	movlb	1	; select bank1
 10086  0263  0843               	movf	_LED_setHSL$2789^(0+128),w
 10087  0264  0140               	movlb	0	; select bank0
 10088  0265  00EB               	movwf	HueToRGB@vH
 10089  0266  0141               	movlb	1	; select bank1
 10090  0267  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 10091  0268  0140               	movlb	0	; select bank0
 10092  0269  00EA               	movwf	HueToRGB@v2+3
 10093  026A  0141               	movlb	1	; select bank1
 10094  026B  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 10095  026C  0140               	movlb	0	; select bank0
 10096  026D  00E9               	movwf	HueToRGB@v2+2
 10097  026E  0141               	movlb	1	; select bank1
 10098  026F  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 10099  0270  0140               	movlb	0	; select bank0
 10100  0271  00E8               	movwf	HueToRGB@v2+1
 10101  0272  0141               	movlb	1	; select bank1
 10102  0273  0853               	movf	LED_setHSL@v2^(0+128),w
 10103  0274  0140               	movlb	0	; select bank0
 10104  0275  00E7               	movwf	HueToRGB@v2
 10105  0276  0141               	movlb	1	; select bank1
 10106  0277  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 10107  0278  0140               	movlb	0	; select bank0
 10108  0279  00E6               	movwf	HueToRGB@v1+3
 10109  027A  0141               	movlb	1	; select bank1
 10110  027B  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 10111  027C  0140               	movlb	0	; select bank0
 10112  027D  00E5               	movwf	HueToRGB@v1+2
 10113  027E  0141               	movlb	1	; select bank1
 10114  027F  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 10115  0280  0140               	movlb	0	; select bank0
 10116  0281  00E4               	movwf	HueToRGB@v1+1
 10117  0282  0141               	movlb	1	; select bank1
 10118  0283  084B               	movf	LED_setHSL@v1^(0+128),w
 10119  0284  0140               	movlb	0	; select bank0
 10120  0285  00E3               	movwf	HueToRGB@v1
 10121  0286  3186  261A  3180   	fcall	_HueToRGB
 10122  0289  0140               	movlb	0	; select bank0
 10123  028A  0866               	movf	?_HueToRGB+3,w
 10124  028B  0141               	movlb	1	; select bank1
 10125  028C  00CA               	movwf	(_LED_setHSL$2790+3)^(0+128)
 10126  028D  0140               	movlb	0	; select bank0
 10127  028E  0865               	movf	?_HueToRGB+2,w
 10128  028F  0141               	movlb	1	; select bank1
 10129  0290  00C9               	movwf	(_LED_setHSL$2790+2)^(0+128)
 10130  0291  0140               	movlb	0	; select bank0
 10131  0292  0864               	movf	?_HueToRGB+1,w
 10132  0293  0141               	movlb	1	; select bank1
 10133  0294  00C8               	movwf	(_LED_setHSL$2790+1)^(0+128)
 10134  0295  0140               	movlb	0	; select bank0
 10135  0296  0863               	movf	?_HueToRGB,w
 10136  0297  0141               	movlb	1	; select bank1
 10137  0298  00C7               	movwf	_LED_setHSL$2790^(0+128)
 10138                           
 10139                           ;led.c: 112:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 10140  0299  084A               	movf	(_LED_setHSL$2790+3)^(0+128),w
 10141  029A  0140               	movlb	0	; select bank0
 10142  029B  00C4               	movwf	___flmul@a+3
 10143  029C  0141               	movlb	1	; select bank1
 10144  029D  0849               	movf	(_LED_setHSL$2790+2)^(0+128),w
 10145  029E  0140               	movlb	0	; select bank0
 10146  029F  00C3               	movwf	___flmul@a+2
 10147  02A0  0141               	movlb	1	; select bank1
 10148  02A1  0848               	movf	(_LED_setHSL$2790+1)^(0+128),w
 10149  02A2  0140               	movlb	0	; select bank0
 10150  02A3  00C2               	movwf	___flmul@a+1
 10151  02A4  0141               	movlb	1	; select bank1
 10152  02A5  0847               	movf	_LED_setHSL$2790^(0+128),w
 10153  02A6  0140               	movlb	0	; select bank0
 10154  02A7  00C1               	movwf	___flmul@a
 10155  02A8  3043               	movlw	67
 10156  02A9  00C0               	movwf	___flmul@b+3
 10157  02AA  307F               	movlw	127
 10158  02AB  00BF               	movwf	___flmul@b+2
 10159  02AC  3000               	movlw	0
 10160  02AD  00BE               	movwf	___flmul@b+1
 10161  02AE  3000               	movlw	0
 10162  02AF  00BD               	movwf	___flmul@b
 10163  02B0  3183  23EE  3180   	fcall	___flmul
 10164  02B3  0140               	movlb	0	; select bank0
 10165  02B4  0840               	movf	?___flmul+3,w
 10166  02B5  0141               	movlb	1	; select bank1
 10167  02B6  00A7               	movwf	(___fltol@f1+3)^(0+128)
 10168  02B7  0140               	movlb	0	; select bank0
 10169  02B8  083F               	movf	?___flmul+2,w
 10170  02B9  0141               	movlb	1	; select bank1
 10171  02BA  00A6               	movwf	(___fltol@f1+2)^(0+128)
 10172  02BB  0140               	movlb	0	; select bank0
 10173  02BC  083E               	movf	?___flmul+1,w
 10174  02BD  0141               	movlb	1	; select bank1
 10175  02BE  00A5               	movwf	(___fltol@f1+1)^(0+128)
 10176  02BF  0140               	movlb	0	; select bank0
 10177  02C0  083D               	movf	?___flmul,w
 10178  02C1  0141               	movlb	1	; select bank1
 10179  02C2  00A4               	movwf	___fltol@f1^(0+128)
 10180  02C3  3197  2724  3180   	fcall	___fltol
 10181  02C6  0141               	movlb	1	; select bank1
 10182  02C7  0824               	movf	?___fltol^(0+128),w
 10183  02C8  00B9               	movwf	??_LED_setHSL^(0+128)
 10184  02C9  0839               	movf	??_LED_setHSL^(0+128),w
 10185  02CA  00D7               	movwf	LED_setHSL@rgb^(0+128)
 10186                           
 10187                           ;led.c: 113:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 10188  02CB  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 10189  02CC  0140               	movlb	0	; select bank0
 10190  02CD  00EE               	movwf	HueToRGB@vH+3
 10191  02CE  0141               	movlb	1	; select bank1
 10192  02CF  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 10193  02D0  0140               	movlb	0	; select bank0
 10194  02D1  00ED               	movwf	HueToRGB@vH+2
 10195  02D2  0141               	movlb	1	; select bank1
 10196  02D3  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 10197  02D4  0140               	movlb	0	; select bank0
 10198  02D5  00EC               	movwf	HueToRGB@vH+1
 10199  02D6  0141               	movlb	1	; select bank1
 10200  02D7  084F               	movf	LED_setHSL@hue^(0+128),w
 10201  02D8  0140               	movlb	0	; select bank0
 10202  02D9  00EB               	movwf	HueToRGB@vH
 10203  02DA  0141               	movlb	1	; select bank1
 10204  02DB  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 10205  02DC  0140               	movlb	0	; select bank0
 10206  02DD  00EA               	movwf	HueToRGB@v2+3
 10207  02DE  0141               	movlb	1	; select bank1
 10208  02DF  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 10209  02E0  0140               	movlb	0	; select bank0
 10210  02E1  00E9               	movwf	HueToRGB@v2+2
 10211  02E2  0141               	movlb	1	; select bank1
 10212  02E3  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 10213  02E4  0140               	movlb	0	; select bank0
 10214  02E5  00E8               	movwf	HueToRGB@v2+1
 10215  02E6  0141               	movlb	1	; select bank1
 10216  02E7  0853               	movf	LED_setHSL@v2^(0+128),w
 10217  02E8  0140               	movlb	0	; select bank0
 10218  02E9  00E7               	movwf	HueToRGB@v2
 10219  02EA  0141               	movlb	1	; select bank1
 10220  02EB  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 10221  02EC  0140               	movlb	0	; select bank0
 10222  02ED  00E6               	movwf	HueToRGB@v1+3
 10223  02EE  0141               	movlb	1	; select bank1
 10224  02EF  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 10225  02F0  0140               	movlb	0	; select bank0
 10226  02F1  00E5               	movwf	HueToRGB@v1+2
 10227  02F2  0141               	movlb	1	; select bank1
 10228  02F3  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 10229  02F4  0140               	movlb	0	; select bank0
 10230  02F5  00E4               	movwf	HueToRGB@v1+1
 10231  02F6  0141               	movlb	1	; select bank1
 10232  02F7  084B               	movf	LED_setHSL@v1^(0+128),w
 10233  02F8  0140               	movlb	0	; select bank0
 10234  02F9  00E3               	movwf	HueToRGB@v1
 10235  02FA  3186  261A  3180   	fcall	_HueToRGB
 10236  02FD  0140               	movlb	0	; select bank0
 10237  02FE  0866               	movf	?_HueToRGB+3,w
 10238  02FF  0141               	movlb	1	; select bank1
 10239  0300  00C2               	movwf	(_LED_setHSL$2791+3)^(0+128)
 10240  0301  0140               	movlb	0	; select bank0
 10241  0302  0865               	movf	?_HueToRGB+2,w
 10242  0303  0141               	movlb	1	; select bank1
 10243  0304  00C1               	movwf	(_LED_setHSL$2791+2)^(0+128)
 10244  0305  0140               	movlb	0	; select bank0
 10245  0306  0864               	movf	?_HueToRGB+1,w
 10246  0307  0141               	movlb	1	; select bank1
 10247  0308  00C0               	movwf	(_LED_setHSL$2791+1)^(0+128)
 10248  0309  0140               	movlb	0	; select bank0
 10249  030A  0863               	movf	?_HueToRGB,w
 10250  030B  0141               	movlb	1	; select bank1
 10251  030C  00BF               	movwf	_LED_setHSL$2791^(0+128)
 10252                           
 10253                           ;led.c: 113:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 10254  030D  0842               	movf	(_LED_setHSL$2791+3)^(0+128),w
 10255  030E  0140               	movlb	0	; select bank0
 10256  030F  00C4               	movwf	___flmul@a+3
 10257  0310  0141               	movlb	1	; select bank1
 10258  0311  0841               	movf	(_LED_setHSL$2791+2)^(0+128),w
 10259  0312  0140               	movlb	0	; select bank0
 10260  0313  00C3               	movwf	___flmul@a+2
 10261  0314  0141               	movlb	1	; select bank1
 10262  0315  0840               	movf	(_LED_setHSL$2791+1)^(0+128),w
 10263  0316  0140               	movlb	0	; select bank0
 10264  0317  00C2               	movwf	___flmul@a+1
 10265  0318  0141               	movlb	1	; select bank1
 10266  0319  083F               	movf	_LED_setHSL$2791^(0+128),w
 10267  031A  0140               	movlb	0	; select bank0
 10268  031B  00C1               	movwf	___flmul@a
 10269  031C  3043               	movlw	67
 10270  031D  00C0               	movwf	___flmul@b+3
 10271  031E  307F               	movlw	127
 10272  031F  00BF               	movwf	___flmul@b+2
 10273  0320  3000               	movlw	0
 10274  0321  00BE               	movwf	___flmul@b+1
 10275  0322  3000               	movlw	0
 10276  0323  00BD               	movwf	___flmul@b
 10277  0324  3183  23EE  3180   	fcall	___flmul
 10278  0327  0140               	movlb	0	; select bank0
 10279  0328  0840               	movf	?___flmul+3,w
 10280  0329  0141               	movlb	1	; select bank1
 10281  032A  00A7               	movwf	(___fltol@f1+3)^(0+128)
 10282  032B  0140               	movlb	0	; select bank0
 10283  032C  083F               	movf	?___flmul+2,w
 10284  032D  0141               	movlb	1	; select bank1
 10285  032E  00A6               	movwf	(___fltol@f1+2)^(0+128)
 10286  032F  0140               	movlb	0	; select bank0
 10287  0330  083E               	movf	?___flmul+1,w
 10288  0331  0141               	movlb	1	; select bank1
 10289  0332  00A5               	movwf	(___fltol@f1+1)^(0+128)
 10290  0333  0140               	movlb	0	; select bank0
 10291  0334  083D               	movf	?___flmul,w
 10292  0335  0141               	movlb	1	; select bank1
 10293  0336  00A4               	movwf	___fltol@f1^(0+128)
 10294  0337  3197  2724  3180   	fcall	___fltol
 10295  033A  0141               	movlb	1	; select bank1
 10296  033B  0824               	movf	?___fltol^(0+128),w
 10297  033C  00B9               	movwf	??_LED_setHSL^(0+128)
 10298  033D  0839               	movf	??_LED_setHSL^(0+128),w
 10299  033E  00D8               	movwf	(LED_setHSL@rgb^(0+128)+1)
 10300                           
 10301                           ;led.c: 114:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 10302  033F  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 10303  0340  0140               	movlb	0	; select bank0
 10304  0341  00B0               	movwf	___fladd@a+3
 10305  0342  0141               	movlb	1	; select bank1
 10306  0343  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 10307  0344  0140               	movlb	0	; select bank0
 10308  0345  00AF               	movwf	___fladd@a+2
 10309  0346  0141               	movlb	1	; select bank1
 10310  0347  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 10311  0348  0140               	movlb	0	; select bank0
 10312  0349  00AE               	movwf	___fladd@a+1
 10313  034A  0141               	movlb	1	; select bank1
 10314  034B  084F               	movf	LED_setHSL@hue^(0+128),w
 10315  034C  0140               	movlb	0	; select bank0
 10316  034D  00AD               	movwf	___fladd@a
 10317  034E  30BE               	movlw	190
 10318  034F  00AC               	movwf	___fladd@b+3
 10319  0350  30AA               	movlw	170
 10320  0351  00AB               	movwf	___fladd@b+2
 10321  0352  30AA               	movlw	170
 10322  0353  00AA               	movwf	___fladd@b+1
 10323  0354  30AB               	movlw	171
 10324  0355  00A9               	movwf	___fladd@b
 10325  0356  318E  261E  3180   	fcall	___fladd
 10326  0359  0140               	movlb	0	; select bank0
 10327  035A  082C               	movf	?___fladd+3,w
 10328  035B  0141               	movlb	1	; select bank1
 10329  035C  00C6               	movwf	(_LED_setHSL$2789+3)^(0+128)
 10330  035D  0140               	movlb	0	; select bank0
 10331  035E  082B               	movf	?___fladd+2,w
 10332  035F  0141               	movlb	1	; select bank1
 10333  0360  00C5               	movwf	(_LED_setHSL$2789+2)^(0+128)
 10334  0361  0140               	movlb	0	; select bank0
 10335  0362  082A               	movf	?___fladd+1,w
 10336  0363  0141               	movlb	1	; select bank1
 10337  0364  00C4               	movwf	(_LED_setHSL$2789+1)^(0+128)
 10338  0365  0140               	movlb	0	; select bank0
 10339  0366  0829               	movf	?___fladd,w
 10340  0367  0141               	movlb	1	; select bank1
 10341  0368  00C3               	movwf	_LED_setHSL$2789^(0+128)
 10342                           
 10343                           ;led.c: 114:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 10344  0369  0846               	movf	(_LED_setHSL$2789+3)^(0+128),w
 10345  036A  0140               	movlb	0	; select bank0
 10346  036B  00EE               	movwf	HueToRGB@vH+3
 10347  036C  0141               	movlb	1	; select bank1
 10348  036D  0845               	movf	(_LED_setHSL$2789+2)^(0+128),w
 10349  036E  0140               	movlb	0	; select bank0
 10350  036F  00ED               	movwf	HueToRGB@vH+2
 10351  0370  0141               	movlb	1	; select bank1
 10352  0371  0844               	movf	(_LED_setHSL$2789+1)^(0+128),w
 10353  0372  0140               	movlb	0	; select bank0
 10354  0373  00EC               	movwf	HueToRGB@vH+1
 10355  0374  0141               	movlb	1	; select bank1
 10356  0375  0843               	movf	_LED_setHSL$2789^(0+128),w
 10357  0376  0140               	movlb	0	; select bank0
 10358  0377  00EB               	movwf	HueToRGB@vH
 10359  0378  0141               	movlb	1	; select bank1
 10360  0379  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 10361  037A  0140               	movlb	0	; select bank0
 10362  037B  00EA               	movwf	HueToRGB@v2+3
 10363  037C  0141               	movlb	1	; select bank1
 10364  037D  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 10365  037E  0140               	movlb	0	; select bank0
 10366  037F  00E9               	movwf	HueToRGB@v2+2
 10367  0380  0141               	movlb	1	; select bank1
 10368  0381  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 10369  0382  0140               	movlb	0	; select bank0
 10370  0383  00E8               	movwf	HueToRGB@v2+1
 10371  0384  0141               	movlb	1	; select bank1
 10372  0385  0853               	movf	LED_setHSL@v2^(0+128),w
 10373  0386  0140               	movlb	0	; select bank0
 10374  0387  00E7               	movwf	HueToRGB@v2
 10375  0388  0141               	movlb	1	; select bank1
 10376  0389  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 10377  038A  0140               	movlb	0	; select bank0
 10378  038B  00E6               	movwf	HueToRGB@v1+3
 10379  038C  0141               	movlb	1	; select bank1
 10380  038D  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 10381  038E  0140               	movlb	0	; select bank0
 10382  038F  00E5               	movwf	HueToRGB@v1+2
 10383  0390  0141               	movlb	1	; select bank1
 10384  0391  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 10385  0392  0140               	movlb	0	; select bank0
 10386  0393  00E4               	movwf	HueToRGB@v1+1
 10387  0394  0141               	movlb	1	; select bank1
 10388  0395  084B               	movf	LED_setHSL@v1^(0+128),w
 10389  0396  0140               	movlb	0	; select bank0
 10390  0397  00E3               	movwf	HueToRGB@v1
 10391  0398  3186  261A  3180   	fcall	_HueToRGB
 10392  039B  0140               	movlb	0	; select bank0
 10393  039C  0866               	movf	?_HueToRGB+3,w
 10394  039D  0141               	movlb	1	; select bank1
 10395  039E  00CA               	movwf	(_LED_setHSL$2790+3)^(0+128)
 10396  039F  0140               	movlb	0	; select bank0
 10397  03A0  0865               	movf	?_HueToRGB+2,w
 10398  03A1  0141               	movlb	1	; select bank1
 10399  03A2  00C9               	movwf	(_LED_setHSL$2790+2)^(0+128)
 10400  03A3  0140               	movlb	0	; select bank0
 10401  03A4  0864               	movf	?_HueToRGB+1,w
 10402  03A5  0141               	movlb	1	; select bank1
 10403  03A6  00C8               	movwf	(_LED_setHSL$2790+1)^(0+128)
 10404  03A7  0140               	movlb	0	; select bank0
 10405  03A8  0863               	movf	?_HueToRGB,w
 10406  03A9  0141               	movlb	1	; select bank1
 10407  03AA  00C7               	movwf	_LED_setHSL$2790^(0+128)
 10408                           
 10409                           ;led.c: 114:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 10410  03AB  084A               	movf	(_LED_setHSL$2790+3)^(0+128),w
 10411  03AC  0140               	movlb	0	; select bank0
 10412  03AD  00C4               	movwf	___flmul@a+3
 10413  03AE  0141               	movlb	1	; select bank1
 10414  03AF  0849               	movf	(_LED_setHSL$2790+2)^(0+128),w
 10415  03B0  0140               	movlb	0	; select bank0
 10416  03B1  00C3               	movwf	___flmul@a+2
 10417  03B2  0141               	movlb	1	; select bank1
 10418  03B3  0848               	movf	(_LED_setHSL$2790+1)^(0+128),w
 10419  03B4  0140               	movlb	0	; select bank0
 10420  03B5  00C2               	movwf	___flmul@a+1
 10421  03B6  0141               	movlb	1	; select bank1
 10422  03B7  0847               	movf	_LED_setHSL$2790^(0+128),w
 10423  03B8  0140               	movlb	0	; select bank0
 10424  03B9  00C1               	movwf	___flmul@a
 10425  03BA  3043               	movlw	67
 10426  03BB  00C0               	movwf	___flmul@b+3
 10427  03BC  307F               	movlw	127
 10428  03BD  00BF               	movwf	___flmul@b+2
 10429  03BE  3000               	movlw	0
 10430  03BF  00BE               	movwf	___flmul@b+1
 10431  03C0  3000               	movlw	0
 10432  03C1  00BD               	movwf	___flmul@b
 10433  03C2  3183  23EE  3180   	fcall	___flmul
 10434  03C5  0140               	movlb	0	; select bank0
 10435  03C6  0840               	movf	?___flmul+3,w
 10436  03C7  0141               	movlb	1	; select bank1
 10437  03C8  00A7               	movwf	(___fltol@f1+3)^(0+128)
 10438  03C9  0140               	movlb	0	; select bank0
 10439  03CA  083F               	movf	?___flmul+2,w
 10440  03CB  0141               	movlb	1	; select bank1
 10441  03CC  00A6               	movwf	(___fltol@f1+2)^(0+128)
 10442  03CD  0140               	movlb	0	; select bank0
 10443  03CE  083E               	movf	?___flmul+1,w
 10444  03CF  0141               	movlb	1	; select bank1
 10445  03D0  00A5               	movwf	(___fltol@f1+1)^(0+128)
 10446  03D1  0140               	movlb	0	; select bank0
 10447  03D2  083D               	movf	?___flmul,w
 10448  03D3  0141               	movlb	1	; select bank1
 10449  03D4  00A4               	movwf	___fltol@f1^(0+128)
 10450  03D5  3197  2724  3180   	fcall	___fltol
 10451  03D8  0141               	movlb	1	; select bank1
 10452  03D9  0824               	movf	?___fltol^(0+128),w
 10453  03DA  00B9               	movwf	??_LED_setHSL^(0+128)
 10454  03DB  0839               	movf	??_LED_setHSL^(0+128),w
 10455  03DC  00D9               	movwf	(LED_setHSL@rgb^(0+128)+2)
 10456  03DD                     l5404:	
 10457                           
 10458                           ;led.c: 117:  LED_setColor(rgb.R, rgb.G, rgb.B, 0);
 10459  03DD  0858               	movf	(LED_setHSL@rgb^(0+128)+1),w
 10460  03DE  00B9               	movwf	??_LED_setHSL^(0+128)
 10461  03DF  0839               	movf	??_LED_setHSL^(0+128),w
 10462  03E0  0140               	movlb	0	; select bank0
 10463  03E1  00A0               	movwf	LED_setColor@green
 10464  03E2  0141               	movlb	1	; select bank1
 10465  03E3  0859               	movf	(LED_setHSL@rgb^(0+128)+2),w
 10466  03E4  00BA               	movwf	(??_LED_setHSL+1)^(0+128)
 10467  03E5  083A               	movf	(??_LED_setHSL+1)^(0+128),w
 10468  03E6  0140               	movlb	0	; select bank0
 10469  03E7  00A1               	movwf	LED_setColor@white
 10470  03E8  01A2               	clrf	LED_setColor@blue
 10471  03E9  0141               	movlb	1	; select bank1
 10472  03EA  0857               	movf	LED_setHSL@rgb^(0+128),w
 10473  03EB  3194  24D2         	fcall	_LED_setColor
 10474  03ED  0008               	return
 10475  03EE                     __end_of_LED_setHSL:	
 10476                           
 10477                           	psect	text20
 10478  0903                     __ptext20:	
 10479 ;; *************** function ___xxtofl *****************
 10480 ;; Defined at:
 10481 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;  sign            1    wreg     unsigned char 
 10484 ;;  val             4    0[BANK0 ] long 
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;  sign            1    8[BANK0 ] unsigned char 
 10487 ;;  arg             4   10[BANK0 ] unsigned long 
 10488 ;;  exp             1    9[BANK0 ] unsigned char 
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  4    0[BANK0 ] unsigned char 
 10491 ;; Registers used:
 10492 ;;		wreg, status,2, status,0
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/0
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10498 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10499 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10500 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10501 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10502 ;;Total ram usage:       14 bytes
 10503 ;; Hardware stack levels used:    1
 10504 ;; Hardware stack levels required when called:    4
 10505 ;; This function calls:
 10506 ;;		Nothing
 10507 ;; This function is called by:
 10508 ;;		_LED_setHSL
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           
 10513                           ;psect for function ___xxtofl
 10514  0903                     ___xxtofl:	
 10515                           
 10516                           ;incstack = 0
 10517                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10518                           ;___xxtofl@sign stored from wreg
 10519  0903  0140               	movlb	0	; select bank0
 10520  0904  00A8               	movwf	___xxtofl@sign
 10521  0905  0828               	movf	___xxtofl@sign,w
 10522  0906  1D03               	btfss	3,2
 10523  0907  1FA3               	btfss	___xxtofl@val+3,7
 10524  0908  2919               	goto	l4134
 10525  0909  0920               	comf	___xxtofl@val,w
 10526  090A  00AA               	movwf	___xxtofl@arg
 10527  090B  0921               	comf	___xxtofl@val+1,w
 10528  090C  00AB               	movwf	___xxtofl@arg+1
 10529  090D  0922               	comf	___xxtofl@val+2,w
 10530  090E  00AC               	movwf	___xxtofl@arg+2
 10531  090F  0923               	comf	___xxtofl@val+3,w
 10532  0910  00AD               	movwf	___xxtofl@arg+3
 10533  0911  0AAA               	incf	___xxtofl@arg,f
 10534  0912  1903               	skipnz
 10535  0913  0AAB               	incf	___xxtofl@arg+1,f
 10536  0914  1903               	skipnz
 10537  0915  0AAC               	incf	___xxtofl@arg+2,f
 10538  0916  1903               	skipnz
 10539  0917  0AAD               	incf	___xxtofl@arg+3,f
 10540  0918  2921               	goto	l1643
 10541  0919                     l4134:	
 10542  0919  0823               	movf	___xxtofl@val+3,w
 10543  091A  00AD               	movwf	___xxtofl@arg+3
 10544  091B  0822               	movf	___xxtofl@val+2,w
 10545  091C  00AC               	movwf	___xxtofl@arg+2
 10546  091D  0821               	movf	___xxtofl@val+1,w
 10547  091E  00AB               	movwf	___xxtofl@arg+1
 10548  091F  0820               	movf	___xxtofl@val,w
 10549  0920  00AA               	movwf	___xxtofl@arg
 10550  0921                     l1643:	
 10551  0921  0823               	movf	___xxtofl@val+3,w
 10552  0922  0422               	iorwf	___xxtofl@val+2,w
 10553  0923  0421               	iorwf	___xxtofl@val+1,w
 10554  0924  0420               	iorwf	___xxtofl@val,w
 10555  0925  1D03               	skipz
 10556  0926  2930               	goto	l4140
 10557  0927  3000               	movlw	0
 10558  0928  00A3               	movwf	?___xxtofl+3
 10559  0929  3000               	movlw	0
 10560  092A  00A2               	movwf	?___xxtofl+2
 10561  092B  3000               	movlw	0
 10562  092C  00A1               	movwf	?___xxtofl+1
 10563  092D  3000               	movlw	0
 10564  092E  00A0               	movwf	?___xxtofl
 10565  092F  0008               	return
 10566  0930                     l4140:	
 10567  0930  3096               	movlw	150
 10568  0931  00A4               	movwf	??___xxtofl
 10569  0932  0824               	movf	??___xxtofl,w
 10570  0933  00A9               	movwf	___xxtofl@exp
 10571  0934                     l4144:	
 10572  0934  30FE               	movlw	254
 10573  0935  052D               	andwf	___xxtofl@arg+3,w
 10574  0936  1903               	btfsc	3,2
 10575  0937  2957               	goto	l1649
 10576  0938  3001               	movlw	1
 10577  0939  00A4               	movwf	??___xxtofl
 10578  093A  0824               	movf	??___xxtofl,w
 10579  093B  07A9               	addwf	___xxtofl@exp,f
 10580  093C  3001               	movlw	1
 10581  093D                     u4015:	
 10582  093D  36AD               	lsrf	___xxtofl@arg+3,f
 10583  093E  0CAC               	rrf	___xxtofl@arg+2,f
 10584  093F  0CAB               	rrf	___xxtofl@arg+1,f
 10585  0940  0CAA               	rrf	___xxtofl@arg,f
 10586  0941  0B89               	decfsz	9,f
 10587  0942  293D               	goto	u4015
 10588  0943  2934               	goto	l4144
 10589  0944                     l4146:	
 10590  0944  3001               	movlw	1
 10591  0945  00A4               	movwf	??___xxtofl
 10592  0946  0824               	movf	??___xxtofl,w
 10593  0947  07A9               	addwf	___xxtofl@exp,f
 10594  0948  3001               	movlw	1
 10595  0949  07AA               	addwf	___xxtofl@arg,f
 10596  094A  3000               	movlw	0
 10597  094B  3DAB               	addwfc	___xxtofl@arg+1,f
 10598  094C  3000               	movlw	0
 10599  094D  3DAC               	addwfc	___xxtofl@arg+2,f
 10600  094E  3000               	movlw	0
 10601  094F  3DAD               	addwfc	___xxtofl@arg+3,f
 10602  0950  3001               	movlw	1
 10603  0951                     u4035:	
 10604  0951  36AD               	lsrf	___xxtofl@arg+3,f
 10605  0952  0CAC               	rrf	___xxtofl@arg+2,f
 10606  0953  0CAB               	rrf	___xxtofl@arg+1,f
 10607  0954  0CAA               	rrf	___xxtofl@arg,f
 10608  0955  0B89               	decfsz	9,f
 10609  0956  2951               	goto	u4035
 10610  0957                     l1649:	
 10611  0957  30FF               	movlw	255
 10612  0958  052D               	andwf	___xxtofl@arg+3,w
 10613  0959  1903               	btfsc	3,2
 10614  095A  2969               	goto	l4154
 10615  095B  2944               	goto	l4146
 10616  095C                     l4156:	
 10617  095C  3002               	movlw	2
 10618  095D  0229               	subwf	___xxtofl@exp,w
 10619  095E  1C03               	btfss	3,0
 10620  095F  296B               	goto	l1656
 10621  0960  3001               	movlw	1
 10622  0961  02A9               	subwf	___xxtofl@exp,f
 10623  0962  3001               	movlw	1
 10624  0963                     u4055:	
 10625  0963  35AA               	lslf	___xxtofl@arg,f
 10626  0964  0DAB               	rlf	___xxtofl@arg+1,f
 10627  0965  0DAC               	rlf	___xxtofl@arg+2,f
 10628  0966  0DAD               	rlf	___xxtofl@arg+3,f
 10629  0967  0B89               	decfsz	9,f
 10630  0968  2963               	goto	u4055
 10631  0969                     l4154:	
 10632  0969  1FAC               	btfss	___xxtofl@arg+2,7
 10633  096A  295C               	goto	l4156
 10634  096B                     l1656:	
 10635  096B  1829               	btfsc	___xxtofl@exp,0
 10636  096C  2975               	goto	l1657
 10637  096D  30FF               	movlw	255
 10638  096E  05AA               	andwf	___xxtofl@arg,f
 10639  096F  30FF               	movlw	255
 10640  0970  05AB               	andwf	___xxtofl@arg+1,f
 10641  0971  307F               	movlw	127
 10642  0972  05AC               	andwf	___xxtofl@arg+2,f
 10643  0973  30FF               	movlw	255
 10644  0974  05AD               	andwf	___xxtofl@arg+3,f
 10645  0975                     l1657:	
 10646  0975  1003               	clrc
 10647  0976  0CA9               	rrf	___xxtofl@exp,f
 10648  0977  0829               	movf	___xxtofl@exp,w
 10649  0978  00A4               	movwf	??___xxtofl
 10650  0979  01A5               	clrf	??___xxtofl+1
 10651  097A  01A6               	clrf	??___xxtofl+2
 10652  097B  01A7               	clrf	??___xxtofl+3
 10653  097C  3018               	movlw	24
 10654  097D                     u4095:	
 10655  097D  35A4               	lslf	??___xxtofl,f
 10656  097E  0DA5               	rlf	??___xxtofl+1,f
 10657  097F  0DA6               	rlf	??___xxtofl+2,f
 10658  0980  0DA7               	rlf	??___xxtofl+3,f
 10659  0981  0B89               	decfsz	9,f
 10660  0982  297D               	goto	u4095
 10661  0983  0824               	movf	??___xxtofl,w
 10662  0984  04AA               	iorwf	___xxtofl@arg,f
 10663  0985  0825               	movf	??___xxtofl+1,w
 10664  0986  04AB               	iorwf	___xxtofl@arg+1,f
 10665  0987  0826               	movf	??___xxtofl+2,w
 10666  0988  04AC               	iorwf	___xxtofl@arg+2,f
 10667  0989  0827               	movf	??___xxtofl+3,w
 10668  098A  04AD               	iorwf	___xxtofl@arg+3,f
 10669  098B  0828               	movf	___xxtofl@sign,w
 10670  098C  1D03               	btfss	3,2
 10671  098D  1FA3               	btfss	___xxtofl@val+3,7
 10672  098E  2990               	goto	l4168
 10673  098F  17AD               	bsf	___xxtofl@arg+3,7
 10674  0990                     l4168:	
 10675  0990  082D               	movf	___xxtofl@arg+3,w
 10676  0991  00A3               	movwf	?___xxtofl+3
 10677  0992  082C               	movf	___xxtofl@arg+2,w
 10678  0993  00A2               	movwf	?___xxtofl+2
 10679  0994  082B               	movf	___xxtofl@arg+1,w
 10680  0995  00A1               	movwf	?___xxtofl+1
 10681  0996  082A               	movf	___xxtofl@arg,w
 10682  0997  00A0               	movwf	?___xxtofl
 10683  0998  0008               	return
 10684  0999                     __end_of___xxtofl:	
 10685                           
 10686                           	psect	text21
 10687  1724                     __ptext21:	
 10688 ;; *************** function ___fltol *****************
 10689 ;; Defined at:
 10690 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  f1              4    4[BANK1 ] unsigned char 
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;  exp1            1   14[BANK1 ] unsigned char 
 10695 ;;  sign1           1   13[BANK1 ] unsigned char 
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  4    4[BANK1 ] long 
 10698 ;; Registers used:
 10699 ;;		wreg, status,2, status,0
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10705 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10706 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10707 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10708 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10709 ;;Total ram usage:       11 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:    4
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_LED_setHSL
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           
 10720                           ;psect for function ___fltol
 10721  1724                     ___fltol:	
 10722                           
 10723                           ;incstack = 0
 10724                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10725  1724  1003               	clrc
 10726  1725  0141               	movlb	1	; select bank1
 10727  1726  0D26               	rlf	(___fltol@f1+2)^(0+128),w
 10728  1727  0D27               	rlf	(___fltol@f1+3)^(0+128),w
 10729  1728  00A8               	movwf	??___fltol^(0+128)
 10730  1729  0828               	movf	??___fltol^(0+128),w
 10731  172A  00AE               	movwf	___fltol@exp1^(0+128)
 10732  172B  082E               	movf	___fltol@exp1^(0+128),w
 10733  172C  1D03               	btfss	3,2
 10734  172D  2F37               	goto	l5260
 10735  172E                     l5256:	
 10736  172E  3000               	movlw	0
 10737  172F  00A7               	movwf	(?___fltol+3)^(0+128)
 10738  1730  3000               	movlw	0
 10739  1731  00A6               	movwf	(?___fltol+2)^(0+128)
 10740  1732  3000               	movlw	0
 10741  1733  00A5               	movwf	(?___fltol+1)^(0+128)
 10742  1734  3000               	movlw	0
 10743  1735  00A4               	movwf	?___fltol^(0+128)
 10744  1736  0008               	return
 10745  1737                     l5260:	
 10746  1737  0824               	movf	___fltol@f1^(0+128),w
 10747  1738  00A8               	movwf	??___fltol^(0+128)
 10748  1739  0825               	movf	(___fltol@f1+1)^(0+128),w
 10749  173A  00A9               	movwf	(??___fltol^(0+128)+1)
 10750  173B  0826               	movf	(___fltol@f1+2)^(0+128),w
 10751  173C  00AA               	movwf	(??___fltol^(0+128)+2)
 10752  173D  0827               	movf	(___fltol@f1+3)^(0+128),w
 10753  173E  00AB               	movwf	(??___fltol^(0+128)+3)
 10754  173F  301F               	movlw	31
 10755  1740                     u5465:	
 10756  1740  36AB               	lsrf	(??___fltol^(0+128)+3),f
 10757  1741  0CAA               	rrf	(??___fltol^(0+128)+2),f
 10758  1742  0CA9               	rrf	(??___fltol^(0+128)+1),f
 10759  1743  0CA8               	rrf	??___fltol^(0+128),f
 10760  1744  0B89               	decfsz	9,f
 10761  1745  2F40               	goto	u5465
 10762  1746  0828               	movf	??___fltol^(0+128),w
 10763  1747  00AC               	movwf	(??___fltol+4)^(0+128)
 10764  1748  082C               	movf	(??___fltol+4)^(0+128),w
 10765  1749  00AD               	movwf	___fltol@sign1^(0+128)
 10766  174A  17A6               	bsf	(___fltol@f1^(0+128)+2),7
 10767  174B  30FF               	movlw	255
 10768  174C  05A4               	andwf	___fltol@f1^(0+128),f
 10769  174D  30FF               	movlw	255
 10770  174E  05A5               	andwf	(___fltol@f1+1)^(0+128),f
 10771  174F  30FF               	movlw	255
 10772  1750  05A6               	andwf	(___fltol@f1+2)^(0+128),f
 10773  1751  3000               	movlw	0
 10774  1752  05A7               	andwf	(___fltol@f1+3)^(0+128),f
 10775  1753  3096               	movlw	150
 10776  1754  02AE               	subwf	___fltol@exp1^(0+128),f
 10777  1755  1FAE               	btfss	___fltol@exp1^(0+128),7
 10778  1756  2F6A               	goto	l5278
 10779  1757  082E               	movf	___fltol@exp1^(0+128),w
 10780  1758  3A80               	xorlw	128
 10781  1759  3E97               	addlw	151
 10782  175A  1C03               	btfss	3,0
 10783  175B  2F2E               	goto	l5256
 10784  175C                     l5276:	
 10785  175C  3001               	movlw	1
 10786  175D                     u5495:	
 10787  175D  36A7               	lsrf	(___fltol@f1+3)^(0+128),f
 10788  175E  0CA6               	rrf	(___fltol@f1+2)^(0+128),f
 10789  175F  0CA5               	rrf	(___fltol@f1+1)^(0+128),f
 10790  1760  0CA4               	rrf	___fltol@f1^(0+128),f
 10791  1761  0B89               	decfsz	9,f
 10792  1762  2F5D               	goto	u5495
 10793  1763  3001               	movlw	1
 10794  1764  00A8               	movwf	??___fltol^(0+128)
 10795  1765  0828               	movf	??___fltol^(0+128),w
 10796  1766  07AE               	addwf	___fltol@exp1^(0+128),f
 10797  1767  1903               	btfsc	3,2
 10798  1768  2F7B               	goto	l5286
 10799  1769  2F5C               	goto	l5276
 10800  176A                     l5278:	
 10801  176A  3020               	movlw	32
 10802  176B  022E               	subwf	___fltol@exp1^(0+128),w
 10803  176C  1803               	btfsc	3,0
 10804  176D  2F2E               	goto	l5256
 10805  176E                     l1409:	
 10806  176E  082E               	movf	___fltol@exp1^(0+128),w
 10807  176F  1903               	btfsc	3,2
 10808  1770  2F7B               	goto	l5286
 10809  1771  3001               	movlw	1
 10810  1772                     u5525:	
 10811  1772  35A4               	lslf	___fltol@f1^(0+128),f
 10812  1773  0DA5               	rlf	(___fltol@f1+1)^(0+128),f
 10813  1774  0DA6               	rlf	(___fltol@f1+2)^(0+128),f
 10814  1775  0DA7               	rlf	(___fltol@f1+3)^(0+128),f
 10815  1776  0B89               	decfsz	9,f
 10816  1777  2F72               	goto	u5525
 10817  1778  3001               	movlw	1
 10818  1779  02AE               	subwf	___fltol@exp1^(0+128),f
 10819  177A  2F6E               	goto	l1409
 10820  177B                     l5286:	
 10821  177B  082D               	movf	___fltol@sign1^(0+128),w
 10822  177C  1903               	btfsc	3,2
 10823  177D  0008               	return
 10824  177E  09A4               	comf	___fltol@f1^(0+128),f
 10825  177F  09A5               	comf	(___fltol@f1+1)^(0+128),f
 10826  1780  09A6               	comf	(___fltol@f1+2)^(0+128),f
 10827  1781  09A7               	comf	(___fltol@f1+3)^(0+128),f
 10828  1782  0AA4               	incf	___fltol@f1^(0+128),f
 10829  1783  1903               	skipnz
 10830  1784  0AA5               	incf	(___fltol@f1+1)^(0+128),f
 10831  1785  1903               	skipnz
 10832  1786  0AA6               	incf	(___fltol@f1+2)^(0+128),f
 10833  1787  1903               	skipnz
 10834  1788  0AA7               	incf	(___fltol@f1+3)^(0+128),f
 10835  1789  0008               	return
 10836  178A                     __end_of___fltol:	
 10837                           
 10838                           	psect	text22
 10839  1594                     __ptext22:	
 10840 ;; *************** function ___fleq *****************
 10841 ;; Defined at:
 10842 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;  ff1             4    0[BANK0 ] long 
 10845 ;;  ff2             4    4[BANK0 ] long 
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;		None
 10848 ;; Return value:  Size  Location     Type
 10849 ;;		None               void
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10857 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10859 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10860 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10861 ;;Total ram usage:       12 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:    4
 10864 ;; This function calls:
 10865 ;;		Nothing
 10866 ;; This function is called by:
 10867 ;;		_LED_setHSL
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           
 10872                           ;psect for function ___fleq
 10873  1594                     ___fleq:	
 10874                           
 10875                           ;incstack = 0
 10876                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10877  1594  3000               	movlw	0
 10878  1595  0140               	movlb	0	; select bank0
 10879  1596  0520               	andwf	___fleq@ff1,w
 10880  1597  00A8               	movwf	??___fleq
 10881  1598  3000               	movlw	0
 10882  1599  0521               	andwf	___fleq@ff1+1,w
 10883  159A  00A9               	movwf	??___fleq+1
 10884  159B  3080               	movlw	128
 10885  159C  0522               	andwf	___fleq@ff1+2,w
 10886  159D  00AA               	movwf	??___fleq+2
 10887  159E  307F               	movlw	127
 10888  159F  0523               	andwf	___fleq@ff1+3,w
 10889  15A0  00AB               	movwf	??___fleq+3
 10890  15A1  082B               	movf	??___fleq+3,w
 10891  15A2  042A               	iorwf	??___fleq+2,w
 10892  15A3  0429               	iorwf	??___fleq+1,w
 10893  15A4  0428               	iorwf	??___fleq,w
 10894  15A5  1D03               	skipz
 10895  15A6  2DAF               	goto	l1377
 10896  15A7  3000               	movlw	0
 10897  15A8  00A3               	movwf	___fleq@ff1+3
 10898  15A9  3000               	movlw	0
 10899  15AA  00A2               	movwf	___fleq@ff1+2
 10900  15AB  3000               	movlw	0
 10901  15AC  00A1               	movwf	___fleq@ff1+1
 10902  15AD  3000               	movlw	0
 10903  15AE  00A0               	movwf	___fleq@ff1
 10904  15AF                     l1377:	
 10905  15AF  3000               	movlw	0
 10906  15B0  0524               	andwf	___fleq@ff2,w
 10907  15B1  00A8               	movwf	??___fleq
 10908  15B2  3000               	movlw	0
 10909  15B3  0525               	andwf	___fleq@ff2+1,w
 10910  15B4  00A9               	movwf	??___fleq+1
 10911  15B5  3080               	movlw	128
 10912  15B6  0526               	andwf	___fleq@ff2+2,w
 10913  15B7  00AA               	movwf	??___fleq+2
 10914  15B8  307F               	movlw	127
 10915  15B9  0527               	andwf	___fleq@ff2+3,w
 10916  15BA  00AB               	movwf	??___fleq+3
 10917  15BB  082B               	movf	??___fleq+3,w
 10918  15BC  042A               	iorwf	??___fleq+2,w
 10919  15BD  0429               	iorwf	??___fleq+1,w
 10920  15BE  0428               	iorwf	??___fleq,w
 10921  15BF  1D03               	skipz
 10922  15C0  2DC9               	goto	l1378
 10923  15C1  3000               	movlw	0
 10924  15C2  00A7               	movwf	___fleq@ff2+3
 10925  15C3  3000               	movlw	0
 10926  15C4  00A6               	movwf	___fleq@ff2+2
 10927  15C5  3000               	movlw	0
 10928  15C6  00A5               	movwf	___fleq@ff2+1
 10929  15C7  3000               	movlw	0
 10930  15C8  00A4               	movwf	___fleq@ff2
 10931  15C9                     l1378:	
 10932  15C9  0827               	movf	___fleq@ff2+3,w
 10933  15CA  0623               	xorwf	___fleq@ff1+3,w
 10934  15CB  1D03               	skipz
 10935  15CC  2DD7               	goto	u3455
 10936  15CD  0826               	movf	___fleq@ff2+2,w
 10937  15CE  0622               	xorwf	___fleq@ff1+2,w
 10938  15CF  1D03               	skipz
 10939  15D0  2DD7               	goto	u3455
 10940  15D1  0825               	movf	___fleq@ff2+1,w
 10941  15D2  0621               	xorwf	___fleq@ff1+1,w
 10942  15D3  1D03               	skipz
 10943  15D4  2DD7               	goto	u3455
 10944  15D5  0824               	movf	___fleq@ff2,w
 10945  15D6  0620               	xorwf	___fleq@ff1,w
 10946  15D7                     u3455:	
 10947  15D7  1903               	skipnz
 10948  15D8  2DDB               	goto	l3900
 10949  15D9  1003               	clrc
 10950  15DA  0008               	return
 10951  15DB                     l3900:	
 10952  15DB  1403               	setc
 10953  15DC  0008               	return
 10954  15DD                     __end_of___fleq:	
 10955                           
 10956                           	psect	text23
 10957  0CA4                     __ptext23:	
 10958 ;; *************** function ___fldiv *****************
 10959 ;; Defined at:
 10960 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  a               4   14[BANK0 ] long 
 10963 ;;  b               4   18[BANK0 ] long 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;  grs             4   34[BANK0 ] unsigned long 
 10966 ;;  rem             4   27[BANK0 ] unsigned long 
 10967 ;;  new_exp         2   32[BANK0 ] int 
 10968 ;;  aexp            1   39[BANK0 ] unsigned char 
 10969 ;;  bexp            1   38[BANK0 ] unsigned char 
 10970 ;;  sign            1   31[BANK0 ] unsigned char 
 10971 ;; Return value:  Size  Location     Type
 10972 ;;                  4   14[BANK0 ] unsigned char 
 10973 ;; Registers used:
 10974 ;;		wreg, status,2, status,0
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10980 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10981 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10982 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10983 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10984 ;;Total ram usage:       26 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:    4
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_LED_setHSL
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           
 10995                           ;psect for function ___fldiv
 10996  0CA4                     ___fldiv:	
 10997                           
 10998                           ;incstack = 0
 10999                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11000  0CA4  0140               	movlb	0	; select bank0
 11001  0CA5  0835               	movf	___fldiv@b+3,w
 11002  0CA6  3980               	andlw	128
 11003  0CA7  00B6               	movwf	??___fldiv
 11004  0CA8  0836               	movf	??___fldiv,w
 11005  0CA9  00BF               	movwf	___fldiv@sign
 11006  0CAA  3535               	lslf	___fldiv@b+3,w
 11007  0CAB  00B6               	movwf	??___fldiv
 11008  0CAC  0836               	movf	??___fldiv,w
 11009  0CAD  00C6               	movwf	___fldiv@bexp
 11010  0CAE  1BB4               	btfsc	___fldiv@b+2,7
 11011  0CAF  1446               	bsf	___fldiv@bexp,0
 11012  0CB0  0846               	movf	___fldiv@bexp,w
 11013  0CB1  1903               	btfsc	3,2
 11014  0CB2  2CC1               	goto	l4006
 11015  0CB3  0A46               	incf	___fldiv@bexp,w
 11016  0CB4  1D03               	btfss	3,2
 11017  0CB5  2CBE               	goto	l4002
 11018  0CB6  3000               	movlw	0
 11019  0CB7  00B5               	movwf	___fldiv@b+3
 11020  0CB8  3000               	movlw	0
 11021  0CB9  00B4               	movwf	___fldiv@b+2
 11022  0CBA  3000               	movlw	0
 11023  0CBB  00B3               	movwf	___fldiv@b+1
 11024  0CBC  3000               	movlw	0
 11025  0CBD  00B2               	movwf	___fldiv@b
 11026  0CBE                     l4002:	
 11027  0CBE  17B4               	bsf	___fldiv@b+2,7
 11028  0CBF  01B5               	clrf	___fldiv@b+3
 11029  0CC0  2CC9               	goto	l4008
 11030  0CC1                     l4006:	
 11031  0CC1  3000               	movlw	0
 11032  0CC2  00B5               	movwf	___fldiv@b+3
 11033  0CC3  3000               	movlw	0
 11034  0CC4  00B4               	movwf	___fldiv@b+2
 11035  0CC5  3000               	movlw	0
 11036  0CC6  00B3               	movwf	___fldiv@b+1
 11037  0CC7  3000               	movlw	0
 11038  0CC8  00B2               	movwf	___fldiv@b
 11039  0CC9                     l4008:	
 11040  0CC9  0831               	movf	___fldiv@a+3,w
 11041  0CCA  3980               	andlw	128
 11042  0CCB  00B6               	movwf	??___fldiv
 11043  0CCC  0836               	movf	??___fldiv,w
 11044  0CCD  06BF               	xorwf	___fldiv@sign,f
 11045  0CCE  3531               	lslf	___fldiv@a+3,w
 11046  0CCF  00B6               	movwf	??___fldiv
 11047  0CD0  0836               	movf	??___fldiv,w
 11048  0CD1  00C7               	movwf	___fldiv@aexp
 11049  0CD2  1BB0               	btfsc	___fldiv@a+2,7
 11050  0CD3  1447               	bsf	___fldiv@aexp,0
 11051  0CD4  0847               	movf	___fldiv@aexp,w
 11052  0CD5  1903               	btfsc	3,2
 11053  0CD6  2CE5               	goto	l4026
 11054  0CD7  0A47               	incf	___fldiv@aexp,w
 11055  0CD8  1D03               	btfss	3,2
 11056  0CD9  2CE2               	goto	l4022
 11057  0CDA  3000               	movlw	0
 11058  0CDB  00B1               	movwf	___fldiv@a+3
 11059  0CDC  3000               	movlw	0
 11060  0CDD  00B0               	movwf	___fldiv@a+2
 11061  0CDE  3000               	movlw	0
 11062  0CDF  00AF               	movwf	___fldiv@a+1
 11063  0CE0  3000               	movlw	0
 11064  0CE1  00AE               	movwf	___fldiv@a
 11065  0CE2                     l4022:	
 11066  0CE2  17B0               	bsf	___fldiv@a+2,7
 11067  0CE3  01B1               	clrf	___fldiv@a+3
 11068  0CE4  2CED               	goto	l1565
 11069  0CE5                     l4026:	
 11070  0CE5  3000               	movlw	0
 11071  0CE6  00B1               	movwf	___fldiv@a+3
 11072  0CE7  3000               	movlw	0
 11073  0CE8  00B0               	movwf	___fldiv@a+2
 11074  0CE9  3000               	movlw	0
 11075  0CEA  00AF               	movwf	___fldiv@a+1
 11076  0CEB  3000               	movlw	0
 11077  0CEC  00AE               	movwf	___fldiv@a
 11078  0CED                     l1565:	
 11079  0CED  0831               	movf	___fldiv@a+3,w
 11080  0CEE  0430               	iorwf	___fldiv@a+2,w
 11081  0CEF  042F               	iorwf	___fldiv@a+1,w
 11082  0CF0  042E               	iorwf	___fldiv@a,w
 11083  0CF1  1D03               	skipz
 11084  0CF2  2D0C               	goto	l4036
 11085  0CF3  3000               	movlw	0
 11086  0CF4  00B5               	movwf	___fldiv@b+3
 11087  0CF5  3000               	movlw	0
 11088  0CF6  00B4               	movwf	___fldiv@b+2
 11089  0CF7  3000               	movlw	0
 11090  0CF8  00B3               	movwf	___fldiv@b+1
 11091  0CF9  3000               	movlw	0
 11092  0CFA  00B2               	movwf	___fldiv@b
 11093  0CFB  3080               	movlw	128
 11094  0CFC  04B4               	iorwf	___fldiv@b+2,f
 11095  0CFD  307F               	movlw	127
 11096  0CFE  04B5               	iorwf	___fldiv@b+3,f
 11097  0CFF                     L2:	
 11098  0CFF  083F               	movf	___fldiv@sign,w
 11099  0D00  00B6               	movwf	??___fldiv
 11100  0D01  0836               	movf	??___fldiv,w
 11101  0D02  04B5               	iorwf	___fldiv@b+3,f
 11102  0D03  0835               	movf	___fldiv@b+3,w
 11103  0D04  00B1               	movwf	?___fldiv+3
 11104  0D05  0834               	movf	___fldiv@b+2,w
 11105  0D06  00B0               	movwf	?___fldiv+2
 11106  0D07  0833               	movf	___fldiv@b+1,w
 11107  0D08  00AF               	movwf	?___fldiv+1
 11108  0D09  0832               	movf	___fldiv@b,w
 11109  0D0A  00AE               	movwf	?___fldiv
 11110  0D0B  0008               	return
 11111  0D0C                     l4036:	
 11112  0D0C  0846               	movf	___fldiv@bexp,w
 11113  0D0D  1D03               	btfss	3,2
 11114  0D0E  2D18               	goto	l4042
 11115  0D0F  3000               	movlw	0
 11116  0D10  00B1               	movwf	?___fldiv+3
 11117  0D11  3000               	movlw	0
 11118  0D12  00B0               	movwf	?___fldiv+2
 11119  0D13  3000               	movlw	0
 11120  0D14  00AF               	movwf	?___fldiv+1
 11121  0D15  3000               	movlw	0
 11122  0D16  00AE               	movwf	?___fldiv
 11123  0D17  0008               	return
 11124  0D18                     l4042:	
 11125  0D18  0846               	movf	___fldiv@bexp,w
 11126  0D19  00B6               	movwf	??___fldiv
 11127  0D1A  01B7               	clrf	??___fldiv+1
 11128  0D1B  0837               	movf	??___fldiv+1,w
 11129  0D1C  00B9               	movwf	??___fldiv+3
 11130  0D1D  0847               	movf	___fldiv@aexp,w
 11131  0D1E  0236               	subwf	??___fldiv,w
 11132  0D1F  00B8               	movwf	??___fldiv+2
 11133  0D20  1C03               	skipc
 11134  0D21  03B9               	decf	??___fldiv+3,f
 11135  0D22  0838               	movf	??___fldiv+2,w
 11136  0D23  3E7F               	addlw	127
 11137  0D24  00C0               	movwf	___fldiv@new_exp
 11138  0D25  3000               	movlw	0
 11139  0D26  3D39               	addwfc	??___fldiv+3,w
 11140  0D27  00C1               	movwf	___fldiv@new_exp+1
 11141  0D28  0835               	movf	___fldiv@b+3,w
 11142  0D29  00BE               	movwf	___fldiv@rem+3
 11143  0D2A  0834               	movf	___fldiv@b+2,w
 11144  0D2B  00BD               	movwf	___fldiv@rem+2
 11145  0D2C  0833               	movf	___fldiv@b+1,w
 11146  0D2D  00BC               	movwf	___fldiv@rem+1
 11147  0D2E  0832               	movf	___fldiv@b,w
 11148  0D2F  00BB               	movwf	___fldiv@rem
 11149  0D30  3000               	movlw	0
 11150  0D31  00B5               	movwf	___fldiv@b+3
 11151  0D32  3000               	movlw	0
 11152  0D33  00B4               	movwf	___fldiv@b+2
 11153  0D34  3000               	movlw	0
 11154  0D35  00B3               	movwf	___fldiv@b+1
 11155  0D36  3000               	movlw	0
 11156  0D37  00B2               	movwf	___fldiv@b
 11157  0D38  3000               	movlw	0
 11158  0D39  00C5               	movwf	___fldiv@grs+3
 11159  0D3A  3000               	movlw	0
 11160  0D3B  00C4               	movwf	___fldiv@grs+2
 11161  0D3C  3000               	movlw	0
 11162  0D3D  00C3               	movwf	___fldiv@grs+1
 11163  0D3E  3000               	movlw	0
 11164  0D3F  00C2               	movwf	___fldiv@grs
 11165  0D40  01C7               	clrf	___fldiv@aexp
 11166  0D41                     l4070:	
 11167  0D41  301A               	movlw	26
 11168  0D42  0247               	subwf	___fldiv@aexp,w
 11169  0D43  1803               	btfsc	3,0
 11170  0D44  2D7D               	goto	l4072
 11171  0D45  0847               	movf	___fldiv@aexp,w
 11172  0D46  1903               	btfsc	3,2
 11173  0D47  2D5F               	goto	l4062
 11174  0D48  3001               	movlw	1
 11175  0D49                     u3785:	
 11176  0D49  35BB               	lslf	___fldiv@rem,f
 11177  0D4A  0DBC               	rlf	___fldiv@rem+1,f
 11178  0D4B  0DBD               	rlf	___fldiv@rem+2,f
 11179  0D4C  0DBE               	rlf	___fldiv@rem+3,f
 11180  0D4D  0B89               	decfsz	9,f
 11181  0D4E  2D49               	goto	u3785
 11182  0D4F  3001               	movlw	1
 11183  0D50                     u3795:	
 11184  0D50  35B2               	lslf	___fldiv@b,f
 11185  0D51  0DB3               	rlf	___fldiv@b+1,f
 11186  0D52  0DB4               	rlf	___fldiv@b+2,f
 11187  0D53  0DB5               	rlf	___fldiv@b+3,f
 11188  0D54  0B89               	decfsz	9,f
 11189  0D55  2D50               	goto	u3795
 11190  0D56  1BC5               	btfsc	___fldiv@grs+3,7
 11191  0D57  1432               	bsf	___fldiv@b,0
 11192  0D58  3001               	movlw	1
 11193  0D59                     u3815:	
 11194  0D59  35C2               	lslf	___fldiv@grs,f
 11195  0D5A  0DC3               	rlf	___fldiv@grs+1,f
 11196  0D5B  0DC4               	rlf	___fldiv@grs+2,f
 11197  0D5C  0DC5               	rlf	___fldiv@grs+3,f
 11198  0D5D  0B89               	decfsz	9,f
 11199  0D5E  2D59               	goto	u3815
 11200  0D5F                     l4062:	
 11201  0D5F  0831               	movf	___fldiv@a+3,w
 11202  0D60  023E               	subwf	___fldiv@rem+3,w
 11203  0D61  1D03               	skipz
 11204  0D62  2D6D               	goto	u3825
 11205  0D63  0830               	movf	___fldiv@a+2,w
 11206  0D64  023D               	subwf	___fldiv@rem+2,w
 11207  0D65  1D03               	skipz
 11208  0D66  2D6D               	goto	u3825
 11209  0D67  082F               	movf	___fldiv@a+1,w
 11210  0D68  023C               	subwf	___fldiv@rem+1,w
 11211  0D69  1D03               	skipz
 11212  0D6A  2D6D               	goto	u3825
 11213  0D6B  082E               	movf	___fldiv@a,w
 11214  0D6C  023B               	subwf	___fldiv@rem,w
 11215  0D6D                     u3825:	
 11216  0D6D  1C03               	skipc
 11217  0D6E  2D78               	goto	l4068
 11218  0D6F  1745               	bsf	___fldiv@grs+3,6
 11219  0D70  082E               	movf	___fldiv@a,w
 11220  0D71  02BB               	subwf	___fldiv@rem,f
 11221  0D72  082F               	movf	___fldiv@a+1,w
 11222  0D73  3BBC               	subwfb	___fldiv@rem+1,f
 11223  0D74  0830               	movf	___fldiv@a+2,w
 11224  0D75  3BBD               	subwfb	___fldiv@rem+2,f
 11225  0D76  0831               	movf	___fldiv@a+3,w
 11226  0D77  3BBE               	subwfb	___fldiv@rem+3,f
 11227  0D78                     l4068:	
 11228  0D78  3001               	movlw	1
 11229  0D79  00B6               	movwf	??___fldiv
 11230  0D7A  0836               	movf	??___fldiv,w
 11231  0D7B  07C7               	addwf	___fldiv@aexp,f
 11232  0D7C  2D41               	goto	l4070
 11233  0D7D                     l4072:	
 11234  0D7D  083E               	movf	___fldiv@rem+3,w
 11235  0D7E  043D               	iorwf	___fldiv@rem+2,w
 11236  0D7F  043C               	iorwf	___fldiv@rem+1,w
 11237  0D80  043B               	iorwf	___fldiv@rem,w
 11238  0D81  1D03               	btfss	3,2
 11239  0D82  1442               	bsf	___fldiv@grs,0
 11240  0D83                     l4086:	
 11241  0D83  1BB4               	btfsc	___fldiv@b+2,7
 11242  0D84  2D9A               	goto	l4088
 11243  0D85  3001               	movlw	1
 11244  0D86                     u3855:	
 11245  0D86  35B2               	lslf	___fldiv@b,f
 11246  0D87  0DB3               	rlf	___fldiv@b+1,f
 11247  0D88  0DB4               	rlf	___fldiv@b+2,f
 11248  0D89  0DB5               	rlf	___fldiv@b+3,f
 11249  0D8A  0B89               	decfsz	9,f
 11250  0D8B  2D86               	goto	u3855
 11251  0D8C  1BC5               	btfsc	___fldiv@grs+3,7
 11252  0D8D  1432               	bsf	___fldiv@b,0
 11253  0D8E  3001               	movlw	1
 11254  0D8F                     u3875:	
 11255  0D8F  35C2               	lslf	___fldiv@grs,f
 11256  0D90  0DC3               	rlf	___fldiv@grs+1,f
 11257  0D91  0DC4               	rlf	___fldiv@grs+2,f
 11258  0D92  0DC5               	rlf	___fldiv@grs+3,f
 11259  0D93  0B89               	decfsz	9,f
 11260  0D94  2D8F               	goto	u3875
 11261  0D95  30FF               	movlw	255
 11262  0D96  07C0               	addwf	___fldiv@new_exp,f
 11263  0D97  30FF               	movlw	255
 11264  0D98  3DC1               	addwfc	___fldiv@new_exp+1,f
 11265  0D99  2D83               	goto	l4086
 11266  0D9A                     l4088:	
 11267  0D9A  01C7               	clrf	___fldiv@aexp
 11268  0D9B  1FC5               	btfss	___fldiv@grs+3,7
 11269  0D9C  2DB3               	goto	l4098
 11270  0D9D  30FF               	movlw	255
 11271  0D9E  0542               	andwf	___fldiv@grs,w
 11272  0D9F  00B6               	movwf	??___fldiv
 11273  0DA0  30FF               	movlw	255
 11274  0DA1  0543               	andwf	___fldiv@grs+1,w
 11275  0DA2  00B7               	movwf	??___fldiv+1
 11276  0DA3  30FF               	movlw	255
 11277  0DA4  0544               	andwf	___fldiv@grs+2,w
 11278  0DA5  00B8               	movwf	??___fldiv+2
 11279  0DA6  307F               	movlw	127
 11280  0DA7  0545               	andwf	___fldiv@grs+3,w
 11281  0DA8  00B9               	movwf	??___fldiv+3
 11282  0DA9  0839               	movf	??___fldiv+3,w
 11283  0DAA  0438               	iorwf	??___fldiv+2,w
 11284  0DAB  0437               	iorwf	??___fldiv+1,w
 11285  0DAC  0436               	iorwf	??___fldiv,w
 11286  0DAD  1903               	skipnz
 11287  0DAE  1832               	btfsc	___fldiv@b,0
 11288  0DAF  2DB1               	goto	l4094
 11289  0DB0  2DB3               	goto	l4098
 11290  0DB1                     l4094:	
 11291  0DB1  01C7               	clrf	___fldiv@aexp
 11292  0DB2  0AC7               	incf	___fldiv@aexp,f
 11293  0DB3                     l4098:	
 11294  0DB3  0847               	movf	___fldiv@aexp,w
 11295  0DB4  1903               	btfsc	3,2
 11296  0DB5  2DDC               	goto	l4108
 11297  0DB6  3001               	movlw	1
 11298  0DB7  07B2               	addwf	___fldiv@b,f
 11299  0DB8  3000               	movlw	0
 11300  0DB9  3DB3               	addwfc	___fldiv@b+1,f
 11301  0DBA  3000               	movlw	0
 11302  0DBB  3DB4               	addwfc	___fldiv@b+2,f
 11303  0DBC  3000               	movlw	0
 11304  0DBD  3DB5               	addwfc	___fldiv@b+3,f
 11305  0DBE  1C35               	btfss	___fldiv@b+3,0
 11306  0DBF  2DDC               	goto	l4108
 11307  0DC0  0832               	movf	___fldiv@b,w
 11308  0DC1  00B6               	movwf	??___fldiv
 11309  0DC2  0833               	movf	___fldiv@b+1,w
 11310  0DC3  00B7               	movwf	??___fldiv+1
 11311  0DC4  0834               	movf	___fldiv@b+2,w
 11312  0DC5  00B8               	movwf	??___fldiv+2
 11313  0DC6  0835               	movf	___fldiv@b+3,w
 11314  0DC7  00B9               	movwf	??___fldiv+3
 11315  0DC8  3001               	movlw	1
 11316  0DC9  00BA               	movwf	??___fldiv+4
 11317  0DCA                     u3945:	
 11318  0DCA  37B9               	asrf	??___fldiv+3,f
 11319  0DCB  0CB8               	rrf	??___fldiv+2,f
 11320  0DCC  0CB7               	rrf	??___fldiv+1,f
 11321  0DCD  0CB6               	rrf	??___fldiv,f
 11322  0DCE  0BBA               	decfsz	??___fldiv+4,f
 11323  0DCF  2DCA               	goto	u3945
 11324  0DD0  0839               	movf	??___fldiv+3,w
 11325  0DD1  00B5               	movwf	___fldiv@b+3
 11326  0DD2  0838               	movf	??___fldiv+2,w
 11327  0DD3  00B4               	movwf	___fldiv@b+2
 11328  0DD4  0837               	movf	??___fldiv+1,w
 11329  0DD5  00B3               	movwf	___fldiv@b+1
 11330  0DD6  0836               	movf	??___fldiv,w
 11331  0DD7  00B2               	movwf	___fldiv@b
 11332  0DD8  3001               	movlw	1
 11333  0DD9  07C0               	addwf	___fldiv@new_exp,f
 11334  0DDA  3000               	movlw	0
 11335  0DDB  3DC1               	addwfc	___fldiv@new_exp+1,f
 11336  0DDC                     l4108:	
 11337  0DDC  0841               	movf	___fldiv@new_exp+1,w
 11338  0DDD  3A80               	xorlw	128
 11339  0DDE  00B6               	movwf	??___fldiv
 11340  0DDF  3080               	movlw	128
 11341  0DE0  0236               	subwf	??___fldiv,w
 11342  0DE1  1D03               	skipz
 11343  0DE2  2DE5               	goto	u3955
 11344  0DE3  30FF               	movlw	255
 11345  0DE4  0240               	subwf	___fldiv@new_exp,w
 11346  0DE5                     u3955:	
 11347  0DE5  1C03               	skipc
 11348  0DE6  2DF4               	goto	l1586
 11349  0DE7  30FF               	movlw	255
 11350  0DE8  0140               	movlb	0	; select bank0
 11351  0DE9  00C0               	movwf	___fldiv@new_exp
 11352  0DEA  3000               	movlw	0
 11353  0DEB  00C1               	movwf	___fldiv@new_exp+1
 11354  0DEC  3000               	movlw	0
 11355  0DED  00B5               	movwf	___fldiv@b+3
 11356  0DEE  3000               	movlw	0
 11357  0DEF  00B4               	movwf	___fldiv@b+2
 11358  0DF0  3000               	movlw	0
 11359  0DF1  00B3               	movwf	___fldiv@b+1
 11360  0DF2  3000               	movlw	0
 11361  0DF3  00B2               	movwf	___fldiv@b
 11362  0DF4                     l1586:	
 11363  0DF4  0140               	movlb	0	; select bank0
 11364  0DF5  0841               	movf	___fldiv@new_exp+1,w
 11365  0DF6  3A80               	xorlw	128
 11366  0DF7  00B6               	movwf	??___fldiv
 11367  0DF8  3080               	movlw	128
 11368  0DF9  0236               	subwf	??___fldiv,w
 11369  0DFA  1D03               	skipz
 11370  0DFB  2DFE               	goto	u3965
 11371  0DFC  3001               	movlw	1
 11372  0DFD  0240               	subwf	___fldiv@new_exp,w
 11373  0DFE                     u3965:	
 11374  0DFE  1803               	skipnc
 11375  0DFF  2E0C               	goto	l1587
 11376  0E00  0140               	movlb	0	; select bank0
 11377  0E01  01C0               	clrf	___fldiv@new_exp
 11378  0E02  01C1               	clrf	___fldiv@new_exp+1
 11379  0E03  3000               	movlw	0
 11380  0E04  00B5               	movwf	___fldiv@b+3
 11381  0E05  3000               	movlw	0
 11382  0E06  00B4               	movwf	___fldiv@b+2
 11383  0E07  3000               	movlw	0
 11384  0E08  00B3               	movwf	___fldiv@b+1
 11385  0E09  3000               	movlw	0
 11386  0E0A  00B2               	movwf	___fldiv@b
 11387  0E0B  01BF               	clrf	___fldiv@sign
 11388  0E0C                     l1587:	
 11389  0E0C  0140               	movlb	0	; select bank0
 11390  0E0D  0840               	movf	___fldiv@new_exp,w
 11391  0E0E  00B6               	movwf	??___fldiv
 11392  0E0F  0836               	movf	??___fldiv,w
 11393  0E10  00C6               	movwf	___fldiv@bexp
 11394  0E11  1C46               	btfss	___fldiv@bexp,0
 11395  0E12  2E15               	goto	l4122
 11396  0E13  17B4               	bsf	___fldiv@b+2,7
 11397  0E14  2E19               	goto	l1589
 11398  0E15                     l4122:	
 11399  0E15  307F               	movlw	127
 11400  0E16  00B6               	movwf	??___fldiv
 11401  0E17  0836               	movf	??___fldiv,w
 11402  0E18  05B4               	andwf	___fldiv@b+2,f
 11403  0E19                     l1589:	
 11404  0E19  3646               	lsrf	___fldiv@bexp,w
 11405  0E1A  00B6               	movwf	??___fldiv
 11406  0E1B  0836               	movf	??___fldiv,w
 11407  0E1C  00B5               	movwf	___fldiv@b+3
 11408  0E1D  2CFF               	goto	L2
 11409  0E1E                     __end_of___fldiv:	
 11410                           
 11411                           	psect	text24
 11412  14D2                     __ptext24:	
 11413 ;; *************** function _LED_setColor *****************
 11414 ;; Defined at:
 11415 ;;		line 70 in file "led.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  red             1    wreg     unsigned char 
 11418 ;;  green           1    0[BANK0 ] unsigned char 
 11419 ;;  white           1    1[BANK0 ] unsigned char 
 11420 ;;  blue            1    2[BANK0 ] unsigned char 
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;  red             1   21[BANK0 ] unsigned char 
 11423 ;;  lo4             2   19[BANK0 ] int 
 11424 ;;  hi4             2    0        int 
 11425 ;;  lo3             2   15[BANK0 ] int 
 11426 ;;  hi3             2    0        int 
 11427 ;;  lo2             2   11[BANK0 ] int 
 11428 ;;  hi2             2    0        int 
 11429 ;;  lo1             2    7[BANK0 ] int 
 11430 ;;  hi1             2    0        int 
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1    wreg      void 
 11433 ;; Registers used:
 11434 ;;		wreg, status,2
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11440 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11441 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11443 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11444 ;;Total ram usage:       22 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; Hardware stack levels required when called:    4
 11447 ;; This function calls:
 11448 ;;		Nothing
 11449 ;; This function is called by:
 11450 ;;		_LED_setHSL
 11451 ;;		_LED_task
 11452 ;; This function uses a non-reentrant model
 11453 ;;
 11454                           
 11455                           
 11456                           ;psect for function _LED_setColor
 11457  14D2                     _LED_setColor:	
 11458                           
 11459                           ;incstack = 0
 11460                           ; Regs used in _LED_setColor: [wreg+status,2]
 11461                           ;LED_setColor@red stored from wreg
 11462  14D2  0140               	movlb	0	; select bank0
 11463  14D3  00B5               	movwf	LED_setColor@red
 11464                           
 11465                           ;led.c: 71:     red/=2;
 11466  14D4  1003               	clrc
 11467  14D5  0CB5               	rrf	LED_setColor@red,f
 11468                           
 11469                           ;led.c: 72:     green/=2;
 11470  14D6  1003               	clrc
 11471  14D7  0CA0               	rrf	LED_setColor@green,f
 11472                           
 11473                           ;led.c: 73:     blue/=2;
 11474  14D8  1003               	clrc
 11475  14D9  0CA2               	rrf	LED_setColor@blue,f
 11476                           
 11477                           ;led.c: 74:     white/=2;
 11478  14DA  1003               	clrc
 11479  14DB  0CA1               	rrf	LED_setColor@white,f
 11480                           
 11481                           ;led.c: 76:     int lo1 = red & 0x00FF;
 11482  14DC  0835               	movf	LED_setColor@red,w
 11483  14DD  00A3               	movwf	??_LED_setColor
 11484  14DE  01A4               	clrf	??_LED_setColor+1
 11485  14DF  0823               	movf	??_LED_setColor,w
 11486  14E0  00A7               	movwf	LED_setColor@lo1
 11487  14E1  0824               	movf	??_LED_setColor+1,w
 11488  14E2  00A8               	movwf	LED_setColor@lo1+1
 11489                           
 11490                           ;led.c: 78:     int lo2 = green & 0x00FF;
 11491  14E3  0820               	movf	LED_setColor@green,w
 11492  14E4  00A3               	movwf	??_LED_setColor
 11493  14E5  01A4               	clrf	??_LED_setColor+1
 11494  14E6  0823               	movf	??_LED_setColor,w
 11495  14E7  00AB               	movwf	LED_setColor@lo2
 11496  14E8  0824               	movf	??_LED_setColor+1,w
 11497  14E9  00AC               	movwf	LED_setColor@lo2+1
 11498                           
 11499                           ;led.c: 80:     int lo3 = blue & 0x00FF;
 11500  14EA  0822               	movf	LED_setColor@blue,w
 11501  14EB  00A3               	movwf	??_LED_setColor
 11502  14EC  01A4               	clrf	??_LED_setColor+1
 11503  14ED  0823               	movf	??_LED_setColor,w
 11504  14EE  00AF               	movwf	LED_setColor@lo3
 11505  14EF  0824               	movf	??_LED_setColor+1,w
 11506  14F0  00B0               	movwf	LED_setColor@lo3+1
 11507                           
 11508                           ;led.c: 82:     int lo4 = white & 0x00FF;
 11509  14F1  0821               	movf	LED_setColor@white,w
 11510  14F2  00A3               	movwf	??_LED_setColor
 11511  14F3  01A4               	clrf	??_LED_setColor+1
 11512  14F4  0823               	movf	??_LED_setColor,w
 11513  14F5  00B3               	movwf	LED_setColor@lo4
 11514  14F6  0824               	movf	??_LED_setColor+1,w
 11515  14F7  00B4               	movwf	LED_setColor@lo4+1
 11516                           
 11517                           ;led.c: 84:     CCPR1H = hi1;
 11518  14F8  0146               	movlb	6	; select bank6
 11519  14F9  018D               	clrf	13	;volatile
 11520                           
 11521                           ;led.c: 85:     CCPR1L = lo1;
 11522  14FA  0140               	movlb	0	; select bank0
 11523  14FB  0827               	movf	LED_setColor@lo1,w
 11524  14FC  0146               	movlb	6	; select bank6
 11525  14FD  008C               	movwf	12	;volatile
 11526                           
 11527                           ;led.c: 87:     CCPR2H = hi2;
 11528  14FE  0191               	clrf	17	;volatile
 11529                           
 11530                           ;led.c: 88:     CCPR2L = lo2;
 11531  14FF  0140               	movlb	0	; select bank0
 11532  1500  082B               	movf	LED_setColor@lo2,w
 11533  1501  0146               	movlb	6	; select bank6
 11534  1502  0090               	movwf	16	;volatile
 11535                           
 11536                           ;led.c: 90:     CCPR3H = hi3;
 11537  1503  0195               	clrf	21	;volatile
 11538                           
 11539                           ;led.c: 91:     CCPR3L = lo3;
 11540  1504  0140               	movlb	0	; select bank0
 11541  1505  082F               	movf	LED_setColor@lo3,w
 11542  1506  0146               	movlb	6	; select bank6
 11543  1507  0094               	movwf	20	;volatile
 11544                           
 11545                           ;led.c: 93:     CCPR4H = hi4;
 11546  1508  0199               	clrf	25	;volatile
 11547                           
 11548                           ;led.c: 94:     CCPR4L = lo4;
 11549  1509  0140               	movlb	0	; select bank0
 11550  150A  0833               	movf	LED_setColor@lo4,w
 11551  150B  0146               	movlb	6	; select bank6
 11552  150C  0098               	movwf	24	;volatile
 11553  150D  0008               	return
 11554  150E                     __end_of_LED_setColor:	
 11555                           
 11556                           	psect	text25
 11557  061A                     __ptext25:	
 11558 ;; *************** function _HueToRGB *****************
 11559 ;; Defined at:
 11560 ;;		line 51 in file "led.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  v1              4   67[BANK0 ] float 
 11563 ;;  v2              4   71[BANK0 ] float 
 11564 ;;  vH              4   75[BANK0 ] float 
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;		None
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  4   67[BANK0 ] float 
 11569 ;; Registers used:
 11570 ;;		wreg, status,2, status,0, pclath, cstack
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11576 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11577 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11579 ;;      Totals:         0      12       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11580 ;;Total ram usage:       16 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; Hardware stack levels required when called:    6
 11583 ;; This function calls:
 11584 ;;		___fladd
 11585 ;;		___flge
 11586 ;;		___flmul
 11587 ;;		___flsub
 11588 ;; This function is called by:
 11589 ;;		_LED_setHSL
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           
 11594                           ;psect for function _HueToRGB
 11595  061A                     _HueToRGB:	
 11596                           
 11597                           ;led.c: 52:  if (vH < 0)
 11598                           
 11599                           ;incstack = 0
 11600                           ; Regs used in _HueToRGB: [wreg+status,2+status,0+pclath+cstack]
 11601  061A  0140               	movlb	0	; select bank0
 11602  061B  086E               	movf	HueToRGB@vH+3,w
 11603  061C  00DA               	movwf	___flge@ff1+3
 11604  061D  086D               	movf	HueToRGB@vH+2,w
 11605  061E  00D9               	movwf	___flge@ff1+2
 11606  061F  086C               	movf	HueToRGB@vH+1,w
 11607  0620  00D8               	movwf	___flge@ff1+1
 11608  0621  086B               	movf	HueToRGB@vH,w
 11609  0622  00D7               	movwf	___flge@ff1
 11610  0623  3000               	movlw	0
 11611  0624  00DE               	movwf	___flge@ff2+3
 11612  0625  3000               	movlw	0
 11613  0626  00DD               	movwf	___flge@ff2+2
 11614  0627  3000               	movlw	0
 11615  0628  00DC               	movwf	___flge@ff2+1
 11616  0629  3000               	movlw	0
 11617  062A  00DB               	movwf	___flge@ff2
 11618  062B  3188  2087  3186   	fcall	___flge
 11619  062E  1803               	btfsc	3,0
 11620  062F  2E4D               	goto	l1017
 11621                           
 11622                           ;led.c: 53:   vH += 1;
 11623  0630  303F               	movlw	63
 11624  0631  0140               	movlb	0	; select bank0
 11625  0632  00AC               	movwf	___fladd@b+3
 11626  0633  3080               	movlw	128
 11627  0634  00AB               	movwf	___fladd@b+2
 11628  0635  3000               	movlw	0
 11629  0636  00AA               	movwf	___fladd@b+1
 11630  0637  3000               	movlw	0
 11631  0638  00A9               	movwf	___fladd@b
 11632  0639  086E               	movf	HueToRGB@vH+3,w
 11633  063A  00B0               	movwf	___fladd@a+3
 11634  063B  086D               	movf	HueToRGB@vH+2,w
 11635  063C  00AF               	movwf	___fladd@a+2
 11636  063D  086C               	movf	HueToRGB@vH+1,w
 11637  063E  00AE               	movwf	___fladd@a+1
 11638  063F  086B               	movf	HueToRGB@vH,w
 11639  0640  00AD               	movwf	___fladd@a
 11640  0641  318E  261E  3186   	fcall	___fladd
 11641  0644  0140               	movlb	0	; select bank0
 11642  0645  082C               	movf	?___fladd+3,w
 11643  0646  00EE               	movwf	HueToRGB@vH+3
 11644  0647  082B               	movf	?___fladd+2,w
 11645  0648  00ED               	movwf	HueToRGB@vH+2
 11646  0649  082A               	movf	?___fladd+1,w
 11647  064A  00EC               	movwf	HueToRGB@vH+1
 11648  064B  0829               	movf	?___fladd,w
 11649  064C  00EB               	movwf	HueToRGB@vH
 11650  064D                     l1017:	
 11651                           
 11652                           ;led.c: 55:  if (vH > 1)
 11653  064D  303F               	movlw	63
 11654  064E  0140               	movlb	0	; select bank0
 11655  064F  00DA               	movwf	___flge@ff1+3
 11656  0650  3080               	movlw	128
 11657  0651  00D9               	movwf	___flge@ff1+2
 11658  0652  3000               	movlw	0
 11659  0653  00D8               	movwf	___flge@ff1+1
 11660  0654  3000               	movlw	0
 11661  0655  00D7               	movwf	___flge@ff1
 11662  0656  086E               	movf	HueToRGB@vH+3,w
 11663  0657  00DE               	movwf	___flge@ff2+3
 11664  0658  086D               	movf	HueToRGB@vH+2,w
 11665  0659  00DD               	movwf	___flge@ff2+2
 11666  065A  086C               	movf	HueToRGB@vH+1,w
 11667  065B  00DC               	movwf	___flge@ff2+1
 11668  065C  086B               	movf	HueToRGB@vH,w
 11669  065D  00DB               	movwf	___flge@ff2
 11670  065E  3188  2087  3186   	fcall	___flge
 11671  0661  1803               	btfsc	3,0
 11672  0662  2E80               	goto	l1018
 11673                           
 11674                           ;led.c: 56:   vH -= 1;
 11675  0663  303F               	movlw	63
 11676  0664  0140               	movlb	0	; select bank0
 11677  0665  00DA               	movwf	___flsub@a+3
 11678  0666  3080               	movlw	128
 11679  0667  00D9               	movwf	___flsub@a+2
 11680  0668  3000               	movlw	0
 11681  0669  00D8               	movwf	___flsub@a+1
 11682  066A  3000               	movlw	0
 11683  066B  00D7               	movwf	___flsub@a
 11684  066C  086E               	movf	HueToRGB@vH+3,w
 11685  066D  00DE               	movwf	___flsub@b+3
 11686  066E  086D               	movf	HueToRGB@vH+2,w
 11687  066F  00DD               	movwf	___flsub@b+2
 11688  0670  086C               	movf	HueToRGB@vH+1,w
 11689  0671  00DC               	movwf	___flsub@b+1
 11690  0672  086B               	movf	HueToRGB@vH,w
 11691  0673  00DB               	movwf	___flsub@b
 11692  0674  3192  2278  3186   	fcall	___flsub
 11693  0677  0140               	movlb	0	; select bank0
 11694  0678  085A               	movf	?___flsub+3,w
 11695  0679  00EE               	movwf	HueToRGB@vH+3
 11696  067A  0859               	movf	?___flsub+2,w
 11697  067B  00ED               	movwf	HueToRGB@vH+2
 11698  067C  0858               	movf	?___flsub+1,w
 11699  067D  00EC               	movwf	HueToRGB@vH+1
 11700  067E  0857               	movf	?___flsub,w
 11701  067F  00EB               	movwf	HueToRGB@vH
 11702  0680                     l1018:	
 11703                           
 11704                           ;led.c: 58:  if ((6 * vH) < 1)
 11705  0680  3040               	movlw	64
 11706  0681  0140               	movlb	0	; select bank0
 11707  0682  00C0               	movwf	___flmul@b+3
 11708  0683  30C0               	movlw	192
 11709  0684  00BF               	movwf	___flmul@b+2
 11710  0685  3000               	movlw	0
 11711  0686  00BE               	movwf	___flmul@b+1
 11712  0687  3000               	movlw	0
 11713  0688  00BD               	movwf	___flmul@b
 11714  0689  086E               	movf	HueToRGB@vH+3,w
 11715  068A  00C4               	movwf	___flmul@a+3
 11716  068B  086D               	movf	HueToRGB@vH+2,w
 11717  068C  00C3               	movwf	___flmul@a+2
 11718  068D  086C               	movf	HueToRGB@vH+1,w
 11719  068E  00C2               	movwf	___flmul@a+1
 11720  068F  086B               	movf	HueToRGB@vH,w
 11721  0690  00C1               	movwf	___flmul@a
 11722  0691  3183  23EE  3186   	fcall	___flmul
 11723  0694  0140               	movlb	0	; select bank0
 11724  0695  0840               	movf	?___flmul+3,w
 11725  0696  00DA               	movwf	___flge@ff1+3
 11726  0697  083F               	movf	?___flmul+2,w
 11727  0698  00D9               	movwf	___flge@ff1+2
 11728  0699  083E               	movf	?___flmul+1,w
 11729  069A  00D8               	movwf	___flge@ff1+1
 11730  069B  083D               	movf	?___flmul,w
 11731  069C  00D7               	movwf	___flge@ff1
 11732  069D  303F               	movlw	63
 11733  069E  00DE               	movwf	___flge@ff2+3
 11734  069F  3080               	movlw	128
 11735  06A0  00DD               	movwf	___flge@ff2+2
 11736  06A1  3000               	movlw	0
 11737  06A2  00DC               	movwf	___flge@ff2+1
 11738  06A3  3000               	movlw	0
 11739  06A4  00DB               	movwf	___flge@ff2
 11740  06A5  3188  2087  3186   	fcall	___flge
 11741  06A8  1803               	btfsc	3,0
 11742  06A9  2F1B               	goto	l5212
 11743                           
 11744                           ;led.c: 59:   return (v1 + (v2 - v1) * 6 * vH);
 11745  06AA  3040               	movlw	64
 11746  06AB  0140               	movlb	0	; select bank0
 11747  06AC  00C0               	movwf	___flmul@b+3
 11748  06AD  30C0               	movlw	192
 11749  06AE  00BF               	movwf	___flmul@b+2
 11750  06AF  3000               	movlw	0
 11751  06B0  00BE               	movwf	___flmul@b+1
 11752  06B1  3000               	movlw	0
 11753  06B2  00BD               	movwf	___flmul@b
 11754  06B3  0866               	movf	HueToRGB@v1+3,w
 11755  06B4  00DA               	movwf	___flsub@a+3
 11756  06B5  0865               	movf	HueToRGB@v1+2,w
 11757  06B6  00D9               	movwf	___flsub@a+2
 11758  06B7  0864               	movf	HueToRGB@v1+1,w
 11759  06B8  00D8               	movwf	___flsub@a+1
 11760  06B9  0863               	movf	HueToRGB@v1,w
 11761  06BA  00D7               	movwf	___flsub@a
 11762  06BB  086A               	movf	HueToRGB@v2+3,w
 11763  06BC  00DE               	movwf	___flsub@b+3
 11764  06BD  0869               	movf	HueToRGB@v2+2,w
 11765  06BE  00DD               	movwf	___flsub@b+2
 11766  06BF  0868               	movf	HueToRGB@v2+1,w
 11767  06C0  00DC               	movwf	___flsub@b+1
 11768  06C1  0867               	movf	HueToRGB@v2,w
 11769  06C2  00DB               	movwf	___flsub@b
 11770  06C3  3192  2278  3186   	fcall	___flsub
 11771  06C6  0140               	movlb	0	; select bank0
 11772  06C7  085A               	movf	?___flsub+3,w
 11773  06C8  00C4               	movwf	___flmul@a+3
 11774  06C9  0859               	movf	?___flsub+2,w
 11775  06CA  00C3               	movwf	___flmul@a+2
 11776  06CB  0858               	movf	?___flsub+1,w
 11777  06CC  00C2               	movwf	___flmul@a+1
 11778  06CD  0857               	movf	?___flsub,w
 11779  06CE  00C1               	movwf	___flmul@a
 11780  06CF  3183  23EE  3186   	fcall	___flmul
 11781  06D2  0140               	movlb	0	; select bank0
 11782  06D3  0840               	movf	?___flmul+3,w
 11783  06D4  0141               	movlb	1	; select bank1
 11784  06D5  00A3               	movwf	(_HueToRGB$2787+3)^(0+128)
 11785  06D6  0140               	movlb	0	; select bank0
 11786  06D7  083F               	movf	?___flmul+2,w
 11787  06D8  0141               	movlb	1	; select bank1
 11788  06D9  00A2               	movwf	(_HueToRGB$2787+2)^(0+128)
 11789  06DA  0140               	movlb	0	; select bank0
 11790  06DB  083E               	movf	?___flmul+1,w
 11791  06DC  0141               	movlb	1	; select bank1
 11792  06DD  00A1               	movwf	(_HueToRGB$2787+1)^(0+128)
 11793  06DE  0140               	movlb	0	; select bank0
 11794  06DF  083D               	movf	?___flmul,w
 11795  06E0  0141               	movlb	1	; select bank1
 11796  06E1  00A0               	movwf	_HueToRGB$2787^(0+128)
 11797                           
 11798                           ;led.c: 59:   return (v1 + (v2 - v1) * 6 * vH);
 11799  06E2  0140               	movlb	0	; select bank0
 11800  06E3  0866               	movf	HueToRGB@v1+3,w
 11801  06E4  00AC               	movwf	___fladd@b+3
 11802  06E5  0865               	movf	HueToRGB@v1+2,w
 11803  06E6  00AB               	movwf	___fladd@b+2
 11804  06E7  0864               	movf	HueToRGB@v1+1,w
 11805  06E8  00AA               	movwf	___fladd@b+1
 11806  06E9  0863               	movf	HueToRGB@v1,w
 11807  06EA  00A9               	movwf	___fladd@b
 11808  06EB  086E               	movf	HueToRGB@vH+3,w
 11809  06EC  00C0               	movwf	___flmul@b+3
 11810  06ED  086D               	movf	HueToRGB@vH+2,w
 11811  06EE  00BF               	movwf	___flmul@b+2
 11812  06EF  086C               	movf	HueToRGB@vH+1,w
 11813  06F0  00BE               	movwf	___flmul@b+1
 11814  06F1  086B               	movf	HueToRGB@vH,w
 11815  06F2  00BD               	movwf	___flmul@b
 11816  06F3  0141               	movlb	1	; select bank1
 11817  06F4  0823               	movf	(_HueToRGB$2787+3)^(0+128),w
 11818  06F5  0140               	movlb	0	; select bank0
 11819  06F6  00C4               	movwf	___flmul@a+3
 11820  06F7  0141               	movlb	1	; select bank1
 11821  06F8  0822               	movf	(_HueToRGB$2787+2)^(0+128),w
 11822  06F9  0140               	movlb	0	; select bank0
 11823  06FA  00C3               	movwf	___flmul@a+2
 11824  06FB  0141               	movlb	1	; select bank1
 11825  06FC  0821               	movf	(_HueToRGB$2787+1)^(0+128),w
 11826  06FD  0140               	movlb	0	; select bank0
 11827  06FE  00C2               	movwf	___flmul@a+1
 11828  06FF  0141               	movlb	1	; select bank1
 11829  0700  0820               	movf	_HueToRGB$2787^(0+128),w
 11830  0701  0140               	movlb	0	; select bank0
 11831  0702  00C1               	movwf	___flmul@a
 11832  0703  3183  23EE  3186   	fcall	___flmul
 11833  0706  0140               	movlb	0	; select bank0
 11834  0707  0840               	movf	?___flmul+3,w
 11835  0708  00B0               	movwf	___fladd@a+3
 11836  0709  083F               	movf	?___flmul+2,w
 11837  070A  00AF               	movwf	___fladd@a+2
 11838  070B  083E               	movf	?___flmul+1,w
 11839  070C  00AE               	movwf	___fladd@a+1
 11840  070D  083D               	movf	?___flmul,w
 11841  070E  00AD               	movwf	___fladd@a
 11842  070F  318E  261E         	fcall	___fladd
 11843  0711  0140               	movlb	0	; select bank0
 11844  0712  082C               	movf	?___fladd+3,w
 11845  0713  00E6               	movwf	?_HueToRGB+3
 11846  0714  082B               	movf	?___fladd+2,w
 11847  0715  00E5               	movwf	?_HueToRGB+2
 11848  0716  082A               	movf	?___fladd+1,w
 11849  0717  00E4               	movwf	?_HueToRGB+1
 11850  0718  0829               	movf	?___fladd,w
 11851  0719  00E3               	movwf	?_HueToRGB
 11852  071A  0008               	return
 11853  071B                     l5212:	
 11854                           
 11855                           ;led.c: 61:  if ((2 * vH) < 1)
 11856  071B  3040               	movlw	64
 11857  071C  0140               	movlb	0	; select bank0
 11858  071D  00C0               	movwf	___flmul@b+3
 11859  071E  3000               	movlw	0
 11860  071F  00BF               	movwf	___flmul@b+2
 11861  0720  3000               	movlw	0
 11862  0721  00BE               	movwf	___flmul@b+1
 11863  0722  3000               	movlw	0
 11864  0723  00BD               	movwf	___flmul@b
 11865  0724  086E               	movf	HueToRGB@vH+3,w
 11866  0725  00C4               	movwf	___flmul@a+3
 11867  0726  086D               	movf	HueToRGB@vH+2,w
 11868  0727  00C3               	movwf	___flmul@a+2
 11869  0728  086C               	movf	HueToRGB@vH+1,w
 11870  0729  00C2               	movwf	___flmul@a+1
 11871  072A  086B               	movf	HueToRGB@vH,w
 11872  072B  00C1               	movwf	___flmul@a
 11873  072C  3183  23EE  3186   	fcall	___flmul
 11874  072F  0140               	movlb	0	; select bank0
 11875  0730  0840               	movf	?___flmul+3,w
 11876  0731  00DA               	movwf	___flge@ff1+3
 11877  0732  083F               	movf	?___flmul+2,w
 11878  0733  00D9               	movwf	___flge@ff1+2
 11879  0734  083E               	movf	?___flmul+1,w
 11880  0735  00D8               	movwf	___flge@ff1+1
 11881  0736  083D               	movf	?___flmul,w
 11882  0737  00D7               	movwf	___flge@ff1
 11883  0738  303F               	movlw	63
 11884  0739  00DE               	movwf	___flge@ff2+3
 11885  073A  3080               	movlw	128
 11886  073B  00DD               	movwf	___flge@ff2+2
 11887  073C  3000               	movlw	0
 11888  073D  00DC               	movwf	___flge@ff2+1
 11889  073E  3000               	movlw	0
 11890  073F  00DB               	movwf	___flge@ff2
 11891  0740  3188  2087  3186   	fcall	___flge
 11892  0743  1803               	btfsc	3,0
 11893  0744  2F4F               	goto	l5218
 11894                           
 11895                           ;led.c: 62:   return v2;
 11896  0745  0140               	movlb	0	; select bank0
 11897  0746  086A               	movf	HueToRGB@v2+3,w
 11898  0747  00E6               	movwf	?_HueToRGB+3
 11899  0748  0869               	movf	HueToRGB@v2+2,w
 11900  0749  00E5               	movwf	?_HueToRGB+2
 11901  074A  0868               	movf	HueToRGB@v2+1,w
 11902  074B  00E4               	movwf	?_HueToRGB+1
 11903  074C  0867               	movf	HueToRGB@v2,w
 11904  074D  00E3               	movwf	?_HueToRGB
 11905  074E  0008               	return
 11906  074F                     l5218:	
 11907                           
 11908                           ;led.c: 64:  if ((3 * vH) < 2)
 11909  074F  3040               	movlw	64
 11910  0750  0140               	movlb	0	; select bank0
 11911  0751  00C0               	movwf	___flmul@b+3
 11912  0752  3040               	movlw	64
 11913  0753  00BF               	movwf	___flmul@b+2
 11914  0754  3000               	movlw	0
 11915  0755  00BE               	movwf	___flmul@b+1
 11916  0756  3000               	movlw	0
 11917  0757  00BD               	movwf	___flmul@b
 11918  0758  086E               	movf	HueToRGB@vH+3,w
 11919  0759  00C4               	movwf	___flmul@a+3
 11920  075A  086D               	movf	HueToRGB@vH+2,w
 11921  075B  00C3               	movwf	___flmul@a+2
 11922  075C  086C               	movf	HueToRGB@vH+1,w
 11923  075D  00C2               	movwf	___flmul@a+1
 11924  075E  086B               	movf	HueToRGB@vH,w
 11925  075F  00C1               	movwf	___flmul@a
 11926  0760  3183  23EE  3186   	fcall	___flmul
 11927  0763  0140               	movlb	0	; select bank0
 11928  0764  0840               	movf	?___flmul+3,w
 11929  0765  00DA               	movwf	___flge@ff1+3
 11930  0766  083F               	movf	?___flmul+2,w
 11931  0767  00D9               	movwf	___flge@ff1+2
 11932  0768  083E               	movf	?___flmul+1,w
 11933  0769  00D8               	movwf	___flge@ff1+1
 11934  076A  083D               	movf	?___flmul,w
 11935  076B  00D7               	movwf	___flge@ff1
 11936  076C  3040               	movlw	64
 11937  076D  00DE               	movwf	___flge@ff2+3
 11938  076E  3000               	movlw	0
 11939  076F  00DD               	movwf	___flge@ff2+2
 11940  0770  3000               	movlw	0
 11941  0771  00DC               	movwf	___flge@ff2+1
 11942  0772  3000               	movlw	0
 11943  0773  00DB               	movwf	___flge@ff2
 11944  0774  3188  2087  3186   	fcall	___flge
 11945  0777  1803               	btfsc	3,0
 11946  0778  0008               	return
 11947                           
 11948                           ;led.c: 65:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 11949  0779  0140               	movlb	0	; select bank0
 11950  077A  086E               	movf	HueToRGB@vH+3,w
 11951  077B  00DA               	movwf	___flsub@a+3
 11952  077C  086D               	movf	HueToRGB@vH+2,w
 11953  077D  00D9               	movwf	___flsub@a+2
 11954  077E  086C               	movf	HueToRGB@vH+1,w
 11955  077F  00D8               	movwf	___flsub@a+1
 11956  0780  086B               	movf	HueToRGB@vH,w
 11957  0781  00D7               	movwf	___flsub@a
 11958  0782  303F               	movlw	63
 11959  0783  00DE               	movwf	___flsub@b+3
 11960  0784  302A               	movlw	42
 11961  0785  00DD               	movwf	___flsub@b+2
 11962  0786  30AA               	movlw	170
 11963  0787  00DC               	movwf	___flsub@b+1
 11964  0788  30AB               	movlw	171
 11965  0789  00DB               	movwf	___flsub@b
 11966  078A  3192  2278  3186   	fcall	___flsub
 11967  078D  0140               	movlb	0	; select bank0
 11968  078E  085A               	movf	?___flsub+3,w
 11969  078F  00C0               	movwf	___flmul@b+3
 11970  0790  0859               	movf	?___flsub+2,w
 11971  0791  00BF               	movwf	___flmul@b+2
 11972  0792  0858               	movf	?___flsub+1,w
 11973  0793  00BE               	movwf	___flmul@b+1
 11974  0794  0857               	movf	?___flsub,w
 11975  0795  00BD               	movwf	___flmul@b
 11976  0796  0866               	movf	HueToRGB@v1+3,w
 11977  0797  00DA               	movwf	___flsub@a+3
 11978  0798  0865               	movf	HueToRGB@v1+2,w
 11979  0799  00D9               	movwf	___flsub@a+2
 11980  079A  0864               	movf	HueToRGB@v1+1,w
 11981  079B  00D8               	movwf	___flsub@a+1
 11982  079C  0863               	movf	HueToRGB@v1,w
 11983  079D  00D7               	movwf	___flsub@a
 11984  079E  086A               	movf	HueToRGB@v2+3,w
 11985  079F  00DE               	movwf	___flsub@b+3
 11986  07A0  0869               	movf	HueToRGB@v2+2,w
 11987  07A1  00DD               	movwf	___flsub@b+2
 11988  07A2  0868               	movf	HueToRGB@v2+1,w
 11989  07A3  00DC               	movwf	___flsub@b+1
 11990  07A4  0867               	movf	HueToRGB@v2,w
 11991  07A5  00DB               	movwf	___flsub@b
 11992  07A6  3192  2278  3186   	fcall	___flsub
 11993  07A9  0140               	movlb	0	; select bank0
 11994  07AA  085A               	movf	?___flsub+3,w
 11995  07AB  00C4               	movwf	___flmul@a+3
 11996  07AC  0859               	movf	?___flsub+2,w
 11997  07AD  00C3               	movwf	___flmul@a+2
 11998  07AE  0858               	movf	?___flsub+1,w
 11999  07AF  00C2               	movwf	___flmul@a+1
 12000  07B0  0857               	movf	?___flsub,w
 12001  07B1  00C1               	movwf	___flmul@a
 12002  07B2  3183  23EE  3186   	fcall	___flmul
 12003  07B5  0140               	movlb	0	; select bank0
 12004  07B6  0840               	movf	?___flmul+3,w
 12005  07B7  0141               	movlb	1	; select bank1
 12006  07B8  00A3               	movwf	(_HueToRGB$2787+3)^(0+128)
 12007  07B9  0140               	movlb	0	; select bank0
 12008  07BA  083F               	movf	?___flmul+2,w
 12009  07BB  0141               	movlb	1	; select bank1
 12010  07BC  00A2               	movwf	(_HueToRGB$2787+2)^(0+128)
 12011  07BD  0140               	movlb	0	; select bank0
 12012  07BE  083E               	movf	?___flmul+1,w
 12013  07BF  0141               	movlb	1	; select bank1
 12014  07C0  00A1               	movwf	(_HueToRGB$2787+1)^(0+128)
 12015  07C1  0140               	movlb	0	; select bank0
 12016  07C2  083D               	movf	?___flmul,w
 12017  07C3  0141               	movlb	1	; select bank1
 12018  07C4  00A0               	movwf	_HueToRGB$2787^(0+128)
 12019                           
 12020                           ;led.c: 65:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 12021  07C5  0140               	movlb	0	; select bank0
 12022  07C6  0866               	movf	HueToRGB@v1+3,w
 12023  07C7  00AC               	movwf	___fladd@b+3
 12024  07C8  0865               	movf	HueToRGB@v1+2,w
 12025  07C9  00AB               	movwf	___fladd@b+2
 12026  07CA  0864               	movf	HueToRGB@v1+1,w
 12027  07CB  00AA               	movwf	___fladd@b+1
 12028  07CC  0863               	movf	HueToRGB@v1,w
 12029  07CD  00A9               	movwf	___fladd@b
 12030  07CE  3040               	movlw	64
 12031  07CF  00C0               	movwf	___flmul@b+3
 12032  07D0  30C0               	movlw	192
 12033  07D1  00BF               	movwf	___flmul@b+2
 12034  07D2  3000               	movlw	0
 12035  07D3  00BE               	movwf	___flmul@b+1
 12036  07D4  3000               	movlw	0
 12037  07D5  00BD               	movwf	___flmul@b
 12038  07D6  0141               	movlb	1	; select bank1
 12039  07D7  0823               	movf	(_HueToRGB$2787+3)^(0+128),w
 12040  07D8  0140               	movlb	0	; select bank0
 12041  07D9  00C4               	movwf	___flmul@a+3
 12042  07DA  0141               	movlb	1	; select bank1
 12043  07DB  0822               	movf	(_HueToRGB$2787+2)^(0+128),w
 12044  07DC  0140               	movlb	0	; select bank0
 12045  07DD  00C3               	movwf	___flmul@a+2
 12046  07DE  0141               	movlb	1	; select bank1
 12047  07DF  0821               	movf	(_HueToRGB$2787+1)^(0+128),w
 12048  07E0  0140               	movlb	0	; select bank0
 12049  07E1  00C2               	movwf	___flmul@a+1
 12050  07E2  0141               	movlb	1	; select bank1
 12051  07E3  0820               	movf	_HueToRGB$2787^(0+128),w
 12052  07E4  0140               	movlb	0	; select bank0
 12053  07E5  00C1               	movwf	___flmul@a
 12054  07E6  3183  23EE  3186   	fcall	___flmul
 12055  07E9  0140               	movlb	0	; select bank0
 12056  07EA  0840               	movf	?___flmul+3,w
 12057  07EB  00B0               	movwf	___fladd@a+3
 12058  07EC  083F               	movf	?___flmul+2,w
 12059  07ED  00AF               	movwf	___fladd@a+2
 12060  07EE  083E               	movf	?___flmul+1,w
 12061  07EF  00AE               	movwf	___fladd@a+1
 12062  07F0  083D               	movf	?___flmul,w
 12063  07F1  00AD               	movwf	___fladd@a
 12064  07F2  318E  261E         	fcall	___fladd
 12065  07F4  0140               	movlb	0	; select bank0
 12066  07F5  082C               	movf	?___fladd+3,w
 12067  07F6  00E6               	movwf	?_HueToRGB+3
 12068  07F7  082B               	movf	?___fladd+2,w
 12069  07F8  00E5               	movwf	?_HueToRGB+2
 12070  07F9  082A               	movf	?___fladd+1,w
 12071  07FA  00E4               	movwf	?_HueToRGB+1
 12072  07FB  0829               	movf	?___fladd,w
 12073  07FC  00E3               	movwf	?_HueToRGB
 12074  07FD  0008               	return
 12075  07FE                     __end_of_HueToRGB:	
 12076                           ;led.c: 67:  return v1;
 12077                           
 12078                           
 12079                           	psect	text26
 12080  1278                     __ptext26:	
 12081 ;; *************** function ___flsub *****************
 12082 ;; Defined at:
 12083 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12084 ;; Parameters:    Size  Location     Type
 12085 ;;  a               4   55[BANK0 ] float 
 12086 ;;  b               4   59[BANK0 ] float 
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;		None
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  4   55[BANK0 ] float 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2, status,0, pclath, cstack
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12098 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12101 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12102 ;;Total ram usage:        8 bytes
 12103 ;; Hardware stack levels used:    1
 12104 ;; Hardware stack levels required when called:    5
 12105 ;; This function calls:
 12106 ;;		___fladd
 12107 ;; This function is called by:
 12108 ;;		_HueToRGB
 12109 ;;		_LED_setHSL
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           
 12114                           ;psect for function ___flsub
 12115  1278                     ___flsub:	
 12116                           
 12117                           ;incstack = 0
 12118                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12119  1278  3080               	movlw	128
 12120  1279  0140               	movlb	0	; select bank0
 12121  127A  06DA               	xorwf	___flsub@a+3,f
 12122  127B  085E               	movf	___flsub@b+3,w
 12123  127C  00AC               	movwf	___fladd@b+3
 12124  127D  085D               	movf	___flsub@b+2,w
 12125  127E  00AB               	movwf	___fladd@b+2
 12126  127F  085C               	movf	___flsub@b+1,w
 12127  1280  00AA               	movwf	___fladd@b+1
 12128  1281  085B               	movf	___flsub@b,w
 12129  1282  00A9               	movwf	___fladd@b
 12130  1283  085A               	movf	___flsub@a+3,w
 12131  1284  00B0               	movwf	___fladd@a+3
 12132  1285  0859               	movf	___flsub@a+2,w
 12133  1286  00AF               	movwf	___fladd@a+2
 12134  1287  0858               	movf	___flsub@a+1,w
 12135  1288  00AE               	movwf	___fladd@a+1
 12136  1289  0857               	movf	___flsub@a,w
 12137  128A  00AD               	movwf	___fladd@a
 12138  128B  318E  261E         	fcall	___fladd
 12139  128D  0140               	movlb	0	; select bank0
 12140  128E  082C               	movf	?___fladd+3,w
 12141  128F  00DA               	movwf	?___flsub+3
 12142  1290  082B               	movf	?___fladd+2,w
 12143  1291  00D9               	movwf	?___flsub+2
 12144  1292  082A               	movf	?___fladd+1,w
 12145  1293  00D8               	movwf	?___flsub+1
 12146  1294  0829               	movf	?___fladd,w
 12147  1295  00D7               	movwf	?___flsub
 12148  1296  0008               	return
 12149  1297                     __end_of___flsub:	
 12150                           
 12151                           	psect	text27
 12152  0E1E                     __ptext27:	
 12153 ;; *************** function ___fladd *****************
 12154 ;; Defined at:
 12155 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  b               4    9[BANK0 ] float 
 12158 ;;  a               4   13[BANK0 ] float 
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;  grs             1   28[BANK0 ] unsigned char 
 12161 ;;  bexp            1   27[BANK0 ] unsigned char 
 12162 ;;  aexp            1   26[BANK0 ] unsigned char 
 12163 ;;  signs           1   25[BANK0 ] unsigned char 
 12164 ;; Return value:  Size  Location     Type
 12165 ;;                  4    9[BANK0 ] unsigned char 
 12166 ;; Registers used:
 12167 ;;		wreg, status,2, status,0
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/0
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12173 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12174 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12175 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12176 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12177 ;;Total ram usage:       20 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; Hardware stack levels required when called:    4
 12180 ;; This function calls:
 12181 ;;		Nothing
 12182 ;; This function is called by:
 12183 ;;		_HueToRGB
 12184 ;;		_LED_setHSL
 12185 ;;		___flsub
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           
 12190                           ;psect for function ___fladd
 12191  0E1E                     ___fladd:	
 12192                           
 12193                           ;incstack = 0
 12194                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 12195  0E1E  0140               	movlb	0	; select bank0
 12196  0E1F  082C               	movf	___fladd@b+3,w
 12197  0E20  3980               	andlw	128
 12198  0E21  00B1               	movwf	??___fladd
 12199  0E22  0831               	movf	??___fladd,w
 12200  0E23  00B9               	movwf	___fladd@signs
 12201  0E24  352C               	lslf	___fladd@b+3,w
 12202  0E25  00B1               	movwf	??___fladd
 12203  0E26  0831               	movf	??___fladd,w
 12204  0E27  00BB               	movwf	___fladd@bexp
 12205  0E28  1BAB               	btfsc	___fladd@b+2,7
 12206  0E29  143B               	bsf	___fladd@bexp,0
 12207  0E2A  083B               	movf	___fladd@bexp,w
 12208  0E2B  1903               	btfsc	3,2
 12209  0E2C  2E3B               	goto	l3476
 12210  0E2D  0A3B               	incf	___fladd@bexp,w
 12211  0E2E  1D03               	btfss	3,2
 12212  0E2F  2E38               	goto	l3472
 12213  0E30  3000               	movlw	0
 12214  0E31  00AC               	movwf	___fladd@b+3
 12215  0E32  3000               	movlw	0
 12216  0E33  00AB               	movwf	___fladd@b+2
 12217  0E34  3000               	movlw	0
 12218  0E35  00AA               	movwf	___fladd@b+1
 12219  0E36  3000               	movlw	0
 12220  0E37  00A9               	movwf	___fladd@b
 12221  0E38                     l3472:	
 12222  0E38  17AB               	bsf	___fladd@b+2,7
 12223  0E39  01AC               	clrf	___fladd@b+3
 12224  0E3A  2E43               	goto	l3478
 12225  0E3B                     l3476:	
 12226  0E3B  3000               	movlw	0
 12227  0E3C  00AC               	movwf	___fladd@b+3
 12228  0E3D  3000               	movlw	0
 12229  0E3E  00AB               	movwf	___fladd@b+2
 12230  0E3F  3000               	movlw	0
 12231  0E40  00AA               	movwf	___fladd@b+1
 12232  0E41  3000               	movlw	0
 12233  0E42  00A9               	movwf	___fladd@b
 12234  0E43                     l3478:	
 12235  0E43  0830               	movf	___fladd@a+3,w
 12236  0E44  3980               	andlw	128
 12237  0E45  00B1               	movwf	??___fladd
 12238  0E46  0831               	movf	??___fladd,w
 12239  0E47  00BA               	movwf	___fladd@aexp
 12240  0E48  083A               	movf	___fladd@aexp,w
 12241  0E49  0639               	xorwf	___fladd@signs,w
 12242  0E4A  1D03               	btfss	3,2
 12243  0E4B  1739               	bsf	___fladd@signs,6
 12244  0E4C  3530               	lslf	___fladd@a+3,w
 12245  0E4D  00B1               	movwf	??___fladd
 12246  0E4E  0831               	movf	??___fladd,w
 12247  0E4F  00BA               	movwf	___fladd@aexp
 12248  0E50  1BAF               	btfsc	___fladd@a+2,7
 12249  0E51  143A               	bsf	___fladd@aexp,0
 12250  0E52  083A               	movf	___fladd@aexp,w
 12251  0E53  1903               	btfsc	3,2
 12252  0E54  2E63               	goto	l3500
 12253  0E55  0A3A               	incf	___fladd@aexp,w
 12254  0E56  1D03               	btfss	3,2
 12255  0E57  2E60               	goto	l3496
 12256  0E58  3000               	movlw	0
 12257  0E59  00B0               	movwf	___fladd@a+3
 12258  0E5A  3000               	movlw	0
 12259  0E5B  00AF               	movwf	___fladd@a+2
 12260  0E5C  3000               	movlw	0
 12261  0E5D  00AE               	movwf	___fladd@a+1
 12262  0E5E  3000               	movlw	0
 12263  0E5F  00AD               	movwf	___fladd@a
 12264  0E60                     l3496:	
 12265  0E60  17AF               	bsf	___fladd@a+2,7
 12266  0E61  01B0               	clrf	___fladd@a+3
 12267  0E62  2E6B               	goto	l1509
 12268  0E63                     l3500:	
 12269  0E63  3000               	movlw	0
 12270  0E64  00B0               	movwf	___fladd@a+3
 12271  0E65  3000               	movlw	0
 12272  0E66  00AF               	movwf	___fladd@a+2
 12273  0E67  3000               	movlw	0
 12274  0E68  00AE               	movwf	___fladd@a+1
 12275  0E69  3000               	movlw	0
 12276  0E6A  00AD               	movwf	___fladd@a
 12277  0E6B                     l1509:	
 12278  0E6B  083B               	movf	___fladd@bexp,w
 12279  0E6C  023A               	subwf	___fladd@aexp,w
 12280  0E6D  1803               	skipnc
 12281  0E6E  2EB1               	goto	l3536
 12282  0E6F  1F39               	btfss	___fladd@signs,6
 12283  0E70  2E75               	goto	l3506
 12284  0E71  3080               	movlw	128
 12285  0E72  00B1               	movwf	??___fladd
 12286  0E73  0831               	movf	??___fladd,w
 12287  0E74  06B9               	xorwf	___fladd@signs,f
 12288  0E75                     l3506:	
 12289  0E75  083B               	movf	___fladd@bexp,w
 12290  0E76  00B1               	movwf	??___fladd
 12291  0E77  0831               	movf	??___fladd,w
 12292  0E78  00BC               	movwf	___fladd@grs
 12293  0E79  083A               	movf	___fladd@aexp,w
 12294  0E7A  00B1               	movwf	??___fladd
 12295  0E7B  0831               	movf	??___fladd,w
 12296  0E7C  00BB               	movwf	___fladd@bexp
 12297  0E7D  083C               	movf	___fladd@grs,w
 12298  0E7E  00B1               	movwf	??___fladd
 12299  0E7F  0831               	movf	??___fladd,w
 12300  0E80  00BA               	movwf	___fladd@aexp
 12301  0E81  0829               	movf	___fladd@b,w
 12302  0E82  00B1               	movwf	??___fladd
 12303  0E83  0831               	movf	??___fladd,w
 12304  0E84  00BC               	movwf	___fladd@grs
 12305  0E85  082D               	movf	___fladd@a,w
 12306  0E86  00B1               	movwf	??___fladd
 12307  0E87  0831               	movf	??___fladd,w
 12308  0E88  00A9               	movwf	___fladd@b
 12309  0E89  083C               	movf	___fladd@grs,w
 12310  0E8A  00B1               	movwf	??___fladd
 12311  0E8B  0831               	movf	??___fladd,w
 12312  0E8C  00AD               	movwf	___fladd@a
 12313  0E8D  082A               	movf	___fladd@b+1,w
 12314  0E8E  00B1               	movwf	??___fladd
 12315  0E8F  0831               	movf	??___fladd,w
 12316  0E90  00BC               	movwf	___fladd@grs
 12317  0E91  082E               	movf	___fladd@a+1,w
 12318  0E92  00B1               	movwf	??___fladd
 12319  0E93  0831               	movf	??___fladd,w
 12320  0E94  00AA               	movwf	___fladd@b+1
 12321  0E95  083C               	movf	___fladd@grs,w
 12322  0E96  00B1               	movwf	??___fladd
 12323  0E97  0831               	movf	??___fladd,w
 12324  0E98  00AE               	movwf	___fladd@a+1
 12325  0E99  082B               	movf	___fladd@b+2,w
 12326  0E9A  00B1               	movwf	??___fladd
 12327  0E9B  0831               	movf	??___fladd,w
 12328  0E9C  00BC               	movwf	___fladd@grs
 12329  0E9D  082F               	movf	___fladd@a+2,w
 12330  0E9E  00B1               	movwf	??___fladd
 12331  0E9F  0831               	movf	??___fladd,w
 12332  0EA0  00AB               	movwf	___fladd@b+2
 12333  0EA1  083C               	movf	___fladd@grs,w
 12334  0EA2  00B1               	movwf	??___fladd
 12335  0EA3  0831               	movf	??___fladd,w
 12336  0EA4  00AF               	movwf	___fladd@a+2
 12337  0EA5  082C               	movf	___fladd@b+3,w
 12338  0EA6  00B1               	movwf	??___fladd
 12339  0EA7  0831               	movf	??___fladd,w
 12340  0EA8  00BC               	movwf	___fladd@grs
 12341  0EA9  0830               	movf	___fladd@a+3,w
 12342  0EAA  00B1               	movwf	??___fladd
 12343  0EAB  0831               	movf	??___fladd,w
 12344  0EAC  00AC               	movwf	___fladd@b+3
 12345  0EAD  083C               	movf	___fladd@grs,w
 12346  0EAE  00B1               	movwf	??___fladd
 12347  0EAF  0831               	movf	??___fladd,w
 12348  0EB0  00B0               	movwf	___fladd@a+3
 12349  0EB1                     l3536:	
 12350  0EB1  01BC               	clrf	___fladd@grs
 12351  0EB2  083A               	movf	___fladd@aexp,w
 12352  0EB3  00B1               	movwf	??___fladd
 12353  0EB4  01B2               	clrf	??___fladd+1
 12354  0EB5  0832               	movf	??___fladd+1,w
 12355  0EB6  00B4               	movwf	??___fladd+3
 12356  0EB7  083B               	movf	___fladd@bexp,w
 12357  0EB8  0231               	subwf	??___fladd,w
 12358  0EB9  00B3               	movwf	??___fladd+2
 12359  0EBA  1C03               	skipc
 12360  0EBB  03B4               	decf	??___fladd+3,f
 12361  0EBC  0834               	movf	??___fladd+3,w
 12362  0EBD  3A80               	xorlw	128
 12363  0EBE  00B5               	movwf	??___fladd+4
 12364  0EBF  3080               	movlw	128
 12365  0EC0  0235               	subwf	??___fladd+4,w
 12366  0EC1  1D03               	skipz
 12367  0EC2  2EC5               	goto	u2685
 12368  0EC3  301A               	movlw	26
 12369  0EC4  0233               	subwf	??___fladd+2,w
 12370  0EC5                     u2685:	
 12371  0EC5  1C03               	skipc
 12372  0EC6  2EF9               	goto	l3554
 12373  0EC7  0140               	movlb	0	; select bank0
 12374  0EC8  082C               	movf	___fladd@b+3,w
 12375  0EC9  042B               	iorwf	___fladd@b+2,w
 12376  0ECA  042A               	iorwf	___fladd@b+1,w
 12377  0ECB  0429               	iorwf	___fladd@b,w
 12378  0ECC  1903               	btfsc	3,2
 12379  0ECD  2ED0               	goto	u2690
 12380  0ECE  3001               	movlw	1
 12381  0ECF  2ED1               	goto	u2700
 12382  0ED0                     u2690:	
 12383  0ED0  3000               	movlw	0
 12384  0ED1                     u2700:	
 12385  0ED1  00B1               	movwf	??___fladd
 12386  0ED2  0831               	movf	??___fladd,w
 12387  0ED3  00BC               	movwf	___fladd@grs
 12388  0ED4  3000               	movlw	0
 12389  0ED5  00AC               	movwf	___fladd@b+3
 12390  0ED6  3000               	movlw	0
 12391  0ED7  00AB               	movwf	___fladd@b+2
 12392  0ED8  3000               	movlw	0
 12393  0ED9  00AA               	movwf	___fladd@b+1
 12394  0EDA  3000               	movlw	0
 12395  0EDB  00A9               	movwf	___fladd@b
 12396  0EDC  083A               	movf	___fladd@aexp,w
 12397  0EDD  00B1               	movwf	??___fladd
 12398  0EDE  0831               	movf	??___fladd,w
 12399  0EDF  00BB               	movwf	___fladd@bexp
 12400  0EE0  2EFE               	goto	l1513
 12401  0EE1                     l1515:	
 12402  0EE1  1C3C               	btfss	___fladd@grs,0
 12403  0EE2  2EE9               	goto	l3544
 12404  0EE3  363C               	lsrf	___fladd@grs,w
 12405  0EE4  3801               	iorlw	1
 12406  0EE5  00B1               	movwf	??___fladd
 12407  0EE6  0831               	movf	??___fladd,w
 12408  0EE7  00BC               	movwf	___fladd@grs
 12409  0EE8  2EEB               	goto	l3546
 12410  0EE9                     l3544:	
 12411  0EE9  1003               	clrc
 12412  0EEA  0CBC               	rrf	___fladd@grs,f
 12413  0EEB                     l3546:	
 12414  0EEB  1829               	btfsc	___fladd@b,0
 12415  0EEC  17BC               	bsf	___fladd@grs,7
 12416  0EED  3001               	movlw	1
 12417  0EEE  00B1               	movwf	??___fladd
 12418  0EEF                     u2735:	
 12419  0EEF  37AC               	asrf	___fladd@b+3,f
 12420  0EF0  0CAB               	rrf	___fladd@b+2,f
 12421  0EF1  0CAA               	rrf	___fladd@b+1,f
 12422  0EF2  0CA9               	rrf	___fladd@b,f
 12423  0EF3  0BB1               	decfsz	??___fladd& (0+127),f
 12424  0EF4  2EEF               	goto	u2735
 12425  0EF5  3001               	movlw	1
 12426  0EF6  00B1               	movwf	??___fladd
 12427  0EF7  0831               	movf	??___fladd,w
 12428  0EF8  07BB               	addwf	___fladd@bexp,f
 12429  0EF9                     l3554:	
 12430  0EF9  0140               	movlb	0	; select bank0
 12431  0EFA  083A               	movf	___fladd@aexp,w
 12432  0EFB  023B               	subwf	___fladd@bexp,w
 12433  0EFC  1C03               	skipc
 12434  0EFD  2EE1               	goto	l1515
 12435  0EFE                     l1513:	
 12436  0EFE  1B39               	btfsc	___fladd@signs,6
 12437  0EFF  2F2F               	goto	l3580
 12438  0F00  083B               	movf	___fladd@bexp,w
 12439  0F01  1D03               	btfss	3,2
 12440  0F02  2F0C               	goto	l3562
 12441  0F03  3000               	movlw	0
 12442  0F04  00AC               	movwf	?___fladd+3
 12443  0F05  3000               	movlw	0
 12444  0F06  00AB               	movwf	?___fladd+2
 12445  0F07  3000               	movlw	0
 12446  0F08  00AA               	movwf	?___fladd+1
 12447  0F09  3000               	movlw	0
 12448  0F0A  00A9               	movwf	?___fladd
 12449  0F0B  0008               	return
 12450  0F0C                     l3562:	
 12451  0F0C  082D               	movf	___fladd@a,w
 12452  0F0D  07A9               	addwf	___fladd@b,f
 12453  0F0E  082E               	movf	___fladd@a+1,w
 12454  0F0F  3DAA               	addwfc	___fladd@b+1,f
 12455  0F10  082F               	movf	___fladd@a+2,w
 12456  0F11  3DAB               	addwfc	___fladd@b+2,f
 12457  0F12  0830               	movf	___fladd@a+3,w
 12458  0F13  3DAC               	addwfc	___fladd@b+3,f
 12459  0F14  1C2C               	btfss	___fladd@b+3,0
 12460  0F15  2FA9               	goto	l3614
 12461  0F16  1C3C               	btfss	___fladd@grs,0
 12462  0F17  2F1E               	goto	l3570
 12463  0F18  363C               	lsrf	___fladd@grs,w
 12464  0F19  3801               	iorlw	1
 12465  0F1A  00B1               	movwf	??___fladd
 12466  0F1B  0831               	movf	??___fladd,w
 12467  0F1C  00BC               	movwf	___fladd@grs
 12468  0F1D  2F20               	goto	l3572
 12469  0F1E                     l3570:	
 12470  0F1E  1003               	clrc
 12471  0F1F  0CBC               	rrf	___fladd@grs,f
 12472  0F20                     l3572:	
 12473  0F20  1829               	btfsc	___fladd@b,0
 12474  0F21  17BC               	bsf	___fladd@grs,7
 12475  0F22  3001               	movlw	1
 12476  0F23  00B1               	movwf	??___fladd
 12477  0F24                     u2805:	
 12478  0F24  37AC               	asrf	___fladd@b+3,f
 12479  0F25  0CAB               	rrf	___fladd@b+2,f
 12480  0F26  0CAA               	rrf	___fladd@b+1,f
 12481  0F27  0CA9               	rrf	___fladd@b,f
 12482  0F28  0BB1               	decfsz	??___fladd& (0+127),f
 12483  0F29  2F24               	goto	u2805
 12484  0F2A  3001               	movlw	1
 12485  0F2B  00B1               	movwf	??___fladd
 12486  0F2C  0831               	movf	??___fladd,w
 12487  0F2D  07BB               	addwf	___fladd@bexp,f
 12488  0F2E  2FA9               	goto	l3614
 12489  0F2F                     l3580:	
 12490  0F2F  082C               	movf	___fladd@b+3,w
 12491  0F30  3A80               	xorlw	128
 12492  0F31  00B1               	movwf	??___fladd
 12493  0F32  0830               	movf	___fladd@a+3,w
 12494  0F33  3A80               	xorlw	128
 12495  0F34  0231               	subwf	??___fladd,w
 12496  0F35  1D03               	skipz
 12497  0F36  2F41               	goto	u2813
 12498  0F37  082F               	movf	___fladd@a+2,w
 12499  0F38  022B               	subwf	___fladd@b+2,w
 12500  0F39  1D03               	skipz
 12501  0F3A  2F41               	goto	u2813
 12502  0F3B  082E               	movf	___fladd@a+1,w
 12503  0F3C  022A               	subwf	___fladd@b+1,w
 12504  0F3D  1D03               	skipz
 12505  0F3E  2F41               	goto	u2813
 12506  0F3F  082D               	movf	___fladd@a,w
 12507  0F40  0229               	subwf	___fladd@b,w
 12508  0F41                     u2813:	
 12509  0F41  1803               	skipnc
 12510  0F42  2F79               	goto	l3590
 12511  0F43  30FF               	movlw	255
 12512  0F44  00B1               	movwf	??___fladd
 12513  0F45  30FF               	movlw	255
 12514  0F46  00B2               	movwf	??___fladd+1
 12515  0F47  30FF               	movlw	255
 12516  0F48  00B3               	movwf	??___fladd+2
 12517  0F49  30FF               	movlw	255
 12518  0F4A  00B4               	movwf	??___fladd+3
 12519  0F4B  0829               	movf	___fladd@b,w
 12520  0F4C  022D               	subwf	___fladd@a,w
 12521  0F4D  00B5               	movwf	??___fladd+4
 12522  0F4E  082A               	movf	___fladd@b+1,w
 12523  0F4F  3B2E               	subwfb	___fladd@a+1,w
 12524  0F50  00B6               	movwf	??___fladd+5
 12525  0F51  082B               	movf	___fladd@b+2,w
 12526  0F52  3B2F               	subwfb	___fladd@a+2,w
 12527  0F53  00B7               	movwf	??___fladd+6
 12528  0F54  082C               	movf	___fladd@b+3,w
 12529  0F55  3B30               	subwfb	___fladd@a+3,w
 12530  0F56  00B8               	movwf	??___fladd+7
 12531  0F57  0835               	movf	??___fladd+4,w
 12532  0F58  07B1               	addwf	??___fladd,f
 12533  0F59  0836               	movf	??___fladd+5,w
 12534  0F5A  3DB2               	addwfc	??___fladd+1,f
 12535  0F5B  0837               	movf	??___fladd+6,w
 12536  0F5C  3DB3               	addwfc	??___fladd+2,f
 12537  0F5D  0838               	movf	??___fladd+7,w
 12538  0F5E  3DB4               	addwfc	??___fladd+3,f
 12539  0F5F  0834               	movf	??___fladd+3,w
 12540  0F60  00AC               	movwf	___fladd@b+3
 12541  0F61  0833               	movf	??___fladd+2,w
 12542  0F62  00AB               	movwf	___fladd@b+2
 12543  0F63  0832               	movf	??___fladd+1,w
 12544  0F64  00AA               	movwf	___fladd@b+1
 12545  0F65  0831               	movf	??___fladd,w
 12546  0F66  00A9               	movwf	___fladd@b
 12547  0F67  3080               	movlw	128
 12548  0F68  00B1               	movwf	??___fladd
 12549  0F69  0831               	movf	??___fladd,w
 12550  0F6A  06B9               	xorwf	___fladd@signs,f
 12551  0F6B  09BC               	comf	___fladd@grs,f
 12552  0F6C  0ABC               	incf	___fladd@grs,f
 12553  0F6D  083C               	movf	___fladd@grs,w
 12554  0F6E  1D03               	btfss	3,2
 12555  0F6F  2F81               	goto	l1530
 12556  0F70  3001               	movlw	1
 12557  0F71  07A9               	addwf	___fladd@b,f
 12558  0F72  3000               	movlw	0
 12559  0F73  3DAA               	addwfc	___fladd@b+1,f
 12560  0F74  3000               	movlw	0
 12561  0F75  3DAB               	addwfc	___fladd@b+2,f
 12562  0F76  3000               	movlw	0
 12563  0F77  3DAC               	addwfc	___fladd@b+3,f
 12564  0F78  2F81               	goto	l1530
 12565  0F79                     l3590:	
 12566  0F79  082D               	movf	___fladd@a,w
 12567  0F7A  02A9               	subwf	___fladd@b,f
 12568  0F7B  082E               	movf	___fladd@a+1,w
 12569  0F7C  3BAA               	subwfb	___fladd@b+1,f
 12570  0F7D  082F               	movf	___fladd@a+2,w
 12571  0F7E  3BAB               	subwfb	___fladd@b+2,f
 12572  0F7F  0830               	movf	___fladd@a+3,w
 12573  0F80  3BAC               	subwfb	___fladd@b+3,f
 12574  0F81                     l1530:	
 12575  0F81  082C               	movf	___fladd@b+3,w
 12576  0F82  042B               	iorwf	___fladd@b+2,w
 12577  0F83  042A               	iorwf	___fladd@b+1,w
 12578  0F84  0429               	iorwf	___fladd@b,w
 12579  0F85  1D03               	skipz
 12580  0F86  2FA7               	goto	l3612
 12581  0F87  083C               	movf	___fladd@grs,w
 12582  0F88  1D03               	btfss	3,2
 12583  0F89  2FA7               	goto	l3612
 12584  0F8A  3000               	movlw	0
 12585  0F8B  00AC               	movwf	?___fladd+3
 12586  0F8C  3000               	movlw	0
 12587  0F8D  00AB               	movwf	?___fladd+2
 12588  0F8E  3000               	movlw	0
 12589  0F8F  00AA               	movwf	?___fladd+1
 12590  0F90  3000               	movlw	0
 12591  0F91  00A9               	movwf	?___fladd
 12592  0F92  0008               	return
 12593  0F93                     l3598:	
 12594  0F93  3001               	movlw	1
 12595  0F94                     u2855:	
 12596  0F94  35A9               	lslf	___fladd@b,f
 12597  0F95  0DAA               	rlf	___fladd@b+1,f
 12598  0F96  0DAB               	rlf	___fladd@b+2,f
 12599  0F97  0DAC               	rlf	___fladd@b+3,f
 12600  0F98  0B89               	decfsz	9,f
 12601  0F99  2F94               	goto	u2855
 12602  0F9A  1BBC               	btfsc	___fladd@grs,7
 12603  0F9B  1429               	bsf	___fladd@b,0
 12604  0F9C  1C3C               	btfss	___fladd@grs,0
 12605  0F9D  2FA0               	goto	l3606
 12606  0F9E  1403               	setc
 12607  0F9F  2FA1               	goto	L3
 12608  0FA0                     l3606:	
 12609  0FA0  1003               	clrc
 12610  0FA1                     L3:	
 12611  0FA1  0DBC               	rlf	___fladd@grs,f
 12612  0FA2  083B               	movf	___fladd@bexp,w
 12613  0FA3  1903               	btfsc	3,2
 12614  0FA4  2FA7               	goto	l3612
 12615  0FA5  3001               	movlw	1
 12616  0FA6  02BB               	subwf	___fladd@bexp,f
 12617  0FA7                     l3612:	
 12618  0FA7  1FAB               	btfss	___fladd@b+2,7
 12619  0FA8  2F93               	goto	l3598
 12620  0FA9                     l3614:	
 12621  0FA9  01BA               	clrf	___fladd@aexp
 12622  0FAA  1FBC               	btfss	___fladd@grs,7
 12623  0FAB  2FB4               	goto	l3624
 12624  0FAC  083C               	movf	___fladd@grs,w
 12625  0FAD  397F               	andlw	127
 12626  0FAE  1903               	btfsc	3,2
 12627  0FAF  1829               	btfsc	___fladd@b,0
 12628  0FB0  2FB2               	goto	l3620
 12629  0FB1  2FB4               	goto	l3624
 12630  0FB2                     l3620:	
 12631  0FB2  01BA               	clrf	___fladd@aexp
 12632  0FB3  0ABA               	incf	___fladd@aexp,f
 12633  0FB4                     l3624:	
 12634  0FB4  083A               	movf	___fladd@aexp,w
 12635  0FB5  1903               	btfsc	3,2
 12636  0FB6  2FE0               	goto	l1543
 12637  0FB7  3001               	movlw	1
 12638  0FB8  07A9               	addwf	___fladd@b,f
 12639  0FB9  3000               	movlw	0
 12640  0FBA  3DAA               	addwfc	___fladd@b+1,f
 12641  0FBB  3000               	movlw	0
 12642  0FBC  3DAB               	addwfc	___fladd@b+2,f
 12643  0FBD  3000               	movlw	0
 12644  0FBE  3DAC               	addwfc	___fladd@b+3,f
 12645  0FBF  1C2C               	btfss	___fladd@b+3,0
 12646  0FC0  2FE0               	goto	l1543
 12647  0FC1  0829               	movf	___fladd@b,w
 12648  0FC2  00B1               	movwf	??___fladd
 12649  0FC3  082A               	movf	___fladd@b+1,w
 12650  0FC4  00B2               	movwf	??___fladd+1
 12651  0FC5  082B               	movf	___fladd@b+2,w
 12652  0FC6  00B3               	movwf	??___fladd+2
 12653  0FC7  082C               	movf	___fladd@b+3,w
 12654  0FC8  00B4               	movwf	??___fladd+3
 12655  0FC9  3001               	movlw	1
 12656  0FCA  00B5               	movwf	??___fladd+4
 12657  0FCB                     u2955:	
 12658  0FCB  37B4               	asrf	??___fladd+3,f
 12659  0FCC  0CB3               	rrf	??___fladd+2,f
 12660  0FCD  0CB2               	rrf	??___fladd+1,f
 12661  0FCE  0CB1               	rrf	??___fladd,f
 12662  0FCF  0BB5               	decfsz	??___fladd+4,f
 12663  0FD0  2FCB               	goto	u2955
 12664  0FD1  0834               	movf	??___fladd+3,w
 12665  0FD2  00AC               	movwf	___fladd@b+3
 12666  0FD3  0833               	movf	??___fladd+2,w
 12667  0FD4  00AB               	movwf	___fladd@b+2
 12668  0FD5  0832               	movf	??___fladd+1,w
 12669  0FD6  00AA               	movwf	___fladd@b+1
 12670  0FD7  0831               	movf	??___fladd,w
 12671  0FD8  00A9               	movwf	___fladd@b
 12672  0FD9  0A3B               	incf	___fladd@bexp,w
 12673  0FDA  1903               	btfsc	3,2
 12674  0FDB  2FE0               	goto	l1543
 12675  0FDC  3001               	movlw	1
 12676  0FDD  00B1               	movwf	??___fladd
 12677  0FDE  0831               	movf	??___fladd,w
 12678  0FDF  07BB               	addwf	___fladd@bexp,f
 12679  0FE0                     l1543:	
 12680  0FE0  0A3B               	incf	___fladd@bexp,w
 12681  0FE1  1D03               	btfss	3,2
 12682  0FE2  083B               	movf	___fladd@bexp,w
 12683  0FE3  1D03               	btfss	3,2
 12684  0FE4  2FF0               	goto	l3642
 12685  0FE5  3000               	movlw	0
 12686  0FE6  00AC               	movwf	___fladd@b+3
 12687  0FE7  3000               	movlw	0
 12688  0FE8  00AB               	movwf	___fladd@b+2
 12689  0FE9  3000               	movlw	0
 12690  0FEA  00AA               	movwf	___fladd@b+1
 12691  0FEB  3000               	movlw	0
 12692  0FEC  00A9               	movwf	___fladd@b
 12693  0FED  083B               	movf	___fladd@bexp,w
 12694  0FEE  1903               	btfsc	3,2
 12695  0FEF  01B9               	clrf	___fladd@signs
 12696  0FF0                     l3642:	
 12697  0FF0  1C3B               	btfss	___fladd@bexp,0
 12698  0FF1  2FF4               	goto	l3646
 12699  0FF2  17AB               	bsf	___fladd@b+2,7
 12700  0FF3  2FF8               	goto	l1551
 12701  0FF4                     l3646:	
 12702  0FF4  307F               	movlw	127
 12703  0FF5  00B1               	movwf	??___fladd
 12704  0FF6  0831               	movf	??___fladd,w
 12705  0FF7  05AB               	andwf	___fladd@b+2,f
 12706  0FF8                     l1551:	
 12707  0FF8  363B               	lsrf	___fladd@bexp,w
 12708  0FF9  00B1               	movwf	??___fladd
 12709  0FFA  0831               	movf	??___fladd,w
 12710  0FFB  00AC               	movwf	___fladd@b+3
 12711  0FFC  1FB9               	btfss	___fladd@signs,7
 12712  0FFD  0008               	return
 12713  0FFE  17AC               	bsf	___fladd@b+3,7
 12714  0FFF  0008               	return
 12715  1000                     __end_of___fladd:	
 12716                           
 12717                           	psect	text28
 12718  03EE                     __ptext28:	
 12719 ;; *************** function ___flmul *****************
 12720 ;; Defined at:
 12721 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;  b               4   29[BANK0 ] unsigned char 
 12724 ;;  a               4   33[BANK0 ] unsigned char 
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;  prod            4   49[BANK0 ] struct .
 12727 ;;  grs             4   44[BANK0 ] unsigned long 
 12728 ;;  temp            2   53[BANK0 ] struct .
 12729 ;;  bexp            1   48[BANK0 ] unsigned char 
 12730 ;;  aexp            1   43[BANK0 ] unsigned char 
 12731 ;;  sign            1   42[BANK0 ] unsigned char 
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  4   29[BANK0 ] unsigned char 
 12734 ;; Registers used:
 12735 ;;		wreg, status,2, status,0, pclath, cstack
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12741 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12742 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12743 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12744 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12745 ;;Total ram usage:       26 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:    5
 12748 ;; This function calls:
 12749 ;;		__Umul8_16
 12750 ;; This function is called by:
 12751 ;;		_HueToRGB
 12752 ;;		_LED_setHSL
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           
 12757                           ;psect for function ___flmul
 12758  03EE                     ___flmul:	
 12759                           
 12760                           ;incstack = 0
 12761                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 12762  03EE  0140               	movlb	0	; select bank0
 12763  03EF  0840               	movf	___flmul@b+3,w
 12764  03F0  3980               	andlw	128
 12765  03F1  00C5               	movwf	??___flmul
 12766  03F2  0845               	movf	??___flmul,w
 12767  03F3  00CA               	movwf	___flmul@sign
 12768  03F4  3540               	lslf	___flmul@b+3,w
 12769  03F5  00C5               	movwf	??___flmul
 12770  03F6  0845               	movf	??___flmul,w
 12771  03F7  00D0               	movwf	___flmul@bexp
 12772  03F8  1BBF               	btfsc	___flmul@b+2,7
 12773  03F9  1450               	bsf	___flmul@bexp,0
 12774  03FA  0850               	movf	___flmul@bexp,w
 12775  03FB  1903               	btfsc	3,2
 12776  03FC  2C0A               	goto	l5076
 12777  03FD  0A50               	incf	___flmul@bexp,w
 12778  03FE  1D03               	btfss	3,2
 12779  03FF  2C08               	goto	l5074
 12780  0400  3000               	movlw	0
 12781  0401  00C0               	movwf	___flmul@b+3
 12782  0402  3000               	movlw	0
 12783  0403  00BF               	movwf	___flmul@b+2
 12784  0404  3000               	movlw	0
 12785  0405  00BE               	movwf	___flmul@b+1
 12786  0406  3000               	movlw	0
 12787  0407  00BD               	movwf	___flmul@b
 12788  0408                     l5074:	
 12789  0408  17BF               	bsf	___flmul@b+2,7
 12790  0409  2C12               	goto	l5078
 12791  040A                     l5076:	
 12792  040A  3000               	movlw	0
 12793  040B  00C0               	movwf	___flmul@b+3
 12794  040C  3000               	movlw	0
 12795  040D  00BF               	movwf	___flmul@b+2
 12796  040E  3000               	movlw	0
 12797  040F  00BE               	movwf	___flmul@b+1
 12798  0410  3000               	movlw	0
 12799  0411  00BD               	movwf	___flmul@b
 12800  0412                     l5078:	
 12801  0412  0844               	movf	___flmul@a+3,w
 12802  0413  3980               	andlw	128
 12803  0414  00C5               	movwf	??___flmul
 12804  0415  0845               	movf	??___flmul,w
 12805  0416  06CA               	xorwf	___flmul@sign,f
 12806  0417  3544               	lslf	___flmul@a+3,w
 12807  0418  00C5               	movwf	??___flmul
 12808  0419  0845               	movf	??___flmul,w
 12809  041A  00CB               	movwf	___flmul@aexp
 12810  041B  1BC3               	btfsc	___flmul@a+2,7
 12811  041C  144B               	bsf	___flmul@aexp,0
 12812  041D  084B               	movf	___flmul@aexp,w
 12813  041E  1903               	btfsc	3,2
 12814  041F  2C2D               	goto	l5094
 12815  0420  0A4B               	incf	___flmul@aexp,w
 12816  0421  1D03               	btfss	3,2
 12817  0422  2C2B               	goto	l5092
 12818  0423  3000               	movlw	0
 12819  0424  00C4               	movwf	___flmul@a+3
 12820  0425  3000               	movlw	0
 12821  0426  00C3               	movwf	___flmul@a+2
 12822  0427  3000               	movlw	0
 12823  0428  00C2               	movwf	___flmul@a+1
 12824  0429  3000               	movlw	0
 12825  042A  00C1               	movwf	___flmul@a
 12826  042B                     l5092:	
 12827  042B  17C3               	bsf	___flmul@a+2,7
 12828  042C  2C35               	goto	l5096
 12829  042D                     l5094:	
 12830  042D  3000               	movlw	0
 12831  042E  00C4               	movwf	___flmul@a+3
 12832  042F  3000               	movlw	0
 12833  0430  00C3               	movwf	___flmul@a+2
 12834  0431  3000               	movlw	0
 12835  0432  00C2               	movwf	___flmul@a+1
 12836  0433  3000               	movlw	0
 12837  0434  00C1               	movwf	___flmul@a
 12838  0435                     l5096:	
 12839  0435  084B               	movf	___flmul@aexp,w
 12840  0436  1D03               	btfss	3,2
 12841  0437  0850               	movf	___flmul@bexp,w
 12842  0438  1D03               	btfss	3,2
 12843  0439  2C43               	goto	l5104
 12844  043A  3000               	movlw	0
 12845  043B  00C0               	movwf	?___flmul+3
 12846  043C  3000               	movlw	0
 12847  043D  00BF               	movwf	?___flmul+2
 12848  043E  3000               	movlw	0
 12849  043F  00BE               	movwf	?___flmul+1
 12850  0440  3000               	movlw	0
 12851  0441  00BD               	movwf	?___flmul
 12852  0442  0008               	return
 12853  0443                     l5104:	
 12854  0443  083D               	movf	___flmul@b,w
 12855  0444  00C5               	movwf	??___flmul
 12856  0445  0845               	movf	??___flmul,w
 12857  0446  00A0               	movwf	__Umul8_16@multiplicand
 12858  0447  0843               	movf	___flmul@a+2,w
 12859  0448  3192  22D7  3183   	fcall	__Umul8_16
 12860  044B  0140               	movlb	0	; select bank0
 12861  044C  0821               	movf	?__Umul8_16+1,w
 12862  044D  00D6               	movwf	___flmul@temp+1
 12863  044E  0820               	movf	?__Umul8_16,w
 12864  044F  00D5               	movwf	___flmul@temp
 12865  0450  0855               	movf	___flmul@temp,w
 12866  0451  00C5               	movwf	??___flmul
 12867  0452  01C6               	clrf	??___flmul+1
 12868  0453  01C7               	clrf	??___flmul+2
 12869  0454  01C8               	clrf	??___flmul+3
 12870  0455  0848               	movf	??___flmul+3,w
 12871  0456  00CF               	movwf	___flmul@grs+3
 12872  0457  0847               	movf	??___flmul+2,w
 12873  0458  00CE               	movwf	___flmul@grs+2
 12874  0459  0846               	movf	??___flmul+1,w
 12875  045A  00CD               	movwf	___flmul@grs+1
 12876  045B  0845               	movf	??___flmul,w
 12877  045C  00CC               	movwf	___flmul@grs
 12878  045D  0856               	movf	___flmul@temp+1,w
 12879  045E  00C5               	movwf	??___flmul
 12880  045F  01C6               	clrf	??___flmul+1
 12881  0460  01C7               	clrf	??___flmul+2
 12882  0461  01C8               	clrf	??___flmul+3
 12883  0462  0848               	movf	??___flmul+3,w
 12884  0463  00D4               	movwf	___flmul@prod+3
 12885  0464  0847               	movf	??___flmul+2,w
 12886  0465  00D3               	movwf	___flmul@prod+2
 12887  0466  0846               	movf	??___flmul+1,w
 12888  0467  00D2               	movwf	___flmul@prod+1
 12889  0468  0845               	movf	??___flmul,w
 12890  0469  00D1               	movwf	___flmul@prod
 12891  046A  083E               	movf	___flmul@b+1,w
 12892  046B  00C5               	movwf	??___flmul
 12893  046C  0845               	movf	??___flmul,w
 12894  046D  00A0               	movwf	__Umul8_16@multiplicand
 12895  046E  0842               	movf	___flmul@a+1,w
 12896  046F  3192  22D7  3183   	fcall	__Umul8_16
 12897  0472  0140               	movlb	0	; select bank0
 12898  0473  0821               	movf	?__Umul8_16+1,w
 12899  0474  00D6               	movwf	___flmul@temp+1
 12900  0475  0820               	movf	?__Umul8_16,w
 12901  0476  00D5               	movwf	___flmul@temp
 12902  0477  0855               	movf	___flmul@temp,w
 12903  0478  00C5               	movwf	??___flmul
 12904  0479  01C6               	clrf	??___flmul+1
 12905  047A  01C7               	clrf	??___flmul+2
 12906  047B  01C8               	clrf	??___flmul+3
 12907  047C  0845               	movf	??___flmul,w
 12908  047D  07CC               	addwf	___flmul@grs,f
 12909  047E  0846               	movf	??___flmul+1,w
 12910  047F  3DCD               	addwfc	___flmul@grs+1,f
 12911  0480  0847               	movf	??___flmul+2,w
 12912  0481  3DCE               	addwfc	___flmul@grs+2,f
 12913  0482  0848               	movf	??___flmul+3,w
 12914  0483  3DCF               	addwfc	___flmul@grs+3,f
 12915  0484  0856               	movf	___flmul@temp+1,w
 12916  0485  00C5               	movwf	??___flmul
 12917  0486  01C6               	clrf	??___flmul+1
 12918  0487  01C7               	clrf	??___flmul+2
 12919  0488  01C8               	clrf	??___flmul+3
 12920  0489  0845               	movf	??___flmul,w
 12921  048A  07D1               	addwf	___flmul@prod,f
 12922  048B  0846               	movf	??___flmul+1,w
 12923  048C  3DD2               	addwfc	___flmul@prod+1,f
 12924  048D  0847               	movf	??___flmul+2,w
 12925  048E  3DD3               	addwfc	___flmul@prod+2,f
 12926  048F  0848               	movf	??___flmul+3,w
 12927  0490  3DD4               	addwfc	___flmul@prod+3,f
 12928  0491  083F               	movf	___flmul@b+2,w
 12929  0492  00C5               	movwf	??___flmul
 12930  0493  0845               	movf	??___flmul,w
 12931  0494  00A0               	movwf	__Umul8_16@multiplicand
 12932  0495  0841               	movf	___flmul@a,w
 12933  0496  3192  22D7  3183   	fcall	__Umul8_16
 12934  0499  0140               	movlb	0	; select bank0
 12935  049A  0821               	movf	?__Umul8_16+1,w
 12936  049B  00D6               	movwf	___flmul@temp+1
 12937  049C  0820               	movf	?__Umul8_16,w
 12938  049D  00D5               	movwf	___flmul@temp
 12939  049E  0855               	movf	___flmul@temp,w
 12940  049F  00C5               	movwf	??___flmul
 12941  04A0  01C6               	clrf	??___flmul+1
 12942  04A1  01C7               	clrf	??___flmul+2
 12943  04A2  01C8               	clrf	??___flmul+3
 12944  04A3  0845               	movf	??___flmul,w
 12945  04A4  07CC               	addwf	___flmul@grs,f
 12946  04A5  0846               	movf	??___flmul+1,w
 12947  04A6  3DCD               	addwfc	___flmul@grs+1,f
 12948  04A7  0847               	movf	??___flmul+2,w
 12949  04A8  3DCE               	addwfc	___flmul@grs+2,f
 12950  04A9  0848               	movf	??___flmul+3,w
 12951  04AA  3DCF               	addwfc	___flmul@grs+3,f
 12952  04AB  0856               	movf	___flmul@temp+1,w
 12953  04AC  00C5               	movwf	??___flmul
 12954  04AD  01C6               	clrf	??___flmul+1
 12955  04AE  01C7               	clrf	??___flmul+2
 12956  04AF  01C8               	clrf	??___flmul+3
 12957  04B0  0845               	movf	??___flmul,w
 12958  04B1  07D1               	addwf	___flmul@prod,f
 12959  04B2  0846               	movf	??___flmul+1,w
 12960  04B3  3DD2               	addwfc	___flmul@prod+1,f
 12961  04B4  0847               	movf	??___flmul+2,w
 12962  04B5  3DD3               	addwfc	___flmul@prod+2,f
 12963  04B6  0848               	movf	??___flmul+3,w
 12964  04B7  3DD4               	addwfc	___flmul@prod+3,f
 12965  04B8  3008               	movlw	8
 12966  04B9                     u5215:	
 12967  04B9  35CC               	lslf	___flmul@grs,f
 12968  04BA  0DCD               	rlf	___flmul@grs+1,f
 12969  04BB  0DCE               	rlf	___flmul@grs+2,f
 12970  04BC  0DCF               	rlf	___flmul@grs+3,f
 12971  04BD  0B89               	decfsz	9,f
 12972  04BE  2CB9               	goto	u5215
 12973  04BF  083E               	movf	___flmul@b+1,w
 12974  04C0  00C5               	movwf	??___flmul
 12975  04C1  0845               	movf	??___flmul,w
 12976  04C2  00A0               	movwf	__Umul8_16@multiplicand
 12977  04C3  0841               	movf	___flmul@a,w
 12978  04C4  3192  22D7  3183   	fcall	__Umul8_16
 12979  04C7  0140               	movlb	0	; select bank0
 12980  04C8  0821               	movf	?__Umul8_16+1,w
 12981  04C9  00D6               	movwf	___flmul@temp+1
 12982  04CA  0820               	movf	?__Umul8_16,w
 12983  04CB  00D5               	movwf	___flmul@temp
 12984  04CC  0855               	movf	___flmul@temp,w
 12985  04CD  07CC               	addwf	___flmul@grs,f
 12986  04CE  0856               	movf	___flmul@temp+1,w
 12987  04CF  3DCD               	addwfc	___flmul@grs+1,f
 12988  04D0  3000               	movlw	0
 12989  04D1  3DCE               	addwfc	___flmul@grs+2,f
 12990  04D2  3DCF               	addwfc	___flmul@grs+3,f
 12991  04D3  083D               	movf	___flmul@b,w
 12992  04D4  00C5               	movwf	??___flmul
 12993  04D5  0845               	movf	??___flmul,w
 12994  04D6  00A0               	movwf	__Umul8_16@multiplicand
 12995  04D7  0842               	movf	___flmul@a+1,w
 12996  04D8  3192  22D7  3183   	fcall	__Umul8_16
 12997  04DB  0140               	movlb	0	; select bank0
 12998  04DC  0821               	movf	?__Umul8_16+1,w
 12999  04DD  00D6               	movwf	___flmul@temp+1
 13000  04DE  0820               	movf	?__Umul8_16,w
 13001  04DF  00D5               	movwf	___flmul@temp
 13002  04E0  0855               	movf	___flmul@temp,w
 13003  04E1  07CC               	addwf	___flmul@grs,f
 13004  04E2  0856               	movf	___flmul@temp+1,w
 13005  04E3  3DCD               	addwfc	___flmul@grs+1,f
 13006  04E4  3000               	movlw	0
 13007  04E5  3DCE               	addwfc	___flmul@grs+2,f
 13008  04E6  3DCF               	addwfc	___flmul@grs+3,f
 13009  04E7  3008               	movlw	8
 13010  04E8                     u5225:	
 13011  04E8  35CC               	lslf	___flmul@grs,f
 13012  04E9  0DCD               	rlf	___flmul@grs+1,f
 13013  04EA  0DCE               	rlf	___flmul@grs+2,f
 13014  04EB  0DCF               	rlf	___flmul@grs+3,f
 13015  04EC  0B89               	decfsz	9,f
 13016  04ED  2CE8               	goto	u5225
 13017  04EE  083D               	movf	___flmul@b,w
 13018  04EF  00C5               	movwf	??___flmul
 13019  04F0  0845               	movf	??___flmul,w
 13020  04F1  00A0               	movwf	__Umul8_16@multiplicand
 13021  04F2  0841               	movf	___flmul@a,w
 13022  04F3  3192  22D7  3183   	fcall	__Umul8_16
 13023  04F6  0140               	movlb	0	; select bank0
 13024  04F7  0821               	movf	?__Umul8_16+1,w
 13025  04F8  00D6               	movwf	___flmul@temp+1
 13026  04F9  0820               	movf	?__Umul8_16,w
 13027  04FA  00D5               	movwf	___flmul@temp
 13028  04FB  0855               	movf	___flmul@temp,w
 13029  04FC  07CC               	addwf	___flmul@grs,f
 13030  04FD  0856               	movf	___flmul@temp+1,w
 13031  04FE  3DCD               	addwfc	___flmul@grs+1,f
 13032  04FF  3000               	movlw	0
 13033  0500  3DCE               	addwfc	___flmul@grs+2,f
 13034  0501  3DCF               	addwfc	___flmul@grs+3,f
 13035  0502  083E               	movf	___flmul@b+1,w
 13036  0503  00C5               	movwf	??___flmul
 13037  0504  0845               	movf	??___flmul,w
 13038  0505  00A0               	movwf	__Umul8_16@multiplicand
 13039  0506  0843               	movf	___flmul@a+2,w
 13040  0507  3192  22D7  3183   	fcall	__Umul8_16
 13041  050A  0140               	movlb	0	; select bank0
 13042  050B  0821               	movf	?__Umul8_16+1,w
 13043  050C  00D6               	movwf	___flmul@temp+1
 13044  050D  0820               	movf	?__Umul8_16,w
 13045  050E  00D5               	movwf	___flmul@temp
 13046  050F  0855               	movf	___flmul@temp,w
 13047  0510  07D1               	addwf	___flmul@prod,f
 13048  0511  0856               	movf	___flmul@temp+1,w
 13049  0512  3DD2               	addwfc	___flmul@prod+1,f
 13050  0513  3000               	movlw	0
 13051  0514  3DD3               	addwfc	___flmul@prod+2,f
 13052  0515  3DD4               	addwfc	___flmul@prod+3,f
 13053  0516  083F               	movf	___flmul@b+2,w
 13054  0517  00C5               	movwf	??___flmul
 13055  0518  0845               	movf	??___flmul,w
 13056  0519  00A0               	movwf	__Umul8_16@multiplicand
 13057  051A  0842               	movf	___flmul@a+1,w
 13058  051B  3192  22D7  3183   	fcall	__Umul8_16
 13059  051E  0140               	movlb	0	; select bank0
 13060  051F  0821               	movf	?__Umul8_16+1,w
 13061  0520  00D6               	movwf	___flmul@temp+1
 13062  0521  0820               	movf	?__Umul8_16,w
 13063  0522  00D5               	movwf	___flmul@temp
 13064  0523  0855               	movf	___flmul@temp,w
 13065  0524  07D1               	addwf	___flmul@prod,f
 13066  0525  0856               	movf	___flmul@temp+1,w
 13067  0526  3DD2               	addwfc	___flmul@prod+1,f
 13068  0527  3000               	movlw	0
 13069  0528  3DD3               	addwfc	___flmul@prod+2,f
 13070  0529  3DD4               	addwfc	___flmul@prod+3,f
 13071  052A  083F               	movf	___flmul@b+2,w
 13072  052B  00C5               	movwf	??___flmul
 13073  052C  0845               	movf	??___flmul,w
 13074  052D  00A0               	movwf	__Umul8_16@multiplicand
 13075  052E  0843               	movf	___flmul@a+2,w
 13076  052F  3192  22D7  3183   	fcall	__Umul8_16
 13077  0532  0140               	movlb	0	; select bank0
 13078  0533  0821               	movf	?__Umul8_16+1,w
 13079  0534  00D6               	movwf	___flmul@temp+1
 13080  0535  0820               	movf	?__Umul8_16,w
 13081  0536  00D5               	movwf	___flmul@temp
 13082  0537  0855               	movf	___flmul@temp,w
 13083  0538  00C5               	movwf	??___flmul
 13084  0539  0856               	movf	___flmul@temp+1,w
 13085  053A  00C6               	movwf	??___flmul+1
 13086  053B  01C7               	clrf	??___flmul+2
 13087  053C  01C8               	clrf	??___flmul+3
 13088  053D  3008               	movlw	8
 13089  053E                     u5235:	
 13090  053E  35C5               	lslf	??___flmul,f
 13091  053F  0DC6               	rlf	??___flmul+1,f
 13092  0540  0DC7               	rlf	??___flmul+2,f
 13093  0541  0DC8               	rlf	??___flmul+3,f
 13094  0542  0B89               	decfsz	9,f
 13095  0543  2D3E               	goto	u5235
 13096  0544  0845               	movf	??___flmul,w
 13097  0545  07D1               	addwf	___flmul@prod,f
 13098  0546  0846               	movf	??___flmul+1,w
 13099  0547  3DD2               	addwfc	___flmul@prod+1,f
 13100  0548  0847               	movf	??___flmul+2,w
 13101  0549  3DD3               	addwfc	___flmul@prod+2,f
 13102  054A  0848               	movf	??___flmul+3,w
 13103  054B  3DD4               	addwfc	___flmul@prod+3,f
 13104  054C  084C               	movf	___flmul@grs,w
 13105  054D  00C5               	movwf	??___flmul
 13106  054E  084D               	movf	___flmul@grs+1,w
 13107  054F  00C6               	movwf	??___flmul+1
 13108  0550  084E               	movf	___flmul@grs+2,w
 13109  0551  00C7               	movwf	??___flmul+2
 13110  0552  084F               	movf	___flmul@grs+3,w
 13111  0553  00C8               	movwf	??___flmul+3
 13112  0554  3018               	movlw	24
 13113  0555                     u5245:	
 13114  0555  36C8               	lsrf	??___flmul+3,f
 13115  0556  0CC7               	rrf	??___flmul+2,f
 13116  0557  0CC6               	rrf	??___flmul+1,f
 13117  0558  0CC5               	rrf	??___flmul,f
 13118  0559  0B89               	decfsz	9,f
 13119  055A  2D55               	goto	u5245
 13120  055B  0845               	movf	??___flmul,w
 13121  055C  07D1               	addwf	___flmul@prod,f
 13122  055D  0846               	movf	??___flmul+1,w
 13123  055E  3DD2               	addwfc	___flmul@prod+1,f
 13124  055F  0847               	movf	??___flmul+2,w
 13125  0560  3DD3               	addwfc	___flmul@prod+2,f
 13126  0561  0848               	movf	??___flmul+3,w
 13127  0562  3DD4               	addwfc	___flmul@prod+3,f
 13128  0563  3008               	movlw	8
 13129  0564                     u5255:	
 13130  0564  35CC               	lslf	___flmul@grs,f
 13131  0565  0DCD               	rlf	___flmul@grs+1,f
 13132  0566  0DCE               	rlf	___flmul@grs+2,f
 13133  0567  0DCF               	rlf	___flmul@grs+3,f
 13134  0568  0B89               	decfsz	9,f
 13135  0569  2D64               	goto	u5255
 13136  056A  0850               	movf	___flmul@bexp,w
 13137  056B  074B               	addwf	___flmul@aexp,w
 13138  056C  00C5               	movwf	??___flmul
 13139  056D  01C6               	clrf	??___flmul+1
 13140  056E  0DC6               	rlf	??___flmul+1,f
 13141  056F  0845               	movf	??___flmul,w
 13142  0570  3E82               	addlw	130
 13143  0571  00D5               	movwf	___flmul@temp
 13144  0572  30FF               	movlw	255
 13145  0573  3D46               	addwfc	??___flmul+1,w
 13146  0574  00D6               	movwf	___flmul@temp+1
 13147  0575                     l5156:	
 13148  0575  1BD3               	btfsc	___flmul@prod+2,7
 13149  0576  2D8C               	goto	l5158
 13150  0577  3001               	movlw	1
 13151  0578                     u5265:	
 13152  0578  35D1               	lslf	___flmul@prod,f
 13153  0579  0DD2               	rlf	___flmul@prod+1,f
 13154  057A  0DD3               	rlf	___flmul@prod+2,f
 13155  057B  0DD4               	rlf	___flmul@prod+3,f
 13156  057C  0B89               	decfsz	9,f
 13157  057D  2D78               	goto	u5265
 13158  057E  1BCF               	btfsc	___flmul@grs+3,7
 13159  057F  1451               	bsf	___flmul@prod,0
 13160  0580  3001               	movlw	1
 13161  0581                     u5285:	
 13162  0581  35CC               	lslf	___flmul@grs,f
 13163  0582  0DCD               	rlf	___flmul@grs+1,f
 13164  0583  0DCE               	rlf	___flmul@grs+2,f
 13165  0584  0DCF               	rlf	___flmul@grs+3,f
 13166  0585  0B89               	decfsz	9,f
 13167  0586  2D81               	goto	u5285
 13168  0587  30FF               	movlw	255
 13169  0588  07D5               	addwf	___flmul@temp,f
 13170  0589  30FF               	movlw	255
 13171  058A  3DD6               	addwfc	___flmul@temp+1,f
 13172  058B  2D75               	goto	l5156
 13173  058C                     l5158:	
 13174  058C  01CB               	clrf	___flmul@aexp
 13175  058D  1FCF               	btfss	___flmul@grs+3,7
 13176  058E  2DA5               	goto	l5168
 13177  058F  30FF               	movlw	255
 13178  0590  054C               	andwf	___flmul@grs,w
 13179  0591  00C5               	movwf	??___flmul
 13180  0592  30FF               	movlw	255
 13181  0593  054D               	andwf	___flmul@grs+1,w
 13182  0594  00C6               	movwf	??___flmul+1
 13183  0595  30FF               	movlw	255
 13184  0596  054E               	andwf	___flmul@grs+2,w
 13185  0597  00C7               	movwf	??___flmul+2
 13186  0598  307F               	movlw	127
 13187  0599  054F               	andwf	___flmul@grs+3,w
 13188  059A  00C8               	movwf	??___flmul+3
 13189  059B  0848               	movf	??___flmul+3,w
 13190  059C  0447               	iorwf	??___flmul+2,w
 13191  059D  0446               	iorwf	??___flmul+1,w
 13192  059E  0445               	iorwf	??___flmul,w
 13193  059F  1903               	skipnz
 13194  05A0  1851               	btfsc	___flmul@prod,0
 13195  05A1  2DA3               	goto	l5164
 13196  05A2  2DA5               	goto	l5168
 13197  05A3                     l5164:	
 13198  05A3  01CB               	clrf	___flmul@aexp
 13199  05A4  0ACB               	incf	___flmul@aexp,f
 13200  05A5                     l5168:	
 13201  05A5  084B               	movf	___flmul@aexp,w
 13202  05A6  1903               	btfsc	3,2
 13203  05A7  2DCE               	goto	l5178
 13204  05A8  3001               	movlw	1
 13205  05A9  07D1               	addwf	___flmul@prod,f
 13206  05AA  3000               	movlw	0
 13207  05AB  3DD2               	addwfc	___flmul@prod+1,f
 13208  05AC  3000               	movlw	0
 13209  05AD  3DD3               	addwfc	___flmul@prod+2,f
 13210  05AE  3000               	movlw	0
 13211  05AF  3DD4               	addwfc	___flmul@prod+3,f
 13212  05B0  1C54               	btfss	___flmul@prod+3,0
 13213  05B1  2DCE               	goto	l5178
 13214  05B2  0851               	movf	___flmul@prod,w
 13215  05B3  00C5               	movwf	??___flmul
 13216  05B4  0852               	movf	___flmul@prod+1,w
 13217  05B5  00C6               	movwf	??___flmul+1
 13218  05B6  0853               	movf	___flmul@prod+2,w
 13219  05B7  00C7               	movwf	??___flmul+2
 13220  05B8  0854               	movf	___flmul@prod+3,w
 13221  05B9  00C8               	movwf	??___flmul+3
 13222  05BA  3001               	movlw	1
 13223  05BB  00C9               	movwf	??___flmul+4
 13224  05BC                     u5355:	
 13225  05BC  37C8               	asrf	??___flmul+3,f
 13226  05BD  0CC7               	rrf	??___flmul+2,f
 13227  05BE  0CC6               	rrf	??___flmul+1,f
 13228  05BF  0CC5               	rrf	??___flmul,f
 13229  05C0  0BC9               	decfsz	??___flmul+4,f
 13230  05C1  2DBC               	goto	u5355
 13231  05C2  0848               	movf	??___flmul+3,w
 13232  05C3  00D4               	movwf	___flmul@prod+3
 13233  05C4  0847               	movf	??___flmul+2,w
 13234  05C5  00D3               	movwf	___flmul@prod+2
 13235  05C6  0846               	movf	??___flmul+1,w
 13236  05C7  00D2               	movwf	___flmul@prod+1
 13237  05C8  0845               	movf	??___flmul,w
 13238  05C9  00D1               	movwf	___flmul@prod
 13239  05CA  3001               	movlw	1
 13240  05CB  07D5               	addwf	___flmul@temp,f
 13241  05CC  3000               	movlw	0
 13242  05CD  3DD6               	addwfc	___flmul@temp+1,f
 13243  05CE                     l5178:	
 13244  05CE  0856               	movf	___flmul@temp+1,w
 13245  05CF  3A80               	xorlw	128
 13246  05D0  00C5               	movwf	??___flmul
 13247  05D1  3080               	movlw	128
 13248  05D2  0245               	subwf	??___flmul,w
 13249  05D3  1D03               	skipz
 13250  05D4  2DD7               	goto	u5365
 13251  05D5  30FF               	movlw	255
 13252  05D6  0255               	subwf	___flmul@temp,w
 13253  05D7                     u5365:	
 13254  05D7  1C03               	skipc
 13255  05D8  2DE3               	goto	l5182
 13256  05D9  307F               	movlw	127
 13257  05DA  0140               	movlb	0	; select bank0
 13258  05DB  00D4               	movwf	___flmul@prod+3
 13259  05DC  3080               	movlw	128
 13260  05DD  00D3               	movwf	___flmul@prod+2
 13261  05DE  3000               	movlw	0
 13262  05DF  00D2               	movwf	___flmul@prod+1
 13263  05E0  3000               	movlw	0
 13264  05E1  00D1               	movwf	___flmul@prod
 13265  05E2  2E0D               	goto	l1617
 13266  05E3                     l5182:	
 13267  05E3  0140               	movlb	0	; select bank0
 13268  05E4  0856               	movf	___flmul@temp+1,w
 13269  05E5  3A80               	xorlw	128
 13270  05E6  00C5               	movwf	??___flmul
 13271  05E7  3080               	movlw	128
 13272  05E8  0245               	subwf	??___flmul,w
 13273  05E9  1D03               	skipz
 13274  05EA  2DED               	goto	u5375
 13275  05EB  3001               	movlw	1
 13276  05EC  0255               	subwf	___flmul@temp,w
 13277  05ED                     u5375:	
 13278  05ED  1803               	skipnc
 13279  05EE  2DFA               	goto	l5188
 13280  05EF  3000               	movlw	0
 13281  05F0  0140               	movlb	0	; select bank0
 13282  05F1  00D4               	movwf	___flmul@prod+3
 13283  05F2  3000               	movlw	0
 13284  05F3  00D3               	movwf	___flmul@prod+2
 13285  05F4  3000               	movlw	0
 13286  05F5  00D2               	movwf	___flmul@prod+1
 13287  05F6  3000               	movlw	0
 13288  05F7  00D1               	movwf	___flmul@prod
 13289  05F8  01CA               	clrf	___flmul@sign
 13290  05F9  2E0D               	goto	l1617
 13291  05FA                     l5188:	
 13292  05FA  0140               	movlb	0	; select bank0
 13293  05FB  0855               	movf	___flmul@temp,w
 13294  05FC  00C5               	movwf	??___flmul
 13295  05FD  0845               	movf	??___flmul,w
 13296  05FE  00D0               	movwf	___flmul@bexp
 13297  05FF  30FF               	movlw	255
 13298  0600  05D1               	andwf	___flmul@prod,f
 13299  0601  30FF               	movlw	255
 13300  0602  05D2               	andwf	___flmul@prod+1,f
 13301  0603  307F               	movlw	127
 13302  0604  05D3               	andwf	___flmul@prod+2,f
 13303  0605  3000               	movlw	0
 13304  0606  05D4               	andwf	___flmul@prod+3,f
 13305  0607  1850               	btfsc	___flmul@bexp,0
 13306  0608  17D3               	bsf	___flmul@prod+2,7
 13307  0609  3650               	lsrf	___flmul@bexp,w
 13308  060A  00C5               	movwf	??___flmul
 13309  060B  0845               	movf	??___flmul,w
 13310  060C  00D4               	movwf	___flmul@prod+3
 13311  060D                     l1617:	
 13312  060D  084A               	movf	___flmul@sign,w
 13313  060E  00C5               	movwf	??___flmul
 13314  060F  0845               	movf	??___flmul,w
 13315  0610  04D4               	iorwf	___flmul@prod+3,f
 13316  0611  0854               	movf	___flmul@prod+3,w
 13317  0612  00C0               	movwf	?___flmul+3
 13318  0613  0853               	movf	___flmul@prod+2,w
 13319  0614  00BF               	movwf	?___flmul+2
 13320  0615  0852               	movf	___flmul@prod+1,w
 13321  0616  00BE               	movwf	?___flmul+1
 13322  0617  0851               	movf	___flmul@prod,w
 13323  0618  00BD               	movwf	?___flmul
 13324  0619  0008               	return
 13325  061A                     __end_of___flmul:	
 13326                           
 13327                           	psect	text29
 13328  12D7                     __ptext29:	
 13329 ;; *************** function __Umul8_16 *****************
 13330 ;; Defined at:
 13331 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;  multiplier      1    wreg     unsigned char 
 13334 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;  multiplier      1    8[BANK0 ] unsigned char 
 13337 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 13338 ;;  product         2    4[BANK0 ] unsigned int 
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  2    0[BANK0 ] unsigned int 
 13341 ;; Registers used:
 13342 ;;		wreg, status,2, status,0
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13348 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13349 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13351 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13352 ;;Total ram usage:        9 bytes
 13353 ;; Hardware stack levels used:    1
 13354 ;; Hardware stack levels required when called:    4
 13355 ;; This function calls:
 13356 ;;		Nothing
 13357 ;; This function is called by:
 13358 ;;		___flmul
 13359 ;; This function uses a non-reentrant model
 13360 ;;
 13361                           
 13362                           
 13363                           ;psect for function __Umul8_16
 13364  12D7                     __Umul8_16:	
 13365                           
 13366                           ;incstack = 0
 13367                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 13368                           ;__Umul8_16@multiplier stored from wreg
 13369  12D7  0140               	movlb	0	; select bank0
 13370  12D8  00A8               	movwf	__Umul8_16@multiplier
 13371  12D9  01A4               	clrf	__Umul8_16@product
 13372  12DA  01A5               	clrf	__Umul8_16@product+1
 13373  12DB  0820               	movf	__Umul8_16@multiplicand,w
 13374  12DC  00A2               	movwf	??__Umul8_16
 13375  12DD  01A3               	clrf	??__Umul8_16+1
 13376  12DE  0822               	movf	??__Umul8_16,w
 13377  12DF  00A6               	movwf	__Umul8_16@word_mpld
 13378  12E0  0823               	movf	??__Umul8_16+1,w
 13379  12E1  00A7               	movwf	__Umul8_16@word_mpld+1
 13380  12E2                     l5038:	
 13381  12E2  1C28               	btfss	__Umul8_16@multiplier,0
 13382  12E3  2AE8               	goto	l1662
 13383  12E4  0826               	movf	__Umul8_16@word_mpld,w
 13384  12E5  07A4               	addwf	__Umul8_16@product,f
 13385  12E6  0827               	movf	__Umul8_16@word_mpld+1,w
 13386  12E7  3DA5               	addwfc	__Umul8_16@product+1,f
 13387  12E8                     l1662:	
 13388  12E8  3001               	movlw	1
 13389  12E9                     u5105:	
 13390  12E9  35A6               	lslf	__Umul8_16@word_mpld,f
 13391  12EA  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 13392  12EB  0B89               	decfsz	9,f
 13393  12EC  2AE9               	goto	u5105
 13394  12ED  1003               	clrc
 13395  12EE  0CA8               	rrf	__Umul8_16@multiplier,f
 13396  12EF  0828               	movf	__Umul8_16@multiplier,w
 13397  12F0  1D03               	btfss	3,2
 13398  12F1  2AE2               	goto	l5038
 13399  12F2  0825               	movf	__Umul8_16@product+1,w
 13400  12F3  00A1               	movwf	?__Umul8_16+1
 13401  12F4  0824               	movf	__Umul8_16@product,w
 13402  12F5  00A0               	movwf	?__Umul8_16
 13403  12F6  0008               	return
 13404  12F7                     __end_of__Umul8_16:	
 13405                           
 13406                           	psect	text30
 13407  0887                     __ptext30:	
 13408 ;; *************** function ___flge *****************
 13409 ;; Defined at:
 13410 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 13411 ;; Parameters:    Size  Location     Type
 13412 ;;  ff1             4   55[BANK0 ] unsigned int 
 13413 ;;  ff2             4   59[BANK0 ] unsigned int 
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;		None               void
 13418 ;; Registers used:
 13419 ;;		wreg, status,2, status,0
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13425 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13427 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13428 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13429 ;;Total ram usage:       12 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; Hardware stack levels required when called:    4
 13432 ;; This function calls:
 13433 ;;		Nothing
 13434 ;; This function is called by:
 13435 ;;		_HueToRGB
 13436 ;;		_LED_setHSL
 13437 ;; This function uses a non-reentrant model
 13438 ;;
 13439                           
 13440                           
 13441                           ;psect for function ___flge
 13442  0887                     ___flge:	
 13443                           
 13444                           ;incstack = 0
 13445                           ; Regs used in ___flge: [wreg+status,2+status,0]
 13446  0887  3000               	movlw	0
 13447  0888  0140               	movlb	0	; select bank0
 13448  0889  0557               	andwf	___flge@ff1,w
 13449  088A  00DF               	movwf	??___flge
 13450  088B  3000               	movlw	0
 13451  088C  0558               	andwf	___flge@ff1+1,w
 13452  088D  00E0               	movwf	??___flge+1
 13453  088E  3080               	movlw	128
 13454  088F  0559               	andwf	___flge@ff1+2,w
 13455  0890  00E1               	movwf	??___flge+2
 13456  0891  307F               	movlw	127
 13457  0892  055A               	andwf	___flge@ff1+3,w
 13458  0893  00E2               	movwf	??___flge+3
 13459  0894  0862               	movf	??___flge+3,w
 13460  0895  0461               	iorwf	??___flge+2,w
 13461  0896  0460               	iorwf	??___flge+1,w
 13462  0897  045F               	iorwf	??___flge,w
 13463  0898  1D03               	skipz
 13464  0899  28A2               	goto	l1386
 13465  089A  3000               	movlw	0
 13466  089B  00DA               	movwf	___flge@ff1+3
 13467  089C  3000               	movlw	0
 13468  089D  00D9               	movwf	___flge@ff1+2
 13469  089E  3000               	movlw	0
 13470  089F  00D8               	movwf	___flge@ff1+1
 13471  08A0  3000               	movlw	0
 13472  08A1  00D7               	movwf	___flge@ff1
 13473  08A2                     l1386:	
 13474  08A2  3000               	movlw	0
 13475  08A3  055B               	andwf	___flge@ff2,w
 13476  08A4  00DF               	movwf	??___flge
 13477  08A5  3000               	movlw	0
 13478  08A6  055C               	andwf	___flge@ff2+1,w
 13479  08A7  00E0               	movwf	??___flge+1
 13480  08A8  3080               	movlw	128
 13481  08A9  055D               	andwf	___flge@ff2+2,w
 13482  08AA  00E1               	movwf	??___flge+2
 13483  08AB  307F               	movlw	127
 13484  08AC  055E               	andwf	___flge@ff2+3,w
 13485  08AD  00E2               	movwf	??___flge+3
 13486  08AE  0862               	movf	??___flge+3,w
 13487  08AF  0461               	iorwf	??___flge+2,w
 13488  08B0  0460               	iorwf	??___flge+1,w
 13489  08B1  045F               	iorwf	??___flge,w
 13490  08B2  1D03               	skipz
 13491  08B3  28BC               	goto	l3678
 13492  08B4  3000               	movlw	0
 13493  08B5  00DE               	movwf	___flge@ff2+3
 13494  08B6  3000               	movlw	0
 13495  08B7  00DD               	movwf	___flge@ff2+2
 13496  08B8  3000               	movlw	0
 13497  08B9  00DC               	movwf	___flge@ff2+1
 13498  08BA  3000               	movlw	0
 13499  08BB  00DB               	movwf	___flge@ff2
 13500  08BC                     l3678:	
 13501  08BC  1FDA               	btfss	___flge@ff1+3,7
 13502  08BD  28D6               	goto	l3682
 13503  08BE  3000               	movlw	0
 13504  08BF  00DF               	movwf	??___flge
 13505  08C0  3000               	movlw	0
 13506  08C1  00E0               	movwf	??___flge+1
 13507  08C2  3000               	movlw	0
 13508  08C3  00E1               	movwf	??___flge+2
 13509  08C4  3080               	movlw	128
 13510  08C5  00E2               	movwf	??___flge+3
 13511  08C6  0857               	movf	___flge@ff1,w
 13512  08C7  02DF               	subwf	??___flge,f
 13513  08C8  0858               	movf	___flge@ff1+1,w
 13514  08C9  3BE0               	subwfb	??___flge+1,f
 13515  08CA  0859               	movf	___flge@ff1+2,w
 13516  08CB  3BE1               	subwfb	??___flge+2,f
 13517  08CC  085A               	movf	___flge@ff1+3,w
 13518  08CD  3BE2               	subwfb	??___flge+3,f
 13519  08CE  0862               	movf	??___flge+3,w
 13520  08CF  00DA               	movwf	___flge@ff1+3
 13521  08D0  0861               	movf	??___flge+2,w
 13522  08D1  00D9               	movwf	___flge@ff1+2
 13523  08D2  0860               	movf	??___flge+1,w
 13524  08D3  00D8               	movwf	___flge@ff1+1
 13525  08D4  085F               	movf	??___flge,w
 13526  08D5  00D7               	movwf	___flge@ff1
 13527  08D6                     l3682:	
 13528  08D6  1FDE               	btfss	___flge@ff2+3,7
 13529  08D7  28F0               	goto	l1389
 13530  08D8  3000               	movlw	0
 13531  08D9  00DF               	movwf	??___flge
 13532  08DA  3000               	movlw	0
 13533  08DB  00E0               	movwf	??___flge+1
 13534  08DC  3000               	movlw	0
 13535  08DD  00E1               	movwf	??___flge+2
 13536  08DE  3080               	movlw	128
 13537  08DF  00E2               	movwf	??___flge+3
 13538  08E0  085B               	movf	___flge@ff2,w
 13539  08E1  02DF               	subwf	??___flge,f
 13540  08E2  085C               	movf	___flge@ff2+1,w
 13541  08E3  3BE0               	subwfb	??___flge+1,f
 13542  08E4  085D               	movf	___flge@ff2+2,w
 13543  08E5  3BE1               	subwfb	??___flge+2,f
 13544  08E6  085E               	movf	___flge@ff2+3,w
 13545  08E7  3BE2               	subwfb	??___flge+3,f
 13546  08E8  0862               	movf	??___flge+3,w
 13547  08E9  00DE               	movwf	___flge@ff2+3
 13548  08EA  0861               	movf	??___flge+2,w
 13549  08EB  00DD               	movwf	___flge@ff2+2
 13550  08EC  0860               	movf	??___flge+1,w
 13551  08ED  00DC               	movwf	___flge@ff2+1
 13552  08EE  085F               	movf	??___flge,w
 13553  08EF  00DB               	movwf	___flge@ff2
 13554  08F0                     l1389:	
 13555  08F0  3080               	movlw	128
 13556  08F1  06DA               	xorwf	___flge@ff1+3,f
 13557  08F2  3080               	movlw	128
 13558  08F3  06DE               	xorwf	___flge@ff2+3,f
 13559  08F4  085E               	movf	___flge@ff2+3,w
 13560  08F5  025A               	subwf	___flge@ff1+3,w
 13561  08F6  1D03               	skipz
 13562  08F7  0008               	return
 13563  08F8  085D               	movf	___flge@ff2+2,w
 13564  08F9  0259               	subwf	___flge@ff1+2,w
 13565  08FA  1D03               	skipz
 13566  08FB  0008               	return
 13567  08FC  085C               	movf	___flge@ff2+1,w
 13568  08FD  0258               	subwf	___flge@ff1+1,w
 13569  08FE  1D03               	skipz
 13570  08FF  0008               	return
 13571  0900  085B               	movf	___flge@ff2,w
 13572  0901  0257               	subwf	___flge@ff1,w
 13573  0902  0008               	return
 13574  0903                     __end_of___flge:	
 13575                           
 13576                           	psect	text31
 13577  10E8                     __ptext31:	
 13578 ;; *************** function _BEAT_detected *****************
 13579 ;; Defined at:
 13580 ;;		line 41 in file "beat.c"
 13581 ;; Parameters:    Size  Location     Type
 13582 ;;		None
 13583 ;; Auto vars:     Size  Location     Type
 13584 ;;		None
 13585 ;; Return value:  Size  Location     Type
 13586 ;;                  1    wreg      _Bool 
 13587 ;; Registers used:
 13588 ;;		wreg, status,2, status,0
 13589 ;; Tracked objects:
 13590 ;;		On entry : 0/0
 13591 ;;		On exit  : 0/0
 13592 ;;		Unchanged: 0/0
 13593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13598 ;;Total ram usage:        0 bytes
 13599 ;; Hardware stack levels used:    1
 13600 ;; Hardware stack levels required when called:    4
 13601 ;; This function calls:
 13602 ;;		Nothing
 13603 ;; This function is called by:
 13604 ;;		_LED_task
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608                           
 13609                           ;psect for function _BEAT_detected
 13610  10E8                     _BEAT_detected:	
 13611                           
 13612                           ;beat.c: 42:     if (detected) {
 13613                           
 13614                           ;incstack = 0
 13615                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 13616  10E8  0142               	movlb	2	; select bank2
 13617  10E9  084A               	movf	_detected^(0+256),w
 13618  10EA  1903               	btfsc	3,2
 13619  10EB  28EF               	goto	l5606
 13620                           
 13621                           ;beat.c: 43:         detected = 0;
 13622  10EC  01CA               	clrf	_detected^(0+256)
 13623                           
 13624                           ;beat.c: 44:         return 1;
 13625  10ED  3001               	movlw	1
 13626  10EE  0008               	return
 13627  10EF                     l5606:	
 13628                           
 13629                           ;beat.c: 46:     return 0;
 13630  10EF  3000               	movlw	0
 13631  10F0  0008               	return
 13632  10F1                     __end_of_BEAT_detected:	
 13633                           
 13634                           	psect	text32
 13635  149B                     __ptext32:	
 13636 ;; *************** function _DMX_task *****************
 13637 ;; Defined at:
 13638 ;;		line 35 in file "dmx.c"
 13639 ;; Parameters:    Size  Location     Type
 13640 ;;		None
 13641 ;; Auto vars:     Size  Location     Type
 13642 ;;  time            2    4[BANK0 ] unsigned short 
 13643 ;; Return value:  Size  Location     Type
 13644 ;;                  1    wreg      void 
 13645 ;; Registers used:
 13646 ;;		wreg, status,2, status,0, pclath, cstack
 13647 ;; Tracked objects:
 13648 ;;		On entry : 0/0
 13649 ;;		On exit  : 0/0
 13650 ;;		Unchanged: 0/0
 13651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13653 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13655 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13656 ;;Total ram usage:        4 bytes
 13657 ;; Hardware stack levels used:    1
 13658 ;; Hardware stack levels required when called:    5
 13659 ;; This function calls:
 13660 ;;		_CLOCK_getTime
 13661 ;; This function is called by:
 13662 ;;		_main
 13663 ;; This function uses a non-reentrant model
 13664 ;;
 13665                           
 13666                           
 13667                           ;psect for function _DMX_task
 13668  149B                     _DMX_task:	
 13669                           
 13670                           ;dmx.c: 36:     time_t time = CLOCK_getTime();
 13671                           
 13672                           ;incstack = 0
 13673                           ; Regs used in _DMX_task: [wreg+status,2+status,0+pclath+cstack]
 13674  149B  3190  20D6  3194   	fcall	_CLOCK_getTime
 13675  149E  0140               	movlb	0	; select bank0
 13676  149F  0821               	movf	?_CLOCK_getTime+1,w
 13677  14A0  00A5               	movwf	DMX_task@time+1
 13678  14A1  0820               	movf	?_CLOCK_getTime,w
 13679  14A2  00A4               	movwf	DMX_task@time
 13680                           
 13681                           ;dmx.c: 37:     if (time - lastTime < 1000)
 13682  14A3  0142               	movlb	2	; select bank2
 13683  14A4  082F               	movf	dmx@lastTime^(0+256),w
 13684  14A5  0140               	movlb	0	; select bank0
 13685  14A6  0224               	subwf	DMX_task@time,w
 13686  14A7  00A2               	movwf	??_DMX_task
 13687  14A8  0142               	movlb	2	; select bank2
 13688  14A9  0830               	movf	(dmx@lastTime+1)^(0+256),w
 13689  14AA  0140               	movlb	0	; select bank0
 13690  14AB  3B25               	subwfb	DMX_task@time+1,w
 13691  14AC  00A3               	movwf	??_DMX_task+1
 13692  14AD  3003               	movlw	3
 13693  14AE  0223               	subwf	??_DMX_task+1,w
 13694  14AF  30E8               	movlw	232
 13695  14B0  1903               	skipnz
 13696  14B1  0222               	subwf	??_DMX_task,w
 13697  14B2  1C03               	btfss	3,0
 13698  14B3  0008               	return
 13699                           
 13700                           ;dmx.c: 39:     lastTime = time;
 13701  14B4  0825               	movf	DMX_task@time+1,w
 13702  14B5  0142               	movlb	2	; select bank2
 13703  14B6  00B0               	movwf	(dmx@lastTime+1)^(0+256)
 13704  14B7  0140               	movlb	0	; select bank0
 13705  14B8  0824               	movf	DMX_task@time,w
 13706  14B9  0142               	movlb	2	; select bank2
 13707  14BA  00AF               	movwf	dmx@lastTime^(0+256)
 13708                           
 13709                           ;dmx.c: 41:     if(offCheck && !toggleCheck) {
 13710  14BB  0848               	movf	_offCheck^(0+256),w
 13711  14BC  1903               	btfsc	3,2
 13712  14BD  2CC5               	goto	l5850
 13713  14BE  0846               	movf	_toggleCheck^(0+256),w
 13714  14BF  1D03               	btfss	3,2
 13715  14C0  2CC5               	goto	l5850
 13716                           
 13717                           ;dmx.c: 43:         toggleCheck = 1;
 13718  14C1  01C6               	clrf	_toggleCheck^(0+256)
 13719  14C2  0AC6               	incf	_toggleCheck^(0+256),f
 13720                           
 13721                           ;dmx.c: 44:         offCheck = 0;
 13722  14C3  01C8               	clrf	_offCheck^(0+256)
 13723  14C4  0008               	return
 13724  14C5                     l5850:	
 13725                           
 13726                           ;dmx.c: 48:     if (offCheck && toggleCheck) {
 13727  14C5  0848               	movf	_offCheck^(0+256),w
 13728  14C6  1903               	btfsc	3,2
 13729  14C7  2CD0               	goto	l5858
 13730  14C8  0846               	movf	_toggleCheck^(0+256),w
 13731  14C9  1903               	btfsc	3,2
 13732  14CA  2CD0               	goto	l5858
 13733                           
 13734                           ;dmx.c: 49:         dmxOn = 1;
 13735  14CB  01C7               	clrf	_dmxOn^(0+256)
 13736  14CC  0AC7               	incf	_dmxOn^(0+256),f
 13737                           
 13738                           ;dmx.c: 50:         toggleCheck = 0;
 13739  14CD  01C6               	clrf	_toggleCheck^(0+256)
 13740                           
 13741                           ;dmx.c: 51:         offCheck = 0;
 13742  14CE  01C8               	clrf	_offCheck^(0+256)
 13743                           
 13744                           ;dmx.c: 52:     } else {
 13745  14CF  0008               	return
 13746  14D0                     l5858:	
 13747                           
 13748                           ;dmx.c: 53:         dmxOn = 0;
 13749  14D0  01C7               	clrf	_dmxOn^(0+256)
 13750  14D1  0008               	return
 13751  14D2                     __end_of_DMX_task:	
 13752                           
 13753                           	psect	text33
 13754  178A                     __ptext33:	
 13755 ;; *************** function _CONTROLLER_task *****************
 13756 ;; Defined at:
 13757 ;;		line 48 in file "controller.c"
 13758 ;; Parameters:    Size  Location     Type
 13759 ;;		None
 13760 ;; Auto vars:     Size  Location     Type
 13761 ;;  time            2   36[BANK0 ] unsigned short 
 13762 ;; Return value:  Size  Location     Type
 13763 ;;                  1    wreg      void 
 13764 ;; Registers used:
 13765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13766 ;; Tracked objects:
 13767 ;;		On entry : 0/0
 13768 ;;		On exit  : 0/0
 13769 ;;		Unchanged: 0/0
 13770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13773 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13774 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13775 ;;Total ram usage:        4 bytes
 13776 ;; Hardware stack levels used:    1
 13777 ;; Hardware stack levels required when called:   11
 13778 ;; This function calls:
 13779 ;;		_BUTTONS_isClicked
 13780 ;;		_CLOCK_getTime
 13781 ;;		_TM1650_enable
 13782 ;;		_address_dec
 13783 ;;		_address_inc
 13784 ;; This function is called by:
 13785 ;;		_main
 13786 ;; This function uses a non-reentrant model
 13787 ;;
 13788                           
 13789                           
 13790                           ;psect for function _CONTROLLER_task
 13791  178A                     _CONTROLLER_task:	
 13792                           
 13793                           ;controller.c: 49:     time_t time = CLOCK_getTime();
 13794                           
 13795                           ;incstack = 0
 13796                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13797  178A  3190  20D6  3197   	fcall	_CLOCK_getTime
 13798  178D  0140               	movlb	0	; select bank0
 13799  178E  0821               	movf	?_CLOCK_getTime+1,w
 13800  178F  00C5               	movwf	CONTROLLER_task@time+1
 13801  1790  0820               	movf	?_CLOCK_getTime,w
 13802  1791  00C4               	movwf	CONTROLLER_task@time
 13803                           
 13804                           ;controller.c: 51:     if (time - lastTime < 35)
 13805  1792  0142               	movlb	2	; select bank2
 13806  1793  083D               	movf	controller@lastTime^(0+256),w
 13807  1794  0140               	movlb	0	; select bank0
 13808  1795  0244               	subwf	CONTROLLER_task@time,w
 13809  1796  00C2               	movwf	??_CONTROLLER_task
 13810  1797  0142               	movlb	2	; select bank2
 13811  1798  083E               	movf	(controller@lastTime+1)^(0+256),w
 13812  1799  0140               	movlb	0	; select bank0
 13813  179A  3B45               	subwfb	CONTROLLER_task@time+1,w
 13814  179B  00C3               	movwf	??_CONTROLLER_task+1
 13815  179C  3000               	movlw	0
 13816  179D  0243               	subwf	??_CONTROLLER_task+1,w
 13817  179E  3023               	movlw	35
 13818  179F  1903               	skipnz
 13819  17A0  0242               	subwf	??_CONTROLLER_task,w
 13820  17A1  1C03               	btfss	3,0
 13821  17A2  0008               	return
 13822                           
 13823                           ;controller.c: 53:     lastTime = time;
 13824  17A3  0845               	movf	CONTROLLER_task@time+1,w
 13825  17A4  0142               	movlb	2	; select bank2
 13826  17A5  00BE               	movwf	(controller@lastTime+1)^(0+256)
 13827  17A6  0140               	movlb	0	; select bank0
 13828  17A7  0844               	movf	CONTROLLER_task@time,w
 13829  17A8  0142               	movlb	2	; select bank2
 13830  17A9  00BD               	movwf	controller@lastTime^(0+256)
 13831                           
 13832                           ;controller.c: 55:     if (BUTTONS_isClicked(up)) {
 13833  17AA  084E               	movf	_up^(0+256),w
 13834  17AB  3192  22F7  3197   	fcall	_BUTTONS_isClicked
 13835  17AE  0140               	movlb	0	; select bank0
 13836  17AF  0820               	movf	?_BUTTONS_isClicked,w
 13837  17B0  0421               	iorwf	?_BUTTONS_isClicked+1,w
 13838  17B1  1903               	btfsc	3,2
 13839  17B2  2FC2               	goto	l5818
 13840                           
 13841                           ;controller.c: 56:         address_inc();
 13842  17B3  3191  21C4  3197   	fcall	_address_inc
 13843                           
 13844                           ;controller.c: 57:         lastActiveTime = time;
 13845  17B6  0140               	movlb	0	; select bank0
 13846  17B7  0845               	movf	CONTROLLER_task@time+1,w
 13847  17B8  0142               	movlb	2	; select bank2
 13848  17B9  00BC               	movwf	(_lastActiveTime+1)^(0+256)
 13849  17BA  0140               	movlb	0	; select bank0
 13850  17BB  0844               	movf	CONTROLLER_task@time,w
 13851  17BC  0142               	movlb	2	; select bank2
 13852  17BD  00BB               	movwf	_lastActiveTime^(0+256)
 13853                           
 13854                           ;controller.c: 58:         TM1650_enable(1);
 13855  17BE  3001               	movlw	1
 13856  17BF  3191  2185         	fcall	_TM1650_enable
 13857                           
 13858                           ;controller.c: 59:     } else if (BUTTONS_isClicked(down)) {
 13859  17C1  0008               	return
 13860  17C2                     l5818:	
 13861  17C2  0142               	movlb	2	; select bank2
 13862  17C3  084D               	movf	_down^(0+256),w
 13863  17C4  3192  22F7  3197   	fcall	_BUTTONS_isClicked
 13864  17C7  0140               	movlb	0	; select bank0
 13865  17C8  0820               	movf	?_BUTTONS_isClicked,w
 13866  17C9  0421               	iorwf	?_BUTTONS_isClicked+1,w
 13867  17CA  1903               	btfsc	3,2
 13868  17CB  2FDB               	goto	l5826
 13869                           
 13870                           ;controller.c: 60:         address_dec();
 13871  17CC  3191  219A  3197   	fcall	_address_dec
 13872                           
 13873                           ;controller.c: 61:         lastActiveTime = time;
 13874  17CF  0140               	movlb	0	; select bank0
 13875  17D0  0845               	movf	CONTROLLER_task@time+1,w
 13876  17D1  0142               	movlb	2	; select bank2
 13877  17D2  00BC               	movwf	(_lastActiveTime+1)^(0+256)
 13878  17D3  0140               	movlb	0	; select bank0
 13879  17D4  0844               	movf	CONTROLLER_task@time,w
 13880  17D5  0142               	movlb	2	; select bank2
 13881  17D6  00BB               	movwf	_lastActiveTime^(0+256)
 13882                           
 13883                           ;controller.c: 62:         TM1650_enable(1);
 13884  17D7  3001               	movlw	1
 13885  17D8  3191  2185         	fcall	_TM1650_enable
 13886                           
 13887                           ;controller.c: 63:     } else {
 13888  17DA  0008               	return
 13889  17DB                     l5826:	
 13890                           
 13891                           ;controller.c: 64:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
 13892  17DB  3190  20D6  3197   	fcall	_CLOCK_getTime
 13893  17DE  0142               	movlb	2	; select bank2
 13894  17DF  083B               	movf	_lastActiveTime^(0+256),w
 13895  17E0  0140               	movlb	0	; select bank0
 13896  17E1  0220               	subwf	?_CLOCK_getTime,w
 13897  17E2  00C2               	movwf	??_CONTROLLER_task
 13898  17E3  0142               	movlb	2	; select bank2
 13899  17E4  083C               	movf	(_lastActiveTime+1)^(0+256),w
 13900  17E5  0140               	movlb	0	; select bank0
 13901  17E6  3B21               	subwfb	?_CLOCK_getTime+1,w
 13902  17E7  00C3               	movwf	??_CONTROLLER_task+1
 13903  17E8  3013               	movlw	19
 13904  17E9  0243               	subwf	??_CONTROLLER_task+1,w
 13905  17EA  3088               	movlw	136
 13906  17EB  1903               	skipnz
 13907  17EC  0242               	subwf	??_CONTROLLER_task,w
 13908  17ED  1C03               	skipc
 13909  17EE  0008               	return
 13910                           
 13911                           ;controller.c: 65:             TM1650_enable(0);
 13912  17EF  3000               	movlw	0
 13913  17F0  3191  2185  3197   	fcall	_TM1650_enable
 13914                           
 13915                           ;controller.c: 66:             lastActiveTime = CLOCK_getTime() - 5001;
 13916  17F3  3190  20D6         	fcall	_CLOCK_getTime
 13917  17F5  0140               	movlb	0	; select bank0
 13918  17F6  0820               	movf	?_CLOCK_getTime,w
 13919  17F7  3E77               	addlw	119
 13920  17F8  0142               	movlb	2	; select bank2
 13921  17F9  00BB               	movwf	_lastActiveTime^(0+256)
 13922  17FA  30EC               	movlw	236
 13923  17FB  0140               	movlb	0	; select bank0
 13924  17FC  3D21               	addwfc	?_CLOCK_getTime+1,w
 13925  17FD  0142               	movlb	2	; select bank2
 13926  17FE  00BC               	movwf	(_lastActiveTime+1)^(0+256)
 13927  17FF  0008               	return
 13928  1800                     __end_of_CONTROLLER_task:	
 13929                           
 13930                           	psect	text34
 13931  11C4                     __ptext34:	
 13932 ;; *************** function _address_inc *****************
 13933 ;; Defined at:
 13934 ;;		line 19 in file "controller.c"
 13935 ;; Parameters:    Size  Location     Type
 13936 ;;		None
 13937 ;; Auto vars:     Size  Location     Type
 13938 ;;		None
 13939 ;; Return value:  Size  Location     Type
 13940 ;;                  1    wreg      void 
 13941 ;; Registers used:
 13942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13943 ;; Tracked objects:
 13944 ;;		On entry : 0/0
 13945 ;;		On exit  : 0/0
 13946 ;;		Unchanged: 0/0
 13947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13952 ;;Total ram usage:        0 bytes
 13953 ;; Hardware stack levels used:    1
 13954 ;; Hardware stack levels required when called:   10
 13955 ;; This function calls:
 13956 ;;		_TM1650_fastPrintNum
 13957 ;; This function is called by:
 13958 ;;		_CONTROLLER_task
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962                           
 13963                           ;psect for function _address_inc
 13964  11C4                     _address_inc:	
 13965                           
 13966                           ;controller.c: 21:     if(address == 512) {
 13967                           
 13968                           ;incstack = 0
 13969                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13970  11C4  3002               	movlw	2
 13971  11C5  067B               	xorwf	_address+1,w
 13972  11C6  047A               	iorwf	_address,w
 13973  11C7  1D03               	btfss	3,2
 13974  11C8  29CE               	goto	l5586
 13975                           
 13976                           ;controller.c: 22:         address = 1;
 13977  11C9  3001               	movlw	1
 13978  11CA  00FA               	movwf	_address
 13979  11CB  3000               	movlw	0
 13980  11CC  00FB               	movwf	_address+1
 13981                           
 13982                           ;controller.c: 23:     } else {
 13983  11CD  29D2               	goto	l5588
 13984  11CE                     l5586:	
 13985                           
 13986                           ;controller.c: 24:         address++;
 13987  11CE  3001               	movlw	1
 13988  11CF  07FA               	addwf	_address,f
 13989  11D0  3000               	movlw	0
 13990  11D1  3DFB               	addwfc	_address+1,f
 13991  11D2                     l5588:	
 13992                           
 13993                           ;controller.c: 28:     TM1650_fastPrintNum(address);
 13994  11D2  087B               	movf	_address+1,w
 13995  11D3  0140               	movlb	0	; select bank0
 13996  11D4  00BC               	movwf	TM1650_fastPrintNum@num+1
 13997  11D5  087A               	movf	_address,w
 13998  11D6  00BB               	movwf	TM1650_fastPrintNum@num
 13999  11D7  3188  200D         	fcall	_TM1650_fastPrintNum
 14000  11D9  0008               	return
 14001  11DA                     __end_of_address_inc:	
 14002                           
 14003                           	psect	text35
 14004  119A                     __ptext35:	
 14005 ;; *************** function _address_dec *****************
 14006 ;; Defined at:
 14007 ;;		line 34 in file "controller.c"
 14008 ;; Parameters:    Size  Location     Type
 14009 ;;		None
 14010 ;; Auto vars:     Size  Location     Type
 14011 ;;		None
 14012 ;; Return value:  Size  Location     Type
 14013 ;;                  1    wreg      void 
 14014 ;; Registers used:
 14015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14016 ;; Tracked objects:
 14017 ;;		On entry : 0/0
 14018 ;;		On exit  : 0/0
 14019 ;;		Unchanged: 0/0
 14020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14025 ;;Total ram usage:        0 bytes
 14026 ;; Hardware stack levels used:    1
 14027 ;; Hardware stack levels required when called:   10
 14028 ;; This function calls:
 14029 ;;		_TM1650_fastPrintNum
 14030 ;; This function is called by:
 14031 ;;		_CONTROLLER_task
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           
 14036                           ;psect for function _address_dec
 14037  119A                     _address_dec:	
 14038                           
 14039                           ;controller.c: 36:     if(address == 1) {
 14040                           
 14041                           ;incstack = 0
 14042                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14043  119A  037A               	decf	_address,w
 14044  119B  047B               	iorwf	_address+1,w
 14045  119C  1D03               	btfss	3,2
 14046  119D  29A3               	goto	l5594
 14047                           
 14048                           ;controller.c: 37:         address = 512;
 14049  119E  3000               	movlw	0
 14050  119F  00FA               	movwf	_address
 14051  11A0  3002               	movlw	2
 14052  11A1  00FB               	movwf	_address+1
 14053                           
 14054                           ;controller.c: 38:     } else {
 14055  11A2  29A7               	goto	l5596
 14056  11A3                     l5594:	
 14057                           
 14058                           ;controller.c: 39:         address--;
 14059  11A3  3001               	movlw	1
 14060  11A4  02FA               	subwf	_address,f
 14061  11A5  3000               	movlw	0
 14062  11A6  3BFB               	subwfb	_address+1,f
 14063  11A7                     l5596:	
 14064                           
 14065                           ;controller.c: 43:     TM1650_fastPrintNum(address);
 14066  11A7  087B               	movf	_address+1,w
 14067  11A8  0140               	movlb	0	; select bank0
 14068  11A9  00BC               	movwf	TM1650_fastPrintNum@num+1
 14069  11AA  087A               	movf	_address,w
 14070  11AB  00BB               	movwf	TM1650_fastPrintNum@num
 14071  11AC  3188  200D         	fcall	_TM1650_fastPrintNum
 14072  11AE  0008               	return
 14073  11AF                     __end_of_address_dec:	
 14074                           
 14075                           	psect	text36
 14076  1185                     __ptext36:	
 14077 ;; *************** function _TM1650_enable *****************
 14078 ;; Defined at:
 14079 ;;		line 56 in file "tm1650.c"
 14080 ;; Parameters:    Size  Location     Type
 14081 ;;  enable          1    wreg     _Bool 
 14082 ;; Auto vars:     Size  Location     Type
 14083 ;;  enable          1   20[BANK0 ] _Bool 
 14084 ;; Return value:  Size  Location     Type
 14085 ;;                  1    wreg      void 
 14086 ;; Registers used:
 14087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14088 ;; Tracked objects:
 14089 ;;		On entry : 0/0
 14090 ;;		On exit  : 0/0
 14091 ;;		Unchanged: 0/0
 14092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14096 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14097 ;;Total ram usage:        1 bytes
 14098 ;; Hardware stack levels used:    1
 14099 ;; Hardware stack levels required when called:    8
 14100 ;; This function calls:
 14101 ;;		_writeData
 14102 ;; This function is called by:
 14103 ;;		_TM1650_init
 14104 ;;		_CONTROLLER_task
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           
 14109                           ;psect for function _TM1650_enable
 14110  1185                     _TM1650_enable:	
 14111                           
 14112                           ;incstack = 0
 14113                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14114                           ;TM1650_enable@enable stored from wreg
 14115  1185  0140               	movlb	0	; select bank0
 14116  1186  00B4               	movwf	TM1650_enable@enable
 14117                           
 14118                           ;tm1650.c: 57:     if(enable) {
 14119  1187  0834               	movf	TM1650_enable@enable,w
 14120  1188  1903               	btfsc	3,2
 14121  1189  2993               	goto	l5546
 14122                           
 14123                           ;tm1650.c: 58:         writeData(0x24, 1);
 14124  118A  01AE               	clrf	writeData@data
 14125  118B  0AAE               	incf	writeData@data,f
 14126  118C  3024               	movlw	36
 14127  118D  3192  225B         	fcall	_writeData
 14128                           
 14129                           ;tm1650.c: 59:         isOn = 1;
 14130  118F  0142               	movlb	2	; select bank2
 14131  1190  01CF               	clrf	_isOn^(0+256)
 14132  1191  0ACF               	incf	_isOn^(0+256),f
 14133                           
 14134                           ;tm1650.c: 60:     } else {
 14135  1192  0008               	return
 14136  1193                     l5546:	
 14137                           
 14138                           ;tm1650.c: 61:         writeData(0x24, 0);
 14139  1193  01AE               	clrf	writeData@data
 14140  1194  3024               	movlw	36
 14141  1195  3192  225B         	fcall	_writeData
 14142                           
 14143                           ;tm1650.c: 62:         isOn = 0;
 14144  1197  0142               	movlb	2	; select bank2
 14145  1198  01CF               	clrf	_isOn^(0+256)
 14146  1199  0008               	return
 14147  119A                     __end_of_TM1650_enable:	
 14148                           
 14149                           	psect	text37
 14150  12F7                     __ptext37:	
 14151 ;; *************** function _BUTTONS_isClicked *****************
 14152 ;; Defined at:
 14153 ;;		line 71 in file "buttons.c"
 14154 ;; Parameters:    Size  Location     Type
 14155 ;;  button          1    wreg     PTR struct .
 14156 ;;		 -> buttons(32), NULL(0), 
 14157 ;; Auto vars:     Size  Location     Type
 14158 ;;  button          1    3[BANK0 ] PTR struct .
 14159 ;;		 -> buttons(32), NULL(0), 
 14160 ;; Return value:  Size  Location     Type
 14161 ;;                  2    0[BANK0 ] int 
 14162 ;; Registers used:
 14163 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14164 ;; Tracked objects:
 14165 ;;		On entry : 0/0
 14166 ;;		On exit  : 0/0
 14167 ;;		Unchanged: 0/0
 14168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14169 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14172 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14173 ;;Total ram usage:        4 bytes
 14174 ;; Hardware stack levels used:    1
 14175 ;; Hardware stack levels required when called:    4
 14176 ;; This function calls:
 14177 ;;		Nothing
 14178 ;; This function is called by:
 14179 ;;		_CONTROLLER_task
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183                           
 14184                           ;psect for function _BUTTONS_isClicked
 14185  12F7                     _BUTTONS_isClicked:	
 14186                           
 14187                           ;incstack = 0
 14188                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 14189                           ;BUTTONS_isClicked@button stored from wreg
 14190  12F7  0140               	movlb	0	; select bank0
 14191  12F8  00A3               	movwf	BUTTONS_isClicked@button
 14192                           
 14193                           ;buttons.c: 72:     if (button->event == EVENT_PRESSED) {
 14194  12F9  0823               	movf	BUTTONS_isClicked@button,w
 14195  12FA  3E05               	addlw	5
 14196  12FB  0086               	movwf	6
 14197  12FC  3001               	movlw	1	; select bank2/3
 14198  12FD  0087               	movwf	7
 14199  12FE  0301               	decf	1,w
 14200  12FF  1D03               	btfss	3,2
 14201  1300  2B0C               	goto	l5572
 14202                           
 14203                           ;buttons.c: 73:         button->event = EVENT_IDLE;
 14204  1301  0823               	movf	BUTTONS_isClicked@button,w
 14205  1302  3E05               	addlw	5
 14206  1303  0086               	movwf	6
 14207  1304  3001               	movlw	1	; select bank2/3
 14208  1305  0087               	movwf	7
 14209  1306  0181               	clrf	1
 14210  1307                     l5566:	
 14211                           
 14212                           ;buttons.c: 74:         return 1;
 14213  1307  3001               	movlw	1
 14214  1308  00A0               	movwf	?_BUTTONS_isClicked
 14215  1309  3000               	movlw	0
 14216  130A  00A1               	movwf	?_BUTTONS_isClicked+1
 14217  130B  0008               	return
 14218  130C                     l5572:	
 14219  130C  0823               	movf	BUTTONS_isClicked@button,w
 14220  130D  3E05               	addlw	5
 14221  130E  0086               	movwf	6
 14222  130F  3001               	movlw	1	; select bank2/3
 14223  1310  0087               	movwf	7
 14224  1311  3002               	movlw	2
 14225  1312  0601               	xorwf	1,w
 14226  1313  1903               	btfsc	3,2
 14227  1314  2B07               	goto	l5566
 14228                           
 14229                           ;buttons.c: 78:     return 0;
 14230  1315  01A0               	clrf	?_BUTTONS_isClicked
 14231  1316  01A1               	clrf	?_BUTTONS_isClicked+1
 14232  1317  0008               	return
 14233  1318                     __end_of_BUTTONS_isClicked:	
 14234                           
 14235                           	psect	text38
 14236  10B3                     __ptext38:	
 14237 ;; *************** function _CONTROLLER_init *****************
 14238 ;; Defined at:
 14239 ;;		line 12 in file "controller.c"
 14240 ;; Parameters:    Size  Location     Type
 14241 ;;		None
 14242 ;; Auto vars:     Size  Location     Type
 14243 ;;		None
 14244 ;; Return value:  Size  Location     Type
 14245 ;;                  1    wreg      void 
 14246 ;; Registers used:
 14247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14248 ;; Tracked objects:
 14249 ;;		On entry : 0/0
 14250 ;;		On exit  : 0/0
 14251 ;;		Unchanged: 0/0
 14252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14257 ;;Total ram usage:        0 bytes
 14258 ;; Hardware stack levels used:    1
 14259 ;; Hardware stack levels required when called:   10
 14260 ;; This function calls:
 14261 ;;		_TM1650_fastPrintNum
 14262 ;; This function is called by:
 14263 ;;		_main
 14264 ;; This function uses a non-reentrant model
 14265 ;;
 14266                           
 14267                           
 14268                           ;psect for function _CONTROLLER_init
 14269  10B3                     _CONTROLLER_init:	
 14270                           
 14271                           ;controller.c: 13:     TM1650_fastPrintNum(address);
 14272                           
 14273                           ;incstack = 0
 14274                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14275  10B3  087B               	movf	_address+1,w
 14276  10B4  0140               	movlb	0	; select bank0
 14277  10B5  00BC               	movwf	TM1650_fastPrintNum@num+1
 14278  10B6  087A               	movf	_address,w
 14279  10B7  00BB               	movwf	TM1650_fastPrintNum@num
 14280  10B8  3188  200D         	fcall	_TM1650_fastPrintNum
 14281  10BA  0008               	return
 14282  10BB                     __end_of_CONTROLLER_init:	
 14283                           
 14284                           	psect	text39
 14285  080D                     __ptext39:	
 14286 ;; *************** function _TM1650_fastPrintNum *****************
 14287 ;; Defined at:
 14288 ;;		line 36 in file "tm1650.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;  num             2   27[BANK0 ] unsigned short 
 14291 ;; Auto vars:     Size  Location     Type
 14292 ;;  numWrite        2   30[BANK0 ] int 
 14293 ;;  i               2   32[BANK0 ] int 
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1    wreg      void 
 14296 ;; Registers used:
 14297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14298 ;; Tracked objects:
 14299 ;;		On entry : 0/0
 14300 ;;		On exit  : 0/0
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14304 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14305 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14306 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14307 ;;Total ram usage:        7 bytes
 14308 ;; Hardware stack levels used:    1
 14309 ;; Hardware stack levels required when called:    9
 14310 ;; This function calls:
 14311 ;;		_TM1650_setDigit
 14312 ;;		___lwdiv
 14313 ;;		___lwmod
 14314 ;; This function is called by:
 14315 ;;		_CONTROLLER_init
 14316 ;;		_address_inc
 14317 ;;		_address_dec
 14318 ;; This function uses a non-reentrant model
 14319 ;;
 14320                           
 14321                           
 14322                           ;psect for function _TM1650_fastPrintNum
 14323  080D                     _TM1650_fastPrintNum:	
 14324                           
 14325                           ;tm1650.c: 37:     if(num > 9999) {
 14326                           
 14327                           ;incstack = 0
 14328                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14329  080D  3027               	movlw	39
 14330  080E  0140               	movlb	0	; select bank0
 14331  080F  023C               	subwf	TM1650_fastPrintNum@num+1,w
 14332  0810  3010               	movlw	16
 14333  0811  1903               	skipnz
 14334  0812  023B               	subwf	TM1650_fastPrintNum@num,w
 14335  0813  1C03               	skipc
 14336  0814  2844               	goto	l5360
 14337                           
 14338                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
 14339  0815  3045               	movlw	69
 14340  0816  00BD               	movwf	??_TM1650_fastPrintNum
 14341  0817  083D               	movf	??_TM1650_fastPrintNum,w
 14342  0818  00B4               	movwf	TM1650_setDigit@data
 14343  0819  3000               	movlw	0
 14344  081A  00B5               	movwf	TM1650_setDigit@dp
 14345  081B  00B6               	movwf	TM1650_setDigit@dp+1
 14346  081C  3000               	movlw	0
 14347  081D  3192  2223  3188   	fcall	_TM1650_setDigit
 14348                           
 14349                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
 14350  0820  3045               	movlw	69
 14351  0821  0140               	movlb	0	; select bank0
 14352  0822  00BD               	movwf	??_TM1650_fastPrintNum
 14353  0823  083D               	movf	??_TM1650_fastPrintNum,w
 14354  0824  00B4               	movwf	TM1650_setDigit@data
 14355  0825  3000               	movlw	0
 14356  0826  00B5               	movwf	TM1650_setDigit@dp
 14357  0827  00B6               	movwf	TM1650_setDigit@dp+1
 14358  0828  3001               	movlw	1
 14359  0829  3192  2223  3188   	fcall	_TM1650_setDigit
 14360                           
 14361                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
 14362  082C  3045               	movlw	69
 14363  082D  0140               	movlb	0	; select bank0
 14364  082E  00BD               	movwf	??_TM1650_fastPrintNum
 14365  082F  083D               	movf	??_TM1650_fastPrintNum,w
 14366  0830  00B4               	movwf	TM1650_setDigit@data
 14367  0831  3000               	movlw	0
 14368  0832  00B5               	movwf	TM1650_setDigit@dp
 14369  0833  00B6               	movwf	TM1650_setDigit@dp+1
 14370  0834  3002               	movlw	2
 14371  0835  3192  2223  3188   	fcall	_TM1650_setDigit
 14372                           
 14373                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
 14374  0838  3045               	movlw	69
 14375  0839  0140               	movlb	0	; select bank0
 14376  083A  00BD               	movwf	??_TM1650_fastPrintNum
 14377  083B  083D               	movf	??_TM1650_fastPrintNum,w
 14378  083C  00B4               	movwf	TM1650_setDigit@data
 14379  083D  3000               	movlw	0
 14380  083E  00B5               	movwf	TM1650_setDigit@dp
 14381  083F  00B6               	movwf	TM1650_setDigit@dp+1
 14382  0840  3003               	movlw	3
 14383  0841  3192  2223         	fcall	_TM1650_setDigit
 14384                           
 14385                           ;tm1650.c: 42:     } else {
 14386  0843  0008               	return
 14387  0844                     l5360:	
 14388                           
 14389                           ;tm1650.c: 43:         int i=0;
 14390  0844  01C0               	clrf	TM1650_fastPrintNum@i
 14391  0845  01C1               	clrf	TM1650_fastPrintNum@i+1
 14392                           
 14393                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
 14394  0846  01C0               	clrf	TM1650_fastPrintNum@i
 14395  0847  01C1               	clrf	TM1650_fastPrintNum@i+1
 14396  0848                     l5366:	
 14397                           
 14398                           ;tm1650.c: 45:             int numWrite = num %10;
 14399  0848  300A               	movlw	10
 14400  0849  0140               	movlb	0	; select bank0
 14401  084A  00A0               	movwf	___lwmod@divisor
 14402  084B  3000               	movlw	0
 14403  084C  00A1               	movwf	___lwmod@divisor+1
 14404  084D  083C               	movf	TM1650_fastPrintNum@num+1,w
 14405  084E  00A3               	movwf	___lwmod@dividend+1
 14406  084F  083B               	movf	TM1650_fastPrintNum@num,w
 14407  0850  00A2               	movwf	___lwmod@dividend
 14408  0851  3193  23D7  3188   	fcall	___lwmod
 14409  0854  0140               	movlb	0	; select bank0
 14410  0855  0821               	movf	?___lwmod+1,w
 14411  0856  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
 14412  0857  0820               	movf	?___lwmod,w
 14413  0858  00BE               	movwf	TM1650_fastPrintNum@numWrite
 14414                           
 14415                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
 14416  0859  083E               	movf	TM1650_fastPrintNum@numWrite,w
 14417  085A  3E30               	addlw	48
 14418  085B  00BD               	movwf	??_TM1650_fastPrintNum
 14419  085C  083D               	movf	??_TM1650_fastPrintNum,w
 14420  085D  00B4               	movwf	TM1650_setDigit@data
 14421  085E  3000               	movlw	0
 14422  085F  00B5               	movwf	TM1650_setDigit@dp
 14423  0860  00B6               	movwf	TM1650_setDigit@dp+1
 14424  0861  0840               	movf	TM1650_fastPrintNum@i,w
 14425  0862  3C03               	sublw	3
 14426  0863  3192  2223  3188   	fcall	_TM1650_setDigit
 14427                           
 14428                           ;tm1650.c: 47:             num = num/10;
 14429  0866  300A               	movlw	10
 14430  0867  0140               	movlb	0	; select bank0
 14431  0868  00A0               	movwf	___lwdiv@divisor
 14432  0869  3000               	movlw	0
 14433  086A  00A1               	movwf	___lwdiv@divisor+1
 14434  086B  083C               	movf	TM1650_fastPrintNum@num+1,w
 14435  086C  00A3               	movwf	___lwdiv@dividend+1
 14436  086D  083B               	movf	TM1650_fastPrintNum@num,w
 14437  086E  00A2               	movwf	___lwdiv@dividend
 14438  086F  3194  2466  3188   	fcall	___lwdiv
 14439  0872  0140               	movlb	0	; select bank0
 14440  0873  0821               	movf	?___lwdiv+1,w
 14441  0874  00BC               	movwf	TM1650_fastPrintNum@num+1
 14442  0875  0820               	movf	?___lwdiv,w
 14443  0876  00BB               	movwf	TM1650_fastPrintNum@num
 14444                           
 14445                           ;tm1650.c: 48:         }
 14446  0877  3001               	movlw	1
 14447  0878  07C0               	addwf	TM1650_fastPrintNum@i,f
 14448  0879  3000               	movlw	0
 14449  087A  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
 14450  087B  0841               	movf	TM1650_fastPrintNum@i+1,w
 14451  087C  3A80               	xorlw	128
 14452  087D  00BD               	movwf	??_TM1650_fastPrintNum
 14453  087E  3080               	movlw	128
 14454  087F  023D               	subwf	??_TM1650_fastPrintNum,w
 14455  0880  1D03               	skipz
 14456  0881  2884               	goto	u5695
 14457  0882  3004               	movlw	4
 14458  0883  0240               	subwf	TM1650_fastPrintNum@i,w
 14459  0884                     u5695:	
 14460  0884  1803               	btfsc	3,0
 14461  0885  0008               	return
 14462  0886  2848               	goto	l5366
 14463  0887                     __end_of_TM1650_fastPrintNum:	
 14464                           
 14465                           	psect	text40
 14466  13D7                     __ptext40:	
 14467 ;; *************** function ___lwmod *****************
 14468 ;; Defined at:
 14469 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 14470 ;; Parameters:    Size  Location     Type
 14471 ;;  divisor         2    0[BANK0 ] unsigned int 
 14472 ;;  dividend        2    2[BANK0 ] unsigned int 
 14473 ;; Auto vars:     Size  Location     Type
 14474 ;;  counter         1    5[BANK0 ] unsigned char 
 14475 ;; Return value:  Size  Location     Type
 14476 ;;                  2    0[BANK0 ] unsigned int 
 14477 ;; Registers used:
 14478 ;;		wreg, status,2, status,0
 14479 ;; Tracked objects:
 14480 ;;		On entry : 0/0
 14481 ;;		On exit  : 0/0
 14482 ;;		Unchanged: 0/0
 14483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14484 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14485 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14486 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14487 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14488 ;;Total ram usage:        6 bytes
 14489 ;; Hardware stack levels used:    1
 14490 ;; Hardware stack levels required when called:    4
 14491 ;; This function calls:
 14492 ;;		Nothing
 14493 ;; This function is called by:
 14494 ;;		_TM1650_fastPrintNum
 14495 ;; This function uses a non-reentrant model
 14496 ;;
 14497                           
 14498                           
 14499                           ;psect for function ___lwmod
 14500  13D7                     ___lwmod:	
 14501                           
 14502                           ;incstack = 0
 14503                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 14504  13D7  0140               	movlb	0	; select bank0
 14505  13D8  0820               	movf	___lwmod@divisor,w
 14506  13D9  0421               	iorwf	___lwmod@divisor+1,w
 14507  13DA  1903               	btfsc	3,2
 14508  13DB  2BFF               	goto	l5334
 14509  13DC  01A5               	clrf	___lwmod@counter
 14510  13DD  0AA5               	incf	___lwmod@counter,f
 14511  13DE                     l5324:	
 14512  13DE  1BA1               	btfsc	___lwmod@divisor+1,7
 14513  13DF  2BEA               	goto	l5326
 14514  13E0  3001               	movlw	1
 14515  13E1                     u5635:	
 14516  13E1  35A0               	lslf	___lwmod@divisor,f
 14517  13E2  0DA1               	rlf	___lwmod@divisor+1,f
 14518  13E3  0B89               	decfsz	9,f
 14519  13E4  2BE1               	goto	u5635
 14520  13E5  3001               	movlw	1
 14521  13E6  00A4               	movwf	??___lwmod
 14522  13E7  0824               	movf	??___lwmod,w
 14523  13E8  07A5               	addwf	___lwmod@counter,f
 14524  13E9  2BDE               	goto	l5324
 14525  13EA                     l5326:	
 14526  13EA  0821               	movf	___lwmod@divisor+1,w
 14527  13EB  0223               	subwf	___lwmod@dividend+1,w
 14528  13EC  1D03               	skipz
 14529  13ED  2BF0               	goto	u5655
 14530  13EE  0820               	movf	___lwmod@divisor,w
 14531  13EF  0222               	subwf	___lwmod@dividend,w
 14532  13F0                     u5655:	
 14533  13F0  1C03               	skipc
 14534  13F1  2BF6               	goto	l5330
 14535  13F2  0820               	movf	___lwmod@divisor,w
 14536  13F3  02A2               	subwf	___lwmod@dividend,f
 14537  13F4  0821               	movf	___lwmod@divisor+1,w
 14538  13F5  3BA3               	subwfb	___lwmod@dividend+1,f
 14539  13F6                     l5330:	
 14540  13F6  3001               	movlw	1
 14541  13F7                     u5665:	
 14542  13F7  36A1               	lsrf	___lwmod@divisor+1,f
 14543  13F8  0CA0               	rrf	___lwmod@divisor,f
 14544  13F9  0B89               	decfsz	9,f
 14545  13FA  2BF7               	goto	u5665
 14546  13FB  3001               	movlw	1
 14547  13FC  02A5               	subwf	___lwmod@counter,f
 14548  13FD  1D03               	btfss	3,2
 14549  13FE  2BEA               	goto	l5326
 14550  13FF                     l5334:	
 14551  13FF  0823               	movf	___lwmod@dividend+1,w
 14552  1400  00A1               	movwf	?___lwmod+1
 14553  1401  0822               	movf	___lwmod@dividend,w
 14554  1402  00A0               	movwf	?___lwmod
 14555  1403  0008               	return
 14556  1404                     __end_of___lwmod:	
 14557                           
 14558                           	psect	text41
 14559  1223                     __ptext41:	
 14560 ;; *************** function _TM1650_setDigit *****************
 14561 ;; Defined at:
 14562 ;;		line 24 in file "tm1650.c"
 14563 ;; Parameters:    Size  Location     Type
 14564 ;;  digit           1    wreg     unsigned char 
 14565 ;;  data            1   20[BANK0 ] unsigned char 
 14566 ;;  dp              2   21[BANK0 ] int 
 14567 ;; Auto vars:     Size  Location     Type
 14568 ;;  digit           1   26[BANK0 ] unsigned char 
 14569 ;; Return value:  Size  Location     Type
 14570 ;;                  1    wreg      void 
 14571 ;; Registers used:
 14572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14573 ;; Tracked objects:
 14574 ;;		On entry : 0/0
 14575 ;;		On exit  : 0/0
 14576 ;;		Unchanged: 0/0
 14577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14578 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14580 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14581 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14582 ;;Total ram usage:        7 bytes
 14583 ;; Hardware stack levels used:    1
 14584 ;; Hardware stack levels required when called:    8
 14585 ;; This function calls:
 14586 ;;		_writeData
 14587 ;; This function is called by:
 14588 ;;		_TM1650_fastPrintNum
 14589 ;; This function uses a non-reentrant model
 14590 ;;
 14591                           
 14592                           
 14593                           ;psect for function _TM1650_setDigit
 14594  1223                     _TM1650_setDigit:	
 14595                           
 14596                           ;incstack = 0
 14597                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14598                           ;TM1650_setDigit@digit stored from wreg
 14599  1223  0140               	movlb	0	; select bank0
 14600  1224  00BA               	movwf	TM1650_setDigit@digit
 14601                           
 14602                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
 14603  1225  0834               	movf	TM1650_setDigit@data,w
 14604  1226  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 14605  1227  0084               	movwf	4
 14606  1228  3097               	movlw	high ((_charTable+65504)| (0+32768))
 14607  1229  1803               	skipnc
 14608  122A  3E01               	addlw	1
 14609  122B  0085               	movwf	5
 14610  122C  0800               	movf	0,w	;code access
 14611  122D  00B7               	movwf	??_TM1650_setDigit
 14612  122E  0835               	movf	TM1650_setDigit@dp,w
 14613  122F  00B8               	movwf	??_TM1650_setDigit+1
 14614  1230  3006               	movlw	6
 14615  1231                     u5395:	
 14616  1231  35B8               	lslf	??_TM1650_setDigit+1,f
 14617  1232  3EFF               	addlw	-1
 14618  1233  1D03               	skipz
 14619  1234  2A31               	goto	u5395
 14620  1235  3538               	lslf	??_TM1650_setDigit+1,w
 14621  1236  0437               	iorwf	??_TM1650_setDigit,w
 14622  1237  00B9               	movwf	??_TM1650_setDigit+2
 14623  1238  0839               	movf	??_TM1650_setDigit+2,w
 14624  1239  00AE               	movwf	writeData@data
 14625  123A  083A               	movf	TM1650_setDigit@digit,w
 14626  123B  3E34               	addlw	52
 14627  123C  3192  225B         	fcall	_writeData
 14628  123E  0008               	return
 14629  123F                     __end_of_TM1650_setDigit:	
 14630                           
 14631                           	psect	text42
 14632  125B                     __ptext42:	
 14633 ;; *************** function _writeData *****************
 14634 ;; Defined at:
 14635 ;;		line 18 in file "tm1650.c"
 14636 ;; Parameters:    Size  Location     Type
 14637 ;;  address         1    wreg     unsigned char 
 14638 ;;  data            1   14[BANK0 ] unsigned char 
 14639 ;; Auto vars:     Size  Location     Type
 14640 ;;  address         1   18[BANK0 ] unsigned char 
 14641 ;;  status          1   19[BANK0 ] volatile enum E10866
 14642 ;; Return value:  Size  Location     Type
 14643 ;;                  1    wreg      void 
 14644 ;; Registers used:
 14645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14646 ;; Tracked objects:
 14647 ;;		On entry : 0/0
 14648 ;;		On exit  : 0/0
 14649 ;;		Unchanged: 0/0
 14650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14651 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14653 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14654 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14655 ;;Total ram usage:        6 bytes
 14656 ;; Hardware stack levels used:    1
 14657 ;; Hardware stack levels required when called:    7
 14658 ;; This function calls:
 14659 ;;		_I2C1_MasterWrite
 14660 ;; This function is called by:
 14661 ;;		_TM1650_setDigit
 14662 ;;		_TM1650_enable
 14663 ;; This function uses a non-reentrant model
 14664 ;;
 14665                           
 14666                           
 14667                           ;psect for function _writeData
 14668  125B                     _writeData:	
 14669                           
 14670                           ;incstack = 0
 14671                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14672                           ;writeData@address stored from wreg
 14673  125B  0140               	movlb	0	; select bank0
 14674  125C  00B2               	movwf	writeData@address
 14675                           
 14676                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 14677  125D  3002               	movlw	2
 14678  125E  00AF               	movwf	??_writeData
 14679  125F  082F               	movf	??_writeData,w
 14680  1260  00B3               	movwf	writeData@status	;volatile
 14681                           
 14682                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
 14683  1261  01A7               	clrf	I2C1_MasterWrite@length
 14684  1262  0AA7               	incf	I2C1_MasterWrite@length,f
 14685  1263  0832               	movf	writeData@address,w
 14686  1264  00AF               	movwf	??_writeData
 14687  1265  01B0               	clrf	??_writeData+1
 14688  1266  082F               	movf	??_writeData,w
 14689  1267  00A8               	movwf	I2C1_MasterWrite@address
 14690  1268  0830               	movf	??_writeData+1,w
 14691  1269  00A9               	movwf	I2C1_MasterWrite@address+1
 14692  126A  3033               	movlw	(low (writeData@status| 0))& (0+255)
 14693  126B  00B1               	movwf	??_writeData+2
 14694  126C  0831               	movf	??_writeData+2,w
 14695  126D  00AA               	movwf	I2C1_MasterWrite@pflag
 14696  126E  302E               	movlw	(low (writeData@data| 0))& (0+255)
 14697  126F  3193  23AD  3192   	fcall	_I2C1_MasterWrite
 14698  1272                     l5052:	
 14699                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
 14700                           
 14701  1272  3002               	movlw	2
 14702  1273  0140               	movlb	0	; select bank0
 14703  1274  0633               	xorwf	writeData@status,w	;volatile
 14704  1275  1D03               	btfss	3,2
 14705  1276  0008               	return
 14706  1277  2A72               	goto	l5052
 14707  1278                     __end_of_writeData:	
 14708                           
 14709                           	psect	text43
 14710  13AD                     __ptext43:	
 14711 ;; *************** function _I2C1_MasterWrite *****************
 14712 ;; Defined at:
 14713 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  pdata           1    wreg     PTR unsigned char 
 14716 ;;		 -> writeData@data(1), 
 14717 ;;  length          1    7[BANK0 ] unsigned char 
 14718 ;;  address         2    8[BANK0 ] unsigned short 
 14719 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 14720 ;;		 -> writeData@status(1), 
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 14723 ;;		 -> writeData@data(1), 
 14724 ;; Return value:  Size  Location     Type
 14725 ;;                  1    wreg      void 
 14726 ;; Registers used:
 14727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14728 ;; Tracked objects:
 14729 ;;		On entry : 0/0
 14730 ;;		On exit  : 0/0
 14731 ;;		Unchanged: 0/0
 14732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14734 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14735 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14736 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14737 ;;Total ram usage:        7 bytes
 14738 ;; Hardware stack levels used:    1
 14739 ;; Hardware stack levels required when called:    6
 14740 ;; This function calls:
 14741 ;;		_I2C1_MasterTRBInsert
 14742 ;;		_I2C1_MasterWriteTRBBuild
 14743 ;; This function is called by:
 14744 ;;		_writeData
 14745 ;; This function uses a non-reentrant model
 14746 ;;
 14747                           
 14748                           
 14749                           ;psect for function _I2C1_MasterWrite
 14750  13AD                     _I2C1_MasterWrite:	
 14751                           
 14752                           ;incstack = 0
 14753                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14754                           ;I2C1_MasterWrite@pdata stored from wreg
 14755  13AD  0140               	movlb	0	; select bank0
 14756  13AE  00AD               	movwf	I2C1_MasterWrite@pdata
 14757                           
 14758                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 14759  13AF  0142               	movlb	2	; select bank2
 14760  13B0  182A               	btfsc	(_i2c1_object^(0+256)+2),0
 14761  13B1  2BD0               	goto	l5032
 14762                           
 14763                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 14764  13B2  0140               	movlb	0	; select bank0
 14765  13B3  082D               	movf	I2C1_MasterWrite@pdata,w
 14766  13B4  00AB               	movwf	??_I2C1_MasterWrite
 14767  13B5  082B               	movf	??_I2C1_MasterWrite,w
 14768  13B6  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 14769  13B7  0827               	movf	I2C1_MasterWrite@length,w
 14770  13B8  00AC               	movwf	??_I2C1_MasterWrite+1
 14771  13B9  082C               	movf	??_I2C1_MasterWrite+1,w
 14772  13BA  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 14773  13BB  0829               	movf	I2C1_MasterWrite@address+1,w
 14774  13BC  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 14775  13BD  0828               	movf	I2C1_MasterWrite@address,w
 14776  13BE  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 14777  13BF  3058               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 14778  13C0  3193  2318  3193   	fcall	_I2C1_MasterWriteTRBBuild
 14779                           
 14780                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 14781  13C3  3058               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 14782  13C4  0140               	movlb	0	; select bank0
 14783  13C5  00AB               	movwf	??_I2C1_MasterWrite
 14784  13C6  082B               	movf	??_I2C1_MasterWrite,w
 14785  13C7  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 14786  13C8  082A               	movf	I2C1_MasterWrite@pflag,w
 14787  13C9  00AC               	movwf	??_I2C1_MasterWrite+1
 14788  13CA  082C               	movf	??_I2C1_MasterWrite+1,w
 14789  13CB  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 14790  13CC  3001               	movlw	1
 14791  13CD  3196  267A         	fcall	_I2C1_MasterTRBInsert
 14792                           
 14793                           ;mcc_generated_files/i2c1.c: 613:     }
 14794  13CF  0008               	return
 14795  13D0                     l5032:	
 14796                           
 14797                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 14798  13D0  0140               	movlb	0	; select bank0
 14799  13D1  082A               	movf	I2C1_MasterWrite@pflag,w
 14800  13D2  0086               	movwf	6
 14801  13D3  0187               	clrf	7
 14802  13D4  0181               	clrf	1
 14803  13D5  0A81               	incf	1,f
 14804  13D6  0008               	return
 14805  13D7                     __end_of_I2C1_MasterWrite:	
 14806                           
 14807                           	psect	text44
 14808  1318                     __ptext44:	
 14809 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 14810 ;; Defined at:
 14811 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;  ptrb            1    wreg     PTR struct .
 14814 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 14815 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 14816 ;;		 -> writeData@data(1), 
 14817 ;;  length          1    1[BANK0 ] unsigned char 
 14818 ;;  address         2    2[BANK0 ] unsigned short 
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;  ptrb            1    6[BANK0 ] PTR struct .
 14821 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 14822 ;; Return value:  Size  Location     Type
 14823 ;;                  1    wreg      void 
 14824 ;; Registers used:
 14825 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14826 ;; Tracked objects:
 14827 ;;		On entry : 0/0
 14828 ;;		On exit  : 0/0
 14829 ;;		Unchanged: 0/0
 14830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14831 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14833 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14834 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14835 ;;Total ram usage:        7 bytes
 14836 ;; Hardware stack levels used:    1
 14837 ;; Hardware stack levels required when called:    4
 14838 ;; This function calls:
 14839 ;;		Nothing
 14840 ;; This function is called by:
 14841 ;;		_I2C1_MasterWrite
 14842 ;; This function uses a non-reentrant model
 14843 ;;
 14844                           
 14845                           
 14846                           ;psect for function _I2C1_MasterWriteTRBBuild
 14847  1318                     _I2C1_MasterWriteTRBBuild:	
 14848                           
 14849                           ;incstack = 0
 14850                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 14851                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 14852  1318  0140               	movlb	0	; select bank0
 14853  1319  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 14854                           
 14855                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 14856  131A  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 14857  131B  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 14858  131C  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 14859  131D  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 14860  131E  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 14861  131F  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 14862  1320  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 14863  1321  0086               	movwf	6
 14864  1322  3001               	movlw	1	; select bank2/3
 14865  1323  0087               	movwf	7
 14866  1324  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 14867  1325  3FC0               	movwi [0]fsr1
 14868  1326  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 14869  1327  3FC1               	movwi [1]fsr1
 14870                           
 14871                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 14872  1328  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 14873  1329  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 14874  132A  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 14875  132B  3E02               	addlw	2
 14876  132C  0086               	movwf	6
 14877  132D  3001               	movlw	1	; select bank2/3
 14878  132E  0087               	movwf	7
 14879  132F  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 14880  1330  0081               	movwf	1
 14881                           
 14882                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 14883  1331  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 14884  1332  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 14885  1333  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 14886  1334  3E03               	addlw	3
 14887  1335  0086               	movwf	6
 14888  1336  3001               	movlw	1	; select bank2/3
 14889  1337  0087               	movwf	7
 14890  1338  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 14891  1339  0081               	movwf	1
 14892  133A  0008               	return
 14893  133B                     __end_of_I2C1_MasterWriteTRBBuild:	
 14894                           
 14895                           	psect	text45
 14896  167A                     __ptext45:	
 14897 ;; *************** function _I2C1_MasterTRBInsert *****************
 14898 ;; Defined at:
 14899 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  count           1    wreg     unsigned char 
 14902 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 14903 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 14904 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 14905 ;;		 -> writeData@status(1), 
 14906 ;; Auto vars:     Size  Location     Type
 14907 ;;  count           1    3[BANK0 ] unsigned char 
 14908 ;; Return value:  Size  Location     Type
 14909 ;;                  1    wreg      void 
 14910 ;; Registers used:
 14911 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14912 ;; Tracked objects:
 14913 ;;		On entry : 0/0
 14914 ;;		On exit  : 0/0
 14915 ;;		Unchanged: 0/0
 14916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14920 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14921 ;;Total ram usage:        4 bytes
 14922 ;; Hardware stack levels used:    1
 14923 ;; Hardware stack levels required when called:    5
 14924 ;; This function calls:
 14925 ;;		_I2C1_WaitForLastPacketToComplete
 14926 ;; This function is called by:
 14927 ;;		_I2C1_MasterWrite
 14928 ;;		_I2C1_MasterRead
 14929 ;; This function uses a non-reentrant model
 14930 ;;
 14931                           
 14932                           
 14933                           ;psect for function _I2C1_MasterTRBInsert
 14934  167A                     _I2C1_MasterTRBInsert:	
 14935                           
 14936                           ;incstack = 0
 14937                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14938                           ;I2C1_MasterTRBInsert@count stored from wreg
 14939  167A  0140               	movlb	0	; select bank0
 14940  167B  00A3               	movwf	I2C1_MasterTRBInsert@count
 14941                           
 14942                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 14943  167C  0142               	movlb	2	; select bank2
 14944  167D  182A               	btfsc	(_i2c1_object^(0+256)+2),0
 14945  167E  2EBC               	goto	l5020
 14946                           
 14947                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 14948  167F  3002               	movlw	2
 14949  1680  0140               	movlb	0	; select bank0
 14950  1681  00A2               	movwf	??_I2C1_MasterTRBInsert
 14951  1682  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 14952  1683  0086               	movwf	6
 14953  1684  0187               	clrf	7
 14954  1685  0822               	movf	??_I2C1_MasterTRBInsert,w
 14955  1686  0081               	movwf	1
 14956                           
 14957                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 14958  1687  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 14959  1688  00A2               	movwf	??_I2C1_MasterTRBInsert
 14960  1689  0142               	movlb	2	; select bank2
 14961  168A  0A28               	incf	_i2c1_object^(0+256),w
 14962  168B  0086               	movwf	6
 14963  168C  3001               	movlw	1	; select bank2/3
 14964  168D  0087               	movwf	7
 14965  168E  0140               	movlb	0	; select bank0
 14966  168F  0822               	movf	??_I2C1_MasterTRBInsert,w
 14967  1690  0081               	movwf	1
 14968                           
 14969                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 14970  1691  0823               	movf	I2C1_MasterTRBInsert@count,w
 14971  1692  00A2               	movwf	??_I2C1_MasterTRBInsert
 14972  1693  0142               	movlb	2	; select bank2
 14973  1694  0828               	movf	_i2c1_object^(0+256),w
 14974  1695  0086               	movwf	6
 14975  1696  3001               	movlw	1	; select bank2/3
 14976  1697  0087               	movwf	7
 14977  1698  0140               	movlb	0	; select bank0
 14978  1699  0822               	movf	??_I2C1_MasterTRBInsert,w
 14979  169A  0081               	movwf	1
 14980                           
 14981                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 14982  169B  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 14983  169C  00A2               	movwf	??_I2C1_MasterTRBInsert
 14984  169D  0142               	movlb	2	; select bank2
 14985  169E  0828               	movf	_i2c1_object^(0+256),w
 14986  169F  3E02               	addlw	2
 14987  16A0  0086               	movwf	6
 14988  16A1  3001               	movlw	1	; select bank2/3
 14989  16A2  0087               	movwf	7
 14990  16A3  0140               	movlb	0	; select bank0
 14991  16A4  0822               	movf	??_I2C1_MasterTRBInsert,w
 14992  16A5  0081               	movwf	1
 14993                           
 14994                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 14995  16A6  3003               	movlw	3
 14996  16A7  00A2               	movwf	??_I2C1_MasterTRBInsert
 14997  16A8  0822               	movf	??_I2C1_MasterTRBInsert,w
 14998  16A9  0142               	movlb	2	; select bank2
 14999  16AA  07A8               	addwf	_i2c1_object^(0+256),f
 15000                           
 15001                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 15002  16AB  0828               	movf	_i2c1_object^(0+256),w
 15003  16AC  3A5F               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 15004  16AD  1D03               	skipz
 15005  16AE  2EB5               	goto	l5016
 15006                           
 15007                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 15008  16AF  305C               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 15009  16B0  0140               	movlb	0	; select bank0
 15010  16B1  00A2               	movwf	??_I2C1_MasterTRBInsert
 15011  16B2  0822               	movf	??_I2C1_MasterTRBInsert,w
 15012  16B3  0142               	movlb	2	; select bank2
 15013  16B4  00A8               	movwf	_i2c1_object^(0+256)
 15014  16B5                     l5016:	
 15015                           
 15016                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 15017  16B5  10AA               	bcf	(_i2c1_object^(0+256)+2),1
 15018                           
 15019                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 15020  16B6  0829               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 15021  16B7  0628               	xorwf	_i2c1_object^(0+256),w
 15022  16B8  1D03               	skipz
 15023  16B9  2EC2               	goto	l5022
 15024                           
 15025                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 15026  16BA  142A               	bsf	(_i2c1_object^(0+256)+2),0
 15027  16BB  2EC2               	goto	l5022
 15028  16BC                     l5020:	
 15029                           
 15030                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 15031  16BC  0140               	movlb	0	; select bank0
 15032  16BD  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 15033  16BE  0086               	movwf	6
 15034  16BF  0187               	clrf	7
 15035  16C0  0181               	clrf	1
 15036  16C1  0A81               	incf	1,f
 15037  16C2                     l5022:	
 15038                           
 15039                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 15040  16C2  0140               	movlb	0	; select bank0
 15041  16C3  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 15042  16C4  0086               	movwf	6
 15043  16C5  0187               	clrf	7
 15044  16C6  3002               	movlw	2
 15045  16C7  0601               	xorwf	1,w
 15046  16C8  1D03               	btfss	3,2
 15047  16C9  0008               	return
 15048                           
 15049                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 15050  16CA  3190  209A         	fcall	_I2C1_WaitForLastPacketToComplete
 15051                           
 15052                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 15053  16CC  014E               	movlb	14	; select bank14
 15054  16CD  140F               	bsf	15,0	;volatile
 15055  16CE  0008               	return
 15056  16CF                     __end_of_I2C1_MasterTRBInsert:	
 15057                           
 15058                           	psect	text46
 15059  109A                     __ptext46:	
 15060 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 15061 ;; Defined at:
 15062 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;		None
 15065 ;; Auto vars:     Size  Location     Type
 15066 ;;		None
 15067 ;; Return value:  Size  Location     Type
 15068 ;;                  1    wreg      void 
 15069 ;; Registers used:
 15070 ;;		wreg, status,2, status,0
 15071 ;; Tracked objects:
 15072 ;;		On entry : 0/0
 15073 ;;		On exit  : 0/0
 15074 ;;		Unchanged: 0/0
 15075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15080 ;;Total ram usage:        0 bytes
 15081 ;; Hardware stack levels used:    1
 15082 ;; Hardware stack levels required when called:    4
 15083 ;; This function calls:
 15084 ;;		Nothing
 15085 ;; This function is called by:
 15086 ;;		_I2C1_MasterTRBInsert
 15087 ;; This function uses a non-reentrant model
 15088 ;;
 15089                           
 15090                           
 15091                           ;psect for function _I2C1_WaitForLastPacketToComplete
 15092  109A                     _I2C1_WaitForLastPacketToComplete:	
 15093  109A                     l5002:	
 15094                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 15095                           
 15096                           ;incstack = 0
 15097                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 15098                           
 15099                           
 15100                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 15101  109A  0141               	movlb	1	; select bank1
 15102  109B  086D               	movf	_i2c1_state^(0+128),w
 15103  109C  1903               	btfsc	3,2
 15104  109D  0008               	return
 15105  109E  289A               	goto	l5002
 15106  109F                     __end_of_I2C1_WaitForLastPacketToComplete:	
 15107                           
 15108                           	psect	text47
 15109  10AB                     __ptext47:	
 15110 ;; *************** function _CLOCK_init *****************
 15111 ;; Defined at:
 15112 ;;		line 9 in file "clock.c"
 15113 ;; Parameters:    Size  Location     Type
 15114 ;;		None
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;		None
 15117 ;; Return value:  Size  Location     Type
 15118 ;;                  1    wreg      void 
 15119 ;; Registers used:
 15120 ;;		wreg, status,2, status,0, pclath, cstack
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15130 ;;Total ram usage:        0 bytes
 15131 ;; Hardware stack levels used:    1
 15132 ;; Hardware stack levels required when called:    5
 15133 ;; This function calls:
 15134 ;;		_TMR0_SetInterruptHandler
 15135 ;; This function is called by:
 15136 ;;		_main
 15137 ;; This function uses a non-reentrant model
 15138 ;;
 15139                           
 15140                           
 15141                           ;psect for function _CLOCK_init
 15142  10AB                     _CLOCK_init:	
 15143                           
 15144                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 15145                           
 15146                           ;incstack = 0
 15147                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 15148  10AB  309F               	movlw	low _CLOCK_timerCallback
 15149  10AC  0140               	movlb	0	; select bank0
 15150  10AD  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 15151  10AE  3010               	movlw	high _CLOCK_timerCallback
 15152  10AF  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 15153  10B0  3190  20DF         	fcall	_TMR0_SetInterruptHandler
 15154  10B2  0008               	return
 15155  10B3                     __end_of_CLOCK_init:	
 15156                           
 15157                           	psect	text48
 15158  10DF                     __ptext48:	
 15159 ;; *************** function _TMR0_SetInterruptHandler *****************
 15160 ;; Defined at:
 15161 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 15162 ;; Parameters:    Size  Location     Type
 15163 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 15164 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 15165 ;; Auto vars:     Size  Location     Type
 15166 ;;		None
 15167 ;; Return value:  Size  Location     Type
 15168 ;;                  1    wreg      void 
 15169 ;; Registers used:
 15170 ;;		wreg
 15171 ;; Tracked objects:
 15172 ;;		On entry : 0/0
 15173 ;;		On exit  : 0/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15179 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15180 ;;Total ram usage:        2 bytes
 15181 ;; Hardware stack levels used:    1
 15182 ;; Hardware stack levels required when called:    4
 15183 ;; This function calls:
 15184 ;;		Nothing
 15185 ;; This function is called by:
 15186 ;;		_TMR0_Initialize
 15187 ;;		_CLOCK_init
 15188 ;; This function uses a non-reentrant model
 15189 ;;
 15190                           
 15191                           
 15192                           ;psect for function _TMR0_SetInterruptHandler
 15193  10DF                     _TMR0_SetInterruptHandler:	
 15194                           
 15195                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 15196                           
 15197                           ;incstack = 0
 15198                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 15199  10DF  0140               	movlb	0	; select bank0
 15200  10E0  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 15201  10E1  0142               	movlb	2	; select bank2
 15202  10E2  00E2               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 15203  10E3  0140               	movlb	0	; select bank0
 15204  10E4  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 15205  10E5  0142               	movlb	2	; select bank2
 15206  10E6  00E1               	movwf	_TMR0_InterruptHandler^(0+256)
 15207  10E7  0008               	return
 15208  10E8                     __end_of_TMR0_SetInterruptHandler:	
 15209                           
 15210                           	psect	text49
 15211  0999                     __ptext49:	
 15212 ;; *************** function _BUTTONS_task *****************
 15213 ;; Defined at:
 15214 ;;		line 34 in file "buttons.c"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;		None
 15217 ;; Auto vars:     Size  Location     Type
 15218 ;;  btn             1    8[BANK0 ] PTR struct .
 15219 ;;		 -> buttons(32), 
 15220 ;;  i               1    5[BANK0 ] unsigned char 
 15221 ;;  time            2    6[BANK0 ] unsigned short 
 15222 ;; Return value:  Size  Location     Type
 15223 ;;                  1    wreg      void 
 15224 ;; Registers used:
 15225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15226 ;; Tracked objects:
 15227 ;;		On entry : 0/0
 15228 ;;		On exit  : 0/0
 15229 ;;		Unchanged: 0/0
 15230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15232 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15233 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15234 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15235 ;;Total ram usage:        7 bytes
 15236 ;; Hardware stack levels used:    1
 15237 ;; Hardware stack levels required when called:    5
 15238 ;; This function calls:
 15239 ;;		_CLOCK_getTime
 15240 ;; This function is called by:
 15241 ;;		_main
 15242 ;; This function uses a non-reentrant model
 15243 ;;
 15244                           
 15245                           
 15246                           ;psect for function _BUTTONS_task
 15247  0999                     _BUTTONS_task:	
 15248                           
 15249                           ;buttons.c: 35:     time_t time = CLOCK_getTime();
 15250                           
 15251                           ;incstack = 0
 15252                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15253  0999  3190  20D6  3189   	fcall	_CLOCK_getTime
 15254  099C  0140               	movlb	0	; select bank0
 15255  099D  0821               	movf	?_CLOCK_getTime+1,w
 15256  099E  00A7               	movwf	BUTTONS_task@time+1
 15257  099F  0820               	movf	?_CLOCK_getTime,w
 15258  09A0  00A6               	movwf	BUTTONS_task@time
 15259                           
 15260                           ;buttons.c: 38:     if (time - lastTime < 50)
 15261  09A1  0142               	movlb	2	; select bank2
 15262  09A2  083F               	movf	_lastTime^(0+256),w
 15263  09A3  0140               	movlb	0	; select bank0
 15264  09A4  0226               	subwf	BUTTONS_task@time,w
 15265  09A5  00A2               	movwf	??_BUTTONS_task
 15266  09A6  0142               	movlb	2	; select bank2
 15267  09A7  0840               	movf	(_lastTime+1)^(0+256),w
 15268  09A8  0140               	movlb	0	; select bank0
 15269  09A9  3B27               	subwfb	BUTTONS_task@time+1,w
 15270  09AA  00A3               	movwf	??_BUTTONS_task+1
 15271  09AB  3000               	movlw	0
 15272  09AC  0223               	subwf	??_BUTTONS_task+1,w
 15273  09AD  3032               	movlw	50
 15274  09AE  1903               	skipnz
 15275  09AF  0222               	subwf	??_BUTTONS_task,w
 15276  09B0  1C03               	btfss	3,0
 15277  09B1  0008               	return
 15278                           
 15279                           ;buttons.c: 41:     lastTime = time;
 15280  09B2  0827               	movf	BUTTONS_task@time+1,w
 15281  09B3  0142               	movlb	2	; select bank2
 15282  09B4  00C0               	movwf	(_lastTime+1)^(0+256)
 15283  09B5  0140               	movlb	0	; select bank0
 15284  09B6  0826               	movf	BUTTONS_task@time,w
 15285  09B7  0142               	movlb	2	; select bank2
 15286  09B8  00BF               	movwf	_lastTime^(0+256)
 15287                           
 15288                           ;buttons.c: 44:     for (uint8_t i = 0; i < 4; i++) {
 15289  09B9  0140               	movlb	0	; select bank0
 15290  09BA  01A5               	clrf	BUTTONS_task@i
 15291  09BB                     l5772:	
 15292                           
 15293                           ;buttons.c: 45:         button_t* btn = buttons + i;
 15294  09BB  0825               	movf	BUTTONS_task@i,w
 15295  09BC  00A2               	movwf	??_BUTTONS_task
 15296  09BD  3002               	movlw	2
 15297  09BE                     u5945:	
 15298  09BE  35A2               	lslf	??_BUTTONS_task,f
 15299  09BF  3EFF               	addlw	-1
 15300  09C0  1D03               	skipz
 15301  09C1  29BE               	goto	u5945
 15302  09C2  3522               	lslf	??_BUTTONS_task,w
 15303  09C3  3EB0               	addlw	(low (_buttons| (0+256)))& (0+255)
 15304  09C4  00A3               	movwf	??_BUTTONS_task+1
 15305  09C5  0823               	movf	??_BUTTONS_task+1,w
 15306  09C6  00A8               	movwf	BUTTONS_task@btn
 15307                           
 15308                           ;buttons.c: 48:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 15309  09C7  0828               	movf	BUTTONS_task@btn,w
 15310  09C8  0086               	movwf	6
 15311  09C9  3001               	movlw	1	; select bank2/3
 15312  09CA  0087               	movwf	7
 15313  09CB  3F40               	moviw [0]fsr1
 15314  09CC  00A2               	movwf	??_BUTTONS_task
 15315  09CD  3F41               	moviw [1]fsr1
 15316  09CE  00A3               	movwf	??_BUTTONS_task+1
 15317  09CF  0822               	movf	??_BUTTONS_task,w
 15318  09D0  0086               	movwf	6
 15319  09D1  0823               	movf	??_BUTTONS_task+1,w
 15320  09D2  0087               	movwf	7
 15321  09D3  3001               	movlw	1
 15322  09D4  00A4               	movwf	??_BUTTONS_task+2
 15323  09D5  0828               	movf	BUTTONS_task@btn,w
 15324  09D6  3E02               	addlw	2
 15325  09D7  0084               	movwf	4
 15326  09D8  3001               	movlw	1	; select bank2/3
 15327  09D9  0085               	movwf	5
 15328  09DA  0A00               	incf	0,w
 15329  09DB  29DD               	goto	u5954
 15330  09DC                     u5955:	
 15331  09DC  35A4               	lslf	??_BUTTONS_task+2,f
 15332  09DD                     u5954:	
 15333  09DD  0B89               	decfsz	9,f
 15334  09DE  29DC               	goto	u5955
 15335  09DF  0824               	movf	??_BUTTONS_task+2,w
 15336  09E0  0501               	andwf	1,w
 15337  09E1  1D03               	btfss	3,2
 15338  09E2  29EB               	goto	l5778
 15339                           
 15340                           ;buttons.c: 49:             btn->state = STATE_PRESSED;
 15341  09E3  0828               	movf	BUTTONS_task@btn,w
 15342  09E4  3E03               	addlw	3
 15343  09E5  0086               	movwf	6
 15344  09E6  3001               	movlw	1	; select bank2/3
 15345  09E7  0087               	movwf	7
 15346  09E8  0181               	clrf	1
 15347  09E9  0A81               	incf	1,f
 15348                           
 15349                           ;buttons.c: 50:         } else {
 15350  09EA  29F1               	goto	l808
 15351  09EB                     l5778:	
 15352                           
 15353                           ;buttons.c: 51:             btn->state = STATE_UNPRESSED;
 15354  09EB  0828               	movf	BUTTONS_task@btn,w
 15355  09EC  3E03               	addlw	3
 15356  09ED  0086               	movwf	6
 15357  09EE  3001               	movlw	1	; select bank2/3
 15358  09EF  0087               	movwf	7
 15359  09F0  0181               	clrf	1
 15360  09F1                     l808:	
 15361                           ;buttons.c: 52:         }
 15362                           
 15363                           
 15364                           ;buttons.c: 54:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
 15365  09F1  0828               	movf	BUTTONS_task@btn,w
 15366  09F2  3E03               	addlw	3
 15367  09F3  0086               	movwf	6
 15368  09F4  3001               	movlw	1	; select bank2/3
 15369  09F5  0087               	movwf	7
 15370  09F6  0301               	decf	1,w
 15371  09F7  1D03               	btfss	3,2
 15372  09F8  2A12               	goto	l5784
 15373  09F9  0828               	movf	BUTTONS_task@btn,w
 15374  09FA  3E04               	addlw	4
 15375  09FB  0086               	movwf	6
 15376  09FC  3001               	movlw	1	; select bank2/3
 15377  09FD  0087               	movwf	7
 15378  09FE  0801               	movf	1,w
 15379  09FF  1D03               	btfss	3,2
 15380  0A00  2A12               	goto	l5784
 15381                           
 15382                           ;buttons.c: 56:             btn->event = EVENT_PRESSED;
 15383  0A01  0828               	movf	BUTTONS_task@btn,w
 15384  0A02  3E05               	addlw	5
 15385  0A03  0086               	movwf	6
 15386  0A04  3001               	movlw	1	; select bank2/3
 15387  0A05  0087               	movwf	7
 15388  0A06  0181               	clrf	1
 15389  0A07  0A81               	incf	1,f
 15390                           
 15391                           ;buttons.c: 57:             btn->pressTime = time;
 15392  0A08  0828               	movf	BUTTONS_task@btn,w
 15393  0A09  3E06               	addlw	6
 15394  0A0A  0086               	movwf	6
 15395  0A0B  3001               	movlw	1	; select bank2/3
 15396  0A0C  0087               	movwf	7
 15397  0A0D  0826               	movf	BUTTONS_task@time,w
 15398  0A0E  3FC0               	movwi [0]fsr1
 15399  0A0F  0827               	movf	BUTTONS_task@time+1,w
 15400  0A10  3FC1               	movwi [1]fsr1
 15401                           
 15402                           ;buttons.c: 58:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 15403  0A11  2A54               	goto	l810
 15404  0A12                     l5784:	
 15405  0A12  0828               	movf	BUTTONS_task@btn,w
 15406  0A13  3E03               	addlw	3
 15407  0A14  0086               	movwf	6
 15408  0A15  3001               	movlw	1	; select bank2/3
 15409  0A16  0087               	movwf	7
 15410  0A17  0301               	decf	1,w
 15411  0A18  1D03               	btfss	3,2
 15412  0A19  2A3E               	goto	l5792
 15413  0A1A  0828               	movf	BUTTONS_task@btn,w
 15414  0A1B  3E04               	addlw	4
 15415  0A1C  0086               	movwf	6
 15416  0A1D  3001               	movlw	1	; select bank2/3
 15417  0A1E  0087               	movwf	7
 15418  0A1F  0301               	decf	1,w
 15419  0A20  1D03               	btfss	3,2
 15420  0A21  2A3E               	goto	l5792
 15421                           
 15422                           ;buttons.c: 60:             if(time - btn->pressTime > 500) {
 15423  0A22  0828               	movf	BUTTONS_task@btn,w
 15424  0A23  3E06               	addlw	6
 15425  0A24  0086               	movwf	6
 15426  0A25  3001               	movlw	1	; select bank2/3
 15427  0A26  0087               	movwf	7
 15428  0A27  3F40               	moviw [0]fsr1
 15429  0A28  0226               	subwf	BUTTONS_task@time,w
 15430  0A29  00A2               	movwf	??_BUTTONS_task
 15431  0A2A  3F41               	moviw [1]fsr1
 15432  0A2B  3B27               	subwfb	BUTTONS_task@time+1,w
 15433  0A2C  00A3               	movwf	??_BUTTONS_task+1
 15434  0A2D  3001               	movlw	1
 15435  0A2E  0223               	subwf	??_BUTTONS_task+1,w
 15436  0A2F  30F5               	movlw	245
 15437  0A30  1903               	skipnz
 15438  0A31  0222               	subwf	??_BUTTONS_task,w
 15439  0A32  1C03               	skipc
 15440  0A33  2A54               	goto	l810
 15441                           
 15442                           ;buttons.c: 61:                 btn->event = EVENT_HELD;
 15443  0A34  3002               	movlw	2
 15444  0A35  00A2               	movwf	??_BUTTONS_task
 15445  0A36  0828               	movf	BUTTONS_task@btn,w
 15446  0A37  3E05               	addlw	5
 15447  0A38  0086               	movwf	6
 15448  0A39  3001               	movlw	1	; select bank2/3
 15449  0A3A  0087               	movwf	7
 15450  0A3B  0822               	movf	??_BUTTONS_task,w
 15451  0A3C  0081               	movwf	1
 15452  0A3D  2A54               	goto	l810
 15453  0A3E                     l5792:	
 15454  0A3E  0828               	movf	BUTTONS_task@btn,w
 15455  0A3F  3E03               	addlw	3
 15456  0A40  0086               	movwf	6
 15457  0A41  3001               	movlw	1	; select bank2/3
 15458  0A42  0087               	movwf	7
 15459  0A43  0801               	movf	1,w
 15460  0A44  1D03               	btfss	3,2
 15461  0A45  2A54               	goto	l810
 15462  0A46  0828               	movf	BUTTONS_task@btn,w
 15463  0A47  3E04               	addlw	4
 15464  0A48  0086               	movwf	6
 15465  0A49  3001               	movlw	1	; select bank2/3
 15466  0A4A  0087               	movwf	7
 15467  0A4B  0301               	decf	1,w
 15468  0A4C  1D03               	btfss	3,2
 15469  0A4D  2A54               	goto	l810
 15470                           
 15471                           ;buttons.c: 64:             btn->event = EVENT_IDLE;
 15472  0A4E  0828               	movf	BUTTONS_task@btn,w
 15473  0A4F  3E05               	addlw	5
 15474  0A50  0086               	movwf	6
 15475  0A51  3001               	movlw	1	; select bank2/3
 15476  0A52  0087               	movwf	7
 15477  0A53  0181               	clrf	1
 15478  0A54                     l810:	
 15479                           
 15480                           ;buttons.c: 67:         btn->lastState = btn->state;
 15481  0A54  0828               	movf	BUTTONS_task@btn,w
 15482  0A55  3E03               	addlw	3
 15483  0A56  0086               	movwf	6
 15484  0A57  3001               	movlw	1	; select bank2/3
 15485  0A58  0087               	movwf	7
 15486  0A59  0801               	movf	1,w
 15487  0A5A  00A2               	movwf	??_BUTTONS_task
 15488  0A5B  0828               	movf	BUTTONS_task@btn,w
 15489  0A5C  3E04               	addlw	4
 15490  0A5D  0086               	movwf	6
 15491  0A5E  3001               	movlw	1	; select bank2/3
 15492  0A5F  0087               	movwf	7
 15493  0A60  0822               	movf	??_BUTTONS_task,w
 15494  0A61  0081               	movwf	1
 15495                           
 15496                           ;buttons.c: 68:     }
 15497  0A62  3001               	movlw	1
 15498  0A63  00A2               	movwf	??_BUTTONS_task
 15499  0A64  0822               	movf	??_BUTTONS_task,w
 15500  0A65  07A5               	addwf	BUTTONS_task@i,f
 15501  0A66  3004               	movlw	4
 15502  0A67  0225               	subwf	BUTTONS_task@i,w
 15503  0A68  1803               	btfsc	3,0
 15504  0A69  0008               	return
 15505  0A6A  29BB               	goto	l5772
 15506  0A6B                     __end_of_BUTTONS_task:	
 15507                           
 15508                           	psect	text50
 15509  15DD                     __ptext50:	
 15510 ;; *************** function _BUTTONS_init *****************
 15511 ;; Defined at:
 15512 ;;		line 21 in file "buttons.c"
 15513 ;; Parameters:    Size  Location     Type
 15514 ;;		None
 15515 ;; Auto vars:     Size  Location     Type
 15516 ;;		None
 15517 ;; Return value:  Size  Location     Type
 15518 ;;                  1    wreg      void 
 15519 ;; Registers used:
 15520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15521 ;; Tracked objects:
 15522 ;;		On entry : 0/0
 15523 ;;		On exit  : 0/0
 15524 ;;		Unchanged: 0/0
 15525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15529 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15530 ;;Total ram usage:        1 bytes
 15531 ;; Hardware stack levels used:    1
 15532 ;; Hardware stack levels required when called:    5
 15533 ;; This function calls:
 15534 ;;		_init
 15535 ;; This function is called by:
 15536 ;;		_main
 15537 ;; This function uses a non-reentrant model
 15538 ;;
 15539                           
 15540                           
 15541                           ;psect for function _BUTTONS_init
 15542  15DD                     _BUTTONS_init:	
 15543                           
 15544                           ;buttons.c: 22:     menu = &buttons[0];
 15545                           
 15546                           ;incstack = 0
 15547                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15548  15DD  30B0               	movlw	(low (_buttons| (0+256)))& (0+255)
 15549  15DE  0140               	movlb	0	; select bank0
 15550  15DF  00A5               	movwf	??_BUTTONS_init
 15551  15E0  0825               	movf	??_BUTTONS_init,w
 15552  15E1  0142               	movlb	2	; select bank2
 15553  15E2  00CB               	movwf	_menu^(0+256)
 15554                           
 15555                           ;buttons.c: 23:     up = &buttons[1];
 15556  15E3  30B8               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 15557  15E4  0140               	movlb	0	; select bank0
 15558  15E5  00A5               	movwf	??_BUTTONS_init
 15559  15E6  0825               	movf	??_BUTTONS_init,w
 15560  15E7  0142               	movlb	2	; select bank2
 15561  15E8  00CE               	movwf	_up^(0+256)
 15562                           
 15563                           ;buttons.c: 24:     down = &buttons[2];
 15564  15E9  30C0               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 15565  15EA  0140               	movlb	0	; select bank0
 15566  15EB  00A5               	movwf	??_BUTTONS_init
 15567  15EC  0825               	movf	??_BUTTONS_init,w
 15568  15ED  0142               	movlb	2	; select bank2
 15569  15EE  00CD               	movwf	_down^(0+256)
 15570                           
 15571                           ;buttons.c: 25:     enter = &buttons[3];
 15572  15EF  30C8               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 15573  15F0  0140               	movlb	0	; select bank0
 15574  15F1  00A5               	movwf	??_BUTTONS_init
 15575  15F2  0825               	movf	??_BUTTONS_init,w
 15576  15F3  0142               	movlb	2	; select bank2
 15577  15F4  00CC               	movwf	_enter^(0+256)
 15578                           
 15579                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 15580  15F5  300E               	movlw	14
 15581  15F6  0140               	movlb	0	; select bank0
 15582  15F7  00A0               	movwf	init@port
 15583  15F8  3000               	movlw	0
 15584  15F9  00A1               	movwf	init@port+1
 15585  15FA  3002               	movlw	2
 15586  15FB  00A5               	movwf	??_BUTTONS_init
 15587  15FC  0825               	movf	??_BUTTONS_init,w
 15588  15FD  00A2               	movwf	init@pin
 15589  15FE  0142               	movlb	2	; select bank2
 15590  15FF  084B               	movf	_menu^(0+256),w
 15591  1600  3192  22B7  3195   	fcall	_init
 15592                           
 15593                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 15594  1603  300C               	movlw	12
 15595  1604  0140               	movlb	0	; select bank0
 15596  1605  00A0               	movwf	init@port
 15597  1606  3000               	movlw	0
 15598  1607  00A1               	movwf	init@port+1
 15599  1608  3002               	movlw	2
 15600  1609  00A5               	movwf	??_BUTTONS_init
 15601  160A  0825               	movf	??_BUTTONS_init,w
 15602  160B  00A2               	movwf	init@pin
 15603  160C  0142               	movlb	2	; select bank2
 15604  160D  084C               	movf	_enter^(0+256),w
 15605  160E  3192  22B7  3195   	fcall	_init
 15606                           
 15607                           ;buttons.c: 29:     init(down, &PORTC, 0);
 15608  1611  300E               	movlw	14
 15609  1612  0140               	movlb	0	; select bank0
 15610  1613  00A0               	movwf	init@port
 15611  1614  3000               	movlw	0
 15612  1615  00A1               	movwf	init@port+1
 15613  1616  01A2               	clrf	init@pin
 15614  1617  0142               	movlb	2	; select bank2
 15615  1618  084D               	movf	_down^(0+256),w
 15616  1619  3192  22B7  3195   	fcall	_init
 15617                           
 15618                           ;buttons.c: 30:     init(up, &PORTC, 1);
 15619  161C  300E               	movlw	14
 15620  161D  0140               	movlb	0	; select bank0
 15621  161E  00A0               	movwf	init@port
 15622  161F  3000               	movlw	0
 15623  1620  00A1               	movwf	init@port+1
 15624  1621  01A2               	clrf	init@pin
 15625  1622  0AA2               	incf	init@pin,f
 15626  1623  0142               	movlb	2	; select bank2
 15627  1624  084E               	movf	_up^(0+256),w
 15628  1625  3192  22B7         	fcall	_init
 15629  1627  0008               	return
 15630  1628                     __end_of_BUTTONS_init:	
 15631                           
 15632                           	psect	text51
 15633  12B7                     __ptext51:	
 15634 ;; *************** function _init *****************
 15635 ;; Defined at:
 15636 ;;		line 14 in file "buttons.c"
 15637 ;; Parameters:    Size  Location     Type
 15638 ;;  btn             1    wreg     PTR struct .
 15639 ;;		 -> buttons(32), NULL(0), 
 15640 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 15641 ;;		 -> PORTA(1), PORTC(1), 
 15642 ;;  pin             1    2[BANK0 ] unsigned char 
 15643 ;; Auto vars:     Size  Location     Type
 15644 ;;  btn             1    4[BANK0 ] PTR struct .
 15645 ;;		 -> buttons(32), NULL(0), 
 15646 ;; Return value:  Size  Location     Type
 15647 ;;                  1    wreg      void 
 15648 ;; Registers used:
 15649 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15650 ;; Tracked objects:
 15651 ;;		On entry : 0/0
 15652 ;;		On exit  : 0/0
 15653 ;;		Unchanged: 0/0
 15654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15655 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15658 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15659 ;;Total ram usage:        5 bytes
 15660 ;; Hardware stack levels used:    1
 15661 ;; Hardware stack levels required when called:    4
 15662 ;; This function calls:
 15663 ;;		Nothing
 15664 ;; This function is called by:
 15665 ;;		_BUTTONS_init
 15666 ;; This function uses a non-reentrant model
 15667 ;;
 15668                           
 15669                           
 15670                           ;psect for function _init
 15671  12B7                     _init:	
 15672                           
 15673                           ;incstack = 0
 15674                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 15675                           ;init@btn stored from wreg
 15676  12B7  0140               	movlb	0	; select bank0
 15677  12B8  00A4               	movwf	init@btn
 15678                           
 15679                           ;buttons.c: 15:     btn->port = port;
 15680  12B9  0824               	movf	init@btn,w
 15681  12BA  0086               	movwf	6
 15682  12BB  3001               	movlw	1	; select bank2/3
 15683  12BC  0087               	movwf	7
 15684  12BD  0820               	movf	init@port,w
 15685  12BE  3FC0               	movwi [0]fsr1
 15686  12BF  0821               	movf	init@port+1,w
 15687  12C0  3FC1               	movwi [1]fsr1
 15688                           
 15689                           ;buttons.c: 16:     btn->pin = pin;
 15690  12C1  0822               	movf	init@pin,w
 15691  12C2  00A3               	movwf	??_init
 15692  12C3  0824               	movf	init@btn,w
 15693  12C4  3E02               	addlw	2
 15694  12C5  0086               	movwf	6
 15695  12C6  3001               	movlw	1	; select bank2/3
 15696  12C7  0087               	movwf	7
 15697  12C8  0823               	movf	??_init,w
 15698  12C9  0081               	movwf	1
 15699                           
 15700                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 15701  12CA  0824               	movf	init@btn,w
 15702  12CB  3E03               	addlw	3
 15703  12CC  0086               	movwf	6
 15704  12CD  3001               	movlw	1	; select bank2/3
 15705  12CE  0087               	movwf	7
 15706  12CF  0181               	clrf	1
 15707                           
 15708                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 15709  12D0  0824               	movf	init@btn,w
 15710  12D1  3E05               	addlw	5
 15711  12D2  0086               	movwf	6
 15712  12D3  3001               	movlw	1	; select bank2/3
 15713  12D4  0087               	movwf	7
 15714  12D5  0181               	clrf	1
 15715  12D6  0008               	return
 15716  12D7                     __end_of_init:	
 15717                           
 15718                           	psect	text52
 15719  0A6B                     __ptext52:	
 15720 ;; *************** function _BEAT_task *****************
 15721 ;; Defined at:
 15722 ;;		line 57 in file "beat.c"
 15723 ;; Parameters:    Size  Location     Type
 15724 ;;		None
 15725 ;; Auto vars:     Size  Location     Type
 15726 ;;  offset          2   10[BANK0 ] unsigned short 
 15727 ;; Return value:  Size  Location     Type
 15728 ;;                  1    wreg      void 
 15729 ;; Registers used:
 15730 ;;		wreg, status,2, status,0, pclath, cstack
 15731 ;; Tracked objects:
 15732 ;;		On entry : 0/0
 15733 ;;		On exit  : 0/0
 15734 ;;		Unchanged: 0/0
 15735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15739 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15740 ;;Total ram usage:        4 bytes
 15741 ;; Hardware stack levels used:    1
 15742 ;; Hardware stack levels required when called:    5
 15743 ;; This function calls:
 15744 ;;		_ADCC_SetUpperThreshold
 15745 ;;		_CLOCK_getTime
 15746 ;;		_TM1650_isEnabled
 15747 ;;		___lwdiv
 15748 ;; This function is called by:
 15749 ;;		_main
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           
 15754                           ;psect for function _BEAT_task
 15755  0A6B                     _BEAT_task:	
 15756                           
 15757                           ;beat.c: 59:     if (TM1650_isEnabled())
 15758                           
 15759                           ;incstack = 0
 15760                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 15761  0A6B  3190  2088  318A   	fcall	_TM1650_isEnabled
 15762  0A6E  3A00               	xorlw	0
 15763  0A6F  1D03               	btfss	3,2
 15764  0A70  0008               	return
 15765                           
 15766                           ;beat.c: 62:     if (CLOCK_getTime() - lastRun < delay)
 15767  0A71  3190  20D6  318A   	fcall	_CLOCK_getTime
 15768  0A74  0142               	movlb	2	; select bank2
 15769  0A75  0835               	movf	_lastRun^(0+256),w
 15770  0A76  0140               	movlb	0	; select bank0
 15771  0A77  0220               	subwf	?_CLOCK_getTime,w
 15772  0A78  00A8               	movwf	??_BEAT_task
 15773  0A79  0142               	movlb	2	; select bank2
 15774  0A7A  0836               	movf	(_lastRun+1)^(0+256),w
 15775  0A7B  0140               	movlb	0	; select bank0
 15776  0A7C  3B21               	subwfb	?_CLOCK_getTime+1,w
 15777  0A7D  00A9               	movwf	??_BEAT_task+1
 15778  0A7E  0142               	movlb	2	; select bank2
 15779  0A7F  086D               	movf	(_delay+1)^(0+256),w
 15780  0A80  0140               	movlb	0	; select bank0
 15781  0A81  0229               	subwf	??_BEAT_task+1,w
 15782  0A82  1D03               	skipz
 15783  0A83  2A88               	goto	u5835
 15784  0A84  0142               	movlb	2	; select bank2
 15785  0A85  086C               	movf	_delay^(0+256),w
 15786  0A86  0140               	movlb	0	; select bank0
 15787  0A87  0228               	subwf	??_BEAT_task,w
 15788  0A88                     u5835:	
 15789  0A88  1C03               	btfss	3,0
 15790  0A89  0008               	return
 15791                           
 15792                           ;beat.c: 65:     lastRun = CLOCK_getTime();
 15793  0A8A  3190  20D6  318A   	fcall	_CLOCK_getTime
 15794  0A8D  0140               	movlb	0	; select bank0
 15795  0A8E  0821               	movf	?_CLOCK_getTime+1,w
 15796  0A8F  0142               	movlb	2	; select bank2
 15797  0A90  00B6               	movwf	(_lastRun+1)^(0+256)
 15798  0A91  0140               	movlb	0	; select bank0
 15799  0A92  0820               	movf	?_CLOCK_getTime,w
 15800  0A93  0142               	movlb	2	; select bank2
 15801  0A94  00B5               	movwf	_lastRun^(0+256)
 15802                           
 15803                           ;beat.c: 67:     if (thresholdExceeded == 1) {
 15804  0A95  0141               	movlb	1	; select bank1
 15805  0A96  0369               	decf	_thresholdExceeded^(0+128),w
 15806  0A97  1D03               	btfss	3,2
 15807  0A98  2A9F               	goto	l5704
 15808                           
 15809                           ;beat.c: 71:         thresholdCount++;
 15810  0A99  3001               	movlw	1
 15811  0A9A  0142               	movlb	2	; select bank2
 15812  0A9B  07B3               	addwf	_thresholdCount^(0+256),f
 15813  0A9C  3000               	movlw	0
 15814  0A9D  3DB4               	addwfc	(_thresholdCount+1)^(0+256),f
 15815                           
 15816                           ;beat.c: 72:     } else {
 15817  0A9E  2AA6               	goto	l5708
 15818  0A9F                     l5704:	
 15819                           
 15820                           ;beat.c: 74:         thresholdCount = 0;
 15821  0A9F  0142               	movlb	2	; select bank2
 15822  0AA0  01B3               	clrf	_thresholdCount^(0+256)
 15823  0AA1  01B4               	clrf	(_thresholdCount+1)^(0+256)
 15824                           
 15825                           ;beat.c: 75:         delay = 20;
 15826  0AA2  3014               	movlw	20
 15827  0AA3  00EC               	movwf	_delay^(0+256)
 15828  0AA4  3000               	movlw	0
 15829  0AA5  00ED               	movwf	(_delay^(0+256)+1)
 15830  0AA6                     l5708:	
 15831                           
 15832                           ;beat.c: 81:     if (thresholdExceeded == 1 && lastDetected == 0) {
 15833  0AA6  0141               	movlb	1	; select bank1
 15834  0AA7  0369               	decf	_thresholdExceeded^(0+128),w
 15835  0AA8  1D03               	btfss	3,2
 15836  0AA9  2AED               	goto	l5726
 15837  0AAA  0142               	movlb	2	; select bank2
 15838  0AAB  0849               	movf	_lastDetected^(0+256),w
 15839  0AAC  1D03               	btfss	3,2
 15840  0AAD  2AED               	goto	l5726
 15841                           
 15842                           ;beat.c: 83:         detected = 1;
 15843  0AAE  01CA               	clrf	_detected^(0+256)
 15844  0AAF  0ACA               	incf	_detected^(0+256),f
 15845                           
 15846                           ;beat.c: 86:         delay = 100;
 15847  0AB0  3064               	movlw	100
 15848  0AB1  00EC               	movwf	_delay^(0+256)
 15849  0AB2  3000               	movlw	0
 15850  0AB3  00ED               	movwf	(_delay^(0+256)+1)
 15851                           
 15852                           ;beat.c: 89:         time_t offset = CLOCK_getTime() - lastBeat;
 15853  0AB4  3190  20D6  318A   	fcall	_CLOCK_getTime
 15854  0AB7  0142               	movlb	2	; select bank2
 15855  0AB8  0839               	movf	_lastBeat^(0+256),w
 15856  0AB9  0140               	movlb	0	; select bank0
 15857  0ABA  0220               	subwf	?_CLOCK_getTime,w
 15858  0ABB  00AA               	movwf	BEAT_task@offset
 15859  0ABC  0142               	movlb	2	; select bank2
 15860  0ABD  083A               	movf	(_lastBeat+1)^(0+256),w
 15861  0ABE  0140               	movlb	0	; select bank0
 15862  0ABF  3B21               	subwfb	?_CLOCK_getTime+1,w
 15863  0AC0  00AB               	movwf	BEAT_task@offset+1
 15864                           
 15865                           ;beat.c: 91:         lastBeat = CLOCK_getTime();
 15866  0AC1  3190  20D6  318A   	fcall	_CLOCK_getTime
 15867  0AC4  0140               	movlb	0	; select bank0
 15868  0AC5  0821               	movf	?_CLOCK_getTime+1,w
 15869  0AC6  0142               	movlb	2	; select bank2
 15870  0AC7  00BA               	movwf	(_lastBeat+1)^(0+256)
 15871  0AC8  0140               	movlb	0	; select bank0
 15872  0AC9  0820               	movf	?_CLOCK_getTime,w
 15873  0ACA  0142               	movlb	2	; select bank2
 15874  0ACB  00B9               	movwf	_lastBeat^(0+256)
 15875                           
 15876                           ;beat.c: 93:         if (offset < 150)
 15877  0ACC  3000               	movlw	0
 15878  0ACD  0140               	movlb	0	; select bank0
 15879  0ACE  022B               	subwf	BEAT_task@offset+1,w
 15880  0ACF  3096               	movlw	150
 15881  0AD0  1903               	skipnz
 15882  0AD1  022A               	subwf	BEAT_task@offset,w
 15883  0AD2  1803               	skipnc
 15884  0AD3  2ADA               	goto	l5724
 15885                           
 15886                           ;beat.c: 94:             bpm = 400;
 15887  0AD4  3090               	movlw	144
 15888  0AD5  0142               	movlb	2	; select bank2
 15889  0AD6  00B7               	movwf	_bpm^(0+256)
 15890  0AD7  3001               	movlw	1
 15891  0AD8  00B8               	movwf	(_bpm^(0+256)+1)
 15892  0AD9  2AED               	goto	l5726
 15893  0ADA                     l5724:	
 15894                           
 15895                           ;beat.c: 96:             bpm = 60 * 1000 / offset;
 15896  0ADA  082B               	movf	BEAT_task@offset+1,w
 15897  0ADB  00A1               	movwf	___lwdiv@divisor+1
 15898  0ADC  082A               	movf	BEAT_task@offset,w
 15899  0ADD  00A0               	movwf	___lwdiv@divisor
 15900  0ADE  3060               	movlw	96
 15901  0ADF  00A2               	movwf	___lwdiv@dividend
 15902  0AE0  30EA               	movlw	234
 15903  0AE1  00A3               	movwf	___lwdiv@dividend+1
 15904  0AE2  3194  2466  318A   	fcall	___lwdiv
 15905  0AE5  0140               	movlb	0	; select bank0
 15906  0AE6  0821               	movf	?___lwdiv+1,w
 15907  0AE7  0142               	movlb	2	; select bank2
 15908  0AE8  00B8               	movwf	(_bpm+1)^(0+256)
 15909  0AE9  0140               	movlb	0	; select bank0
 15910  0AEA  0820               	movf	?___lwdiv,w
 15911  0AEB  0142               	movlb	2	; select bank2
 15912  0AEC  00B7               	movwf	_bpm^(0+256)
 15913  0AED                     l5726:	
 15914                           
 15915                           ;beat.c: 102:     lastDetected = thresholdExceeded;
 15916  0AED  0141               	movlb	1	; select bank1
 15917  0AEE  0869               	movf	_thresholdExceeded^(0+128),w
 15918  0AEF  0140               	movlb	0	; select bank0
 15919  0AF0  00A8               	movwf	??_BEAT_task
 15920  0AF1  0828               	movf	??_BEAT_task,w
 15921  0AF2  0142               	movlb	2	; select bank2
 15922  0AF3  00C9               	movwf	_lastDetected^(0+256)
 15923                           
 15924                           ;beat.c: 103:     thresholdExceeded = 0;
 15925  0AF4  0141               	movlb	1	; select bank1
 15926  0AF5  01E9               	clrf	_thresholdExceeded^(0+128)
 15927                           
 15928                           ;beat.c: 105:     if (thresholdCount > 3) {
 15929  0AF6  0142               	movlb	2	; select bank2
 15930  0AF7  0834               	movf	(_thresholdCount+1)^(0+256),w
 15931  0AF8  3A80               	xorlw	128
 15932  0AF9  0140               	movlb	0	; select bank0
 15933  0AFA  00A8               	movwf	??_BEAT_task
 15934  0AFB  3080               	movlw	128
 15935  0AFC  0228               	subwf	??_BEAT_task,w
 15936  0AFD  1D03               	skipz
 15937  0AFE  2B02               	goto	u5885
 15938  0AFF  3004               	movlw	4
 15939  0B00  0142               	movlb	2	; select bank2
 15940  0B01  0233               	subwf	_thresholdCount^(0+256),w
 15941  0B02                     u5885:	
 15942  0B02  1C03               	skipc
 15943  0B03  2B21               	goto	l5740
 15944                           
 15945                           ;beat.c: 106:         threshold += 1;
 15946  0B04  3001               	movlw	1
 15947  0B05  0142               	movlb	2	; select bank2
 15948  0B06  07EE               	addwf	_threshold^(0+256),f
 15949  0B07  3000               	movlw	0
 15950  0B08  3DEF               	addwfc	(_threshold+1)^(0+256),f
 15951                           
 15952                           ;beat.c: 107:         ADCC_SetUpperThreshold(threshold);
 15953  0B09  086F               	movf	(_threshold+1)^(0+256),w
 15954  0B0A  0140               	movlb	0	; select bank0
 15955  0B0B  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 15956  0B0C  0142               	movlb	2	; select bank2
 15957  0B0D  086E               	movf	_threshold^(0+256),w
 15958  0B0E  0140               	movlb	0	; select bank0
 15959  0B0F  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 15960  0B10  3190  20C4  318A   	fcall	_ADCC_SetUpperThreshold
 15961                           
 15962                           ;beat.c: 108:         thresholdCount = 0;
 15963  0B13  0142               	movlb	2	; select bank2
 15964  0B14  01B3               	clrf	_thresholdCount^(0+256)
 15965  0B15  01B4               	clrf	(_thresholdCount+1)^(0+256)
 15966                           
 15967                           ;beat.c: 111:         lastBeat = CLOCK_getTime();
 15968  0B16  3190  20D6         	fcall	_CLOCK_getTime
 15969  0B18  0140               	movlb	0	; select bank0
 15970  0B19  0821               	movf	?_CLOCK_getTime+1,w
 15971  0B1A  0142               	movlb	2	; select bank2
 15972  0B1B  00BA               	movwf	(_lastBeat+1)^(0+256)
 15973  0B1C  0140               	movlb	0	; select bank0
 15974  0B1D  0820               	movf	?_CLOCK_getTime,w
 15975  0B1E  0142               	movlb	2	; select bank2
 15976  0B1F  00B9               	movwf	_lastBeat^(0+256)
 15977                           
 15978                           ;beat.c: 112:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 15979  0B20  0008               	return
 15980  0B21                     l5740:	
 15981  0B21  3190  20D6  318A   	fcall	_CLOCK_getTime
 15982  0B24  0142               	movlb	2	; select bank2
 15983  0B25  0839               	movf	_lastBeat^(0+256),w
 15984  0B26  0140               	movlb	0	; select bank0
 15985  0B27  0220               	subwf	?_CLOCK_getTime,w
 15986  0B28  00A8               	movwf	??_BEAT_task
 15987  0B29  0142               	movlb	2	; select bank2
 15988  0B2A  083A               	movf	(_lastBeat+1)^(0+256),w
 15989  0B2B  0140               	movlb	0	; select bank0
 15990  0B2C  3B21               	subwfb	?_CLOCK_getTime+1,w
 15991  0B2D  00A9               	movwf	??_BEAT_task+1
 15992  0B2E  3003               	movlw	3
 15993  0B2F  0229               	subwf	??_BEAT_task+1,w
 15994  0B30  30E9               	movlw	233
 15995  0B31  1903               	skipnz
 15996  0B32  0228               	subwf	??_BEAT_task,w
 15997  0B33  1C03               	skipc
 15998  0B34  0008               	return
 15999                           
 16000                           ;beat.c: 113:         threshold -= 1;
 16001  0B35  3001               	movlw	1
 16002  0B36  0142               	movlb	2	; select bank2
 16003  0B37  02EE               	subwf	_threshold^(0+256),f
 16004  0B38  3000               	movlw	0
 16005  0B39  3BEF               	subwfb	(_threshold+1)^(0+256),f
 16006                           
 16007                           ;beat.c: 114:         ADCC_SetUpperThreshold(threshold);
 16008  0B3A  086F               	movf	(_threshold+1)^(0+256),w
 16009  0B3B  0140               	movlb	0	; select bank0
 16010  0B3C  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16011  0B3D  0142               	movlb	2	; select bank2
 16012  0B3E  086E               	movf	_threshold^(0+256),w
 16013  0B3F  0140               	movlb	0	; select bank0
 16014  0B40  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16015  0B41  3190  20C4         	fcall	_ADCC_SetUpperThreshold
 16016  0B43  0008               	return
 16017  0B44                     __end_of_BEAT_task:	
 16018                           
 16019                           	psect	text53
 16020  1466                     __ptext53:	
 16021 ;; *************** function ___lwdiv *****************
 16022 ;; Defined at:
 16023 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 16024 ;; Parameters:    Size  Location     Type
 16025 ;;  divisor         2    0[BANK0 ] unsigned int 
 16026 ;;  dividend        2    2[BANK0 ] unsigned int 
 16027 ;; Auto vars:     Size  Location     Type
 16028 ;;  quotient        2    6[BANK0 ] unsigned int 
 16029 ;;  counter         1    5[BANK0 ] unsigned char 
 16030 ;; Return value:  Size  Location     Type
 16031 ;;                  2    0[BANK0 ] unsigned int 
 16032 ;; Registers used:
 16033 ;;		wreg, status,2, status,0
 16034 ;; Tracked objects:
 16035 ;;		On entry : 0/0
 16036 ;;		On exit  : 0/0
 16037 ;;		Unchanged: 0/0
 16038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16040 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16042 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16043 ;;Total ram usage:        8 bytes
 16044 ;; Hardware stack levels used:    1
 16045 ;; Hardware stack levels required when called:    4
 16046 ;; This function calls:
 16047 ;;		Nothing
 16048 ;; This function is called by:
 16049 ;;		_TM1650_fastPrintNum
 16050 ;;		_BEAT_task
 16051 ;; This function uses a non-reentrant model
 16052 ;;
 16053                           
 16054                           
 16055                           ;psect for function ___lwdiv
 16056  1466                     ___lwdiv:	
 16057                           
 16058                           ;incstack = 0
 16059                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16060  1466  0140               	movlb	0	; select bank0
 16061  1467  01A6               	clrf	___lwdiv@quotient
 16062  1468  01A7               	clrf	___lwdiv@quotient+1
 16063  1469  0820               	movf	___lwdiv@divisor,w
 16064  146A  0421               	iorwf	___lwdiv@divisor+1,w
 16065  146B  1903               	btfsc	3,2
 16066  146C  2C96               	goto	l5312
 16067  146D  01A5               	clrf	___lwdiv@counter
 16068  146E  0AA5               	incf	___lwdiv@counter,f
 16069  146F                     l5300:	
 16070  146F  1BA1               	btfsc	___lwdiv@divisor+1,7
 16071  1470  2C7B               	goto	l5302
 16072  1471  3001               	movlw	1
 16073  1472                     u5565:	
 16074  1472  35A0               	lslf	___lwdiv@divisor,f
 16075  1473  0DA1               	rlf	___lwdiv@divisor+1,f
 16076  1474  0B89               	decfsz	9,f
 16077  1475  2C72               	goto	u5565
 16078  1476  3001               	movlw	1
 16079  1477  00A4               	movwf	??___lwdiv
 16080  1478  0824               	movf	??___lwdiv,w
 16081  1479  07A5               	addwf	___lwdiv@counter,f
 16082  147A  2C6F               	goto	l5300
 16083  147B                     l5302:	
 16084  147B  3001               	movlw	1
 16085  147C                     u5585:	
 16086  147C  35A6               	lslf	___lwdiv@quotient,f
 16087  147D  0DA7               	rlf	___lwdiv@quotient+1,f
 16088  147E  0B89               	decfsz	9,f
 16089  147F  2C7C               	goto	u5585
 16090  1480  0821               	movf	___lwdiv@divisor+1,w
 16091  1481  0223               	subwf	___lwdiv@dividend+1,w
 16092  1482  1D03               	skipz
 16093  1483  2C86               	goto	u5595
 16094  1484  0820               	movf	___lwdiv@divisor,w
 16095  1485  0222               	subwf	___lwdiv@dividend,w
 16096  1486                     u5595:	
 16097  1486  1C03               	skipc
 16098  1487  2C8D               	goto	l5308
 16099  1488  0820               	movf	___lwdiv@divisor,w
 16100  1489  02A2               	subwf	___lwdiv@dividend,f
 16101  148A  0821               	movf	___lwdiv@divisor+1,w
 16102  148B  3BA3               	subwfb	___lwdiv@dividend+1,f
 16103  148C  1426               	bsf	___lwdiv@quotient,0
 16104  148D                     l5308:	
 16105  148D  3001               	movlw	1
 16106  148E                     u5605:	
 16107  148E  36A1               	lsrf	___lwdiv@divisor+1,f
 16108  148F  0CA0               	rrf	___lwdiv@divisor,f
 16109  1490  0B89               	decfsz	9,f
 16110  1491  2C8E               	goto	u5605
 16111  1492  3001               	movlw	1
 16112  1493  02A5               	subwf	___lwdiv@counter,f
 16113  1494  1D03               	btfss	3,2
 16114  1495  2C7B               	goto	l5302
 16115  1496                     l5312:	
 16116  1496  0827               	movf	___lwdiv@quotient+1,w
 16117  1497  00A1               	movwf	?___lwdiv+1
 16118  1498  0826               	movf	___lwdiv@quotient,w
 16119  1499  00A0               	movwf	?___lwdiv
 16120  149A  0008               	return
 16121  149B                     __end_of___lwdiv:	
 16122                           
 16123                           	psect	text54
 16124  1088                     __ptext54:	
 16125 ;; *************** function _TM1650_isEnabled *****************
 16126 ;; Defined at:
 16127 ;;		line 70 in file "tm1650.c"
 16128 ;; Parameters:    Size  Location     Type
 16129 ;;		None
 16130 ;; Auto vars:     Size  Location     Type
 16131 ;;		None
 16132 ;; Return value:  Size  Location     Type
 16133 ;;                  1    wreg      _Bool 
 16134 ;; Registers used:
 16135 ;;		wreg
 16136 ;; Tracked objects:
 16137 ;;		On entry : 0/0
 16138 ;;		On exit  : 0/0
 16139 ;;		Unchanged: 0/0
 16140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16145 ;;Total ram usage:        0 bytes
 16146 ;; Hardware stack levels used:    1
 16147 ;; Hardware stack levels required when called:    4
 16148 ;; This function calls:
 16149 ;;		Nothing
 16150 ;; This function is called by:
 16151 ;;		_BEAT_task
 16152 ;; This function uses a non-reentrant model
 16153 ;;
 16154                           
 16155                           
 16156                           ;psect for function _TM1650_isEnabled
 16157  1088                     _TM1650_isEnabled:	
 16158                           
 16159                           ;tm1650.c: 71:     return isOn;
 16160                           
 16161                           ;incstack = 0
 16162                           ; Regs used in _TM1650_isEnabled: [wreg]
 16163  1088  0142               	movlb	2	; select bank2
 16164  1089  084F               	movf	_isOn^(0+256),w
 16165  108A  0008               	return
 16166  108B                     __end_of_TM1650_isEnabled:	
 16167                           
 16168                           	psect	text55
 16169  10D6                     __ptext55:	
 16170 ;; *************** function _CLOCK_getTime *****************
 16171 ;; Defined at:
 16172 ;;		line 17 in file "clock.c"
 16173 ;; Parameters:    Size  Location     Type
 16174 ;;		None
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;		None
 16177 ;; Return value:  Size  Location     Type
 16178 ;;                  2    0[BANK0 ] unsigned short 
 16179 ;; Registers used:
 16180 ;;		wreg
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/0
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16189 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16190 ;;Total ram usage:        2 bytes
 16191 ;; Hardware stack levels used:    1
 16192 ;; Hardware stack levels required when called:    4
 16193 ;; This function calls:
 16194 ;;		Nothing
 16195 ;; This function is called by:
 16196 ;;		_BUTTONS_task
 16197 ;;		_CONTROLLER_task
 16198 ;;		_BEAT_task
 16199 ;;		_DMX_task
 16200 ;;		_fadeColor
 16201 ;; This function uses a non-reentrant model
 16202 ;;
 16203                           
 16204                           
 16205                           ;psect for function _CLOCK_getTime
 16206  10D6                     _CLOCK_getTime:	
 16207                           
 16208                           ;clock.c: 18:     return currentTime;
 16209                           
 16210                           ;incstack = 0
 16211                           ; Regs used in _CLOCK_getTime: [wreg]
 16212  10D6  0142               	movlb	2	; select bank2
 16213  10D7  0844               	movf	(_currentTime+1)^(0+256),w
 16214  10D8  0140               	movlb	0	; select bank0
 16215  10D9  00A1               	movwf	?_CLOCK_getTime+1
 16216  10DA  0142               	movlb	2	; select bank2
 16217  10DB  0843               	movf	_currentTime^(0+256),w
 16218  10DC  0140               	movlb	0	; select bank0
 16219  10DD  00A0               	movwf	?_CLOCK_getTime
 16220  10DE  0008               	return
 16221  10DF                     __end_of_CLOCK_getTime:	
 16222                           
 16223                           	psect	text56
 16224  11DA                     __ptext56:	
 16225 ;; *************** function _BEAT_init *****************
 16226 ;; Defined at:
 16227 ;;		line 31 in file "beat.c"
 16228 ;; Parameters:    Size  Location     Type
 16229 ;;		None
 16230 ;; Auto vars:     Size  Location     Type
 16231 ;;		None
 16232 ;; Return value:  Size  Location     Type
 16233 ;;                  1    wreg      void 
 16234 ;; Registers used:
 16235 ;;		wreg, status,2, status,0, pclath, cstack
 16236 ;; Tracked objects:
 16237 ;;		On entry : 0/0
 16238 ;;		On exit  : 0/0
 16239 ;;		Unchanged: 0/0
 16240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16245 ;;Total ram usage:        0 bytes
 16246 ;; Hardware stack levels used:    1
 16247 ;; Hardware stack levels required when called:    5
 16248 ;; This function calls:
 16249 ;;		_ADCC_SetADTIInterruptHandler
 16250 ;;		_ADCC_SetUpperThreshold
 16251 ;;		_ADCC_StartConversion
 16252 ;; This function is called by:
 16253 ;;		_main
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           
 16258                           ;psect for function _BEAT_init
 16259  11DA                     _BEAT_init:	
 16260                           
 16261                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 16262                           
 16263                           ;incstack = 0
 16264                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 16265  11DA  0142               	movlb	2	; select bank2
 16266  11DB  086F               	movf	(_threshold+1)^(0+256),w
 16267  11DC  0140               	movlb	0	; select bank0
 16268  11DD  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16269  11DE  0142               	movlb	2	; select bank2
 16270  11DF  086E               	movf	_threshold^(0+256),w
 16271  11E0  0140               	movlb	0	; select bank0
 16272  11E1  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16273  11E2  3190  20C4  3191   	fcall	_ADCC_SetUpperThreshold
 16274                           
 16275                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 16276  11E5  308E               	movlw	low _adcThresholdHandler
 16277  11E6  0140               	movlb	0	; select bank0
 16278  11E7  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 16279  11E8  3010               	movlw	high _adcThresholdHandler
 16280  11E9  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 16281  11EA  3190  20BB  3191   	fcall	_ADCC_SetADTIInterruptHandler
 16282                           
 16283                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 16284  11ED  300F               	movlw	15
 16285  11EE  3190  20CD         	fcall	_ADCC_StartConversion
 16286  11F0  0008               	return
 16287  11F1                     __end_of_BEAT_init:	
 16288                           
 16289                           	psect	text57
 16290  10CD                     __ptext57:	
 16291 ;; *************** function _ADCC_StartConversion *****************
 16292 ;; Defined at:
 16293 ;;		line 121 in file "mcc_generated_files/adcc.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;  channel         1    wreg     enum E10867
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;  channel         1    0[BANK0 ] enum E10867
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  1    wreg      void 
 16300 ;; Registers used:
 16301 ;;		wreg
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16311 ;;Total ram usage:        1 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; Hardware stack levels required when called:    4
 16314 ;; This function calls:
 16315 ;;		Nothing
 16316 ;; This function is called by:
 16317 ;;		_BEAT_init
 16318 ;; This function uses a non-reentrant model
 16319 ;;
 16320                           
 16321                           
 16322                           ;psect for function _ADCC_StartConversion
 16323  10CD                     _ADCC_StartConversion:	
 16324                           
 16325                           ;incstack = 0
 16326                           ; Regs used in _ADCC_StartConversion: [wreg]
 16327                           ;ADCC_StartConversion@channel stored from wreg
 16328  10CD  0140               	movlb	0	; select bank0
 16329  10CE  00A0               	movwf	ADCC_StartConversion@channel
 16330                           
 16331                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 16332  10CF  0820               	movf	ADCC_StartConversion@channel,w
 16333  10D0  0141               	movlb	1	; select bank1
 16334  10D1  009F               	movwf	31	;volatile
 16335                           
 16336                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 16337  10D2  0142               	movlb	2	; select bank2
 16338  10D3  1791               	bsf	17,7	;volatile
 16339                           
 16340                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 16341  10D4  1411               	bsf	17,0	;volatile
 16342  10D5  0008               	return
 16343  10D6                     __end_of_ADCC_StartConversion:	
 16344                           
 16345                           	psect	text58
 16346  10C4                     __ptext58:	
 16347 ;; *************** function _ADCC_SetUpperThreshold *****************
 16348 ;; Defined at:
 16349 ;;		line 251 in file "mcc_generated_files/adcc.c"
 16350 ;; Parameters:    Size  Location     Type
 16351 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 16352 ;; Auto vars:     Size  Location     Type
 16353 ;;		None
 16354 ;; Return value:  Size  Location     Type
 16355 ;;                  1    wreg      void 
 16356 ;; Registers used:
 16357 ;;		wreg, status,2
 16358 ;; Tracked objects:
 16359 ;;		On entry : 0/0
 16360 ;;		On exit  : 0/0
 16361 ;;		Unchanged: 0/0
 16362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16363 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16366 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16367 ;;Total ram usage:        2 bytes
 16368 ;; Hardware stack levels used:    1
 16369 ;; Hardware stack levels required when called:    4
 16370 ;; This function calls:
 16371 ;;		Nothing
 16372 ;; This function is called by:
 16373 ;;		_BEAT_init
 16374 ;;		_BEAT_task
 16375 ;; This function uses a non-reentrant model
 16376 ;;
 16377                           
 16378                           
 16379                           ;psect for function _ADCC_SetUpperThreshold
 16380  10C4                     _ADCC_SetUpperThreshold:	
 16381                           
 16382                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 16383                           
 16384                           ;incstack = 0
 16385                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 16386  10C4  0140               	movlb	0	; select bank0
 16387  10C5  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 16388  10C6  0141               	movlb	1	; select bank1
 16389  10C7  008F               	movwf	15	;volatile
 16390                           
 16391                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 16392  10C8  0140               	movlb	0	; select bank0
 16393  10C9  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 16394  10CA  0141               	movlb	1	; select bank1
 16395  10CB  008E               	movwf	14	;volatile
 16396  10CC  0008               	return
 16397  10CD                     __end_of_ADCC_SetUpperThreshold:	
 16398                           
 16399                           	psect	text59
 16400  10BB                     __ptext59:	
 16401 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 16402 ;; Defined at:
 16403 ;;		line 317 in file "mcc_generated_files/adcc.c"
 16404 ;; Parameters:    Size  Location     Type
 16405 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16406 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 16407 ;; Auto vars:     Size  Location     Type
 16408 ;;		None
 16409 ;; Return value:  Size  Location     Type
 16410 ;;                  1    wreg      void 
 16411 ;; Registers used:
 16412 ;;		wreg
 16413 ;; Tracked objects:
 16414 ;;		On entry : 0/0
 16415 ;;		On exit  : 0/0
 16416 ;;		Unchanged: 0/0
 16417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16422 ;;Total ram usage:        2 bytes
 16423 ;; Hardware stack levels used:    1
 16424 ;; Hardware stack levels required when called:    4
 16425 ;; This function calls:
 16426 ;;		Nothing
 16427 ;; This function is called by:
 16428 ;;		_ADCC_Initialize
 16429 ;;		_BEAT_init
 16430 ;; This function uses a non-reentrant model
 16431 ;;
 16432                           
 16433                           
 16434                           ;psect for function _ADCC_SetADTIInterruptHandler
 16435  10BB                     _ADCC_SetADTIInterruptHandler:	
 16436                           
 16437                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 16438                           
 16439                           ;incstack = 0
 16440                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 16441  10BB  0140               	movlb	0	; select bank0
 16442  10BC  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 16443  10BD  0142               	movlb	2	; select bank2
 16444  10BE  00E0               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 16445  10BF  0140               	movlb	0	; select bank0
 16446  10C0  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 16447  10C1  0142               	movlb	2	; select bank2
 16448  10C2  00DF               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 16449  10C3  0008               	return
 16450  10C4                     __end_of_ADCC_SetADTIInterruptHandler:	
 16451                           
 16452                           	psect	intentry
 16453  0004                     __pintentry:	
 16454 ;; *************** function _INTERRUPT_InterruptManager *****************
 16455 ;; Defined at:
 16456 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16457 ;; Parameters:    Size  Location     Type
 16458 ;;		None
 16459 ;; Auto vars:     Size  Location     Type
 16460 ;;		None
 16461 ;; Return value:  Size  Location     Type
 16462 ;;                  1    wreg      void 
 16463 ;; Registers used:
 16464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16465 ;; Tracked objects:
 16466 ;;		On entry : 0/0
 16467 ;;		On exit  : 0/0
 16468 ;;		Unchanged: 0/0
 16469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16474 ;;Total ram usage:        0 bytes
 16475 ;; Hardware stack levels used:    1
 16476 ;; Hardware stack levels required when called:    3
 16477 ;; This function calls:
 16478 ;;		Absolute function
 16479 ;;		_ADCC_ThresholdISR
 16480 ;;		_DMX_ISR
 16481 ;;		_EUSART1_Receive_ISR
 16482 ;;		_EUSART1_Transmit_ISR
 16483 ;;		_I2C1_BusCollisionISR
 16484 ;;		_I2C1_ISR
 16485 ;;		_TMR0_ISR
 16486 ;; This function is called by:
 16487 ;;		Interrupt level 1
 16488 ;; This function uses a non-reentrant model
 16489 ;;
 16490                           
 16491  0004                     _INTERRUPT_InterruptManager:	
 16492                           
 16493                           ;incstack = 0
 16494  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16495                           
 16496                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16497  0005  3180               	pagesel	$
 16498                           
 16499                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 16500  0006  014E               	movlb	14	; select bank14
 16501  0007  1A96               	btfsc	22,5	;volatile
 16502  0008  1E8C               	btfss	12,5	;volatile
 16503  0009  280E               	goto	i1l280
 16504                           
 16505                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 16506  000A  3188  2000  3180   	fcall	_TMR0_ISR
 16507                           
 16508                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 16509  000D  2837               	goto	i1l294
 16510  000E                     i1l280:	
 16511                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 16512                           
 16513  000E  1F0B               	btfss	11,6	;volatile
 16514  000F  2837               	goto	i1l294
 16515                           
 16516                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 16517  0010  1899               	btfsc	25,1	;volatile
 16518  0011  1C8F               	btfss	15,1	;volatile
 16519  0012  2817               	goto	i1l283
 16520                           
 16521                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 16522  0013  3190  2085  3180   	fcall	_I2C1_BusCollisionISR
 16523                           
 16524                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 16525  0016  2837               	goto	i1l294
 16526  0017                     i1l283:	
 16527                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 16528                           
 16529  0017  1819               	btfsc	25,0	;volatile
 16530  0018  1C0F               	btfss	15,0	;volatile
 16531  0019  281E               	goto	i1l285
 16532                           
 16533                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 16534  001A  318B  2344  3180   	fcall	_I2C1_ISR
 16535                           
 16536                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 16537  001D  2837               	goto	i1l294
 16538  001E                     i1l285:	
 16539                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 16540                           
 16541  001E  1A19               	btfsc	25,4	;volatile
 16542  001F  1E0F               	btfss	15,4	;volatile
 16543  0020  2828               	goto	i1l287
 16544                           
 16545                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 16546  0021  0142               	movlb	2	; select bank2
 16547  0022  0868               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+256),w
 16548  0023  008A               	movwf	10
 16549  0024  0867               	movf	_EUSART1_TxDefaultInterruptHandler^(0+256),w
 16550  0025  000A               	callw
 16551  0026  3180               	pagesel	$
 16552                           
 16553                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 16554  0027  2837               	goto	i1l294
 16555  0028                     i1l287:	
 16556                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 16557                           
 16558  0028  1A99               	btfsc	25,5	;volatile
 16559  0029  1E8F               	btfss	15,5	;volatile
 16560  002A  2832               	goto	i1l289
 16561                           
 16562                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 16563  002B  0142               	movlb	2	; select bank2
 16564  002C  0866               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+256),w
 16565  002D  008A               	movwf	10
 16566  002E  0865               	movf	_EUSART1_RxDefaultInterruptHandler^(0+256),w
 16567  002F  000A               	callw
 16568  0030  3180               	pagesel	$
 16569                           
 16570                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 16571  0031  2837               	goto	i1l294
 16572  0032                     i1l289:	
 16573                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 16574                           
 16575  0032  1897               	btfsc	23,1	;volatile
 16576  0033  1C8D               	btfss	13,1	;volatile
 16577  0034  2837               	goto	i1l294
 16578                           
 16579                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 16580  0035  3191  2153         	fcall	_ADCC_ThresholdISR
 16581  0037                     i1l294:	
 16582                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 16583                           
 16584  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16585  0038  0009               	retfie
 16586  0039                     __end_of_INTERRUPT_InterruptManager:	
 16587                           
 16588                           	psect	text61
 16589  0800                     __ptext61:	
 16590 ;; *************** function _TMR0_ISR *****************
 16591 ;; Defined at:
 16592 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 16593 ;; Parameters:    Size  Location     Type
 16594 ;;		None
 16595 ;; Auto vars:     Size  Location     Type
 16596 ;;		None
 16597 ;; Return value:  Size  Location     Type
 16598 ;;                  1    wreg      void 
 16599 ;; Registers used:
 16600 ;;		wreg, status,2, status,0, pclath, cstack
 16601 ;; Tracked objects:
 16602 ;;		On entry : 0/0
 16603 ;;		On exit  : 0/0
 16604 ;;		Unchanged: 0/0
 16605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16610 ;;Total ram usage:        0 bytes
 16611 ;; Hardware stack levels used:    1
 16612 ;; Hardware stack levels required when called:    1
 16613 ;; This function calls:
 16614 ;;		Absolute function
 16615 ;;		_CLOCK_timerCallback
 16616 ;;		_TMR0_DefaultInterruptHandler
 16617 ;; This function is called by:
 16618 ;;		_INTERRUPT_InterruptManager
 16619 ;; This function uses a non-reentrant model
 16620 ;;
 16621                           
 16622                           
 16623                           ;psect for function _TMR0_ISR
 16624  0800                     _TMR0_ISR:	
 16625                           
 16626                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 16627                           
 16628                           ;incstack = 0
 16629                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 16630  0800  014E               	movlb	14	; select bank14
 16631  0801  128C               	bcf	12,5	;volatile
 16632                           
 16633                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 16634  0802  0142               	movlb	2	; select bank2
 16635  0803  0861               	movf	_TMR0_InterruptHandler^(0+256),w
 16636  0804  0462               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 16637  0805  1903               	btfsc	3,2
 16638  0806  0008               	return
 16639                           
 16640                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 16641  0807  0862               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 16642  0808  008A               	movwf	10
 16643  0809  0861               	movf	_TMR0_InterruptHandler^(0+256),w
 16644  080A  000A               	callw
 16645  080B  3188               	pagesel	$
 16646  080C  0008               	return
 16647  080D                     __end_of_TMR0_ISR:	
 16648                           
 16649                           	psect	text62
 16650  109F                     __ptext62:	
 16651 ;; *************** function _CLOCK_timerCallback *****************
 16652 ;; Defined at:
 16653 ;;		line 21 in file "clock.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;		None
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;		None
 16658 ;; Return value:  Size  Location     Type
 16659 ;;                  1    wreg      void 
 16660 ;; Registers used:
 16661 ;;		wreg
 16662 ;; Tracked objects:
 16663 ;;		On entry : 0/0
 16664 ;;		On exit  : 0/0
 16665 ;;		Unchanged: 0/0
 16666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16671 ;;Total ram usage:        0 bytes
 16672 ;; Hardware stack levels used:    1
 16673 ;; This function calls:
 16674 ;;		Nothing
 16675 ;; This function is called by:
 16676 ;;		_CLOCK_init
 16677 ;;		_TMR0_ISR
 16678 ;; This function uses a non-reentrant model
 16679 ;;
 16680                           
 16681                           
 16682                           ;psect for function _CLOCK_timerCallback
 16683  109F                     _CLOCK_timerCallback:	
 16684                           
 16685                           ;clock.c: 22:     currentTime++;
 16686                           
 16687                           ;incstack = 0
 16688                           ; Regs used in _CLOCK_timerCallback: [wreg]
 16689  109F  3001               	movlw	1
 16690  10A0  0142               	movlb	2	; select bank2
 16691  10A1  07C3               	addwf	_currentTime^(0+256),f
 16692  10A2  3000               	movlw	0
 16693  10A3  3DC4               	addwfc	(_currentTime+1)^(0+256),f
 16694  10A4  0008               	return
 16695  10A5                     __end_of_CLOCK_timerCallback:	
 16696                           
 16697                           	psect	text63
 16698  0003                     __ptext63:	
 16699 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 16700 ;; Defined at:
 16701 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 16702 ;; Parameters:    Size  Location     Type
 16703 ;;		None
 16704 ;; Auto vars:     Size  Location     Type
 16705 ;;		None
 16706 ;; Return value:  Size  Location     Type
 16707 ;;                  1    wreg      void 
 16708 ;; Registers used:
 16709 ;;		None
 16710 ;; Tracked objects:
 16711 ;;		On entry : 0/0
 16712 ;;		On exit  : 0/0
 16713 ;;		Unchanged: 0/0
 16714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16719 ;;Total ram usage:        0 bytes
 16720 ;; Hardware stack levels used:    1
 16721 ;; This function calls:
 16722 ;;		Nothing
 16723 ;; This function is called by:
 16724 ;;		_TMR0_Initialize
 16725 ;;		_TMR0_ISR
 16726 ;; This function uses a non-reentrant model
 16727 ;;
 16728                           
 16729                           
 16730                           ;psect for function _TMR0_DefaultInterruptHandler
 16731  0003                     _TMR0_DefaultInterruptHandler:	
 16732                           
 16733                           ;incstack = 0
 16734                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 16735  0003  0008               	return
 16736  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 16737                           
 16738                           	psect	text64
 16739  0B44                     __ptext64:	
 16740 ;; *************** function _I2C1_ISR *****************
 16741 ;; Defined at:
 16742 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 16743 ;; Parameters:    Size  Location     Type
 16744 ;;		None
 16745 ;; Auto vars:     Size  Location     Type
 16746 ;;		None
 16747 ;; Return value:  Size  Location     Type
 16748 ;;                  1    wreg      void 
 16749 ;; Registers used:
 16750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16751 ;; Tracked objects:
 16752 ;;		On entry : 0/0
 16753 ;;		On exit  : 0/0
 16754 ;;		Unchanged: 0/0
 16755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16758 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16759 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16760 ;;Total ram usage:        4 bytes
 16761 ;; Hardware stack levels used:    1
 16762 ;; Hardware stack levels required when called:    1
 16763 ;; This function calls:
 16764 ;;		_I2C1_FunctionComplete
 16765 ;;		_I2C1_Stop
 16766 ;; This function is called by:
 16767 ;;		_INTERRUPT_InterruptManager
 16768 ;; This function uses a non-reentrant model
 16769 ;;
 16770                           
 16771                           
 16772                           ;psect for function _I2C1_ISR
 16773  0B44                     _I2C1_ISR:	
 16774                           
 16775                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 16776                           
 16777                           ;incstack = 0
 16778                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16779  0B44  014E               	movlb	14	; select bank14
 16780  0B45  100F               	bcf	15,0	;volatile
 16781                           
 16782                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 16783  0B46  0143               	movlb	3	; select bank3
 16784  0B47  1F90               	btfss	16,7	;volatile
 16785  0B48  2C77               	goto	i1l4646
 16786                           
 16787                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 16788  0B49  1390               	bcf	16,7	;volatile
 16789                           
 16790                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 16791  0B4A  0141               	movlb	1	; select bank1
 16792  0B4B  01ED               	clrf	_i2c1_state^(0+128)
 16793                           
 16794                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 16795  0B4C  086A               	movf	_p_i2c1_current^(0+128),w
 16796  0B4D  3E02               	addlw	2
 16797  0B4E  0086               	movwf	6
 16798  0B4F  3001               	movlw	1	; select bank2/3
 16799  0B50  0087               	movwf	7
 16800  0B51  0801               	movf	1,w
 16801  0B52  0086               	movwf	6
 16802  0B53  0187               	clrf	7
 16803  0B54  0181               	clrf	1
 16804  0B55  0A81               	incf	1,f
 16805                           
 16806                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 16807  0B56  01EA               	clrf	_p_i2c1_current^(0+128)
 16808  0B57  0008               	return
 16809  0B58                     i1l402:	
 16810                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 16811                           
 16812                           
 16813                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 16814  0B58  0142               	movlb	2	; select bank2
 16815  0B59  18AA               	btfsc	(_i2c1_object^(0+256)+2),1
 16816  0B5A  0008               	return
 16817                           
 16818                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 16819  0B5B  0829               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 16820  0B5C  00F2               	movwf	??_I2C1_ISR
 16821  0B5D  0872               	movf	??_I2C1_ISR,w
 16822  0B5E  0141               	movlb	1	; select bank1
 16823  0B5F  00EA               	movwf	_p_i2c1_current^(0+128)
 16824                           
 16825                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 16826  0B60  0142               	movlb	2	; select bank2
 16827  0B61  0829               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 16828  0B62  0086               	movwf	6
 16829  0B63  3001               	movlw	1	; select bank2/3
 16830  0B64  0087               	movwf	7
 16831  0B65  0801               	movf	1,w
 16832  0B66  00F2               	movwf	??_I2C1_ISR
 16833  0B67  0872               	movf	??_I2C1_ISR,w
 16834  0B68  0141               	movlb	1	; select bank1
 16835  0B69  00EC               	movwf	_i2c1_trb_count^(0+128)
 16836                           
 16837                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 16838  0B6A  0142               	movlb	2	; select bank2
 16839  0B6B  0829               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 16840  0B6C  0086               	movwf	6
 16841  0B6D  3001               	movlw	1	; select bank2/3
 16842  0B6E  0087               	movwf	7
 16843  0B6F  3001               	movlw	1	; select bank2/3
 16844  0B70  3F41               	moviw [1]fsr1
 16845  0B71  0141               	movlb	1	; select bank1
 16846  0B72  00EB               	movwf	_p_i2c1_trb_current^(0+128)
 16847                           
 16848                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 16849  0B73  3003               	movlw	3
 16850  0B74  00F2               	movwf	??_I2C1_ISR
 16851  0B75  0872               	movf	??_I2C1_ISR,w
 16852  0B76  0142               	movlb	2	; select bank2
 16853  0B77  07A9               	addwf	(low ((_i2c1_object| (0+256)+1)))^0,f
 16854                           
 16855                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 16856  0B78  0829               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 16857  0B79  3A5F               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 16858  0B7A  1D03               	skipz
 16859  0B7B  2B80               	goto	i1l4534
 16860                           
 16861                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 16862  0B7C  305C               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 16863  0B7D  00F2               	movwf	??_I2C1_ISR
 16864  0B7E  0872               	movf	??_I2C1_ISR,w
 16865  0B7F  00A9               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
 16866  0B80                     i1l4534:	
 16867                           
 16868                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 16869  0B80  102A               	bcf	(_i2c1_object^(0+256)+2),0
 16870                           
 16871                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 16872  0B81  0829               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 16873  0B82  0628               	xorwf	_i2c1_object^(0+256),w
 16874  0B83  1903               	btfsc	3,2
 16875                           
 16876                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 16877  0B84  14AA               	bsf	(_i2c1_object^(0+256)+2),1
 16878                           
 16879                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 16880                           
 16881                           ;mcc_generated_files/i2c1.c: 290:                 }
 16882  0B85  0143               	movlb	3	; select bank3
 16883  0B86  1411               	bsf	17,0	;volatile
 16884  0B87                     i1l4538:	
 16885                           
 16886                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 16887  0B87  3002               	movlw	2
 16888  0B88  00F2               	movwf	??_I2C1_ISR
 16889  0B89  0872               	movf	??_I2C1_ISR,w
 16890  0B8A  0141               	movlb	1	; select bank1
 16891  0B8B  00ED               	movwf	_i2c1_state^(0+128)
 16892  0B8C  0008               	return
 16893  0B8D                     i1l407:	
 16894                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 16895                           
 16896  0B8D  2C1F               	goto	i1l428
 16897  0B8E                     i1l408:	
 16898                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 16899                           
 16900                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 16901                           
 16902                           
 16903                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 16904  0B8E  0143               	movlb	3	; select bank3
 16905  0B8F  1F11               	btfss	17,6	;volatile
 16906  0B90  2B9A               	goto	i1l4546
 16907                           
 16908                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 16909  0B91  3001               	movlw	1
 16910  0B92  00F2               	movwf	??_I2C1_ISR
 16911  0B93  0872               	movf	??_I2C1_ISR,w
 16912  0B94  0142               	movlb	2	; select bank2
 16913  0B95  07AC               	addwf	(_i2c1_object^(0+256)+4),f
 16914                           
 16915                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 16916  0B96  3004               	movlw	4
 16917  0B97  3192  2209         	fcall	_I2C1_Stop
 16918                           
 16919                           ;mcc_generated_files/i2c1.c: 319:             }
 16920  0B99  0008               	return
 16921  0B9A                     i1l4546:	
 16922                           
 16923                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 16924  0B9A  0879               	movf	I2C1_ISR@i2c_address+1,w
 16925  0B9B  00F3               	movwf	??_I2C1_ISR+1
 16926  0B9C  0878               	movf	I2C1_ISR@i2c_address,w
 16927  0B9D  00F2               	movwf	??_I2C1_ISR
 16928  0B9E  36F3               	lsrf	??_I2C1_ISR+1,f
 16929  0B9F  0CF2               	rrf	??_I2C1_ISR,f
 16930  0BA0  0872               	movf	??_I2C1_ISR,w
 16931  0BA1  008C               	movwf	12	;volatile
 16932                           
 16933                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 16934  0BA2  1C78               	btfss	I2C1_ISR@i2c_address,0
 16935  0BA3  2BAA               	goto	i1l4552
 16936                           
 16937                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 16938  0BA4  300B               	movlw	11
 16939  0BA5  00F2               	movwf	??_I2C1_ISR
 16940  0BA6  0872               	movf	??_I2C1_ISR,w
 16941  0BA7  0141               	movlb	1	; select bank1
 16942  0BA8  00ED               	movwf	_i2c1_state^(0+128)
 16943                           
 16944                           ;mcc_generated_files/i2c1.c: 331:                 }
 16945  0BA9  0008               	return
 16946  0BAA                     i1l4552:	
 16947                           
 16948                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 16949  0BAA  3003               	movlw	3
 16950  0BAB  00F2               	movwf	??_I2C1_ISR
 16951  0BAC  0872               	movf	??_I2C1_ISR,w
 16952  0BAD  0141               	movlb	1	; select bank1
 16953  0BAE  00ED               	movwf	_i2c1_state^(0+128)
 16954  0BAF  0008               	return
 16955  0BB0                     i1l413:	
 16956                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 16957                           
 16958                           
 16959                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 16960  0BB0  0143               	movlb	3	; select bank3
 16961  0BB1  1F11               	btfss	17,6	;volatile
 16962  0BB2  2BBC               	goto	i1l414
 16963                           
 16964                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 16965  0BB3  3001               	movlw	1
 16966  0BB4  00F2               	movwf	??_I2C1_ISR
 16967  0BB5  0872               	movf	??_I2C1_ISR,w
 16968  0BB6  0142               	movlb	2	; select bank2
 16969  0BB7  07AC               	addwf	(_i2c1_object^(0+256)+4),f
 16970                           
 16971                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 16972  0BB8  3004               	movlw	4
 16973  0BB9  3192  2209         	fcall	_I2C1_Stop
 16974                           
 16975                           ;mcc_generated_files/i2c1.c: 347:             }
 16976  0BBB  0008               	return
 16977  0BBC                     i1l414:	
 16978                           ;mcc_generated_files/i2c1.c: 348:             else
 16979                           
 16980                           
 16981                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 16982  0BBC  1491               	bsf	17,1	;volatile
 16983                           
 16984                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 16985  0BBD  0879               	movf	I2C1_ISR@i2c_address+1,w
 16986  0BBE  00F3               	movwf	??_I2C1_ISR+1
 16987  0BBF  0878               	movf	I2C1_ISR@i2c_address,w
 16988  0BC0  00F2               	movwf	??_I2C1_ISR
 16989  0BC1  0873               	movf	??_I2C1_ISR+1,w
 16990  0BC2  00F2               	movwf	??_I2C1_ISR
 16991  0BC3  01F3               	clrf	??_I2C1_ISR+1
 16992  0BC4  3006               	movlw	6
 16993  0BC5  0572               	andwf	??_I2C1_ISR,w
 16994  0BC6  00F4               	movwf	??_I2C1_ISR+2
 16995  0BC7  3000               	movlw	0
 16996  0BC8  0573               	andwf	??_I2C1_ISR+1,w
 16997  0BC9  00F5               	movwf	??_I2C1_ISR+3
 16998  0BCA  30F0               	movlw	240
 16999  0BCB  0474               	iorwf	??_I2C1_ISR+2,w
 17000  0BCC  00F8               	movwf	I2C1_ISR@i2c_address
 17001  0BCD  3000               	movlw	0
 17002  0BCE  0475               	iorwf	??_I2C1_ISR+3,w
 17003  0BCF  00F9               	movwf	I2C1_ISR@i2c_address+1
 17004                           
 17005                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 17006  0BD0  1478               	bsf	I2C1_ISR@i2c_address,0
 17007                           
 17008                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 17009  0BD1  0142               	movlb	2	; select bank2
 17010  0BD2  01D0               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+256)
 17011  0BD3  0AD0               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+256),f
 17012  0BD4  2B87               	goto	i1l4538
 17013  0BD5                     i1l4566:	
 17014                           
 17015                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 17016  0BD5  0142               	movlb	2	; select bank2
 17017  0BD6  0350               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+256),w
 17018  0BD7  1903               	btfsc	3,2
 17019  0BD8  2BF3               	goto	i1l4586
 17020                           
 17021                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 17022  0BD9  0141               	movlb	1	; select bank1
 17023  0BDA  086B               	movf	_p_i2c1_trb_current^(0+128),w
 17024  0BDB  0086               	movwf	6
 17025  0BDC  3001               	movlw	1	; select bank2/3
 17026  0BDD  0087               	movwf	7
 17027  0BDE  3F40               	moviw [0]fsr1
 17028  0BDF  00F8               	movwf	I2C1_ISR@i2c_address
 17029  0BE0  3F41               	moviw [1]fsr1
 17030  0BE1  00F9               	movwf	I2C1_ISR@i2c_address+1
 17031                           
 17032                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 17033  0BE2  086B               	movf	_p_i2c1_trb_current^(0+128),w
 17034  0BE3  0086               	movwf	6
 17035  0BE4  3001               	movlw	1	; select bank2/3
 17036  0BE5  0087               	movwf	7
 17037  0BE6  3001               	movlw	1	; select bank2/3
 17038  0BE7  3F43               	moviw [3]fsr1
 17039  0BE8  0142               	movlb	2	; select bank2
 17040  0BE9  00D2               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+256)
 17041                           
 17042                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 17043  0BEA  0141               	movlb	1	; select bank1
 17044  0BEB  086B               	movf	_p_i2c1_trb_current^(0+128),w
 17045  0BEC  0086               	movwf	6
 17046  0BED  3001               	movlw	1	; select bank2/3
 17047  0BEE  0087               	movwf	7
 17048  0BEF  3001               	movlw	1	; select bank2/3
 17049  0BF0  3F42               	moviw [2]fsr1
 17050  0BF1  0142               	movlb	2	; select bank2
 17051  0BF2  00D1               	movwf	I2C1_ISR@i2c_bytes_left^(0+256)
 17052  0BF3                     i1l4586:	
 17053                           
 17054                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 17055  0BF3  0878               	movf	I2C1_ISR@i2c_address,w
 17056  0BF4  0143               	movlb	3	; select bank3
 17057  0BF5  008C               	movwf	12	;volatile
 17058                           
 17059                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 17060  0BF6  1C78               	btfss	I2C1_ISR@i2c_address,0
 17061  0BF7  2BAA               	goto	i1l4552
 17062                           
 17063                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 17064  0BF8  3005               	movlw	5
 17065  0BF9  00F2               	movwf	??_I2C1_ISR
 17066  0BFA  0872               	movf	??_I2C1_ISR,w
 17067  0BFB  0141               	movlb	1	; select bank1
 17068  0BFC  00ED               	movwf	_i2c1_state^(0+128)
 17069                           
 17070                           ;mcc_generated_files/i2c1.c: 419:                 }
 17071  0BFD  0008               	return
 17072  0BFE                     i1l424:	
 17073                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 17074                           
 17075                           
 17076                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 17077  0BFE  0143               	movlb	3	; select bank3
 17078  0BFF  1F11               	btfss	17,6	;volatile
 17079  0C00  2C0C               	goto	i1l4600
 17080                           
 17081                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 17082  0C01  3001               	movlw	1
 17083  0C02  00F2               	movwf	??_I2C1_ISR
 17084  0C03  0872               	movf	??_I2C1_ISR,w
 17085  0C04  0142               	movlb	2	; select bank2
 17086  0C05  07AC               	addwf	(_i2c1_object^(0+256)+4),f
 17087                           
 17088                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 17089  0C06  0143               	movlb	3	; select bank3
 17090  0C07  1311               	bcf	17,6	;volatile
 17091                           
 17092                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 17093  0C08  3005               	movlw	5
 17094  0C09  3192  2209         	fcall	_I2C1_Stop
 17095                           
 17096                           ;mcc_generated_files/i2c1.c: 442:             }
 17097  0C0B  0008               	return
 17098  0C0C                     i1l4600:	
 17099                           
 17100                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 17101  0C0C  3001               	movlw	1
 17102  0C0D  0142               	movlb	2	; select bank2
 17103  0C0E  02D1               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 17104  0C0F  0A51               	incf	I2C1_ISR@i2c_bytes_left^(0+256),w
 17105  0C10  1D03               	btfss	3,2
 17106  0C11  2C22               	goto	i1l4608
 17107                           
 17108                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 17109  0C12  3004               	movlw	4
 17110  0C13  00F2               	movwf	??_I2C1_ISR
 17111  0C14  0872               	movf	??_I2C1_ISR,w
 17112  0C15  0141               	movlb	1	; select bank1
 17113  0C16  07EB               	addwf	_p_i2c1_trb_current^(0+128),f
 17114                           
 17115                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 17116  0C17  3001               	movlw	1
 17117  0C18  02EC               	subwf	_i2c1_trb_count^(0+128),f
 17118  0C19  1D03               	btfss	3,2
 17119  0C1A  2C1F               	goto	i1l428
 17120                           
 17121                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 17122  0C1B  3000               	movlw	0
 17123  0C1C  3192  2209         	fcall	_I2C1_Stop
 17124                           
 17125                           ;mcc_generated_files/i2c1.c: 457:                     }
 17126  0C1E  0008               	return
 17127  0C1F                     i1l428:	
 17128                           ;mcc_generated_files/i2c1.c: 458:                     else
 17129                           
 17130                           
 17131                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 17132  0C1F  0143               	movlb	3	; select bank3
 17133  0C20  1491               	bsf	17,1	;volatile
 17134  0C21  2B87               	goto	i1l4538
 17135  0C22                     i1l4608:	
 17136                           
 17137                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 17138  0C22  0852               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 17139  0C23  0086               	movwf	6
 17140  0C24  0187               	clrf	7
 17141  0C25  0801               	movf	1,w
 17142  0C26  0143               	movlb	3	; select bank3
 17143  0C27  008C               	movwf	12	;volatile
 17144  0C28  3001               	movlw	1
 17145  0C29  00F2               	movwf	??_I2C1_ISR
 17146  0C2A  0872               	movf	??_I2C1_ISR,w
 17147  0C2B  0142               	movlb	2	; select bank2
 17148  0C2C  07D2               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 17149  0C2D  0008               	return
 17150  0C2E                     i1l431:	
 17151                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 17152                           
 17153                           
 17154                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 17155  0C2E  0143               	movlb	3	; select bank3
 17156  0C2F  1F11               	btfss	17,6	;volatile
 17157  0C30  2C3C               	goto	i1l432
 17158                           
 17159                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 17160  0C31  3001               	movlw	1
 17161  0C32  00F2               	movwf	??_I2C1_ISR
 17162  0C33  0872               	movf	??_I2C1_ISR,w
 17163  0C34  0142               	movlb	2	; select bank2
 17164  0C35  07AC               	addwf	(_i2c1_object^(0+256)+4),f
 17165                           
 17166                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17167  0C36  3004               	movlw	4
 17168  0C37  3192  2209         	fcall	_I2C1_Stop
 17169                           
 17170                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 17171  0C39  0143               	movlb	3	; select bank3
 17172  0C3A  1311               	bcf	17,6	;volatile
 17173                           
 17174                           ;mcc_generated_files/i2c1.c: 495:             }
 17175  0C3B  0008               	return
 17176  0C3C                     i1l432:	
 17177                           ;mcc_generated_files/i2c1.c: 496:             else
 17178                           
 17179                           
 17180                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 17181  0C3C  1591               	bsf	17,3	;volatile
 17182                           
 17183                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 17184  0C3D  3008               	movlw	8
 17185  0C3E  00F2               	movwf	??_I2C1_ISR
 17186  0C3F  0872               	movf	??_I2C1_ISR,w
 17187  0C40  0141               	movlb	1	; select bank1
 17188  0C41  00ED               	movwf	_i2c1_state^(0+128)
 17189  0C42  0008               	return
 17190  0C43                     i1l4620:	
 17191                           
 17192                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 17193  0C43  3008               	movlw	8
 17194  0C44  00F2               	movwf	??_I2C1_ISR
 17195  0C45  0872               	movf	??_I2C1_ISR,w
 17196  0C46  00ED               	movwf	_i2c1_state^(0+128)
 17197                           
 17198                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 17199  0C47  0143               	movlb	3	; select bank3
 17200  0C48  1591               	bsf	17,3	;volatile
 17201                           
 17202                           ;mcc_generated_files/i2c1.c: 513:             break;
 17203  0C49  0008               	return
 17204  0C4A                     i1l4624:	
 17205                           
 17206                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 17207  0C4A  0143               	movlb	3	; select bank3
 17208  0C4B  080C               	movf	12,w	;volatile
 17209  0C4C  00F2               	movwf	??_I2C1_ISR
 17210  0C4D  0142               	movlb	2	; select bank2
 17211  0C4E  0852               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 17212  0C4F  0086               	movwf	6
 17213  0C50  0187               	clrf	7
 17214  0C51  0872               	movf	??_I2C1_ISR,w
 17215  0C52  0081               	movwf	1
 17216  0C53  3001               	movlw	1
 17217  0C54  00F2               	movwf	??_I2C1_ISR
 17218  0C55  0872               	movf	??_I2C1_ISR,w
 17219  0C56  07D2               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 17220                           
 17221                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 17222  0C57  3001               	movlw	1
 17223  0C58  02D1               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 17224  0C59  1903               	btfsc	3,2
 17225  0C5A  2C63               	goto	i1l436
 17226                           
 17227                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 17228  0C5B  0143               	movlb	3	; select bank3
 17229  0C5C  1291               	bcf	17,5	;volatile
 17230                           
 17231                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 17232  0C5D  3006               	movlw	6
 17233  0C5E  00F2               	movwf	??_I2C1_ISR
 17234  0C5F  0872               	movf	??_I2C1_ISR,w
 17235  0C60  0141               	movlb	1	; select bank1
 17236  0C61  00ED               	movwf	_i2c1_state^(0+128)
 17237                           
 17238                           ;mcc_generated_files/i2c1.c: 532:             }
 17239  0C62  2C67               	goto	i1l4636
 17240  0C63                     i1l436:	
 17241                           ;mcc_generated_files/i2c1.c: 533:             else
 17242                           
 17243                           
 17244                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 17245  0C63  0143               	movlb	3	; select bank3
 17246  0C64  1691               	bsf	17,5	;volatile
 17247                           
 17248                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 17249  0C65  3191  2160         	fcall	_I2C1_FunctionComplete
 17250  0C67                     i1l4636:	
 17251                           
 17252                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 17253  0C67  0143               	movlb	3	; select bank3
 17254  0C68  1611               	bsf	17,4	;volatile
 17255                           
 17256                           ;mcc_generated_files/i2c1.c: 545:             break;
 17257  0C69  0008               	return
 17258  0C6A                     i1l4638:	
 17259                           
 17260                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 17261  0C6A  3000               	movlw	0
 17262  0C6B  3192  2209         	fcall	_I2C1_Stop
 17263                           
 17264                           ;mcc_generated_files/i2c1.c: 552:             break;
 17265  0C6D  0008               	return
 17266  0C6E                     i1l4640:	
 17267                           
 17268                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 17269  0C6E  3001               	movlw	1
 17270  0C6F  00F2               	movwf	??_I2C1_ISR
 17271  0C70  0872               	movf	??_I2C1_ISR,w
 17272  0C71  0142               	movlb	2	; select bank2
 17273  0C72  07AC               	addwf	(_i2c1_object^(0+256)+4),f
 17274                           
 17275                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 17276  0C73  3006               	movlw	6
 17277  0C74  3192  2209         	fcall	_I2C1_Stop
 17278                           
 17279                           ;mcc_generated_files/i2c1.c: 560:             break;
 17280  0C76  0008               	return
 17281  0C77                     i1l4646:	
 17282  0C77  0141               	movlb	1	; select bank1
 17283  0C78  086D               	movf	_i2c1_state^(0+128),w
 17284  0C79  00F2               	movwf	??_I2C1_ISR
 17285  0C7A  01F3               	clrf	??_I2C1_ISR+1
 17286                           
 17287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17288                           ; Switch size 1, requested type "simple"
 17289                           ; Number of cases is 1, Range of values is 0 to 0
 17290                           ; switch strategies available:
 17291                           ; Name         Instructions Cycles
 17292                           ; simple_byte            4     3 (average)
 17293                           ; direct_byte            8     6 (fixed)
 17294                           ; jumptable            260     6 (fixed)
 17295                           ;	Chosen strategy is simple_byte
 17296  0C7B  0873               	movf	??_I2C1_ISR+1,w
 17297  0C7C  3A00               	xorlw	0	; case 0
 17298  0C7D  1903               	skipnz
 17299  0C7E  2C80               	goto	i1l5926
 17300  0C7F  2C6E               	goto	i1l4640
 17301  0C80                     i1l5926:	
 17302                           
 17303                           ; Switch size 1, requested type "simple"
 17304                           ; Number of cases is 11, Range of values is 0 to 11
 17305                           ; switch strategies available:
 17306                           ; Name         Instructions Cycles
 17307                           ; direct_byte           30     6 (fixed)
 17308                           ; simple_byte           34    18 (average)
 17309                           ; jumptable            260     6 (fixed)
 17310                           ;	Chosen strategy is simple_byte
 17311  0C80  0872               	movf	??_I2C1_ISR,w
 17312  0C81  3A00               	xorlw	0	; case 0
 17313  0C82  1903               	skipnz
 17314  0C83  2B58               	goto	i1l402
 17315  0C84  3A01               	xorlw	1	; case 1
 17316  0C85  1903               	skipnz
 17317  0C86  2B8D               	goto	i1l407
 17318  0C87  3A03               	xorlw	3	; case 2
 17319  0C88  1903               	skipnz
 17320  0C89  2BD5               	goto	i1l4566
 17321  0C8A  3A01               	xorlw	1	; case 3
 17322  0C8B  1903               	skipnz
 17323  0C8C  2BFE               	goto	i1l424
 17324  0C8D  3A07               	xorlw	7	; case 4
 17325  0C8E  1903               	skipnz
 17326  0C8F  2C6A               	goto	i1l4638
 17327  0C90  3A01               	xorlw	1	; case 5
 17328  0C91  1903               	skipnz
 17329  0C92  2C2E               	goto	i1l431
 17330  0C93  3A03               	xorlw	3	; case 6
 17331  0C94  1903               	skipnz
 17332  0C95  2C43               	goto	i1l4620
 17333  0C96  3A01               	xorlw	1	; case 7
 17334  0C97  1903               	skipnz
 17335  0C98  2C6A               	goto	i1l4638
 17336  0C99  3A0F               	xorlw	15	; case 8
 17337  0C9A  1903               	skipnz
 17338  0C9B  2C4A               	goto	i1l4624
 17339  0C9C  3A02               	xorlw	2	; case 10
 17340  0C9D  1903               	skipnz
 17341  0C9E  2B8E               	goto	i1l408
 17342  0C9F  3A01               	xorlw	1	; case 11
 17343  0CA0  1903               	skipnz
 17344  0CA1  2BB0               	goto	i1l413
 17345  0CA2  2C6E               	goto	i1l4640
 17346  0CA3  0008               	return
 17347  0CA4                     __end_of_I2C1_ISR:	
 17348                           
 17349                           	psect	text65
 17350  1209                     __ptext65:	
 17351 ;; *************** function _I2C1_Stop *****************
 17352 ;; Defined at:
 17353 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 17354 ;; Parameters:    Size  Location     Type
 17355 ;;  completion_c    1    wreg     enum E10866
 17356 ;; Auto vars:     Size  Location     Type
 17357 ;;  completion_c    1    1[COMMON] enum E10866
 17358 ;; Return value:  Size  Location     Type
 17359 ;;                  1    wreg      void 
 17360 ;; Registers used:
 17361 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17362 ;; Tracked objects:
 17363 ;;		On entry : 0/0
 17364 ;;		On exit  : 0/0
 17365 ;;		Unchanged: 0/0
 17366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17371 ;;Total ram usage:        2 bytes
 17372 ;; Hardware stack levels used:    1
 17373 ;; This function calls:
 17374 ;;		Nothing
 17375 ;; This function is called by:
 17376 ;;		_I2C1_ISR
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380                           
 17381                           ;psect for function _I2C1_Stop
 17382  1209                     _I2C1_Stop:	
 17383                           
 17384                           ;incstack = 0
 17385                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 17386                           ;I2C1_Stop@completion_code stored from wreg
 17387  1209  00F1               	movwf	I2C1_Stop@completion_code
 17388                           
 17389                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 17390  120A  0143               	movlb	3	; select bank3
 17391  120B  1511               	bsf	17,2	;volatile
 17392                           
 17393                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 17394  120C  0141               	movlb	1	; select bank1
 17395  120D  086A               	movf	_p_i2c1_current^(0+128),w
 17396  120E  3E02               	addlw	2
 17397  120F  0086               	movwf	6
 17398  1210  3001               	movlw	1	; select bank2/3
 17399  1211  0087               	movwf	7
 17400  1212  0801               	movf	1,w
 17401  1213  1903               	btfsc	3,2
 17402  1214  2A21               	goto	i1l4340
 17403                           
 17404                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 17405  1215  0871               	movf	I2C1_Stop@completion_code,w
 17406  1216  00F0               	movwf	??_I2C1_Stop
 17407  1217  086A               	movf	_p_i2c1_current^(0+128),w
 17408  1218  3E02               	addlw	2
 17409  1219  0086               	movwf	6
 17410  121A  3001               	movlw	1	; select bank2/3
 17411  121B  0087               	movwf	7
 17412  121C  0801               	movf	1,w
 17413  121D  0086               	movwf	6
 17414  121E  0187               	clrf	7
 17415  121F  0870               	movf	??_I2C1_Stop,w
 17416  1220  0081               	movwf	1
 17417  1221                     i1l4340:	
 17418                           
 17419                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 17420  1221  01ED               	clrf	_i2c1_state^(0+128)
 17421  1222  0008               	return
 17422  1223                     __end_of_I2C1_Stop:	
 17423                           
 17424                           	psect	text66
 17425  1160                     __ptext66:	
 17426 ;; *************** function _I2C1_FunctionComplete *****************
 17427 ;; Defined at:
 17428 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;		None
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;		None
 17433 ;; Return value:  Size  Location     Type
 17434 ;;                  1    wreg      void 
 17435 ;; Registers used:
 17436 ;;		wreg, status,2, status,0
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17446 ;;Total ram usage:        1 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; This function calls:
 17449 ;;		Nothing
 17450 ;; This function is called by:
 17451 ;;		_I2C1_ISR
 17452 ;; This function uses a non-reentrant model
 17453 ;;
 17454                           
 17455                           
 17456                           ;psect for function _I2C1_FunctionComplete
 17457  1160                     _I2C1_FunctionComplete:	
 17458                           
 17459                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 17460                           
 17461                           ;incstack = 0
 17462                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 17463  1160  3004               	movlw	4
 17464  1161  00F0               	movwf	??_I2C1_FunctionComplete
 17465  1162  0870               	movf	??_I2C1_FunctionComplete,w
 17466  1163  0141               	movlb	1	; select bank1
 17467  1164  07EB               	addwf	_p_i2c1_trb_current^(0+128),f
 17468                           
 17469                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 17470  1165  3001               	movlw	1
 17471  1166  02EC               	subwf	_i2c1_trb_count^(0+128),f
 17472  1167  1D03               	btfss	3,2
 17473  1168  296E               	goto	i1l443
 17474                           
 17475                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 17476  1169  3004               	movlw	4
 17477  116A  00F0               	movwf	??_I2C1_FunctionComplete
 17478  116B  0870               	movf	??_I2C1_FunctionComplete,w
 17479  116C  00ED               	movwf	_i2c1_state^(0+128)
 17480                           
 17481                           ;mcc_generated_files/i2c1.c: 575:     }
 17482  116D  0008               	return
 17483  116E                     i1l443:	
 17484                           ;mcc_generated_files/i2c1.c: 576:     else
 17485                           
 17486                           
 17487                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 17488  116E  01ED               	clrf	_i2c1_state^(0+128)
 17489  116F  0AED               	incf	_i2c1_state^(0+128),f
 17490  1170  0008               	return
 17491  1171                     __end_of_I2C1_FunctionComplete:	
 17492                           
 17493                           	psect	text67
 17494  1085                     __ptext67:	
 17495 ;; *************** function _I2C1_BusCollisionISR *****************
 17496 ;; Defined at:
 17497 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 17498 ;; Parameters:    Size  Location     Type
 17499 ;;		None
 17500 ;; Auto vars:     Size  Location     Type
 17501 ;;		None
 17502 ;; Return value:  Size  Location     Type
 17503 ;;                  1    wreg      void 
 17504 ;; Registers used:
 17505 ;;		None
 17506 ;; Tracked objects:
 17507 ;;		On entry : 0/0
 17508 ;;		On exit  : 0/0
 17509 ;;		Unchanged: 0/0
 17510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17515 ;;Total ram usage:        0 bytes
 17516 ;; Hardware stack levels used:    1
 17517 ;; This function calls:
 17518 ;;		Nothing
 17519 ;; This function is called by:
 17520 ;;		_INTERRUPT_InterruptManager
 17521 ;; This function uses a non-reentrant model
 17522 ;;
 17523                           
 17524                           
 17525                           ;psect for function _I2C1_BusCollisionISR
 17526  1085                     _I2C1_BusCollisionISR:	
 17527                           
 17528                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 17529                           
 17530                           ;incstack = 0
 17531                           ; Regs used in _I2C1_BusCollisionISR: []
 17532  1085  014E               	movlb	14	; select bank14
 17533  1086  108F               	bcf	15,1	;volatile
 17534  1087  0008               	return
 17535  1088                     __end_of_I2C1_BusCollisionISR:	
 17536                           
 17537                           	psect	text68
 17538  1297                     __ptext68:	
 17539 ;; *************** function _EUSART1_Transmit_ISR *****************
 17540 ;; Defined at:
 17541 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 17542 ;; Parameters:    Size  Location     Type
 17543 ;;		None
 17544 ;; Auto vars:     Size  Location     Type
 17545 ;;		None
 17546 ;; Return value:  Size  Location     Type
 17547 ;;                  1    wreg      void 
 17548 ;; Registers used:
 17549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17550 ;; Tracked objects:
 17551 ;;		On entry : 0/0
 17552 ;;		On exit  : 0/0
 17553 ;;		Unchanged: 0/0
 17554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17559 ;;Total ram usage:        1 bytes
 17560 ;; Hardware stack levels used:    1
 17561 ;; This function calls:
 17562 ;;		Nothing
 17563 ;; This function is called by:
 17564 ;;		_EUSART1_Initialize
 17565 ;;		_INTERRUPT_InterruptManager
 17566 ;; This function uses a non-reentrant model
 17567 ;;
 17568                           
 17569                           
 17570                           ;psect for function _EUSART1_Transmit_ISR
 17571  1297                     _EUSART1_Transmit_ISR:	
 17572                           
 17573                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 17574                           
 17575                           ;incstack = 0
 17576                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 17577  1297  3008               	movlw	8
 17578  1298  0142               	movlb	2	; select bank2
 17579  1299  0269               	subwf	_eusart1TxBufferRemaining^(0+256),w	;volatile
 17580  129A  1803               	skipnc
 17581  129B  2AB4               	goto	i1l106
 17582                           
 17583                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 17584  129C  0141               	movlb	1	; select bank1
 17585  129D  086F               	movf	_eusart1TxTail^(0+128),w
 17586  129E  3EA8               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 17587  129F  0086               	movwf	6
 17588  12A0  3001               	movlw	1	; select bank3/4
 17589  12A1  0087               	movwf	7
 17590  12A2  0801               	movf	1,w
 17591  12A3  0142               	movlb	2	; select bank2
 17592  12A4  009A               	movwf	26	;volatile
 17593  12A5  3001               	movlw	1
 17594  12A6  00F0               	movwf	??_EUSART1_Transmit_ISR
 17595  12A7  0870               	movf	??_EUSART1_Transmit_ISR,w
 17596  12A8  0141               	movlb	1	; select bank1
 17597  12A9  07EF               	addwf	_eusart1TxTail^(0+128),f	;volatile
 17598                           
 17599                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 17600  12AA  3008               	movlw	8
 17601  12AB  026F               	subwf	_eusart1TxTail^(0+128),w	;volatile
 17602  12AC  1803               	btfsc	3,0
 17603                           
 17604                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 17605  12AD  01EF               	clrf	_eusart1TxTail^(0+128)	;volatile
 17606                           
 17607                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 17608  12AE  3001               	movlw	1
 17609  12AF  00F0               	movwf	??_EUSART1_Transmit_ISR
 17610  12B0  0870               	movf	??_EUSART1_Transmit_ISR,w
 17611  12B1  0142               	movlb	2	; select bank2
 17612  12B2  07E9               	addwf	_eusart1TxBufferRemaining^(0+256),f	;volatile
 17613                           
 17614                           ;mcc_generated_files/eusart1.c: 206:     }
 17615  12B3  0008               	return
 17616  12B4                     i1l106:	
 17617                           ;mcc_generated_files/eusart1.c: 207:     else
 17618                           
 17619                           
 17620                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 17621  12B4  014E               	movlb	14	; select bank14
 17622  12B5  1219               	bcf	25,4	;volatile
 17623  12B6  0008               	return
 17624  12B7                     __end_of_EUSART1_Transmit_ISR:	
 17625                           
 17626                           	psect	text69
 17627  133B                     __ptext69:	
 17628 ;; *************** function _DMX_ISR *****************
 17629 ;; Defined at:
 17630 ;;		line 13 in file "dmx.c"
 17631 ;; Parameters:    Size  Location     Type
 17632 ;;		None
 17633 ;; Auto vars:     Size  Location     Type
 17634 ;;		None
 17635 ;; Return value:  Size  Location     Type
 17636 ;;                  1    wreg      void 
 17637 ;; Registers used:
 17638 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17639 ;; Tracked objects:
 17640 ;;		On entry : 0/0
 17641 ;;		On exit  : 0/0
 17642 ;;		Unchanged: 0/0
 17643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17648 ;;Total ram usage:        4 bytes
 17649 ;; Hardware stack levels used:    1
 17650 ;; This function calls:
 17651 ;;		Nothing
 17652 ;; This function is called by:
 17653 ;;		_main
 17654 ;;		_INTERRUPT_InterruptManager
 17655 ;; This function uses a non-reentrant model
 17656 ;;
 17657                           
 17658                           
 17659                           ;psect for function _DMX_ISR
 17660  133B                     _DMX_ISR:	
 17661                           
 17662                           ;dmx.c: 14:         LATB6 = 1;
 17663                           
 17664                           ;incstack = 0
 17665                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 17666  133B  0140               	movlb	0	; select bank0
 17667  133C  1719               	bsf	25,6	;volatile
 17668                           
 17669                           ;dmx.c: 15:         LATB6 = 0;
 17670  133D  1319               	bcf	25,6	;volatile
 17671                           
 17672                           ;dmx.c: 16:     if (RC1STAbits.FERR) {
 17673  133E  0142               	movlb	2	; select bank2
 17674  133F  1D1D               	btfss	29,2	;volatile
 17675  1340  2B46               	goto	i1l4854
 17676                           
 17677                           ;dmx.c: 18:         dmxPointer = 0;
 17678  1341  01B1               	clrf	_dmxPointer^(0+256)
 17679  1342  01B2               	clrf	(_dmxPointer+1)^(0+256)
 17680                           
 17681                           ;dmx.c: 19:         offCheck = 1;
 17682  1343  01C8               	clrf	_offCheck^(0+256)
 17683  1344  0AC8               	incf	_offCheck^(0+256),f
 17684                           
 17685                           ;dmx.c: 20:     } else {
 17686  1345  2B4A               	goto	i1l4856
 17687  1346                     i1l4854:	
 17688                           
 17689                           ;dmx.c: 21:         dmxPointer++;
 17690  1346  3001               	movlw	1
 17691  1347  07B1               	addwf	_dmxPointer^(0+256),f
 17692  1348  3000               	movlw	0
 17693  1349  3DB2               	addwfc	(_dmxPointer+1)^(0+256),f
 17694  134A                     i1l4856:	
 17695                           
 17696                           ;dmx.c: 23:     dmxData[dmxPointer] = RC1REG;
 17697  134A  30EF               	movlw	239
 17698  134B  00F0               	movwf	??_DMX_ISR
 17699  134C  3025               	movlw	37
 17700  134D  00F1               	movwf	??_DMX_ISR+1
 17701  134E  0831               	movf	_dmxPointer^(0+256),w
 17702  134F  0770               	addwf	??_DMX_ISR,w
 17703  1350  00F2               	movwf	??_DMX_ISR+2
 17704  1351  0832               	movf	(_dmxPointer+1)^(0+256),w
 17705  1352  3D71               	addwfc	??_DMX_ISR+1,w
 17706  1353  00F3               	movwf	??_DMX_ISR+3
 17707  1354  0872               	movf	??_DMX_ISR+2,w
 17708  1355  0086               	movwf	6
 17709  1356  0873               	movf	??_DMX_ISR+3,w
 17710  1357  0087               	movwf	7
 17711  1358  0819               	movf	25,w	;volatile
 17712  1359  0081               	movwf	1
 17713                           
 17714                           ;dmx.c: 25:     if (RC1STAbits.OERR) {
 17715  135A  1C9D               	btfss	29,1	;volatile
 17716  135B  0008               	return
 17717                           
 17718                           ;dmx.c: 26:         RC1STAbits.CREN = 0;
 17719  135C  121D               	bcf	29,4	;volatile
 17720                           
 17721                           ;dmx.c: 27:         RC1STAbits.CREN = 1;
 17722  135D  161D               	bsf	29,4	;volatile
 17723  135E  0008               	return
 17724  135F                     __end_of_DMX_ISR:	
 17725                           
 17726                           	psect	text70
 17727  1431                     __ptext70:	
 17728 ;; *************** function _EUSART1_Receive_ISR *****************
 17729 ;; Defined at:
 17730 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 17731 ;; Parameters:    Size  Location     Type
 17732 ;;		None
 17733 ;; Auto vars:     Size  Location     Type
 17734 ;;		None
 17735 ;; Return value:  Size  Location     Type
 17736 ;;                  1    wreg      void 
 17737 ;; Registers used:
 17738 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17739 ;; Tracked objects:
 17740 ;;		On entry : 0/0
 17741 ;;		On exit  : 0/0
 17742 ;;		Unchanged: 0/0
 17743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17748 ;;Total ram usage:        0 bytes
 17749 ;; Hardware stack levels used:    1
 17750 ;; Hardware stack levels required when called:    2
 17751 ;; This function calls:
 17752 ;;		Absolute function
 17753 ;;		_EUSART1_DefaultErrorHandler
 17754 ;;		_EUSART1_DefaultFramingErrorHandler
 17755 ;;		_EUSART1_DefaultOverrunErrorHandler
 17756 ;;		_EUSART1_RxDataHandler
 17757 ;; This function is called by:
 17758 ;;		_EUSART1_Initialize
 17759 ;;		_INTERRUPT_InterruptManager
 17760 ;; This function uses a non-reentrant model
 17761 ;;
 17762                           
 17763                           
 17764                           ;psect for function _EUSART1_Receive_ISR
 17765  1431                     _EUSART1_Receive_ISR:	
 17766                           
 17767                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 17768                           
 17769                           ;incstack = 0
 17770                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17771  1431  0877               	movf	_eusart1RxHead,w	;volatile
 17772  1432  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17773  1433  0086               	movwf	6
 17774  1434  3001               	movlw	1	; select bank2/3
 17775  1435  0087               	movwf	7
 17776  1436  0181               	clrf	1
 17777                           
 17778                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 17779  1437  0142               	movlb	2	; select bank2
 17780  1438  1D1D               	btfss	29,2	;volatile
 17781  1439  2C45               	goto	i1l4476
 17782                           
 17783                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 17784  143A  0877               	movf	_eusart1RxHead,w	;volatile
 17785  143B  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17786  143C  0086               	movwf	6
 17787  143D  3001               	movlw	1	; select bank2/3
 17788  143E  0087               	movwf	7
 17789  143F  1481               	bsf	1,1
 17790                           
 17791                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 17792  1440  0864               	movf	(_EUSART1_FramingErrorHandler+1)^(0+256),w
 17793  1441  008A               	movwf	10
 17794  1442  0863               	movf	_EUSART1_FramingErrorHandler^(0+256),w
 17795  1443  000A               	callw
 17796  1444  3194               	pagesel	$
 17797  1445                     i1l4476:	
 17798                           
 17799                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 17800  1445  0142               	movlb	2	; select bank2
 17801  1446  1C9D               	btfss	29,1	;volatile
 17802  1447  2C54               	goto	i1l4482
 17803                           
 17804                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 17805  1448  0877               	movf	_eusart1RxHead,w	;volatile
 17806  1449  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17807  144A  0086               	movwf	6
 17808  144B  3001               	movlw	1	; select bank2/3
 17809  144C  0087               	movwf	7
 17810  144D  1501               	bsf	1,2
 17811                           
 17812                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 17813  144E  0143               	movlb	3	; select bank3
 17814  144F  085D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+384),w
 17815  1450  008A               	movwf	10
 17816  1451  085C               	movf	_EUSART1_OverrunErrorHandler^(0+384),w
 17817  1452  000A               	callw
 17818  1453  3194               	pagesel	$
 17819  1454                     i1l4482:	
 17820                           
 17821                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 17822  1454  0877               	movf	_eusart1RxHead,w	;volatile
 17823  1455  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 17824  1456  0086               	movwf	6
 17825  1457  3001               	movlw	1	; select bank2/3
 17826  1458  0087               	movwf	7
 17827  1459  0801               	movf	1,w
 17828  145A  1903               	btfsc	3,2
 17829  145B  2C63               	goto	i1l4486
 17830                           
 17831                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 17832  145C  0143               	movlb	3	; select bank3
 17833  145D  085B               	movf	(_EUSART1_ErrorHandler+1)^(0+384),w
 17834  145E  008A               	movwf	10
 17835  145F  085A               	movf	_EUSART1_ErrorHandler^(0+384),w
 17836  1460  000A               	callw
 17837  1461  3194               	pagesel	$
 17838                           
 17839                           ;mcc_generated_files/eusart1.c: 230:     } else {
 17840  1462  0008               	return
 17841  1463                     i1l4486:	
 17842                           
 17843                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 17844  1463  3191  21F1         	fcall	_EUSART1_RxDataHandler
 17845  1465  0008               	return
 17846  1466                     __end_of_EUSART1_Receive_ISR:	
 17847                           
 17848                           	psect	text71
 17849  1092                     __ptext71:	
 17850 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 17851 ;; Defined at:
 17852 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 17853 ;; Parameters:    Size  Location     Type
 17854 ;;		None
 17855 ;; Auto vars:     Size  Location     Type
 17856 ;;		None
 17857 ;; Return value:  Size  Location     Type
 17858 ;;                  1    wreg      void 
 17859 ;; Registers used:
 17860 ;;		None
 17861 ;; Tracked objects:
 17862 ;;		On entry : 0/0
 17863 ;;		On exit  : 0/0
 17864 ;;		Unchanged: 0/0
 17865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17870 ;;Total ram usage:        0 bytes
 17871 ;; Hardware stack levels used:    1
 17872 ;; This function calls:
 17873 ;;		Nothing
 17874 ;; This function is called by:
 17875 ;;		_EUSART1_Initialize
 17876 ;;		_EUSART1_Receive_ISR
 17877 ;; This function uses a non-reentrant model
 17878 ;;
 17879                           
 17880                           
 17881                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 17882  1092                     _EUSART1_DefaultOverrunErrorHandler:	
 17883                           
 17884                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 17885                           
 17886                           ;incstack = 0
 17887                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 17888  1092  0142               	movlb	2	; select bank2
 17889  1093  121D               	bcf	29,4	;volatile
 17890                           
 17891                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 17892  1094  161D               	bsf	29,4	;volatile
 17893  1095  0008               	return
 17894  1096                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 17895                           
 17896                           	psect	text72
 17897  0002                     __ptext72:	
 17898 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 17899 ;; Defined at:
 17900 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 17901 ;; Parameters:    Size  Location     Type
 17902 ;;		None
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;		None
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  1    wreg      void 
 17907 ;; Registers used:
 17908 ;;		None
 17909 ;; Tracked objects:
 17910 ;;		On entry : 0/0
 17911 ;;		On exit  : 0/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17918 ;;Total ram usage:        0 bytes
 17919 ;; Hardware stack levels used:    1
 17920 ;; This function calls:
 17921 ;;		Nothing
 17922 ;; This function is called by:
 17923 ;;		_EUSART1_Initialize
 17924 ;;		_EUSART1_Receive_ISR
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928                           
 17929                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 17930  0002                     _EUSART1_DefaultFramingErrorHandler:	
 17931                           
 17932                           ;incstack = 0
 17933                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 17934  0002  0008               	return
 17935  0003                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 17936                           
 17937                           	psect	text73
 17938  1082                     __ptext73:	
 17939 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 17940 ;; Defined at:
 17941 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;		None
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;		None
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  1    wreg      void 
 17948 ;; Registers used:
 17949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17959 ;;Total ram usage:        0 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:    1
 17962 ;; This function calls:
 17963 ;;		_EUSART1_RxDataHandler
 17964 ;; This function is called by:
 17965 ;;		_EUSART1_Initialize
 17966 ;;		_EUSART1_Receive_ISR
 17967 ;; This function uses a non-reentrant model
 17968 ;;
 17969                           
 17970                           
 17971                           ;psect for function _EUSART1_DefaultErrorHandler
 17972  1082                     _EUSART1_DefaultErrorHandler:	
 17973                           
 17974                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 17975                           
 17976                           ;incstack = 0
 17977                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17978  1082  3191  21F1         	fcall	_EUSART1_RxDataHandler
 17979  1084  0008               	return
 17980  1085                     __end_of_EUSART1_DefaultErrorHandler:	
 17981                           
 17982                           	psect	text74
 17983  11F1                     __ptext74:	
 17984 ;; *************** function _EUSART1_RxDataHandler *****************
 17985 ;; Defined at:
 17986 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 17987 ;; Parameters:    Size  Location     Type
 17988 ;;		None
 17989 ;; Auto vars:     Size  Location     Type
 17990 ;;		None
 17991 ;; Return value:  Size  Location     Type
 17992 ;;                  1    wreg      void 
 17993 ;; Registers used:
 17994 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17995 ;; Tracked objects:
 17996 ;;		On entry : 0/0
 17997 ;;		On exit  : 0/0
 17998 ;;		Unchanged: 0/0
 17999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18004 ;;Total ram usage:        1 bytes
 18005 ;; Hardware stack levels used:    1
 18006 ;; This function calls:
 18007 ;;		Nothing
 18008 ;; This function is called by:
 18009 ;;		_EUSART1_Receive_ISR
 18010 ;;		_EUSART1_DefaultErrorHandler
 18011 ;; This function uses a non-reentrant model
 18012 ;;
 18013                           
 18014                           
 18015                           ;psect for function _EUSART1_RxDataHandler
 18016  11F1                     _EUSART1_RxDataHandler:	
 18017                           
 18018                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 18019                           
 18020                           ;incstack = 0
 18021                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 18022  11F1  0142               	movlb	2	; select bank2
 18023  11F2  0819               	movf	25,w	;volatile
 18024  11F3  00F0               	movwf	??_EUSART1_RxDataHandler
 18025  11F4  0877               	movf	_eusart1RxHead,w
 18026  11F5  3EA0               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 18027  11F6  0086               	movwf	6
 18028  11F7  3001               	movlw	1	; select bank3/4
 18029  11F8  0087               	movwf	7
 18030  11F9  0870               	movf	??_EUSART1_RxDataHandler,w
 18031  11FA  0081               	movwf	1
 18032  11FB  3001               	movlw	1
 18033  11FC  00F0               	movwf	??_EUSART1_RxDataHandler
 18034  11FD  0870               	movf	??_EUSART1_RxDataHandler,w
 18035  11FE  07F7               	addwf	_eusart1RxHead,f	;volatile
 18036                           
 18037                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 18038  11FF  3008               	movlw	8
 18039  1200  0277               	subwf	_eusart1RxHead,w	;volatile
 18040  1201  1803               	btfsc	3,0
 18041                           
 18042                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 18043  1202  01F7               	clrf	_eusart1RxHead	;volatile
 18044                           
 18045                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 18046  1203  3001               	movlw	1
 18047  1204  00F0               	movwf	??_EUSART1_RxDataHandler
 18048  1205  0870               	movf	??_EUSART1_RxDataHandler,w
 18049  1206  0141               	movlb	1	; select bank1
 18050  1207  07EE               	addwf	_eusart1RxCount^(0+128),f	;volatile
 18051  1208  0008               	return
 18052  1209                     __end_of_EUSART1_RxDataHandler:	
 18053                           
 18054                           	psect	text75
 18055  1153                     __ptext75:	
 18056 ;; *************** function _ADCC_ThresholdISR *****************
 18057 ;; Defined at:
 18058 ;;		line 308 in file "mcc_generated_files/adcc.c"
 18059 ;; Parameters:    Size  Location     Type
 18060 ;;		None
 18061 ;; Auto vars:     Size  Location     Type
 18062 ;;		None
 18063 ;; Return value:  Size  Location     Type
 18064 ;;                  1    wreg      void 
 18065 ;; Registers used:
 18066 ;;		wreg, status,2, status,0, pclath, cstack
 18067 ;; Tracked objects:
 18068 ;;		On entry : 0/0
 18069 ;;		On exit  : 0/0
 18070 ;;		Unchanged: 0/0
 18071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18076 ;;Total ram usage:        0 bytes
 18077 ;; Hardware stack levels used:    1
 18078 ;; Hardware stack levels required when called:    1
 18079 ;; This function calls:
 18080 ;;		Absolute function
 18081 ;;		_ADCC_DefaultInterruptHandler
 18082 ;;		_adcThresholdHandler
 18083 ;; This function is called by:
 18084 ;;		_INTERRUPT_InterruptManager
 18085 ;; This function uses a non-reentrant model
 18086 ;;
 18087                           
 18088                           
 18089                           ;psect for function _ADCC_ThresholdISR
 18090  1153                     _ADCC_ThresholdISR:	
 18091                           
 18092                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 18093                           
 18094                           ;incstack = 0
 18095                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 18096  1153  014E               	movlb	14	; select bank14
 18097  1154  108D               	bcf	13,1	;volatile
 18098                           
 18099                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 18100  1155  0142               	movlb	2	; select bank2
 18101  1156  085F               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 18102  1157  0460               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 18103  1158  1903               	btfsc	3,2
 18104  1159  0008               	return
 18105                           
 18106                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 18107  115A  0860               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 18108  115B  008A               	movwf	10
 18109  115C  085F               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 18110  115D  000A               	callw
 18111  115E  3191               	pagesel	$
 18112  115F  0008               	return
 18113  1160                     __end_of_ADCC_ThresholdISR:	
 18114                           
 18115                           	psect	text76
 18116  1081                     __ptext76:	
 18117 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 18118 ;; Defined at:
 18119 ;;		line 320 in file "mcc_generated_files/adcc.c"
 18120 ;; Parameters:    Size  Location     Type
 18121 ;;		None
 18122 ;; Auto vars:     Size  Location     Type
 18123 ;;		None
 18124 ;; Return value:  Size  Location     Type
 18125 ;;                  1    wreg      void 
 18126 ;; Registers used:
 18127 ;;		None
 18128 ;; Tracked objects:
 18129 ;;		On entry : 0/0
 18130 ;;		On exit  : 0/0
 18131 ;;		Unchanged: 0/0
 18132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18137 ;;Total ram usage:        0 bytes
 18138 ;; Hardware stack levels used:    1
 18139 ;; This function calls:
 18140 ;;		Nothing
 18141 ;; This function is called by:
 18142 ;;		_ADCC_Initialize
 18143 ;;		_ADCC_ThresholdISR
 18144 ;; This function uses a non-reentrant model
 18145 ;;
 18146                           
 18147                           
 18148                           ;psect for function _ADCC_DefaultInterruptHandler
 18149  1081                     _ADCC_DefaultInterruptHandler:	
 18150                           
 18151                           ;incstack = 0
 18152                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 18153  1081  0008               	return
 18154  1082                     __end_of_ADCC_DefaultInterruptHandler:	
 18155                           
 18156                           	psect	text77
 18157  108E                     __ptext77:	
 18158 ;; *************** function _adcThresholdHandler *****************
 18159 ;; Defined at:
 18160 ;;		line 27 in file "beat.c"
 18161 ;; Parameters:    Size  Location     Type
 18162 ;;		None
 18163 ;; Auto vars:     Size  Location     Type
 18164 ;;		None
 18165 ;; Return value:  Size  Location     Type
 18166 ;;                  1    wreg      void 
 18167 ;; Registers used:
 18168 ;;		None
 18169 ;; Tracked objects:
 18170 ;;		On entry : 0/0
 18171 ;;		On exit  : 0/0
 18172 ;;		Unchanged: 0/0
 18173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18178 ;;Total ram usage:        0 bytes
 18179 ;; Hardware stack levels used:    1
 18180 ;; This function calls:
 18181 ;;		Nothing
 18182 ;; This function is called by:
 18183 ;;		_BEAT_init
 18184 ;;		_ADCC_ThresholdISR
 18185 ;; This function uses a non-reentrant model
 18186 ;;
 18187                           
 18188                           
 18189                           ;psect for function _adcThresholdHandler
 18190  108E                     _adcThresholdHandler:	
 18191                           
 18192                           ;beat.c: 28:     thresholdExceeded = 1;
 18193                           
 18194                           ;incstack = 0
 18195                           ; Regs used in _adcThresholdHandler: []
 18196  108E  0141               	movlb	1	; select bank1
 18197  108F  01E9               	clrf	_thresholdExceeded^(0+128)
 18198  1090  0AE9               	incf	_thresholdExceeded^(0+128),f
 18199  1091  0008               	return
 18200  1092                     __end_of_adcThresholdHandler:	
 18201  007E                     btemp	set	126	;btemp
 18202  007E                     int$flags	set	126
 18203  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        18
    BSS         123
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     79      80
    BANK1            80     73      80
    BANK2            80      0      80
    BANK3            80      2      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    S1473$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK3[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK2[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_setHSL->_HueToRGB
    ___fltol->_HueToRGB
    ___fldiv->___xxtofl
    _HueToRGB->___flge
    ___flsub->___flmul
    ___fladd->__Umul8_16
    ___flmul->___fladd
    ___flge->___flmul
    _DMX_task->_CLOCK_getTime
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LED_task
    _LED_task->_fadeColor
    _fadeColor->_LED_setHSL
    _LED_setHSL->___fltol
    ___fltol->_HueToRGB

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   58541
                                              0 BANK3      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_task
      _EUSART1_SetRxInterruptHandler
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                            11    11      0   35886
                                             62 BANK1     11    11      0
                      _BEAT_detected
                       _LED_setColor
                          _fadeColor
                            _isDMXOn
 ---------------------------------------------------------------------------------
 (2) _isDMXOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _fadeColor                                            4     4      0   34938
                                             58 BANK1      4     4      0
                      _CLOCK_getTime
                         _LED_setHSL
 ---------------------------------------------------------------------------------
 (3) _LED_setHSL                                          43    33     10   34873
                                             15 BANK1     43    33     10
                           _HueToRGB
                       _LED_setColor
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     697
                                              4 BANK1     11     7      4
                           _HueToRGB (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     242
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1273
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _LED_setColor                                        22    19      3     948
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (4) _HueToRGB                                            16     4     12   15743
                                             67 BANK0     12     0     12
                                              0 BANK1      4     4      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4345
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3200
                                              9 BANK0     20    12      8
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    5693
                                             29 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1094
                                             55 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_task                                             4     4      0      65
                                              2 BANK0      4     4      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      4     4      0   11216
                                             34 BANK0      4     4      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    4     1      3     165
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum                                  7     5      2    4467
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _TM1650_setDigit                                      7     4      3    2952
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (11) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     _TM1650_isEnabled
     ___lwdiv
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
       ___lwmod
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
   _DMX_task
     _CLOCK_getTime
   _EUSART1_SetRxInterruptHandler
   _LED_task
     _BEAT_detected
     _LED_setColor
     _fadeColor
       _CLOCK_getTime
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fleq
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
     _isDMXOn
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     13C       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     49      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      2      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     13C      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 14:33:39 2019

                      _eusart1TxBufferRemaining 0169                                    ___fldiv@aexp 0047  
                                  ___fldiv@bexp 0046                        ??_ADCC_SetUpperThreshold 0022  
                                  ___fldiv@sign 003F                                     __CFG_CP$OFF 0000  
                                  ?_TM1650_init 0070                                      HueToRGB@v1 0063  
                                    HueToRGB@v2 0067                                      HueToRGB@vH 006B  
                                            _up 014E                              __size_of_BEAT_init 0017  
                            __size_of_BEAT_task 00D9                             __Umul8_16@word_mpld 0026  
                                   __CFG_LVP$ON 0000                             _adcThresholdHandler 108E  
                                           l810 0A54                                             l808 09F1  
                                           _bpm 0137                         __size_of_PMD_Initialize 000A  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                  ___flmul@aexp 004B                                    ___flmul@bexp 0050  
                                   ?_LED_setHSL 00AF                                    ___flmul@sign 004A  
                                  ___flmul@temp 0055                                    ___flmul@prod 0051  
                                 __CFG_BBEN$OFF 0000                                 __end_of_DMX_ISR 135F  
                              __end_of_I2C1_ISR 0CA4                                    ___fltol@exp1 00AE  
                                          l1017 064D                                            l1018 0680  
                                          l1048 165A                                            l1513 0EFE  
                                          l1409 176E                                            l1530 0F81  
                                          l4002 0CBE                                            l1515 0EE1  
                                          l1509 0E6B                                            l4022 0CE2  
                                          l4006 0CC1                                            l1551 0FF8  
                                          l1543 0FE0                                            l4008 0CC9  
                                          l1617 060D                                            l1377 15AF  
                                          l5002 109A                                            l1386 08A2  
                                          l4122 0E15                                            l4042 0D18  
                                          l4026 0CE5                                            l1378 15C9  
                                          l1643 0921                                            l5020 16BC  
                                          l3500 0E63                                            l4108 0DDC  
                                          l4036 0D0C                                            l4140 0930  
                                          l1389 08F0                                            l1565 0CED  
                                          l5022 16C2                                            l1662 12E8  
                                          l4062 0D5F                                            l4070 0D41  
                                          l4134 0919                                            l5016 16B5  
                                          l5032 13D0                                            l5104 0443  
                                          l4072 0D7D                                            l1656 096B  
                                          l4144 0934                                            l1657 0975  
                                          l1649 0957                                            l3506 0E75  
                                          l1586 0DF4                                            l4154 0969  
                                          l4146 0944                                            l1587 0E0C  
                                          l5300 146F                                            l5052 1272  
                                          l3620 0FB2                                            l3612 0FA7  
                                          l5212 071B                                            l4068 0D78  
                                          l4156 095C                                            l1589 0E19  
                                          l5302 147B                                            l5038 12E2  
                                          l3606 0FA0                                            l3614 0FA9  
                                          l4094 0DB1                                            l4086 0D83  
                          _ADCC_StartConversion 10CD                                            l5312 1496  
                                          l3624 0FB4                                            l3544 0EE9  
                                          l3536 0EB1                                            l3472 0E38  
                                          l4088 0D9A                                            l4168 0990  
                                          l5330 13F6                                            l5074 0408  
                                          l3642 0FF0                                            l3570 0F1E  
                                          l3562 0F0C                                            l3546 0EEB  
                                          l3554 0EF9                                            l5218 074F  
                                          l4098 0DB3                                            l5308 148D  
                                          l5324 13DE                                            l5164 05A3  
                                          l5156 0575                                            l5092 042B  
                                          l5076 040A                                            l3572 0F20  
                                          l3580 0F2F                                            l3476 0E3B  
                                          l3900 15DB                                            l5260 1737  
                                          l5404 03DD                                            l5326 13EA  
                                          l5334 13FF                                            l5182 05E3  
                                          l5158 058C                                            l5094 042D  
                                          l5078 0412                                            l3646 0FF4  
                                          l3590 0F79                                            l3478 0E43  
                                          l5360 0844                                            l5168 05A5  
                                          l5096 0435                                            l3496 0E60  
                                          l5256 172E                                            l3682 08D6  
                                          l5178 05CE                                            l5188 05FA  
                                          l5276 175C                                            l5380 00E8  
                                          l5366 0848                                            l5606 10EF  
                                          l3678 08BC                                            l3598 0F93  
                                          l5286 177B                                            l5278 176A  
                                          l5704 0A9F                                            l5546 1193  
                                          l5386 01AB                                            l5634 1668  
                                          l5626 1656                                            l5740 0B21  
                                          l5724 0ADA                                            l5708 0AA6  
                                          l5572 130C                                            l5726 0AED  
                                          l5566 1307                                            l5750 1714  
                                          l5594 11A3                                            l5586 11CE  
                                          l5826 17DB                                            l5818 17C2  
                                          l5850 14C5                                            l5754 171D  
                                          l5772 09BB                                            l5596 11A7  
                                          l5588 11D2                                            l5792 0A3E  
                                          l5784 0A12                                            l5778 09EB  
                                          l5858 14D0                                            l5886 153C  
                                ?_TM1650_enable 0070                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u4015 093D                                            u4035 0951  
                                          u2700 0ED1                                            u4055 0963  
                                          u5105 12E9                                            u2813 0F41  
                                          u2805 0F24                                            u5215 04B9  
                                          u2735 0EEF                                            u3455 15D7  
                                          u4095 097D                                            u5225 04E8  
                                          u2690 0ED0                                            u5235 053E  
                                          _PMD0 0796                                            u5245 0555  
                                          u2685 0EC5                                            _PMD1 0797  
                                          _PMD2 0798                                            u5255 0564  
                                          u2855 0F94                                            u3815 0D59  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u5265 0578                                            u3825 0D6D  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u5355 05BC                                            u2955 0FCB  
                                          _PMD7 079D                                            u5605 148E  
                                          u5365 05D7                                            u5285 0581  
                                          u5525 1772                                            u6157 1526  
                                          u5375 05ED                                            u3855 0D86  
                                          u3945 0DCA                                            u3785 0D49  
                                          u5465 1740                                            u5810 1673  
                                          u5395 1231                                            u5635 13E1  
                                          u3955 0DE5                                            u3875 0D8F  
                                          u3795 0D50                                            u5565 1472  
                                          u3965 0DFE                                            u5655 13F0  
                                          u5495 175D                                            u5585 147C  
                                          u5665 13F7                                            u5595 1486  
                                          u5835 0A88                                            u5695 0884  
                                          u5945 09BE                                            u5954 09DD  
                                          u5955 09DC                                            u5885 0B02  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0070                                   ?_BUTTONS_task 0070  
                          ?_adcThresholdHandler 0070                                            _isOn 014F  
                                          _main 150E                                            _down 014D  
                                          _init 12B7                                            _menu 014B  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0039  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 123F  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0015  
                          __size_of_address_inc 0016                  I2C1_MasterWriteTRBBuild@length 0021  
                       __end_of_TMR0_Initialize 1185                                      _i2c1_state 00ED  
                ??_TMR0_DefaultInterruptHandler 0070                  __size_of_OSCILLATOR_Initialize 0009  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 1127  
                      __end_of_TM1650_isEnabled 108B                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 0120                                   ___fltol@sign1 00AD  
                                         _ADCAP 010E                                           _ADACT 0117  
                               __end_of___fladd 1000                                __end_of_LED_task 1724  
                                         ?_main 0070                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 0E1E  
                                         _ADREF 0116                               __end_of_I2C1_Stop 1223  
                                 __CFG_WDTE$OFF 0000                                           _ADRPT 009A  
                               __end_of___flmul 061A                                 __end_of___flsub 1297  
                               __end_of___fltol 178A                                __end_of_DMX_task 14D2  
                                         _LATB6 00CE                                 __end_of___lwdiv 149B  
                    _ADCC_ADTI_InterruptHandler 015F                                           i1l106 12B4  
                                         i1l402 0B58                                           i1l413 0BB0  
                                         i1l414 0BBC                                           i1l431 0C2E  
                                         i1l407 0B8D                                           i1l432 0C3C  
                                         i1l424 0BFE                                           i1l408 0B8E  
                                         i1l280 000E                                 __end_of___lwmod 1404  
                                         i1l443 116E                                           i1l283 0017  
                                         i1l436 0C63                                           i1l428 0C1F  
                                         i1l285 001E                                           i1l294 0037  
                                         i1l287 0028                                           i1l289 0032  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                 __end_of_isDMXOn 108E  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                           _TXREG 011A  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1088  
                     ?_TMR0_SetInterruptHandler 0020                            _EUSART1_Transmit_ISR 1297  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 080D  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                 __end_of_initLED 13AD  
                                         _delay 016C                                           _dmxOn 0147  
                                         _color 01D0                                           _count 0141  
                                         _enter 014C                           ?_ADCC_StartConversion 0070  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0070  
                             __end_of_BEAT_init 11F1                               __end_of_BEAT_task 0B44  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0003     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0070             ?_EUSART1_DefaultFramingErrorHandler 0070  
            _EUSART1_DefaultFramingErrorHandler 0002                 I2C1_MasterWriteTRBBuild@address 0022  
                               __initialization 003B                            TM1650_setDigit@digit 003A  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                    __end_of_EUSART1_Initialize 1594                                    __end_of_main 154C  
                                  __end_of_init 12D7                                 _CONTROLLER_init 10B3  
                           __size_of_LED_setHSL 035E                                __end_of_HueToRGB 07FE  
                               _CONTROLLER_task 178A                                   ?_LED_setColor 0020  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 10DF  
                   ?_INTERRUPT_InterruptManager 0070                                     _i2c1_object 0128  
                                        ??_main 01DE                                          ??_init 0023  
                                     ??_DMX_ISR 0070                           ?_EUSART1_Transmit_ISR 0070  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR1L 030C                                          _CCPR3H 0315  
                                        _CCPR2L 0310                                          _CCPR4H 0319  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l4340 1221                                          i1l4600 0C0C  
                                        i1l4620 0C43                                          i1l4534 0B80  
                                        i1l4640 0C6E                                          i1l4624 0C4A  
                                        i1l4608 0C22                                          i1l4552 0BAA  
                                __CFG_WDTCCS$SC 0000                                          i1l4482 1454  
                                        i1l4546 0B9A                                          i1l4538 0B87  
                                        i1l4476 1445                                          i1l4636 0C67  
                                        i1l4486 1463                                          i1l4638 0C6A  
                                        i1l4566 0BD5                                          i1l4646 0C77  
                                        i1l4586 0BF3                                          i1l4854 1346  
                                        i1l4856 134A                                          i1l5926 0C80  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                          _TRISC3 00A3  
                                        _TRISB6 009E                                          _TRISC4 00A4  
                                        _TRISC6 00A6                                          _TRISC7 00A7  
                              __end_of___xxtofl 0999                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00EA  
                                        ___flge 0887                                          ___fleq 1594  
                                ??_LED_setColor 0023                     __end_of_TM1650_fastPrintNum 0887  
                             _ADCC_ThresholdISR 1153                                       ??___fladd 0031  
                                     ??___fldiv 0036                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0045                                       ??___flsub 005F  
                                     ??___fltol 00A8                                       ??___lwdiv 0024  
                                     ??___lwmod 0024                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                       ??_isDMXOn 0020  
                              ?_TMR0_Initialize 0070                              ?_ADCC_ThresholdISR 0070  
                                     ?_I2C1_ISR 0070                          __size_of_BEAT_detected 0009  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 013B                            __size_of_TM1650_init 0004  
                                     ??_initLED 0020                                 _ADCC_Initialize 135F  
                                _PMD_Initialize 1127                                    ??_CLOCK_init 0022  
                                  __pdataCOMMON 007A                              __size_of__Umul8_16 0020  
                           ??_ADCC_ThresholdISR 0070                          ??_ADCC_StartConversion 0020  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 10C4  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                 _eusart1RxBuffer 01A0  
                               _eusart1TxBuffer 01A8                                      ___flge@ff1 0057  
                                    ___flge@ff2 005B                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 11AF  
                                  ___xxtofl@val 0020                                      ___fleq@ff1 0020  
                                    ___fleq@ff2 0024                         __end_of__initialization 008C  
                       __end_of_CONTROLLER_init 10BB                         __end_of_CONTROLLER_task 1800  
                            ?_SYSTEM_Initialize 0070                                       ?_LED_task 0070  
                                    ___fltol@f1 00A4                                       ?_DMX_task 0070  
                                _i2c1_trb_count 00EC                  __size_of_EUSART1_RxDataHandler 0018  
                     __end_of_ADCC_ThresholdISR 1160                   __end_of_EUSART1_RxDataHandler 1209  
                            __size_of_fadeColor 0052                           _I2C1_FunctionComplete 1160  
                          _I2C1_BusCollisionISR 1085                                  __pcstackCOMMON 0070  
                            __end_of_CLOCK_init 10B3                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK2 10A5                                    __pidataBANK3 1131  
                           ??_SYSTEM_Initialize 0023                                       ?_TMR0_ISR 0070  
                   TM1650_fastPrintNum@numWrite 003E                                      ??_I2C1_ISR 0072  
                          __end_of_BUTTONS_init 1628                          __end_of_PMD_Initialize 1131  
                          __end_of_BUTTONS_task 0A6B                          ??_EUSART1_Transmit_ISR 0070  
                   __end_of_EUSART1_Receive_ISR 1466                                    ??_LED_setHSL 00B9  
                             _thresholdExceeded 00E9                     ADCC_StartConversion@channel 0020  
                             LED_setColor@green 0020                               LED_setColor@white 0021  
                     __end_of_SYSTEM_Initialize 11C4                                   _eusart1RxHead 0077  
                                 _eusart1TxHead 006F                                   _eusart1RxTail 0076  
                                    __pbssBANK0 006F                                      __pbssBANK1 00E9  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                     ?_HueToRGB 0063                                   _eusart1TxTail 00EF  
             _EUSART1_TxDefaultInterruptHandler 0167                 ??_EUSART1_SetRxInterruptHandler 0022  
                                 _BEAT_detected 10E8                                      ??_LED_task 00DE  
                                    ??_DMX_task 0022                               __end_of__Umul8_16 12F7  
                         ?_I2C1_BusCollisionISR 0070                 __end_of_EUSART1_SetErrorHandler 10FA  
                                    __pmaintext 150E                                         ?___flge 0057  
                                       ?___fleq 0020                __end_of_TMR0_SetInterruptHandler 10E8  
                                    ??_TMR0_ISR 0070                                 __CFG_PPS1WAY$ON 0000  
                                  LED_setHSL@v1 00CB                                    LED_setHSL@v2 00D3  
                              writeData@address 0032                         __end_of_ADCC_Initialize 1385  
                            __end_of_LED_setHSL 03EE                                      __pintentry 0004  
                               _I2C1_Initialize 123F                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 10C4           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 10BB                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0070                               ?_TM1650_isEnabled 0070  
        __end_of_EUSART1_SetFramingErrorHandler 1103         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 10FA                                         _DMX_ISR 133B  
                                     ?___xxtofl 0020                              ??_TM1650_isEnabled 0020  
                  ?_EUSART1_DefaultErrorHandler 0070                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       _I2C1_Stop 1209  
                             __end_of_fadeColor 167A                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                      _dmxPointer 0131  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                          __end_of_LED_setColor 150E                               __end_of_charTable 1860  
                           _CLOCK_timerCallback 109F                                      ??_HueToRGB 006F  
                                ?_BEAT_detected 0070                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0042  
                              ?_CONTROLLER_init 0070                                   ??_address_inc 0042  
                              ?_CONTROLLER_task 0070                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0070                                       _BEAT_init 11DA  
                 __size_of_I2C1_MasterTRBInsert 0055                                       _BEAT_task 0A6B  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 00EB  
                               __size_of___flge 007C                                 __size_of___fleq 0049  
                                       ___fladd 0E1E                                         ___fldiv 0CA4  
                          ?_CLOCK_timerCallback 0070                                         ___flmul 03EE  
                                       ___flsub 1278                                         ___fltol 1724  
                                       ___lwdiv 1466                                         ___lwmod 13D7  
                                       _address 007A                                         _isDMXOn 108B  
                                       _dmxData 25EF                                         __ptext1 1385  
                                       __ptext2 1096                                         __ptext3 11AF  
                                       __ptext4 1171                                         __ptext5 1127  
                                       __ptext6 1404                                         __ptext7 111E  
                                       __ptext8 123F                                         __ptext9 154C  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                                       _initLED 1385                                         _lastRun 0135  
                                  DMX_task@time 0024                           _OSCILLATOR_Initialize 111E  
                                     _T2CONbits 028E                                         _buttons 01B0  
                                    ??___xxtofl 0024                              _EUSART1_Initialize 154C  
                      ??_PIN_MANAGER_Initialize 0020                                 __CFG_WRTSAF$OFF 0000  
                                    ?_I2C1_Stop 0070                     __end_of_adcThresholdHandler 1092  
                 ??_EUSART1_DefaultErrorHandler 0071                      __size_of_SYSTEM_Initialize 0015  
                          I2C1_ISR@pi2c_buf_ptr 0152                                         clrloop0 113C  
                          end_of_initialization 008C                             ?_EUSART1_Initialize 0070  
                                       init@btn 0024                                         init@pin 0022  
                                       init_ram 1147                     _EUSART1_OverrunErrorHandler 01DC  
                                       initloop 1148                          ??_I2C1_BusCollisionISR 0070  
                       __end_of_I2C1_Initialize 125B           __end_of_EUSART1_SetRxInterruptHandler 1115  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 110C  
                                    ?_BEAT_init 0070                                      ?_BEAT_task 0070  
                         __size_of_BUTTONS_init 004B                           __size_of_BUTTONS_task 00D2  
                         ??_CLOCK_timerCallback 0070                             __end_of_address_dec 11AF  
                           __end_of_address_inc 11DA                                ?_ADCC_Initialize 0070  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                      _TMR0_SetInterruptHandler 10DF                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 0160                               __end_of_writeData 1278  
                                   ___fladd@grs 003C                         ?_ADCC_SetUpperThreshold 0020  
                                 ___xxtofl@sign 0028                                     ___fldiv@grs 0042  
                                   ___fldiv@rem 003B                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 119A               I2C1_ISR@i2c_10bit_address_restart 0150  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 004C  
                                  _BUTTONS_init 15DD                                    _BUTTONS_task 0999  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                       I2C1_MasterWrite@address 0028            __size_of_EUSART1_DefaultErrorHandler 0003  
                             __size_of_LED_task 0055                               __size_of_DMX_task 0037  
                ??_ADCC_DefaultInterruptHandler 0070                                  __end_of___flge 0903  
                                __end_of___fleq 15DD                                   ??_TM1650_init 0035  
                       I2C1_MasterWrite@trBlock 0158                                   __pidataCOMMON 07FE  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0071  
                      __size_of_TM1650_setDigit 001C                          ?_OSCILLATOR_Initialize 0070  
                __end_of_ADCC_SetUpperThreshold 10CD                    __size_of_TM1650_fastPrintNum 007A  
                         __size_of_LED_setColor 003C                                    _lastDetected 0149  
                           start_initialization 003B                                     ??_I2C1_Stop 0070  
                      __size_of_TMR0_Initialize 0014                 __size_of_PIN_MANAGER_Initialize 002D  
                           TM1650_setDigit@data 0034   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 12F7                                     _fadeAmmount 016A  
                            ?_BUTTONS_isClicked 0020                               __size_of_HueToRGB 01E4  
                                   _address_dec 119A                                     _address_inc 11C4  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0070  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                                      ??___flge 005F                                        ??___fleq 0028  
                           ??_BUTTONS_isClicked 0023                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 11F1                                    _LED_setColor 14D2  
                ?_EUSART1_SetRxInterruptHandler 0020                                       __Umul8_16 12D7  
                                   __pdataBANK2 016A                                     __pdataBANK3 01D0  
                                 _CLOCK_getTime 10D6                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00EE                                       ___fladd@a 002D  
                                     ___fladd@b 0029                                     _changeColor 0145  
                                     ___fldiv@a 002E                                       ___fldiv@b 0032  
                                   __pbssBIGRAM 25EF                                        ?_DMX_ISR 0070  
                           __end_of_TM1650_init 109A                                       ___flmul@a 0041  
                                     ___flmul@b 003D                                     __pbssCOMMON 0076  
                                     ___flsub@a 0057                                       ___flsub@b 005B  
             _EUSART1_RxDefaultInterruptHandler 0165                                       ___latbits 0003  
                 __size_of_EUSART1_Transmit_ISR 0020                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00A0                                   __pcstackBANK3 01DE  
                                 _i2c1_tr_queue 015C                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 1318                                       _fadeColor 1628  
               ??_EUSART1_SetTxInterruptHandler 0022                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                         ??_I2C1_FunctionComplete 0070  
                     __size_of_TM1650_isEnabled 0003                    __size_of_EUSART1_Receive_ISR 0035  
                              LED_setColor@blue 0022                                       _charTable 1800  
                         _TMR0_InterruptHandler 0161                                       __pnvBANK2 015F  
                                     __pnvBANK3 01DA                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 1404                                        ?___fladd 0029  
                                      ?___fldiv 002E                                        ?___flmul 003D  
                                      ?___flsub 0057                                        ?___fltol 00A4  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0020                                  ?_CLOCK_getTime 0020  
                                      ?_isDMXOn 0070                                        _I2C1_ISR 0B44  
                                 LED_setHSL@hue 00CF                                   LED_setHSL@hsl 00AF  
                                 LED_setHSL@rgb 00D7                    ??_INTERRUPT_InterruptManager 0076  
                               writeData@status 0033                                _I2C1_MasterWrite 13AD  
                                      _BAUD1CON 011F                                        ?_initLED 0070  
                  __end_of_I2C1_MasterTRBInsert 16CF      __end_of_EUSART1_DefaultOverrunErrorHandler 1096  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0070  
           ?_EUSART1_DefaultOverrunErrorHandler 0070              _EUSART1_DefaultOverrunErrorHandler 1092  
                          _EUSART1_ErrorHandler 01DA                         _EUSART1_SetErrorHandler 10F1  
                             ??_TM1650_setDigit 0037                                ___lwdiv@quotient 0026  
                                      _T2CLKCON 0290                                      ?_fadeColor 0070  
      __end_of_I2C1_WaitForLastPacketToComplete 109F       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0070  
              _I2C1_WaitForLastPacketToComplete 109A                          I2C1_MasterRead@trBlock 0154  
                             ??_TMR0_Initialize 0022         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0023                                       clear_ram0 113B  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 16CF  
                                      _DMX_task 149B             __size_of_INTERRUPT_InterruptManager 0035  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                          TM1650_fastPrintNum@i 0040                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0070                             CONTROLLER_task@time 0044  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 0800  
                                      _SSP1STAT 018F                        __size_of_CONTROLLER_init 0008  
                      __size_of_CONTROLLER_task 0076                                     _TM1650_init 1096  
                                     _threshold 016E                                      _ADCON0bits 0111  
                                    _ADCON1bits 0112                                      _ADCON2bits 0113  
                                    _ADCON3bits 0114                                __size_of_DMX_ISR 0024  
                                     _writeData 125B                      __size_of_BUTTONS_isClicked 0021  
                                      _HueToRGB 061A                    __size_of_adcThresholdHandler 0004  
                   __end_of_CLOCK_timerCallback 10A5                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 080D                                      _ADSTATbits 0115  
                            controller@lastTime 013D           __end_of_EUSART1_SetTxInterruptHandler 111E  
        __size_of_EUSART1_SetTxInterruptHandler 0009                   _EUSART1_SetTxInterruptHandler 1115  
                 __size_of_I2C1_BusCollisionISR 0003                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 0151                                 _LED_setHSL$2790 00C7  
                               _LED_setHSL$2791 00BF                                 _LED_setHSL$2788 00BB  
                               _LED_setHSL$2789 00C3                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fladd 01E2  
                              __size_of___fldiv 017A                                __size_of___flmul 022C  
                              __size_of___flsub 001F                                __size_of___fltol 0066  
                   __size_of_EUSART1_Initialize 0048                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                                __size_of_isDMXOn 0003  
              __end_of_I2C1_MasterWriteTRBBuild 133B                            ?_TM1650_fastPrintNum 003B  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                               LED_setColor@lo1 0027                                 LED_setColor@lo2 002B  
                           TM1650_enable@enable 0034                                 LED_setColor@lo3 002F  
                               LED_setColor@lo4 0033             __end_of_EUSART1_DefaultErrorHandler 1085  
                   _EUSART1_DefaultErrorHandler 1082                                 LED_setColor@red 0035  
                                   _currentTime 0143                                      _CLOCK_init 10AB  
                              __size_of_initLED 0028                                        ___xxtofl 0903  
                                    _T0CON0bits 059E                        __size_of_ADCC_Initialize 0026  
                               ___lwdiv@divisor 0020                             I2C1_ISR@i2c_address 0078  
                               ___lwdiv@counter 0025                                        _detected 014A  
                                    ?_writeData 002E                                        __ptext10 1115  
                                      __ptext11 110C                                        __ptext20 0903  
                                      __ptext12 1103                                        __ptext21 1724  
                                      __ptext13 10FA                                        __ptext30 0887  
                                      __ptext22 1594                                        __ptext14 10F1  
                                      __ptext31 10E8                                        __ptext23 0CA4  
                                      __ptext15 135F                                        __ptext40 13D7  
                                      __ptext32 149B                                        __ptext24 14D2  
                                      __ptext16 16CF                                        __ptext41 1223  
                                      __ptext33 178A                                        __ptext25 061A  
                                      __ptext17 108B                                        __ptext50 15DD  
                                      __ptext42 125B                                        __ptext34 11C4  
                                      __ptext26 1278                                        __ptext18 1628  
                                      __ptext51 12B7                                        __ptext43 13AD  
                                      __ptext35 119A                                        __ptext27 0E1E  
                                      __ptext19 0090                                        __ptext52 0A6B  
                                      __ptext44 1318                                        __ptext36 1185  
                                      __ptext28 03EE                                        __ptext61 0800  
                                      __ptext53 1466                                        __ptext45 167A  
                                      __ptext37 12F7                                        __ptext29 12D7  
                                      __ptext70 1431                                        __ptext62 109F  
                                      __ptext54 1088                                        __ptext46 109A  
                                      __ptext38 10B3                                        __ptext71 1092  
                                      __ptext63 0003                                        __ptext55 10D6  
                                      __ptext47 10AB                                        __ptext39 080D  
                                      __ptext72 0002                                        __ptext64 0B44  
                                      __ptext56 11DA                                        __ptext48 10DF  
                                      __ptext73 1082                                        __ptext65 1209  
                                      __ptext57 10CD                                        __ptext49 0999  
                                      __ptext74 11F1                                        __ptext66 1160  
                                      __ptext58 10C4                                        __ptext75 1153  
                                      __ptext67 1085                                        __ptext59 10BB  
                                      __ptext76 1081                                        __ptext68 1297  
                                      __ptext77 108E                                        __ptext69 133B  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _offCheck 0148                                     ??_fadeColor 00DA  
                         __end_of_BEAT_detected 10F1                                        _lastBeat 0139  
                                      _lastTime 013F                                _TM1650_isEnabled 1088  
                                 __size_of_main 003E                                   __size_of_init 0020  
                                  ?_address_dec 0070            __end_of_TMR0_DefaultInterruptHandler 0004  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 0003  
                                  ?_address_inc 0070                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 167A                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                    __end_of_ADCC_StartConversion 10D6  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0039  
                    _INTERRUPT_InterruptManager 0004                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 0163                             _EUSART1_Receive_ISR 1431  
                         ??_TM1650_fastPrintNum 003D                               TM1650_setDigit@dp 0035  
                                    _INTCONbits 000B                               ??_CONTROLLER_init 0042  
                             ??_CONTROLLER_task 0042                                        init@port 0020  
                                 _HueToRGB$2787 00A0                                      _LED_setHSL 0090  
          __end_of_ADCC_DefaultInterruptHandler 1082           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1081                                        intlevel1 0000  
                                _thresholdCount 0133                            ?_EUSART1_Receive_ISR 0070  
                                 writeData@data 002E                                ___lwmod@dividend 0022  
                       ?_PIN_MANAGER_Initialize 0070                        __end_of_I2C1_MasterWrite 13D7  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 110C         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1103                   __end_of_I2C1_FunctionComplete 1171  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 12B7  
                                   led@lastTime 012D                   ?_TMR0_DefaultInterruptHandler 0070  
                        TM1650_fastPrintNum@num 003B  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 1223  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 0153  
                                 __pstringtext1 1800                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0020                                     ?_CLOCK_init 0070  
                               _TMR0_Initialize 1171                                 ___lwmod@counter 0025  
                                   dmx@lastTime 012F                                   fadeColor@time 00DC  
                      _I2C1_MasterWriteTRBBuild 1318                                     ??_writeData 002F  
                                    _TX1STAbits 011E                                   ___fladd@signs 0039  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0071  
                __end_of_PIN_MANAGER_Initialize 1431                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1185                                    ___fladd@aexp 003A  
                                  ___fladd@bexp 003B                              __size_of_I2C1_Stop 001A  
                 ?_ADCC_DefaultInterruptHandler 0070                                     _toggleCheck 0146  
                          __Umul8_16@multiplier 0028                         ??_EUSART1_RxDataHandler 0070  
                             __Umul8_16@product 0024  
