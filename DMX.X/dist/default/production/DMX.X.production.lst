

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 23:35:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	intentry,global,class=CODE,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,delta=2
   107                           	dabs	1,0xCA0,32
   108                           	dabs	1,0xC20,80
   109                           	dabs	1,0xBA0,80
   110                           	dabs	1,0xB20,80
   111                           	dabs	1,0xAA0,80
   112                           	dabs	1,0xA20,80
   113                           	dabs	1,0x9A0,80
   114                           	dabs	1,0x96F,1
   115                           	dabs	1,0x25EF,0,_dmxData
   116                           	dabs	1,0x7E,2
   117  0000                     
   118                           ; Version 2.05
   119                           ; Generated 20/12/2018 GMT
   120                           ; 
   121                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   122                           ; All rights reserved.
   123                           ; 
   124                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   125                           ; 
   126                           ; Redistribution and use in source and binary forms, with or without modification, are
   127                           ; permitted provided that the following conditions are met:
   128                           ; 
   129                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   130                           ;        conditions and the following disclaimer.
   131                           ; 
   132                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   133                           ;        of conditions and the following disclaimer in the documentation and/or other
   134                           ;        materials provided with the distribution.
   135                           ; 
   136                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   137                           ;        software without specific prior written permission.
   138                           ; 
   139                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   140                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   141                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   142                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   143                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   144                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   145                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   146                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   147                           ; 
   148                           ; 
   149                           ; Code-generator required, PIC16F18446 Definitions
   150                           ; 
   151                           ; SFR Addresses
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  008C                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  010F                     	;# 
   207  0110                     	;# 
   208  0111                     	;# 
   209  0112                     	;# 
   210  0113                     	;# 
   211  0114                     	;# 
   212  0115                     	;# 
   213  0116                     	;# 
   214  0117                     	;# 
   215  0118                     	;# 
   216  0119                     	;# 
   217  0119                     	;# 
   218  0119                     	;# 
   219  011A                     	;# 
   220  011A                     	;# 
   221  011A                     	;# 
   222  011B                     	;# 
   223  011B                     	;# 
   224  011B                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011C                     	;# 
   228  011C                     	;# 
   229  011C                     	;# 
   230  011D                     	;# 
   231  011D                     	;# 
   232  011D                     	;# 
   233  011E                     	;# 
   234  011E                     	;# 
   235  011E                     	;# 
   236  011F                     	;# 
   237  011F                     	;# 
   238  011F                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  018E                     	;# 
   244  018F                     	;# 
   245  0190                     	;# 
   246  0191                     	;# 
   247  0192                     	;# 
   248  0196                     	;# 
   249  0197                     	;# 
   250  0198                     	;# 
   251  0199                     	;# 
   252  019A                     	;# 
   253  019B                     	;# 
   254  019C                     	;# 
   255  020C                     	;# 
   256  020D                     	;# 
   257  020E                     	;# 
   258  020E                     	;# 
   259  020F                     	;# 
   260  020F                     	;# 
   261  0210                     	;# 
   262  0210                     	;# 
   263  0211                     	;# 
   264  0211                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0214                     	;# 
   268  0214                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  0218                     	;# 
   276  0219                     	;# 
   277  021A                     	;# 
   278  021A                     	;# 
   279  021B                     	;# 
   280  021B                     	;# 
   281  021C                     	;# 
   282  021C                     	;# 
   283  021D                     	;# 
   284  021D                     	;# 
   285  021E                     	;# 
   286  021F                     	;# 
   287  028C                     	;# 
   288  028C                     	;# 
   289  028D                     	;# 
   290  028D                     	;# 
   291  028E                     	;# 
   292  028F                     	;# 
   293  0290                     	;# 
   294  0291                     	;# 
   295  0292                     	;# 
   296  0292                     	;# 
   297  0293                     	;# 
   298  0293                     	;# 
   299  0294                     	;# 
   300  0295                     	;# 
   301  0296                     	;# 
   302  0297                     	;# 
   303  0298                     	;# 
   304  0298                     	;# 
   305  0299                     	;# 
   306  0299                     	;# 
   307  029A                     	;# 
   308  029B                     	;# 
   309  029C                     	;# 
   310  029D                     	;# 
   311  029F                     	;# 
   312  030C                     	;# 
   313  030C                     	;# 
   314  030D                     	;# 
   315  030E                     	;# 
   316  030F                     	;# 
   317  0310                     	;# 
   318  0310                     	;# 
   319  0311                     	;# 
   320  0312                     	;# 
   321  0313                     	;# 
   322  0314                     	;# 
   323  0314                     	;# 
   324  0315                     	;# 
   325  0316                     	;# 
   326  0317                     	;# 
   327  0318                     	;# 
   328  0318                     	;# 
   329  0319                     	;# 
   330  031A                     	;# 
   331  031B                     	;# 
   332  038C                     	;# 
   333  038C                     	;# 
   334  038D                     	;# 
   335  038E                     	;# 
   336  0390                     	;# 
   337  0390                     	;# 
   338  0391                     	;# 
   339  0392                     	;# 
   340  048C                     	;# 
   341  048C                     	;# 
   342  048D                     	;# 
   343  048E                     	;# 
   344  048F                     	;# 
   345  048F                     	;# 
   346  0490                     	;# 
   347  0491                     	;# 
   348  0492                     	;# 
   349  0492                     	;# 
   350  0493                     	;# 
   351  0494                     	;# 
   352  0495                     	;# 
   353  0495                     	;# 
   354  0496                     	;# 
   355  0497                     	;# 
   356  0498                     	;# 
   357  0499                     	;# 
   358  049A                     	;# 
   359  049B                     	;# 
   360  049C                     	;# 
   361  049D                     	;# 
   362  058C                     	;# 
   363  058C                     	;# 
   364  058D                     	;# 
   365  058E                     	;# 
   366  058F                     	;# 
   367  058F                     	;# 
   368  0590                     	;# 
   369  0591                     	;# 
   370  0592                     	;# 
   371  0593                     	;# 
   372  059C                     	;# 
   373  059C                     	;# 
   374  059D                     	;# 
   375  059D                     	;# 
   376  059E                     	;# 
   377  059F                     	;# 
   378  060C                     	;# 
   379  060C                     	;# 
   380  060D                     	;# 
   381  060D                     	;# 
   382  060E                     	;# 
   383  060F                     	;# 
   384  0610                     	;# 
   385  0611                     	;# 
   386  0612                     	;# 
   387  0613                     	;# 
   388  0614                     	;# 
   389  0616                     	;# 
   390  0616                     	;# 
   391  0617                     	;# 
   392  0617                     	;# 
   393  0618                     	;# 
   394  0619                     	;# 
   395  061A                     	;# 
   396  061B                     	;# 
   397  061C                     	;# 
   398  061D                     	;# 
   399  061E                     	;# 
   400  070C                     	;# 
   401  070D                     	;# 
   402  070E                     	;# 
   403  070F                     	;# 
   404  0710                     	;# 
   405  0711                     	;# 
   406  0712                     	;# 
   407  0713                     	;# 
   408  0714                     	;# 
   409  0716                     	;# 
   410  0717                     	;# 
   411  0718                     	;# 
   412  0719                     	;# 
   413  071A                     	;# 
   414  071B                     	;# 
   415  071C                     	;# 
   416  071D                     	;# 
   417  071E                     	;# 
   418  0796                     	;# 
   419  0797                     	;# 
   420  0798                     	;# 
   421  0799                     	;# 
   422  079A                     	;# 
   423  079B                     	;# 
   424  079C                     	;# 
   425  079D                     	;# 
   426  080C                     	;# 
   427  080D                     	;# 
   428  080E                     	;# 
   429  080F                     	;# 
   430  0810                     	;# 
   431  0811                     	;# 
   432  0812                     	;# 
   433  0813                     	;# 
   434  0814                     	;# 
   435  081A                     	;# 
   436  081A                     	;# 
   437  081B                     	;# 
   438  081C                     	;# 
   439  081C                     	;# 
   440  081D                     	;# 
   441  081E                     	;# 
   442  081F                     	;# 
   443  088C                     	;# 
   444  088D                     	;# 
   445  088E                     	;# 
   446  088F                     	;# 
   447  0890                     	;# 
   448  0891                     	;# 
   449  0892                     	;# 
   450  0893                     	;# 
   451  0895                     	;# 
   452  0896                     	;# 
   453  0897                     	;# 
   454  0898                     	;# 
   455  0899                     	;# 
   456  089A                     	;# 
   457  089B                     	;# 
   458  090C                     	;# 
   459  090E                     	;# 
   460  090F                     	;# 
   461  091F                     	;# 
   462  098F                     	;# 
   463  098F                     	;# 
   464  0990                     	;# 
   465  0991                     	;# 
   466  0992                     	;# 
   467  0993                     	;# 
   468  0994                     	;# 
   469  0995                     	;# 
   470  0996                     	;# 
   471  0997                     	;# 
   472  1E0F                     	;# 
   473  1E10                     	;# 
   474  1E11                     	;# 
   475  1E12                     	;# 
   476  1E13                     	;# 
   477  1E14                     	;# 
   478  1E15                     	;# 
   479  1E16                     	;# 
   480  1E17                     	;# 
   481  1E18                     	;# 
   482  1E19                     	;# 
   483  1E1A                     	;# 
   484  1E1B                     	;# 
   485  1E1C                     	;# 
   486  1E1D                     	;# 
   487  1E1E                     	;# 
   488  1E1F                     	;# 
   489  1E20                     	;# 
   490  1E21                     	;# 
   491  1E22                     	;# 
   492  1E23                     	;# 
   493  1E24                     	;# 
   494  1E25                     	;# 
   495  1E26                     	;# 
   496  1E27                     	;# 
   497  1E28                     	;# 
   498  1E29                     	;# 
   499  1E2A                     	;# 
   500  1E2B                     	;# 
   501  1E2C                     	;# 
   502  1E2D                     	;# 
   503  1E2E                     	;# 
   504  1E2F                     	;# 
   505  1E30                     	;# 
   506  1E31                     	;# 
   507  1E32                     	;# 
   508  1E33                     	;# 
   509  1E34                     	;# 
   510  1E35                     	;# 
   511  1E36                     	;# 
   512  1E37                     	;# 
   513  1E8F                     	;# 
   514  1E90                     	;# 
   515  1E91                     	;# 
   516  1E92                     	;# 
   517  1E93                     	;# 
   518  1E94                     	;# 
   519  1E95                     	;# 
   520  1E96                     	;# 
   521  1E97                     	;# 
   522  1E9C                     	;# 
   523  1E9D                     	;# 
   524  1E9E                     	;# 
   525  1EA1                     	;# 
   526  1EA2                     	;# 
   527  1EA3                     	;# 
   528  1EA4                     	;# 
   529  1EA9                     	;# 
   530  1EAA                     	;# 
   531  1EB1                     	;# 
   532  1EB2                     	;# 
   533  1EB8                     	;# 
   534  1EB9                     	;# 
   535  1EBA                     	;# 
   536  1EBB                     	;# 
   537  1EBC                     	;# 
   538  1EBD                     	;# 
   539  1EBE                     	;# 
   540  1EC3                     	;# 
   541  1EC5                     	;# 
   542  1EC6                     	;# 
   543  1EC7                     	;# 
   544  1EC8                     	;# 
   545  1EC9                     	;# 
   546  1ECA                     	;# 
   547  1ECB                     	;# 
   548  1ECB                     	;# 
   549  1ECB                     	;# 
   550  1ECC                     	;# 
   551  1ECC                     	;# 
   552  1ECC                     	;# 
   553  1F10                     	;# 
   554  1F11                     	;# 
   555  1F12                     	;# 
   556  1F14                     	;# 
   557  1F15                     	;# 
   558  1F1C                     	;# 
   559  1F1D                     	;# 
   560  1F1E                     	;# 
   561  1F1F                     	;# 
   562  1F20                     	;# 
   563  1F21                     	;# 
   564  1F22                     	;# 
   565  1F23                     	;# 
   566  1F24                     	;# 
   567  1F25                     	;# 
   568  1F26                     	;# 
   569  1F27                     	;# 
   570  1F38                     	;# 
   571  1F39                     	;# 
   572  1F3A                     	;# 
   573  1F3B                     	;# 
   574  1F3C                     	;# 
   575  1F3D                     	;# 
   576  1F3E                     	;# 
   577  1F3F                     	;# 
   578  1F43                     	;# 
   579  1F44                     	;# 
   580  1F45                     	;# 
   581  1F46                     	;# 
   582  1F47                     	;# 
   583  1F48                     	;# 
   584  1F49                     	;# 
   585  1F4A                     	;# 
   586  1F4E                     	;# 
   587  1F4F                     	;# 
   588  1F50                     	;# 
   589  1F51                     	;# 
   590  1F52                     	;# 
   591  1F53                     	;# 
   592  1F54                     	;# 
   593  1F55                     	;# 
   594  1FE4                     	;# 
   595  1FE5                     	;# 
   596  1FE6                     	;# 
   597  1FE7                     	;# 
   598  1FE8                     	;# 
   599  1FE8                     	;# 
   600  1FE9                     	;# 
   601  1FEA                     	;# 
   602  1FEB                     	;# 
   603  1FED                     	;# 
   604  1FEE                     	;# 
   605  1FEF                     	;# 
   606  0000                     	;# 
   607  0001                     	;# 
   608  0002                     	;# 
   609  0003                     	;# 
   610  0004                     	;# 
   611  0005                     	;# 
   612  0006                     	;# 
   613  0007                     	;# 
   614  0008                     	;# 
   615  0009                     	;# 
   616  000A                     	;# 
   617  000B                     	;# 
   618  000C                     	;# 
   619  000D                     	;# 
   620  000E                     	;# 
   621  0012                     	;# 
   622  0013                     	;# 
   623  0014                     	;# 
   624  0018                     	;# 
   625  0019                     	;# 
   626  001A                     	;# 
   627  008C                     	;# 
   628  008C                     	;# 
   629  008D                     	;# 
   630  008E                     	;# 
   631  008E                     	;# 
   632  008F                     	;# 
   633  0090                     	;# 
   634  0090                     	;# 
   635  0091                     	;# 
   636  0092                     	;# 
   637  0092                     	;# 
   638  0093                     	;# 
   639  0094                     	;# 
   640  0094                     	;# 
   641  0095                     	;# 
   642  0096                     	;# 
   643  0096                     	;# 
   644  0097                     	;# 
   645  0098                     	;# 
   646  0099                     	;# 
   647  009A                     	;# 
   648  009B                     	;# 
   649  009B                     	;# 
   650  009C                     	;# 
   651  009D                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  009F                     	;# 
   655  010C                     	;# 
   656  010C                     	;# 
   657  010D                     	;# 
   658  010E                     	;# 
   659  010F                     	;# 
   660  010F                     	;# 
   661  0110                     	;# 
   662  0111                     	;# 
   663  0112                     	;# 
   664  0113                     	;# 
   665  0114                     	;# 
   666  0115                     	;# 
   667  0116                     	;# 
   668  0117                     	;# 
   669  0118                     	;# 
   670  0119                     	;# 
   671  0119                     	;# 
   672  0119                     	;# 
   673  011A                     	;# 
   674  011A                     	;# 
   675  011A                     	;# 
   676  011B                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011C                     	;# 
   682  011C                     	;# 
   683  011C                     	;# 
   684  011D                     	;# 
   685  011D                     	;# 
   686  011D                     	;# 
   687  011E                     	;# 
   688  011E                     	;# 
   689  011E                     	;# 
   690  011F                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  018C                     	;# 
   696  018D                     	;# 
   697  018E                     	;# 
   698  018F                     	;# 
   699  0190                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0196                     	;# 
   703  0197                     	;# 
   704  0198                     	;# 
   705  0199                     	;# 
   706  019A                     	;# 
   707  019B                     	;# 
   708  019C                     	;# 
   709  020C                     	;# 
   710  020D                     	;# 
   711  020E                     	;# 
   712  020E                     	;# 
   713  020F                     	;# 
   714  020F                     	;# 
   715  0210                     	;# 
   716  0210                     	;# 
   717  0211                     	;# 
   718  0211                     	;# 
   719  0212                     	;# 
   720  0213                     	;# 
   721  0214                     	;# 
   722  0214                     	;# 
   723  0215                     	;# 
   724  0215                     	;# 
   725  0216                     	;# 
   726  0216                     	;# 
   727  0217                     	;# 
   728  0217                     	;# 
   729  0218                     	;# 
   730  0219                     	;# 
   731  021A                     	;# 
   732  021A                     	;# 
   733  021B                     	;# 
   734  021B                     	;# 
   735  021C                     	;# 
   736  021C                     	;# 
   737  021D                     	;# 
   738  021D                     	;# 
   739  021E                     	;# 
   740  021F                     	;# 
   741  028C                     	;# 
   742  028C                     	;# 
   743  028D                     	;# 
   744  028D                     	;# 
   745  028E                     	;# 
   746  028F                     	;# 
   747  0290                     	;# 
   748  0291                     	;# 
   749  0292                     	;# 
   750  0292                     	;# 
   751  0293                     	;# 
   752  0293                     	;# 
   753  0294                     	;# 
   754  0295                     	;# 
   755  0296                     	;# 
   756  0297                     	;# 
   757  0298                     	;# 
   758  0298                     	;# 
   759  0299                     	;# 
   760  0299                     	;# 
   761  029A                     	;# 
   762  029B                     	;# 
   763  029C                     	;# 
   764  029D                     	;# 
   765  029F                     	;# 
   766  030C                     	;# 
   767  030C                     	;# 
   768  030D                     	;# 
   769  030E                     	;# 
   770  030F                     	;# 
   771  0310                     	;# 
   772  0310                     	;# 
   773  0311                     	;# 
   774  0312                     	;# 
   775  0313                     	;# 
   776  0314                     	;# 
   777  0314                     	;# 
   778  0315                     	;# 
   779  0316                     	;# 
   780  0317                     	;# 
   781  0318                     	;# 
   782  0318                     	;# 
   783  0319                     	;# 
   784  031A                     	;# 
   785  031B                     	;# 
   786  038C                     	;# 
   787  038C                     	;# 
   788  038D                     	;# 
   789  038E                     	;# 
   790  0390                     	;# 
   791  0390                     	;# 
   792  0391                     	;# 
   793  0392                     	;# 
   794  048C                     	;# 
   795  048C                     	;# 
   796  048D                     	;# 
   797  048E                     	;# 
   798  048F                     	;# 
   799  048F                     	;# 
   800  0490                     	;# 
   801  0491                     	;# 
   802  0492                     	;# 
   803  0492                     	;# 
   804  0493                     	;# 
   805  0494                     	;# 
   806  0495                     	;# 
   807  0495                     	;# 
   808  0496                     	;# 
   809  0497                     	;# 
   810  0498                     	;# 
   811  0499                     	;# 
   812  049A                     	;# 
   813  049B                     	;# 
   814  049C                     	;# 
   815  049D                     	;# 
   816  058C                     	;# 
   817  058C                     	;# 
   818  058D                     	;# 
   819  058E                     	;# 
   820  058F                     	;# 
   821  058F                     	;# 
   822  0590                     	;# 
   823  0591                     	;# 
   824  0592                     	;# 
   825  0593                     	;# 
   826  059C                     	;# 
   827  059C                     	;# 
   828  059D                     	;# 
   829  059D                     	;# 
   830  059E                     	;# 
   831  059F                     	;# 
   832  060C                     	;# 
   833  060C                     	;# 
   834  060D                     	;# 
   835  060D                     	;# 
   836  060E                     	;# 
   837  060F                     	;# 
   838  0610                     	;# 
   839  0611                     	;# 
   840  0612                     	;# 
   841  0613                     	;# 
   842  0614                     	;# 
   843  0616                     	;# 
   844  0616                     	;# 
   845  0617                     	;# 
   846  0617                     	;# 
   847  0618                     	;# 
   848  0619                     	;# 
   849  061A                     	;# 
   850  061B                     	;# 
   851  061C                     	;# 
   852  061D                     	;# 
   853  061E                     	;# 
   854  070C                     	;# 
   855  070D                     	;# 
   856  070E                     	;# 
   857  070F                     	;# 
   858  0710                     	;# 
   859  0711                     	;# 
   860  0712                     	;# 
   861  0713                     	;# 
   862  0714                     	;# 
   863  0716                     	;# 
   864  0717                     	;# 
   865  0718                     	;# 
   866  0719                     	;# 
   867  071A                     	;# 
   868  071B                     	;# 
   869  071C                     	;# 
   870  071D                     	;# 
   871  071E                     	;# 
   872  0796                     	;# 
   873  0797                     	;# 
   874  0798                     	;# 
   875  0799                     	;# 
   876  079A                     	;# 
   877  079B                     	;# 
   878  079C                     	;# 
   879  079D                     	;# 
   880  080C                     	;# 
   881  080D                     	;# 
   882  080E                     	;# 
   883  080F                     	;# 
   884  0810                     	;# 
   885  0811                     	;# 
   886  0812                     	;# 
   887  0813                     	;# 
   888  0814                     	;# 
   889  081A                     	;# 
   890  081A                     	;# 
   891  081B                     	;# 
   892  081C                     	;# 
   893  081C                     	;# 
   894  081D                     	;# 
   895  081E                     	;# 
   896  081F                     	;# 
   897  088C                     	;# 
   898  088D                     	;# 
   899  088E                     	;# 
   900  088F                     	;# 
   901  0890                     	;# 
   902  0891                     	;# 
   903  0892                     	;# 
   904  0893                     	;# 
   905  0895                     	;# 
   906  0896                     	;# 
   907  0897                     	;# 
   908  0898                     	;# 
   909  0899                     	;# 
   910  089A                     	;# 
   911  089B                     	;# 
   912  090C                     	;# 
   913  090E                     	;# 
   914  090F                     	;# 
   915  091F                     	;# 
   916  098F                     	;# 
   917  098F                     	;# 
   918  0990                     	;# 
   919  0991                     	;# 
   920  0992                     	;# 
   921  0993                     	;# 
   922  0994                     	;# 
   923  0995                     	;# 
   924  0996                     	;# 
   925  0997                     	;# 
   926  1E0F                     	;# 
   927  1E10                     	;# 
   928  1E11                     	;# 
   929  1E12                     	;# 
   930  1E13                     	;# 
   931  1E14                     	;# 
   932  1E15                     	;# 
   933  1E16                     	;# 
   934  1E17                     	;# 
   935  1E18                     	;# 
   936  1E19                     	;# 
   937  1E1A                     	;# 
   938  1E1B                     	;# 
   939  1E1C                     	;# 
   940  1E1D                     	;# 
   941  1E1E                     	;# 
   942  1E1F                     	;# 
   943  1E20                     	;# 
   944  1E21                     	;# 
   945  1E22                     	;# 
   946  1E23                     	;# 
   947  1E24                     	;# 
   948  1E25                     	;# 
   949  1E26                     	;# 
   950  1E27                     	;# 
   951  1E28                     	;# 
   952  1E29                     	;# 
   953  1E2A                     	;# 
   954  1E2B                     	;# 
   955  1E2C                     	;# 
   956  1E2D                     	;# 
   957  1E2E                     	;# 
   958  1E2F                     	;# 
   959  1E30                     	;# 
   960  1E31                     	;# 
   961  1E32                     	;# 
   962  1E33                     	;# 
   963  1E34                     	;# 
   964  1E35                     	;# 
   965  1E36                     	;# 
   966  1E37                     	;# 
   967  1E8F                     	;# 
   968  1E90                     	;# 
   969  1E91                     	;# 
   970  1E92                     	;# 
   971  1E93                     	;# 
   972  1E94                     	;# 
   973  1E95                     	;# 
   974  1E96                     	;# 
   975  1E97                     	;# 
   976  1E9C                     	;# 
   977  1E9D                     	;# 
   978  1E9E                     	;# 
   979  1EA1                     	;# 
   980  1EA2                     	;# 
   981  1EA3                     	;# 
   982  1EA4                     	;# 
   983  1EA9                     	;# 
   984  1EAA                     	;# 
   985  1EB1                     	;# 
   986  1EB2                     	;# 
   987  1EB8                     	;# 
   988  1EB9                     	;# 
   989  1EBA                     	;# 
   990  1EBB                     	;# 
   991  1EBC                     	;# 
   992  1EBD                     	;# 
   993  1EBE                     	;# 
   994  1EC3                     	;# 
   995  1EC5                     	;# 
   996  1EC6                     	;# 
   997  1EC7                     	;# 
   998  1EC8                     	;# 
   999  1EC9                     	;# 
  1000  1ECA                     	;# 
  1001  1ECB                     	;# 
  1002  1ECB                     	;# 
  1003  1ECB                     	;# 
  1004  1ECC                     	;# 
  1005  1ECC                     	;# 
  1006  1ECC                     	;# 
  1007  1F10                     	;# 
  1008  1F11                     	;# 
  1009  1F12                     	;# 
  1010  1F14                     	;# 
  1011  1F15                     	;# 
  1012  1F1C                     	;# 
  1013  1F1D                     	;# 
  1014  1F1E                     	;# 
  1015  1F1F                     	;# 
  1016  1F20                     	;# 
  1017  1F21                     	;# 
  1018  1F22                     	;# 
  1019  1F23                     	;# 
  1020  1F24                     	;# 
  1021  1F25                     	;# 
  1022  1F26                     	;# 
  1023  1F27                     	;# 
  1024  1F38                     	;# 
  1025  1F39                     	;# 
  1026  1F3A                     	;# 
  1027  1F3B                     	;# 
  1028  1F3C                     	;# 
  1029  1F3D                     	;# 
  1030  1F3E                     	;# 
  1031  1F3F                     	;# 
  1032  1F43                     	;# 
  1033  1F44                     	;# 
  1034  1F45                     	;# 
  1035  1F46                     	;# 
  1036  1F47                     	;# 
  1037  1F48                     	;# 
  1038  1F49                     	;# 
  1039  1F4A                     	;# 
  1040  1F4E                     	;# 
  1041  1F4F                     	;# 
  1042  1F50                     	;# 
  1043  1F51                     	;# 
  1044  1F52                     	;# 
  1045  1F53                     	;# 
  1046  1F54                     	;# 
  1047  1F55                     	;# 
  1048  1FE4                     	;# 
  1049  1FE5                     	;# 
  1050  1FE6                     	;# 
  1051  1FE7                     	;# 
  1052  1FE8                     	;# 
  1053  1FE8                     	;# 
  1054  1FE9                     	;# 
  1055  1FEA                     	;# 
  1056  1FEB                     	;# 
  1057  1FED                     	;# 
  1058  1FEE                     	;# 
  1059  1FEF                     	;# 
  1060  0000                     	;# 
  1061  0001                     	;# 
  1062  0002                     	;# 
  1063  0003                     	;# 
  1064  0004                     	;# 
  1065  0005                     	;# 
  1066  0006                     	;# 
  1067  0007                     	;# 
  1068  0008                     	;# 
  1069  0009                     	;# 
  1070  000A                     	;# 
  1071  000B                     	;# 
  1072  000C                     	;# 
  1073  000D                     	;# 
  1074  000E                     	;# 
  1075  0012                     	;# 
  1076  0013                     	;# 
  1077  0014                     	;# 
  1078  0018                     	;# 
  1079  0019                     	;# 
  1080  001A                     	;# 
  1081  008C                     	;# 
  1082  008C                     	;# 
  1083  008D                     	;# 
  1084  008E                     	;# 
  1085  008E                     	;# 
  1086  008F                     	;# 
  1087  0090                     	;# 
  1088  0090                     	;# 
  1089  0091                     	;# 
  1090  0092                     	;# 
  1091  0092                     	;# 
  1092  0093                     	;# 
  1093  0094                     	;# 
  1094  0094                     	;# 
  1095  0095                     	;# 
  1096  0096                     	;# 
  1097  0096                     	;# 
  1098  0097                     	;# 
  1099  0098                     	;# 
  1100  0099                     	;# 
  1101  009A                     	;# 
  1102  009B                     	;# 
  1103  009B                     	;# 
  1104  009C                     	;# 
  1105  009D                     	;# 
  1106  009D                     	;# 
  1107  009E                     	;# 
  1108  009F                     	;# 
  1109  010C                     	;# 
  1110  010C                     	;# 
  1111  010D                     	;# 
  1112  010E                     	;# 
  1113  010F                     	;# 
  1114  010F                     	;# 
  1115  0110                     	;# 
  1116  0111                     	;# 
  1117  0112                     	;# 
  1118  0113                     	;# 
  1119  0114                     	;# 
  1120  0115                     	;# 
  1121  0116                     	;# 
  1122  0117                     	;# 
  1123  0118                     	;# 
  1124  0119                     	;# 
  1125  0119                     	;# 
  1126  0119                     	;# 
  1127  011A                     	;# 
  1128  011A                     	;# 
  1129  011A                     	;# 
  1130  011B                     	;# 
  1131  011B                     	;# 
  1132  011B                     	;# 
  1133  011B                     	;# 
  1134  011B                     	;# 
  1135  011C                     	;# 
  1136  011C                     	;# 
  1137  011C                     	;# 
  1138  011D                     	;# 
  1139  011D                     	;# 
  1140  011D                     	;# 
  1141  011E                     	;# 
  1142  011E                     	;# 
  1143  011E                     	;# 
  1144  011F                     	;# 
  1145  011F                     	;# 
  1146  011F                     	;# 
  1147  011F                     	;# 
  1148  011F                     	;# 
  1149  018C                     	;# 
  1150  018D                     	;# 
  1151  018E                     	;# 
  1152  018F                     	;# 
  1153  0190                     	;# 
  1154  0191                     	;# 
  1155  0192                     	;# 
  1156  0196                     	;# 
  1157  0197                     	;# 
  1158  0198                     	;# 
  1159  0199                     	;# 
  1160  019A                     	;# 
  1161  019B                     	;# 
  1162  019C                     	;# 
  1163  020C                     	;# 
  1164  020D                     	;# 
  1165  020E                     	;# 
  1166  020E                     	;# 
  1167  020F                     	;# 
  1168  020F                     	;# 
  1169  0210                     	;# 
  1170  0210                     	;# 
  1171  0211                     	;# 
  1172  0211                     	;# 
  1173  0212                     	;# 
  1174  0213                     	;# 
  1175  0214                     	;# 
  1176  0214                     	;# 
  1177  0215                     	;# 
  1178  0215                     	;# 
  1179  0216                     	;# 
  1180  0216                     	;# 
  1181  0217                     	;# 
  1182  0217                     	;# 
  1183  0218                     	;# 
  1184  0219                     	;# 
  1185  021A                     	;# 
  1186  021A                     	;# 
  1187  021B                     	;# 
  1188  021B                     	;# 
  1189  021C                     	;# 
  1190  021C                     	;# 
  1191  021D                     	;# 
  1192  021D                     	;# 
  1193  021E                     	;# 
  1194  021F                     	;# 
  1195  028C                     	;# 
  1196  028C                     	;# 
  1197  028D                     	;# 
  1198  028D                     	;# 
  1199  028E                     	;# 
  1200  028F                     	;# 
  1201  0290                     	;# 
  1202  0291                     	;# 
  1203  0292                     	;# 
  1204  0292                     	;# 
  1205  0293                     	;# 
  1206  0293                     	;# 
  1207  0294                     	;# 
  1208  0295                     	;# 
  1209  0296                     	;# 
  1210  0297                     	;# 
  1211  0298                     	;# 
  1212  0298                     	;# 
  1213  0299                     	;# 
  1214  0299                     	;# 
  1215  029A                     	;# 
  1216  029B                     	;# 
  1217  029C                     	;# 
  1218  029D                     	;# 
  1219  029F                     	;# 
  1220  030C                     	;# 
  1221  030C                     	;# 
  1222  030D                     	;# 
  1223  030E                     	;# 
  1224  030F                     	;# 
  1225  0310                     	;# 
  1226  0310                     	;# 
  1227  0311                     	;# 
  1228  0312                     	;# 
  1229  0313                     	;# 
  1230  0314                     	;# 
  1231  0314                     	;# 
  1232  0315                     	;# 
  1233  0316                     	;# 
  1234  0317                     	;# 
  1235  0318                     	;# 
  1236  0318                     	;# 
  1237  0319                     	;# 
  1238  031A                     	;# 
  1239  031B                     	;# 
  1240  038C                     	;# 
  1241  038C                     	;# 
  1242  038D                     	;# 
  1243  038E                     	;# 
  1244  0390                     	;# 
  1245  0390                     	;# 
  1246  0391                     	;# 
  1247  0392                     	;# 
  1248  048C                     	;# 
  1249  048C                     	;# 
  1250  048D                     	;# 
  1251  048E                     	;# 
  1252  048F                     	;# 
  1253  048F                     	;# 
  1254  0490                     	;# 
  1255  0491                     	;# 
  1256  0492                     	;# 
  1257  0492                     	;# 
  1258  0493                     	;# 
  1259  0494                     	;# 
  1260  0495                     	;# 
  1261  0495                     	;# 
  1262  0496                     	;# 
  1263  0497                     	;# 
  1264  0498                     	;# 
  1265  0499                     	;# 
  1266  049A                     	;# 
  1267  049B                     	;# 
  1268  049C                     	;# 
  1269  049D                     	;# 
  1270  058C                     	;# 
  1271  058C                     	;# 
  1272  058D                     	;# 
  1273  058E                     	;# 
  1274  058F                     	;# 
  1275  058F                     	;# 
  1276  0590                     	;# 
  1277  0591                     	;# 
  1278  0592                     	;# 
  1279  0593                     	;# 
  1280  059C                     	;# 
  1281  059C                     	;# 
  1282  059D                     	;# 
  1283  059D                     	;# 
  1284  059E                     	;# 
  1285  059F                     	;# 
  1286  060C                     	;# 
  1287  060C                     	;# 
  1288  060D                     	;# 
  1289  060D                     	;# 
  1290  060E                     	;# 
  1291  060F                     	;# 
  1292  0610                     	;# 
  1293  0611                     	;# 
  1294  0612                     	;# 
  1295  0613                     	;# 
  1296  0614                     	;# 
  1297  0616                     	;# 
  1298  0616                     	;# 
  1299  0617                     	;# 
  1300  0617                     	;# 
  1301  0618                     	;# 
  1302  0619                     	;# 
  1303  061A                     	;# 
  1304  061B                     	;# 
  1305  061C                     	;# 
  1306  061D                     	;# 
  1307  061E                     	;# 
  1308  070C                     	;# 
  1309  070D                     	;# 
  1310  070E                     	;# 
  1311  070F                     	;# 
  1312  0710                     	;# 
  1313  0711                     	;# 
  1314  0712                     	;# 
  1315  0713                     	;# 
  1316  0714                     	;# 
  1317  0716                     	;# 
  1318  0717                     	;# 
  1319  0718                     	;# 
  1320  0719                     	;# 
  1321  071A                     	;# 
  1322  071B                     	;# 
  1323  071C                     	;# 
  1324  071D                     	;# 
  1325  071E                     	;# 
  1326  0796                     	;# 
  1327  0797                     	;# 
  1328  0798                     	;# 
  1329  0799                     	;# 
  1330  079A                     	;# 
  1331  079B                     	;# 
  1332  079C                     	;# 
  1333  079D                     	;# 
  1334  080C                     	;# 
  1335  080D                     	;# 
  1336  080E                     	;# 
  1337  080F                     	;# 
  1338  0810                     	;# 
  1339  0811                     	;# 
  1340  0812                     	;# 
  1341  0813                     	;# 
  1342  0814                     	;# 
  1343  081A                     	;# 
  1344  081A                     	;# 
  1345  081B                     	;# 
  1346  081C                     	;# 
  1347  081C                     	;# 
  1348  081D                     	;# 
  1349  081E                     	;# 
  1350  081F                     	;# 
  1351  088C                     	;# 
  1352  088D                     	;# 
  1353  088E                     	;# 
  1354  088F                     	;# 
  1355  0890                     	;# 
  1356  0891                     	;# 
  1357  0892                     	;# 
  1358  0893                     	;# 
  1359  0895                     	;# 
  1360  0896                     	;# 
  1361  0897                     	;# 
  1362  0898                     	;# 
  1363  0899                     	;# 
  1364  089A                     	;# 
  1365  089B                     	;# 
  1366  090C                     	;# 
  1367  090E                     	;# 
  1368  090F                     	;# 
  1369  091F                     	;# 
  1370  098F                     	;# 
  1371  098F                     	;# 
  1372  0990                     	;# 
  1373  0991                     	;# 
  1374  0992                     	;# 
  1375  0993                     	;# 
  1376  0994                     	;# 
  1377  0995                     	;# 
  1378  0996                     	;# 
  1379  0997                     	;# 
  1380  1E0F                     	;# 
  1381  1E10                     	;# 
  1382  1E11                     	;# 
  1383  1E12                     	;# 
  1384  1E13                     	;# 
  1385  1E14                     	;# 
  1386  1E15                     	;# 
  1387  1E16                     	;# 
  1388  1E17                     	;# 
  1389  1E18                     	;# 
  1390  1E19                     	;# 
  1391  1E1A                     	;# 
  1392  1E1B                     	;# 
  1393  1E1C                     	;# 
  1394  1E1D                     	;# 
  1395  1E1E                     	;# 
  1396  1E1F                     	;# 
  1397  1E20                     	;# 
  1398  1E21                     	;# 
  1399  1E22                     	;# 
  1400  1E23                     	;# 
  1401  1E24                     	;# 
  1402  1E25                     	;# 
  1403  1E26                     	;# 
  1404  1E27                     	;# 
  1405  1E28                     	;# 
  1406  1E29                     	;# 
  1407  1E2A                     	;# 
  1408  1E2B                     	;# 
  1409  1E2C                     	;# 
  1410  1E2D                     	;# 
  1411  1E2E                     	;# 
  1412  1E2F                     	;# 
  1413  1E30                     	;# 
  1414  1E31                     	;# 
  1415  1E32                     	;# 
  1416  1E33                     	;# 
  1417  1E34                     	;# 
  1418  1E35                     	;# 
  1419  1E36                     	;# 
  1420  1E37                     	;# 
  1421  1E8F                     	;# 
  1422  1E90                     	;# 
  1423  1E91                     	;# 
  1424  1E92                     	;# 
  1425  1E93                     	;# 
  1426  1E94                     	;# 
  1427  1E95                     	;# 
  1428  1E96                     	;# 
  1429  1E97                     	;# 
  1430  1E9C                     	;# 
  1431  1E9D                     	;# 
  1432  1E9E                     	;# 
  1433  1EA1                     	;# 
  1434  1EA2                     	;# 
  1435  1EA3                     	;# 
  1436  1EA4                     	;# 
  1437  1EA9                     	;# 
  1438  1EAA                     	;# 
  1439  1EB1                     	;# 
  1440  1EB2                     	;# 
  1441  1EB8                     	;# 
  1442  1EB9                     	;# 
  1443  1EBA                     	;# 
  1444  1EBB                     	;# 
  1445  1EBC                     	;# 
  1446  1EBD                     	;# 
  1447  1EBE                     	;# 
  1448  1EC3                     	;# 
  1449  1EC5                     	;# 
  1450  1EC6                     	;# 
  1451  1EC7                     	;# 
  1452  1EC8                     	;# 
  1453  1EC9                     	;# 
  1454  1ECA                     	;# 
  1455  1ECB                     	;# 
  1456  1ECB                     	;# 
  1457  1ECB                     	;# 
  1458  1ECC                     	;# 
  1459  1ECC                     	;# 
  1460  1ECC                     	;# 
  1461  1F10                     	;# 
  1462  1F11                     	;# 
  1463  1F12                     	;# 
  1464  1F14                     	;# 
  1465  1F15                     	;# 
  1466  1F1C                     	;# 
  1467  1F1D                     	;# 
  1468  1F1E                     	;# 
  1469  1F1F                     	;# 
  1470  1F20                     	;# 
  1471  1F21                     	;# 
  1472  1F22                     	;# 
  1473  1F23                     	;# 
  1474  1F24                     	;# 
  1475  1F25                     	;# 
  1476  1F26                     	;# 
  1477  1F27                     	;# 
  1478  1F38                     	;# 
  1479  1F39                     	;# 
  1480  1F3A                     	;# 
  1481  1F3B                     	;# 
  1482  1F3C                     	;# 
  1483  1F3D                     	;# 
  1484  1F3E                     	;# 
  1485  1F3F                     	;# 
  1486  1F43                     	;# 
  1487  1F44                     	;# 
  1488  1F45                     	;# 
  1489  1F46                     	;# 
  1490  1F47                     	;# 
  1491  1F48                     	;# 
  1492  1F49                     	;# 
  1493  1F4A                     	;# 
  1494  1F4E                     	;# 
  1495  1F4F                     	;# 
  1496  1F50                     	;# 
  1497  1F51                     	;# 
  1498  1F52                     	;# 
  1499  1F53                     	;# 
  1500  1F54                     	;# 
  1501  1F55                     	;# 
  1502  1FE4                     	;# 
  1503  1FE5                     	;# 
  1504  1FE6                     	;# 
  1505  1FE7                     	;# 
  1506  1FE8                     	;# 
  1507  1FE8                     	;# 
  1508  1FE9                     	;# 
  1509  1FEA                     	;# 
  1510  1FEB                     	;# 
  1511  1FED                     	;# 
  1512  1FEE                     	;# 
  1513  1FEF                     	;# 
  1514  0000                     	;# 
  1515  0001                     	;# 
  1516  0002                     	;# 
  1517  0003                     	;# 
  1518  0004                     	;# 
  1519  0005                     	;# 
  1520  0006                     	;# 
  1521  0007                     	;# 
  1522  0008                     	;# 
  1523  0009                     	;# 
  1524  000A                     	;# 
  1525  000B                     	;# 
  1526  000C                     	;# 
  1527  000D                     	;# 
  1528  000E                     	;# 
  1529  0012                     	;# 
  1530  0013                     	;# 
  1531  0014                     	;# 
  1532  0018                     	;# 
  1533  0019                     	;# 
  1534  001A                     	;# 
  1535  008C                     	;# 
  1536  008C                     	;# 
  1537  008D                     	;# 
  1538  008E                     	;# 
  1539  008E                     	;# 
  1540  008F                     	;# 
  1541  0090                     	;# 
  1542  0090                     	;# 
  1543  0091                     	;# 
  1544  0092                     	;# 
  1545  0092                     	;# 
  1546  0093                     	;# 
  1547  0094                     	;# 
  1548  0094                     	;# 
  1549  0095                     	;# 
  1550  0096                     	;# 
  1551  0096                     	;# 
  1552  0097                     	;# 
  1553  0098                     	;# 
  1554  0099                     	;# 
  1555  009A                     	;# 
  1556  009B                     	;# 
  1557  009B                     	;# 
  1558  009C                     	;# 
  1559  009D                     	;# 
  1560  009D                     	;# 
  1561  009E                     	;# 
  1562  009F                     	;# 
  1563  010C                     	;# 
  1564  010C                     	;# 
  1565  010D                     	;# 
  1566  010E                     	;# 
  1567  010F                     	;# 
  1568  010F                     	;# 
  1569  0110                     	;# 
  1570  0111                     	;# 
  1571  0112                     	;# 
  1572  0113                     	;# 
  1573  0114                     	;# 
  1574  0115                     	;# 
  1575  0116                     	;# 
  1576  0117                     	;# 
  1577  0118                     	;# 
  1578  0119                     	;# 
  1579  0119                     	;# 
  1580  0119                     	;# 
  1581  011A                     	;# 
  1582  011A                     	;# 
  1583  011A                     	;# 
  1584  011B                     	;# 
  1585  011B                     	;# 
  1586  011B                     	;# 
  1587  011B                     	;# 
  1588  011B                     	;# 
  1589  011C                     	;# 
  1590  011C                     	;# 
  1591  011C                     	;# 
  1592  011D                     	;# 
  1593  011D                     	;# 
  1594  011D                     	;# 
  1595  011E                     	;# 
  1596  011E                     	;# 
  1597  011E                     	;# 
  1598  011F                     	;# 
  1599  011F                     	;# 
  1600  011F                     	;# 
  1601  011F                     	;# 
  1602  011F                     	;# 
  1603  018C                     	;# 
  1604  018D                     	;# 
  1605  018E                     	;# 
  1606  018F                     	;# 
  1607  0190                     	;# 
  1608  0191                     	;# 
  1609  0192                     	;# 
  1610  0196                     	;# 
  1611  0197                     	;# 
  1612  0198                     	;# 
  1613  0199                     	;# 
  1614  019A                     	;# 
  1615  019B                     	;# 
  1616  019C                     	;# 
  1617  020C                     	;# 
  1618  020D                     	;# 
  1619  020E                     	;# 
  1620  020E                     	;# 
  1621  020F                     	;# 
  1622  020F                     	;# 
  1623  0210                     	;# 
  1624  0210                     	;# 
  1625  0211                     	;# 
  1626  0211                     	;# 
  1627  0212                     	;# 
  1628  0213                     	;# 
  1629  0214                     	;# 
  1630  0214                     	;# 
  1631  0215                     	;# 
  1632  0215                     	;# 
  1633  0216                     	;# 
  1634  0216                     	;# 
  1635  0217                     	;# 
  1636  0217                     	;# 
  1637  0218                     	;# 
  1638  0219                     	;# 
  1639  021A                     	;# 
  1640  021A                     	;# 
  1641  021B                     	;# 
  1642  021B                     	;# 
  1643  021C                     	;# 
  1644  021C                     	;# 
  1645  021D                     	;# 
  1646  021D                     	;# 
  1647  021E                     	;# 
  1648  021F                     	;# 
  1649  028C                     	;# 
  1650  028C                     	;# 
  1651  028D                     	;# 
  1652  028D                     	;# 
  1653  028E                     	;# 
  1654  028F                     	;# 
  1655  0290                     	;# 
  1656  0291                     	;# 
  1657  0292                     	;# 
  1658  0292                     	;# 
  1659  0293                     	;# 
  1660  0293                     	;# 
  1661  0294                     	;# 
  1662  0295                     	;# 
  1663  0296                     	;# 
  1664  0297                     	;# 
  1665  0298                     	;# 
  1666  0298                     	;# 
  1667  0299                     	;# 
  1668  0299                     	;# 
  1669  029A                     	;# 
  1670  029B                     	;# 
  1671  029C                     	;# 
  1672  029D                     	;# 
  1673  029F                     	;# 
  1674  030C                     	;# 
  1675  030C                     	;# 
  1676  030D                     	;# 
  1677  030E                     	;# 
  1678  030F                     	;# 
  1679  0310                     	;# 
  1680  0310                     	;# 
  1681  0311                     	;# 
  1682  0312                     	;# 
  1683  0313                     	;# 
  1684  0314                     	;# 
  1685  0314                     	;# 
  1686  0315                     	;# 
  1687  0316                     	;# 
  1688  0317                     	;# 
  1689  0318                     	;# 
  1690  0318                     	;# 
  1691  0319                     	;# 
  1692  031A                     	;# 
  1693  031B                     	;# 
  1694  038C                     	;# 
  1695  038C                     	;# 
  1696  038D                     	;# 
  1697  038E                     	;# 
  1698  0390                     	;# 
  1699  0390                     	;# 
  1700  0391                     	;# 
  1701  0392                     	;# 
  1702  048C                     	;# 
  1703  048C                     	;# 
  1704  048D                     	;# 
  1705  048E                     	;# 
  1706  048F                     	;# 
  1707  048F                     	;# 
  1708  0490                     	;# 
  1709  0491                     	;# 
  1710  0492                     	;# 
  1711  0492                     	;# 
  1712  0493                     	;# 
  1713  0494                     	;# 
  1714  0495                     	;# 
  1715  0495                     	;# 
  1716  0496                     	;# 
  1717  0497                     	;# 
  1718  0498                     	;# 
  1719  0499                     	;# 
  1720  049A                     	;# 
  1721  049B                     	;# 
  1722  049C                     	;# 
  1723  049D                     	;# 
  1724  058C                     	;# 
  1725  058C                     	;# 
  1726  058D                     	;# 
  1727  058E                     	;# 
  1728  058F                     	;# 
  1729  058F                     	;# 
  1730  0590                     	;# 
  1731  0591                     	;# 
  1732  0592                     	;# 
  1733  0593                     	;# 
  1734  059C                     	;# 
  1735  059C                     	;# 
  1736  059D                     	;# 
  1737  059D                     	;# 
  1738  059E                     	;# 
  1739  059F                     	;# 
  1740  060C                     	;# 
  1741  060C                     	;# 
  1742  060D                     	;# 
  1743  060D                     	;# 
  1744  060E                     	;# 
  1745  060F                     	;# 
  1746  0610                     	;# 
  1747  0611                     	;# 
  1748  0612                     	;# 
  1749  0613                     	;# 
  1750  0614                     	;# 
  1751  0616                     	;# 
  1752  0616                     	;# 
  1753  0617                     	;# 
  1754  0617                     	;# 
  1755  0618                     	;# 
  1756  0619                     	;# 
  1757  061A                     	;# 
  1758  061B                     	;# 
  1759  061C                     	;# 
  1760  061D                     	;# 
  1761  061E                     	;# 
  1762  070C                     	;# 
  1763  070D                     	;# 
  1764  070E                     	;# 
  1765  070F                     	;# 
  1766  0710                     	;# 
  1767  0711                     	;# 
  1768  0712                     	;# 
  1769  0713                     	;# 
  1770  0714                     	;# 
  1771  0716                     	;# 
  1772  0717                     	;# 
  1773  0718                     	;# 
  1774  0719                     	;# 
  1775  071A                     	;# 
  1776  071B                     	;# 
  1777  071C                     	;# 
  1778  071D                     	;# 
  1779  071E                     	;# 
  1780  0796                     	;# 
  1781  0797                     	;# 
  1782  0798                     	;# 
  1783  0799                     	;# 
  1784  079A                     	;# 
  1785  079B                     	;# 
  1786  079C                     	;# 
  1787  079D                     	;# 
  1788  080C                     	;# 
  1789  080D                     	;# 
  1790  080E                     	;# 
  1791  080F                     	;# 
  1792  0810                     	;# 
  1793  0811                     	;# 
  1794  0812                     	;# 
  1795  0813                     	;# 
  1796  0814                     	;# 
  1797  081A                     	;# 
  1798  081A                     	;# 
  1799  081B                     	;# 
  1800  081C                     	;# 
  1801  081C                     	;# 
  1802  081D                     	;# 
  1803  081E                     	;# 
  1804  081F                     	;# 
  1805  088C                     	;# 
  1806  088D                     	;# 
  1807  088E                     	;# 
  1808  088F                     	;# 
  1809  0890                     	;# 
  1810  0891                     	;# 
  1811  0892                     	;# 
  1812  0893                     	;# 
  1813  0895                     	;# 
  1814  0896                     	;# 
  1815  0897                     	;# 
  1816  0898                     	;# 
  1817  0899                     	;# 
  1818  089A                     	;# 
  1819  089B                     	;# 
  1820  090C                     	;# 
  1821  090E                     	;# 
  1822  090F                     	;# 
  1823  091F                     	;# 
  1824  098F                     	;# 
  1825  098F                     	;# 
  1826  0990                     	;# 
  1827  0991                     	;# 
  1828  0992                     	;# 
  1829  0993                     	;# 
  1830  0994                     	;# 
  1831  0995                     	;# 
  1832  0996                     	;# 
  1833  0997                     	;# 
  1834  1E0F                     	;# 
  1835  1E10                     	;# 
  1836  1E11                     	;# 
  1837  1E12                     	;# 
  1838  1E13                     	;# 
  1839  1E14                     	;# 
  1840  1E15                     	;# 
  1841  1E16                     	;# 
  1842  1E17                     	;# 
  1843  1E18                     	;# 
  1844  1E19                     	;# 
  1845  1E1A                     	;# 
  1846  1E1B                     	;# 
  1847  1E1C                     	;# 
  1848  1E1D                     	;# 
  1849  1E1E                     	;# 
  1850  1E1F                     	;# 
  1851  1E20                     	;# 
  1852  1E21                     	;# 
  1853  1E22                     	;# 
  1854  1E23                     	;# 
  1855  1E24                     	;# 
  1856  1E25                     	;# 
  1857  1E26                     	;# 
  1858  1E27                     	;# 
  1859  1E28                     	;# 
  1860  1E29                     	;# 
  1861  1E2A                     	;# 
  1862  1E2B                     	;# 
  1863  1E2C                     	;# 
  1864  1E2D                     	;# 
  1865  1E2E                     	;# 
  1866  1E2F                     	;# 
  1867  1E30                     	;# 
  1868  1E31                     	;# 
  1869  1E32                     	;# 
  1870  1E33                     	;# 
  1871  1E34                     	;# 
  1872  1E35                     	;# 
  1873  1E36                     	;# 
  1874  1E37                     	;# 
  1875  1E8F                     	;# 
  1876  1E90                     	;# 
  1877  1E91                     	;# 
  1878  1E92                     	;# 
  1879  1E93                     	;# 
  1880  1E94                     	;# 
  1881  1E95                     	;# 
  1882  1E96                     	;# 
  1883  1E97                     	;# 
  1884  1E9C                     	;# 
  1885  1E9D                     	;# 
  1886  1E9E                     	;# 
  1887  1EA1                     	;# 
  1888  1EA2                     	;# 
  1889  1EA3                     	;# 
  1890  1EA4                     	;# 
  1891  1EA9                     	;# 
  1892  1EAA                     	;# 
  1893  1EB1                     	;# 
  1894  1EB2                     	;# 
  1895  1EB8                     	;# 
  1896  1EB9                     	;# 
  1897  1EBA                     	;# 
  1898  1EBB                     	;# 
  1899  1EBC                     	;# 
  1900  1EBD                     	;# 
  1901  1EBE                     	;# 
  1902  1EC3                     	;# 
  1903  1EC5                     	;# 
  1904  1EC6                     	;# 
  1905  1EC7                     	;# 
  1906  1EC8                     	;# 
  1907  1EC9                     	;# 
  1908  1ECA                     	;# 
  1909  1ECB                     	;# 
  1910  1ECB                     	;# 
  1911  1ECB                     	;# 
  1912  1ECC                     	;# 
  1913  1ECC                     	;# 
  1914  1ECC                     	;# 
  1915  1F10                     	;# 
  1916  1F11                     	;# 
  1917  1F12                     	;# 
  1918  1F14                     	;# 
  1919  1F15                     	;# 
  1920  1F1C                     	;# 
  1921  1F1D                     	;# 
  1922  1F1E                     	;# 
  1923  1F1F                     	;# 
  1924  1F20                     	;# 
  1925  1F21                     	;# 
  1926  1F22                     	;# 
  1927  1F23                     	;# 
  1928  1F24                     	;# 
  1929  1F25                     	;# 
  1930  1F26                     	;# 
  1931  1F27                     	;# 
  1932  1F38                     	;# 
  1933  1F39                     	;# 
  1934  1F3A                     	;# 
  1935  1F3B                     	;# 
  1936  1F3C                     	;# 
  1937  1F3D                     	;# 
  1938  1F3E                     	;# 
  1939  1F3F                     	;# 
  1940  1F43                     	;# 
  1941  1F44                     	;# 
  1942  1F45                     	;# 
  1943  1F46                     	;# 
  1944  1F47                     	;# 
  1945  1F48                     	;# 
  1946  1F49                     	;# 
  1947  1F4A                     	;# 
  1948  1F4E                     	;# 
  1949  1F4F                     	;# 
  1950  1F50                     	;# 
  1951  1F51                     	;# 
  1952  1F52                     	;# 
  1953  1F53                     	;# 
  1954  1F54                     	;# 
  1955  1F55                     	;# 
  1956  1FE4                     	;# 
  1957  1FE5                     	;# 
  1958  1FE6                     	;# 
  1959  1FE7                     	;# 
  1960  1FE8                     	;# 
  1961  1FE8                     	;# 
  1962  1FE9                     	;# 
  1963  1FEA                     	;# 
  1964  1FEB                     	;# 
  1965  1FED                     	;# 
  1966  1FEE                     	;# 
  1967  1FEF                     	;# 
  1968  0000                     	;# 
  1969  0001                     	;# 
  1970  0002                     	;# 
  1971  0003                     	;# 
  1972  0004                     	;# 
  1973  0005                     	;# 
  1974  0006                     	;# 
  1975  0007                     	;# 
  1976  0008                     	;# 
  1977  0009                     	;# 
  1978  000A                     	;# 
  1979  000B                     	;# 
  1980  000C                     	;# 
  1981  000D                     	;# 
  1982  000E                     	;# 
  1983  0012                     	;# 
  1984  0013                     	;# 
  1985  0014                     	;# 
  1986  0018                     	;# 
  1987  0019                     	;# 
  1988  001A                     	;# 
  1989  008C                     	;# 
  1990  008C                     	;# 
  1991  008D                     	;# 
  1992  008E                     	;# 
  1993  008E                     	;# 
  1994  008F                     	;# 
  1995  0090                     	;# 
  1996  0090                     	;# 
  1997  0091                     	;# 
  1998  0092                     	;# 
  1999  0092                     	;# 
  2000  0093                     	;# 
  2001  0094                     	;# 
  2002  0094                     	;# 
  2003  0095                     	;# 
  2004  0096                     	;# 
  2005  0096                     	;# 
  2006  0097                     	;# 
  2007  0098                     	;# 
  2008  0099                     	;# 
  2009  009A                     	;# 
  2010  009B                     	;# 
  2011  009B                     	;# 
  2012  009C                     	;# 
  2013  009D                     	;# 
  2014  009D                     	;# 
  2015  009E                     	;# 
  2016  009F                     	;# 
  2017  010C                     	;# 
  2018  010C                     	;# 
  2019  010D                     	;# 
  2020  010E                     	;# 
  2021  010F                     	;# 
  2022  010F                     	;# 
  2023  0110                     	;# 
  2024  0111                     	;# 
  2025  0112                     	;# 
  2026  0113                     	;# 
  2027  0114                     	;# 
  2028  0115                     	;# 
  2029  0116                     	;# 
  2030  0117                     	;# 
  2031  0118                     	;# 
  2032  0119                     	;# 
  2033  0119                     	;# 
  2034  0119                     	;# 
  2035  011A                     	;# 
  2036  011A                     	;# 
  2037  011A                     	;# 
  2038  011B                     	;# 
  2039  011B                     	;# 
  2040  011B                     	;# 
  2041  011B                     	;# 
  2042  011B                     	;# 
  2043  011C                     	;# 
  2044  011C                     	;# 
  2045  011C                     	;# 
  2046  011D                     	;# 
  2047  011D                     	;# 
  2048  011D                     	;# 
  2049  011E                     	;# 
  2050  011E                     	;# 
  2051  011E                     	;# 
  2052  011F                     	;# 
  2053  011F                     	;# 
  2054  011F                     	;# 
  2055  011F                     	;# 
  2056  011F                     	;# 
  2057  018C                     	;# 
  2058  018D                     	;# 
  2059  018E                     	;# 
  2060  018F                     	;# 
  2061  0190                     	;# 
  2062  0191                     	;# 
  2063  0192                     	;# 
  2064  0196                     	;# 
  2065  0197                     	;# 
  2066  0198                     	;# 
  2067  0199                     	;# 
  2068  019A                     	;# 
  2069  019B                     	;# 
  2070  019C                     	;# 
  2071  020C                     	;# 
  2072  020D                     	;# 
  2073  020E                     	;# 
  2074  020E                     	;# 
  2075  020F                     	;# 
  2076  020F                     	;# 
  2077  0210                     	;# 
  2078  0210                     	;# 
  2079  0211                     	;# 
  2080  0211                     	;# 
  2081  0212                     	;# 
  2082  0213                     	;# 
  2083  0214                     	;# 
  2084  0214                     	;# 
  2085  0215                     	;# 
  2086  0215                     	;# 
  2087  0216                     	;# 
  2088  0216                     	;# 
  2089  0217                     	;# 
  2090  0217                     	;# 
  2091  0218                     	;# 
  2092  0219                     	;# 
  2093  021A                     	;# 
  2094  021A                     	;# 
  2095  021B                     	;# 
  2096  021B                     	;# 
  2097  021C                     	;# 
  2098  021C                     	;# 
  2099  021D                     	;# 
  2100  021D                     	;# 
  2101  021E                     	;# 
  2102  021F                     	;# 
  2103  028C                     	;# 
  2104  028C                     	;# 
  2105  028D                     	;# 
  2106  028D                     	;# 
  2107  028E                     	;# 
  2108  028F                     	;# 
  2109  0290                     	;# 
  2110  0291                     	;# 
  2111  0292                     	;# 
  2112  0292                     	;# 
  2113  0293                     	;# 
  2114  0293                     	;# 
  2115  0294                     	;# 
  2116  0295                     	;# 
  2117  0296                     	;# 
  2118  0297                     	;# 
  2119  0298                     	;# 
  2120  0298                     	;# 
  2121  0299                     	;# 
  2122  0299                     	;# 
  2123  029A                     	;# 
  2124  029B                     	;# 
  2125  029C                     	;# 
  2126  029D                     	;# 
  2127  029F                     	;# 
  2128  030C                     	;# 
  2129  030C                     	;# 
  2130  030D                     	;# 
  2131  030E                     	;# 
  2132  030F                     	;# 
  2133  0310                     	;# 
  2134  0310                     	;# 
  2135  0311                     	;# 
  2136  0312                     	;# 
  2137  0313                     	;# 
  2138  0314                     	;# 
  2139  0314                     	;# 
  2140  0315                     	;# 
  2141  0316                     	;# 
  2142  0317                     	;# 
  2143  0318                     	;# 
  2144  0318                     	;# 
  2145  0319                     	;# 
  2146  031A                     	;# 
  2147  031B                     	;# 
  2148  038C                     	;# 
  2149  038C                     	;# 
  2150  038D                     	;# 
  2151  038E                     	;# 
  2152  0390                     	;# 
  2153  0390                     	;# 
  2154  0391                     	;# 
  2155  0392                     	;# 
  2156  048C                     	;# 
  2157  048C                     	;# 
  2158  048D                     	;# 
  2159  048E                     	;# 
  2160  048F                     	;# 
  2161  048F                     	;# 
  2162  0490                     	;# 
  2163  0491                     	;# 
  2164  0492                     	;# 
  2165  0492                     	;# 
  2166  0493                     	;# 
  2167  0494                     	;# 
  2168  0495                     	;# 
  2169  0495                     	;# 
  2170  0496                     	;# 
  2171  0497                     	;# 
  2172  0498                     	;# 
  2173  0499                     	;# 
  2174  049A                     	;# 
  2175  049B                     	;# 
  2176  049C                     	;# 
  2177  049D                     	;# 
  2178  058C                     	;# 
  2179  058C                     	;# 
  2180  058D                     	;# 
  2181  058E                     	;# 
  2182  058F                     	;# 
  2183  058F                     	;# 
  2184  0590                     	;# 
  2185  0591                     	;# 
  2186  0592                     	;# 
  2187  0593                     	;# 
  2188  059C                     	;# 
  2189  059C                     	;# 
  2190  059D                     	;# 
  2191  059D                     	;# 
  2192  059E                     	;# 
  2193  059F                     	;# 
  2194  060C                     	;# 
  2195  060C                     	;# 
  2196  060D                     	;# 
  2197  060D                     	;# 
  2198  060E                     	;# 
  2199  060F                     	;# 
  2200  0610                     	;# 
  2201  0611                     	;# 
  2202  0612                     	;# 
  2203  0613                     	;# 
  2204  0614                     	;# 
  2205  0616                     	;# 
  2206  0616                     	;# 
  2207  0617                     	;# 
  2208  0617                     	;# 
  2209  0618                     	;# 
  2210  0619                     	;# 
  2211  061A                     	;# 
  2212  061B                     	;# 
  2213  061C                     	;# 
  2214  061D                     	;# 
  2215  061E                     	;# 
  2216  070C                     	;# 
  2217  070D                     	;# 
  2218  070E                     	;# 
  2219  070F                     	;# 
  2220  0710                     	;# 
  2221  0711                     	;# 
  2222  0712                     	;# 
  2223  0713                     	;# 
  2224  0714                     	;# 
  2225  0716                     	;# 
  2226  0717                     	;# 
  2227  0718                     	;# 
  2228  0719                     	;# 
  2229  071A                     	;# 
  2230  071B                     	;# 
  2231  071C                     	;# 
  2232  071D                     	;# 
  2233  071E                     	;# 
  2234  0796                     	;# 
  2235  0797                     	;# 
  2236  0798                     	;# 
  2237  0799                     	;# 
  2238  079A                     	;# 
  2239  079B                     	;# 
  2240  079C                     	;# 
  2241  079D                     	;# 
  2242  080C                     	;# 
  2243  080D                     	;# 
  2244  080E                     	;# 
  2245  080F                     	;# 
  2246  0810                     	;# 
  2247  0811                     	;# 
  2248  0812                     	;# 
  2249  0813                     	;# 
  2250  0814                     	;# 
  2251  081A                     	;# 
  2252  081A                     	;# 
  2253  081B                     	;# 
  2254  081C                     	;# 
  2255  081C                     	;# 
  2256  081D                     	;# 
  2257  081E                     	;# 
  2258  081F                     	;# 
  2259  088C                     	;# 
  2260  088D                     	;# 
  2261  088E                     	;# 
  2262  088F                     	;# 
  2263  0890                     	;# 
  2264  0891                     	;# 
  2265  0892                     	;# 
  2266  0893                     	;# 
  2267  0895                     	;# 
  2268  0896                     	;# 
  2269  0897                     	;# 
  2270  0898                     	;# 
  2271  0899                     	;# 
  2272  089A                     	;# 
  2273  089B                     	;# 
  2274  090C                     	;# 
  2275  090E                     	;# 
  2276  090F                     	;# 
  2277  091F                     	;# 
  2278  098F                     	;# 
  2279  098F                     	;# 
  2280  0990                     	;# 
  2281  0991                     	;# 
  2282  0992                     	;# 
  2283  0993                     	;# 
  2284  0994                     	;# 
  2285  0995                     	;# 
  2286  0996                     	;# 
  2287  0997                     	;# 
  2288  1E0F                     	;# 
  2289  1E10                     	;# 
  2290  1E11                     	;# 
  2291  1E12                     	;# 
  2292  1E13                     	;# 
  2293  1E14                     	;# 
  2294  1E15                     	;# 
  2295  1E16                     	;# 
  2296  1E17                     	;# 
  2297  1E18                     	;# 
  2298  1E19                     	;# 
  2299  1E1A                     	;# 
  2300  1E1B                     	;# 
  2301  1E1C                     	;# 
  2302  1E1D                     	;# 
  2303  1E1E                     	;# 
  2304  1E1F                     	;# 
  2305  1E20                     	;# 
  2306  1E21                     	;# 
  2307  1E22                     	;# 
  2308  1E23                     	;# 
  2309  1E24                     	;# 
  2310  1E25                     	;# 
  2311  1E26                     	;# 
  2312  1E27                     	;# 
  2313  1E28                     	;# 
  2314  1E29                     	;# 
  2315  1E2A                     	;# 
  2316  1E2B                     	;# 
  2317  1E2C                     	;# 
  2318  1E2D                     	;# 
  2319  1E2E                     	;# 
  2320  1E2F                     	;# 
  2321  1E30                     	;# 
  2322  1E31                     	;# 
  2323  1E32                     	;# 
  2324  1E33                     	;# 
  2325  1E34                     	;# 
  2326  1E35                     	;# 
  2327  1E36                     	;# 
  2328  1E37                     	;# 
  2329  1E8F                     	;# 
  2330  1E90                     	;# 
  2331  1E91                     	;# 
  2332  1E92                     	;# 
  2333  1E93                     	;# 
  2334  1E94                     	;# 
  2335  1E95                     	;# 
  2336  1E96                     	;# 
  2337  1E97                     	;# 
  2338  1E9C                     	;# 
  2339  1E9D                     	;# 
  2340  1E9E                     	;# 
  2341  1EA1                     	;# 
  2342  1EA2                     	;# 
  2343  1EA3                     	;# 
  2344  1EA4                     	;# 
  2345  1EA9                     	;# 
  2346  1EAA                     	;# 
  2347  1EB1                     	;# 
  2348  1EB2                     	;# 
  2349  1EB8                     	;# 
  2350  1EB9                     	;# 
  2351  1EBA                     	;# 
  2352  1EBB                     	;# 
  2353  1EBC                     	;# 
  2354  1EBD                     	;# 
  2355  1EBE                     	;# 
  2356  1EC3                     	;# 
  2357  1EC5                     	;# 
  2358  1EC6                     	;# 
  2359  1EC7                     	;# 
  2360  1EC8                     	;# 
  2361  1EC9                     	;# 
  2362  1ECA                     	;# 
  2363  1ECB                     	;# 
  2364  1ECB                     	;# 
  2365  1ECB                     	;# 
  2366  1ECC                     	;# 
  2367  1ECC                     	;# 
  2368  1ECC                     	;# 
  2369  1F10                     	;# 
  2370  1F11                     	;# 
  2371  1F12                     	;# 
  2372  1F14                     	;# 
  2373  1F15                     	;# 
  2374  1F1C                     	;# 
  2375  1F1D                     	;# 
  2376  1F1E                     	;# 
  2377  1F1F                     	;# 
  2378  1F20                     	;# 
  2379  1F21                     	;# 
  2380  1F22                     	;# 
  2381  1F23                     	;# 
  2382  1F24                     	;# 
  2383  1F25                     	;# 
  2384  1F26                     	;# 
  2385  1F27                     	;# 
  2386  1F38                     	;# 
  2387  1F39                     	;# 
  2388  1F3A                     	;# 
  2389  1F3B                     	;# 
  2390  1F3C                     	;# 
  2391  1F3D                     	;# 
  2392  1F3E                     	;# 
  2393  1F3F                     	;# 
  2394  1F43                     	;# 
  2395  1F44                     	;# 
  2396  1F45                     	;# 
  2397  1F46                     	;# 
  2398  1F47                     	;# 
  2399  1F48                     	;# 
  2400  1F49                     	;# 
  2401  1F4A                     	;# 
  2402  1F4E                     	;# 
  2403  1F4F                     	;# 
  2404  1F50                     	;# 
  2405  1F51                     	;# 
  2406  1F52                     	;# 
  2407  1F53                     	;# 
  2408  1F54                     	;# 
  2409  1F55                     	;# 
  2410  1FE4                     	;# 
  2411  1FE5                     	;# 
  2412  1FE6                     	;# 
  2413  1FE7                     	;# 
  2414  1FE8                     	;# 
  2415  1FE8                     	;# 
  2416  1FE9                     	;# 
  2417  1FEA                     	;# 
  2418  1FEB                     	;# 
  2419  1FED                     	;# 
  2420  1FEE                     	;# 
  2421  1FEF                     	;# 
  2422  0000                     	;# 
  2423  0001                     	;# 
  2424  0002                     	;# 
  2425  0003                     	;# 
  2426  0004                     	;# 
  2427  0005                     	;# 
  2428  0006                     	;# 
  2429  0007                     	;# 
  2430  0008                     	;# 
  2431  0009                     	;# 
  2432  000A                     	;# 
  2433  000B                     	;# 
  2434  000C                     	;# 
  2435  000D                     	;# 
  2436  000E                     	;# 
  2437  0012                     	;# 
  2438  0013                     	;# 
  2439  0014                     	;# 
  2440  0018                     	;# 
  2441  0019                     	;# 
  2442  001A                     	;# 
  2443  008C                     	;# 
  2444  008C                     	;# 
  2445  008D                     	;# 
  2446  008E                     	;# 
  2447  008E                     	;# 
  2448  008F                     	;# 
  2449  0090                     	;# 
  2450  0090                     	;# 
  2451  0091                     	;# 
  2452  0092                     	;# 
  2453  0092                     	;# 
  2454  0093                     	;# 
  2455  0094                     	;# 
  2456  0094                     	;# 
  2457  0095                     	;# 
  2458  0096                     	;# 
  2459  0096                     	;# 
  2460  0097                     	;# 
  2461  0098                     	;# 
  2462  0099                     	;# 
  2463  009A                     	;# 
  2464  009B                     	;# 
  2465  009B                     	;# 
  2466  009C                     	;# 
  2467  009D                     	;# 
  2468  009D                     	;# 
  2469  009E                     	;# 
  2470  009F                     	;# 
  2471  010C                     	;# 
  2472  010C                     	;# 
  2473  010D                     	;# 
  2474  010E                     	;# 
  2475  010F                     	;# 
  2476  010F                     	;# 
  2477  0110                     	;# 
  2478  0111                     	;# 
  2479  0112                     	;# 
  2480  0113                     	;# 
  2481  0114                     	;# 
  2482  0115                     	;# 
  2483  0116                     	;# 
  2484  0117                     	;# 
  2485  0118                     	;# 
  2486  0119                     	;# 
  2487  0119                     	;# 
  2488  0119                     	;# 
  2489  011A                     	;# 
  2490  011A                     	;# 
  2491  011A                     	;# 
  2492  011B                     	;# 
  2493  011B                     	;# 
  2494  011B                     	;# 
  2495  011B                     	;# 
  2496  011B                     	;# 
  2497  011C                     	;# 
  2498  011C                     	;# 
  2499  011C                     	;# 
  2500  011D                     	;# 
  2501  011D                     	;# 
  2502  011D                     	;# 
  2503  011E                     	;# 
  2504  011E                     	;# 
  2505  011E                     	;# 
  2506  011F                     	;# 
  2507  011F                     	;# 
  2508  011F                     	;# 
  2509  011F                     	;# 
  2510  011F                     	;# 
  2511  018C                     	;# 
  2512  018D                     	;# 
  2513  018E                     	;# 
  2514  018F                     	;# 
  2515  0190                     	;# 
  2516  0191                     	;# 
  2517  0192                     	;# 
  2518  0196                     	;# 
  2519  0197                     	;# 
  2520  0198                     	;# 
  2521  0199                     	;# 
  2522  019A                     	;# 
  2523  019B                     	;# 
  2524  019C                     	;# 
  2525  020C                     	;# 
  2526  020D                     	;# 
  2527  020E                     	;# 
  2528  020E                     	;# 
  2529  020F                     	;# 
  2530  020F                     	;# 
  2531  0210                     	;# 
  2532  0210                     	;# 
  2533  0211                     	;# 
  2534  0211                     	;# 
  2535  0212                     	;# 
  2536  0213                     	;# 
  2537  0214                     	;# 
  2538  0214                     	;# 
  2539  0215                     	;# 
  2540  0215                     	;# 
  2541  0216                     	;# 
  2542  0216                     	;# 
  2543  0217                     	;# 
  2544  0217                     	;# 
  2545  0218                     	;# 
  2546  0219                     	;# 
  2547  021A                     	;# 
  2548  021A                     	;# 
  2549  021B                     	;# 
  2550  021B                     	;# 
  2551  021C                     	;# 
  2552  021C                     	;# 
  2553  021D                     	;# 
  2554  021D                     	;# 
  2555  021E                     	;# 
  2556  021F                     	;# 
  2557  028C                     	;# 
  2558  028C                     	;# 
  2559  028D                     	;# 
  2560  028D                     	;# 
  2561  028E                     	;# 
  2562  028F                     	;# 
  2563  0290                     	;# 
  2564  0291                     	;# 
  2565  0292                     	;# 
  2566  0292                     	;# 
  2567  0293                     	;# 
  2568  0293                     	;# 
  2569  0294                     	;# 
  2570  0295                     	;# 
  2571  0296                     	;# 
  2572  0297                     	;# 
  2573  0298                     	;# 
  2574  0298                     	;# 
  2575  0299                     	;# 
  2576  0299                     	;# 
  2577  029A                     	;# 
  2578  029B                     	;# 
  2579  029C                     	;# 
  2580  029D                     	;# 
  2581  029F                     	;# 
  2582  030C                     	;# 
  2583  030C                     	;# 
  2584  030D                     	;# 
  2585  030E                     	;# 
  2586  030F                     	;# 
  2587  0310                     	;# 
  2588  0310                     	;# 
  2589  0311                     	;# 
  2590  0312                     	;# 
  2591  0313                     	;# 
  2592  0314                     	;# 
  2593  0314                     	;# 
  2594  0315                     	;# 
  2595  0316                     	;# 
  2596  0317                     	;# 
  2597  0318                     	;# 
  2598  0318                     	;# 
  2599  0319                     	;# 
  2600  031A                     	;# 
  2601  031B                     	;# 
  2602  038C                     	;# 
  2603  038C                     	;# 
  2604  038D                     	;# 
  2605  038E                     	;# 
  2606  0390                     	;# 
  2607  0390                     	;# 
  2608  0391                     	;# 
  2609  0392                     	;# 
  2610  048C                     	;# 
  2611  048C                     	;# 
  2612  048D                     	;# 
  2613  048E                     	;# 
  2614  048F                     	;# 
  2615  048F                     	;# 
  2616  0490                     	;# 
  2617  0491                     	;# 
  2618  0492                     	;# 
  2619  0492                     	;# 
  2620  0493                     	;# 
  2621  0494                     	;# 
  2622  0495                     	;# 
  2623  0495                     	;# 
  2624  0496                     	;# 
  2625  0497                     	;# 
  2626  0498                     	;# 
  2627  0499                     	;# 
  2628  049A                     	;# 
  2629  049B                     	;# 
  2630  049C                     	;# 
  2631  049D                     	;# 
  2632  058C                     	;# 
  2633  058C                     	;# 
  2634  058D                     	;# 
  2635  058E                     	;# 
  2636  058F                     	;# 
  2637  058F                     	;# 
  2638  0590                     	;# 
  2639  0591                     	;# 
  2640  0592                     	;# 
  2641  0593                     	;# 
  2642  059C                     	;# 
  2643  059C                     	;# 
  2644  059D                     	;# 
  2645  059D                     	;# 
  2646  059E                     	;# 
  2647  059F                     	;# 
  2648  060C                     	;# 
  2649  060C                     	;# 
  2650  060D                     	;# 
  2651  060D                     	;# 
  2652  060E                     	;# 
  2653  060F                     	;# 
  2654  0610                     	;# 
  2655  0611                     	;# 
  2656  0612                     	;# 
  2657  0613                     	;# 
  2658  0614                     	;# 
  2659  0616                     	;# 
  2660  0616                     	;# 
  2661  0617                     	;# 
  2662  0617                     	;# 
  2663  0618                     	;# 
  2664  0619                     	;# 
  2665  061A                     	;# 
  2666  061B                     	;# 
  2667  061C                     	;# 
  2668  061D                     	;# 
  2669  061E                     	;# 
  2670  070C                     	;# 
  2671  070D                     	;# 
  2672  070E                     	;# 
  2673  070F                     	;# 
  2674  0710                     	;# 
  2675  0711                     	;# 
  2676  0712                     	;# 
  2677  0713                     	;# 
  2678  0714                     	;# 
  2679  0716                     	;# 
  2680  0717                     	;# 
  2681  0718                     	;# 
  2682  0719                     	;# 
  2683  071A                     	;# 
  2684  071B                     	;# 
  2685  071C                     	;# 
  2686  071D                     	;# 
  2687  071E                     	;# 
  2688  0796                     	;# 
  2689  0797                     	;# 
  2690  0798                     	;# 
  2691  0799                     	;# 
  2692  079A                     	;# 
  2693  079B                     	;# 
  2694  079C                     	;# 
  2695  079D                     	;# 
  2696  080C                     	;# 
  2697  080D                     	;# 
  2698  080E                     	;# 
  2699  080F                     	;# 
  2700  0810                     	;# 
  2701  0811                     	;# 
  2702  0812                     	;# 
  2703  0813                     	;# 
  2704  0814                     	;# 
  2705  081A                     	;# 
  2706  081A                     	;# 
  2707  081B                     	;# 
  2708  081C                     	;# 
  2709  081C                     	;# 
  2710  081D                     	;# 
  2711  081E                     	;# 
  2712  081F                     	;# 
  2713  088C                     	;# 
  2714  088D                     	;# 
  2715  088E                     	;# 
  2716  088F                     	;# 
  2717  0890                     	;# 
  2718  0891                     	;# 
  2719  0892                     	;# 
  2720  0893                     	;# 
  2721  0895                     	;# 
  2722  0896                     	;# 
  2723  0897                     	;# 
  2724  0898                     	;# 
  2725  0899                     	;# 
  2726  089A                     	;# 
  2727  089B                     	;# 
  2728  090C                     	;# 
  2729  090E                     	;# 
  2730  090F                     	;# 
  2731  091F                     	;# 
  2732  098F                     	;# 
  2733  098F                     	;# 
  2734  0990                     	;# 
  2735  0991                     	;# 
  2736  0992                     	;# 
  2737  0993                     	;# 
  2738  0994                     	;# 
  2739  0995                     	;# 
  2740  0996                     	;# 
  2741  0997                     	;# 
  2742  1E0F                     	;# 
  2743  1E10                     	;# 
  2744  1E11                     	;# 
  2745  1E12                     	;# 
  2746  1E13                     	;# 
  2747  1E14                     	;# 
  2748  1E15                     	;# 
  2749  1E16                     	;# 
  2750  1E17                     	;# 
  2751  1E18                     	;# 
  2752  1E19                     	;# 
  2753  1E1A                     	;# 
  2754  1E1B                     	;# 
  2755  1E1C                     	;# 
  2756  1E1D                     	;# 
  2757  1E1E                     	;# 
  2758  1E1F                     	;# 
  2759  1E20                     	;# 
  2760  1E21                     	;# 
  2761  1E22                     	;# 
  2762  1E23                     	;# 
  2763  1E24                     	;# 
  2764  1E25                     	;# 
  2765  1E26                     	;# 
  2766  1E27                     	;# 
  2767  1E28                     	;# 
  2768  1E29                     	;# 
  2769  1E2A                     	;# 
  2770  1E2B                     	;# 
  2771  1E2C                     	;# 
  2772  1E2D                     	;# 
  2773  1E2E                     	;# 
  2774  1E2F                     	;# 
  2775  1E30                     	;# 
  2776  1E31                     	;# 
  2777  1E32                     	;# 
  2778  1E33                     	;# 
  2779  1E34                     	;# 
  2780  1E35                     	;# 
  2781  1E36                     	;# 
  2782  1E37                     	;# 
  2783  1E8F                     	;# 
  2784  1E90                     	;# 
  2785  1E91                     	;# 
  2786  1E92                     	;# 
  2787  1E93                     	;# 
  2788  1E94                     	;# 
  2789  1E95                     	;# 
  2790  1E96                     	;# 
  2791  1E97                     	;# 
  2792  1E9C                     	;# 
  2793  1E9D                     	;# 
  2794  1E9E                     	;# 
  2795  1EA1                     	;# 
  2796  1EA2                     	;# 
  2797  1EA3                     	;# 
  2798  1EA4                     	;# 
  2799  1EA9                     	;# 
  2800  1EAA                     	;# 
  2801  1EB1                     	;# 
  2802  1EB2                     	;# 
  2803  1EB8                     	;# 
  2804  1EB9                     	;# 
  2805  1EBA                     	;# 
  2806  1EBB                     	;# 
  2807  1EBC                     	;# 
  2808  1EBD                     	;# 
  2809  1EBE                     	;# 
  2810  1EC3                     	;# 
  2811  1EC5                     	;# 
  2812  1EC6                     	;# 
  2813  1EC7                     	;# 
  2814  1EC8                     	;# 
  2815  1EC9                     	;# 
  2816  1ECA                     	;# 
  2817  1ECB                     	;# 
  2818  1ECB                     	;# 
  2819  1ECB                     	;# 
  2820  1ECC                     	;# 
  2821  1ECC                     	;# 
  2822  1ECC                     	;# 
  2823  1F10                     	;# 
  2824  1F11                     	;# 
  2825  1F12                     	;# 
  2826  1F14                     	;# 
  2827  1F15                     	;# 
  2828  1F1C                     	;# 
  2829  1F1D                     	;# 
  2830  1F1E                     	;# 
  2831  1F1F                     	;# 
  2832  1F20                     	;# 
  2833  1F21                     	;# 
  2834  1F22                     	;# 
  2835  1F23                     	;# 
  2836  1F24                     	;# 
  2837  1F25                     	;# 
  2838  1F26                     	;# 
  2839  1F27                     	;# 
  2840  1F38                     	;# 
  2841  1F39                     	;# 
  2842  1F3A                     	;# 
  2843  1F3B                     	;# 
  2844  1F3C                     	;# 
  2845  1F3D                     	;# 
  2846  1F3E                     	;# 
  2847  1F3F                     	;# 
  2848  1F43                     	;# 
  2849  1F44                     	;# 
  2850  1F45                     	;# 
  2851  1F46                     	;# 
  2852  1F47                     	;# 
  2853  1F48                     	;# 
  2854  1F49                     	;# 
  2855  1F4A                     	;# 
  2856  1F4E                     	;# 
  2857  1F4F                     	;# 
  2858  1F50                     	;# 
  2859  1F51                     	;# 
  2860  1F52                     	;# 
  2861  1F53                     	;# 
  2862  1F54                     	;# 
  2863  1F55                     	;# 
  2864  1FE4                     	;# 
  2865  1FE5                     	;# 
  2866  1FE6                     	;# 
  2867  1FE7                     	;# 
  2868  1FE8                     	;# 
  2869  1FE8                     	;# 
  2870  1FE9                     	;# 
  2871  1FEA                     	;# 
  2872  1FEB                     	;# 
  2873  1FED                     	;# 
  2874  1FEE                     	;# 
  2875  1FEF                     	;# 
  2876  0000                     	;# 
  2877  0001                     	;# 
  2878  0002                     	;# 
  2879  0003                     	;# 
  2880  0004                     	;# 
  2881  0005                     	;# 
  2882  0006                     	;# 
  2883  0007                     	;# 
  2884  0008                     	;# 
  2885  0009                     	;# 
  2886  000A                     	;# 
  2887  000B                     	;# 
  2888  000C                     	;# 
  2889  000D                     	;# 
  2890  000E                     	;# 
  2891  0012                     	;# 
  2892  0013                     	;# 
  2893  0014                     	;# 
  2894  0018                     	;# 
  2895  0019                     	;# 
  2896  001A                     	;# 
  2897  008C                     	;# 
  2898  008C                     	;# 
  2899  008D                     	;# 
  2900  008E                     	;# 
  2901  008E                     	;# 
  2902  008F                     	;# 
  2903  0090                     	;# 
  2904  0090                     	;# 
  2905  0091                     	;# 
  2906  0092                     	;# 
  2907  0092                     	;# 
  2908  0093                     	;# 
  2909  0094                     	;# 
  2910  0094                     	;# 
  2911  0095                     	;# 
  2912  0096                     	;# 
  2913  0096                     	;# 
  2914  0097                     	;# 
  2915  0098                     	;# 
  2916  0099                     	;# 
  2917  009A                     	;# 
  2918  009B                     	;# 
  2919  009B                     	;# 
  2920  009C                     	;# 
  2921  009D                     	;# 
  2922  009D                     	;# 
  2923  009E                     	;# 
  2924  009F                     	;# 
  2925  010C                     	;# 
  2926  010C                     	;# 
  2927  010D                     	;# 
  2928  010E                     	;# 
  2929  010F                     	;# 
  2930  010F                     	;# 
  2931  0110                     	;# 
  2932  0111                     	;# 
  2933  0112                     	;# 
  2934  0113                     	;# 
  2935  0114                     	;# 
  2936  0115                     	;# 
  2937  0116                     	;# 
  2938  0117                     	;# 
  2939  0118                     	;# 
  2940  0119                     	;# 
  2941  0119                     	;# 
  2942  0119                     	;# 
  2943  011A                     	;# 
  2944  011A                     	;# 
  2945  011A                     	;# 
  2946  011B                     	;# 
  2947  011B                     	;# 
  2948  011B                     	;# 
  2949  011B                     	;# 
  2950  011B                     	;# 
  2951  011C                     	;# 
  2952  011C                     	;# 
  2953  011C                     	;# 
  2954  011D                     	;# 
  2955  011D                     	;# 
  2956  011D                     	;# 
  2957  011E                     	;# 
  2958  011E                     	;# 
  2959  011E                     	;# 
  2960  011F                     	;# 
  2961  011F                     	;# 
  2962  011F                     	;# 
  2963  011F                     	;# 
  2964  011F                     	;# 
  2965  018C                     	;# 
  2966  018D                     	;# 
  2967  018E                     	;# 
  2968  018F                     	;# 
  2969  0190                     	;# 
  2970  0191                     	;# 
  2971  0192                     	;# 
  2972  0196                     	;# 
  2973  0197                     	;# 
  2974  0198                     	;# 
  2975  0199                     	;# 
  2976  019A                     	;# 
  2977  019B                     	;# 
  2978  019C                     	;# 
  2979  020C                     	;# 
  2980  020D                     	;# 
  2981  020E                     	;# 
  2982  020E                     	;# 
  2983  020F                     	;# 
  2984  020F                     	;# 
  2985  0210                     	;# 
  2986  0210                     	;# 
  2987  0211                     	;# 
  2988  0211                     	;# 
  2989  0212                     	;# 
  2990  0213                     	;# 
  2991  0214                     	;# 
  2992  0214                     	;# 
  2993  0215                     	;# 
  2994  0215                     	;# 
  2995  0216                     	;# 
  2996  0216                     	;# 
  2997  0217                     	;# 
  2998  0217                     	;# 
  2999  0218                     	;# 
  3000  0219                     	;# 
  3001  021A                     	;# 
  3002  021A                     	;# 
  3003  021B                     	;# 
  3004  021B                     	;# 
  3005  021C                     	;# 
  3006  021C                     	;# 
  3007  021D                     	;# 
  3008  021D                     	;# 
  3009  021E                     	;# 
  3010  021F                     	;# 
  3011  028C                     	;# 
  3012  028C                     	;# 
  3013  028D                     	;# 
  3014  028D                     	;# 
  3015  028E                     	;# 
  3016  028F                     	;# 
  3017  0290                     	;# 
  3018  0291                     	;# 
  3019  0292                     	;# 
  3020  0292                     	;# 
  3021  0293                     	;# 
  3022  0293                     	;# 
  3023  0294                     	;# 
  3024  0295                     	;# 
  3025  0296                     	;# 
  3026  0297                     	;# 
  3027  0298                     	;# 
  3028  0298                     	;# 
  3029  0299                     	;# 
  3030  0299                     	;# 
  3031  029A                     	;# 
  3032  029B                     	;# 
  3033  029C                     	;# 
  3034  029D                     	;# 
  3035  029F                     	;# 
  3036  030C                     	;# 
  3037  030C                     	;# 
  3038  030D                     	;# 
  3039  030E                     	;# 
  3040  030F                     	;# 
  3041  0310                     	;# 
  3042  0310                     	;# 
  3043  0311                     	;# 
  3044  0312                     	;# 
  3045  0313                     	;# 
  3046  0314                     	;# 
  3047  0314                     	;# 
  3048  0315                     	;# 
  3049  0316                     	;# 
  3050  0317                     	;# 
  3051  0318                     	;# 
  3052  0318                     	;# 
  3053  0319                     	;# 
  3054  031A                     	;# 
  3055  031B                     	;# 
  3056  038C                     	;# 
  3057  038C                     	;# 
  3058  038D                     	;# 
  3059  038E                     	;# 
  3060  0390                     	;# 
  3061  0390                     	;# 
  3062  0391                     	;# 
  3063  0392                     	;# 
  3064  048C                     	;# 
  3065  048C                     	;# 
  3066  048D                     	;# 
  3067  048E                     	;# 
  3068  048F                     	;# 
  3069  048F                     	;# 
  3070  0490                     	;# 
  3071  0491                     	;# 
  3072  0492                     	;# 
  3073  0492                     	;# 
  3074  0493                     	;# 
  3075  0494                     	;# 
  3076  0495                     	;# 
  3077  0495                     	;# 
  3078  0496                     	;# 
  3079  0497                     	;# 
  3080  0498                     	;# 
  3081  0499                     	;# 
  3082  049A                     	;# 
  3083  049B                     	;# 
  3084  049C                     	;# 
  3085  049D                     	;# 
  3086  058C                     	;# 
  3087  058C                     	;# 
  3088  058D                     	;# 
  3089  058E                     	;# 
  3090  058F                     	;# 
  3091  058F                     	;# 
  3092  0590                     	;# 
  3093  0591                     	;# 
  3094  0592                     	;# 
  3095  0593                     	;# 
  3096  059C                     	;# 
  3097  059C                     	;# 
  3098  059D                     	;# 
  3099  059D                     	;# 
  3100  059E                     	;# 
  3101  059F                     	;# 
  3102  060C                     	;# 
  3103  060C                     	;# 
  3104  060D                     	;# 
  3105  060D                     	;# 
  3106  060E                     	;# 
  3107  060F                     	;# 
  3108  0610                     	;# 
  3109  0611                     	;# 
  3110  0612                     	;# 
  3111  0613                     	;# 
  3112  0614                     	;# 
  3113  0616                     	;# 
  3114  0616                     	;# 
  3115  0617                     	;# 
  3116  0617                     	;# 
  3117  0618                     	;# 
  3118  0619                     	;# 
  3119  061A                     	;# 
  3120  061B                     	;# 
  3121  061C                     	;# 
  3122  061D                     	;# 
  3123  061E                     	;# 
  3124  070C                     	;# 
  3125  070D                     	;# 
  3126  070E                     	;# 
  3127  070F                     	;# 
  3128  0710                     	;# 
  3129  0711                     	;# 
  3130  0712                     	;# 
  3131  0713                     	;# 
  3132  0714                     	;# 
  3133  0716                     	;# 
  3134  0717                     	;# 
  3135  0718                     	;# 
  3136  0719                     	;# 
  3137  071A                     	;# 
  3138  071B                     	;# 
  3139  071C                     	;# 
  3140  071D                     	;# 
  3141  071E                     	;# 
  3142  0796                     	;# 
  3143  0797                     	;# 
  3144  0798                     	;# 
  3145  0799                     	;# 
  3146  079A                     	;# 
  3147  079B                     	;# 
  3148  079C                     	;# 
  3149  079D                     	;# 
  3150  080C                     	;# 
  3151  080D                     	;# 
  3152  080E                     	;# 
  3153  080F                     	;# 
  3154  0810                     	;# 
  3155  0811                     	;# 
  3156  0812                     	;# 
  3157  0813                     	;# 
  3158  0814                     	;# 
  3159  081A                     	;# 
  3160  081A                     	;# 
  3161  081B                     	;# 
  3162  081C                     	;# 
  3163  081C                     	;# 
  3164  081D                     	;# 
  3165  081E                     	;# 
  3166  081F                     	;# 
  3167  088C                     	;# 
  3168  088D                     	;# 
  3169  088E                     	;# 
  3170  088F                     	;# 
  3171  0890                     	;# 
  3172  0891                     	;# 
  3173  0892                     	;# 
  3174  0893                     	;# 
  3175  0895                     	;# 
  3176  0896                     	;# 
  3177  0897                     	;# 
  3178  0898                     	;# 
  3179  0899                     	;# 
  3180  089A                     	;# 
  3181  089B                     	;# 
  3182  090C                     	;# 
  3183  090E                     	;# 
  3184  090F                     	;# 
  3185  091F                     	;# 
  3186  098F                     	;# 
  3187  098F                     	;# 
  3188  0990                     	;# 
  3189  0991                     	;# 
  3190  0992                     	;# 
  3191  0993                     	;# 
  3192  0994                     	;# 
  3193  0995                     	;# 
  3194  0996                     	;# 
  3195  0997                     	;# 
  3196  1E0F                     	;# 
  3197  1E10                     	;# 
  3198  1E11                     	;# 
  3199  1E12                     	;# 
  3200  1E13                     	;# 
  3201  1E14                     	;# 
  3202  1E15                     	;# 
  3203  1E16                     	;# 
  3204  1E17                     	;# 
  3205  1E18                     	;# 
  3206  1E19                     	;# 
  3207  1E1A                     	;# 
  3208  1E1B                     	;# 
  3209  1E1C                     	;# 
  3210  1E1D                     	;# 
  3211  1E1E                     	;# 
  3212  1E1F                     	;# 
  3213  1E20                     	;# 
  3214  1E21                     	;# 
  3215  1E22                     	;# 
  3216  1E23                     	;# 
  3217  1E24                     	;# 
  3218  1E25                     	;# 
  3219  1E26                     	;# 
  3220  1E27                     	;# 
  3221  1E28                     	;# 
  3222  1E29                     	;# 
  3223  1E2A                     	;# 
  3224  1E2B                     	;# 
  3225  1E2C                     	;# 
  3226  1E2D                     	;# 
  3227  1E2E                     	;# 
  3228  1E2F                     	;# 
  3229  1E30                     	;# 
  3230  1E31                     	;# 
  3231  1E32                     	;# 
  3232  1E33                     	;# 
  3233  1E34                     	;# 
  3234  1E35                     	;# 
  3235  1E36                     	;# 
  3236  1E37                     	;# 
  3237  1E8F                     	;# 
  3238  1E90                     	;# 
  3239  1E91                     	;# 
  3240  1E92                     	;# 
  3241  1E93                     	;# 
  3242  1E94                     	;# 
  3243  1E95                     	;# 
  3244  1E96                     	;# 
  3245  1E97                     	;# 
  3246  1E9C                     	;# 
  3247  1E9D                     	;# 
  3248  1E9E                     	;# 
  3249  1EA1                     	;# 
  3250  1EA2                     	;# 
  3251  1EA3                     	;# 
  3252  1EA4                     	;# 
  3253  1EA9                     	;# 
  3254  1EAA                     	;# 
  3255  1EB1                     	;# 
  3256  1EB2                     	;# 
  3257  1EB8                     	;# 
  3258  1EB9                     	;# 
  3259  1EBA                     	;# 
  3260  1EBB                     	;# 
  3261  1EBC                     	;# 
  3262  1EBD                     	;# 
  3263  1EBE                     	;# 
  3264  1EC3                     	;# 
  3265  1EC5                     	;# 
  3266  1EC6                     	;# 
  3267  1EC7                     	;# 
  3268  1EC8                     	;# 
  3269  1EC9                     	;# 
  3270  1ECA                     	;# 
  3271  1ECB                     	;# 
  3272  1ECB                     	;# 
  3273  1ECB                     	;# 
  3274  1ECC                     	;# 
  3275  1ECC                     	;# 
  3276  1ECC                     	;# 
  3277  1F10                     	;# 
  3278  1F11                     	;# 
  3279  1F12                     	;# 
  3280  1F14                     	;# 
  3281  1F15                     	;# 
  3282  1F1C                     	;# 
  3283  1F1D                     	;# 
  3284  1F1E                     	;# 
  3285  1F1F                     	;# 
  3286  1F20                     	;# 
  3287  1F21                     	;# 
  3288  1F22                     	;# 
  3289  1F23                     	;# 
  3290  1F24                     	;# 
  3291  1F25                     	;# 
  3292  1F26                     	;# 
  3293  1F27                     	;# 
  3294  1F38                     	;# 
  3295  1F39                     	;# 
  3296  1F3A                     	;# 
  3297  1F3B                     	;# 
  3298  1F3C                     	;# 
  3299  1F3D                     	;# 
  3300  1F3E                     	;# 
  3301  1F3F                     	;# 
  3302  1F43                     	;# 
  3303  1F44                     	;# 
  3304  1F45                     	;# 
  3305  1F46                     	;# 
  3306  1F47                     	;# 
  3307  1F48                     	;# 
  3308  1F49                     	;# 
  3309  1F4A                     	;# 
  3310  1F4E                     	;# 
  3311  1F4F                     	;# 
  3312  1F50                     	;# 
  3313  1F51                     	;# 
  3314  1F52                     	;# 
  3315  1F53                     	;# 
  3316  1F54                     	;# 
  3317  1F55                     	;# 
  3318  1FE4                     	;# 
  3319  1FE5                     	;# 
  3320  1FE6                     	;# 
  3321  1FE7                     	;# 
  3322  1FE8                     	;# 
  3323  1FE8                     	;# 
  3324  1FE9                     	;# 
  3325  1FEA                     	;# 
  3326  1FEB                     	;# 
  3327  1FED                     	;# 
  3328  1FEE                     	;# 
  3329  1FEF                     	;# 
  3330  0000                     	;# 
  3331  0001                     	;# 
  3332  0002                     	;# 
  3333  0003                     	;# 
  3334  0004                     	;# 
  3335  0005                     	;# 
  3336  0006                     	;# 
  3337  0007                     	;# 
  3338  0008                     	;# 
  3339  0009                     	;# 
  3340  000A                     	;# 
  3341  000B                     	;# 
  3342  000C                     	;# 
  3343  000D                     	;# 
  3344  000E                     	;# 
  3345  0012                     	;# 
  3346  0013                     	;# 
  3347  0014                     	;# 
  3348  0018                     	;# 
  3349  0019                     	;# 
  3350  001A                     	;# 
  3351  008C                     	;# 
  3352  008C                     	;# 
  3353  008D                     	;# 
  3354  008E                     	;# 
  3355  008E                     	;# 
  3356  008F                     	;# 
  3357  0090                     	;# 
  3358  0090                     	;# 
  3359  0091                     	;# 
  3360  0092                     	;# 
  3361  0092                     	;# 
  3362  0093                     	;# 
  3363  0094                     	;# 
  3364  0094                     	;# 
  3365  0095                     	;# 
  3366  0096                     	;# 
  3367  0096                     	;# 
  3368  0097                     	;# 
  3369  0098                     	;# 
  3370  0099                     	;# 
  3371  009A                     	;# 
  3372  009B                     	;# 
  3373  009B                     	;# 
  3374  009C                     	;# 
  3375  009D                     	;# 
  3376  009D                     	;# 
  3377  009E                     	;# 
  3378  009F                     	;# 
  3379  010C                     	;# 
  3380  010C                     	;# 
  3381  010D                     	;# 
  3382  010E                     	;# 
  3383  010F                     	;# 
  3384  010F                     	;# 
  3385  0110                     	;# 
  3386  0111                     	;# 
  3387  0112                     	;# 
  3388  0113                     	;# 
  3389  0114                     	;# 
  3390  0115                     	;# 
  3391  0116                     	;# 
  3392  0117                     	;# 
  3393  0118                     	;# 
  3394  0119                     	;# 
  3395  0119                     	;# 
  3396  0119                     	;# 
  3397  011A                     	;# 
  3398  011A                     	;# 
  3399  011A                     	;# 
  3400  011B                     	;# 
  3401  011B                     	;# 
  3402  011B                     	;# 
  3403  011B                     	;# 
  3404  011B                     	;# 
  3405  011C                     	;# 
  3406  011C                     	;# 
  3407  011C                     	;# 
  3408  011D                     	;# 
  3409  011D                     	;# 
  3410  011D                     	;# 
  3411  011E                     	;# 
  3412  011E                     	;# 
  3413  011E                     	;# 
  3414  011F                     	;# 
  3415  011F                     	;# 
  3416  011F                     	;# 
  3417  011F                     	;# 
  3418  011F                     	;# 
  3419  018C                     	;# 
  3420  018D                     	;# 
  3421  018E                     	;# 
  3422  018F                     	;# 
  3423  0190                     	;# 
  3424  0191                     	;# 
  3425  0192                     	;# 
  3426  0196                     	;# 
  3427  0197                     	;# 
  3428  0198                     	;# 
  3429  0199                     	;# 
  3430  019A                     	;# 
  3431  019B                     	;# 
  3432  019C                     	;# 
  3433  020C                     	;# 
  3434  020D                     	;# 
  3435  020E                     	;# 
  3436  020E                     	;# 
  3437  020F                     	;# 
  3438  020F                     	;# 
  3439  0210                     	;# 
  3440  0210                     	;# 
  3441  0211                     	;# 
  3442  0211                     	;# 
  3443  0212                     	;# 
  3444  0213                     	;# 
  3445  0214                     	;# 
  3446  0214                     	;# 
  3447  0215                     	;# 
  3448  0215                     	;# 
  3449  0216                     	;# 
  3450  0216                     	;# 
  3451  0217                     	;# 
  3452  0217                     	;# 
  3453  0218                     	;# 
  3454  0219                     	;# 
  3455  021A                     	;# 
  3456  021A                     	;# 
  3457  021B                     	;# 
  3458  021B                     	;# 
  3459  021C                     	;# 
  3460  021C                     	;# 
  3461  021D                     	;# 
  3462  021D                     	;# 
  3463  021E                     	;# 
  3464  021F                     	;# 
  3465  028C                     	;# 
  3466  028C                     	;# 
  3467  028D                     	;# 
  3468  028D                     	;# 
  3469  028E                     	;# 
  3470  028F                     	;# 
  3471  0290                     	;# 
  3472  0291                     	;# 
  3473  0292                     	;# 
  3474  0292                     	;# 
  3475  0293                     	;# 
  3476  0293                     	;# 
  3477  0294                     	;# 
  3478  0295                     	;# 
  3479  0296                     	;# 
  3480  0297                     	;# 
  3481  0298                     	;# 
  3482  0298                     	;# 
  3483  0299                     	;# 
  3484  0299                     	;# 
  3485  029A                     	;# 
  3486  029B                     	;# 
  3487  029C                     	;# 
  3488  029D                     	;# 
  3489  029F                     	;# 
  3490  030C                     	;# 
  3491  030C                     	;# 
  3492  030D                     	;# 
  3493  030E                     	;# 
  3494  030F                     	;# 
  3495  0310                     	;# 
  3496  0310                     	;# 
  3497  0311                     	;# 
  3498  0312                     	;# 
  3499  0313                     	;# 
  3500  0314                     	;# 
  3501  0314                     	;# 
  3502  0315                     	;# 
  3503  0316                     	;# 
  3504  0317                     	;# 
  3505  0318                     	;# 
  3506  0318                     	;# 
  3507  0319                     	;# 
  3508  031A                     	;# 
  3509  031B                     	;# 
  3510  038C                     	;# 
  3511  038C                     	;# 
  3512  038D                     	;# 
  3513  038E                     	;# 
  3514  0390                     	;# 
  3515  0390                     	;# 
  3516  0391                     	;# 
  3517  0392                     	;# 
  3518  048C                     	;# 
  3519  048C                     	;# 
  3520  048D                     	;# 
  3521  048E                     	;# 
  3522  048F                     	;# 
  3523  048F                     	;# 
  3524  0490                     	;# 
  3525  0491                     	;# 
  3526  0492                     	;# 
  3527  0492                     	;# 
  3528  0493                     	;# 
  3529  0494                     	;# 
  3530  0495                     	;# 
  3531  0495                     	;# 
  3532  0496                     	;# 
  3533  0497                     	;# 
  3534  0498                     	;# 
  3535  0499                     	;# 
  3536  049A                     	;# 
  3537  049B                     	;# 
  3538  049C                     	;# 
  3539  049D                     	;# 
  3540  058C                     	;# 
  3541  058C                     	;# 
  3542  058D                     	;# 
  3543  058E                     	;# 
  3544  058F                     	;# 
  3545  058F                     	;# 
  3546  0590                     	;# 
  3547  0591                     	;# 
  3548  0592                     	;# 
  3549  0593                     	;# 
  3550  059C                     	;# 
  3551  059C                     	;# 
  3552  059D                     	;# 
  3553  059D                     	;# 
  3554  059E                     	;# 
  3555  059F                     	;# 
  3556  060C                     	;# 
  3557  060C                     	;# 
  3558  060D                     	;# 
  3559  060D                     	;# 
  3560  060E                     	;# 
  3561  060F                     	;# 
  3562  0610                     	;# 
  3563  0611                     	;# 
  3564  0612                     	;# 
  3565  0613                     	;# 
  3566  0614                     	;# 
  3567  0616                     	;# 
  3568  0616                     	;# 
  3569  0617                     	;# 
  3570  0617                     	;# 
  3571  0618                     	;# 
  3572  0619                     	;# 
  3573  061A                     	;# 
  3574  061B                     	;# 
  3575  061C                     	;# 
  3576  061D                     	;# 
  3577  061E                     	;# 
  3578  070C                     	;# 
  3579  070D                     	;# 
  3580  070E                     	;# 
  3581  070F                     	;# 
  3582  0710                     	;# 
  3583  0711                     	;# 
  3584  0712                     	;# 
  3585  0713                     	;# 
  3586  0714                     	;# 
  3587  0716                     	;# 
  3588  0717                     	;# 
  3589  0718                     	;# 
  3590  0719                     	;# 
  3591  071A                     	;# 
  3592  071B                     	;# 
  3593  071C                     	;# 
  3594  071D                     	;# 
  3595  071E                     	;# 
  3596  0796                     	;# 
  3597  0797                     	;# 
  3598  0798                     	;# 
  3599  0799                     	;# 
  3600  079A                     	;# 
  3601  079B                     	;# 
  3602  079C                     	;# 
  3603  079D                     	;# 
  3604  080C                     	;# 
  3605  080D                     	;# 
  3606  080E                     	;# 
  3607  080F                     	;# 
  3608  0810                     	;# 
  3609  0811                     	;# 
  3610  0812                     	;# 
  3611  0813                     	;# 
  3612  0814                     	;# 
  3613  081A                     	;# 
  3614  081A                     	;# 
  3615  081B                     	;# 
  3616  081C                     	;# 
  3617  081C                     	;# 
  3618  081D                     	;# 
  3619  081E                     	;# 
  3620  081F                     	;# 
  3621  088C                     	;# 
  3622  088D                     	;# 
  3623  088E                     	;# 
  3624  088F                     	;# 
  3625  0890                     	;# 
  3626  0891                     	;# 
  3627  0892                     	;# 
  3628  0893                     	;# 
  3629  0895                     	;# 
  3630  0896                     	;# 
  3631  0897                     	;# 
  3632  0898                     	;# 
  3633  0899                     	;# 
  3634  089A                     	;# 
  3635  089B                     	;# 
  3636  090C                     	;# 
  3637  090E                     	;# 
  3638  090F                     	;# 
  3639  091F                     	;# 
  3640  098F                     	;# 
  3641  098F                     	;# 
  3642  0990                     	;# 
  3643  0991                     	;# 
  3644  0992                     	;# 
  3645  0993                     	;# 
  3646  0994                     	;# 
  3647  0995                     	;# 
  3648  0996                     	;# 
  3649  0997                     	;# 
  3650  1E0F                     	;# 
  3651  1E10                     	;# 
  3652  1E11                     	;# 
  3653  1E12                     	;# 
  3654  1E13                     	;# 
  3655  1E14                     	;# 
  3656  1E15                     	;# 
  3657  1E16                     	;# 
  3658  1E17                     	;# 
  3659  1E18                     	;# 
  3660  1E19                     	;# 
  3661  1E1A                     	;# 
  3662  1E1B                     	;# 
  3663  1E1C                     	;# 
  3664  1E1D                     	;# 
  3665  1E1E                     	;# 
  3666  1E1F                     	;# 
  3667  1E20                     	;# 
  3668  1E21                     	;# 
  3669  1E22                     	;# 
  3670  1E23                     	;# 
  3671  1E24                     	;# 
  3672  1E25                     	;# 
  3673  1E26                     	;# 
  3674  1E27                     	;# 
  3675  1E28                     	;# 
  3676  1E29                     	;# 
  3677  1E2A                     	;# 
  3678  1E2B                     	;# 
  3679  1E2C                     	;# 
  3680  1E2D                     	;# 
  3681  1E2E                     	;# 
  3682  1E2F                     	;# 
  3683  1E30                     	;# 
  3684  1E31                     	;# 
  3685  1E32                     	;# 
  3686  1E33                     	;# 
  3687  1E34                     	;# 
  3688  1E35                     	;# 
  3689  1E36                     	;# 
  3690  1E37                     	;# 
  3691  1E8F                     	;# 
  3692  1E90                     	;# 
  3693  1E91                     	;# 
  3694  1E92                     	;# 
  3695  1E93                     	;# 
  3696  1E94                     	;# 
  3697  1E95                     	;# 
  3698  1E96                     	;# 
  3699  1E97                     	;# 
  3700  1E9C                     	;# 
  3701  1E9D                     	;# 
  3702  1E9E                     	;# 
  3703  1EA1                     	;# 
  3704  1EA2                     	;# 
  3705  1EA3                     	;# 
  3706  1EA4                     	;# 
  3707  1EA9                     	;# 
  3708  1EAA                     	;# 
  3709  1EB1                     	;# 
  3710  1EB2                     	;# 
  3711  1EB8                     	;# 
  3712  1EB9                     	;# 
  3713  1EBA                     	;# 
  3714  1EBB                     	;# 
  3715  1EBC                     	;# 
  3716  1EBD                     	;# 
  3717  1EBE                     	;# 
  3718  1EC3                     	;# 
  3719  1EC5                     	;# 
  3720  1EC6                     	;# 
  3721  1EC7                     	;# 
  3722  1EC8                     	;# 
  3723  1EC9                     	;# 
  3724  1ECA                     	;# 
  3725  1ECB                     	;# 
  3726  1ECB                     	;# 
  3727  1ECB                     	;# 
  3728  1ECC                     	;# 
  3729  1ECC                     	;# 
  3730  1ECC                     	;# 
  3731  1F10                     	;# 
  3732  1F11                     	;# 
  3733  1F12                     	;# 
  3734  1F14                     	;# 
  3735  1F15                     	;# 
  3736  1F1C                     	;# 
  3737  1F1D                     	;# 
  3738  1F1E                     	;# 
  3739  1F1F                     	;# 
  3740  1F20                     	;# 
  3741  1F21                     	;# 
  3742  1F22                     	;# 
  3743  1F23                     	;# 
  3744  1F24                     	;# 
  3745  1F25                     	;# 
  3746  1F26                     	;# 
  3747  1F27                     	;# 
  3748  1F38                     	;# 
  3749  1F39                     	;# 
  3750  1F3A                     	;# 
  3751  1F3B                     	;# 
  3752  1F3C                     	;# 
  3753  1F3D                     	;# 
  3754  1F3E                     	;# 
  3755  1F3F                     	;# 
  3756  1F43                     	;# 
  3757  1F44                     	;# 
  3758  1F45                     	;# 
  3759  1F46                     	;# 
  3760  1F47                     	;# 
  3761  1F48                     	;# 
  3762  1F49                     	;# 
  3763  1F4A                     	;# 
  3764  1F4E                     	;# 
  3765  1F4F                     	;# 
  3766  1F50                     	;# 
  3767  1F51                     	;# 
  3768  1F52                     	;# 
  3769  1F53                     	;# 
  3770  1F54                     	;# 
  3771  1F55                     	;# 
  3772  1FE4                     	;# 
  3773  1FE5                     	;# 
  3774  1FE6                     	;# 
  3775  1FE7                     	;# 
  3776  1FE8                     	;# 
  3777  1FE8                     	;# 
  3778  1FE9                     	;# 
  3779  1FEA                     	;# 
  3780  1FEB                     	;# 
  3781  1FED                     	;# 
  3782  1FEE                     	;# 
  3783  1FEF                     	;# 
  3784  0000                     	;# 
  3785  0001                     	;# 
  3786  0002                     	;# 
  3787  0003                     	;# 
  3788  0004                     	;# 
  3789  0005                     	;# 
  3790  0006                     	;# 
  3791  0007                     	;# 
  3792  0008                     	;# 
  3793  0009                     	;# 
  3794  000A                     	;# 
  3795  000B                     	;# 
  3796  000C                     	;# 
  3797  000D                     	;# 
  3798  000E                     	;# 
  3799  0012                     	;# 
  3800  0013                     	;# 
  3801  0014                     	;# 
  3802  0018                     	;# 
  3803  0019                     	;# 
  3804  001A                     	;# 
  3805  008C                     	;# 
  3806  008C                     	;# 
  3807  008D                     	;# 
  3808  008E                     	;# 
  3809  008E                     	;# 
  3810  008F                     	;# 
  3811  0090                     	;# 
  3812  0090                     	;# 
  3813  0091                     	;# 
  3814  0092                     	;# 
  3815  0092                     	;# 
  3816  0093                     	;# 
  3817  0094                     	;# 
  3818  0094                     	;# 
  3819  0095                     	;# 
  3820  0096                     	;# 
  3821  0096                     	;# 
  3822  0097                     	;# 
  3823  0098                     	;# 
  3824  0099                     	;# 
  3825  009A                     	;# 
  3826  009B                     	;# 
  3827  009B                     	;# 
  3828  009C                     	;# 
  3829  009D                     	;# 
  3830  009D                     	;# 
  3831  009E                     	;# 
  3832  009F                     	;# 
  3833  010C                     	;# 
  3834  010C                     	;# 
  3835  010D                     	;# 
  3836  010E                     	;# 
  3837  010F                     	;# 
  3838  010F                     	;# 
  3839  0110                     	;# 
  3840  0111                     	;# 
  3841  0112                     	;# 
  3842  0113                     	;# 
  3843  0114                     	;# 
  3844  0115                     	;# 
  3845  0116                     	;# 
  3846  0117                     	;# 
  3847  0118                     	;# 
  3848  0119                     	;# 
  3849  0119                     	;# 
  3850  0119                     	;# 
  3851  011A                     	;# 
  3852  011A                     	;# 
  3853  011A                     	;# 
  3854  011B                     	;# 
  3855  011B                     	;# 
  3856  011B                     	;# 
  3857  011B                     	;# 
  3858  011B                     	;# 
  3859  011C                     	;# 
  3860  011C                     	;# 
  3861  011C                     	;# 
  3862  011D                     	;# 
  3863  011D                     	;# 
  3864  011D                     	;# 
  3865  011E                     	;# 
  3866  011E                     	;# 
  3867  011E                     	;# 
  3868  011F                     	;# 
  3869  011F                     	;# 
  3870  011F                     	;# 
  3871  011F                     	;# 
  3872  011F                     	;# 
  3873  018C                     	;# 
  3874  018D                     	;# 
  3875  018E                     	;# 
  3876  018F                     	;# 
  3877  0190                     	;# 
  3878  0191                     	;# 
  3879  0192                     	;# 
  3880  0196                     	;# 
  3881  0197                     	;# 
  3882  0198                     	;# 
  3883  0199                     	;# 
  3884  019A                     	;# 
  3885  019B                     	;# 
  3886  019C                     	;# 
  3887  020C                     	;# 
  3888  020D                     	;# 
  3889  020E                     	;# 
  3890  020E                     	;# 
  3891  020F                     	;# 
  3892  020F                     	;# 
  3893  0210                     	;# 
  3894  0210                     	;# 
  3895  0211                     	;# 
  3896  0211                     	;# 
  3897  0212                     	;# 
  3898  0213                     	;# 
  3899  0214                     	;# 
  3900  0214                     	;# 
  3901  0215                     	;# 
  3902  0215                     	;# 
  3903  0216                     	;# 
  3904  0216                     	;# 
  3905  0217                     	;# 
  3906  0217                     	;# 
  3907  0218                     	;# 
  3908  0219                     	;# 
  3909  021A                     	;# 
  3910  021A                     	;# 
  3911  021B                     	;# 
  3912  021B                     	;# 
  3913  021C                     	;# 
  3914  021C                     	;# 
  3915  021D                     	;# 
  3916  021D                     	;# 
  3917  021E                     	;# 
  3918  021F                     	;# 
  3919  028C                     	;# 
  3920  028C                     	;# 
  3921  028D                     	;# 
  3922  028D                     	;# 
  3923  028E                     	;# 
  3924  028F                     	;# 
  3925  0290                     	;# 
  3926  0291                     	;# 
  3927  0292                     	;# 
  3928  0292                     	;# 
  3929  0293                     	;# 
  3930  0293                     	;# 
  3931  0294                     	;# 
  3932  0295                     	;# 
  3933  0296                     	;# 
  3934  0297                     	;# 
  3935  0298                     	;# 
  3936  0298                     	;# 
  3937  0299                     	;# 
  3938  0299                     	;# 
  3939  029A                     	;# 
  3940  029B                     	;# 
  3941  029C                     	;# 
  3942  029D                     	;# 
  3943  029F                     	;# 
  3944  030C                     	;# 
  3945  030C                     	;# 
  3946  030D                     	;# 
  3947  030E                     	;# 
  3948  030F                     	;# 
  3949  0310                     	;# 
  3950  0310                     	;# 
  3951  0311                     	;# 
  3952  0312                     	;# 
  3953  0313                     	;# 
  3954  0314                     	;# 
  3955  0314                     	;# 
  3956  0315                     	;# 
  3957  0316                     	;# 
  3958  0317                     	;# 
  3959  0318                     	;# 
  3960  0318                     	;# 
  3961  0319                     	;# 
  3962  031A                     	;# 
  3963  031B                     	;# 
  3964  038C                     	;# 
  3965  038C                     	;# 
  3966  038D                     	;# 
  3967  038E                     	;# 
  3968  0390                     	;# 
  3969  0390                     	;# 
  3970  0391                     	;# 
  3971  0392                     	;# 
  3972  048C                     	;# 
  3973  048C                     	;# 
  3974  048D                     	;# 
  3975  048E                     	;# 
  3976  048F                     	;# 
  3977  048F                     	;# 
  3978  0490                     	;# 
  3979  0491                     	;# 
  3980  0492                     	;# 
  3981  0492                     	;# 
  3982  0493                     	;# 
  3983  0494                     	;# 
  3984  0495                     	;# 
  3985  0495                     	;# 
  3986  0496                     	;# 
  3987  0497                     	;# 
  3988  0498                     	;# 
  3989  0499                     	;# 
  3990  049A                     	;# 
  3991  049B                     	;# 
  3992  049C                     	;# 
  3993  049D                     	;# 
  3994  058C                     	;# 
  3995  058C                     	;# 
  3996  058D                     	;# 
  3997  058E                     	;# 
  3998  058F                     	;# 
  3999  058F                     	;# 
  4000  0590                     	;# 
  4001  0591                     	;# 
  4002  0592                     	;# 
  4003  0593                     	;# 
  4004  059C                     	;# 
  4005  059C                     	;# 
  4006  059D                     	;# 
  4007  059D                     	;# 
  4008  059E                     	;# 
  4009  059F                     	;# 
  4010  060C                     	;# 
  4011  060C                     	;# 
  4012  060D                     	;# 
  4013  060D                     	;# 
  4014  060E                     	;# 
  4015  060F                     	;# 
  4016  0610                     	;# 
  4017  0611                     	;# 
  4018  0612                     	;# 
  4019  0613                     	;# 
  4020  0614                     	;# 
  4021  0616                     	;# 
  4022  0616                     	;# 
  4023  0617                     	;# 
  4024  0617                     	;# 
  4025  0618                     	;# 
  4026  0619                     	;# 
  4027  061A                     	;# 
  4028  061B                     	;# 
  4029  061C                     	;# 
  4030  061D                     	;# 
  4031  061E                     	;# 
  4032  070C                     	;# 
  4033  070D                     	;# 
  4034  070E                     	;# 
  4035  070F                     	;# 
  4036  0710                     	;# 
  4037  0711                     	;# 
  4038  0712                     	;# 
  4039  0713                     	;# 
  4040  0714                     	;# 
  4041  0716                     	;# 
  4042  0717                     	;# 
  4043  0718                     	;# 
  4044  0719                     	;# 
  4045  071A                     	;# 
  4046  071B                     	;# 
  4047  071C                     	;# 
  4048  071D                     	;# 
  4049  071E                     	;# 
  4050  0796                     	;# 
  4051  0797                     	;# 
  4052  0798                     	;# 
  4053  0799                     	;# 
  4054  079A                     	;# 
  4055  079B                     	;# 
  4056  079C                     	;# 
  4057  079D                     	;# 
  4058  080C                     	;# 
  4059  080D                     	;# 
  4060  080E                     	;# 
  4061  080F                     	;# 
  4062  0810                     	;# 
  4063  0811                     	;# 
  4064  0812                     	;# 
  4065  0813                     	;# 
  4066  0814                     	;# 
  4067  081A                     	;# 
  4068  081A                     	;# 
  4069  081B                     	;# 
  4070  081C                     	;# 
  4071  081C                     	;# 
  4072  081D                     	;# 
  4073  081E                     	;# 
  4074  081F                     	;# 
  4075  088C                     	;# 
  4076  088D                     	;# 
  4077  088E                     	;# 
  4078  088F                     	;# 
  4079  0890                     	;# 
  4080  0891                     	;# 
  4081  0892                     	;# 
  4082  0893                     	;# 
  4083  0895                     	;# 
  4084  0896                     	;# 
  4085  0897                     	;# 
  4086  0898                     	;# 
  4087  0899                     	;# 
  4088  089A                     	;# 
  4089  089B                     	;# 
  4090  090C                     	;# 
  4091  090E                     	;# 
  4092  090F                     	;# 
  4093  091F                     	;# 
  4094  098F                     	;# 
  4095  098F                     	;# 
  4096  0990                     	;# 
  4097  0991                     	;# 
  4098  0992                     	;# 
  4099  0993                     	;# 
  4100  0994                     	;# 
  4101  0995                     	;# 
  4102  0996                     	;# 
  4103  0997                     	;# 
  4104  1E0F                     	;# 
  4105  1E10                     	;# 
  4106  1E11                     	;# 
  4107  1E12                     	;# 
  4108  1E13                     	;# 
  4109  1E14                     	;# 
  4110  1E15                     	;# 
  4111  1E16                     	;# 
  4112  1E17                     	;# 
  4113  1E18                     	;# 
  4114  1E19                     	;# 
  4115  1E1A                     	;# 
  4116  1E1B                     	;# 
  4117  1E1C                     	;# 
  4118  1E1D                     	;# 
  4119  1E1E                     	;# 
  4120  1E1F                     	;# 
  4121  1E20                     	;# 
  4122  1E21                     	;# 
  4123  1E22                     	;# 
  4124  1E23                     	;# 
  4125  1E24                     	;# 
  4126  1E25                     	;# 
  4127  1E26                     	;# 
  4128  1E27                     	;# 
  4129  1E28                     	;# 
  4130  1E29                     	;# 
  4131  1E2A                     	;# 
  4132  1E2B                     	;# 
  4133  1E2C                     	;# 
  4134  1E2D                     	;# 
  4135  1E2E                     	;# 
  4136  1E2F                     	;# 
  4137  1E30                     	;# 
  4138  1E31                     	;# 
  4139  1E32                     	;# 
  4140  1E33                     	;# 
  4141  1E34                     	;# 
  4142  1E35                     	;# 
  4143  1E36                     	;# 
  4144  1E37                     	;# 
  4145  1E8F                     	;# 
  4146  1E90                     	;# 
  4147  1E91                     	;# 
  4148  1E92                     	;# 
  4149  1E93                     	;# 
  4150  1E94                     	;# 
  4151  1E95                     	;# 
  4152  1E96                     	;# 
  4153  1E97                     	;# 
  4154  1E9C                     	;# 
  4155  1E9D                     	;# 
  4156  1E9E                     	;# 
  4157  1EA1                     	;# 
  4158  1EA2                     	;# 
  4159  1EA3                     	;# 
  4160  1EA4                     	;# 
  4161  1EA9                     	;# 
  4162  1EAA                     	;# 
  4163  1EB1                     	;# 
  4164  1EB2                     	;# 
  4165  1EB8                     	;# 
  4166  1EB9                     	;# 
  4167  1EBA                     	;# 
  4168  1EBB                     	;# 
  4169  1EBC                     	;# 
  4170  1EBD                     	;# 
  4171  1EBE                     	;# 
  4172  1EC3                     	;# 
  4173  1EC5                     	;# 
  4174  1EC6                     	;# 
  4175  1EC7                     	;# 
  4176  1EC8                     	;# 
  4177  1EC9                     	;# 
  4178  1ECA                     	;# 
  4179  1ECB                     	;# 
  4180  1ECB                     	;# 
  4181  1ECB                     	;# 
  4182  1ECC                     	;# 
  4183  1ECC                     	;# 
  4184  1ECC                     	;# 
  4185  1F10                     	;# 
  4186  1F11                     	;# 
  4187  1F12                     	;# 
  4188  1F14                     	;# 
  4189  1F15                     	;# 
  4190  1F1C                     	;# 
  4191  1F1D                     	;# 
  4192  1F1E                     	;# 
  4193  1F1F                     	;# 
  4194  1F20                     	;# 
  4195  1F21                     	;# 
  4196  1F22                     	;# 
  4197  1F23                     	;# 
  4198  1F24                     	;# 
  4199  1F25                     	;# 
  4200  1F26                     	;# 
  4201  1F27                     	;# 
  4202  1F38                     	;# 
  4203  1F39                     	;# 
  4204  1F3A                     	;# 
  4205  1F3B                     	;# 
  4206  1F3C                     	;# 
  4207  1F3D                     	;# 
  4208  1F3E                     	;# 
  4209  1F3F                     	;# 
  4210  1F43                     	;# 
  4211  1F44                     	;# 
  4212  1F45                     	;# 
  4213  1F46                     	;# 
  4214  1F47                     	;# 
  4215  1F48                     	;# 
  4216  1F49                     	;# 
  4217  1F4A                     	;# 
  4218  1F4E                     	;# 
  4219  1F4F                     	;# 
  4220  1F50                     	;# 
  4221  1F51                     	;# 
  4222  1F52                     	;# 
  4223  1F53                     	;# 
  4224  1F54                     	;# 
  4225  1F55                     	;# 
  4226  1FE4                     	;# 
  4227  1FE5                     	;# 
  4228  1FE6                     	;# 
  4229  1FE7                     	;# 
  4230  1FE8                     	;# 
  4231  1FE8                     	;# 
  4232  1FE9                     	;# 
  4233  1FEA                     	;# 
  4234  1FEB                     	;# 
  4235  1FED                     	;# 
  4236  1FEE                     	;# 
  4237  1FEF                     	;# 
  4238  0000                     	;# 
  4239  0001                     	;# 
  4240  0002                     	;# 
  4241  0003                     	;# 
  4242  0004                     	;# 
  4243  0005                     	;# 
  4244  0006                     	;# 
  4245  0007                     	;# 
  4246  0008                     	;# 
  4247  0009                     	;# 
  4248  000A                     	;# 
  4249  000B                     	;# 
  4250  000C                     	;# 
  4251  000D                     	;# 
  4252  000E                     	;# 
  4253  0012                     	;# 
  4254  0013                     	;# 
  4255  0014                     	;# 
  4256  0018                     	;# 
  4257  0019                     	;# 
  4258  001A                     	;# 
  4259  008C                     	;# 
  4260  008C                     	;# 
  4261  008D                     	;# 
  4262  008E                     	;# 
  4263  008E                     	;# 
  4264  008F                     	;# 
  4265  0090                     	;# 
  4266  0090                     	;# 
  4267  0091                     	;# 
  4268  0092                     	;# 
  4269  0092                     	;# 
  4270  0093                     	;# 
  4271  0094                     	;# 
  4272  0094                     	;# 
  4273  0095                     	;# 
  4274  0096                     	;# 
  4275  0096                     	;# 
  4276  0097                     	;# 
  4277  0098                     	;# 
  4278  0099                     	;# 
  4279  009A                     	;# 
  4280  009B                     	;# 
  4281  009B                     	;# 
  4282  009C                     	;# 
  4283  009D                     	;# 
  4284  009D                     	;# 
  4285  009E                     	;# 
  4286  009F                     	;# 
  4287  010C                     	;# 
  4288  010C                     	;# 
  4289  010D                     	;# 
  4290  010E                     	;# 
  4291  010F                     	;# 
  4292  010F                     	;# 
  4293  0110                     	;# 
  4294  0111                     	;# 
  4295  0112                     	;# 
  4296  0113                     	;# 
  4297  0114                     	;# 
  4298  0115                     	;# 
  4299  0116                     	;# 
  4300  0117                     	;# 
  4301  0118                     	;# 
  4302  0119                     	;# 
  4303  0119                     	;# 
  4304  0119                     	;# 
  4305  011A                     	;# 
  4306  011A                     	;# 
  4307  011A                     	;# 
  4308  011B                     	;# 
  4309  011B                     	;# 
  4310  011B                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011C                     	;# 
  4314  011C                     	;# 
  4315  011C                     	;# 
  4316  011D                     	;# 
  4317  011D                     	;# 
  4318  011D                     	;# 
  4319  011E                     	;# 
  4320  011E                     	;# 
  4321  011E                     	;# 
  4322  011F                     	;# 
  4323  011F                     	;# 
  4324  011F                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  018C                     	;# 
  4328  018D                     	;# 
  4329  018E                     	;# 
  4330  018F                     	;# 
  4331  0190                     	;# 
  4332  0191                     	;# 
  4333  0192                     	;# 
  4334  0196                     	;# 
  4335  0197                     	;# 
  4336  0198                     	;# 
  4337  0199                     	;# 
  4338  019A                     	;# 
  4339  019B                     	;# 
  4340  019C                     	;# 
  4341  020C                     	;# 
  4342  020D                     	;# 
  4343  020E                     	;# 
  4344  020E                     	;# 
  4345  020F                     	;# 
  4346  020F                     	;# 
  4347  0210                     	;# 
  4348  0210                     	;# 
  4349  0211                     	;# 
  4350  0211                     	;# 
  4351  0212                     	;# 
  4352  0213                     	;# 
  4353  0214                     	;# 
  4354  0214                     	;# 
  4355  0215                     	;# 
  4356  0215                     	;# 
  4357  0216                     	;# 
  4358  0216                     	;# 
  4359  0217                     	;# 
  4360  0217                     	;# 
  4361  0218                     	;# 
  4362  0219                     	;# 
  4363  021A                     	;# 
  4364  021A                     	;# 
  4365  021B                     	;# 
  4366  021B                     	;# 
  4367  021C                     	;# 
  4368  021C                     	;# 
  4369  021D                     	;# 
  4370  021D                     	;# 
  4371  021E                     	;# 
  4372  021F                     	;# 
  4373  028C                     	;# 
  4374  028C                     	;# 
  4375  028D                     	;# 
  4376  028D                     	;# 
  4377  028E                     	;# 
  4378  028F                     	;# 
  4379  0290                     	;# 
  4380  0291                     	;# 
  4381  0292                     	;# 
  4382  0292                     	;# 
  4383  0293                     	;# 
  4384  0293                     	;# 
  4385  0294                     	;# 
  4386  0295                     	;# 
  4387  0296                     	;# 
  4388  0297                     	;# 
  4389  0298                     	;# 
  4390  0298                     	;# 
  4391  0299                     	;# 
  4392  0299                     	;# 
  4393  029A                     	;# 
  4394  029B                     	;# 
  4395  029C                     	;# 
  4396  029D                     	;# 
  4397  029F                     	;# 
  4398  030C                     	;# 
  4399  030C                     	;# 
  4400  030D                     	;# 
  4401  030E                     	;# 
  4402  030F                     	;# 
  4403  0310                     	;# 
  4404  0310                     	;# 
  4405  0311                     	;# 
  4406  0312                     	;# 
  4407  0313                     	;# 
  4408  0314                     	;# 
  4409  0314                     	;# 
  4410  0315                     	;# 
  4411  0316                     	;# 
  4412  0317                     	;# 
  4413  0318                     	;# 
  4414  0318                     	;# 
  4415  0319                     	;# 
  4416  031A                     	;# 
  4417  031B                     	;# 
  4418  038C                     	;# 
  4419  038C                     	;# 
  4420  038D                     	;# 
  4421  038E                     	;# 
  4422  0390                     	;# 
  4423  0390                     	;# 
  4424  0391                     	;# 
  4425  0392                     	;# 
  4426  048C                     	;# 
  4427  048C                     	;# 
  4428  048D                     	;# 
  4429  048E                     	;# 
  4430  048F                     	;# 
  4431  048F                     	;# 
  4432  0490                     	;# 
  4433  0491                     	;# 
  4434  0492                     	;# 
  4435  0492                     	;# 
  4436  0493                     	;# 
  4437  0494                     	;# 
  4438  0495                     	;# 
  4439  0495                     	;# 
  4440  0496                     	;# 
  4441  0497                     	;# 
  4442  0498                     	;# 
  4443  0499                     	;# 
  4444  049A                     	;# 
  4445  049B                     	;# 
  4446  049C                     	;# 
  4447  049D                     	;# 
  4448  058C                     	;# 
  4449  058C                     	;# 
  4450  058D                     	;# 
  4451  058E                     	;# 
  4452  058F                     	;# 
  4453  058F                     	;# 
  4454  0590                     	;# 
  4455  0591                     	;# 
  4456  0592                     	;# 
  4457  0593                     	;# 
  4458  059C                     	;# 
  4459  059C                     	;# 
  4460  059D                     	;# 
  4461  059D                     	;# 
  4462  059E                     	;# 
  4463  059F                     	;# 
  4464  060C                     	;# 
  4465  060C                     	;# 
  4466  060D                     	;# 
  4467  060D                     	;# 
  4468  060E                     	;# 
  4469  060F                     	;# 
  4470  0610                     	;# 
  4471  0611                     	;# 
  4472  0612                     	;# 
  4473  0613                     	;# 
  4474  0614                     	;# 
  4475  0616                     	;# 
  4476  0616                     	;# 
  4477  0617                     	;# 
  4478  0617                     	;# 
  4479  0618                     	;# 
  4480  0619                     	;# 
  4481  061A                     	;# 
  4482  061B                     	;# 
  4483  061C                     	;# 
  4484  061D                     	;# 
  4485  061E                     	;# 
  4486  070C                     	;# 
  4487  070D                     	;# 
  4488  070E                     	;# 
  4489  070F                     	;# 
  4490  0710                     	;# 
  4491  0711                     	;# 
  4492  0712                     	;# 
  4493  0713                     	;# 
  4494  0714                     	;# 
  4495  0716                     	;# 
  4496  0717                     	;# 
  4497  0718                     	;# 
  4498  0719                     	;# 
  4499  071A                     	;# 
  4500  071B                     	;# 
  4501  071C                     	;# 
  4502  071D                     	;# 
  4503  071E                     	;# 
  4504  0796                     	;# 
  4505  0797                     	;# 
  4506  0798                     	;# 
  4507  0799                     	;# 
  4508  079A                     	;# 
  4509  079B                     	;# 
  4510  079C                     	;# 
  4511  079D                     	;# 
  4512  080C                     	;# 
  4513  080D                     	;# 
  4514  080E                     	;# 
  4515  080F                     	;# 
  4516  0810                     	;# 
  4517  0811                     	;# 
  4518  0812                     	;# 
  4519  0813                     	;# 
  4520  0814                     	;# 
  4521  081A                     	;# 
  4522  081A                     	;# 
  4523  081B                     	;# 
  4524  081C                     	;# 
  4525  081C                     	;# 
  4526  081D                     	;# 
  4527  081E                     	;# 
  4528  081F                     	;# 
  4529  088C                     	;# 
  4530  088D                     	;# 
  4531  088E                     	;# 
  4532  088F                     	;# 
  4533  0890                     	;# 
  4534  0891                     	;# 
  4535  0892                     	;# 
  4536  0893                     	;# 
  4537  0895                     	;# 
  4538  0896                     	;# 
  4539  0897                     	;# 
  4540  0898                     	;# 
  4541  0899                     	;# 
  4542  089A                     	;# 
  4543  089B                     	;# 
  4544  090C                     	;# 
  4545  090E                     	;# 
  4546  090F                     	;# 
  4547  091F                     	;# 
  4548  098F                     	;# 
  4549  098F                     	;# 
  4550  0990                     	;# 
  4551  0991                     	;# 
  4552  0992                     	;# 
  4553  0993                     	;# 
  4554  0994                     	;# 
  4555  0995                     	;# 
  4556  0996                     	;# 
  4557  0997                     	;# 
  4558  1E0F                     	;# 
  4559  1E10                     	;# 
  4560  1E11                     	;# 
  4561  1E12                     	;# 
  4562  1E13                     	;# 
  4563  1E14                     	;# 
  4564  1E15                     	;# 
  4565  1E16                     	;# 
  4566  1E17                     	;# 
  4567  1E18                     	;# 
  4568  1E19                     	;# 
  4569  1E1A                     	;# 
  4570  1E1B                     	;# 
  4571  1E1C                     	;# 
  4572  1E1D                     	;# 
  4573  1E1E                     	;# 
  4574  1E1F                     	;# 
  4575  1E20                     	;# 
  4576  1E21                     	;# 
  4577  1E22                     	;# 
  4578  1E23                     	;# 
  4579  1E24                     	;# 
  4580  1E25                     	;# 
  4581  1E26                     	;# 
  4582  1E27                     	;# 
  4583  1E28                     	;# 
  4584  1E29                     	;# 
  4585  1E2A                     	;# 
  4586  1E2B                     	;# 
  4587  1E2C                     	;# 
  4588  1E2D                     	;# 
  4589  1E2E                     	;# 
  4590  1E2F                     	;# 
  4591  1E30                     	;# 
  4592  1E31                     	;# 
  4593  1E32                     	;# 
  4594  1E33                     	;# 
  4595  1E34                     	;# 
  4596  1E35                     	;# 
  4597  1E36                     	;# 
  4598  1E37                     	;# 
  4599  1E8F                     	;# 
  4600  1E90                     	;# 
  4601  1E91                     	;# 
  4602  1E92                     	;# 
  4603  1E93                     	;# 
  4604  1E94                     	;# 
  4605  1E95                     	;# 
  4606  1E96                     	;# 
  4607  1E97                     	;# 
  4608  1E9C                     	;# 
  4609  1E9D                     	;# 
  4610  1E9E                     	;# 
  4611  1EA1                     	;# 
  4612  1EA2                     	;# 
  4613  1EA3                     	;# 
  4614  1EA4                     	;# 
  4615  1EA9                     	;# 
  4616  1EAA                     	;# 
  4617  1EB1                     	;# 
  4618  1EB2                     	;# 
  4619  1EB8                     	;# 
  4620  1EB9                     	;# 
  4621  1EBA                     	;# 
  4622  1EBB                     	;# 
  4623  1EBC                     	;# 
  4624  1EBD                     	;# 
  4625  1EBE                     	;# 
  4626  1EC3                     	;# 
  4627  1EC5                     	;# 
  4628  1EC6                     	;# 
  4629  1EC7                     	;# 
  4630  1EC8                     	;# 
  4631  1EC9                     	;# 
  4632  1ECA                     	;# 
  4633  1ECB                     	;# 
  4634  1ECB                     	;# 
  4635  1ECB                     	;# 
  4636  1ECC                     	;# 
  4637  1ECC                     	;# 
  4638  1ECC                     	;# 
  4639  1F10                     	;# 
  4640  1F11                     	;# 
  4641  1F12                     	;# 
  4642  1F14                     	;# 
  4643  1F15                     	;# 
  4644  1F1C                     	;# 
  4645  1F1D                     	;# 
  4646  1F1E                     	;# 
  4647  1F1F                     	;# 
  4648  1F20                     	;# 
  4649  1F21                     	;# 
  4650  1F22                     	;# 
  4651  1F23                     	;# 
  4652  1F24                     	;# 
  4653  1F25                     	;# 
  4654  1F26                     	;# 
  4655  1F27                     	;# 
  4656  1F38                     	;# 
  4657  1F39                     	;# 
  4658  1F3A                     	;# 
  4659  1F3B                     	;# 
  4660  1F3C                     	;# 
  4661  1F3D                     	;# 
  4662  1F3E                     	;# 
  4663  1F3F                     	;# 
  4664  1F43                     	;# 
  4665  1F44                     	;# 
  4666  1F45                     	;# 
  4667  1F46                     	;# 
  4668  1F47                     	;# 
  4669  1F48                     	;# 
  4670  1F49                     	;# 
  4671  1F4A                     	;# 
  4672  1F4E                     	;# 
  4673  1F4F                     	;# 
  4674  1F50                     	;# 
  4675  1F51                     	;# 
  4676  1F52                     	;# 
  4677  1F53                     	;# 
  4678  1F54                     	;# 
  4679  1F55                     	;# 
  4680  1FE4                     	;# 
  4681  1FE5                     	;# 
  4682  1FE6                     	;# 
  4683  1FE7                     	;# 
  4684  1FE8                     	;# 
  4685  1FE8                     	;# 
  4686  1FE9                     	;# 
  4687  1FEA                     	;# 
  4688  1FEB                     	;# 
  4689  1FED                     	;# 
  4690  1FEE                     	;# 
  4691  1FEF                     	;# 
  4692  0000                     	;# 
  4693  0001                     	;# 
  4694  0002                     	;# 
  4695  0003                     	;# 
  4696  0004                     	;# 
  4697  0005                     	;# 
  4698  0006                     	;# 
  4699  0007                     	;# 
  4700  0008                     	;# 
  4701  0009                     	;# 
  4702  000A                     	;# 
  4703  000B                     	;# 
  4704  000C                     	;# 
  4705  000D                     	;# 
  4706  000E                     	;# 
  4707  0012                     	;# 
  4708  0013                     	;# 
  4709  0014                     	;# 
  4710  0018                     	;# 
  4711  0019                     	;# 
  4712  001A                     	;# 
  4713  008C                     	;# 
  4714  008C                     	;# 
  4715  008D                     	;# 
  4716  008E                     	;# 
  4717  008E                     	;# 
  4718  008F                     	;# 
  4719  0090                     	;# 
  4720  0090                     	;# 
  4721  0091                     	;# 
  4722  0092                     	;# 
  4723  0092                     	;# 
  4724  0093                     	;# 
  4725  0094                     	;# 
  4726  0094                     	;# 
  4727  0095                     	;# 
  4728  0096                     	;# 
  4729  0096                     	;# 
  4730  0097                     	;# 
  4731  0098                     	;# 
  4732  0099                     	;# 
  4733  009A                     	;# 
  4734  009B                     	;# 
  4735  009B                     	;# 
  4736  009C                     	;# 
  4737  009D                     	;# 
  4738  009D                     	;# 
  4739  009E                     	;# 
  4740  009F                     	;# 
  4741  010C                     	;# 
  4742  010C                     	;# 
  4743  010D                     	;# 
  4744  010E                     	;# 
  4745  010F                     	;# 
  4746  010F                     	;# 
  4747  0110                     	;# 
  4748  0111                     	;# 
  4749  0112                     	;# 
  4750  0113                     	;# 
  4751  0114                     	;# 
  4752  0115                     	;# 
  4753  0116                     	;# 
  4754  0117                     	;# 
  4755  0118                     	;# 
  4756  0119                     	;# 
  4757  0119                     	;# 
  4758  0119                     	;# 
  4759  011A                     	;# 
  4760  011A                     	;# 
  4761  011A                     	;# 
  4762  011B                     	;# 
  4763  011B                     	;# 
  4764  011B                     	;# 
  4765  011B                     	;# 
  4766  011B                     	;# 
  4767  011C                     	;# 
  4768  011C                     	;# 
  4769  011C                     	;# 
  4770  011D                     	;# 
  4771  011D                     	;# 
  4772  011D                     	;# 
  4773  011E                     	;# 
  4774  011E                     	;# 
  4775  011E                     	;# 
  4776  011F                     	;# 
  4777  011F                     	;# 
  4778  011F                     	;# 
  4779  011F                     	;# 
  4780  011F                     	;# 
  4781  018C                     	;# 
  4782  018D                     	;# 
  4783  018E                     	;# 
  4784  018F                     	;# 
  4785  0190                     	;# 
  4786  0191                     	;# 
  4787  0192                     	;# 
  4788  0196                     	;# 
  4789  0197                     	;# 
  4790  0198                     	;# 
  4791  0199                     	;# 
  4792  019A                     	;# 
  4793  019B                     	;# 
  4794  019C                     	;# 
  4795  020C                     	;# 
  4796  020D                     	;# 
  4797  020E                     	;# 
  4798  020E                     	;# 
  4799  020F                     	;# 
  4800  020F                     	;# 
  4801  0210                     	;# 
  4802  0210                     	;# 
  4803  0211                     	;# 
  4804  0211                     	;# 
  4805  0212                     	;# 
  4806  0213                     	;# 
  4807  0214                     	;# 
  4808  0214                     	;# 
  4809  0215                     	;# 
  4810  0215                     	;# 
  4811  0216                     	;# 
  4812  0216                     	;# 
  4813  0217                     	;# 
  4814  0217                     	;# 
  4815  0218                     	;# 
  4816  0219                     	;# 
  4817  021A                     	;# 
  4818  021A                     	;# 
  4819  021B                     	;# 
  4820  021B                     	;# 
  4821  021C                     	;# 
  4822  021C                     	;# 
  4823  021D                     	;# 
  4824  021D                     	;# 
  4825  021E                     	;# 
  4826  021F                     	;# 
  4827  028C                     	;# 
  4828  028C                     	;# 
  4829  028D                     	;# 
  4830  028D                     	;# 
  4831  028E                     	;# 
  4832  028F                     	;# 
  4833  0290                     	;# 
  4834  0291                     	;# 
  4835  0292                     	;# 
  4836  0292                     	;# 
  4837  0293                     	;# 
  4838  0293                     	;# 
  4839  0294                     	;# 
  4840  0295                     	;# 
  4841  0296                     	;# 
  4842  0297                     	;# 
  4843  0298                     	;# 
  4844  0298                     	;# 
  4845  0299                     	;# 
  4846  0299                     	;# 
  4847  029A                     	;# 
  4848  029B                     	;# 
  4849  029C                     	;# 
  4850  029D                     	;# 
  4851  029F                     	;# 
  4852  030C                     	;# 
  4853  030C                     	;# 
  4854  030D                     	;# 
  4855  030E                     	;# 
  4856  030F                     	;# 
  4857  0310                     	;# 
  4858  0310                     	;# 
  4859  0311                     	;# 
  4860  0312                     	;# 
  4861  0313                     	;# 
  4862  0314                     	;# 
  4863  0314                     	;# 
  4864  0315                     	;# 
  4865  0316                     	;# 
  4866  0317                     	;# 
  4867  0318                     	;# 
  4868  0318                     	;# 
  4869  0319                     	;# 
  4870  031A                     	;# 
  4871  031B                     	;# 
  4872  038C                     	;# 
  4873  038C                     	;# 
  4874  038D                     	;# 
  4875  038E                     	;# 
  4876  0390                     	;# 
  4877  0390                     	;# 
  4878  0391                     	;# 
  4879  0392                     	;# 
  4880  048C                     	;# 
  4881  048C                     	;# 
  4882  048D                     	;# 
  4883  048E                     	;# 
  4884  048F                     	;# 
  4885  048F                     	;# 
  4886  0490                     	;# 
  4887  0491                     	;# 
  4888  0492                     	;# 
  4889  0492                     	;# 
  4890  0493                     	;# 
  4891  0494                     	;# 
  4892  0495                     	;# 
  4893  0495                     	;# 
  4894  0496                     	;# 
  4895  0497                     	;# 
  4896  0498                     	;# 
  4897  0499                     	;# 
  4898  049A                     	;# 
  4899  049B                     	;# 
  4900  049C                     	;# 
  4901  049D                     	;# 
  4902  058C                     	;# 
  4903  058C                     	;# 
  4904  058D                     	;# 
  4905  058E                     	;# 
  4906  058F                     	;# 
  4907  058F                     	;# 
  4908  0590                     	;# 
  4909  0591                     	;# 
  4910  0592                     	;# 
  4911  0593                     	;# 
  4912  059C                     	;# 
  4913  059C                     	;# 
  4914  059D                     	;# 
  4915  059D                     	;# 
  4916  059E                     	;# 
  4917  059F                     	;# 
  4918  060C                     	;# 
  4919  060C                     	;# 
  4920  060D                     	;# 
  4921  060D                     	;# 
  4922  060E                     	;# 
  4923  060F                     	;# 
  4924  0610                     	;# 
  4925  0611                     	;# 
  4926  0612                     	;# 
  4927  0613                     	;# 
  4928  0614                     	;# 
  4929  0616                     	;# 
  4930  0616                     	;# 
  4931  0617                     	;# 
  4932  0617                     	;# 
  4933  0618                     	;# 
  4934  0619                     	;# 
  4935  061A                     	;# 
  4936  061B                     	;# 
  4937  061C                     	;# 
  4938  061D                     	;# 
  4939  061E                     	;# 
  4940  070C                     	;# 
  4941  070D                     	;# 
  4942  070E                     	;# 
  4943  070F                     	;# 
  4944  0710                     	;# 
  4945  0711                     	;# 
  4946  0712                     	;# 
  4947  0713                     	;# 
  4948  0714                     	;# 
  4949  0716                     	;# 
  4950  0717                     	;# 
  4951  0718                     	;# 
  4952  0719                     	;# 
  4953  071A                     	;# 
  4954  071B                     	;# 
  4955  071C                     	;# 
  4956  071D                     	;# 
  4957  071E                     	;# 
  4958  0796                     	;# 
  4959  0797                     	;# 
  4960  0798                     	;# 
  4961  0799                     	;# 
  4962  079A                     	;# 
  4963  079B                     	;# 
  4964  079C                     	;# 
  4965  079D                     	;# 
  4966  080C                     	;# 
  4967  080D                     	;# 
  4968  080E                     	;# 
  4969  080F                     	;# 
  4970  0810                     	;# 
  4971  0811                     	;# 
  4972  0812                     	;# 
  4973  0813                     	;# 
  4974  0814                     	;# 
  4975  081A                     	;# 
  4976  081A                     	;# 
  4977  081B                     	;# 
  4978  081C                     	;# 
  4979  081C                     	;# 
  4980  081D                     	;# 
  4981  081E                     	;# 
  4982  081F                     	;# 
  4983  088C                     	;# 
  4984  088D                     	;# 
  4985  088E                     	;# 
  4986  088F                     	;# 
  4987  0890                     	;# 
  4988  0891                     	;# 
  4989  0892                     	;# 
  4990  0893                     	;# 
  4991  0895                     	;# 
  4992  0896                     	;# 
  4993  0897                     	;# 
  4994  0898                     	;# 
  4995  0899                     	;# 
  4996  089A                     	;# 
  4997  089B                     	;# 
  4998  090C                     	;# 
  4999  090E                     	;# 
  5000  090F                     	;# 
  5001  091F                     	;# 
  5002  098F                     	;# 
  5003  098F                     	;# 
  5004  0990                     	;# 
  5005  0991                     	;# 
  5006  0992                     	;# 
  5007  0993                     	;# 
  5008  0994                     	;# 
  5009  0995                     	;# 
  5010  0996                     	;# 
  5011  0997                     	;# 
  5012  1E0F                     	;# 
  5013  1E10                     	;# 
  5014  1E11                     	;# 
  5015  1E12                     	;# 
  5016  1E13                     	;# 
  5017  1E14                     	;# 
  5018  1E15                     	;# 
  5019  1E16                     	;# 
  5020  1E17                     	;# 
  5021  1E18                     	;# 
  5022  1E19                     	;# 
  5023  1E1A                     	;# 
  5024  1E1B                     	;# 
  5025  1E1C                     	;# 
  5026  1E1D                     	;# 
  5027  1E1E                     	;# 
  5028  1E1F                     	;# 
  5029  1E20                     	;# 
  5030  1E21                     	;# 
  5031  1E22                     	;# 
  5032  1E23                     	;# 
  5033  1E24                     	;# 
  5034  1E25                     	;# 
  5035  1E26                     	;# 
  5036  1E27                     	;# 
  5037  1E28                     	;# 
  5038  1E29                     	;# 
  5039  1E2A                     	;# 
  5040  1E2B                     	;# 
  5041  1E2C                     	;# 
  5042  1E2D                     	;# 
  5043  1E2E                     	;# 
  5044  1E2F                     	;# 
  5045  1E30                     	;# 
  5046  1E31                     	;# 
  5047  1E32                     	;# 
  5048  1E33                     	;# 
  5049  1E34                     	;# 
  5050  1E35                     	;# 
  5051  1E36                     	;# 
  5052  1E37                     	;# 
  5053  1E8F                     	;# 
  5054  1E90                     	;# 
  5055  1E91                     	;# 
  5056  1E92                     	;# 
  5057  1E93                     	;# 
  5058  1E94                     	;# 
  5059  1E95                     	;# 
  5060  1E96                     	;# 
  5061  1E97                     	;# 
  5062  1E9C                     	;# 
  5063  1E9D                     	;# 
  5064  1E9E                     	;# 
  5065  1EA1                     	;# 
  5066  1EA2                     	;# 
  5067  1EA3                     	;# 
  5068  1EA4                     	;# 
  5069  1EA9                     	;# 
  5070  1EAA                     	;# 
  5071  1EB1                     	;# 
  5072  1EB2                     	;# 
  5073  1EB8                     	;# 
  5074  1EB9                     	;# 
  5075  1EBA                     	;# 
  5076  1EBB                     	;# 
  5077  1EBC                     	;# 
  5078  1EBD                     	;# 
  5079  1EBE                     	;# 
  5080  1EC3                     	;# 
  5081  1EC5                     	;# 
  5082  1EC6                     	;# 
  5083  1EC7                     	;# 
  5084  1EC8                     	;# 
  5085  1EC9                     	;# 
  5086  1ECA                     	;# 
  5087  1ECB                     	;# 
  5088  1ECB                     	;# 
  5089  1ECB                     	;# 
  5090  1ECC                     	;# 
  5091  1ECC                     	;# 
  5092  1ECC                     	;# 
  5093  1F10                     	;# 
  5094  1F11                     	;# 
  5095  1F12                     	;# 
  5096  1F14                     	;# 
  5097  1F15                     	;# 
  5098  1F1C                     	;# 
  5099  1F1D                     	;# 
  5100  1F1E                     	;# 
  5101  1F1F                     	;# 
  5102  1F20                     	;# 
  5103  1F21                     	;# 
  5104  1F22                     	;# 
  5105  1F23                     	;# 
  5106  1F24                     	;# 
  5107  1F25                     	;# 
  5108  1F26                     	;# 
  5109  1F27                     	;# 
  5110  1F38                     	;# 
  5111  1F39                     	;# 
  5112  1F3A                     	;# 
  5113  1F3B                     	;# 
  5114  1F3C                     	;# 
  5115  1F3D                     	;# 
  5116  1F3E                     	;# 
  5117  1F3F                     	;# 
  5118  1F43                     	;# 
  5119  1F44                     	;# 
  5120  1F45                     	;# 
  5121  1F46                     	;# 
  5122  1F47                     	;# 
  5123  1F48                     	;# 
  5124  1F49                     	;# 
  5125  1F4A                     	;# 
  5126  1F4E                     	;# 
  5127  1F4F                     	;# 
  5128  1F50                     	;# 
  5129  1F51                     	;# 
  5130  1F52                     	;# 
  5131  1F53                     	;# 
  5132  1F54                     	;# 
  5133  1F55                     	;# 
  5134  1FE4                     	;# 
  5135  1FE5                     	;# 
  5136  1FE6                     	;# 
  5137  1FE7                     	;# 
  5138  1FE8                     	;# 
  5139  1FE8                     	;# 
  5140  1FE9                     	;# 
  5141  1FEA                     	;# 
  5142  1FEB                     	;# 
  5143  1FED                     	;# 
  5144  1FEE                     	;# 
  5145  1FEF                     	;# 
  5146  0000                     	;# 
  5147  0001                     	;# 
  5148  0002                     	;# 
  5149  0003                     	;# 
  5150  0004                     	;# 
  5151  0005                     	;# 
  5152  0006                     	;# 
  5153  0007                     	;# 
  5154  0008                     	;# 
  5155  0009                     	;# 
  5156  000A                     	;# 
  5157  000B                     	;# 
  5158  000C                     	;# 
  5159  000D                     	;# 
  5160  000E                     	;# 
  5161  0012                     	;# 
  5162  0013                     	;# 
  5163  0014                     	;# 
  5164  0018                     	;# 
  5165  0019                     	;# 
  5166  001A                     	;# 
  5167  008C                     	;# 
  5168  008C                     	;# 
  5169  008D                     	;# 
  5170  008E                     	;# 
  5171  008E                     	;# 
  5172  008F                     	;# 
  5173  0090                     	;# 
  5174  0090                     	;# 
  5175  0091                     	;# 
  5176  0092                     	;# 
  5177  0092                     	;# 
  5178  0093                     	;# 
  5179  0094                     	;# 
  5180  0094                     	;# 
  5181  0095                     	;# 
  5182  0096                     	;# 
  5183  0096                     	;# 
  5184  0097                     	;# 
  5185  0098                     	;# 
  5186  0099                     	;# 
  5187  009A                     	;# 
  5188  009B                     	;# 
  5189  009B                     	;# 
  5190  009C                     	;# 
  5191  009D                     	;# 
  5192  009D                     	;# 
  5193  009E                     	;# 
  5194  009F                     	;# 
  5195  010C                     	;# 
  5196  010C                     	;# 
  5197  010D                     	;# 
  5198  010E                     	;# 
  5199  010F                     	;# 
  5200  010F                     	;# 
  5201  0110                     	;# 
  5202  0111                     	;# 
  5203  0112                     	;# 
  5204  0113                     	;# 
  5205  0114                     	;# 
  5206  0115                     	;# 
  5207  0116                     	;# 
  5208  0117                     	;# 
  5209  0118                     	;# 
  5210  0119                     	;# 
  5211  0119                     	;# 
  5212  0119                     	;# 
  5213  011A                     	;# 
  5214  011A                     	;# 
  5215  011A                     	;# 
  5216  011B                     	;# 
  5217  011B                     	;# 
  5218  011B                     	;# 
  5219  011B                     	;# 
  5220  011B                     	;# 
  5221  011C                     	;# 
  5222  011C                     	;# 
  5223  011C                     	;# 
  5224  011D                     	;# 
  5225  011D                     	;# 
  5226  011D                     	;# 
  5227  011E                     	;# 
  5228  011E                     	;# 
  5229  011E                     	;# 
  5230  011F                     	;# 
  5231  011F                     	;# 
  5232  011F                     	;# 
  5233  011F                     	;# 
  5234  011F                     	;# 
  5235  018C                     	;# 
  5236  018D                     	;# 
  5237  018E                     	;# 
  5238  018F                     	;# 
  5239  0190                     	;# 
  5240  0191                     	;# 
  5241  0192                     	;# 
  5242  0196                     	;# 
  5243  0197                     	;# 
  5244  0198                     	;# 
  5245  0199                     	;# 
  5246  019A                     	;# 
  5247  019B                     	;# 
  5248  019C                     	;# 
  5249  020C                     	;# 
  5250  020D                     	;# 
  5251  020E                     	;# 
  5252  020E                     	;# 
  5253  020F                     	;# 
  5254  020F                     	;# 
  5255  0210                     	;# 
  5256  0210                     	;# 
  5257  0211                     	;# 
  5258  0211                     	;# 
  5259  0212                     	;# 
  5260  0213                     	;# 
  5261  0214                     	;# 
  5262  0214                     	;# 
  5263  0215                     	;# 
  5264  0215                     	;# 
  5265  0216                     	;# 
  5266  0216                     	;# 
  5267  0217                     	;# 
  5268  0217                     	;# 
  5269  0218                     	;# 
  5270  0219                     	;# 
  5271  021A                     	;# 
  5272  021A                     	;# 
  5273  021B                     	;# 
  5274  021B                     	;# 
  5275  021C                     	;# 
  5276  021C                     	;# 
  5277  021D                     	;# 
  5278  021D                     	;# 
  5279  021E                     	;# 
  5280  021F                     	;# 
  5281  028C                     	;# 
  5282  028C                     	;# 
  5283  028D                     	;# 
  5284  028D                     	;# 
  5285  028E                     	;# 
  5286  028F                     	;# 
  5287  0290                     	;# 
  5288  0291                     	;# 
  5289  0292                     	;# 
  5290  0292                     	;# 
  5291  0293                     	;# 
  5292  0293                     	;# 
  5293  0294                     	;# 
  5294  0295                     	;# 
  5295  0296                     	;# 
  5296  0297                     	;# 
  5297  0298                     	;# 
  5298  0298                     	;# 
  5299  0299                     	;# 
  5300  0299                     	;# 
  5301  029A                     	;# 
  5302  029B                     	;# 
  5303  029C                     	;# 
  5304  029D                     	;# 
  5305  029F                     	;# 
  5306  030C                     	;# 
  5307  030C                     	;# 
  5308  030D                     	;# 
  5309  030E                     	;# 
  5310  030F                     	;# 
  5311  0310                     	;# 
  5312  0310                     	;# 
  5313  0311                     	;# 
  5314  0312                     	;# 
  5315  0313                     	;# 
  5316  0314                     	;# 
  5317  0314                     	;# 
  5318  0315                     	;# 
  5319  0316                     	;# 
  5320  0317                     	;# 
  5321  0318                     	;# 
  5322  0318                     	;# 
  5323  0319                     	;# 
  5324  031A                     	;# 
  5325  031B                     	;# 
  5326  038C                     	;# 
  5327  038C                     	;# 
  5328  038D                     	;# 
  5329  038E                     	;# 
  5330  0390                     	;# 
  5331  0390                     	;# 
  5332  0391                     	;# 
  5333  0392                     	;# 
  5334  048C                     	;# 
  5335  048C                     	;# 
  5336  048D                     	;# 
  5337  048E                     	;# 
  5338  048F                     	;# 
  5339  048F                     	;# 
  5340  0490                     	;# 
  5341  0491                     	;# 
  5342  0492                     	;# 
  5343  0492                     	;# 
  5344  0493                     	;# 
  5345  0494                     	;# 
  5346  0495                     	;# 
  5347  0495                     	;# 
  5348  0496                     	;# 
  5349  0497                     	;# 
  5350  0498                     	;# 
  5351  0499                     	;# 
  5352  049A                     	;# 
  5353  049B                     	;# 
  5354  049C                     	;# 
  5355  049D                     	;# 
  5356  058C                     	;# 
  5357  058C                     	;# 
  5358  058D                     	;# 
  5359  058E                     	;# 
  5360  058F                     	;# 
  5361  058F                     	;# 
  5362  0590                     	;# 
  5363  0591                     	;# 
  5364  0592                     	;# 
  5365  0593                     	;# 
  5366  059C                     	;# 
  5367  059C                     	;# 
  5368  059D                     	;# 
  5369  059D                     	;# 
  5370  059E                     	;# 
  5371  059F                     	;# 
  5372  060C                     	;# 
  5373  060C                     	;# 
  5374  060D                     	;# 
  5375  060D                     	;# 
  5376  060E                     	;# 
  5377  060F                     	;# 
  5378  0610                     	;# 
  5379  0611                     	;# 
  5380  0612                     	;# 
  5381  0613                     	;# 
  5382  0614                     	;# 
  5383  0616                     	;# 
  5384  0616                     	;# 
  5385  0617                     	;# 
  5386  0617                     	;# 
  5387  0618                     	;# 
  5388  0619                     	;# 
  5389  061A                     	;# 
  5390  061B                     	;# 
  5391  061C                     	;# 
  5392  061D                     	;# 
  5393  061E                     	;# 
  5394  070C                     	;# 
  5395  070D                     	;# 
  5396  070E                     	;# 
  5397  070F                     	;# 
  5398  0710                     	;# 
  5399  0711                     	;# 
  5400  0712                     	;# 
  5401  0713                     	;# 
  5402  0714                     	;# 
  5403  0716                     	;# 
  5404  0717                     	;# 
  5405  0718                     	;# 
  5406  0719                     	;# 
  5407  071A                     	;# 
  5408  071B                     	;# 
  5409  071C                     	;# 
  5410  071D                     	;# 
  5411  071E                     	;# 
  5412  0796                     	;# 
  5413  0797                     	;# 
  5414  0798                     	;# 
  5415  0799                     	;# 
  5416  079A                     	;# 
  5417  079B                     	;# 
  5418  079C                     	;# 
  5419  079D                     	;# 
  5420  080C                     	;# 
  5421  080D                     	;# 
  5422  080E                     	;# 
  5423  080F                     	;# 
  5424  0810                     	;# 
  5425  0811                     	;# 
  5426  0812                     	;# 
  5427  0813                     	;# 
  5428  0814                     	;# 
  5429  081A                     	;# 
  5430  081A                     	;# 
  5431  081B                     	;# 
  5432  081C                     	;# 
  5433  081C                     	;# 
  5434  081D                     	;# 
  5435  081E                     	;# 
  5436  081F                     	;# 
  5437  088C                     	;# 
  5438  088D                     	;# 
  5439  088E                     	;# 
  5440  088F                     	;# 
  5441  0890                     	;# 
  5442  0891                     	;# 
  5443  0892                     	;# 
  5444  0893                     	;# 
  5445  0895                     	;# 
  5446  0896                     	;# 
  5447  0897                     	;# 
  5448  0898                     	;# 
  5449  0899                     	;# 
  5450  089A                     	;# 
  5451  089B                     	;# 
  5452  090C                     	;# 
  5453  090E                     	;# 
  5454  090F                     	;# 
  5455  091F                     	;# 
  5456  098F                     	;# 
  5457  098F                     	;# 
  5458  0990                     	;# 
  5459  0991                     	;# 
  5460  0992                     	;# 
  5461  0993                     	;# 
  5462  0994                     	;# 
  5463  0995                     	;# 
  5464  0996                     	;# 
  5465  0997                     	;# 
  5466  1E0F                     	;# 
  5467  1E10                     	;# 
  5468  1E11                     	;# 
  5469  1E12                     	;# 
  5470  1E13                     	;# 
  5471  1E14                     	;# 
  5472  1E15                     	;# 
  5473  1E16                     	;# 
  5474  1E17                     	;# 
  5475  1E18                     	;# 
  5476  1E19                     	;# 
  5477  1E1A                     	;# 
  5478  1E1B                     	;# 
  5479  1E1C                     	;# 
  5480  1E1D                     	;# 
  5481  1E1E                     	;# 
  5482  1E1F                     	;# 
  5483  1E20                     	;# 
  5484  1E21                     	;# 
  5485  1E22                     	;# 
  5486  1E23                     	;# 
  5487  1E24                     	;# 
  5488  1E25                     	;# 
  5489  1E26                     	;# 
  5490  1E27                     	;# 
  5491  1E28                     	;# 
  5492  1E29                     	;# 
  5493  1E2A                     	;# 
  5494  1E2B                     	;# 
  5495  1E2C                     	;# 
  5496  1E2D                     	;# 
  5497  1E2E                     	;# 
  5498  1E2F                     	;# 
  5499  1E30                     	;# 
  5500  1E31                     	;# 
  5501  1E32                     	;# 
  5502  1E33                     	;# 
  5503  1E34                     	;# 
  5504  1E35                     	;# 
  5505  1E36                     	;# 
  5506  1E37                     	;# 
  5507  1E8F                     	;# 
  5508  1E90                     	;# 
  5509  1E91                     	;# 
  5510  1E92                     	;# 
  5511  1E93                     	;# 
  5512  1E94                     	;# 
  5513  1E95                     	;# 
  5514  1E96                     	;# 
  5515  1E97                     	;# 
  5516  1E9C                     	;# 
  5517  1E9D                     	;# 
  5518  1E9E                     	;# 
  5519  1EA1                     	;# 
  5520  1EA2                     	;# 
  5521  1EA3                     	;# 
  5522  1EA4                     	;# 
  5523  1EA9                     	;# 
  5524  1EAA                     	;# 
  5525  1EB1                     	;# 
  5526  1EB2                     	;# 
  5527  1EB8                     	;# 
  5528  1EB9                     	;# 
  5529  1EBA                     	;# 
  5530  1EBB                     	;# 
  5531  1EBC                     	;# 
  5532  1EBD                     	;# 
  5533  1EBE                     	;# 
  5534  1EC3                     	;# 
  5535  1EC5                     	;# 
  5536  1EC6                     	;# 
  5537  1EC7                     	;# 
  5538  1EC8                     	;# 
  5539  1EC9                     	;# 
  5540  1ECA                     	;# 
  5541  1ECB                     	;# 
  5542  1ECB                     	;# 
  5543  1ECB                     	;# 
  5544  1ECC                     	;# 
  5545  1ECC                     	;# 
  5546  1ECC                     	;# 
  5547  1F10                     	;# 
  5548  1F11                     	;# 
  5549  1F12                     	;# 
  5550  1F14                     	;# 
  5551  1F15                     	;# 
  5552  1F1C                     	;# 
  5553  1F1D                     	;# 
  5554  1F1E                     	;# 
  5555  1F1F                     	;# 
  5556  1F20                     	;# 
  5557  1F21                     	;# 
  5558  1F22                     	;# 
  5559  1F23                     	;# 
  5560  1F24                     	;# 
  5561  1F25                     	;# 
  5562  1F26                     	;# 
  5563  1F27                     	;# 
  5564  1F38                     	;# 
  5565  1F39                     	;# 
  5566  1F3A                     	;# 
  5567  1F3B                     	;# 
  5568  1F3C                     	;# 
  5569  1F3D                     	;# 
  5570  1F3E                     	;# 
  5571  1F3F                     	;# 
  5572  1F43                     	;# 
  5573  1F44                     	;# 
  5574  1F45                     	;# 
  5575  1F46                     	;# 
  5576  1F47                     	;# 
  5577  1F48                     	;# 
  5578  1F49                     	;# 
  5579  1F4A                     	;# 
  5580  1F4E                     	;# 
  5581  1F4F                     	;# 
  5582  1F50                     	;# 
  5583  1F51                     	;# 
  5584  1F52                     	;# 
  5585  1F53                     	;# 
  5586  1F54                     	;# 
  5587  1F55                     	;# 
  5588  1FE4                     	;# 
  5589  1FE5                     	;# 
  5590  1FE6                     	;# 
  5591  1FE7                     	;# 
  5592  1FE8                     	;# 
  5593  1FE8                     	;# 
  5594  1FE9                     	;# 
  5595  1FEA                     	;# 
  5596  1FEB                     	;# 
  5597  1FED                     	;# 
  5598  1FEE                     	;# 
  5599  1FEF                     	;# 
  5600  0000                     	;# 
  5601  0001                     	;# 
  5602  0002                     	;# 
  5603  0003                     	;# 
  5604  0004                     	;# 
  5605  0005                     	;# 
  5606  0006                     	;# 
  5607  0007                     	;# 
  5608  0008                     	;# 
  5609  0009                     	;# 
  5610  000A                     	;# 
  5611  000B                     	;# 
  5612  000C                     	;# 
  5613  000D                     	;# 
  5614  000E                     	;# 
  5615  0012                     	;# 
  5616  0013                     	;# 
  5617  0014                     	;# 
  5618  0018                     	;# 
  5619  0019                     	;# 
  5620  001A                     	;# 
  5621  008C                     	;# 
  5622  008C                     	;# 
  5623  008D                     	;# 
  5624  008E                     	;# 
  5625  008E                     	;# 
  5626  008F                     	;# 
  5627  0090                     	;# 
  5628  0090                     	;# 
  5629  0091                     	;# 
  5630  0092                     	;# 
  5631  0092                     	;# 
  5632  0093                     	;# 
  5633  0094                     	;# 
  5634  0094                     	;# 
  5635  0095                     	;# 
  5636  0096                     	;# 
  5637  0096                     	;# 
  5638  0097                     	;# 
  5639  0098                     	;# 
  5640  0099                     	;# 
  5641  009A                     	;# 
  5642  009B                     	;# 
  5643  009B                     	;# 
  5644  009C                     	;# 
  5645  009D                     	;# 
  5646  009D                     	;# 
  5647  009E                     	;# 
  5648  009F                     	;# 
  5649  010C                     	;# 
  5650  010C                     	;# 
  5651  010D                     	;# 
  5652  010E                     	;# 
  5653  010F                     	;# 
  5654  010F                     	;# 
  5655  0110                     	;# 
  5656  0111                     	;# 
  5657  0112                     	;# 
  5658  0113                     	;# 
  5659  0114                     	;# 
  5660  0115                     	;# 
  5661  0116                     	;# 
  5662  0117                     	;# 
  5663  0118                     	;# 
  5664  0119                     	;# 
  5665  0119                     	;# 
  5666  0119                     	;# 
  5667  011A                     	;# 
  5668  011A                     	;# 
  5669  011A                     	;# 
  5670  011B                     	;# 
  5671  011B                     	;# 
  5672  011B                     	;# 
  5673  011B                     	;# 
  5674  011B                     	;# 
  5675  011C                     	;# 
  5676  011C                     	;# 
  5677  011C                     	;# 
  5678  011D                     	;# 
  5679  011D                     	;# 
  5680  011D                     	;# 
  5681  011E                     	;# 
  5682  011E                     	;# 
  5683  011E                     	;# 
  5684  011F                     	;# 
  5685  011F                     	;# 
  5686  011F                     	;# 
  5687  011F                     	;# 
  5688  011F                     	;# 
  5689  018C                     	;# 
  5690  018D                     	;# 
  5691  018E                     	;# 
  5692  018F                     	;# 
  5693  0190                     	;# 
  5694  0191                     	;# 
  5695  0192                     	;# 
  5696  0196                     	;# 
  5697  0197                     	;# 
  5698  0198                     	;# 
  5699  0199                     	;# 
  5700  019A                     	;# 
  5701  019B                     	;# 
  5702  019C                     	;# 
  5703  020C                     	;# 
  5704  020D                     	;# 
  5705  020E                     	;# 
  5706  020E                     	;# 
  5707  020F                     	;# 
  5708  020F                     	;# 
  5709  0210                     	;# 
  5710  0210                     	;# 
  5711  0211                     	;# 
  5712  0211                     	;# 
  5713  0212                     	;# 
  5714  0213                     	;# 
  5715  0214                     	;# 
  5716  0214                     	;# 
  5717  0215                     	;# 
  5718  0215                     	;# 
  5719  0216                     	;# 
  5720  0216                     	;# 
  5721  0217                     	;# 
  5722  0217                     	;# 
  5723  0218                     	;# 
  5724  0219                     	;# 
  5725  021A                     	;# 
  5726  021A                     	;# 
  5727  021B                     	;# 
  5728  021B                     	;# 
  5729  021C                     	;# 
  5730  021C                     	;# 
  5731  021D                     	;# 
  5732  021D                     	;# 
  5733  021E                     	;# 
  5734  021F                     	;# 
  5735  028C                     	;# 
  5736  028C                     	;# 
  5737  028D                     	;# 
  5738  028D                     	;# 
  5739  028E                     	;# 
  5740  028F                     	;# 
  5741  0290                     	;# 
  5742  0291                     	;# 
  5743  0292                     	;# 
  5744  0292                     	;# 
  5745  0293                     	;# 
  5746  0293                     	;# 
  5747  0294                     	;# 
  5748  0295                     	;# 
  5749  0296                     	;# 
  5750  0297                     	;# 
  5751  0298                     	;# 
  5752  0298                     	;# 
  5753  0299                     	;# 
  5754  0299                     	;# 
  5755  029A                     	;# 
  5756  029B                     	;# 
  5757  029C                     	;# 
  5758  029D                     	;# 
  5759  029F                     	;# 
  5760  030C                     	;# 
  5761  030C                     	;# 
  5762  030D                     	;# 
  5763  030E                     	;# 
  5764  030F                     	;# 
  5765  0310                     	;# 
  5766  0310                     	;# 
  5767  0311                     	;# 
  5768  0312                     	;# 
  5769  0313                     	;# 
  5770  0314                     	;# 
  5771  0314                     	;# 
  5772  0315                     	;# 
  5773  0316                     	;# 
  5774  0317                     	;# 
  5775  0318                     	;# 
  5776  0318                     	;# 
  5777  0319                     	;# 
  5778  031A                     	;# 
  5779  031B                     	;# 
  5780  038C                     	;# 
  5781  038C                     	;# 
  5782  038D                     	;# 
  5783  038E                     	;# 
  5784  0390                     	;# 
  5785  0390                     	;# 
  5786  0391                     	;# 
  5787  0392                     	;# 
  5788  048C                     	;# 
  5789  048C                     	;# 
  5790  048D                     	;# 
  5791  048E                     	;# 
  5792  048F                     	;# 
  5793  048F                     	;# 
  5794  0490                     	;# 
  5795  0491                     	;# 
  5796  0492                     	;# 
  5797  0492                     	;# 
  5798  0493                     	;# 
  5799  0494                     	;# 
  5800  0495                     	;# 
  5801  0495                     	;# 
  5802  0496                     	;# 
  5803  0497                     	;# 
  5804  0498                     	;# 
  5805  0499                     	;# 
  5806  049A                     	;# 
  5807  049B                     	;# 
  5808  049C                     	;# 
  5809  049D                     	;# 
  5810  058C                     	;# 
  5811  058C                     	;# 
  5812  058D                     	;# 
  5813  058E                     	;# 
  5814  058F                     	;# 
  5815  058F                     	;# 
  5816  0590                     	;# 
  5817  0591                     	;# 
  5818  0592                     	;# 
  5819  0593                     	;# 
  5820  059C                     	;# 
  5821  059C                     	;# 
  5822  059D                     	;# 
  5823  059D                     	;# 
  5824  059E                     	;# 
  5825  059F                     	;# 
  5826  060C                     	;# 
  5827  060C                     	;# 
  5828  060D                     	;# 
  5829  060D                     	;# 
  5830  060E                     	;# 
  5831  060F                     	;# 
  5832  0610                     	;# 
  5833  0611                     	;# 
  5834  0612                     	;# 
  5835  0613                     	;# 
  5836  0614                     	;# 
  5837  0616                     	;# 
  5838  0616                     	;# 
  5839  0617                     	;# 
  5840  0617                     	;# 
  5841  0618                     	;# 
  5842  0619                     	;# 
  5843  061A                     	;# 
  5844  061B                     	;# 
  5845  061C                     	;# 
  5846  061D                     	;# 
  5847  061E                     	;# 
  5848  070C                     	;# 
  5849  070D                     	;# 
  5850  070E                     	;# 
  5851  070F                     	;# 
  5852  0710                     	;# 
  5853  0711                     	;# 
  5854  0712                     	;# 
  5855  0713                     	;# 
  5856  0714                     	;# 
  5857  0716                     	;# 
  5858  0717                     	;# 
  5859  0718                     	;# 
  5860  0719                     	;# 
  5861  071A                     	;# 
  5862  071B                     	;# 
  5863  071C                     	;# 
  5864  071D                     	;# 
  5865  071E                     	;# 
  5866  0796                     	;# 
  5867  0797                     	;# 
  5868  0798                     	;# 
  5869  0799                     	;# 
  5870  079A                     	;# 
  5871  079B                     	;# 
  5872  079C                     	;# 
  5873  079D                     	;# 
  5874  080C                     	;# 
  5875  080D                     	;# 
  5876  080E                     	;# 
  5877  080F                     	;# 
  5878  0810                     	;# 
  5879  0811                     	;# 
  5880  0812                     	;# 
  5881  0813                     	;# 
  5882  0814                     	;# 
  5883  081A                     	;# 
  5884  081A                     	;# 
  5885  081B                     	;# 
  5886  081C                     	;# 
  5887  081C                     	;# 
  5888  081D                     	;# 
  5889  081E                     	;# 
  5890  081F                     	;# 
  5891  088C                     	;# 
  5892  088D                     	;# 
  5893  088E                     	;# 
  5894  088F                     	;# 
  5895  0890                     	;# 
  5896  0891                     	;# 
  5897  0892                     	;# 
  5898  0893                     	;# 
  5899  0895                     	;# 
  5900  0896                     	;# 
  5901  0897                     	;# 
  5902  0898                     	;# 
  5903  0899                     	;# 
  5904  089A                     	;# 
  5905  089B                     	;# 
  5906  090C                     	;# 
  5907  090E                     	;# 
  5908  090F                     	;# 
  5909  091F                     	;# 
  5910  098F                     	;# 
  5911  098F                     	;# 
  5912  0990                     	;# 
  5913  0991                     	;# 
  5914  0992                     	;# 
  5915  0993                     	;# 
  5916  0994                     	;# 
  5917  0995                     	;# 
  5918  0996                     	;# 
  5919  0997                     	;# 
  5920  1E0F                     	;# 
  5921  1E10                     	;# 
  5922  1E11                     	;# 
  5923  1E12                     	;# 
  5924  1E13                     	;# 
  5925  1E14                     	;# 
  5926  1E15                     	;# 
  5927  1E16                     	;# 
  5928  1E17                     	;# 
  5929  1E18                     	;# 
  5930  1E19                     	;# 
  5931  1E1A                     	;# 
  5932  1E1B                     	;# 
  5933  1E1C                     	;# 
  5934  1E1D                     	;# 
  5935  1E1E                     	;# 
  5936  1E1F                     	;# 
  5937  1E20                     	;# 
  5938  1E21                     	;# 
  5939  1E22                     	;# 
  5940  1E23                     	;# 
  5941  1E24                     	;# 
  5942  1E25                     	;# 
  5943  1E26                     	;# 
  5944  1E27                     	;# 
  5945  1E28                     	;# 
  5946  1E29                     	;# 
  5947  1E2A                     	;# 
  5948  1E2B                     	;# 
  5949  1E2C                     	;# 
  5950  1E2D                     	;# 
  5951  1E2E                     	;# 
  5952  1E2F                     	;# 
  5953  1E30                     	;# 
  5954  1E31                     	;# 
  5955  1E32                     	;# 
  5956  1E33                     	;# 
  5957  1E34                     	;# 
  5958  1E35                     	;# 
  5959  1E36                     	;# 
  5960  1E37                     	;# 
  5961  1E8F                     	;# 
  5962  1E90                     	;# 
  5963  1E91                     	;# 
  5964  1E92                     	;# 
  5965  1E93                     	;# 
  5966  1E94                     	;# 
  5967  1E95                     	;# 
  5968  1E96                     	;# 
  5969  1E97                     	;# 
  5970  1E9C                     	;# 
  5971  1E9D                     	;# 
  5972  1E9E                     	;# 
  5973  1EA1                     	;# 
  5974  1EA2                     	;# 
  5975  1EA3                     	;# 
  5976  1EA4                     	;# 
  5977  1EA9                     	;# 
  5978  1EAA                     	;# 
  5979  1EB1                     	;# 
  5980  1EB2                     	;# 
  5981  1EB8                     	;# 
  5982  1EB9                     	;# 
  5983  1EBA                     	;# 
  5984  1EBB                     	;# 
  5985  1EBC                     	;# 
  5986  1EBD                     	;# 
  5987  1EBE                     	;# 
  5988  1EC3                     	;# 
  5989  1EC5                     	;# 
  5990  1EC6                     	;# 
  5991  1EC7                     	;# 
  5992  1EC8                     	;# 
  5993  1EC9                     	;# 
  5994  1ECA                     	;# 
  5995  1ECB                     	;# 
  5996  1ECB                     	;# 
  5997  1ECB                     	;# 
  5998  1ECC                     	;# 
  5999  1ECC                     	;# 
  6000  1ECC                     	;# 
  6001  1F10                     	;# 
  6002  1F11                     	;# 
  6003  1F12                     	;# 
  6004  1F14                     	;# 
  6005  1F15                     	;# 
  6006  1F1C                     	;# 
  6007  1F1D                     	;# 
  6008  1F1E                     	;# 
  6009  1F1F                     	;# 
  6010  1F20                     	;# 
  6011  1F21                     	;# 
  6012  1F22                     	;# 
  6013  1F23                     	;# 
  6014  1F24                     	;# 
  6015  1F25                     	;# 
  6016  1F26                     	;# 
  6017  1F27                     	;# 
  6018  1F38                     	;# 
  6019  1F39                     	;# 
  6020  1F3A                     	;# 
  6021  1F3B                     	;# 
  6022  1F3C                     	;# 
  6023  1F3D                     	;# 
  6024  1F3E                     	;# 
  6025  1F3F                     	;# 
  6026  1F43                     	;# 
  6027  1F44                     	;# 
  6028  1F45                     	;# 
  6029  1F46                     	;# 
  6030  1F47                     	;# 
  6031  1F48                     	;# 
  6032  1F49                     	;# 
  6033  1F4A                     	;# 
  6034  1F4E                     	;# 
  6035  1F4F                     	;# 
  6036  1F50                     	;# 
  6037  1F51                     	;# 
  6038  1F52                     	;# 
  6039  1F53                     	;# 
  6040  1F54                     	;# 
  6041  1F55                     	;# 
  6042  1FE4                     	;# 
  6043  1FE5                     	;# 
  6044  1FE6                     	;# 
  6045  1FE7                     	;# 
  6046  1FE8                     	;# 
  6047  1FE8                     	;# 
  6048  1FE9                     	;# 
  6049  1FEA                     	;# 
  6050  1FEB                     	;# 
  6051  1FED                     	;# 
  6052  1FEE                     	;# 
  6053  1FEF                     	;# 
  6054  0000                     	;# 
  6055  0001                     	;# 
  6056  0002                     	;# 
  6057  0003                     	;# 
  6058  0004                     	;# 
  6059  0005                     	;# 
  6060  0006                     	;# 
  6061  0007                     	;# 
  6062  0008                     	;# 
  6063  0009                     	;# 
  6064  000A                     	;# 
  6065  000B                     	;# 
  6066  000C                     	;# 
  6067  000D                     	;# 
  6068  000E                     	;# 
  6069  0012                     	;# 
  6070  0013                     	;# 
  6071  0014                     	;# 
  6072  0018                     	;# 
  6073  0019                     	;# 
  6074  001A                     	;# 
  6075  008C                     	;# 
  6076  008C                     	;# 
  6077  008D                     	;# 
  6078  008E                     	;# 
  6079  008E                     	;# 
  6080  008F                     	;# 
  6081  0090                     	;# 
  6082  0090                     	;# 
  6083  0091                     	;# 
  6084  0092                     	;# 
  6085  0092                     	;# 
  6086  0093                     	;# 
  6087  0094                     	;# 
  6088  0094                     	;# 
  6089  0095                     	;# 
  6090  0096                     	;# 
  6091  0096                     	;# 
  6092  0097                     	;# 
  6093  0098                     	;# 
  6094  0099                     	;# 
  6095  009A                     	;# 
  6096  009B                     	;# 
  6097  009B                     	;# 
  6098  009C                     	;# 
  6099  009D                     	;# 
  6100  009D                     	;# 
  6101  009E                     	;# 
  6102  009F                     	;# 
  6103  010C                     	;# 
  6104  010C                     	;# 
  6105  010D                     	;# 
  6106  010E                     	;# 
  6107  010F                     	;# 
  6108  010F                     	;# 
  6109  0110                     	;# 
  6110  0111                     	;# 
  6111  0112                     	;# 
  6112  0113                     	;# 
  6113  0114                     	;# 
  6114  0115                     	;# 
  6115  0116                     	;# 
  6116  0117                     	;# 
  6117  0118                     	;# 
  6118  0119                     	;# 
  6119  0119                     	;# 
  6120  0119                     	;# 
  6121  011A                     	;# 
  6122  011A                     	;# 
  6123  011A                     	;# 
  6124  011B                     	;# 
  6125  011B                     	;# 
  6126  011B                     	;# 
  6127  011B                     	;# 
  6128  011B                     	;# 
  6129  011C                     	;# 
  6130  011C                     	;# 
  6131  011C                     	;# 
  6132  011D                     	;# 
  6133  011D                     	;# 
  6134  011D                     	;# 
  6135  011E                     	;# 
  6136  011E                     	;# 
  6137  011E                     	;# 
  6138  011F                     	;# 
  6139  011F                     	;# 
  6140  011F                     	;# 
  6141  011F                     	;# 
  6142  011F                     	;# 
  6143  018C                     	;# 
  6144  018D                     	;# 
  6145  018E                     	;# 
  6146  018F                     	;# 
  6147  0190                     	;# 
  6148  0191                     	;# 
  6149  0192                     	;# 
  6150  0196                     	;# 
  6151  0197                     	;# 
  6152  0198                     	;# 
  6153  0199                     	;# 
  6154  019A                     	;# 
  6155  019B                     	;# 
  6156  019C                     	;# 
  6157  020C                     	;# 
  6158  020D                     	;# 
  6159  020E                     	;# 
  6160  020E                     	;# 
  6161  020F                     	;# 
  6162  020F                     	;# 
  6163  0210                     	;# 
  6164  0210                     	;# 
  6165  0211                     	;# 
  6166  0211                     	;# 
  6167  0212                     	;# 
  6168  0213                     	;# 
  6169  0214                     	;# 
  6170  0214                     	;# 
  6171  0215                     	;# 
  6172  0215                     	;# 
  6173  0216                     	;# 
  6174  0216                     	;# 
  6175  0217                     	;# 
  6176  0217                     	;# 
  6177  0218                     	;# 
  6178  0219                     	;# 
  6179  021A                     	;# 
  6180  021A                     	;# 
  6181  021B                     	;# 
  6182  021B                     	;# 
  6183  021C                     	;# 
  6184  021C                     	;# 
  6185  021D                     	;# 
  6186  021D                     	;# 
  6187  021E                     	;# 
  6188  021F                     	;# 
  6189  028C                     	;# 
  6190  028C                     	;# 
  6191  028D                     	;# 
  6192  028D                     	;# 
  6193  028E                     	;# 
  6194  028F                     	;# 
  6195  0290                     	;# 
  6196  0291                     	;# 
  6197  0292                     	;# 
  6198  0292                     	;# 
  6199  0293                     	;# 
  6200  0293                     	;# 
  6201  0294                     	;# 
  6202  0295                     	;# 
  6203  0296                     	;# 
  6204  0297                     	;# 
  6205  0298                     	;# 
  6206  0298                     	;# 
  6207  0299                     	;# 
  6208  0299                     	;# 
  6209  029A                     	;# 
  6210  029B                     	;# 
  6211  029C                     	;# 
  6212  029D                     	;# 
  6213  029F                     	;# 
  6214  030C                     	;# 
  6215  030C                     	;# 
  6216  030D                     	;# 
  6217  030E                     	;# 
  6218  030F                     	;# 
  6219  0310                     	;# 
  6220  0310                     	;# 
  6221  0311                     	;# 
  6222  0312                     	;# 
  6223  0313                     	;# 
  6224  0314                     	;# 
  6225  0314                     	;# 
  6226  0315                     	;# 
  6227  0316                     	;# 
  6228  0317                     	;# 
  6229  0318                     	;# 
  6230  0318                     	;# 
  6231  0319                     	;# 
  6232  031A                     	;# 
  6233  031B                     	;# 
  6234  038C                     	;# 
  6235  038C                     	;# 
  6236  038D                     	;# 
  6237  038E                     	;# 
  6238  0390                     	;# 
  6239  0390                     	;# 
  6240  0391                     	;# 
  6241  0392                     	;# 
  6242  048C                     	;# 
  6243  048C                     	;# 
  6244  048D                     	;# 
  6245  048E                     	;# 
  6246  048F                     	;# 
  6247  048F                     	;# 
  6248  0490                     	;# 
  6249  0491                     	;# 
  6250  0492                     	;# 
  6251  0492                     	;# 
  6252  0493                     	;# 
  6253  0494                     	;# 
  6254  0495                     	;# 
  6255  0495                     	;# 
  6256  0496                     	;# 
  6257  0497                     	;# 
  6258  0498                     	;# 
  6259  0499                     	;# 
  6260  049A                     	;# 
  6261  049B                     	;# 
  6262  049C                     	;# 
  6263  049D                     	;# 
  6264  058C                     	;# 
  6265  058C                     	;# 
  6266  058D                     	;# 
  6267  058E                     	;# 
  6268  058F                     	;# 
  6269  058F                     	;# 
  6270  0590                     	;# 
  6271  0591                     	;# 
  6272  0592                     	;# 
  6273  0593                     	;# 
  6274  059C                     	;# 
  6275  059C                     	;# 
  6276  059D                     	;# 
  6277  059D                     	;# 
  6278  059E                     	;# 
  6279  059F                     	;# 
  6280  060C                     	;# 
  6281  060C                     	;# 
  6282  060D                     	;# 
  6283  060D                     	;# 
  6284  060E                     	;# 
  6285  060F                     	;# 
  6286  0610                     	;# 
  6287  0611                     	;# 
  6288  0612                     	;# 
  6289  0613                     	;# 
  6290  0614                     	;# 
  6291  0616                     	;# 
  6292  0616                     	;# 
  6293  0617                     	;# 
  6294  0617                     	;# 
  6295  0618                     	;# 
  6296  0619                     	;# 
  6297  061A                     	;# 
  6298  061B                     	;# 
  6299  061C                     	;# 
  6300  061D                     	;# 
  6301  061E                     	;# 
  6302  070C                     	;# 
  6303  070D                     	;# 
  6304  070E                     	;# 
  6305  070F                     	;# 
  6306  0710                     	;# 
  6307  0711                     	;# 
  6308  0712                     	;# 
  6309  0713                     	;# 
  6310  0714                     	;# 
  6311  0716                     	;# 
  6312  0717                     	;# 
  6313  0718                     	;# 
  6314  0719                     	;# 
  6315  071A                     	;# 
  6316  071B                     	;# 
  6317  071C                     	;# 
  6318  071D                     	;# 
  6319  071E                     	;# 
  6320  0796                     	;# 
  6321  0797                     	;# 
  6322  0798                     	;# 
  6323  0799                     	;# 
  6324  079A                     	;# 
  6325  079B                     	;# 
  6326  079C                     	;# 
  6327  079D                     	;# 
  6328  080C                     	;# 
  6329  080D                     	;# 
  6330  080E                     	;# 
  6331  080F                     	;# 
  6332  0810                     	;# 
  6333  0811                     	;# 
  6334  0812                     	;# 
  6335  0813                     	;# 
  6336  0814                     	;# 
  6337  081A                     	;# 
  6338  081A                     	;# 
  6339  081B                     	;# 
  6340  081C                     	;# 
  6341  081C                     	;# 
  6342  081D                     	;# 
  6343  081E                     	;# 
  6344  081F                     	;# 
  6345  088C                     	;# 
  6346  088D                     	;# 
  6347  088E                     	;# 
  6348  088F                     	;# 
  6349  0890                     	;# 
  6350  0891                     	;# 
  6351  0892                     	;# 
  6352  0893                     	;# 
  6353  0895                     	;# 
  6354  0896                     	;# 
  6355  0897                     	;# 
  6356  0898                     	;# 
  6357  0899                     	;# 
  6358  089A                     	;# 
  6359  089B                     	;# 
  6360  090C                     	;# 
  6361  090E                     	;# 
  6362  090F                     	;# 
  6363  091F                     	;# 
  6364  098F                     	;# 
  6365  098F                     	;# 
  6366  0990                     	;# 
  6367  0991                     	;# 
  6368  0992                     	;# 
  6369  0993                     	;# 
  6370  0994                     	;# 
  6371  0995                     	;# 
  6372  0996                     	;# 
  6373  0997                     	;# 
  6374  1E0F                     	;# 
  6375  1E10                     	;# 
  6376  1E11                     	;# 
  6377  1E12                     	;# 
  6378  1E13                     	;# 
  6379  1E14                     	;# 
  6380  1E15                     	;# 
  6381  1E16                     	;# 
  6382  1E17                     	;# 
  6383  1E18                     	;# 
  6384  1E19                     	;# 
  6385  1E1A                     	;# 
  6386  1E1B                     	;# 
  6387  1E1C                     	;# 
  6388  1E1D                     	;# 
  6389  1E1E                     	;# 
  6390  1E1F                     	;# 
  6391  1E20                     	;# 
  6392  1E21                     	;# 
  6393  1E22                     	;# 
  6394  1E23                     	;# 
  6395  1E24                     	;# 
  6396  1E25                     	;# 
  6397  1E26                     	;# 
  6398  1E27                     	;# 
  6399  1E28                     	;# 
  6400  1E29                     	;# 
  6401  1E2A                     	;# 
  6402  1E2B                     	;# 
  6403  1E2C                     	;# 
  6404  1E2D                     	;# 
  6405  1E2E                     	;# 
  6406  1E2F                     	;# 
  6407  1E30                     	;# 
  6408  1E31                     	;# 
  6409  1E32                     	;# 
  6410  1E33                     	;# 
  6411  1E34                     	;# 
  6412  1E35                     	;# 
  6413  1E36                     	;# 
  6414  1E37                     	;# 
  6415  1E8F                     	;# 
  6416  1E90                     	;# 
  6417  1E91                     	;# 
  6418  1E92                     	;# 
  6419  1E93                     	;# 
  6420  1E94                     	;# 
  6421  1E95                     	;# 
  6422  1E96                     	;# 
  6423  1E97                     	;# 
  6424  1E9C                     	;# 
  6425  1E9D                     	;# 
  6426  1E9E                     	;# 
  6427  1EA1                     	;# 
  6428  1EA2                     	;# 
  6429  1EA3                     	;# 
  6430  1EA4                     	;# 
  6431  1EA9                     	;# 
  6432  1EAA                     	;# 
  6433  1EB1                     	;# 
  6434  1EB2                     	;# 
  6435  1EB8                     	;# 
  6436  1EB9                     	;# 
  6437  1EBA                     	;# 
  6438  1EBB                     	;# 
  6439  1EBC                     	;# 
  6440  1EBD                     	;# 
  6441  1EBE                     	;# 
  6442  1EC3                     	;# 
  6443  1EC5                     	;# 
  6444  1EC6                     	;# 
  6445  1EC7                     	;# 
  6446  1EC8                     	;# 
  6447  1EC9                     	;# 
  6448  1ECA                     	;# 
  6449  1ECB                     	;# 
  6450  1ECB                     	;# 
  6451  1ECB                     	;# 
  6452  1ECC                     	;# 
  6453  1ECC                     	;# 
  6454  1ECC                     	;# 
  6455  1F10                     	;# 
  6456  1F11                     	;# 
  6457  1F12                     	;# 
  6458  1F14                     	;# 
  6459  1F15                     	;# 
  6460  1F1C                     	;# 
  6461  1F1D                     	;# 
  6462  1F1E                     	;# 
  6463  1F1F                     	;# 
  6464  1F20                     	;# 
  6465  1F21                     	;# 
  6466  1F22                     	;# 
  6467  1F23                     	;# 
  6468  1F24                     	;# 
  6469  1F25                     	;# 
  6470  1F26                     	;# 
  6471  1F27                     	;# 
  6472  1F38                     	;# 
  6473  1F39                     	;# 
  6474  1F3A                     	;# 
  6475  1F3B                     	;# 
  6476  1F3C                     	;# 
  6477  1F3D                     	;# 
  6478  1F3E                     	;# 
  6479  1F3F                     	;# 
  6480  1F43                     	;# 
  6481  1F44                     	;# 
  6482  1F45                     	;# 
  6483  1F46                     	;# 
  6484  1F47                     	;# 
  6485  1F48                     	;# 
  6486  1F49                     	;# 
  6487  1F4A                     	;# 
  6488  1F4E                     	;# 
  6489  1F4F                     	;# 
  6490  1F50                     	;# 
  6491  1F51                     	;# 
  6492  1F52                     	;# 
  6493  1F53                     	;# 
  6494  1F54                     	;# 
  6495  1F55                     	;# 
  6496  1FE4                     	;# 
  6497  1FE5                     	;# 
  6498  1FE6                     	;# 
  6499  1FE7                     	;# 
  6500  1FE8                     	;# 
  6501  1FE8                     	;# 
  6502  1FE9                     	;# 
  6503  1FEA                     	;# 
  6504  1FEB                     	;# 
  6505  1FED                     	;# 
  6506  1FEE                     	;# 
  6507  1FEF                     	;_dmxData
  6508                           
  6509                           	psect	idataBANK1
  6510  0002                     __pidataBANK1:	
  6511                           
  6512                           ;initializer for _address
  6513  0002  3401               	retlw	1
  6514  0003  3400               	retlw	0
  6515                           
  6516                           	psect	idataBANK2
  6517  1F26                     __pidataBANK2:	
  6518                           
  6519                           ;initializer for _currentState
  6520  1F26  3402               	retlw	2
  6521  1F27  3400               	retlw	0
  6522                           
  6523                           ;initializer for _fadeAmmount
  6524  1F28  3414               	retlw	20
  6525  1F29  3400               	retlw	0
  6526                           
  6527                           ;initializer for _delay
  6528  1F2A  340A               	retlw	10
  6529  1F2B  3400               	retlw	0
  6530                           
  6531                           ;initializer for _threshold
  6532  1F2C  3490               	retlw	144
  6533  1F2D  3406               	retlw	6
  6534                           
  6535                           ;initializer for _cycleSpeed
  6536  1F2E  3414               	retlw	20
  6537  1F2F  3400               	retlw	0
  6538                           
  6539                           	psect	idataBANK3
  6540  1F7B                     __pidataBANK3:	
  6541                           
  6542                           ;initializer for _pulseColor
  6543  1F7B  3400               	retlw	0
  6544  1F7C  3400               	retlw	0
  6545  1F7D  3400               	retlw	0
  6546  1F7E  3400               	retlw	0
  6547  1F7F  3480               	retlw	128
  6548  1F80  343F               	retlw	63
  6549  1F81  3400               	retlw	0
  6550  1F82  3400               	retlw	0
  6551  1F83  3400               	retlw	0
  6552  1F84  343F               	retlw	63
  6553                           
  6554                           ;initializer for _color
  6555  1F85  3400               	retlw	0
  6556  1F86  3400               	retlw	0
  6557  1F87  3400               	retlw	0
  6558  1F88  3400               	retlw	0
  6559  1F89  3480               	retlw	128
  6560  1F8A  343F               	retlw	63
  6561  1F8B  3400               	retlw	0
  6562  1F8C  3400               	retlw	0
  6563  1F8D  3400               	retlw	0
  6564  1F8E  343F               	retlw	63
  6565                           
  6566                           	psect	stringtext1
  6567  1800                     __pstringtext1:	
  6568  1800                     _charTable:	
  6569  1800  3400               	retlw	0
  6570  1801  3482               	retlw	130
  6571  1802  3421               	retlw	33
  6572  1803  3400               	retlw	0
  6573  1804  3400               	retlw	0
  6574  1805  3400               	retlw	0
  6575  1806  3400               	retlw	0
  6576  1807  3402               	retlw	2
  6577  1808  3439               	retlw	57
  6578  1809  340F               	retlw	15
  6579  180A  3400               	retlw	0
  6580  180B  3400               	retlw	0
  6581  180C  3400               	retlw	0
  6582  180D  3440               	retlw	64
  6583  180E  3480               	retlw	128
  6584  180F  3400               	retlw	0
  6585  1810  343F               	retlw	63
  6586  1811  3406               	retlw	6
  6587  1812  345B               	retlw	91
  6588  1813  344F               	retlw	79
  6589  1814  3466               	retlw	102
  6590  1815  346D               	retlw	109
  6591  1816  347D               	retlw	125
  6592  1817  3407               	retlw	7
  6593  1818  347F               	retlw	127
  6594  1819  346F               	retlw	111
  6595  181A  3400               	retlw	0
  6596  181B  3400               	retlw	0
  6597  181C  3400               	retlw	0
  6598  181D  3448               	retlw	72
  6599  181E  3400               	retlw	0
  6600  181F  3453               	retlw	83
  6601  1820  3400               	retlw	0
  6602  1821  3477               	retlw	119
  6603  1822  347C               	retlw	124
  6604  1823  3439               	retlw	57
  6605  1824  345E               	retlw	94
  6606  1825  3479               	retlw	121
  6607  1826  3471               	retlw	113
  6608  1827  346F               	retlw	111
  6609  1828  3476               	retlw	118
  6610  1829  3406               	retlw	6
  6611  182A  341E               	retlw	30
  6612  182B  3400               	retlw	0
  6613  182C  3438               	retlw	56
  6614  182D  3400               	retlw	0
  6615  182E  3454               	retlw	84
  6616  182F  343F               	retlw	63
  6617  1830  3473               	retlw	115
  6618  1831  3467               	retlw	103
  6619  1832  3450               	retlw	80
  6620  1833  346D               	retlw	109
  6621  1834  3478               	retlw	120
  6622  1835  343E               	retlw	62
  6623  1836  3400               	retlw	0
  6624  1837  3400               	retlw	0
  6625  1838  3400               	retlw	0
  6626  1839  346E               	retlw	110
  6627  183A  3400               	retlw	0
  6628  183B  3439               	retlw	57
  6629  183C  3400               	retlw	0
  6630  183D  340F               	retlw	15
  6631  183E  3400               	retlw	0
  6632  183F  3408               	retlw	8
  6633  1840  3463               	retlw	99
  6634  1841  345F               	retlw	95
  6635  1842  347C               	retlw	124
  6636  1843  3458               	retlw	88
  6637  1844  345E               	retlw	94
  6638  1845  347B               	retlw	123
  6639  1846  3471               	retlw	113
  6640  1847  346F               	retlw	111
  6641  1848  3474               	retlw	116
  6642  1849  3402               	retlw	2
  6643  184A  341E               	retlw	30
  6644  184B  3400               	retlw	0
  6645  184C  3406               	retlw	6
  6646  184D  3400               	retlw	0
  6647  184E  3454               	retlw	84
  6648  184F  345C               	retlw	92
  6649  1850  3473               	retlw	115
  6650  1851  3467               	retlw	103
  6651  1852  3450               	retlw	80
  6652  1853  346D               	retlw	109
  6653  1854  3478               	retlw	120
  6654  1855  341C               	retlw	28
  6655  1856  3400               	retlw	0
  6656  1857  3400               	retlw	0
  6657  1858  3400               	retlw	0
  6658  1859  346E               	retlw	110
  6659  185A  3400               	retlw	0
  6660  185B  3439               	retlw	57
  6661  185C  3430               	retlw	48
  6662  185D  340F               	retlw	15
  6663  185E  3400               	retlw	0
  6664  185F  3400               	retlw	0
  6665  1860                     __end_of_charTable:	
  6666                           
  6667                           	psect	nvBANK2
  6668  016B                     __pnvBANK2:	
  6669  016B                     _ADCC_ADTI_InterruptHandler:	
  6670  016B                     	ds	2
  6671  016D                     _TMR0_InterruptHandler:	
  6672  016D                     	ds	2
  6673  016F                     _eusart1TxBufferRemaining:	
  6674  016F                     	ds	1
  6675                           
  6676                           	psect	nvBANK3
  6677  01DA                     __pnvBANK3:	
  6678  01DA                     _EUSART1_ErrorHandler:	
  6679  01DA                     	ds	2
  6680  01DC                     _EUSART1_OverrunErrorHandler:	
  6681  01DC                     	ds	2
  6682  01DE                     _EUSART1_FramingErrorHandler:	
  6683  01DE                     	ds	2
  6684  01E0                     _EUSART1_RxDefaultInterruptHandler:	
  6685  01E0                     	ds	2
  6686  01E2                     _EUSART1_TxDefaultInterruptHandler:	
  6687  01E2                     	ds	2
  6688  000B                     _INTCONbits	set	11
  6689  0014                     _TRISC	set	20
  6690  0013                     _TRISB	set	19
  6691  0012                     _TRISA	set	18
  6692  001A                     _LATC	set	26
  6693  0019                     _LATB	set	25
  6694  0018                     _LATA	set	24
  6695  000C                     _PORTA	set	12
  6696  000E                     _PORTC	set	14
  6697  00A3                     _TRISC3	set	163
  6698  00A4                     _TRISC4	set	164
  6699  00A6                     _TRISC6	set	166
  6700  00A7                     _TRISC7	set	167
  6701  00CE                     _LATB6	set	206
  6702  009E                     _TRISB6	set	158
  6703  0090                     _ADERRL	set	144
  6704  0091                     _ADERRH	set	145
  6705  009B                     _ADPREVL	set	155
  6706  009C                     _ADPREVH	set	156
  6707  0094                     _ADFLTRL	set	148
  6708  0095                     _ADFLTRH	set	149
  6709  0096                     _ADACCL	set	150
  6710  0097                     _ADACCH	set	151
  6711  0099                     _ADCNT	set	153
  6712  009D                     _ADRESL	set	157
  6713  009E                     _ADRESH	set	158
  6714  009F                     _ADPCH	set	159
  6715  009A                     _ADRPT	set	154
  6716  0098                     _ADACCU	set	152
  6717  0093                     _ADSTPTH	set	147
  6718  0092                     _ADSTPTL	set	146
  6719  008F                     _ADUTHH	set	143
  6720  008E                     _ADUTHL	set	142
  6721  008D                     _ADLTHH	set	141
  6722  008C                     _ADLTHL	set	140
  6723  011A                     _TXREG	set	282
  6724  0112                     _ADCON1bits	set	274
  6725  0115                     _ADSTATbits	set	277
  6726  0113                     _ADCON2bits	set	275
  6727  0114                     _ADCON3bits	set	276
  6728  0111                     _ADCON0bits	set	273
  6729  0111                     _ADCON0	set	273
  6730  0118                     _ADCLK	set	280
  6731  0117                     _ADACT	set	279
  6732  0116                     _ADREF	set	278
  6733  0115                     _ADSTAT	set	277
  6734  0114                     _ADCON3	set	276
  6735  0113                     _ADCON2	set	275
  6736  0112                     _ADCON1	set	274
  6737  0110                     _ADPREH	set	272
  6738  010F                     _ADPREL	set	271
  6739  010E                     _ADCAP	set	270
  6740  010D                     _ADACQH	set	269
  6741  010C                     _ADACQL	set	268
  6742  0119                     _RC1REG	set	281
  6743  011D                     _RC1STAbits	set	285
  6744  011A                     _TX1REG	set	282
  6745  011E                     _TX1STAbits	set	286
  6746  011C                     _SP1BRGH	set	284
  6747  011B                     _SP1BRGL	set	283
  6748  011E                     _TX1STA	set	286
  6749  011D                     _RC1STA	set	285
  6750  011F                     _BAUD1CON	set	287
  6751  018C                     _SSP1BUF	set	396
  6752  0191                     _SSP1CON2bits	set	401
  6753  0190                     _SSP1CON1bits	set	400
  6754  018D                     _SSP1ADD	set	397
  6755  0192                     _SSP1CON3	set	402
  6756  0190                     _SSP1CON1	set	400
  6757  018F                     _SSP1STAT	set	399
  6758  028E                     _T2CONbits	set	654
  6759  0290                     _T2CLKCON	set	656
  6760  0318                     _CCPR4L	set	792
  6761  0319                     _CCPR4H	set	793
  6762  0314                     _CCPR3L	set	788
  6763  0315                     _CCPR3H	set	789
  6764  0310                     _CCPR2L	set	784
  6765  0311                     _CCPR2H	set	785
  6766  030C                     _CCPR1L	set	780
  6767  030D                     _CCPR1H	set	781
  6768  031A                     _CCP4CONbits	set	794
  6769  0316                     _CCP3CONbits	set	790
  6770  0312                     _CCP2CONbits	set	786
  6771  030E                     _CCP1CONbits	set	782
  6772  059E                     _T0CON0bits	set	1438
  6773  059E                     _T0CON0	set	1438
  6774  059C                     _TMR0L	set	1436
  6775  059D                     _TMR0H	set	1437
  6776  059F                     _T0CON1	set	1439
  6777  070D                     _PIR1bits	set	1805
  6778  0717                     _PIE1bits	set	1815
  6779  070F                     _PIR3bits	set	1807
  6780  070C                     _PIR0bits	set	1804
  6781  0716                     _PIE0bits	set	1814
  6782  0719                     _PIE3bits	set	1817
  6783  079D                     _PMD7	set	1949
  6784  079C                     _PMD6	set	1948
  6785  079B                     _PMD5	set	1947
  6786  079A                     _PMD4	set	1946
  6787  0799                     _PMD3	set	1945
  6788  0798                     _PMD2	set	1944
  6789  0797                     _PMD1	set	1943
  6790  0796                     _PMD0	set	1942
  6791  0892                     _OSCTUNE	set	2194
  6792  0893                     _OSCFRQ	set	2195
  6793  0891                     _OSCEN	set	2193
  6794  088F                     _OSCCON3	set	2191
  6795  088D                     _OSCCON1	set	2189
  6796  1ECB                     _RX1DTPPS	set	7883
  6797  1EC6                     _SSP1DATPPS	set	7878
  6798  1EC5                     _SSP1CLKPPS	set	7877
  6799  1F23                     _RC3PPS	set	7971
  6800  1F24                     _RC4PPS	set	7972
  6801  1F26                     _RC6PPS	set	7974
  6802  1F27                     _RC7PPS	set	7975
  6803  1F15                     _RA5PPS	set	7957
  6804  1F14                     _RA4PPS	set	7956
  6805  1F51                     _SLRCONC	set	8017
  6806  1F46                     _SLRCONB	set	8006
  6807  1F3B                     _SLRCONA	set	7995
  6808  1F50                     _ODCONC	set	8016
  6809  1F45                     _ODCONB	set	8005
  6810  1F3A                     _ODCONA	set	7994
  6811  1F4F                     _WPUC	set	8015
  6812  1F39                     _WPUA	set	7993
  6813  1F44                     _WPUB	set	8004
  6814  1F38                     _ANSELA	set	7992
  6815  1F43                     _ANSELB	set	8003
  6816  1F4E                     _ANSELC	set	8014
  6817                           
  6818                           ; #config settings
  6819  0000                     
  6820                           	psect	cinit
  6821  003B                     start_initialization:	
  6822  003B                     __initialization:		;BIGRAM
  6823                           
  6824                           ; Initialize objects allocated to BANK1
  6825  003B  0141               	movlb	1	; select bank1
  6826  003C  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  6827  003F  00EE               	movwf	__pdataBANK1& (0+127)
  6828  0040  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  6829  0043  00EF               	movwf	(__pdataBANK1+1)& (0+127)
  6830                           
  6831                           ; Initialize objects allocated to BANK2
  6832  0044  3026               	movlw	low __pidataBANK2
  6833  0045  0084               	movwf	4
  6834  0046  309F               	movlw	(high __pidataBANK2)| (0+128)
  6835  0047  0085               	movwf	5
  6836  0048  3061               	movlw	low __pdataBANK2
  6837  0049  0086               	movwf	6
  6838  004A  3001               	movlw	high __pdataBANK2
  6839  004B  0087               	movwf	7
  6840  004C  3000               	movlw	0
  6841  004D  00FF               	movwf	btemp+1
  6842  004E  300A               	movlw	10
  6843  004F  319F  273C  3180   	fcall	init_ram
  6844                           
  6845                           ; Initialize objects allocated to BANK3
  6846  0052  307B               	movlw	low __pidataBANK3
  6847  0053  0084               	movwf	4
  6848  0054  309F               	movlw	(high __pidataBANK3)| (0+128)
  6849  0055  0085               	movwf	5
  6850  0056  30C6               	movlw	low __pdataBANK3
  6851  0057  0086               	movwf	6
  6852  0058  3001               	movlw	high __pdataBANK3
  6853  0059  0087               	movwf	7
  6854  005A  3000               	movlw	0
  6855  005B  00FF               	movwf	btemp+1
  6856  005C  3014               	movlw	20
  6857  005D  319F  273C  3180   	fcall	init_ram
  6858                           
  6859                           ; Clear objects allocated to BIGRAM
  6860  0060  30EF               	movlw	low (0+9711)
  6861  0061  0084               	movwf	4
  6862  0062  3025               	movlw	high (0+9711)
  6863  0063  0085               	movwf	5
  6864  0064  3001               	movlw	1
  6865  0065  00FE               	movwf	btemp
  6866  0066  3002               	movlw	2
  6867  0067  00FF               	movwf	btemp+1
  6868  0068  319F  2730  3180   	fcall	clear_ram0
  6869                           
  6870                           ; Clear objects allocated to COMMON
  6871  006B  01F0               	clrf	__pbssCOMMON& (0+127)
  6872  006C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  6873  006D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  6874  006E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  6875  006F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  6876  0070  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  6877                           
  6878                           ; Clear objects allocated to BANK1
  6879  0071  01EA               	clrf	__pbssBANK1& (0+127)
  6880  0072  01EB               	clrf	(__pbssBANK1+1)& (0+127)
  6881  0073  01EC               	clrf	(__pbssBANK1+2)& (0+127)
  6882  0074  01ED               	clrf	(__pbssBANK1+3)& (0+127)
  6883                           
  6884                           ; Clear objects allocated to BANK2
  6885  0075  3020               	movlw	low __pbssBANK2
  6886  0076  0084               	movwf	4
  6887  0077  3001               	movlw	high __pbssBANK2
  6888  0078  0085               	movwf	5
  6889  0079  3041               	movlw	65
  6890  007A  00FE               	movwf	btemp
  6891  007B  3000               	movlw	0
  6892  007C  00FF               	movwf	btemp+1
  6893  007D  319F  2730  3180   	fcall	clear_ram0
  6894                           
  6895                           ; Clear objects allocated to BANK3
  6896  0080  30A0               	movlw	low __pbssBANK3
  6897  0081  0084               	movwf	4
  6898  0082  3001               	movlw	high __pbssBANK3
  6899  0083  0085               	movwf	5
  6900  0084  3026               	movlw	38
  6901  0085  00FE               	movwf	btemp
  6902  0086  3000               	movlw	0
  6903  0087  00FF               	movwf	btemp+1
  6904  0088  319F  2730  3180   	fcall	clear_ram0
  6905                           
  6906                           ; Clear objects allocated to BANK4
  6907  008B  3020               	movlw	low __pbssBANK4
  6908  008C  0084               	movwf	4
  6909  008D  3002               	movlw	high __pbssBANK4
  6910  008E  0085               	movwf	5
  6911  008F  3020               	movlw	32
  6912  0090  00FE               	movwf	btemp
  6913  0091  3000               	movlw	0
  6914  0092  00FF               	movwf	btemp+1
  6915  0093  319F  2730         	fcall	clear_ram0
  6916  0095                     end_of_initialization:	
  6917                           ;End of C runtime variable initialization code
  6918                           
  6919  0095                     __end_of__initialization:	
  6920  0095  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6921  0096  0140               	movlb	0
  6922  0097  3192  2ABD         	ljmp	_main	;jump to C main() function
  6923                           
  6924                           	psect	bssCOMMON
  6925  0070                     __pbssCOMMON:	
  6926  0070                     _eusart1RxTail:	
  6927  0070                     	ds	1
  6928  0071                     _eusart1RxHead:	
  6929  0071                     	ds	1
  6930  0072                     _eusart1TxTail:	
  6931  0072                     	ds	1
  6932  0073                     _eusart1TxHead:	
  6933  0073                     	ds	1
  6934  0074                     I2C1_ISR@i2c_address:	
  6935  0074                     	ds	2
  6936                           
  6937                           	psect	bssBANK1
  6938  00EA                     __pbssBANK1:	
  6939  00EA                     _thresholdExceeded:	
  6940  00EA                     	ds	1
  6941  00EB                     _p_i2c1_current:	
  6942  00EB                     	ds	1
  6943  00EC                     _p_i2c1_trb_current:	
  6944  00EC                     	ds	1
  6945  00ED                     _eusart1RxCount:	
  6946  00ED                     	ds	1
  6947                           
  6948                           	psect	dataBANK1
  6949  00EE                     __pdataBANK1:	
  6950  00EE                     _address:	
  6951  00EE                     	ds	2
  6952                           
  6953                           	psect	bssBANK2
  6954  0120                     __pbssBANK2:	
  6955  0120                     _i2c1_object:	
  6956  0120                     	ds	5
  6957  0125                     _fadeTime:	
  6958  0125                     	ds	4
  6959  0129                     _lastActiveTime:	
  6960  0129                     	ds	2
  6961  012B                     controller@lastTime:	
  6962  012B                     	ds	2
  6963  012D                     _hueValPulse:	
  6964  012D                     	ds	2
  6965  012F                     _lastTimePulse:	
  6966  012F                     	ds	2
  6967  0131                     _hueValCycle:	
  6968  0131                     	ds	2
  6969  0133                     _lastTimeCycle:	
  6970  0133                     	ds	2
  6971  0135                     led@lastTime:	
  6972  0135                     	ds	2
  6973  0137                     dmx@lastTime:	
  6974  0137                     	ds	2
  6975  0139                     _dmxPointer:	
  6976  0139                     	ds	2
  6977  013B                     _thresholdCount:	
  6978  013B                     	ds	2
  6979  013D                     _lastRun:	
  6980  013D                     	ds	2
  6981  013F                     _bpm:	
  6982  013F                     	ds	2
  6983  0141                     _lastBeat:	
  6984  0141                     	ds	2
  6985  0143                     _lastTime:	
  6986  0143                     	ds	2
  6987  0145                     _count:	
  6988  0145                     	ds	2
  6989  0147                     _currentTime:	
  6990  0147                     	ds	2
  6991  0149                     _changeColor:	
  6992  0149                     	ds	1
  6993  014A                     _toggleCheck:	
  6994  014A                     	ds	1
  6995  014B                     _dmxOn:	
  6996  014B                     	ds	1
  6997  014C                     _offCheck:	
  6998  014C                     	ds	1
  6999  014D                     _lastDetected:	
  7000  014D                     	ds	1
  7001  014E                     _detected:	
  7002  014E                     	ds	1
  7003  014F                     _menu:	
  7004  014F                     	ds	1
  7005  0150                     _enter:	
  7006  0150                     	ds	1
  7007  0151                     _down:	
  7008  0151                     	ds	1
  7009  0152                     _up:	
  7010  0152                     	ds	1
  7011  0153                     _isOn:	
  7012  0153                     	ds	1
  7013  0154                     I2C1_ISR@i2c_10bit_address_restart:	
  7014  0154                     	ds	1
  7015  0155                     I2C1_ISR@i2c_bytes_left:	
  7016  0155                     	ds	1
  7017  0156                     I2C1_ISR@pi2c_buf_ptr:	
  7018  0156                     	ds	1
  7019  0157                     _i2c1_trb_count:	
  7020  0157                     	ds	1
  7021  0158                     _i2c1_state:	
  7022  0158                     	ds	1
  7023  0159                     _eusart1RxLastError:	
  7024  0159                     	ds	1
  7025  015A                     I2C1_MasterWrite@trBlock:	
  7026  015A                     	ds	4
  7027  015E                     _i2c1_tr_queue:	
  7028  015E                     	ds	3
  7029                           
  7030                           	psect	dataBANK2
  7031  0161                     __pdataBANK2:	
  7032  0161                     _currentState:	
  7033  0161                     	ds	2
  7034  0163                     _fadeAmmount:	
  7035  0163                     	ds	2
  7036  0165                     _delay:	
  7037  0165                     	ds	2
  7038  0167                     _threshold:	
  7039  0167                     	ds	2
  7040  0169                     _cycleSpeed:	
  7041  0169                     	ds	2
  7042                           
  7043                           	psect	bssBANK3
  7044  01A0                     __pbssBANK3:	
  7045  01A0                     cycleColors@F108:	
  7046  01A0                     	ds	10
  7047  01AA                     _eusart1RxStatusBuffer:	
  7048  01AA                     	ds	8
  7049  01B2                     _eusart1RxBuffer:	
  7050  01B2                     	ds	8
  7051  01BA                     _eusart1TxBuffer:	
  7052  01BA                     	ds	8
  7053  01C2                     I2C1_MasterRead@trBlock:	
  7054  01C2                     	ds	4
  7055                           
  7056                           	psect	dataBANK3
  7057  01C6                     __pdataBANK3:	
  7058  01C6                     _pulseColor:	
  7059  01C6                     	ds	10
  7060  01D0                     _color:	
  7061  01D0                     	ds	10
  7062                           
  7063                           	psect	bssBANK4
  7064  0220                     __pbssBANK4:	
  7065  0220                     _buttons:	
  7066  0220                     	ds	32
  7067                           
  7068                           	psect	inittext
  7069  1F3C                     init_ram:	
  7070  1F3C  00FE               	movwf	126
  7071  1F3D                     initloop:	
  7072  1F3D  0012               	moviw fsr0++
  7073  1F3E  001E               	movwi fsr1++
  7074  1F3F  3001               	movlw	1
  7075  1F40  02FE               	subwf	126,f
  7076  1F41  3000               	movlw	0
  7077  1F42  3BFF               	subwfb	127,f
  7078  1F43  087F               	movf	127,w
  7079  1F44  047E               	iorwf	126,w
  7080  1F45  1903               	btfsc	3,2
  7081  1F46  3400               	retlw	0
  7082  1F47  2F3D               	goto	initloop
  7083                           
  7084                           	psect	clrtext
  7085  1F30                     clear_ram0:	
  7086                           ;	Called with FSR0 containing the base address, and
  7087                           ;	btemp/btemp+1 has the size to clear
  7088                           
  7089  1F30  0064               	clrwdt	;clear the watchdog before getting into this loop
  7090  1F31                     clrloop0:	
  7091  1F31  0180               	clrf	0	;clear RAM location pointed to by FSR
  7092  1F32  3101               	addfsr 0,1
  7093  1F33  3001               	movlw	1
  7094  1F34  02FE               	subwf	126,f
  7095  1F35  3000               	movlw	0
  7096  1F36  3BFF               	subwfb	127,f
  7097  1F37  087F               	movf	127,w
  7098  1F38  047E               	iorwf	126,w
  7099  1F39  1903               	btfsc	3,2
  7100  1F3A  3400               	retlw	0	;all done for this memory range, return
  7101  1F3B  2F31               	goto	clrloop0	;have we reached the end yet?
  7102                           
  7103                           	psect	cstackBANK3
  7104  01E4                     __pcstackBANK3:	
  7105  01E4                     ??_main:	
  7106                           
  7107                           ; 1 bytes @ 0x0
  7108  01E4                     	ds	2
  7109                           
  7110                           	psect	cstackBANK1
  7111  00A0                     __pcstackBANK1:	
  7112  00A0                     _HueToRGB$2858:	
  7113                           
  7114                           ; 4 bytes @ 0x0
  7115  00A0                     	ds	4
  7116  00A4                     ?___fltol:	
  7117  00A4                     ___fltol@f1:	
  7118                           ; 4 bytes @ 0x4
  7119                           
  7120                           
  7121                           ; 4 bytes @ 0x4
  7122  00A4                     	ds	4
  7123  00A8                     ??___fltol:	
  7124                           
  7125                           ; 1 bytes @ 0x8
  7126  00A8                     	ds	5
  7127  00AD                     ___fltol@sign1:	
  7128                           
  7129                           ; 1 bytes @ 0xD
  7130  00AD                     	ds	1
  7131  00AE                     ___fltol@exp1:	
  7132                           
  7133                           ; 1 bytes @ 0xE
  7134  00AE                     	ds	1
  7135  00AF                     ?_LED_setHSL:	
  7136  00AF                     LED_setHSL@hsl:	
  7137                           ; 1 bytes @ 0xF
  7138                           
  7139                           
  7140                           ; 10 bytes @ 0xF
  7141  00AF                     	ds	10
  7142  00B9                     ??_LED_setHSL:	
  7143                           
  7144                           ; 1 bytes @ 0x19
  7145  00B9                     	ds	2
  7146  00BB                     _LED_setHSL$2859:	
  7147                           
  7148                           ; 4 bytes @ 0x1B
  7149  00BB                     	ds	4
  7150  00BF                     _LED_setHSL$2862:	
  7151                           
  7152                           ; 4 bytes @ 0x1F
  7153  00BF                     	ds	4
  7154  00C3                     _LED_setHSL$2860:	
  7155                           
  7156                           ; 4 bytes @ 0x23
  7157  00C3                     	ds	4
  7158  00C7                     _LED_setHSL$2861:	
  7159                           
  7160                           ; 4 bytes @ 0x27
  7161  00C7                     	ds	4
  7162  00CB                     LED_setHSL@v1:	
  7163                           
  7164                           ; 4 bytes @ 0x2B
  7165  00CB                     	ds	4
  7166  00CF                     LED_setHSL@hue:	
  7167                           
  7168                           ; 4 bytes @ 0x2F
  7169  00CF                     	ds	4
  7170  00D3                     LED_setHSL@v2:	
  7171                           
  7172                           ; 4 bytes @ 0x33
  7173  00D3                     	ds	4
  7174  00D7                     LED_setHSL@rgb:	
  7175                           
  7176                           ; 3 bytes @ 0x37
  7177  00D7                     	ds	3
  7178  00DA                     ??_fadeColor:	
  7179  00DA                     ??_cycleColors:	
  7180                           ; 1 bytes @ 0x3A
  7181                           
  7182                           
  7183                           ; 1 bytes @ 0x3A
  7184  00DA                     	ds	2
  7185  00DC                     cycleColors@foo:	
  7186  00DC                     fadeColor@time:	
  7187                           ; 1 bytes @ 0x3C
  7188                           
  7189                           
  7190                           ; 2 bytes @ 0x3C
  7191  00DC                     	ds	1
  7192  00DD                     cycleColors@time:	
  7193                           
  7194                           ; 2 bytes @ 0x3D
  7195  00DD                     	ds	2
  7196  00DF                     cycleColors@color:	
  7197                           
  7198                           ; 10 bytes @ 0x3F
  7199  00DF                     	ds	10
  7200  00E9                     ??_MENU_task:	
  7201                           
  7202                           ; 1 bytes @ 0x49
  7203  00E9                     	ds	1
  7204                           
  7205                           	psect	cstackCOMMON
  7206  0076                     __pcstackCOMMON:	
  7207  0076                     ?_EUSART1_Receive_ISR:	
  7208  0076                     ?_EUSART1_Transmit_ISR:	
  7209                           ; 1 bytes @ 0x0
  7210                           
  7211  0076                     ??_EUSART1_Transmit_ISR:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0076                     ?_EUSART1_DefaultErrorHandler:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0076                     ?_EUSART1_RxDataHandler:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0076                     ??_EUSART1_RxDataHandler:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0076                     ?_PMD_Initialize:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0076                     ?_PIN_MANAGER_Initialize:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0076                     ?_OSCILLATOR_Initialize:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0076                     ?_I2C1_Initialize:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0076                     ?_ADCC_Initialize:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0076                     ?_TMR0_Initialize:	
  7251                           ; 1 bytes @ 0x0
  7252                           
  7253  0076                     ?_TMR0_ISR:	
  7254                           ; 1 bytes @ 0x0
  7255                           
  7256  0076                     ??_TMR0_ISR:	
  7257                           ; 1 bytes @ 0x0
  7258                           
  7259  0076                     ?_I2C1_BusCollisionISR:	
  7260                           ; 1 bytes @ 0x0
  7261                           
  7262  0076                     ??_I2C1_BusCollisionISR:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0076                     ?_I2C1_ISR:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0076                     ?_ADCC_ThresholdISR:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0076                     ??_ADCC_ThresholdISR:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0076                     ?_TMR0_DefaultInterruptHandler:	
  7275                           ; 1 bytes @ 0x0
  7276                           
  7277  0076                     ??_TMR0_DefaultInterruptHandler:	
  7278                           ; 1 bytes @ 0x0
  7279                           
  7280  0076                     ?_I2C1_Stop:	
  7281                           ; 1 bytes @ 0x0
  7282                           
  7283  0076                     ??_I2C1_Stop:	
  7284                           ; 1 bytes @ 0x0
  7285                           
  7286  0076                     ?_I2C1_FunctionComplete:	
  7287                           ; 1 bytes @ 0x0
  7288                           
  7289  0076                     ??_I2C1_FunctionComplete:	
  7290                           ; 1 bytes @ 0x0
  7291                           
  7292  0076                     ?_ADCC_DefaultInterruptHandler:	
  7293                           ; 1 bytes @ 0x0
  7294                           
  7295  0076                     ??_ADCC_DefaultInterruptHandler:	
  7296                           ; 1 bytes @ 0x0
  7297                           
  7298  0076                     ?_CLOCK_init:	
  7299                           ; 1 bytes @ 0x0
  7300                           
  7301  0076                     ?_DMX_ISR:	
  7302                           ; 1 bytes @ 0x0
  7303                           
  7304  0076                     ??_DMX_ISR:	
  7305                           ; 1 bytes @ 0x0
  7306                           
  7307  0076                     ?_TM1650_init:	
  7308                           ; 1 bytes @ 0x0
  7309                           
  7310  0076                     ?_BUTTONS_init:	
  7311                           ; 1 bytes @ 0x0
  7312                           
  7313  0076                     ?_initLED:	
  7314                           ; 1 bytes @ 0x0
  7315                           
  7316  0076                     ?_BEAT_init:	
  7317                           ; 1 bytes @ 0x0
  7318                           
  7319  0076                     ?_MENU_task:	
  7320                           ; 1 bytes @ 0x0
  7321                           
  7322  0076                     ?_DMX_task:	
  7323                           ; 1 bytes @ 0x0
  7324                           
  7325  0076                     ?_BUTTONS_task:	
  7326                           ; 1 bytes @ 0x0
  7327                           
  7328  0076                     ?_CLOCK_timerCallback:	
  7329                           ; 1 bytes @ 0x0
  7330                           
  7331  0076                     ??_CLOCK_timerCallback:	
  7332                           ; 1 bytes @ 0x0
  7333                           
  7334  0076                     ?_TM1650_enable:	
  7335                           ; 1 bytes @ 0x0
  7336                           
  7337  0076                     ?_EUSART1_Initialize:	
  7338                           ; 1 bytes @ 0x0
  7339                           
  7340  0076                     ?_SYSTEM_Initialize:	
  7341                           ; 1 bytes @ 0x0
  7342                           
  7343  0076                     ?_INTERRUPT_InterruptManager:	
  7344                           ; 1 bytes @ 0x0
  7345                           
  7346  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  7347                           ; 1 bytes @ 0x0
  7348                           
  7349  0076                     ?_ADCC_StartConversion:	
  7350                           ; 1 bytes @ 0x0
  7351                           
  7352  0076                     ?_main:	
  7353                           ; 1 bytes @ 0x0
  7354                           
  7355  0076                     ?_TM1650_isEnabled:	
  7356                           ; 1 bytes @ 0x0
  7357                           
  7358  0076                     ?_adcThresholdHandler:	
  7359                           ; 1 bytes @ 0x0
  7360                           
  7361  0076                     ??_adcThresholdHandler:	
  7362                           ; 1 bytes @ 0x0
  7363                           
  7364  0076                     ?_BEAT_detected:	
  7365                           ; 1 bytes @ 0x0
  7366                           
  7367  0076                     ?_BEAT_task:	
  7368                           ; 1 bytes @ 0x0
  7369                           
  7370  0076                     ?_isDMXOn:	
  7371                           ; 1 bytes @ 0x0
  7372                           
  7373  0076                     ?_fadeColor:	
  7374                           ; 1 bytes @ 0x0
  7375                           
  7376  0076                     ?_LED_DMX:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0076                     ?_LED_Beat:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0076                     ?_menuButtons:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0076                     ?_cycleColors:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0076                     ?_pulseColors:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391                           
  7392                           ; 1 bytes @ 0x0
  7393  0076                     	ds	1
  7394  0077                     ??_EUSART1_Receive_ISR:	
  7395  0077                     ??_EUSART1_DefaultErrorHandler:	
  7396                           ; 1 bytes @ 0x1
  7397                           
  7398  0077                     I2C1_Stop@completion_code:	
  7399                           ; 1 bytes @ 0x1
  7400                           
  7401                           
  7402                           ; 1 bytes @ 0x1
  7403  0077                     	ds	1
  7404  0078                     ??_I2C1_ISR:	
  7405                           
  7406                           ; 1 bytes @ 0x2
  7407  0078                     	ds	4
  7408  007C                     ??_INTERRUPT_InterruptManager:	
  7409                           
  7410                           	psect	cstackBANK0
  7411  0020                     __pcstackBANK0:	
  7412                           ; 1 bytes @ 0x6
  7413                           
  7414  0020                     ?___fleq:	
  7415  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7416                           ; 1 bit 
  7417                           
  7418  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7425                           ; 1 bytes @ 0x0
  7426                           
  7427  0020                     ?_EUSART1_SetErrorHandler:	
  7428                           ; 1 bytes @ 0x0
  7429                           
  7430  0020                     ??_PMD_Initialize:	
  7431                           ; 1 bytes @ 0x0
  7432                           
  7433  0020                     ??_PIN_MANAGER_Initialize:	
  7434                           ; 1 bytes @ 0x0
  7435                           
  7436  0020                     ??_OSCILLATOR_Initialize:	
  7437                           ; 1 bytes @ 0x0
  7438                           
  7439  0020                     ??_I2C1_Initialize:	
  7440                           ; 1 bytes @ 0x0
  7441                           
  7442  0020                     ?_TMR0_SetInterruptHandler:	
  7443                           ; 1 bytes @ 0x0
  7444                           
  7445  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7446                           ; 1 bytes @ 0x0
  7447                           
  7448  0020                     ?_I2C1_MasterTRBInsert:	
  7449                           ; 1 bytes @ 0x0
  7450                           
  7451  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7452                           ; 1 bytes @ 0x0
  7453                           
  7454  0020                     ??_initLED:	
  7455                           ; 1 bytes @ 0x0
  7456                           
  7457  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7458                           ; 1 bytes @ 0x0
  7459                           
  7460  0020                     ??_ADCC_StartConversion:	
  7461                           ; 1 bytes @ 0x0
  7462                           
  7463  0020                     ?_ADCC_SetUpperThreshold:	
  7464                           ; 1 bytes @ 0x0
  7465                           
  7466  0020                     ??_TM1650_isEnabled:	
  7467                           ; 1 bytes @ 0x0
  7468                           
  7469  0020                     ?_init:	
  7470                           ; 1 bytes @ 0x0
  7471                           
  7472  0020                     ??_BEAT_detected:	
  7473                           ; 1 bytes @ 0x0
  7474                           
  7475  0020                     ??_isDMXOn:	
  7476                           ; 1 bytes @ 0x0
  7477                           
  7478  0020                     ?_LED_setColor:	
  7479                           ; 1 bytes @ 0x0
  7480                           
  7481  0020                     ?__Umul8_16:	
  7482                           ; 1 bytes @ 0x0
  7483                           
  7484  0020                     ?_CLOCK_getTime:	
  7485                           ; 2 bytes @ 0x0
  7486                           
  7487  0020                     ?_BUTTONS_isClicked:	
  7488                           ; 2 bytes @ 0x0
  7489                           
  7490  0020                     ?___lwdiv:	
  7491                           ; 2 bytes @ 0x0
  7492                           
  7493  0020                     ?___lwmod:	
  7494                           ; 2 bytes @ 0x0
  7495                           
  7496  0020                     ?___xxtofl:	
  7497                           ; 2 bytes @ 0x0
  7498                           
  7499  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7500                           ; 4 bytes @ 0x0
  7501                           
  7502  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7503                           ; 1 bytes @ 0x0
  7504                           
  7505  0020                     ADCC_StartConversion@channel:	
  7506                           ; 1 bytes @ 0x0
  7507                           
  7508  0020                     LED_setColor@green:	
  7509                           ; 1 bytes @ 0x0
  7510                           
  7511  0020                     __Umul8_16@multiplicand:	
  7512                           ; 1 bytes @ 0x0
  7513                           
  7514  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7515                           ; 1 bytes @ 0x0
  7516                           
  7517  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7518                           ; 2 bytes @ 0x0
  7519                           
  7520  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7521                           ; 2 bytes @ 0x0
  7522                           
  7523  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7524                           ; 2 bytes @ 0x0
  7525                           
  7526  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7527                           ; 2 bytes @ 0x0
  7528                           
  7529  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7530                           ; 2 bytes @ 0x0
  7531                           
  7532  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7533                           ; 2 bytes @ 0x0
  7534                           
  7535  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7536                           ; 2 bytes @ 0x0
  7537                           
  7538  0020                     init@port:	
  7539                           ; 2 bytes @ 0x0
  7540                           
  7541  0020                     ___lwdiv@divisor:	
  7542                           ; 2 bytes @ 0x0
  7543                           
  7544  0020                     ___lwmod@divisor:	
  7545                           ; 2 bytes @ 0x0
  7546                           
  7547  0020                     ___fleq@ff1:	
  7548                           ; 2 bytes @ 0x0
  7549                           
  7550  0020                     ___xxtofl@val:	
  7551                           ; 4 bytes @ 0x0
  7552                           
  7553                           
  7554                           ; 4 bytes @ 0x0
  7555  0020                     	ds	1
  7556  0021                     I2C1_MasterTRBInsert@pflag:	
  7557  0021                     I2C1_MasterWriteTRBBuild@length:	
  7558                           ; 1 bytes @ 0x1
  7559                           
  7560  0021                     LED_setColor@white:	
  7561                           ; 1 bytes @ 0x1
  7562                           
  7563                           
  7564                           ; 1 bytes @ 0x1
  7565  0021                     	ds	1
  7566  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7567  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7568                           ; 1 bytes @ 0x2
  7569                           
  7570  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7571                           ; 1 bytes @ 0x2
  7572                           
  7573  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7574                           ; 1 bytes @ 0x2
  7575                           
  7576  0022                     ??_EUSART1_SetErrorHandler:	
  7577                           ; 1 bytes @ 0x2
  7578                           
  7579  0022                     ??_ADCC_Initialize:	
  7580                           ; 1 bytes @ 0x2
  7581                           
  7582  0022                     ??_TMR0_Initialize:	
  7583                           ; 1 bytes @ 0x2
  7584                           
  7585  0022                     ??_TMR0_SetInterruptHandler:	
  7586                           ; 1 bytes @ 0x2
  7587                           
  7588  0022                     ??_I2C1_MasterTRBInsert:	
  7589                           ; 1 bytes @ 0x2
  7590                           
  7591  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7592                           ; 1 bytes @ 0x2
  7593                           
  7594  0022                     ??_CLOCK_init:	
  7595                           ; 1 bytes @ 0x2
  7596                           
  7597  0022                     ??_BEAT_init:	
  7598                           ; 1 bytes @ 0x2
  7599                           
  7600  0022                     ??_DMX_task:	
  7601                           ; 1 bytes @ 0x2
  7602                           
  7603  0022                     ??_BUTTONS_task:	
  7604                           ; 1 bytes @ 0x2
  7605                           
  7606  0022                     ??__Umul8_16:	
  7607                           ; 1 bytes @ 0x2
  7608                           
  7609  0022                     ??_EUSART1_Initialize:	
  7610                           ; 1 bytes @ 0x2
  7611                           
  7612  0022                     ??_ADCC_SetUpperThreshold:	
  7613                           ; 1 bytes @ 0x2
  7614                           
  7615  0022                     ??_CLOCK_getTime:	
  7616                           ; 1 bytes @ 0x2
  7617                           
  7618  0022                     init@pin:	
  7619                           ; 1 bytes @ 0x2
  7620                           
  7621  0022                     LED_setColor@blue:	
  7622                           ; 1 bytes @ 0x2
  7623                           
  7624  0022                     I2C1_MasterWriteTRBBuild@address:	
  7625                           ; 1 bytes @ 0x2
  7626                           
  7627  0022                     ___lwdiv@dividend:	
  7628                           ; 2 bytes @ 0x2
  7629                           
  7630  0022                     ___lwmod@dividend:	
  7631                           ; 2 bytes @ 0x2
  7632                           
  7633                           
  7634                           ; 2 bytes @ 0x2
  7635  0022                     	ds	1
  7636  0023                     ??_SYSTEM_Initialize:	
  7637  0023                     ??_init:	
  7638                           ; 1 bytes @ 0x3
  7639                           
  7640  0023                     ??_BUTTONS_isClicked:	
  7641                           ; 1 bytes @ 0x3
  7642                           
  7643  0023                     ??_LED_setColor:	
  7644                           ; 1 bytes @ 0x3
  7645                           
  7646  0023                     I2C1_MasterTRBInsert@count:	
  7647                           ; 1 bytes @ 0x3
  7648                           
  7649  0023                     BUTTONS_isClicked@button:	
  7650                           ; 1 bytes @ 0x3
  7651                           
  7652                           
  7653                           ; 1 bytes @ 0x3
  7654  0023                     	ds	1
  7655  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7656  0024                     ??_menuButtons:	
  7657                           ; 1 bytes @ 0x4
  7658                           
  7659  0024                     ??___lwdiv:	
  7660                           ; 1 bytes @ 0x4
  7661                           
  7662  0024                     ??___lwmod:	
  7663                           ; 1 bytes @ 0x4
  7664                           
  7665  0024                     ??___xxtofl:	
  7666                           ; 1 bytes @ 0x4
  7667                           
  7668  0024                     init@btn:	
  7669                           ; 1 bytes @ 0x4
  7670                           
  7671  0024                     DMX_task@time:	
  7672                           ; 1 bytes @ 0x4
  7673                           
  7674  0024                     __Umul8_16@product:	
  7675                           ; 2 bytes @ 0x4
  7676                           
  7677  0024                     ___fleq@ff2:	
  7678                           ; 2 bytes @ 0x4
  7679                           
  7680                           
  7681                           ; 4 bytes @ 0x4
  7682  0024                     	ds	1
  7683  0025                     ??_BUTTONS_init:	
  7684  0025                     BUTTONS_task@i:	
  7685                           ; 1 bytes @ 0x5
  7686                           
  7687  0025                     ___lwdiv@counter:	
  7688                           ; 1 bytes @ 0x5
  7689                           
  7690  0025                     ___lwmod@counter:	
  7691                           ; 1 bytes @ 0x5
  7692                           
  7693                           
  7694                           ; 1 bytes @ 0x5
  7695  0025                     	ds	1
  7696  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7697  0026                     BUTTONS_task@time:	
  7698                           ; 1 bytes @ 0x6
  7699                           
  7700  0026                     ___lwdiv@quotient:	
  7701                           ; 2 bytes @ 0x6
  7702                           
  7703  0026                     __Umul8_16@word_mpld:	
  7704                           ; 2 bytes @ 0x6
  7705                           
  7706                           
  7707                           ; 2 bytes @ 0x6
  7708  0026                     	ds	1
  7709  0027                     ?_I2C1_MasterWrite:	
  7710  0027                     I2C1_MasterWrite@length:	
  7711                           ; 1 bytes @ 0x7
  7712                           
  7713  0027                     LED_setColor@lo1:	
  7714                           ; 1 bytes @ 0x7
  7715                           
  7716                           
  7717                           ; 2 bytes @ 0x7
  7718  0027                     	ds	1
  7719  0028                     ??_BEAT_task:	
  7720  0028                     ??___fleq:	
  7721                           ; 1 bytes @ 0x8
  7722                           
  7723  0028                     BUTTONS_task@btn:	
  7724                           ; 1 bytes @ 0x8
  7725                           
  7726  0028                     ___xxtofl@sign:	
  7727                           ; 1 bytes @ 0x8
  7728                           
  7729  0028                     __Umul8_16@multiplier:	
  7730                           ; 1 bytes @ 0x8
  7731                           
  7732  0028                     I2C1_MasterWrite@address:	
  7733                           ; 1 bytes @ 0x8
  7734                           
  7735                           
  7736                           ; 2 bytes @ 0x8
  7737  0028                     	ds	1
  7738  0029                     ?___fladd:	
  7739  0029                     ___xxtofl@exp:	
  7740                           ; 4 bytes @ 0x9
  7741                           
  7742  0029                     ___fladd@b:	
  7743                           ; 1 bytes @ 0x9
  7744                           
  7745                           
  7746                           ; 4 bytes @ 0x9
  7747  0029                     	ds	1
  7748  002A                     I2C1_MasterWrite@pflag:	
  7749  002A                     BEAT_task@offset:	
  7750                           ; 1 bytes @ 0xA
  7751                           
  7752  002A                     ___xxtofl@arg:	
  7753                           ; 2 bytes @ 0xA
  7754                           
  7755                           
  7756                           ; 4 bytes @ 0xA
  7757  002A                     	ds	1
  7758  002B                     ??_I2C1_MasterWrite:	
  7759  002B                     LED_setColor@lo2:	
  7760                           ; 1 bytes @ 0xB
  7761                           
  7762                           
  7763                           ; 2 bytes @ 0xB
  7764  002B                     	ds	2
  7765  002D                     I2C1_MasterWrite@pdata:	
  7766  002D                     ___fladd@a:	
  7767                           ; 1 bytes @ 0xD
  7768                           
  7769                           
  7770                           ; 4 bytes @ 0xD
  7771  002D                     	ds	1
  7772  002E                     ?_writeData:	
  7773  002E                     ?___fldiv:	
  7774                           ; 1 bytes @ 0xE
  7775                           
  7776  002E                     writeData@data:	
  7777                           ; 4 bytes @ 0xE
  7778                           
  7779  002E                     ___fldiv@a:	
  7780                           ; 1 bytes @ 0xE
  7781                           
  7782                           
  7783                           ; 4 bytes @ 0xE
  7784  002E                     	ds	1
  7785  002F                     ??_writeData:	
  7786  002F                     LED_setColor@lo3:	
  7787                           ; 1 bytes @ 0xF
  7788                           
  7789                           
  7790                           ; 2 bytes @ 0xF
  7791  002F                     	ds	2
  7792  0031                     ??___fladd:	
  7793                           
  7794                           ; 1 bytes @ 0x11
  7795  0031                     	ds	1
  7796  0032                     writeData@address:	
  7797  0032                     ___fldiv@b:	
  7798                           ; 1 bytes @ 0x12
  7799                           
  7800                           
  7801                           ; 4 bytes @ 0x12
  7802  0032                     	ds	1
  7803  0033                     writeData@status:	
  7804  0033                     LED_setColor@lo4:	
  7805                           ; 1 bytes @ 0x13
  7806                           
  7807                           
  7808                           ; 2 bytes @ 0x13
  7809  0033                     	ds	1
  7810  0034                     ??_TM1650_enable:	
  7811  0034                     ?_TM1650_setDigit:	
  7812                           ; 1 bytes @ 0x14
  7813                           
  7814  0034                     TM1650_setDigit@data:	
  7815                           ; 1 bytes @ 0x14
  7816                           
  7817  0034                     TM1650_enable@enable:	
  7818                           ; 1 bytes @ 0x14
  7819                           
  7820                           
  7821                           ; 1 bytes @ 0x14
  7822  0034                     	ds	1
  7823  0035                     ??_TM1650_init:	
  7824  0035                     LED_setColor@red:	
  7825                           ; 1 bytes @ 0x15
  7826                           
  7827  0035                     TM1650_setDigit@dp:	
  7828                           ; 1 bytes @ 0x15
  7829                           
  7830                           
  7831                           ; 2 bytes @ 0x15
  7832  0035                     	ds	1
  7833  0036                     ??_LED_DMX:	
  7834  0036                     ??___fldiv:	
  7835                           ; 1 bytes @ 0x16
  7836                           
  7837                           
  7838                           ; 1 bytes @ 0x16
  7839  0036                     	ds	1
  7840  0037                     ??_TM1650_setDigit:	
  7841                           
  7842                           ; 1 bytes @ 0x17
  7843  0037                     	ds	2
  7844  0039                     ___fladd@signs:	
  7845                           
  7846                           ; 1 bytes @ 0x19
  7847  0039                     	ds	1
  7848  003A                     TM1650_setDigit@digit:	
  7849  003A                     ___fladd@aexp:	
  7850                           ; 1 bytes @ 0x1A
  7851                           
  7852                           
  7853                           ; 1 bytes @ 0x1A
  7854  003A                     	ds	1
  7855  003B                     ?_TM1650_fastPrintNum:	
  7856  003B                     ___fladd@bexp:	
  7857                           ; 1 bytes @ 0x1B
  7858                           
  7859  003B                     TM1650_fastPrintNum@num:	
  7860                           ; 1 bytes @ 0x1B
  7861                           
  7862  003B                     ___fldiv@rem:	
  7863                           ; 2 bytes @ 0x1B
  7864                           
  7865                           
  7866                           ; 4 bytes @ 0x1B
  7867  003B                     	ds	1
  7868  003C                     ___fladd@grs:	
  7869                           
  7870                           ; 1 bytes @ 0x1C
  7871  003C                     	ds	1
  7872  003D                     ??_TM1650_fastPrintNum:	
  7873  003D                     ?___flmul:	
  7874                           ; 1 bytes @ 0x1D
  7875                           
  7876  003D                     ___flmul@b:	
  7877                           ; 4 bytes @ 0x1D
  7878                           
  7879                           
  7880                           ; 4 bytes @ 0x1D
  7881  003D                     	ds	1
  7882  003E                     TM1650_fastPrintNum@numWrite:	
  7883                           
  7884                           ; 2 bytes @ 0x1E
  7885  003E                     	ds	1
  7886  003F                     ___fldiv@sign:	
  7887                           
  7888                           ; 1 bytes @ 0x1F
  7889  003F                     	ds	1
  7890  0040                     TM1650_fastPrintNum@i:	
  7891  0040                     ___fldiv@new_exp:	
  7892                           ; 2 bytes @ 0x20
  7893                           
  7894                           
  7895                           ; 2 bytes @ 0x20
  7896  0040                     	ds	1
  7897  0041                     ___flmul@a:	
  7898                           
  7899                           ; 4 bytes @ 0x21
  7900  0041                     	ds	1
  7901  0042                     ?_increment:	
  7902  0042                     ?_decrement:	
  7903                           ; 1 bytes @ 0x22
  7904                           
  7905  0042                     increment@val:	
  7906                           ; 1 bytes @ 0x22
  7907                           
  7908  0042                     decrement@val:	
  7909                           ; 2 bytes @ 0x22
  7910                           
  7911  0042                     ___fldiv@grs:	
  7912                           ; 2 bytes @ 0x22
  7913                           
  7914                           
  7915                           ; 4 bytes @ 0x22
  7916  0042                     	ds	2
  7917  0044                     ??_increment:	
  7918  0044                     ??_decrement:	
  7919                           ; 1 bytes @ 0x24
  7920                           
  7921                           
  7922                           ; 1 bytes @ 0x24
  7923  0044                     	ds	1
  7924  0045                     ??___flmul:	
  7925                           
  7926                           ; 1 bytes @ 0x25
  7927  0045                     	ds	1
  7928  0046                     ?_numControl_Set:	
  7929  0046                     ___fldiv@bexp:	
  7930                           ; 1 bytes @ 0x26
  7931                           
  7932  0046                     numControl_Set@val:	
  7933                           ; 1 bytes @ 0x26
  7934                           
  7935                           
  7936                           ; 2 bytes @ 0x26
  7937  0046                     	ds	1
  7938  0047                     ___fldiv@aexp:	
  7939                           
  7940                           ; 1 bytes @ 0x27
  7941  0047                     	ds	1
  7942  0048                     ??_numControl_Set:	
  7943                           
  7944                           ; 1 bytes @ 0x28
  7945  0048                     	ds	2
  7946  004A                     ___flmul@sign:	
  7947  004A                     numControl_Set@time:	
  7948                           ; 1 bytes @ 0x2A
  7949                           
  7950                           
  7951                           ; 2 bytes @ 0x2A
  7952  004A                     	ds	1
  7953  004B                     ___flmul@aexp:	
  7954                           
  7955                           ; 1 bytes @ 0x2B
  7956  004B                     	ds	1
  7957  004C                     ___flmul@grs:	
  7958                           
  7959                           ; 4 bytes @ 0x2C
  7960  004C                     	ds	4
  7961  0050                     ___flmul@bexp:	
  7962                           
  7963                           ; 1 bytes @ 0x30
  7964  0050                     	ds	1
  7965  0051                     ___flmul@prod:	
  7966                           
  7967                           ; 4 bytes @ 0x31
  7968  0051                     	ds	4
  7969  0055                     ___flmul@temp:	
  7970                           
  7971                           ; 2 bytes @ 0x35
  7972  0055                     	ds	2
  7973  0057                     ?___flge:	
  7974  0057                     ?___flsub:	
  7975                           ; 1 bit 
  7976                           
  7977  0057                     ___flge@ff1:	
  7978                           ; 4 bytes @ 0x37
  7979                           
  7980  0057                     ___flsub@a:	
  7981                           ; 4 bytes @ 0x37
  7982                           
  7983                           
  7984                           ; 4 bytes @ 0x37
  7985  0057                     	ds	4
  7986  005B                     ___flge@ff2:	
  7987  005B                     ___flsub@b:	
  7988                           ; 4 bytes @ 0x3B
  7989                           
  7990                           
  7991                           ; 4 bytes @ 0x3B
  7992  005B                     	ds	4
  7993  005F                     ??___flge:	
  7994  005F                     ??___flsub:	
  7995                           ; 1 bytes @ 0x3F
  7996                           
  7997                           
  7998                           ; 1 bytes @ 0x3F
  7999  005F                     	ds	4
  8000  0063                     ?_HueToRGB:	
  8001  0063                     HueToRGB@v1:	
  8002                           ; 4 bytes @ 0x43
  8003                           
  8004                           
  8005                           ; 4 bytes @ 0x43
  8006  0063                     	ds	4
  8007  0067                     HueToRGB@v2:	
  8008                           
  8009                           ; 4 bytes @ 0x47
  8010  0067                     	ds	4
  8011  006B                     HueToRGB@vH:	
  8012                           
  8013                           ; 4 bytes @ 0x4B
  8014  006B                     	ds	4
  8015  006F                     ??_HueToRGB:	
  8016  006F                     ??_LED_Beat:	
  8017                           ; 1 bytes @ 0x4F
  8018                           
  8019  006F                     ??_pulseColors:	
  8020                           ; 1 bytes @ 0x4F
  8021                           
  8022                           
  8023                           ; 1 bytes @ 0x4F
  8024  006F                     	ds	1
  8025                           
  8026                           	psect	maintext
  8027  12BD                     __pmaintext:	
  8028 ;;
  8029 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8030 ;;
  8031 ;; *************** function _main *****************
  8032 ;; Defined at:
  8033 ;;		line 16 in file "main.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : B3F/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8049 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8050 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8051 ;;Total ram usage:        2 bytes
  8052 ;; Hardware stack levels required when called:   14
  8053 ;; This function calls:
  8054 ;;		_BEAT_init
  8055 ;;		_BUTTONS_init
  8056 ;;		_BUTTONS_task
  8057 ;;		_CLOCK_init
  8058 ;;		_DMX_task
  8059 ;;		_EUSART1_SetRxInterruptHandler
  8060 ;;		_MENU_task
  8061 ;;		_SYSTEM_Initialize
  8062 ;;		_TM1650_init
  8063 ;;		_initLED
  8064 ;; This function is called by:
  8065 ;;		Startup code after reset
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function _main
  8071  12BD                     _main:	
  8072                           
  8073                           ;main.c: 18:     SYSTEM_Initialize();
  8074                           
  8075                           ;incstack = 0
  8076                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8077  12BD  319F  27A4  3192   	fcall	_SYSTEM_Initialize
  8078                           
  8079                           ;main.c: 19:     CLOCK_init();
  8080  12C0  319E  26A8  3192   	fcall	_CLOCK_init
  8081                           
  8082                           ;main.c: 20:     TRISB6 = 0;
  8083  12C3  0140               	movlb	0	; select bank0
  8084  12C4  1313               	bcf	19,6	;volatile
  8085                           
  8086                           ;main.c: 21:     LATB6 = 0;
  8087  12C5  1319               	bcf	25,6	;volatile
  8088                           
  8089                           ;main.c: 22:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  8090  12C6  303F               	movlw	low _DMX_ISR
  8091  12C7  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8092  12C8  3011               	movlw	high _DMX_ISR
  8093  12C9  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8094  12CA  319F  2701  3192   	fcall	_EUSART1_SetRxInterruptHandler
  8095                           
  8096                           ;main.c: 28:     (INTCONbits.GIE = 1);
  8097  12CD  178B               	bsf	11,7	;volatile
  8098                           
  8099                           ;main.c: 31:     (INTCONbits.PEIE = 1);
  8100  12CE  170B               	bsf	11,6	;volatile
  8101                           
  8102                           ;main.c: 38:      _delay((unsigned long)((500)*(32000000/4000.0)));
  8103  12CF  3015               	movlw	21
  8104  12D0  0143               	movlb	3	; select bank3
  8105  12D1  00E5               	movwf	(??_main^(0+384)+1)
  8106  12D2  304B               	movlw	75
  8107  12D3  00E4               	movwf	??_main^(0+384)
  8108  12D4  30BE               	movlw	190
  8109  12D5                     u6547:	
  8110  12D5  0B89               	decfsz	9,f
  8111  12D6  2AD5               	goto	u6547
  8112  12D7  0BE4               	decfsz	??_main^(0+384),f
  8113  12D8  2AD5               	goto	u6547
  8114  12D9  0BE5               	decfsz	(??_main^(0+384)+1),f
  8115  12DA  2AD5               	goto	u6547
  8116  12DB  0000               	nop
  8117                           
  8118                           ;main.c: 39:     TM1650_init();
  8119  12DC  319E  2699  3192   	fcall	_TM1650_init
  8120                           
  8121                           ;main.c: 40:     BUTTONS_init();
  8122  12DF  3194  2473  3192   	fcall	_BUTTONS_init
  8123                           
  8124                           ;main.c: 41:     initLED();
  8125  12E2  3191  2189  3192   	fcall	_initLED
  8126                           
  8127                           ;main.c: 42:     BEAT_init();
  8128  12E5  319F  27B9  3192   	fcall	_BEAT_init
  8129  12E8                     l6180:	
  8130                           
  8131                           ;main.c: 46:         MENU_task();
  8132  12E8  3195  2510  3192   	fcall	_MENU_task
  8133                           
  8134                           ;main.c: 47:         DMX_task();
  8135  12EB  3193  2328  3192   	fcall	_DMX_task
  8136                           
  8137                           ;main.c: 48:         BUTTONS_task();
  8138  12EE  3189  2132  3192   	fcall	_BUTTONS_task
  8139  12F1  2AE8               	goto	l6180
  8140  12F2                     __end_of_main:	
  8141                           
  8142                           	psect	text1
  8143  1189                     __ptext1:	
  8144 ;; *************** function _initLED *****************
  8145 ;; Defined at:
  8146 ;;		line 14 in file "led.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;		None
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;		None
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  1    wreg      void 
  8153 ;; Registers used:
  8154 ;;		wreg, status,2, status,0
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8164 ;;Total ram usage:        0 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; Hardware stack levels required when called:    4
  8167 ;; This function calls:
  8168 ;;		Nothing
  8169 ;; This function is called by:
  8170 ;;		_main
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           
  8175                           ;psect for function _initLED
  8176  1189                     _initLED:	
  8177                           
  8178                           ;led.c: 17:     TRISC7 = 0;
  8179                           
  8180                           ;incstack = 0
  8181                           ; Regs used in _initLED: [wreg+status,2+status,0]
  8182  1189  0140               	movlb	0	; select bank0
  8183  118A  1394               	bcf	20,7	;volatile
  8184                           
  8185                           ;led.c: 18:     TRISC6 = 0;
  8186  118B  1314               	bcf	20,6	;volatile
  8187                           
  8188                           ;led.c: 19:     TRISC4 = 0;
  8189  118C  1214               	bcf	20,4	;volatile
  8190                           
  8191                           ;led.c: 20:     TRISC3 = 0;
  8192  118D  1194               	bcf	20,3	;volatile
  8193                           
  8194                           ;led.c: 22:     T2CLKCON = 0x01;
  8195  118E  3001               	movlw	1
  8196  118F  0145               	movlb	5	; select bank5
  8197  1190  0090               	movwf	16	;volatile
  8198                           
  8199                           ;led.c: 23:     T2CONbits.ON = 1;
  8200  1191  178E               	bsf	14,7	;volatile
  8201                           
  8202                           ;led.c: 25:     CCP1CONbits.CCP1EN = 1;
  8203  1192  0146               	movlb	6	; select bank6
  8204  1193  178E               	bsf	14,7	;volatile
  8205                           
  8206                           ;led.c: 26:     CCP1CONbits.MODE = 0b1100;
  8207  1194  080E               	movf	14,w	;volatile
  8208  1195  39F0               	andlw	-16
  8209  1196  380C               	iorlw	12
  8210  1197  008E               	movwf	14	;volatile
  8211                           
  8212                           ;led.c: 27:     CCP2CONbits.CCP2EN = 1;
  8213  1198  1792               	bsf	18,7	;volatile
  8214                           
  8215                           ;led.c: 28:     CCP2CONbits.MODE = 0b1100;
  8216  1199  0812               	movf	18,w	;volatile
  8217  119A  39F0               	andlw	-16
  8218  119B  380C               	iorlw	12
  8219  119C  0092               	movwf	18	;volatile
  8220                           
  8221                           ;led.c: 29:     CCP3CONbits.CCP3EN = 1;
  8222  119D  1796               	bsf	22,7	;volatile
  8223                           
  8224                           ;led.c: 30:     CCP3CONbits.MODE = 0b1100;
  8225  119E  0816               	movf	22,w	;volatile
  8226  119F  39F0               	andlw	-16
  8227  11A0  380C               	iorlw	12
  8228  11A1  0096               	movwf	22	;volatile
  8229                           
  8230                           ;led.c: 31:     CCP4CONbits.CCP4EN = 1;
  8231  11A2  179A               	bsf	26,7	;volatile
  8232                           
  8233                           ;led.c: 32:     CCP4CONbits.MODE = 0b1100;
  8234  11A3  081A               	movf	26,w	;volatile
  8235  11A4  39F0               	andlw	-16
  8236  11A5  380C               	iorlw	12
  8237  11A6  009A               	movwf	26	;volatile
  8238                           
  8239                           ;led.c: 35:     RC7PPS = 0x09;
  8240  11A7  3009               	movlw	9
  8241  11A8  017E               	movlb	62	; select bank62
  8242  11A9  00A7               	movwf	39	;volatile
  8243                           
  8244                           ;led.c: 36:     RC6PPS = 0x0A;
  8245  11AA  300A               	movlw	10
  8246  11AB  00A6               	movwf	38	;volatile
  8247                           
  8248                           ;led.c: 37:     RC4PPS = 0x0B;
  8249  11AC  300B               	movlw	11
  8250  11AD  00A4               	movwf	36	;volatile
  8251                           
  8252                           ;led.c: 38:     RC3PPS = 0x0C;
  8253  11AE  300C               	movlw	12
  8254  11AF  00A3               	movwf	35	;volatile
  8255  11B0  0008               	return
  8256  11B1                     __end_of_initLED:	
  8257                           
  8258                           	psect	text2
  8259  1E99                     __ptext2:	
  8260 ;; *************** function _TM1650_init *****************
  8261 ;; Defined at:
  8262 ;;		line 28 in file "tm1650.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;		None
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  1    wreg      void 
  8269 ;; Registers used:
  8270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8280 ;;Total ram usage:        0 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:    9
  8283 ;; This function calls:
  8284 ;;		_TM1650_enable
  8285 ;; This function is called by:
  8286 ;;		_main
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           
  8291                           ;psect for function _TM1650_init
  8292  1E99                     _TM1650_init:	
  8293                           
  8294                           ;tm1650.c: 29:     TM1650_enable(1);
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8298  1E99  3001               	movlw	1
  8299  1E9A  319F  278F         	fcall	_TM1650_enable
  8300  1E9C  0008               	return
  8301  1E9D                     __end_of_TM1650_init:	
  8302                           
  8303                           	psect	text3
  8304  1FA4                     __ptext3:	
  8305 ;; *************** function _SYSTEM_Initialize *****************
  8306 ;; Defined at:
  8307 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;		None
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;		None
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  1    wreg      void 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, status,0, pclath, cstack
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8325 ;;Total ram usage:        0 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    6
  8328 ;; This function calls:
  8329 ;;		_ADCC_Initialize
  8330 ;;		_EUSART1_Initialize
  8331 ;;		_I2C1_Initialize
  8332 ;;		_OSCILLATOR_Initialize
  8333 ;;		_PIN_MANAGER_Initialize
  8334 ;;		_PMD_Initialize
  8335 ;;		_TMR0_Initialize
  8336 ;; This function is called by:
  8337 ;;		_main
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           
  8342                           ;psect for function _SYSTEM_Initialize
  8343  1FA4                     _SYSTEM_Initialize:	
  8344                           
  8345                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8346                           
  8347                           ;incstack = 0
  8348                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8349  1FA4  319F  271C  319F   	fcall	_PMD_Initialize
  8350                           
  8351                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8352  1FA7  3192  225B  319F   	fcall	_PIN_MANAGER_Initialize
  8353                           
  8354                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8355  1FAA  319F  2713  319F   	fcall	_OSCILLATOR_Initialize
  8356                           
  8357                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  8358  1FAD  3190  2063  319F   	fcall	_I2C1_Initialize
  8359                           
  8360                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8361  1FB0  3191  2163  319F   	fcall	_ADCC_Initialize
  8362                           
  8363                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  8364  1FB3  319F  2767  319F   	fcall	_TMR0_Initialize
  8365                           
  8366                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  8367  1FB6  3193  239B         	fcall	_EUSART1_Initialize
  8368  1FB8  0008               	return
  8369  1FB9                     __end_of_SYSTEM_Initialize:	
  8370                           
  8371                           	psect	text4
  8372  1F67                     __ptext4:	
  8373 ;; *************** function _TMR0_Initialize *****************
  8374 ;; Defined at:
  8375 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;		None
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;		None
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1    wreg      void 
  8382 ;; Registers used:
  8383 ;;		wreg, status,2, status,0, pclath, cstack
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8393 ;;Total ram usage:        0 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:    5
  8396 ;; This function calls:
  8397 ;;		_TMR0_SetInterruptHandler
  8398 ;; This function is called by:
  8399 ;;		_SYSTEM_Initialize
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           
  8404                           ;psect for function _TMR0_Initialize
  8405  1F67                     _TMR0_Initialize:	
  8406                           
  8407                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  8408                           
  8409                           ;incstack = 0
  8410                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8411  1F67  3045               	movlw	69
  8412  1F68  014B               	movlb	11	; select bank11
  8413  1F69  009F               	movwf	31	;volatile
  8414                           
  8415                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8416  1F6A  30F9               	movlw	249
  8417  1F6B  009D               	movwf	29	;volatile
  8418                           
  8419                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8420  1F6C  019C               	clrf	28	;volatile
  8421                           
  8422                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8423  1F6D  014E               	movlb	14	; select bank14
  8424  1F6E  128C               	bcf	12,5	;volatile
  8425                           
  8426                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8427  1F6F  1696               	bsf	22,5	;volatile
  8428                           
  8429                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8430  1F70  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  8431  1F71  0140               	movlb	0	; select bank0
  8432  1F72  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8433  1F73  3007               	movlw	high _TMR0_DefaultInterruptHandler
  8434  1F74  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8435  1F75  319E  26D4         	fcall	_TMR0_SetInterruptHandler
  8436                           
  8437                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8438  1F77  3080               	movlw	128
  8439  1F78  014B               	movlb	11	; select bank11
  8440  1F79  009E               	movwf	30	;volatile
  8441  1F7A  0008               	return
  8442  1F7B                     __end_of_TMR0_Initialize:	
  8443                           
  8444                           	psect	text5
  8445  1F1C                     __ptext5:	
  8446 ;; *************** function _PMD_Initialize *****************
  8447 ;; Defined at:
  8448 ;;		line 75 in file "mcc_generated_files/mcc.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		status,2
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:    4
  8469 ;; This function calls:
  8470 ;;		Nothing
  8471 ;; This function is called by:
  8472 ;;		_SYSTEM_Initialize
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           
  8477                           ;psect for function _PMD_Initialize
  8478  1F1C                     _PMD_Initialize:	
  8479                           
  8480                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  8481                           
  8482                           ;incstack = 0
  8483                           ; Regs used in _PMD_Initialize: [status,2]
  8484  1F1C  014F               	movlb	15	; select bank15
  8485  1F1D  0196               	clrf	22	;volatile
  8486                           
  8487                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  8488  1F1E  0197               	clrf	23	;volatile
  8489                           
  8490                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  8491  1F1F  0198               	clrf	24	;volatile
  8492                           
  8493                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  8494  1F20  0199               	clrf	25	;volatile
  8495                           
  8496                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  8497  1F21  019A               	clrf	26	;volatile
  8498                           
  8499                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  8500  1F22  019B               	clrf	27	;volatile
  8501                           
  8502                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  8503  1F23  019C               	clrf	28	;volatile
  8504                           
  8505                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  8506  1F24  019D               	clrf	29	;volatile
  8507  1F25  0008               	return
  8508  1F26                     __end_of_PMD_Initialize:	
  8509                           
  8510                           	psect	text6
  8511  125B                     __ptext6:	
  8512 ;; *************** function _PIN_MANAGER_Initialize *****************
  8513 ;; Defined at:
  8514 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;		None
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;		None
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  1    wreg      void 
  8521 ;; Registers used:
  8522 ;;		wreg, status,2
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8532 ;;Total ram usage:        0 bytes
  8533 ;; Hardware stack levels used:    1
  8534 ;; Hardware stack levels required when called:    4
  8535 ;; This function calls:
  8536 ;;		Nothing
  8537 ;; This function is called by:
  8538 ;;		_SYSTEM_Initialize
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           
  8543                           ;psect for function _PIN_MANAGER_Initialize
  8544  125B                     _PIN_MANAGER_Initialize:	
  8545                           
  8546                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8547                           
  8548                           ;incstack = 0
  8549                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8550  125B  0140               	movlb	0	; select bank0
  8551  125C  0198               	clrf	24	;volatile
  8552                           
  8553                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8554  125D  0199               	clrf	25	;volatile
  8555                           
  8556                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8557  125E  019A               	clrf	26	;volatile
  8558                           
  8559                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8560  125F  303F               	movlw	63
  8561  1260  0092               	movwf	18	;volatile
  8562                           
  8563                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  8564  1261  30F0               	movlw	240
  8565  1262  0093               	movwf	19	;volatile
  8566                           
  8567                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8568  1263  30FF               	movlw	255
  8569  1264  0094               	movwf	20	;volatile
  8570                           
  8571                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8572  1265  30F8               	movlw	248
  8573  1266  017E               	movlb	62	; select bank62
  8574  1267  00CE               	movwf	78	;volatile
  8575                           
  8576                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8577  1268  30E0               	movlw	224
  8578  1269  00C3               	movwf	67	;volatile
  8579                           
  8580                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8581  126A  3003               	movlw	3
  8582  126B  00B8               	movwf	56	;volatile
  8583                           
  8584                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8585  126C  01C4               	clrf	68	;volatile
  8586                           
  8587                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8588  126D  3004               	movlw	4
  8589  126E  00B9               	movwf	57	;volatile
  8590                           
  8591                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8592  126F  3007               	movlw	7
  8593  1270  00CF               	movwf	79	;volatile
  8594                           
  8595                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8596  1271  01BA               	clrf	58	;volatile
  8597                           
  8598                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8599  1272  01C5               	clrf	69	;volatile
  8600                           
  8601                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8602  1273  01D0               	clrf	80	;volatile
  8603                           
  8604                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8605  1274  3037               	movlw	55
  8606  1275  00BB               	movwf	59	;volatile
  8607                           
  8608                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8609  1276  30F0               	movlw	240
  8610  1277  00C6               	movwf	70	;volatile
  8611                           
  8612                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8613  1278  30FF               	movlw	255
  8614  1279  00D1               	movwf	81	;volatile
  8615                           
  8616                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8617  127A  3005               	movlw	5
  8618  127B  017D               	movlb	61	; select bank61
  8619  127C  00C5               	movwf	69	;volatile
  8620                           
  8621                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8622  127D  3014               	movlw	20
  8623  127E  017E               	movlb	62	; select bank62
  8624  127F  0094               	movwf	20	;volatile
  8625                           
  8626                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  8627  1280  3013               	movlw	19
  8628  1281  0095               	movwf	21	;volatile
  8629                           
  8630                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  8631  1282  3004               	movlw	4
  8632  1283  017D               	movlb	61	; select bank61
  8633  1284  00C6               	movwf	70	;volatile
  8634                           
  8635                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  8636  1285  300C               	movlw	12
  8637  1286  00CB               	movwf	75	;volatile
  8638  1287  0008               	return
  8639  1288                     __end_of_PIN_MANAGER_Initialize:	
  8640                           
  8641                           	psect	text7
  8642  1F13                     __ptext7:	
  8643 ;; *************** function _OSCILLATOR_Initialize *****************
  8644 ;; Defined at:
  8645 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;		None
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;		None
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg, status,2
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8663 ;;Total ram usage:        0 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    4
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_SYSTEM_Initialize
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           
  8674                           ;psect for function _OSCILLATOR_Initialize
  8675  1F13                     _OSCILLATOR_Initialize:	
  8676                           
  8677                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8678                           
  8679                           ;incstack = 0
  8680                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8681  1F13  3060               	movlw	96
  8682  1F14  0151               	movlb	17	; select bank17
  8683  1F15  008D               	movwf	13	;volatile
  8684                           
  8685                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8686  1F16  018F               	clrf	15	;volatile
  8687                           
  8688                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8689  1F17  0191               	clrf	17	;volatile
  8690                           
  8691                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8692  1F18  3006               	movlw	6
  8693  1F19  0093               	movwf	19	;volatile
  8694                           
  8695                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  8696  1F1A  0192               	clrf	18	;volatile
  8697  1F1B  0008               	return
  8698  1F1C                     __end_of_OSCILLATOR_Initialize:	
  8699                           
  8700                           	psect	text8
  8701  1063                     __ptext8:	
  8702 ;; *************** function _I2C1_Initialize *****************
  8703 ;; Defined at:
  8704 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;		None
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;		None
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  1    wreg      void 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8720 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8721 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8722 ;;Total ram usage:        1 bytes
  8723 ;; Hardware stack levels used:    1
  8724 ;; Hardware stack levels required when called:    4
  8725 ;; This function calls:
  8726 ;;		Nothing
  8727 ;; This function is called by:
  8728 ;;		_SYSTEM_Initialize
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           
  8733                           ;psect for function _I2C1_Initialize
  8734  1063                     _I2C1_Initialize:	
  8735                           
  8736                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8737                           
  8738                           ;incstack = 0
  8739                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8740  1063  305E               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8741  1064  0140               	movlb	0	; select bank0
  8742  1065  00A0               	movwf	??_I2C1_Initialize
  8743  1066  0820               	movf	??_I2C1_Initialize,w
  8744  1067  0142               	movlb	2	; select bank2
  8745  1068  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
  8746                           
  8747                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8748  1069  305E               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8749  106A  0140               	movlb	0	; select bank0
  8750  106B  00A0               	movwf	??_I2C1_Initialize
  8751  106C  0820               	movf	??_I2C1_Initialize,w
  8752  106D  0142               	movlb	2	; select bank2
  8753  106E  00A0               	movwf	_i2c1_object^(0+256)
  8754                           
  8755                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8756  106F  14A2               	bsf	(_i2c1_object^(0+256)+2),1
  8757                           
  8758                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8759  1070  1022               	bcf	(_i2c1_object^(0+256)+2),0
  8760                           
  8761                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8762  1071  01A4               	clrf	(_i2c1_object^(0+256)+4)
  8763                           
  8764                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8765  1072  0143               	movlb	3	; select bank3
  8766  1073  018F               	clrf	15	;volatile
  8767                           
  8768                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8769  1074  3028               	movlw	40
  8770  1075  0090               	movwf	16	;volatile
  8771                           
  8772                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8773  1076  0192               	clrf	18	;volatile
  8774                           
  8775                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  8776  1077  3050               	movlw	80
  8777  1078  008D               	movwf	13	;volatile
  8778                           
  8779                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8780  1079  014E               	movlb	14	; select bank14
  8781  107A  100F               	bcf	15,0	;volatile
  8782                           
  8783                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8784  107B  108F               	bcf	15,1	;volatile
  8785                           
  8786                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8787  107C  1419               	bsf	25,0	;volatile
  8788                           
  8789                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8790  107D  1499               	bsf	25,1	;volatile
  8791  107E  0008               	return
  8792  107F                     __end_of_I2C1_Initialize:	
  8793                           
  8794                           	psect	text9
  8795  139B                     __ptext9:	
  8796 ;; *************** function _EUSART1_Initialize *****************
  8797 ;; Defined at:
  8798 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;		None
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  1    wreg      void 
  8805 ;; Registers used:
  8806 ;;		wreg, status,2, status,0, pclath, cstack
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8814 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8815 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8816 ;;Total ram usage:        1 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    5
  8819 ;; This function calls:
  8820 ;;		_EUSART1_SetErrorHandler
  8821 ;;		_EUSART1_SetFramingErrorHandler
  8822 ;;		_EUSART1_SetOverrunErrorHandler
  8823 ;;		_EUSART1_SetRxInterruptHandler
  8824 ;;		_EUSART1_SetTxInterruptHandler
  8825 ;; This function is called by:
  8826 ;;		_SYSTEM_Initialize
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           
  8831                           ;psect for function _EUSART1_Initialize
  8832  139B                     _EUSART1_Initialize:	
  8833                           
  8834                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8835                           
  8836                           ;incstack = 0
  8837                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8838  139B  014E               	movlb	14	; select bank14
  8839  139C  1299               	bcf	25,5	;volatile
  8840                           
  8841                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8842  139D  30F2               	movlw	low _EUSART1_Receive_ISR
  8843  139E  0140               	movlb	0	; select bank0
  8844  139F  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8845  13A0  3012               	movlw	high _EUSART1_Receive_ISR
  8846  13A1  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8847  13A2  319F  2701  3193   	fcall	_EUSART1_SetRxInterruptHandler
  8848                           
  8849                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8850  13A5  014E               	movlb	14	; select bank14
  8851  13A6  1219               	bcf	25,4	;volatile
  8852                           
  8853                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8854  13A7  302B               	movlw	low _EUSART1_Transmit_ISR
  8855  13A8  0140               	movlb	0	; select bank0
  8856  13A9  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8857  13AA  3010               	movlw	high _EUSART1_Transmit_ISR
  8858  13AB  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8859  13AC  319F  270A  3193   	fcall	_EUSART1_SetTxInterruptHandler
  8860                           
  8861                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8862  13AF  3008               	movlw	8
  8863  13B0  0142               	movlb	2	; select bank2
  8864  13B1  009F               	movwf	31	;volatile
  8865                           
  8866                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8867  13B2  3090               	movlw	144
  8868  13B3  009D               	movwf	29	;volatile
  8869                           
  8870                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8871  13B4  3004               	movlw	4
  8872  13B5  009E               	movwf	30	;volatile
  8873                           
  8874                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8875  13B6  301F               	movlw	31
  8876  13B7  009B               	movwf	27	;volatile
  8877                           
  8878                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8879  13B8  019C               	clrf	28	;volatile
  8880                           
  8881                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8882  13B9  3084               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8883  13BA  0140               	movlb	0	; select bank0
  8884  13BB  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8885  13BC  301E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8886  13BD  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8887  13BE  319E  26EF  3193   	fcall	_EUSART1_SetFramingErrorHandler
  8888                           
  8889                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8890  13C1  3095               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8891  13C2  0140               	movlb	0	; select bank0
  8892  13C3  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8893  13C4  301E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8894  13C5  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8895  13C6  319E  26F8  3193   	fcall	_EUSART1_SetOverrunErrorHandler
  8896                           
  8897                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8898  13C9  3085               	movlw	low _EUSART1_DefaultErrorHandler
  8899  13CA  0140               	movlb	0	; select bank0
  8900  13CB  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8901  13CC  301E               	movlw	high _EUSART1_DefaultErrorHandler
  8902  13CD  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8903  13CE  319E  26E6         	fcall	_EUSART1_SetErrorHandler
  8904                           
  8905                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8906  13D0  0142               	movlb	2	; select bank2
  8907  13D1  01D9               	clrf	_eusart1RxLastError^(0+256)	;volatile
  8908                           
  8909                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8910  13D2  01F3               	clrf	_eusart1TxHead	;volatile
  8911                           
  8912                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8913  13D3  01F2               	clrf	_eusart1TxTail	;volatile
  8914                           
  8915                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8916  13D4  3008               	movlw	8
  8917  13D5  0140               	movlb	0	; select bank0
  8918  13D6  00A2               	movwf	??_EUSART1_Initialize
  8919  13D7  0822               	movf	??_EUSART1_Initialize,w
  8920  13D8  0142               	movlb	2	; select bank2
  8921  13D9  00EF               	movwf	_eusart1TxBufferRemaining^(0+256)	;volatile
  8922                           
  8923                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8924  13DA  01F1               	clrf	_eusart1RxHead	;volatile
  8925                           
  8926                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8927  13DB  01F0               	clrf	_eusart1RxTail	;volatile
  8928                           
  8929                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8930  13DC  0141               	movlb	1	; select bank1
  8931  13DD  01ED               	clrf	_eusart1RxCount^(0+128)	;volatile
  8932                           
  8933                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8934  13DE  014E               	movlb	14	; select bank14
  8935  13DF  1699               	bsf	25,5	;volatile
  8936  13E0  0008               	return
  8937  13E1                     __end_of_EUSART1_Initialize:	
  8938                           
  8939                           	psect	text10
  8940  1F0A                     __ptext10:	
  8941 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8942 ;; Defined at:
  8943 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8946 ;;		 -> EUSART1_Transmit_ISR(1), 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;		None
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      void 
  8951 ;; Registers used:
  8952 ;;		wreg
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8958 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8961 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8962 ;;Total ram usage:        2 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    4
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_EUSART1_Initialize
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           
  8973                           ;psect for function _EUSART1_SetTxInterruptHandler
  8974  1F0A                     _EUSART1_SetTxInterruptHandler:	
  8975                           
  8976                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8977                           
  8978                           ;incstack = 0
  8979                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  8980  1F0A  0140               	movlb	0	; select bank0
  8981  1F0B  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  8982  1F0C  0143               	movlb	3	; select bank3
  8983  1F0D  00E3               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384)
  8984  1F0E  0140               	movlb	0	; select bank0
  8985  1F0F  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  8986  1F10  0143               	movlb	3	; select bank3
  8987  1F11  00E2               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+384)
  8988  1F12  0008               	return
  8989  1F13                     __end_of_EUSART1_SetTxInterruptHandler:	
  8990                           
  8991                           	psect	text11
  8992  1F01                     __ptext11:	
  8993 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  8994 ;; Defined at:
  8995 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8998 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;		None
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  1    wreg      void 
  9003 ;; Registers used:
  9004 ;;		wreg
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9013 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9014 ;;Total ram usage:        2 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:    4
  9017 ;; This function calls:
  9018 ;;		Nothing
  9019 ;; This function is called by:
  9020 ;;		_EUSART1_Initialize
  9021 ;;		_main
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           
  9026                           ;psect for function _EUSART1_SetRxInterruptHandler
  9027  1F01                     _EUSART1_SetRxInterruptHandler:	
  9028                           
  9029                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9030                           
  9031                           ;incstack = 0
  9032                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9033  1F01  0140               	movlb	0	; select bank0
  9034  1F02  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9035  1F03  0143               	movlb	3	; select bank3
  9036  1F04  00E1               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
  9037  1F05  0140               	movlb	0	; select bank0
  9038  1F06  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9039  1F07  0143               	movlb	3	; select bank3
  9040  1F08  00E0               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
  9041  1F09  0008               	return
  9042  1F0A                     __end_of_EUSART1_SetRxInterruptHandler:	
  9043                           
  9044                           	psect	text12
  9045  1EF8                     __ptext12:	
  9046 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9047 ;; Defined at:
  9048 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9051 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		wreg
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9067 ;;Total ram usage:        2 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:    4
  9070 ;; This function calls:
  9071 ;;		Nothing
  9072 ;; This function is called by:
  9073 ;;		_EUSART1_Initialize
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           
  9078                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9079  1EF8                     _EUSART1_SetOverrunErrorHandler:	
  9080                           
  9081                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  9082                           
  9083                           ;incstack = 0
  9084                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9085  1EF8  0140               	movlb	0	; select bank0
  9086  1EF9  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9087  1EFA  0143               	movlb	3	; select bank3
  9088  1EFB  00DD               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
  9089  1EFC  0140               	movlb	0	; select bank0
  9090  1EFD  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9091  1EFE  0143               	movlb	3	; select bank3
  9092  1EFF  00DC               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
  9093  1F00  0008               	return
  9094  1F01                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9095                           
  9096                           	psect	text13
  9097  1EEF                     __ptext13:	
  9098 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9099 ;; Defined at:
  9100 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9103 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;		None
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9119 ;;Total ram usage:        2 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    4
  9122 ;; This function calls:
  9123 ;;		Nothing
  9124 ;; This function is called by:
  9125 ;;		_EUSART1_Initialize
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           
  9130                           ;psect for function _EUSART1_SetFramingErrorHandler
  9131  1EEF                     _EUSART1_SetFramingErrorHandler:	
  9132                           
  9133                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  9134                           
  9135                           ;incstack = 0
  9136                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9137  1EEF  0140               	movlb	0	; select bank0
  9138  1EF0  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9139  1EF1  0143               	movlb	3	; select bank3
  9140  1EF2  00DF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
  9141  1EF3  0140               	movlb	0	; select bank0
  9142  1EF4  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9143  1EF5  0143               	movlb	3	; select bank3
  9144  1EF6  00DE               	movwf	_EUSART1_FramingErrorHandler^(0+384)
  9145  1EF7  0008               	return
  9146  1EF8                     __end_of_EUSART1_SetFramingErrorHandler:	
  9147                           
  9148                           	psect	text14
  9149  1EE6                     __ptext14:	
  9150 ;; *************** function _EUSART1_SetErrorHandler *****************
  9151 ;; Defined at:
  9152 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9155 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;		None
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  1    wreg      void 
  9160 ;; Registers used:
  9161 ;;		wreg
  9162 ;; Tracked objects:
  9163 ;;		On entry : 0/0
  9164 ;;		On exit  : 0/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9167 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9170 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9171 ;;Total ram usage:        2 bytes
  9172 ;; Hardware stack levels used:    1
  9173 ;; Hardware stack levels required when called:    4
  9174 ;; This function calls:
  9175 ;;		Nothing
  9176 ;; This function is called by:
  9177 ;;		_EUSART1_Initialize
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           
  9182                           ;psect for function _EUSART1_SetErrorHandler
  9183  1EE6                     _EUSART1_SetErrorHandler:	
  9184                           
  9185                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  9186                           
  9187                           ;incstack = 0
  9188                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9189  1EE6  0140               	movlb	0	; select bank0
  9190  1EE7  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9191  1EE8  0143               	movlb	3	; select bank3
  9192  1EE9  00DB               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
  9193  1EEA  0140               	movlb	0	; select bank0
  9194  1EEB  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9195  1EEC  0143               	movlb	3	; select bank3
  9196  1EED  00DA               	movwf	_EUSART1_ErrorHandler^(0+384)
  9197  1EEE  0008               	return
  9198  1EEF                     __end_of_EUSART1_SetErrorHandler:	
  9199                           
  9200                           	psect	text15
  9201  1163                     __ptext15:	
  9202 ;; *************** function _ADCC_Initialize *****************
  9203 ;; Defined at:
  9204 ;;		line 64 in file "mcc_generated_files/adcc.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;		None
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;		None
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, status,2, status,0, pclath, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9222 ;;Total ram usage:        0 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; Hardware stack levels required when called:    5
  9225 ;; This function calls:
  9226 ;;		_ADCC_SetADTIInterruptHandler
  9227 ;; This function is called by:
  9228 ;;		_SYSTEM_Initialize
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           
  9233                           ;psect for function _ADCC_Initialize
  9234  1163                     _ADCC_Initialize:	
  9235                           
  9236                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  9237                           
  9238                           ;incstack = 0
  9239                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9240  1163  0141               	movlb	1	; select bank1
  9241  1164  018C               	clrf	12	;volatile
  9242                           
  9243                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  9244  1165  018D               	clrf	13	;volatile
  9245                           
  9246                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  9247  1166  018E               	clrf	14	;volatile
  9248                           
  9249                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  9250  1167  018F               	clrf	15	;volatile
  9251                           
  9252                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  9253  1168  0192               	clrf	18	;volatile
  9254                           
  9255                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  9256  1169  0193               	clrf	19	;volatile
  9257                           
  9258                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  9259  116A  0198               	clrf	24	;volatile
  9260                           
  9261                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  9262  116B  019A               	clrf	26	;volatile
  9263                           
  9264                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  9265  116C  019F               	clrf	31	;volatile
  9266                           
  9267                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  9268  116D  0142               	movlb	2	; select bank2
  9269  116E  018C               	clrf	12	;volatile
  9270                           
  9271                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  9272  116F  018D               	clrf	13	;volatile
  9273                           
  9274                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  9275  1170  018E               	clrf	14	;volatile
  9276                           
  9277                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  9278  1171  018F               	clrf	15	;volatile
  9279                           
  9280                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  9281  1172  0190               	clrf	16	;volatile
  9282                           
  9283                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  9284  1173  0192               	clrf	18	;volatile
  9285                           
  9286                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  9287  1174  3054               	movlw	84
  9288  1175  0093               	movwf	19	;volatile
  9289                           
  9290                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  9291  1176  3056               	movlw	86
  9292  1177  0094               	movwf	20	;volatile
  9293                           
  9294                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  9295  1178  0195               	clrf	21	;volatile
  9296                           
  9297                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  9298  1179  0196               	clrf	22	;volatile
  9299                           
  9300                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  9301  117A  0197               	clrf	23	;volatile
  9302                           
  9303                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  9304  117B  0198               	clrf	24	;volatile
  9305                           
  9306                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  9307  117C  30D4               	movlw	212
  9308  117D  0091               	movwf	17	;volatile
  9309                           
  9310                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  9311  117E  014E               	movlb	14	; select bank14
  9312  117F  108D               	bcf	13,1	;volatile
  9313                           
  9314                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  9315  1180  1497               	bsf	23,1	;volatile
  9316                           
  9317                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  9318  1181  3083               	movlw	low _ADCC_DefaultInterruptHandler
  9319  1182  0140               	movlb	0	; select bank0
  9320  1183  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  9321  1184  301E               	movlw	high _ADCC_DefaultInterruptHandler
  9322  1185  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  9323  1186  319E  26B0         	fcall	_ADCC_SetADTIInterruptHandler
  9324  1188  0008               	return
  9325  1189                     __end_of_ADCC_Initialize:	
  9326                           
  9327                           	psect	text16
  9328  1510                     __ptext16:	
  9329 ;; *************** function _MENU_task *****************
  9330 ;; Defined at:
  9331 ;;		line 74 in file "menu.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;		None
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;		None
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9347 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9348 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9349 ;;Total ram usage:        1 bytes
  9350 ;; Hardware stack levels used:    1
  9351 ;; Hardware stack levels required when called:   13
  9352 ;; This function calls:
  9353 ;;		_BEAT_task
  9354 ;;		_LED_Beat
  9355 ;;		_LED_DMX
  9356 ;;		_TM1650_enable
  9357 ;;		_TM1650_setDigit
  9358 ;;		_cycleColors
  9359 ;;		_isDMXOn
  9360 ;;		_menuButtons
  9361 ;;		_numControl_Set
  9362 ;;		_pulseColors
  9363 ;; This function is called by:
  9364 ;;		_main
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           
  9369                           ;psect for function _MENU_task
  9370  1510                     _MENU_task:	
  9371                           
  9372                           ;menu.c: 75:     if(isDMXOn()) {
  9373                           
  9374                           ;incstack = 0
  9375                           ; Regs used in _MENU_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9376  1510  319E  268E  3195   	fcall	_isDMXOn
  9377  1513  3A00               	xorlw	0
  9378  1514  1903               	skipnz
  9379  1515  2D21               	goto	l6056
  9380                           
  9381                           ;menu.c: 76:         LED_DMX();
  9382  1516  3194  242A  3195   	fcall	_LED_DMX
  9383                           
  9384                           ;menu.c: 77:         numControl_Set(&address);
  9385  1519  30EE               	movlw	low _address
  9386  151A  0140               	movlb	0	; select bank0
  9387  151B  00C6               	movwf	numControl_Set@val
  9388  151C  3000               	movlw	high _address
  9389  151D  00C7               	movwf	numControl_Set@val+1
  9390  151E  3196  26EC         	fcall	_numControl_Set
  9391                           
  9392                           ;menu.c: 78:     } else {
  9393  1520  0008               	return
  9394  1521                     l6056:	
  9395                           
  9396                           ;menu.c: 79:         menuButtons();
  9397  1521  319F  27E8  3195   	fcall	_menuButtons
  9398                           
  9399                           ;menu.c: 80:         if(currentState == 0) {
  9400  1524  0142               	movlb	2	; select bank2
  9401  1525  0861               	movf	_currentState^(0+256),w
  9402  1526  0462               	iorwf	(_currentState+1)^(0+256),w
  9403  1527  1D03               	btfss	3,2
  9404  1528  2D33               	goto	l6066
  9405                           
  9406                           ;menu.c: 81:             TM1650_enable(0);
  9407  1529  3000               	movlw	0
  9408  152A  319F  278F  3195   	fcall	_TM1650_enable
  9409                           
  9410                           ;menu.c: 82:             LED_Beat();
  9411  152D  3190  2000  3195   	fcall	_LED_Beat
  9412                           
  9413                           ;menu.c: 83:             BEAT_task();
  9414  1530  318A  2204         	fcall	_BEAT_task
  9415                           
  9416                           ;menu.c: 84:         } else if(currentState == 1) {
  9417  1532  0008               	return
  9418  1533                     l6066:	
  9419  1533  0361               	decf	_currentState^(0+256),w
  9420  1534  0462               	iorwf	(_currentState+1)^(0+256),w
  9421  1535  1D03               	btfss	3,2
  9422  1536  2D72               	goto	l6080
  9423                           
  9424                           ;menu.c: 85:             TM1650_enable(1);
  9425  1537  3001               	movlw	1
  9426  1538  319F  278F  3195   	fcall	_TM1650_enable
  9427                           
  9428                           ;menu.c: 86:             TM1650_setDigit(0, 'P', 0);
  9429  153B  3050               	movlw	80
  9430  153C  0141               	movlb	1	; select bank1
  9431  153D  00E9               	movwf	??_MENU_task^(0+128)
  9432  153E  0869               	movf	??_MENU_task^(0+128),w
  9433  153F  0140               	movlb	0	; select bank0
  9434  1540  00B4               	movwf	TM1650_setDigit@data
  9435  1541  3000               	movlw	0
  9436  1542  00B5               	movwf	TM1650_setDigit@dp
  9437  1543  00B6               	movwf	TM1650_setDigit@dp+1
  9438  1544  3000               	movlw	0
  9439  1545  3190  2047  3195   	fcall	_TM1650_setDigit
  9440                           
  9441                           ;menu.c: 87:             TM1650_setDigit(1, 'L', 0);
  9442  1548  304C               	movlw	76
  9443  1549  0141               	movlb	1	; select bank1
  9444  154A  00E9               	movwf	??_MENU_task^(0+128)
  9445  154B  0869               	movf	??_MENU_task^(0+128),w
  9446  154C  0140               	movlb	0	; select bank0
  9447  154D  00B4               	movwf	TM1650_setDigit@data
  9448  154E  3000               	movlw	0
  9449  154F  00B5               	movwf	TM1650_setDigit@dp
  9450  1550  00B6               	movwf	TM1650_setDigit@dp+1
  9451  1551  3001               	movlw	1
  9452  1552  3190  2047  3195   	fcall	_TM1650_setDigit
  9453                           
  9454                           ;menu.c: 88:             TM1650_setDigit(2, 'S', 0);
  9455  1555  3053               	movlw	83
  9456  1556  0141               	movlb	1	; select bank1
  9457  1557  00E9               	movwf	??_MENU_task^(0+128)
  9458  1558  0869               	movf	??_MENU_task^(0+128),w
  9459  1559  0140               	movlb	0	; select bank0
  9460  155A  00B4               	movwf	TM1650_setDigit@data
  9461  155B  3000               	movlw	0
  9462  155C  00B5               	movwf	TM1650_setDigit@dp
  9463  155D  00B6               	movwf	TM1650_setDigit@dp+1
  9464  155E  3002               	movlw	2
  9465  155F  3190  2047  3195   	fcall	_TM1650_setDigit
  9466                           
  9467                           ;menu.c: 89:             TM1650_setDigit(3, 'E', 0);
  9468  1562  3045               	movlw	69
  9469  1563  0141               	movlb	1	; select bank1
  9470  1564  00E9               	movwf	??_MENU_task^(0+128)
  9471  1565  0869               	movf	??_MENU_task^(0+128),w
  9472  1566  0140               	movlb	0	; select bank0
  9473  1567  00B4               	movwf	TM1650_setDigit@data
  9474  1568  3000               	movlw	0
  9475  1569  00B5               	movwf	TM1650_setDigit@dp
  9476  156A  00B6               	movwf	TM1650_setDigit@dp+1
  9477  156B  3003               	movlw	3
  9478  156C  3190  2047  3195   	fcall	_TM1650_setDigit
  9479                           
  9480                           ;menu.c: 90:             pulseColors();
  9481  156F  3188  2066         	fcall	_pulseColors
  9482                           
  9483                           ;menu.c: 91:         } else if (currentState == 2) {
  9484  1571  0008               	return
  9485  1572                     l6080:	
  9486  1572  3002               	movlw	2
  9487  1573  0661               	xorwf	_currentState^(0+256),w
  9488  1574  0462               	iorwf	(_currentState+1)^(0+256),w
  9489  1575  1D03               	btfss	3,2
  9490  1576  0008               	return
  9491                           
  9492                           ;menu.c: 97:             cycleColors();
  9493  1577  3196  2670         	fcall	_cycleColors
  9494  1579  0008               	return
  9495  157A                     __end_of_MENU_task:	
  9496                           
  9497                           	psect	text17
  9498  0866                     __ptext17:	
  9499 ;; *************** function _pulseColors *****************
  9500 ;; Defined at:
  9501 ;;		line 53 in file "menu.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9518 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9519 ;;Total ram usage:        1 bytes
  9520 ;; Hardware stack levels used:    1
  9521 ;; Hardware stack levels required when called:    8
  9522 ;; This function calls:
  9523 ;;		_LED_setHSL
  9524 ;;		___fldiv
  9525 ;;		___fleq
  9526 ;;		___flge
  9527 ;;		___flsub
  9528 ;; This function is called by:
  9529 ;;		_MENU_task
  9530 ;; This function uses a non-reentrant model
  9531 ;;
  9532                           
  9533                           
  9534                           ;psect for function _pulseColors
  9535  0866                     _pulseColors:	
  9536                           
  9537                           ;menu.c: 54:     if(fadeTime == -400/10) {
  9538                           
  9539                           ;incstack = 0
  9540                           ; Regs used in _pulseColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9541  0866  0142               	movlb	2	; select bank2
  9542  0867  0828               	movf	(_fadeTime+3)^(0+256),w
  9543  0868  0140               	movlb	0	; select bank0
  9544  0869  00A3               	movwf	___fleq@ff1+3
  9545  086A  0142               	movlb	2	; select bank2
  9546  086B  0827               	movf	(_fadeTime+2)^(0+256),w
  9547  086C  0140               	movlb	0	; select bank0
  9548  086D  00A2               	movwf	___fleq@ff1+2
  9549  086E  0142               	movlb	2	; select bank2
  9550  086F  0826               	movf	(_fadeTime+1)^(0+256),w
  9551  0870  0140               	movlb	0	; select bank0
  9552  0871  00A1               	movwf	___fleq@ff1+1
  9553  0872  0142               	movlb	2	; select bank2
  9554  0873  0825               	movf	_fadeTime^(0+256),w
  9555  0874  0140               	movlb	0	; select bank0
  9556  0875  00A0               	movwf	___fleq@ff1
  9557  0876  30C2               	movlw	194
  9558  0877  00A7               	movwf	___fleq@ff2+3
  9559  0878  3020               	movlw	32
  9560  0879  00A6               	movwf	___fleq@ff2+2
  9561  087A  3000               	movlw	0
  9562  087B  00A5               	movwf	___fleq@ff2+1
  9563  087C  3000               	movlw	0
  9564  087D  00A4               	movwf	___fleq@ff2
  9565  087E  3193  23E1  3188   	fcall	___fleq
  9566  0881  1C03               	btfss	3,0
  9567  0882  28AA               	goto	l5990
  9568                           
  9569                           ;menu.c: 56:         if(hueValPulse == 360) {
  9570  0883  3068               	movlw	104
  9571  0884  0142               	movlb	2	; select bank2
  9572  0885  062D               	xorwf	_hueValPulse^(0+256),w
  9573  0886  1D03               	skipz
  9574  0887  288E               	goto	l5988
  9575  0888  032E               	decf	(_hueValPulse+1)^(0+256),w
  9576  0889  1D03               	btfss	3,2
  9577  088A  288E               	goto	l5988
  9578                           
  9579                           ;menu.c: 57:             hueValPulse = 0;
  9580  088B  01AD               	clrf	_hueValPulse^(0+256)
  9581  088C  01AE               	clrf	(_hueValPulse+1)^(0+256)
  9582                           
  9583                           ;menu.c: 58:         } else {
  9584  088D  2892               	goto	l1068
  9585  088E                     l5988:	
  9586                           
  9587                           ;menu.c: 59:             hueValPulse += 36;
  9588  088E  3024               	movlw	36
  9589  088F  07AD               	addwf	_hueValPulse^(0+256),f
  9590  0890  3000               	movlw	0
  9591  0891  3DAE               	addwfc	(_hueValPulse+1)^(0+256),f
  9592  0892                     l1068:	
  9593                           ;menu.c: 60:         }
  9594                           
  9595                           
  9596                           ;menu.c: 61:         pulseColor.H = hueValPulse;
  9597  0892  082E               	movf	(_hueValPulse+1)^(0+256),w
  9598  0893  0143               	movlb	3	; select bank3
  9599  0894  00C7               	movwf	(_pulseColor+1)^(0+384)
  9600  0895  0142               	movlb	2	; select bank2
  9601  0896  082D               	movf	_hueValPulse^(0+256),w
  9602  0897  0143               	movlb	3	; select bank3
  9603  0898  00C6               	movwf	_pulseColor^(0+384)
  9604                           
  9605                           ;menu.c: 62:         pulseColor.L = 1;
  9606  0899  303F               	movlw	63
  9607  089A  00CF               	movwf	((_pulseColor+3)^(0+384)+6)
  9608  089B  3080               	movlw	128
  9609  089C  00CE               	movwf	((_pulseColor+2)^(0+384)+6)
  9610  089D  3000               	movlw	0
  9611  089E  00CD               	movwf	((_pulseColor+1)^(0+384)+6)
  9612  089F  3000               	movlw	0
  9613  08A0  00CC               	movwf	(_pulseColor^(0+384)+6)
  9614                           
  9615                           ;menu.c: 63:         fadeTime = 400/2;
  9616  08A1  3043               	movlw	67
  9617  08A2  0142               	movlb	2	; select bank2
  9618  08A3  00A8               	movwf	(_fadeTime+3)^(0+256)
  9619  08A4  3048               	movlw	72
  9620  08A5  00A7               	movwf	(_fadeTime+2)^(0+256)
  9621  08A6  3000               	movlw	0
  9622  08A7  00A6               	movwf	(_fadeTime+1)^(0+256)
  9623  08A8  3000               	movlw	0
  9624  08A9  291F               	goto	L1
  9625  08AA                     l5990:	
  9626                           ;menu.c: 64:     } else if(fadeTime > 0) {
  9627                           
  9628  08AA  3000               	movlw	0
  9629  08AB  0140               	movlb	0	; select bank0
  9630  08AC  00DA               	movwf	___flge@ff1+3
  9631  08AD  3000               	movlw	0
  9632  08AE  00D9               	movwf	___flge@ff1+2
  9633  08AF  3000               	movlw	0
  9634  08B0  00D8               	movwf	___flge@ff1+1
  9635  08B1  3000               	movlw	0
  9636  08B2  00D7               	movwf	___flge@ff1
  9637  08B3  0142               	movlb	2	; select bank2
  9638  08B4  0828               	movf	(_fadeTime+3)^(0+256),w
  9639  08B5  0140               	movlb	0	; select bank0
  9640  08B6  00DE               	movwf	___flge@ff2+3
  9641  08B7  0142               	movlb	2	; select bank2
  9642  08B8  0827               	movf	(_fadeTime+2)^(0+256),w
  9643  08B9  0140               	movlb	0	; select bank0
  9644  08BA  00DD               	movwf	___flge@ff2+2
  9645  08BB  0142               	movlb	2	; select bank2
  9646  08BC  0826               	movf	(_fadeTime+1)^(0+256),w
  9647  08BD  0140               	movlb	0	; select bank0
  9648  08BE  00DC               	movwf	___flge@ff2+1
  9649  08BF  0142               	movlb	2	; select bank2
  9650  08C0  0825               	movf	_fadeTime^(0+256),w
  9651  08C1  0140               	movlb	0	; select bank0
  9652  08C2  00DB               	movwf	___flge@ff2
  9653  08C3  3195  25F4  3188   	fcall	___flge
  9654  08C6  1803               	btfsc	3,0
  9655  08C7  28F4               	goto	l5994
  9656                           
  9657                           ;menu.c: 65:         pulseColor.L = fadeTime/(400);
  9658  08C8  3043               	movlw	67
  9659  08C9  0140               	movlb	0	; select bank0
  9660  08CA  00B1               	movwf	___fldiv@a+3
  9661  08CB  30C8               	movlw	200
  9662  08CC  00B0               	movwf	___fldiv@a+2
  9663  08CD  3000               	movlw	0
  9664  08CE  00AF               	movwf	___fldiv@a+1
  9665  08CF  3000               	movlw	0
  9666  08D0  00AE               	movwf	___fldiv@a
  9667  08D1  0142               	movlb	2	; select bank2
  9668  08D2  0828               	movf	(_fadeTime+3)^(0+256),w
  9669  08D3  0140               	movlb	0	; select bank0
  9670  08D4  00B5               	movwf	___fldiv@b+3
  9671  08D5  0142               	movlb	2	; select bank2
  9672  08D6  0827               	movf	(_fadeTime+2)^(0+256),w
  9673  08D7  0140               	movlb	0	; select bank0
  9674  08D8  00B4               	movwf	___fldiv@b+2
  9675  08D9  0142               	movlb	2	; select bank2
  9676  08DA  0826               	movf	(_fadeTime+1)^(0+256),w
  9677  08DB  0140               	movlb	0	; select bank0
  9678  08DC  00B3               	movwf	___fldiv@b+1
  9679  08DD  0142               	movlb	2	; select bank2
  9680  08DE  0825               	movf	_fadeTime^(0+256),w
  9681  08DF  0140               	movlb	0	; select bank0
  9682  08E0  00B2               	movwf	___fldiv@b
  9683  08E1  3186  2623  3188   	fcall	___fldiv
  9684  08E4  0140               	movlb	0	; select bank0
  9685  08E5  0831               	movf	?___fldiv+3,w
  9686  08E6  0143               	movlb	3	; select bank3
  9687  08E7  00CF               	movwf	((_pulseColor+3)^(0+384)+6)
  9688  08E8  0140               	movlb	0	; select bank0
  9689  08E9  0830               	movf	?___fldiv+2,w
  9690  08EA  0143               	movlb	3	; select bank3
  9691  08EB  00CE               	movwf	((_pulseColor+2)^(0+384)+6)
  9692  08EC  0140               	movlb	0	; select bank0
  9693  08ED  082F               	movf	?___fldiv+1,w
  9694  08EE  0143               	movlb	3	; select bank3
  9695  08EF  00CD               	movwf	((_pulseColor+1)^(0+384)+6)
  9696  08F0  0140               	movlb	0	; select bank0
  9697  08F1  082E               	movf	?___fldiv,w
  9698  08F2  0143               	movlb	3	; select bank3
  9699  08F3  00CC               	movwf	(_pulseColor^(0+384)+6)
  9700  08F4                     l5994:	
  9701                           ;menu.c: 67:     } else {
  9702                           
  9703                           ;menu.c: 66:         fadeTime -= 1;
  9704                           
  9705                           
  9706                           ;menu.c: 68:         fadeTime -= 1;
  9707  08F4  303F               	movlw	63
  9708  08F5  0140               	movlb	0	; select bank0
  9709  08F6  00DA               	movwf	___flsub@a+3
  9710  08F7  3080               	movlw	128
  9711  08F8  00D9               	movwf	___flsub@a+2
  9712  08F9  3000               	movlw	0
  9713  08FA  00D8               	movwf	___flsub@a+1
  9714  08FB  3000               	movlw	0
  9715  08FC  00D7               	movwf	___flsub@a
  9716  08FD  0142               	movlb	2	; select bank2
  9717  08FE  0828               	movf	(_fadeTime+3)^(0+256),w
  9718  08FF  0140               	movlb	0	; select bank0
  9719  0900  00DE               	movwf	___flsub@b+3
  9720  0901  0142               	movlb	2	; select bank2
  9721  0902  0827               	movf	(_fadeTime+2)^(0+256),w
  9722  0903  0140               	movlb	0	; select bank0
  9723  0904  00DD               	movwf	___flsub@b+2
  9724  0905  0142               	movlb	2	; select bank2
  9725  0906  0826               	movf	(_fadeTime+1)^(0+256),w
  9726  0907  0140               	movlb	0	; select bank0
  9727  0908  00DC               	movwf	___flsub@b+1
  9728  0909  0142               	movlb	2	; select bank2
  9729  090A  0825               	movf	_fadeTime^(0+256),w
  9730  090B  0140               	movlb	0	; select bank0
  9731  090C  00DB               	movwf	___flsub@b
  9732  090D  3190  209C  3188   	fcall	___flsub
  9733  0910  0140               	movlb	0	; select bank0
  9734  0911  085A               	movf	?___flsub+3,w
  9735  0912  0142               	movlb	2	; select bank2
  9736  0913  00A8               	movwf	(_fadeTime+3)^(0+256)
  9737  0914  0140               	movlb	0	; select bank0
  9738  0915  0859               	movf	?___flsub+2,w
  9739  0916  0142               	movlb	2	; select bank2
  9740  0917  00A7               	movwf	(_fadeTime+2)^(0+256)
  9741  0918  0140               	movlb	0	; select bank0
  9742  0919  0858               	movf	?___flsub+1,w
  9743  091A  0142               	movlb	2	; select bank2
  9744  091B  00A6               	movwf	(_fadeTime+1)^(0+256)
  9745  091C  0140               	movlb	0	; select bank0
  9746  091D  0857               	movf	?___flsub,w
  9747  091E  0142               	movlb	2	; select bank2
  9748  091F                     L1:	
  9749  091F  00A5               	movwf	_fadeTime^(0+256)
  9750                           
  9751                           ;menu.c: 71:     LED_setHSL(pulseColor);
  9752  0920  30C6               	movlw	low _pulseColor
  9753  0921  0086               	movwf	6
  9754  0922  3001               	movlw	high _pulseColor
  9755  0923  0087               	movwf	7
  9756  0924  30AF               	movlw	low LED_setHSL@hsl
  9757  0925  0084               	movwf	4
  9758  0926  3000               	movlw	high LED_setHSL@hsl
  9759  0927  0085               	movwf	5
  9760  0928  300A               	movlw	10
  9761  0929  0140               	movlb	0	; select bank0
  9762  092A  00EF               	movwf	??_pulseColors
  9763  092B                     u6310:	
  9764  092B  0016               	moviw fsr1++
  9765  092C  001A               	movwi fsr0++
  9766  092D  0BEF               	decfsz	??_pulseColors,f
  9767  092E  292B               	goto	u6310
  9768  092F  3180  2099         	fcall	_LED_setHSL
  9769  0931  0008               	return
  9770  0932                     __end_of_pulseColors:	
  9771                           
  9772                           	psect	text18
  9773  1FE8                     __ptext18:	
  9774 ;; *************** function _menuButtons *****************
  9775 ;; Defined at:
  9776 ;;		line 18 in file "menu.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;		None
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      void 
  9783 ;; Registers used:
  9784 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9794 ;;Total ram usage:        0 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; Hardware stack levels required when called:    5
  9797 ;; This function calls:
  9798 ;;		_BUTTONS_isClicked
  9799 ;; This function is called by:
  9800 ;;		_MENU_task
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           
  9805                           ;psect for function _menuButtons
  9806  1FE8                     _menuButtons:	
  9807                           
  9808                           ;menu.c: 19:     if (BUTTONS_isClicked(menu)) {
  9809                           
  9810                           ;incstack = 0
  9811                           ; Regs used in _menuButtons: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9812  1FE8  0142               	movlb	2	; select bank2
  9813  1FE9  084F               	movf	_menu^(0+256),w
  9814  1FEA  3190  20FB  319F   	fcall	_BUTTONS_isClicked
  9815  1FED  0140               	movlb	0	; select bank0
  9816  1FEE  0820               	movf	?_BUTTONS_isClicked,w
  9817  1FEF  0421               	iorwf	?_BUTTONS_isClicked+1,w
  9818  1FF0  1903               	btfsc	3,2
  9819  1FF1  0008               	return
  9820                           
  9821                           ;menu.c: 20:         if(currentState == 2) {
  9822  1FF2  3002               	movlw	2
  9823  1FF3  0142               	movlb	2	; select bank2
  9824  1FF4  0661               	xorwf	_currentState^(0+256),w
  9825  1FF5  0462               	iorwf	(_currentState+1)^(0+256),w
  9826  1FF6  1D03               	btfss	3,2
  9827  1FF7  2FFB               	goto	l5954
  9828                           
  9829                           ;menu.c: 21:             currentState = 0;
  9830  1FF8  01E1               	clrf	_currentState^(0+256)
  9831  1FF9  01E2               	clrf	(_currentState+1)^(0+256)
  9832                           
  9833                           ;menu.c: 22:         } else {
  9834  1FFA  0008               	return
  9835  1FFB                     l5954:	
  9836                           
  9837                           ;menu.c: 23:             currentState += 1;
  9838  1FFB  3001               	movlw	1
  9839  1FFC  07E1               	addwf	_currentState^(0+256),f
  9840  1FFD  3000               	movlw	0
  9841  1FFE  3DE2               	addwfc	(_currentState+1)^(0+256),f
  9842  1FFF  0008               	return
  9843  2000                     __end_of_menuButtons:	
  9844                           
  9845                           	psect	text19
  9846  1E8E                     __ptext19:	
  9847 ;; *************** function _isDMXOn *****************
  9848 ;; Defined at:
  9849 ;;		line 60 in file "dmx.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;		None
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  1    wreg      _Bool 
  9856 ;; Registers used:
  9857 ;;		wreg
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9867 ;;Total ram usage:        0 bytes
  9868 ;; Hardware stack levels used:    1
  9869 ;; Hardware stack levels required when called:    4
  9870 ;; This function calls:
  9871 ;;		Nothing
  9872 ;; This function is called by:
  9873 ;;		_MENU_task
  9874 ;; This function uses a non-reentrant model
  9875 ;;
  9876                           
  9877                           
  9878                           ;psect for function _isDMXOn
  9879  1E8E                     _isDMXOn:	
  9880                           
  9881                           ;dmx.c: 61:     return dmxOn;
  9882                           
  9883                           ;incstack = 0
  9884                           ; Regs used in _isDMXOn: [wreg]
  9885  1E8E  0142               	movlb	2	; select bank2
  9886  1E8F  084B               	movf	_dmxOn^(0+256),w
  9887  1E90  0008               	return
  9888  1E91                     __end_of_isDMXOn:	
  9889                           
  9890                           	psect	text20
  9891  1670                     __ptext20:	
  9892 ;; *************** function _cycleColors *****************
  9893 ;; Defined at:
  9894 ;;		line 31 in file "menu.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;  color          10   63[BANK1 ] struct HSL
  9899 ;;  time            2   61[BANK1 ] unsigned short 
  9900 ;;  foo             1   60[BANK1 ] PTR volatile int 
  9901 ;;		 -> cycleSpeed(2), 
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  1    wreg      void 
  9904 ;; Registers used:
  9905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9912 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9913 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9914 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9915 ;;Total ram usage:       15 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; Hardware stack levels required when called:   12
  9918 ;; This function calls:
  9919 ;;		_CLOCK_getTime
  9920 ;;		_LED_setHSL
  9921 ;;		_numControl_Set
  9922 ;; This function is called by:
  9923 ;;		_MENU_task
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           
  9928                           ;psect for function _cycleColors
  9929  1670                     _cycleColors:	
  9930                           
  9931                           ;menu.c: 33:     time_t time = CLOCK_getTime();
  9932                           
  9933                           ;incstack = 0
  9934                           ; Regs used in _cycleColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9935  1670  319E  26CB  3196   	fcall	_CLOCK_getTime
  9936  1673  0140               	movlb	0	; select bank0
  9937  1674  0821               	movf	?_CLOCK_getTime+1,w
  9938  1675  0141               	movlb	1	; select bank1
  9939  1676  00DE               	movwf	(cycleColors@time+1)^(0+128)
  9940  1677  0140               	movlb	0	; select bank0
  9941  1678  0820               	movf	?_CLOCK_getTime,w
  9942  1679  0141               	movlb	1	; select bank1
  9943  167A  00DD               	movwf	cycleColors@time^(0+128)
  9944                           
  9945                           ;menu.c: 35:     if (time - lastTimeCycle < cycleSpeed)
  9946  167B  0142               	movlb	2	; select bank2
  9947  167C  0833               	movf	_lastTimeCycle^(0+256),w
  9948  167D  0141               	movlb	1	; select bank1
  9949  167E  025D               	subwf	cycleColors@time^(0+128),w
  9950  167F  00DA               	movwf	??_cycleColors^(0+128)
  9951  1680  0142               	movlb	2	; select bank2
  9952  1681  0834               	movf	(_lastTimeCycle+1)^(0+256),w
  9953  1682  0141               	movlb	1	; select bank1
  9954  1683  3B5E               	subwfb	(cycleColors@time+1)^(0+128),w
  9955  1684  00DB               	movwf	(??_cycleColors+1)^(0+128)
  9956  1685  0142               	movlb	2	; select bank2
  9957  1686  086A               	movf	(_cycleSpeed+1)^(0+256),w
  9958  1687  0141               	movlb	1	; select bank1
  9959  1688  025B               	subwf	(??_cycleColors+1)^(0+128),w
  9960  1689  1D03               	skipz
  9961  168A  2E8F               	goto	u6245
  9962  168B  0142               	movlb	2	; select bank2
  9963  168C  0869               	movf	_cycleSpeed^(0+256),w
  9964  168D  0141               	movlb	1	; select bank1
  9965  168E  025A               	subwf	??_cycleColors^(0+128),w
  9966  168F                     u6245:	
  9967  168F  1C03               	btfss	3,0
  9968  1690  0008               	return
  9969                           
  9970                           ;menu.c: 37:     lastTimeCycle = time;
  9971  1691  085E               	movf	(cycleColors@time+1)^(0+128),w
  9972  1692  0142               	movlb	2	; select bank2
  9973  1693  00B4               	movwf	(_lastTimeCycle+1)^(0+256)
  9974  1694  0141               	movlb	1	; select bank1
  9975  1695  085D               	movf	cycleColors@time^(0+128),w
  9976  1696  0142               	movlb	2	; select bank2
  9977  1697  00B3               	movwf	_lastTimeCycle^(0+256)
  9978                           
  9979                           ;menu.c: 38:     volatile int* foo = &cycleSpeed;
  9980  1698  3069               	movlw	(low (_cycleSpeed| (0+256)))& (0+255)
  9981  1699  0141               	movlb	1	; select bank1
  9982  169A  00DA               	movwf	??_cycleColors^(0+128)
  9983  169B  085A               	movf	??_cycleColors^(0+128),w
  9984  169C  00DC               	movwf	cycleColors@foo^(0+128)
  9985                           
  9986                           ;menu.c: 39:     numControl_Set(foo);
  9987  169D  085C               	movf	cycleColors@foo^(0+128),w
  9988  169E  0140               	movlb	0	; select bank0
  9989  169F  00C6               	movwf	numControl_Set@val
  9990  16A0  3001               	movlw	1
  9991  16A1  00C7               	movwf	numControl_Set@val+1
  9992  16A2  3196  26EC  3196   	fcall	_numControl_Set
  9993                           
  9994                           ;menu.c: 40:     if(hueValCycle == 360) {
  9995  16A5  3068               	movlw	104
  9996  16A6  0142               	movlb	2	; select bank2
  9997  16A7  0631               	xorwf	_hueValCycle^(0+256),w
  9998  16A8  1D03               	skipz
  9999  16A9  2EB0               	goto	l5970
 10000  16AA  0332               	decf	(_hueValCycle+1)^(0+256),w
 10001  16AB  1D03               	btfss	3,2
 10002  16AC  2EB0               	goto	l5970
 10003                           
 10004                           ;menu.c: 41:         hueValCycle = 0;
 10005  16AD  01B1               	clrf	_hueValCycle^(0+256)
 10006  16AE  01B2               	clrf	(_hueValCycle+1)^(0+256)
 10007                           
 10008                           ;menu.c: 42:     } else {
 10009  16AF  2EB4               	goto	l5972
 10010  16B0                     l5970:	
 10011                           
 10012                           ;menu.c: 43:         hueValCycle += 1;
 10013  16B0  3001               	movlw	1
 10014  16B1  07B1               	addwf	_hueValCycle^(0+256),f
 10015  16B2  3000               	movlw	0
 10016  16B3  3DB2               	addwfc	(_hueValCycle+1)^(0+256),f
 10017  16B4                     l5972:	
 10018                           
 10019                           ;menu.c: 45:     struct HSL color = {hueValCycle, 1, .5};
 10020  16B4  30A0               	movlw	low cycleColors@F108
 10021  16B5  0086               	movwf	6
 10022  16B6  3001               	movlw	high cycleColors@F108
 10023  16B7  0087               	movwf	7
 10024  16B8  30DF               	movlw	low cycleColors@color
 10025  16B9  0084               	movwf	4
 10026  16BA  3000               	movlw	high cycleColors@color
 10027  16BB  0085               	movwf	5
 10028  16BC  300A               	movlw	10
 10029  16BD  0141               	movlb	1	; select bank1
 10030  16BE  00DA               	movwf	??_cycleColors^(0+128)
 10031  16BF                     u6260:	
 10032  16BF  0016               	moviw fsr1++
 10033  16C0  001A               	movwi fsr0++
 10034  16C1  0BDA               	decfsz	??_cycleColors^(0+128),f
 10035  16C2  2EBF               	goto	u6260
 10036  16C3  0142               	movlb	2	; select bank2
 10037  16C4  0832               	movf	(_hueValCycle+1)^(0+256),w
 10038  16C5  0141               	movlb	1	; select bank1
 10039  16C6  00E0               	movwf	(cycleColors@color+1)^(0+128)
 10040  16C7  0142               	movlb	2	; select bank2
 10041  16C8  0831               	movf	_hueValCycle^(0+256),w
 10042  16C9  0141               	movlb	1	; select bank1
 10043  16CA  00DF               	movwf	cycleColors@color^(0+128)
 10044  16CB  303F               	movlw	63
 10045  16CC  00E4               	movwf	((cycleColors@color+3)^(0+128)+2)
 10046  16CD  3080               	movlw	128
 10047  16CE  00E3               	movwf	((cycleColors@color+2)^(0+128)+2)
 10048  16CF  3000               	movlw	0
 10049  16D0  00E2               	movwf	((cycleColors@color+1)^(0+128)+2)
 10050  16D1  3000               	movlw	0
 10051  16D2  00E1               	movwf	(cycleColors@color^(0+128)+2)
 10052  16D3  303F               	movlw	63
 10053  16D4  00E8               	movwf	((cycleColors@color+3)^(0+128)+6)
 10054  16D5  3000               	movlw	0
 10055  16D6  00E7               	movwf	((cycleColors@color+2)^(0+128)+6)
 10056  16D7  3000               	movlw	0
 10057  16D8  00E6               	movwf	((cycleColors@color+1)^(0+128)+6)
 10058  16D9  3000               	movlw	0
 10059  16DA  00E5               	movwf	(cycleColors@color^(0+128)+6)
 10060                           
 10061                           ;menu.c: 46:     LED_setHSL(color);
 10062  16DB  30DF               	movlw	low cycleColors@color
 10063  16DC  0086               	movwf	6
 10064  16DD  3000               	movlw	high cycleColors@color
 10065  16DE  0087               	movwf	7
 10066  16DF  30AF               	movlw	low LED_setHSL@hsl
 10067  16E0  0084               	movwf	4
 10068  16E1  3000               	movlw	high LED_setHSL@hsl
 10069  16E2  0085               	movwf	5
 10070  16E3  300A               	movlw	10
 10071  16E4  00DA               	movwf	??_cycleColors^(0+128)
 10072  16E5                     u6270:	
 10073  16E5  0016               	moviw fsr1++
 10074  16E6  001A               	movwi fsr0++
 10075  16E7  0BDA               	decfsz	??_cycleColors^(0+128),f
 10076  16E8  2EE5               	goto	u6270
 10077  16E9  3180  2099         	fcall	_LED_setHSL
 10078  16EB  0008               	return
 10079  16EC                     __end_of_cycleColors:	
 10080                           
 10081                           	psect	text21
 10082  16EC                     __ptext21:	
 10083 ;; *************** function _numControl_Set *****************
 10084 ;; Defined at:
 10085 ;;		line 45 in file "controller.c"
 10086 ;; Parameters:    Size  Location     Type
 10087 ;;  val             2   38[BANK0 ] PTR int 
 10088 ;;		 -> cycleSpeed(2), address(2), 
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;  time            2   42[BANK0 ] unsigned short 
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      void 
 10093 ;; Registers used:
 10094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10101 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10102 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10103 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10104 ;;Total ram usage:        6 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; Hardware stack levels required when called:   11
 10107 ;; This function calls:
 10108 ;;		_BUTTONS_isClicked
 10109 ;;		_CLOCK_getTime
 10110 ;;		_TM1650_enable
 10111 ;;		_decrement
 10112 ;;		_increment
 10113 ;; This function is called by:
 10114 ;;		_cycleColors
 10115 ;;		_MENU_task
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           
 10120                           ;psect for function _numControl_Set
 10121  16EC                     _numControl_Set:	
 10122                           
 10123                           ;controller.c: 46:     time_t time = CLOCK_getTime();
 10124                           
 10125                           ;incstack = 0
 10126                           ; Regs used in _numControl_Set: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10127  16EC  319E  26CB  3196   	fcall	_CLOCK_getTime
 10128  16EF  0140               	movlb	0	; select bank0
 10129  16F0  0821               	movf	?_CLOCK_getTime+1,w
 10130  16F1  00CB               	movwf	numControl_Set@time+1
 10131  16F2  0820               	movf	?_CLOCK_getTime,w
 10132  16F3  00CA               	movwf	numControl_Set@time
 10133                           
 10134                           ;controller.c: 48:     if (time - lastTime < 35)
 10135  16F4  0142               	movlb	2	; select bank2
 10136  16F5  082B               	movf	controller@lastTime^(0+256),w
 10137  16F6  0140               	movlb	0	; select bank0
 10138  16F7  024A               	subwf	numControl_Set@time,w
 10139  16F8  00C8               	movwf	??_numControl_Set
 10140  16F9  0142               	movlb	2	; select bank2
 10141  16FA  082C               	movf	(controller@lastTime+1)^(0+256),w
 10142  16FB  0140               	movlb	0	; select bank0
 10143  16FC  3B4B               	subwfb	numControl_Set@time+1,w
 10144  16FD  00C9               	movwf	??_numControl_Set+1
 10145  16FE  3000               	movlw	0
 10146  16FF  0249               	subwf	??_numControl_Set+1,w
 10147  1700  3023               	movlw	35
 10148  1701  1903               	skipnz
 10149  1702  0248               	subwf	??_numControl_Set,w
 10150  1703  1C03               	btfss	3,0
 10151  1704  0008               	return
 10152                           
 10153                           ;controller.c: 50:     lastTime = time;
 10154  1705  084B               	movf	numControl_Set@time+1,w
 10155  1706  0142               	movlb	2	; select bank2
 10156  1707  00AC               	movwf	(controller@lastTime+1)^(0+256)
 10157  1708  0140               	movlb	0	; select bank0
 10158  1709  084A               	movf	numControl_Set@time,w
 10159  170A  0142               	movlb	2	; select bank2
 10160  170B  00AB               	movwf	controller@lastTime^(0+256)
 10161                           
 10162                           ;controller.c: 52:     if (BUTTONS_isClicked(up)) {
 10163  170C  0852               	movf	_up^(0+256),w
 10164  170D  3190  20FB  3196   	fcall	_BUTTONS_isClicked
 10165  1710  0140               	movlb	0	; select bank0
 10166  1711  0820               	movf	?_BUTTONS_isClicked,w
 10167  1712  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10168  1713  1903               	btfsc	3,2
 10169  1714  2F28               	goto	l5726
 10170                           
 10171                           ;controller.c: 53:         increment(val);
 10172  1715  0847               	movf	numControl_Set@val+1,w
 10173  1716  00C3               	movwf	increment@val+1
 10174  1717  0846               	movf	numControl_Set@val,w
 10175  1718  00C2               	movwf	increment@val
 10176  1719  3191  21B1  3196   	fcall	_increment
 10177                           
 10178                           ;controller.c: 54:         lastActiveTime = time;
 10179  171C  0140               	movlb	0	; select bank0
 10180  171D  084B               	movf	numControl_Set@time+1,w
 10181  171E  0142               	movlb	2	; select bank2
 10182  171F  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10183  1720  0140               	movlb	0	; select bank0
 10184  1721  084A               	movf	numControl_Set@time,w
 10185  1722  0142               	movlb	2	; select bank2
 10186  1723  00A9               	movwf	_lastActiveTime^(0+256)
 10187                           
 10188                           ;controller.c: 55:         TM1650_enable(1);
 10189  1724  3001               	movlw	1
 10190  1725  319F  278F         	fcall	_TM1650_enable
 10191                           
 10192                           ;controller.c: 56:     } else if (BUTTONS_isClicked(down)) {
 10193  1727  0008               	return
 10194  1728                     l5726:	
 10195  1728  0142               	movlb	2	; select bank2
 10196  1729  0851               	movf	_down^(0+256),w
 10197  172A  3190  20FB  3196   	fcall	_BUTTONS_isClicked
 10198  172D  0140               	movlb	0	; select bank0
 10199  172E  0820               	movf	?_BUTTONS_isClicked,w
 10200  172F  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10201  1730  1903               	btfsc	3,2
 10202  1731  2F45               	goto	l5734
 10203                           
 10204                           ;controller.c: 57:         decrement(val);
 10205  1732  0847               	movf	numControl_Set@val+1,w
 10206  1733  00C3               	movwf	decrement@val+1
 10207  1734  0846               	movf	numControl_Set@val,w
 10208  1735  00C2               	movwf	decrement@val
 10209  1736  3192  2204  3196   	fcall	_decrement
 10210                           
 10211                           ;controller.c: 58:         lastActiveTime = time;
 10212  1739  0140               	movlb	0	; select bank0
 10213  173A  084B               	movf	numControl_Set@time+1,w
 10214  173B  0142               	movlb	2	; select bank2
 10215  173C  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10216  173D  0140               	movlb	0	; select bank0
 10217  173E  084A               	movf	numControl_Set@time,w
 10218  173F  0142               	movlb	2	; select bank2
 10219  1740  00A9               	movwf	_lastActiveTime^(0+256)
 10220                           
 10221                           ;controller.c: 59:         TM1650_enable(1);
 10222  1741  3001               	movlw	1
 10223  1742  319F  278F         	fcall	_TM1650_enable
 10224                           
 10225                           ;controller.c: 60:     } else {
 10226  1744  0008               	return
 10227  1745                     l5734:	
 10228                           
 10229                           ;controller.c: 61:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
 10230  1745  319E  26CB  3196   	fcall	_CLOCK_getTime
 10231  1748  0142               	movlb	2	; select bank2
 10232  1749  0829               	movf	_lastActiveTime^(0+256),w
 10233  174A  0140               	movlb	0	; select bank0
 10234  174B  0220               	subwf	?_CLOCK_getTime,w
 10235  174C  00C8               	movwf	??_numControl_Set
 10236  174D  0142               	movlb	2	; select bank2
 10237  174E  082A               	movf	(_lastActiveTime+1)^(0+256),w
 10238  174F  0140               	movlb	0	; select bank0
 10239  1750  3B21               	subwfb	?_CLOCK_getTime+1,w
 10240  1751  00C9               	movwf	??_numControl_Set+1
 10241  1752  3013               	movlw	19
 10242  1753  0249               	subwf	??_numControl_Set+1,w
 10243  1754  3088               	movlw	136
 10244  1755  1903               	skipnz
 10245  1756  0248               	subwf	??_numControl_Set,w
 10246  1757  1C03               	skipc
 10247  1758  0008               	return
 10248                           
 10249                           ;controller.c: 62:             TM1650_enable(0);
 10250  1759  3000               	movlw	0
 10251  175A  319F  278F  3196   	fcall	_TM1650_enable
 10252                           
 10253                           ;controller.c: 63:             lastActiveTime = CLOCK_getTime() - 5001;
 10254  175D  319E  26CB         	fcall	_CLOCK_getTime
 10255  175F  0140               	movlb	0	; select bank0
 10256  1760  0820               	movf	?_CLOCK_getTime,w
 10257  1761  3E77               	addlw	119
 10258  1762  0142               	movlb	2	; select bank2
 10259  1763  00A9               	movwf	_lastActiveTime^(0+256)
 10260  1764  30EC               	movlw	236
 10261  1765  0140               	movlb	0	; select bank0
 10262  1766  3D21               	addwfc	?_CLOCK_getTime+1,w
 10263  1767  0142               	movlb	2	; select bank2
 10264  1768  00AA               	movwf	(_lastActiveTime+1)^(0+256)
 10265  1769  0008               	return
 10266  176A                     __end_of_numControl_Set:	
 10267                           
 10268                           	psect	text22
 10269  11B1                     __ptext22:	
 10270 ;; *************** function _increment *****************
 10271 ;; Defined at:
 10272 ;;		line 17 in file "controller.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  val             2   34[BANK0 ] PTR int 
 10275 ;;		 -> cycleSpeed(2), address(2), 
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;		None
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  1    wreg      void 
 10280 ;; Registers used:
 10281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10290 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10291 ;;Total ram usage:        4 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:   10
 10294 ;; This function calls:
 10295 ;;		_TM1650_fastPrintNum
 10296 ;; This function is called by:
 10297 ;;		_numControl_Set
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301                           
 10302                           ;psect for function _increment
 10303  11B1                     _increment:	
 10304                           
 10305                           ;controller.c: 17: void increment(int *val);controller.c: 18: {;controller.c: 19:     if
      +                          (*val == 512) {
 10306                           
 10307                           ;incstack = 0
 10308                           ; Regs used in _increment: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10309  11B1  0140               	movlb	0	; select bank0
 10310  11B2  0842               	movf	increment@val,w
 10311  11B3  0086               	movwf	6
 10312  11B4  0843               	movf	increment@val+1,w
 10313  11B5  0087               	movwf	7
 10314  11B6  0016               	moviw fsr1++
 10315  11B7  00C4               	movwf	??_increment
 10316  11B8  0016               	moviw fsr1++
 10317  11B9  3A02               	xorlw	2
 10318  11BA  04C4               	iorwf	??_increment,f
 10319  11BB  1D03               	btfss	3,2
 10320  11BC  29C6               	goto	l5642
 10321                           
 10322                           ;controller.c: 20:         *val = 1;
 10323  11BD  0842               	movf	increment@val,w
 10324  11BE  0086               	movwf	6
 10325  11BF  0843               	movf	increment@val+1,w
 10326  11C0  0087               	movwf	7
 10327  11C1  3001               	movlw	1
 10328  11C2  3FC0               	movwi [0]fsr1
 10329  11C3  3000               	movlw	0
 10330  11C4  3FC1               	movwi [1]fsr1
 10331                           
 10332                           ;controller.c: 21:     } else {
 10333  11C5  29CF               	goto	l5644
 10334  11C6                     l5642:	
 10335                           
 10336                           ;controller.c: 22:         (*val)++;
 10337  11C6  0842               	movf	increment@val,w
 10338  11C7  0086               	movwf	6
 10339  11C8  0843               	movf	increment@val+1,w
 10340  11C9  0087               	movwf	7
 10341  11CA  3001               	movlw	1
 10342  11CB  0781               	addwf	1,f
 10343  11CC  3141               	addfsr 1,1
 10344  11CD  1803               	skipnc
 10345  11CE  0A81               	incf	1,f
 10346  11CF                     l5644:	
 10347                           
 10348                           ;controller.c: 24:     TM1650_fastPrintNum(*val);
 10349  11CF  0842               	movf	increment@val,w
 10350  11D0  0086               	movwf	6
 10351  11D1  0843               	movf	increment@val+1,w
 10352  11D2  0087               	movwf	7
 10353  11D3  3F40               	moviw [0]fsr1
 10354  11D4  00BB               	movwf	TM1650_fastPrintNum@num
 10355  11D5  3F41               	moviw [1]fsr1
 10356  11D6  00BC               	movwf	TM1650_fastPrintNum@num+1
 10357  11D7  3195  257A         	fcall	_TM1650_fastPrintNum
 10358  11D9  0008               	return
 10359  11DA                     __end_of_increment:	
 10360                           
 10361                           	psect	text23
 10362  1204                     __ptext23:	
 10363 ;; *************** function _decrement *****************
 10364 ;; Defined at:
 10365 ;;		line 30 in file "controller.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  val             2   34[BANK0 ] PTR int 
 10368 ;;		 -> cycleSpeed(2), address(2), 
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10383 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10384 ;;Total ram usage:        4 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:   10
 10387 ;; This function calls:
 10388 ;;		_TM1650_fastPrintNum
 10389 ;; This function is called by:
 10390 ;;		_numControl_Set
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393                           
 10394                           
 10395                           ;psect for function _decrement
 10396  1204                     _decrement:	
 10397                           
 10398                           ;controller.c: 30: void decrement(int *val);controller.c: 31: {;controller.c: 32:     if
      +                          (*val == 1) {
 10399                           
 10400                           ;incstack = 0
 10401                           ; Regs used in _decrement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10402  1204  0140               	movlb	0	; select bank0
 10403  1205  0842               	movf	decrement@val,w
 10404  1206  0086               	movwf	6
 10405  1207  0843               	movf	decrement@val+1,w
 10406  1208  0087               	movwf	7
 10407  1209  0016               	moviw fsr1++
 10408  120A  3A01               	xorlw	1
 10409  120B  00C4               	movwf	??_decrement
 10410  120C  0016               	moviw fsr1++
 10411  120D  04C4               	iorwf	??_decrement,f
 10412  120E  1D03               	btfss	3,2
 10413  120F  2A19               	goto	l5650
 10414                           
 10415                           ;controller.c: 33:         *val = 512;
 10416  1210  0842               	movf	decrement@val,w
 10417  1211  0086               	movwf	6
 10418  1212  0843               	movf	decrement@val+1,w
 10419  1213  0087               	movwf	7
 10420  1214  3000               	movlw	0
 10421  1215  3FC0               	movwi [0]fsr1
 10422  1216  3002               	movlw	2
 10423  1217  3FC1               	movwi [1]fsr1
 10424                           
 10425                           ;controller.c: 34:     } else {
 10426  1218  2A23               	goto	l5652
 10427  1219                     l5650:	
 10428                           
 10429                           ;controller.c: 35:         (*val)--;
 10430  1219  0842               	movf	decrement@val,w
 10431  121A  0086               	movwf	6
 10432  121B  0843               	movf	decrement@val+1,w
 10433  121C  0087               	movwf	7
 10434  121D  30FF               	movlw	255
 10435  121E  0781               	addwf	1,f
 10436  121F  3141               	addfsr 1,1
 10437  1220  30FF               	movlw	255
 10438  1221  3D81               	addwfc	1,f
 10439  1222  317F               	addfsr 1,-1
 10440  1223                     l5652:	
 10441                           
 10442                           ;controller.c: 37:     TM1650_fastPrintNum(*val);
 10443  1223  0842               	movf	decrement@val,w
 10444  1224  0086               	movwf	6
 10445  1225  0843               	movf	decrement@val+1,w
 10446  1226  0087               	movwf	7
 10447  1227  3F40               	moviw [0]fsr1
 10448  1228  00BB               	movwf	TM1650_fastPrintNum@num
 10449  1229  3F41               	moviw [1]fsr1
 10450  122A  00BC               	movwf	TM1650_fastPrintNum@num+1
 10451  122B  3195  257A         	fcall	_TM1650_fastPrintNum
 10452  122D  0008               	return
 10453  122E                     __end_of_decrement:	
 10454                           
 10455                           	psect	text24
 10456  157A                     __ptext24:	
 10457 ;; *************** function _TM1650_fastPrintNum *****************
 10458 ;; Defined at:
 10459 ;;		line 36 in file "tm1650.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;  num             2   27[BANK0 ] unsigned short 
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;  numWrite        2   30[BANK0 ] int 
 10464 ;;  i               2   32[BANK0 ] int 
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10475 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10476 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10477 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10478 ;;Total ram usage:        7 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    9
 10481 ;; This function calls:
 10482 ;;		_TM1650_setDigit
 10483 ;;		___lwdiv
 10484 ;;		___lwmod
 10485 ;; This function is called by:
 10486 ;;		_increment
 10487 ;;		_decrement
 10488 ;;		_numControl_init
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           
 10493                           ;psect for function _TM1650_fastPrintNum
 10494  157A                     _TM1650_fastPrintNum:	
 10495                           
 10496                           ;tm1650.c: 37:     if(num > 9999) {
 10497                           
 10498                           ;incstack = 0
 10499                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10500  157A  3027               	movlw	39
 10501  157B  0140               	movlb	0	; select bank0
 10502  157C  023C               	subwf	TM1650_fastPrintNum@num+1,w
 10503  157D  3010               	movlw	16
 10504  157E  1903               	skipnz
 10505  157F  023B               	subwf	TM1650_fastPrintNum@num,w
 10506  1580  1C03               	skipc
 10507  1581  2DB1               	goto	l5470
 10508                           
 10509                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
 10510  1582  3045               	movlw	69
 10511  1583  00BD               	movwf	??_TM1650_fastPrintNum
 10512  1584  083D               	movf	??_TM1650_fastPrintNum,w
 10513  1585  00B4               	movwf	TM1650_setDigit@data
 10514  1586  3000               	movlw	0
 10515  1587  00B5               	movwf	TM1650_setDigit@dp
 10516  1588  00B6               	movwf	TM1650_setDigit@dp+1
 10517  1589  3000               	movlw	0
 10518  158A  3190  2047  3195   	fcall	_TM1650_setDigit
 10519                           
 10520                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
 10521  158D  3045               	movlw	69
 10522  158E  0140               	movlb	0	; select bank0
 10523  158F  00BD               	movwf	??_TM1650_fastPrintNum
 10524  1590  083D               	movf	??_TM1650_fastPrintNum,w
 10525  1591  00B4               	movwf	TM1650_setDigit@data
 10526  1592  3000               	movlw	0
 10527  1593  00B5               	movwf	TM1650_setDigit@dp
 10528  1594  00B6               	movwf	TM1650_setDigit@dp+1
 10529  1595  3001               	movlw	1
 10530  1596  3190  2047  3195   	fcall	_TM1650_setDigit
 10531                           
 10532                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
 10533  1599  3045               	movlw	69
 10534  159A  0140               	movlb	0	; select bank0
 10535  159B  00BD               	movwf	??_TM1650_fastPrintNum
 10536  159C  083D               	movf	??_TM1650_fastPrintNum,w
 10537  159D  00B4               	movwf	TM1650_setDigit@data
 10538  159E  3000               	movlw	0
 10539  159F  00B5               	movwf	TM1650_setDigit@dp
 10540  15A0  00B6               	movwf	TM1650_setDigit@dp+1
 10541  15A1  3002               	movlw	2
 10542  15A2  3190  2047  3195   	fcall	_TM1650_setDigit
 10543                           
 10544                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
 10545  15A5  3045               	movlw	69
 10546  15A6  0140               	movlb	0	; select bank0
 10547  15A7  00BD               	movwf	??_TM1650_fastPrintNum
 10548  15A8  083D               	movf	??_TM1650_fastPrintNum,w
 10549  15A9  00B4               	movwf	TM1650_setDigit@data
 10550  15AA  3000               	movlw	0
 10551  15AB  00B5               	movwf	TM1650_setDigit@dp
 10552  15AC  00B6               	movwf	TM1650_setDigit@dp+1
 10553  15AD  3003               	movlw	3
 10554  15AE  3190  2047         	fcall	_TM1650_setDigit
 10555                           
 10556                           ;tm1650.c: 42:     } else {
 10557  15B0  0008               	return
 10558  15B1                     l5470:	
 10559                           
 10560                           ;tm1650.c: 43:         int i=0;
 10561  15B1  01C0               	clrf	TM1650_fastPrintNum@i
 10562  15B2  01C1               	clrf	TM1650_fastPrintNum@i+1
 10563                           
 10564                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
 10565  15B3  01C0               	clrf	TM1650_fastPrintNum@i
 10566  15B4  01C1               	clrf	TM1650_fastPrintNum@i+1
 10567  15B5                     l5476:	
 10568                           
 10569                           ;tm1650.c: 45:             int numWrite = num %10;
 10570  15B5  300A               	movlw	10
 10571  15B6  0140               	movlb	0	; select bank0
 10572  15B7  00A0               	movwf	___lwmod@divisor
 10573  15B8  3000               	movlw	0
 10574  15B9  00A1               	movwf	___lwmod@divisor+1
 10575  15BA  083C               	movf	TM1650_fastPrintNum@num+1,w
 10576  15BB  00A3               	movwf	___lwmod@dividend+1
 10577  15BC  083B               	movf	TM1650_fastPrintNum@num,w
 10578  15BD  00A2               	movwf	___lwmod@dividend
 10579  15BE  3192  222E  3195   	fcall	___lwmod
 10580  15C1  0140               	movlb	0	; select bank0
 10581  15C2  0821               	movf	?___lwmod+1,w
 10582  15C3  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
 10583  15C4  0820               	movf	?___lwmod,w
 10584  15C5  00BE               	movwf	TM1650_fastPrintNum@numWrite
 10585                           
 10586                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
 10587  15C6  083E               	movf	TM1650_fastPrintNum@numWrite,w
 10588  15C7  3E30               	addlw	48
 10589  15C8  00BD               	movwf	??_TM1650_fastPrintNum
 10590  15C9  083D               	movf	??_TM1650_fastPrintNum,w
 10591  15CA  00B4               	movwf	TM1650_setDigit@data
 10592  15CB  3000               	movlw	0
 10593  15CC  00B5               	movwf	TM1650_setDigit@dp
 10594  15CD  00B6               	movwf	TM1650_setDigit@dp+1
 10595  15CE  0840               	movf	TM1650_fastPrintNum@i,w
 10596  15CF  3C03               	sublw	3
 10597  15D0  3190  2047  3195   	fcall	_TM1650_setDigit
 10598                           
 10599                           ;tm1650.c: 47:             num = num/10;
 10600  15D3  300A               	movlw	10
 10601  15D4  0140               	movlb	0	; select bank0
 10602  15D5  00A0               	movwf	___lwdiv@divisor
 10603  15D6  3000               	movlw	0
 10604  15D7  00A1               	movwf	___lwdiv@divisor+1
 10605  15D8  083C               	movf	TM1650_fastPrintNum@num+1,w
 10606  15D9  00A3               	movwf	___lwdiv@dividend+1
 10607  15DA  083B               	movf	TM1650_fastPrintNum@num,w
 10608  15DB  00A2               	movwf	___lwdiv@dividend
 10609  15DC  3192  2288  3195   	fcall	___lwdiv
 10610  15DF  0140               	movlb	0	; select bank0
 10611  15E0  0821               	movf	?___lwdiv+1,w
 10612  15E1  00BC               	movwf	TM1650_fastPrintNum@num+1
 10613  15E2  0820               	movf	?___lwdiv,w
 10614  15E3  00BB               	movwf	TM1650_fastPrintNum@num
 10615                           
 10616                           ;tm1650.c: 48:         }
 10617  15E4  3001               	movlw	1
 10618  15E5  07C0               	addwf	TM1650_fastPrintNum@i,f
 10619  15E6  3000               	movlw	0
 10620  15E7  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
 10621  15E8  0841               	movf	TM1650_fastPrintNum@i+1,w
 10622  15E9  3A80               	xorlw	128
 10623  15EA  00BD               	movwf	??_TM1650_fastPrintNum
 10624  15EB  3080               	movlw	128
 10625  15EC  023D               	subwf	??_TM1650_fastPrintNum,w
 10626  15ED  1D03               	skipz
 10627  15EE  2DF1               	goto	u5805
 10628  15EF  3004               	movlw	4
 10629  15F0  0240               	subwf	TM1650_fastPrintNum@i,w
 10630  15F1                     u5805:	
 10631  15F1  1803               	btfsc	3,0
 10632  15F2  0008               	return
 10633  15F3  2DB5               	goto	l5476
 10634  15F4                     __end_of_TM1650_fastPrintNum:	
 10635                           
 10636                           	psect	text25
 10637  122E                     __ptext25:	
 10638 ;; *************** function ___lwmod *****************
 10639 ;; Defined at:
 10640 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 10641 ;; Parameters:    Size  Location     Type
 10642 ;;  divisor         2    0[BANK0 ] unsigned int 
 10643 ;;  dividend        2    2[BANK0 ] unsigned int 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;  counter         1    5[BANK0 ] unsigned char 
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  2    0[BANK0 ] unsigned int 
 10648 ;; Registers used:
 10649 ;;		wreg, status,2, status,0
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10655 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10658 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10659 ;;Total ram usage:        6 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    4
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_TM1650_fastPrintNum
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           
 10670                           ;psect for function ___lwmod
 10671  122E                     ___lwmod:	
 10672                           
 10673                           ;incstack = 0
 10674                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10675  122E  0140               	movlb	0	; select bank0
 10676  122F  0820               	movf	___lwmod@divisor,w
 10677  1230  0421               	iorwf	___lwmod@divisor+1,w
 10678  1231  1903               	btfsc	3,2
 10679  1232  2A56               	goto	l5316
 10680  1233  01A5               	clrf	___lwmod@counter
 10681  1234  0AA5               	incf	___lwmod@counter,f
 10682  1235                     l5306:	
 10683  1235  1BA1               	btfsc	___lwmod@divisor+1,7
 10684  1236  2A41               	goto	l5308
 10685  1237  3001               	movlw	1
 10686  1238                     u5485:	
 10687  1238  35A0               	lslf	___lwmod@divisor,f
 10688  1239  0DA1               	rlf	___lwmod@divisor+1,f
 10689  123A  0B89               	decfsz	9,f
 10690  123B  2A38               	goto	u5485
 10691  123C  3001               	movlw	1
 10692  123D  00A4               	movwf	??___lwmod
 10693  123E  0824               	movf	??___lwmod,w
 10694  123F  07A5               	addwf	___lwmod@counter,f
 10695  1240  2A35               	goto	l5306
 10696  1241                     l5308:	
 10697  1241  0821               	movf	___lwmod@divisor+1,w
 10698  1242  0223               	subwf	___lwmod@dividend+1,w
 10699  1243  1D03               	skipz
 10700  1244  2A47               	goto	u5505
 10701  1245  0820               	movf	___lwmod@divisor,w
 10702  1246  0222               	subwf	___lwmod@dividend,w
 10703  1247                     u5505:	
 10704  1247  1C03               	skipc
 10705  1248  2A4D               	goto	l5312
 10706  1249  0820               	movf	___lwmod@divisor,w
 10707  124A  02A2               	subwf	___lwmod@dividend,f
 10708  124B  0821               	movf	___lwmod@divisor+1,w
 10709  124C  3BA3               	subwfb	___lwmod@dividend+1,f
 10710  124D                     l5312:	
 10711  124D  3001               	movlw	1
 10712  124E                     u5515:	
 10713  124E  36A1               	lsrf	___lwmod@divisor+1,f
 10714  124F  0CA0               	rrf	___lwmod@divisor,f
 10715  1250  0B89               	decfsz	9,f
 10716  1251  2A4E               	goto	u5515
 10717  1252  3001               	movlw	1
 10718  1253  02A5               	subwf	___lwmod@counter,f
 10719  1254  1D03               	btfss	3,2
 10720  1255  2A41               	goto	l5308
 10721  1256                     l5316:	
 10722  1256  0823               	movf	___lwmod@dividend+1,w
 10723  1257  00A1               	movwf	?___lwmod+1
 10724  1258  0822               	movf	___lwmod@dividend,w
 10725  1259  00A0               	movwf	?___lwmod
 10726  125A  0008               	return
 10727  125B                     __end_of___lwmod:	
 10728                           
 10729                           	psect	text26
 10730  1047                     __ptext26:	
 10731 ;; *************** function _TM1650_setDigit *****************
 10732 ;; Defined at:
 10733 ;;		line 24 in file "tm1650.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;  digit           1    wreg     unsigned char 
 10736 ;;  data            1   20[BANK0 ] unsigned char 
 10737 ;;  dp              2   21[BANK0 ] int 
 10738 ;; Auto vars:     Size  Location     Type
 10739 ;;  digit           1   26[BANK0 ] unsigned char 
 10740 ;; Return value:  Size  Location     Type
 10741 ;;                  1    wreg      void 
 10742 ;; Registers used:
 10743 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10744 ;; Tracked objects:
 10745 ;;		On entry : 0/0
 10746 ;;		On exit  : 0/0
 10747 ;;		Unchanged: 0/0
 10748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10749 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10751 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10752 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10753 ;;Total ram usage:        7 bytes
 10754 ;; Hardware stack levels used:    1
 10755 ;; Hardware stack levels required when called:    8
 10756 ;; This function calls:
 10757 ;;		_writeData
 10758 ;; This function is called by:
 10759 ;;		_TM1650_fastPrintNum
 10760 ;;		_MENU_task
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           
 10765                           ;psect for function _TM1650_setDigit
 10766  1047                     _TM1650_setDigit:	
 10767                           
 10768                           ;incstack = 0
 10769                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10770                           ;TM1650_setDigit@digit stored from wreg
 10771  1047  0140               	movlb	0	; select bank0
 10772  1048  00BA               	movwf	TM1650_setDigit@digit
 10773                           
 10774                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
 10775  1049  0834               	movf	TM1650_setDigit@data,w
 10776  104A  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 10777  104B  0084               	movwf	4
 10778  104C  3097               	movlw	high ((_charTable+65504)| (0+32768))
 10779  104D  1803               	skipnc
 10780  104E  3E01               	addlw	1
 10781  104F  0085               	movwf	5
 10782  1050  0800               	movf	0,w	;code access
 10783  1051  00B7               	movwf	??_TM1650_setDigit
 10784  1052  0835               	movf	TM1650_setDigit@dp,w
 10785  1053  00B8               	movwf	??_TM1650_setDigit+1
 10786  1054  3006               	movlw	6
 10787  1055                     u5395:	
 10788  1055  35B8               	lslf	??_TM1650_setDigit+1,f
 10789  1056  3EFF               	addlw	-1
 10790  1057  1D03               	skipz
 10791  1058  2855               	goto	u5395
 10792  1059  3538               	lslf	??_TM1650_setDigit+1,w
 10793  105A  0437               	iorwf	??_TM1650_setDigit,w
 10794  105B  00B9               	movwf	??_TM1650_setDigit+2
 10795  105C  0839               	movf	??_TM1650_setDigit+2,w
 10796  105D  00AE               	movwf	writeData@data
 10797  105E  083A               	movf	TM1650_setDigit@digit,w
 10798  105F  3E34               	addlw	52
 10799  1060  3190  207F         	fcall	_writeData
 10800  1062  0008               	return
 10801  1063                     __end_of_TM1650_setDigit:	
 10802                           
 10803                           	psect	text27
 10804  1F8F                     __ptext27:	
 10805 ;; *************** function _TM1650_enable *****************
 10806 ;; Defined at:
 10807 ;;		line 56 in file "tm1650.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;  enable          1    wreg     _Bool 
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;  enable          1   20[BANK0 ] _Bool 
 10812 ;; Return value:  Size  Location     Type
 10813 ;;                  1    wreg      void 
 10814 ;; Registers used:
 10815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10816 ;; Tracked objects:
 10817 ;;		On entry : 0/0
 10818 ;;		On exit  : 0/0
 10819 ;;		Unchanged: 0/0
 10820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10822 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10824 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10825 ;;Total ram usage:        1 bytes
 10826 ;; Hardware stack levels used:    1
 10827 ;; Hardware stack levels required when called:    8
 10828 ;; This function calls:
 10829 ;;		_writeData
 10830 ;; This function is called by:
 10831 ;;		_TM1650_init
 10832 ;;		_MENU_task
 10833 ;;		_numControl_Set
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           
 10838                           ;psect for function _TM1650_enable
 10839  1F8F                     _TM1650_enable:	
 10840                           
 10841                           ;incstack = 0
 10842                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10843                           ;TM1650_enable@enable stored from wreg
 10844  1F8F  0140               	movlb	0	; select bank0
 10845  1F90  00B4               	movwf	TM1650_enable@enable
 10846                           
 10847                           ;tm1650.c: 57:     if(enable) {
 10848  1F91  0834               	movf	TM1650_enable@enable,w
 10849  1F92  1903               	btfsc	3,2
 10850  1F93  2F9D               	goto	l5584
 10851                           
 10852                           ;tm1650.c: 58:         writeData(0x24, 1);
 10853  1F94  01AE               	clrf	writeData@data
 10854  1F95  0AAE               	incf	writeData@data,f
 10855  1F96  3024               	movlw	36
 10856  1F97  3190  207F         	fcall	_writeData
 10857                           
 10858                           ;tm1650.c: 59:         isOn = 1;
 10859  1F99  0142               	movlb	2	; select bank2
 10860  1F9A  01D3               	clrf	_isOn^(0+256)
 10861  1F9B  0AD3               	incf	_isOn^(0+256),f
 10862                           
 10863                           ;tm1650.c: 60:     } else {
 10864  1F9C  0008               	return
 10865  1F9D                     l5584:	
 10866                           
 10867                           ;tm1650.c: 61:         writeData(0x24, 0);
 10868  1F9D  01AE               	clrf	writeData@data
 10869  1F9E  3024               	movlw	36
 10870  1F9F  3190  207F         	fcall	_writeData
 10871                           
 10872                           ;tm1650.c: 62:         isOn = 0;
 10873  1FA1  0142               	movlb	2	; select bank2
 10874  1FA2  01D3               	clrf	_isOn^(0+256)
 10875  1FA3  0008               	return
 10876  1FA4                     __end_of_TM1650_enable:	
 10877                           
 10878                           	psect	text28
 10879  107F                     __ptext28:	
 10880 ;; *************** function _writeData *****************
 10881 ;; Defined at:
 10882 ;;		line 18 in file "tm1650.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;  address         1    wreg     unsigned char 
 10885 ;;  data            1   14[BANK0 ] unsigned char 
 10886 ;; Auto vars:     Size  Location     Type
 10887 ;;  address         1   18[BANK0 ] unsigned char 
 10888 ;;  status          1   19[BANK0 ] volatile enum E10866
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1    wreg      void 
 10891 ;; Registers used:
 10892 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10898 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10899 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10900 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10901 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10902 ;;Total ram usage:        6 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:    7
 10905 ;; This function calls:
 10906 ;;		_I2C1_MasterWrite
 10907 ;; This function is called by:
 10908 ;;		_TM1650_setDigit
 10909 ;;		_TM1650_enable
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           
 10914                           ;psect for function _writeData
 10915  107F                     _writeData:	
 10916                           
 10917                           ;incstack = 0
 10918                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10919                           ;writeData@address stored from wreg
 10920  107F  0140               	movlb	0	; select bank0
 10921  1080  00B2               	movwf	writeData@address
 10922                           
 10923                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10924  1081  3002               	movlw	2
 10925  1082  00AF               	movwf	??_writeData
 10926  1083  082F               	movf	??_writeData,w
 10927  1084  00B3               	movwf	writeData@status	;volatile
 10928                           
 10929                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
 10930  1085  01A7               	clrf	I2C1_MasterWrite@length
 10931  1086  0AA7               	incf	I2C1_MasterWrite@length,f
 10932  1087  0832               	movf	writeData@address,w
 10933  1088  00AF               	movwf	??_writeData
 10934  1089  01B0               	clrf	??_writeData+1
 10935  108A  082F               	movf	??_writeData,w
 10936  108B  00A8               	movwf	I2C1_MasterWrite@address
 10937  108C  0830               	movf	??_writeData+1,w
 10938  108D  00A9               	movwf	I2C1_MasterWrite@address+1
 10939  108E  3033               	movlw	(low (writeData@status| 0))& (0+255)
 10940  108F  00B1               	movwf	??_writeData+2
 10941  1090  0831               	movf	??_writeData+2,w
 10942  1091  00AA               	movwf	I2C1_MasterWrite@pflag
 10943  1092  302E               	movlw	(low (writeData@data| 0))& (0+255)
 10944  1093  3191  21DA  3190   	fcall	_I2C1_MasterWrite
 10945  1096                     l5254:	
 10946                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
 10947                           
 10948  1096  3002               	movlw	2
 10949  1097  0140               	movlb	0	; select bank0
 10950  1098  0633               	xorwf	writeData@status,w	;volatile
 10951  1099  1D03               	btfss	3,2
 10952  109A  0008               	return
 10953  109B  2896               	goto	l5254
 10954  109C                     __end_of_writeData:	
 10955                           
 10956                           	psect	text29
 10957  11DA                     __ptext29:	
 10958 ;; *************** function _I2C1_MasterWrite *****************
 10959 ;; Defined at:
 10960 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  pdata           1    wreg     PTR unsigned char 
 10963 ;;		 -> writeData@data(1), 
 10964 ;;  length          1    7[BANK0 ] unsigned char 
 10965 ;;  address         2    8[BANK0 ] unsigned short 
 10966 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 10967 ;;		 -> writeData@status(1), 
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 10970 ;;		 -> writeData@data(1), 
 10971 ;; Return value:  Size  Location     Type
 10972 ;;                  1    wreg      void 
 10973 ;; Registers used:
 10974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10980 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10982 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10983 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10984 ;;Total ram usage:        7 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:    6
 10987 ;; This function calls:
 10988 ;;		_I2C1_MasterTRBInsert
 10989 ;;		_I2C1_MasterWriteTRBBuild
 10990 ;; This function is called by:
 10991 ;;		_writeData
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           
 10996                           ;psect for function _I2C1_MasterWrite
 10997  11DA                     _I2C1_MasterWrite:	
 10998                           
 10999                           ;incstack = 0
 11000                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11001                           ;I2C1_MasterWrite@pdata stored from wreg
 11002  11DA  0140               	movlb	0	; select bank0
 11003  11DB  00AD               	movwf	I2C1_MasterWrite@pdata
 11004                           
 11005                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 11006  11DC  0142               	movlb	2	; select bank2
 11007  11DD  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 11008  11DE  29FD               	goto	l5248
 11009                           
 11010                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 11011  11DF  0140               	movlb	0	; select bank0
 11012  11E0  082D               	movf	I2C1_MasterWrite@pdata,w
 11013  11E1  00AB               	movwf	??_I2C1_MasterWrite
 11014  11E2  082B               	movf	??_I2C1_MasterWrite,w
 11015  11E3  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 11016  11E4  0827               	movf	I2C1_MasterWrite@length,w
 11017  11E5  00AC               	movwf	??_I2C1_MasterWrite+1
 11018  11E6  082C               	movf	??_I2C1_MasterWrite+1,w
 11019  11E7  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 11020  11E8  0829               	movf	I2C1_MasterWrite@address+1,w
 11021  11E9  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 11022  11EA  0828               	movf	I2C1_MasterWrite@address,w
 11023  11EB  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 11024  11EC  305A               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 11025  11ED  3191  211C  3191   	fcall	_I2C1_MasterWriteTRBBuild
 11026                           
 11027                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 11028  11F0  305A               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 11029  11F1  0140               	movlb	0	; select bank0
 11030  11F2  00AB               	movwf	??_I2C1_MasterWrite
 11031  11F3  082B               	movf	??_I2C1_MasterWrite,w
 11032  11F4  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 11033  11F5  082A               	movf	I2C1_MasterWrite@pflag,w
 11034  11F6  00AC               	movwf	??_I2C1_MasterWrite+1
 11035  11F7  082C               	movf	??_I2C1_MasterWrite+1,w
 11036  11F8  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 11037  11F9  3001               	movlw	1
 11038  11FA  3187  279D         	fcall	_I2C1_MasterTRBInsert
 11039                           
 11040                           ;mcc_generated_files/i2c1.c: 613:     }
 11041  11FC  0008               	return
 11042  11FD                     l5248:	
 11043                           
 11044                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11045  11FD  0140               	movlb	0	; select bank0
 11046  11FE  082A               	movf	I2C1_MasterWrite@pflag,w
 11047  11FF  0086               	movwf	6
 11048  1200  0187               	clrf	7
 11049  1201  0181               	clrf	1
 11050  1202  0A81               	incf	1,f
 11051  1203  0008               	return
 11052  1204                     __end_of_I2C1_MasterWrite:	
 11053                           
 11054                           	psect	text30
 11055  111C                     __ptext30:	
 11056 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 11057 ;; Defined at:
 11058 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;  ptrb            1    wreg     PTR struct .
 11061 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11062 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 11063 ;;		 -> writeData@data(1), 
 11064 ;;  length          1    1[BANK0 ] unsigned char 
 11065 ;;  address         2    2[BANK0 ] unsigned short 
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;  ptrb            1    6[BANK0 ] PTR struct .
 11068 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  1    wreg      void 
 11071 ;; Registers used:
 11072 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11078 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11079 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11080 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11081 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11082 ;;Total ram usage:        7 bytes
 11083 ;; Hardware stack levels used:    1
 11084 ;; Hardware stack levels required when called:    4
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		_I2C1_MasterWrite
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           
 11093                           ;psect for function _I2C1_MasterWriteTRBBuild
 11094  111C                     _I2C1_MasterWriteTRBBuild:	
 11095                           
 11096                           ;incstack = 0
 11097                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 11098                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 11099  111C  0140               	movlb	0	; select bank0
 11100  111D  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 11101                           
 11102                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 11103  111E  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 11104  111F  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 11105  1120  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 11106  1121  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11107  1122  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 11108  1123  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 11109  1124  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11110  1125  0086               	movwf	6
 11111  1126  3001               	movlw	1	; select bank2/3
 11112  1127  0087               	movwf	7
 11113  1128  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11114  1129  3FC0               	movwi [0]fsr1
 11115  112A  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 11116  112B  3FC1               	movwi [1]fsr1
 11117                           
 11118                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 11119  112C  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 11120  112D  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11121  112E  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11122  112F  3E02               	addlw	2
 11123  1130  0086               	movwf	6
 11124  1131  3001               	movlw	1	; select bank2/3
 11125  1132  0087               	movwf	7
 11126  1133  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11127  1134  0081               	movwf	1
 11128                           
 11129                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 11130  1135  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 11131  1136  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11132  1137  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11133  1138  3E03               	addlw	3
 11134  1139  0086               	movwf	6
 11135  113A  3001               	movlw	1	; select bank2/3
 11136  113B  0087               	movwf	7
 11137  113C  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11138  113D  0081               	movwf	1
 11139  113E  0008               	return
 11140  113F                     __end_of_I2C1_MasterWriteTRBBuild:	
 11141                           
 11142                           	psect	text31
 11143  079D                     __ptext31:	
 11144 ;; *************** function _I2C1_MasterTRBInsert *****************
 11145 ;; Defined at:
 11146 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  count           1    wreg     unsigned char 
 11149 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 11150 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 11151 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 11152 ;;		 -> writeData@status(1), 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  count           1    3[BANK0 ] unsigned char 
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  1    wreg      void 
 11157 ;; Registers used:
 11158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11164 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11167 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11168 ;;Total ram usage:        4 bytes
 11169 ;; Hardware stack levels used:    1
 11170 ;; Hardware stack levels required when called:    5
 11171 ;; This function calls:
 11172 ;;		_I2C1_WaitForLastPacketToComplete
 11173 ;; This function is called by:
 11174 ;;		_I2C1_MasterWrite
 11175 ;;		_I2C1_MasterRead
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179                           
 11180                           ;psect for function _I2C1_MasterTRBInsert
 11181  079D                     _I2C1_MasterTRBInsert:	
 11182                           
 11183                           ;incstack = 0
 11184                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11185                           ;I2C1_MasterTRBInsert@count stored from wreg
 11186  079D  0140               	movlb	0	; select bank0
 11187  079E  00A3               	movwf	I2C1_MasterTRBInsert@count
 11188                           
 11189                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 11190  079F  0142               	movlb	2	; select bank2
 11191  07A0  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 11192  07A1  2FDF               	goto	l5236
 11193                           
 11194                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 11195  07A2  3002               	movlw	2
 11196  07A3  0140               	movlb	0	; select bank0
 11197  07A4  00A2               	movwf	??_I2C1_MasterTRBInsert
 11198  07A5  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11199  07A6  0086               	movwf	6
 11200  07A7  0187               	clrf	7
 11201  07A8  0822               	movf	??_I2C1_MasterTRBInsert,w
 11202  07A9  0081               	movwf	1
 11203                           
 11204                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11205  07AA  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 11206  07AB  00A2               	movwf	??_I2C1_MasterTRBInsert
 11207  07AC  0142               	movlb	2	; select bank2
 11208  07AD  0A20               	incf	_i2c1_object^(0+256),w
 11209  07AE  0086               	movwf	6
 11210  07AF  3001               	movlw	1	; select bank2/3
 11211  07B0  0087               	movwf	7
 11212  07B1  0140               	movlb	0	; select bank0
 11213  07B2  0822               	movf	??_I2C1_MasterTRBInsert,w
 11214  07B3  0081               	movwf	1
 11215                           
 11216                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 11217  07B4  0823               	movf	I2C1_MasterTRBInsert@count,w
 11218  07B5  00A2               	movwf	??_I2C1_MasterTRBInsert
 11219  07B6  0142               	movlb	2	; select bank2
 11220  07B7  0820               	movf	_i2c1_object^(0+256),w
 11221  07B8  0086               	movwf	6
 11222  07B9  3001               	movlw	1	; select bank2/3
 11223  07BA  0087               	movwf	7
 11224  07BB  0140               	movlb	0	; select bank0
 11225  07BC  0822               	movf	??_I2C1_MasterTRBInsert,w
 11226  07BD  0081               	movwf	1
 11227                           
 11228                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 11229  07BE  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11230  07BF  00A2               	movwf	??_I2C1_MasterTRBInsert
 11231  07C0  0142               	movlb	2	; select bank2
 11232  07C1  0820               	movf	_i2c1_object^(0+256),w
 11233  07C2  3E02               	addlw	2
 11234  07C3  0086               	movwf	6
 11235  07C4  3001               	movlw	1	; select bank2/3
 11236  07C5  0087               	movwf	7
 11237  07C6  0140               	movlb	0	; select bank0
 11238  07C7  0822               	movf	??_I2C1_MasterTRBInsert,w
 11239  07C8  0081               	movwf	1
 11240                           
 11241                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 11242  07C9  3003               	movlw	3
 11243  07CA  00A2               	movwf	??_I2C1_MasterTRBInsert
 11244  07CB  0822               	movf	??_I2C1_MasterTRBInsert,w
 11245  07CC  0142               	movlb	2	; select bank2
 11246  07CD  07A0               	addwf	_i2c1_object^(0+256),f
 11247                           
 11248                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 11249  07CE  0820               	movf	_i2c1_object^(0+256),w
 11250  07CF  3A61               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 11251  07D0  1D03               	skipz
 11252  07D1  2FD8               	goto	l5232
 11253                           
 11254                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 11255  07D2  305E               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 11256  07D3  0140               	movlb	0	; select bank0
 11257  07D4  00A2               	movwf	??_I2C1_MasterTRBInsert
 11258  07D5  0822               	movf	??_I2C1_MasterTRBInsert,w
 11259  07D6  0142               	movlb	2	; select bank2
 11260  07D7  00A0               	movwf	_i2c1_object^(0+256)
 11261  07D8                     l5232:	
 11262                           
 11263                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 11264  07D8  10A2               	bcf	(_i2c1_object^(0+256)+2),1
 11265                           
 11266                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 11267  07D9  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 11268  07DA  0620               	xorwf	_i2c1_object^(0+256),w
 11269  07DB  1D03               	skipz
 11270  07DC  2FE5               	goto	l5238
 11271                           
 11272                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 11273  07DD  1422               	bsf	(_i2c1_object^(0+256)+2),0
 11274  07DE  2FE5               	goto	l5238
 11275  07DF                     l5236:	
 11276                           
 11277                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11278  07DF  0140               	movlb	0	; select bank0
 11279  07E0  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11280  07E1  0086               	movwf	6
 11281  07E2  0187               	clrf	7
 11282  07E3  0181               	clrf	1
 11283  07E4  0A81               	incf	1,f
 11284  07E5                     l5238:	
 11285                           
 11286                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 11287  07E5  0140               	movlb	0	; select bank0
 11288  07E6  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11289  07E7  0086               	movwf	6
 11290  07E8  0187               	clrf	7
 11291  07E9  3002               	movlw	2
 11292  07EA  0601               	xorwf	1,w
 11293  07EB  1D03               	btfss	3,2
 11294  07EC  0008               	return
 11295                           
 11296                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 11297  07ED  319E  269D         	fcall	_I2C1_WaitForLastPacketToComplete
 11298                           
 11299                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 11300  07EF  014E               	movlb	14	; select bank14
 11301  07F0  140F               	bsf	15,0	;volatile
 11302  07F1  0008               	return
 11303  07F2                     __end_of_I2C1_MasterTRBInsert:	
 11304                           
 11305                           	psect	text32
 11306  1E9D                     __ptext32:	
 11307 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 11308 ;; Defined at:
 11309 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 11310 ;; Parameters:    Size  Location     Type
 11311 ;;		None
 11312 ;; Auto vars:     Size  Location     Type
 11313 ;;		None
 11314 ;; Return value:  Size  Location     Type
 11315 ;;                  1    wreg      void 
 11316 ;; Registers used:
 11317 ;;		wreg, status,2, status,0
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/0
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11327 ;;Total ram usage:        0 bytes
 11328 ;; Hardware stack levels used:    1
 11329 ;; Hardware stack levels required when called:    4
 11330 ;; This function calls:
 11331 ;;		Nothing
 11332 ;; This function is called by:
 11333 ;;		_I2C1_MasterTRBInsert
 11334 ;; This function uses a non-reentrant model
 11335 ;;
 11336                           
 11337                           
 11338                           ;psect for function _I2C1_WaitForLastPacketToComplete
 11339  1E9D                     _I2C1_WaitForLastPacketToComplete:	
 11340  1E9D                     l5218:	
 11341                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11342                           
 11343                           ;incstack = 0
 11344                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 11345                           
 11346                           
 11347                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11348  1E9D  0142               	movlb	2	; select bank2
 11349  1E9E  0858               	movf	_i2c1_state^(0+256),w
 11350  1E9F  1903               	btfsc	3,2
 11351  1EA0  0008               	return
 11352  1EA1  2E9D               	goto	l5218
 11353  1EA2                     __end_of_I2C1_WaitForLastPacketToComplete:	
 11354                           
 11355                           	psect	text33
 11356  10FB                     __ptext33:	
 11357 ;; *************** function _BUTTONS_isClicked *****************
 11358 ;; Defined at:
 11359 ;;		line 74 in file "buttons.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  button          1    wreg     PTR struct .
 11362 ;;		 -> buttons(32), NULL(0), 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  button          1    3[BANK0 ] PTR struct .
 11365 ;;		 -> buttons(32), NULL(0), 
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  2    0[BANK0 ] int 
 11368 ;; Registers used:
 11369 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11375 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11378 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11379 ;;Total ram usage:        4 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    4
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_menuButtons
 11386 ;;		_numControl_Set
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           
 11391                           ;psect for function _BUTTONS_isClicked
 11392  10FB                     _BUTTONS_isClicked:	
 11393                           
 11394                           ;incstack = 0
 11395                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 11396                           ;BUTTONS_isClicked@button stored from wreg
 11397  10FB  0140               	movlb	0	; select bank0
 11398  10FC  00A3               	movwf	BUTTONS_isClicked@button
 11399                           
 11400                           ;buttons.c: 75:     if (button->event == EVENT_PRESSED) {
 11401  10FD  0823               	movf	BUTTONS_isClicked@button,w
 11402  10FE  3E05               	addlw	5
 11403  10FF  0086               	movwf	6
 11404  1100  3002               	movlw	2	; select bank4/5
 11405  1101  0087               	movwf	7
 11406  1102  0301               	decf	1,w
 11407  1103  1D03               	btfss	3,2
 11408  1104  2910               	goto	l5598
 11409                           
 11410                           ;buttons.c: 76:         button->event = EVENT_IDLE;
 11411  1105  0823               	movf	BUTTONS_isClicked@button,w
 11412  1106  3E05               	addlw	5
 11413  1107  0086               	movwf	6
 11414  1108  3002               	movlw	2	; select bank4/5
 11415  1109  0087               	movwf	7
 11416  110A  0181               	clrf	1
 11417  110B                     l5592:	
 11418                           
 11419                           ;buttons.c: 77:         return 1;
 11420  110B  3001               	movlw	1
 11421  110C  00A0               	movwf	?_BUTTONS_isClicked
 11422  110D  3000               	movlw	0
 11423  110E  00A1               	movwf	?_BUTTONS_isClicked+1
 11424  110F  0008               	return
 11425  1110                     l5598:	
 11426  1110  0823               	movf	BUTTONS_isClicked@button,w
 11427  1111  3E05               	addlw	5
 11428  1112  0086               	movwf	6
 11429  1113  3002               	movlw	2	; select bank4/5
 11430  1114  0087               	movwf	7
 11431  1115  3002               	movlw	2
 11432  1116  0601               	xorwf	1,w
 11433  1117  1903               	btfsc	3,2
 11434  1118  290B               	goto	l5592
 11435                           
 11436                           ;buttons.c: 81:     return 0;
 11437  1119  01A0               	clrf	?_BUTTONS_isClicked
 11438  111A  01A1               	clrf	?_BUTTONS_isClicked+1
 11439  111B  0008               	return
 11440  111C                     __end_of_BUTTONS_isClicked:	
 11441                           
 11442                           	psect	text34
 11443  142A                     __ptext34:	
 11444 ;; *************** function _LED_DMX *****************
 11445 ;; Defined at:
 11446 ;;		line 140 in file "led.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;		None
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;		None
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11462 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11463 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11464 ;;Total ram usage:       11 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; Hardware stack levels required when called:    5
 11467 ;; This function calls:
 11468 ;;		_LED_setColor
 11469 ;; This function is called by:
 11470 ;;		_MENU_task
 11471 ;; This function uses a non-reentrant model
 11472 ;;
 11473                           
 11474                           
 11475                           ;psect for function _LED_DMX
 11476  142A                     _LED_DMX:	
 11477                           
 11478                           ;led.c: 141:     LED_setColor(dmxData[address+1], dmxData[address+2], dmxData[address+3]
      +                          , dmxData[address+4]);
 11479                           
 11480                           ;incstack = 0
 11481                           ; Regs used in _LED_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11482  142A  30F1               	movlw	241
 11483  142B  0140               	movlb	0	; select bank0
 11484  142C  00B6               	movwf	??_LED_DMX
 11485  142D  3025               	movlw	37
 11486  142E  00B7               	movwf	??_LED_DMX+1
 11487  142F  0141               	movlb	1	; select bank1
 11488  1430  086E               	movf	_address^(0+128),w
 11489  1431  0140               	movlb	0	; select bank0
 11490  1432  0736               	addwf	??_LED_DMX,w
 11491  1433  0086               	movwf	6
 11492  1434  0141               	movlb	1	; select bank1
 11493  1435  086F               	movf	(_address+1)^(0+128),w
 11494  1436  0140               	movlb	0	; select bank0
 11495  1437  3D37               	addwfc	??_LED_DMX+1,w
 11496  1438  0087               	movwf	7
 11497  1439  0801               	movf	1,w
 11498  143A  00B8               	movwf	??_LED_DMX+2
 11499  143B  0838               	movf	??_LED_DMX+2,w
 11500  143C  00A0               	movwf	LED_setColor@green
 11501  143D  30F2               	movlw	242
 11502  143E  00B9               	movwf	??_LED_DMX+3
 11503  143F  3025               	movlw	37
 11504  1440  00BA               	movwf	??_LED_DMX+4
 11505  1441  0141               	movlb	1	; select bank1
 11506  1442  086E               	movf	_address^(0+128),w
 11507  1443  0140               	movlb	0	; select bank0
 11508  1444  0739               	addwf	??_LED_DMX+3,w
 11509  1445  0086               	movwf	6
 11510  1446  0141               	movlb	1	; select bank1
 11511  1447  086F               	movf	(_address+1)^(0+128),w
 11512  1448  0140               	movlb	0	; select bank0
 11513  1449  3D3A               	addwfc	??_LED_DMX+4,w
 11514  144A  0087               	movwf	7
 11515  144B  0801               	movf	1,w
 11516  144C  00BB               	movwf	??_LED_DMX+5
 11517  144D  083B               	movf	??_LED_DMX+5,w
 11518  144E  00A1               	movwf	LED_setColor@white
 11519  144F  30F3               	movlw	243
 11520  1450  00BC               	movwf	??_LED_DMX+6
 11521  1451  3025               	movlw	37
 11522  1452  00BD               	movwf	??_LED_DMX+7
 11523  1453  0141               	movlb	1	; select bank1
 11524  1454  086E               	movf	_address^(0+128),w
 11525  1455  0140               	movlb	0	; select bank0
 11526  1456  073C               	addwf	??_LED_DMX+6,w
 11527  1457  0086               	movwf	6
 11528  1458  0141               	movlb	1	; select bank1
 11529  1459  086F               	movf	(_address+1)^(0+128),w
 11530  145A  0140               	movlb	0	; select bank0
 11531  145B  3D3D               	addwfc	??_LED_DMX+7,w
 11532  145C  0087               	movwf	7
 11533  145D  0801               	movf	1,w
 11534  145E  00BE               	movwf	??_LED_DMX+8
 11535  145F  083E               	movf	??_LED_DMX+8,w
 11536  1460  00A2               	movwf	LED_setColor@blue
 11537  1461  30F0               	movlw	240
 11538  1462  00BF               	movwf	??_LED_DMX+9
 11539  1463  3025               	movlw	37
 11540  1464  00C0               	movwf	??_LED_DMX+10
 11541  1465  0141               	movlb	1	; select bank1
 11542  1466  086E               	movf	_address^(0+128),w
 11543  1467  0140               	movlb	0	; select bank0
 11544  1468  073F               	addwf	??_LED_DMX+9,w
 11545  1469  0086               	movwf	6
 11546  146A  0141               	movlb	1	; select bank1
 11547  146B  086F               	movf	(_address+1)^(0+128),w
 11548  146C  0140               	movlb	0	; select bank0
 11549  146D  3D40               	addwfc	??_LED_DMX+10,w
 11550  146E  0087               	movwf	7
 11551  146F  0801               	movf	1,w
 11552  1470  3193  235F         	fcall	_LED_setColor
 11553  1472  0008               	return
 11554  1473                     __end_of_LED_DMX:	
 11555                           
 11556                           	psect	text35
 11557  1000                     __ptext35:	
 11558 ;; *************** function _LED_Beat *****************
 11559 ;; Defined at:
 11560 ;;		line 144 in file "led.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;		None
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;		None
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  1    wreg      void 
 11567 ;; Registers used:
 11568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/0
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11578 ;;Total ram usage:        0 bytes
 11579 ;; Hardware stack levels used:    1
 11580 ;; Hardware stack levels required when called:    9
 11581 ;; This function calls:
 11582 ;;		_BEAT_detected
 11583 ;;		_fadeColor
 11584 ;; This function is called by:
 11585 ;;		_MENU_task
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           
 11590                           ;psect for function _LED_Beat
 11591  1000                     _LED_Beat:	
 11592                           
 11593                           ;led.c: 145:     if(BEAT_detected()) {
 11594                           
 11595                           ;incstack = 0
 11596                           ; Regs used in _LED_Beat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11597  1000  319E  26DD  3190   	fcall	_BEAT_detected
 11598  1003  3A00               	xorlw	0
 11599  1004  1903               	skipnz
 11600  1005  2809               	goto	l5944
 11601                           
 11602                           ;led.c: 146:         changeColor = 1;
 11603  1006  0142               	movlb	2	; select bank2
 11604  1007  01C9               	clrf	_changeColor^(0+256)
 11605  1008  0AC9               	incf	_changeColor^(0+256),f
 11606  1009                     l5944:	
 11607                           
 11608                           ;led.c: 148:     if(changeColor) {
 11609  1009  0142               	movlb	2	; select bank2
 11610  100A  0849               	movf	_changeColor^(0+256),w
 11611  100B  1903               	btfsc	3,2
 11612  100C  0008               	return
 11613                           
 11614                           ;led.c: 149:         fadeColor();
 11615  100D  3194  24BE         	fcall	_fadeColor
 11616  100F  0008               	return
 11617  1010                     __end_of_LED_Beat:	
 11618                           
 11619                           	psect	text36
 11620  14BE                     __ptext36:	
 11621 ;; *************** function _fadeColor *****************
 11622 ;; Defined at:
 11623 ;;		line 116 in file "led.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;		None
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;  time            2   60[BANK1 ] unsigned short 
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  1    wreg      void 
 11630 ;; Registers used:
 11631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11638 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11639 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11640 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11641 ;;Total ram usage:        4 bytes
 11642 ;; Hardware stack levels used:    1
 11643 ;; Hardware stack levels required when called:    8
 11644 ;; This function calls:
 11645 ;;		_CLOCK_getTime
 11646 ;;		_LED_setHSL
 11647 ;; This function is called by:
 11648 ;;		_LED_Beat
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           
 11653                           ;psect for function _fadeColor
 11654  14BE                     _fadeColor:	
 11655                           
 11656                           ;led.c: 117:     time_t time = CLOCK_getTime();
 11657                           
 11658                           ;incstack = 0
 11659                           ; Regs used in _fadeColor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11660  14BE  319E  26CB  3194   	fcall	_CLOCK_getTime
 11661  14C1  0140               	movlb	0	; select bank0
 11662  14C2  0821               	movf	?_CLOCK_getTime+1,w
 11663  14C3  0141               	movlb	1	; select bank1
 11664  14C4  00DD               	movwf	(fadeColor@time+1)^(0+128)
 11665  14C5  0140               	movlb	0	; select bank0
 11666  14C6  0820               	movf	?_CLOCK_getTime,w
 11667  14C7  0141               	movlb	1	; select bank1
 11668  14C8  00DC               	movwf	fadeColor@time^(0+128)
 11669                           
 11670                           ;led.c: 119:     if (time - lastTime < 10)
 11671  14C9  0142               	movlb	2	; select bank2
 11672  14CA  0835               	movf	led@lastTime^(0+256),w
 11673  14CB  0141               	movlb	1	; select bank1
 11674  14CC  025C               	subwf	fadeColor@time^(0+128),w
 11675  14CD  00DA               	movwf	??_fadeColor^(0+128)
 11676  14CE  0142               	movlb	2	; select bank2
 11677  14CF  0836               	movf	(led@lastTime+1)^(0+256),w
 11678  14D0  0141               	movlb	1	; select bank1
 11679  14D1  3B5D               	subwfb	(fadeColor@time+1)^(0+128),w
 11680  14D2  00DB               	movwf	(??_fadeColor+1)^(0+128)
 11681  14D3  3000               	movlw	0
 11682  14D4  025B               	subwf	(??_fadeColor+1)^(0+128),w
 11683  14D5  300A               	movlw	10
 11684  14D6  1903               	skipnz
 11685  14D7  025A               	subwf	??_fadeColor^(0+128),w
 11686  14D8  1C03               	btfss	3,0
 11687  14D9  0008               	return
 11688                           
 11689                           ;led.c: 122:     lastTime = time;
 11690  14DA  085D               	movf	(fadeColor@time+1)^(0+128),w
 11691  14DB  0142               	movlb	2	; select bank2
 11692  14DC  00B6               	movwf	(led@lastTime+1)^(0+256)
 11693  14DD  0141               	movlb	1	; select bank1
 11694  14DE  085C               	movf	fadeColor@time^(0+128),w
 11695  14DF  0142               	movlb	2	; select bank2
 11696  14E0  00B5               	movwf	led@lastTime^(0+256)
 11697                           
 11698                           ;led.c: 124:     if(color.H == 360) {
 11699  14E1  3068               	movlw	104
 11700  14E2  0143               	movlb	3	; select bank3
 11701  14E3  0650               	xorwf	_color^(0+384),w
 11702  14E4  1D03               	skipz
 11703  14E5  2CEC               	goto	l5700
 11704  14E6  0351               	decf	(_color+1)^(0+384),w
 11705  14E7  1D03               	btfss	3,2
 11706  14E8  2CEC               	goto	l5700
 11707                           
 11708                           ;led.c: 125:         color.H = 0;
 11709  14E9  01D0               	clrf	_color^(0+384)
 11710  14EA  01D1               	clrf	(_color+1)^(0+384)
 11711                           
 11712                           ;led.c: 126:     } else {
 11713  14EB  2CF0               	goto	l1000
 11714  14EC                     l5700:	
 11715                           
 11716                           ;led.c: 127:         color.H += 1;
 11717  14EC  3001               	movlw	1
 11718  14ED  07D0               	addwf	_color^(0+384),f
 11719  14EE  3000               	movlw	0
 11720  14EF  3DD1               	addwfc	(_color+1)^(0+384),f
 11721  14F0                     l1000:	
 11722                           ;led.c: 128:     }
 11723                           
 11724                           
 11725                           ;led.c: 129:     fadeAmmount -= 1;
 11726  14F0  30FF               	movlw	255
 11727  14F1  0142               	movlb	2	; select bank2
 11728  14F2  07E3               	addwf	_fadeAmmount^(0+256),f
 11729  14F3  30FF               	movlw	255
 11730  14F4  3DE4               	addwfc	(_fadeAmmount+1)^(0+256),f
 11731                           
 11732                           ;led.c: 130:     if(fadeAmmount == 0) {
 11733  14F5  0863               	movf	_fadeAmmount^(0+256),w
 11734  14F6  0464               	iorwf	(_fadeAmmount+1)^(0+256),w
 11735  14F7  1D03               	btfss	3,2
 11736  14F8  2CFE               	goto	l5708
 11737                           
 11738                           ;led.c: 131:         fadeAmmount = 20;
 11739  14F9  3014               	movlw	20
 11740  14FA  00E3               	movwf	_fadeAmmount^(0+256)
 11741  14FB  3000               	movlw	0
 11742  14FC  00E4               	movwf	(_fadeAmmount^(0+256)+1)
 11743                           
 11744                           ;led.c: 132:         changeColor = 0;
 11745  14FD  01C9               	clrf	_changeColor^(0+256)
 11746  14FE                     l5708:	
 11747                           
 11748                           ;led.c: 134:     LED_setHSL(color);
 11749  14FE  30D0               	movlw	low _color
 11750  14FF  0086               	movwf	6
 11751  1500  3001               	movlw	high _color
 11752  1501  0087               	movwf	7
 11753  1502  30AF               	movlw	low LED_setHSL@hsl
 11754  1503  0084               	movwf	4
 11755  1504  3000               	movlw	high LED_setHSL@hsl
 11756  1505  0085               	movwf	5
 11757  1506  300A               	movlw	10
 11758  1507  0141               	movlb	1	; select bank1
 11759  1508  00DA               	movwf	??_fadeColor^(0+128)
 11760  1509                     u6070:	
 11761  1509  0016               	moviw fsr1++
 11762  150A  001A               	movwi fsr0++
 11763  150B  0BDA               	decfsz	??_fadeColor^(0+128),f
 11764  150C  2D09               	goto	u6070
 11765  150D  3180  2099         	fcall	_LED_setHSL
 11766  150F  0008               	return
 11767  1510                     __end_of_fadeColor:	
 11768                           
 11769                           	psect	text37
 11770  0099                     __ptext37:	
 11771 ;; *************** function _LED_setHSL *****************
 11772 ;; Defined at:
 11773 ;;		line 87 in file "led.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;  hsl            10   15[BANK1 ] struct HSL
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;  v2              4   51[BANK1 ] float 
 11778 ;;  hue             4   47[BANK1 ] float 
 11779 ;;  v1              4   43[BANK1 ] float 
 11780 ;;  rgb             3   55[BANK1 ] struct RGB
 11781 ;; Return value:  Size  Location     Type
 11782 ;;                  1    wreg      void 
 11783 ;; Registers used:
 11784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11785 ;; Tracked objects:
 11786 ;;		On entry : 0/0
 11787 ;;		On exit  : 0/0
 11788 ;;		Unchanged: 0/0
 11789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11790 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11791 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11792 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11793 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11794 ;;Total ram usage:       43 bytes
 11795 ;; Hardware stack levels used:    1
 11796 ;; Hardware stack levels required when called:    7
 11797 ;; This function calls:
 11798 ;;		_HueToRGB
 11799 ;;		_LED_setColor
 11800 ;;		___fladd
 11801 ;;		___fldiv
 11802 ;;		___fleq
 11803 ;;		___flge
 11804 ;;		___flmul
 11805 ;;		___flsub
 11806 ;;		___fltol
 11807 ;;		___xxtofl
 11808 ;; This function is called by:
 11809 ;;		_fadeColor
 11810 ;;		_cycleColors
 11811 ;;		_pulseColors
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           
 11816                           ;psect for function _LED_setHSL
 11817  0099                     _LED_setHSL:	
 11818                           
 11819                           ;led.c: 88:  struct RGB rgb;;led.c: 90:  if (hsl.S == 0)
 11820                           
 11821                           ;incstack = 0
 11822                           ; Regs used in _LED_setHSL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11823  0099  3002               	movlw	2
 11824  009A  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 11825  009B  0086               	movwf	6
 11826  009C  0187               	clrf	7
 11827  009D  3F40               	moviw [0]fsr1
 11828  009E  0140               	movlb	0	; select bank0
 11829  009F  00A0               	movwf	___fleq@ff1
 11830  00A0  3F41               	moviw [1]fsr1
 11831  00A1  00A1               	movwf	___fleq@ff1+1
 11832  00A2  3F42               	moviw [2]fsr1
 11833  00A3  00A2               	movwf	___fleq@ff1+2
 11834  00A4  3F43               	moviw [3]fsr1
 11835  00A5  00A3               	movwf	___fleq@ff1+3
 11836  00A6  3000               	movlw	0
 11837  00A7  00A7               	movwf	___fleq@ff2+3
 11838  00A8  3000               	movlw	0
 11839  00A9  00A6               	movwf	___fleq@ff2+2
 11840  00AA  3000               	movlw	0
 11841  00AB  00A5               	movwf	___fleq@ff2+1
 11842  00AC  3000               	movlw	0
 11843  00AD  00A4               	movwf	___fleq@ff2
 11844  00AE  3193  23E1  3180   	fcall	___fleq
 11845  00B1  1C03               	btfss	3,0
 11846  00B2  28F1               	goto	l5612
 11847                           
 11848                           ;led.c: 91:  {;led.c: 92:   rgb.R = rgb.G = rgb.B = (unsigned char)(hsl.L * 255);
 11849  00B3  3001               	movlw	1
 11850  00B4  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 11851  00B5  0086               	movwf	6
 11852  00B6  0187               	clrf	7
 11853  00B7  3002               	movlw	2
 11854  00B8  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 11855  00B9  0084               	movwf	4
 11856  00BA  0185               	clrf	5
 11857  00BB  0141               	movlb	1	; select bank1
 11858  00BC  0838               	movf	((LED_setHSL@hsl+3)^(0+128)+6),w
 11859  00BD  0140               	movlb	0	; select bank0
 11860  00BE  00C4               	movwf	___flmul@a+3
 11861  00BF  0141               	movlb	1	; select bank1
 11862  00C0  0837               	movf	((LED_setHSL@hsl+2)^(0+128)+6),w
 11863  00C1  0140               	movlb	0	; select bank0
 11864  00C2  00C3               	movwf	___flmul@a+2
 11865  00C3  0141               	movlb	1	; select bank1
 11866  00C4  0836               	movf	((LED_setHSL@hsl+1)^(0+128)+6),w
 11867  00C5  0140               	movlb	0	; select bank0
 11868  00C6  00C2               	movwf	___flmul@a+1
 11869  00C7  0141               	movlb	1	; select bank1
 11870  00C8  0835               	movf	(LED_setHSL@hsl^(0+128)+6),w
 11871  00C9  0140               	movlb	0	; select bank0
 11872  00CA  00C1               	movwf	___flmul@a
 11873  00CB  3043               	movlw	67
 11874  00CC  00C0               	movwf	___flmul@b+3
 11875  00CD  307F               	movlw	127
 11876  00CE  00BF               	movwf	___flmul@b+2
 11877  00CF  3000               	movlw	0
 11878  00D0  00BE               	movwf	___flmul@b+1
 11879  00D1  3000               	movlw	0
 11880  00D2  00BD               	movwf	___flmul@b
 11881  00D3  3183  23F7  3180   	fcall	___flmul
 11882  00D6  0140               	movlb	0	; select bank0
 11883  00D7  0840               	movf	?___flmul+3,w
 11884  00D8  0141               	movlb	1	; select bank1
 11885  00D9  00A7               	movwf	(___fltol@f1+3)^(0+128)
 11886  00DA  0140               	movlb	0	; select bank0
 11887  00DB  083F               	movf	?___flmul+2,w
 11888  00DC  0141               	movlb	1	; select bank1
 11889  00DD  00A6               	movwf	(___fltol@f1+2)^(0+128)
 11890  00DE  0140               	movlb	0	; select bank0
 11891  00DF  083E               	movf	?___flmul+1,w
 11892  00E0  0141               	movlb	1	; select bank1
 11893  00E1  00A5               	movwf	(___fltol@f1+1)^(0+128)
 11894  00E2  0140               	movlb	0	; select bank0
 11895  00E3  083D               	movf	?___flmul,w
 11896  00E4  0141               	movlb	1	; select bank1
 11897  00E5  00A4               	movwf	___fltol@f1^(0+128)
 11898  00E6  3188  2000  3180   	fcall	___fltol
 11899  00E9  0141               	movlb	1	; select bank1
 11900  00EA  0824               	movf	?___fltol^(0+128),w
 11901  00EB  3F80               	movwi [0]fsr0
 11902  00EC  3FC0               	movwi [0]fsr1
 11903  00ED  00B9               	movwf	??_LED_setHSL^(0+128)
 11904  00EE  0839               	movf	??_LED_setHSL^(0+128),w
 11905  00EF  00D7               	movwf	LED_setHSL@rgb^(0+128)
 11906                           
 11907                           ;led.c: 93:  }
 11908  00F0  2BE6               	goto	l5636
 11909  00F1                     l5612:	
 11910                           
 11911                           ;led.c: 95:  {;led.c: 96:   float v1, v2;;led.c: 97:   float hue = (float)hsl.H / 360;
 11912  00F1  3043               	movlw	67
 11913  00F2  0140               	movlb	0	; select bank0
 11914  00F3  00B1               	movwf	___fldiv@a+3
 11915  00F4  30B4               	movlw	180
 11916  00F5  00B0               	movwf	___fldiv@a+2
 11917  00F6  3000               	movlw	0
 11918  00F7  00AF               	movwf	___fldiv@a+1
 11919  00F8  3000               	movlw	0
 11920  00F9  00AE               	movwf	___fldiv@a
 11921  00FA  0141               	movlb	1	; select bank1
 11922  00FB  082F               	movf	LED_setHSL@hsl^(0+128),w
 11923  00FC  0140               	movlb	0	; select bank0
 11924  00FD  00A0               	movwf	___xxtofl@val
 11925  00FE  0141               	movlb	1	; select bank1
 11926  00FF  0830               	movf	(LED_setHSL@hsl+1)^(0+128),w
 11927  0100  0140               	movlb	0	; select bank0
 11928  0101  00A1               	movwf	___xxtofl@val+1
 11929  0102  0D89               	rlf	9,f
 11930  0103  3B89               	subwfb	9,f
 11931  0104  0989               	comf	9,f
 11932  0105  00A2               	movwf	___xxtofl@val+2
 11933  0106  00A3               	movwf	___xxtofl@val+3
 11934  0107  3001               	movlw	1
 11935  0108  3197  276A  3180   	fcall	___xxtofl
 11936  010B  0140               	movlb	0	; select bank0
 11937  010C  0823               	movf	?___xxtofl+3,w
 11938  010D  00B5               	movwf	___fldiv@b+3
 11939  010E  0822               	movf	?___xxtofl+2,w
 11940  010F  00B4               	movwf	___fldiv@b+2
 11941  0110  0821               	movf	?___xxtofl+1,w
 11942  0111  00B3               	movwf	___fldiv@b+1
 11943  0112  0820               	movf	?___xxtofl,w
 11944  0113  00B2               	movwf	___fldiv@b
 11945  0114  3186  2623  3180   	fcall	___fldiv
 11946  0117  0140               	movlb	0	; select bank0
 11947  0118  0831               	movf	?___fldiv+3,w
 11948  0119  0141               	movlb	1	; select bank1
 11949  011A  00D2               	movwf	(LED_setHSL@hue+3)^(0+128)
 11950  011B  0140               	movlb	0	; select bank0
 11951  011C  0830               	movf	?___fldiv+2,w
 11952  011D  0141               	movlb	1	; select bank1
 11953  011E  00D1               	movwf	(LED_setHSL@hue+2)^(0+128)
 11954  011F  0140               	movlb	0	; select bank0
 11955  0120  082F               	movf	?___fldiv+1,w
 11956  0121  0141               	movlb	1	; select bank1
 11957  0122  00D0               	movwf	(LED_setHSL@hue+1)^(0+128)
 11958  0123  0140               	movlb	0	; select bank0
 11959  0124  082E               	movf	?___fldiv,w
 11960  0125  0141               	movlb	1	; select bank1
 11961  0126  00CF               	movwf	LED_setHSL@hue^(0+128)
 11962                           
 11963                           ;led.c: 99:   v2 = (hsl.L < 0.5) ? (hsl.L * (1 + hsl.S)) : ((hsl.L + hsl.S) - (hsl.L * h
      +                          sl.S));
 11964  0127  3006               	movlw	6
 11965  0128  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 11966  0129  0086               	movwf	6
 11967  012A  0187               	clrf	7
 11968  012B  3F40               	moviw [0]fsr1
 11969  012C  0140               	movlb	0	; select bank0
 11970  012D  00D7               	movwf	___flge@ff1
 11971  012E  3F41               	moviw [1]fsr1
 11972  012F  00D8               	movwf	___flge@ff1+1
 11973  0130  3F42               	moviw [2]fsr1
 11974  0131  00D9               	movwf	___flge@ff1+2
 11975  0132  3F43               	moviw [3]fsr1
 11976  0133  00DA               	movwf	___flge@ff1+3
 11977  0134  303F               	movlw	63
 11978  0135  00DE               	movwf	___flge@ff2+3
 11979  0136  3000               	movlw	0
 11980  0137  00DD               	movwf	___flge@ff2+2
 11981  0138  3000               	movlw	0
 11982  0139  00DC               	movwf	___flge@ff2+1
 11983  013A  3000               	movlw	0
 11984  013B  00DB               	movwf	___flge@ff2
 11985  013C  3195  25F4  3180   	fcall	___flge
 11986  013F  1C03               	btfss	3,0
 11987  0140  29B4               	goto	l5618
 11988  0141  3002               	movlw	2
 11989  0142  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 11990  0143  0086               	movwf	6
 11991  0144  0187               	clrf	7
 11992  0145  3F40               	moviw [0]fsr1
 11993  0146  0140               	movlb	0	; select bank0
 11994  0147  00A9               	movwf	___fladd@b
 11995  0148  3F41               	moviw [1]fsr1
 11996  0149  00AA               	movwf	___fladd@b+1
 11997  014A  3F42               	moviw [2]fsr1
 11998  014B  00AB               	movwf	___fladd@b+2
 11999  014C  3F43               	moviw [3]fsr1
 12000  014D  00AC               	movwf	___fladd@b+3
 12001  014E  3006               	movlw	6
 12002  014F  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12003  0150  0086               	movwf	6
 12004  0151  0187               	clrf	7
 12005  0152  3F40               	moviw [0]fsr1
 12006  0153  00AD               	movwf	___fladd@a
 12007  0154  3F41               	moviw [1]fsr1
 12008  0155  00AE               	movwf	___fladd@a+1
 12009  0156  3F42               	moviw [2]fsr1
 12010  0157  00AF               	movwf	___fladd@a+2
 12011  0158  3F43               	moviw [3]fsr1
 12012  0159  00B0               	movwf	___fladd@a+3
 12013  015A  318C  243A  3180   	fcall	___fladd
 12014  015D  0140               	movlb	0	; select bank0
 12015  015E  082C               	movf	?___fladd+3,w
 12016  015F  0141               	movlb	1	; select bank1
 12017  0160  00BE               	movwf	(_LED_setHSL$2859+3)^(0+128)
 12018  0161  0140               	movlb	0	; select bank0
 12019  0162  082B               	movf	?___fladd+2,w
 12020  0163  0141               	movlb	1	; select bank1
 12021  0164  00BD               	movwf	(_LED_setHSL$2859+2)^(0+128)
 12022  0165  0140               	movlb	0	; select bank0
 12023  0166  082A               	movf	?___fladd+1,w
 12024  0167  0141               	movlb	1	; select bank1
 12025  0168  00BC               	movwf	(_LED_setHSL$2859+1)^(0+128)
 12026  0169  0140               	movlb	0	; select bank0
 12027  016A  0829               	movf	?___fladd,w
 12028  016B  0141               	movlb	1	; select bank1
 12029  016C  00BB               	movwf	_LED_setHSL$2859^(0+128)
 12030  016D  3002               	movlw	2
 12031  016E  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12032  016F  0086               	movwf	6
 12033  0170  0187               	clrf	7
 12034  0171  3F40               	moviw [0]fsr1
 12035  0172  0140               	movlb	0	; select bank0
 12036  0173  00BD               	movwf	___flmul@b
 12037  0174  3F41               	moviw [1]fsr1
 12038  0175  00BE               	movwf	___flmul@b+1
 12039  0176  3F42               	moviw [2]fsr1
 12040  0177  00BF               	movwf	___flmul@b+2
 12041  0178  3F43               	moviw [3]fsr1
 12042  0179  00C0               	movwf	___flmul@b+3
 12043  017A  3006               	movlw	6
 12044  017B  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12045  017C  0086               	movwf	6
 12046  017D  0187               	clrf	7
 12047  017E  3F40               	moviw [0]fsr1
 12048  017F  00C1               	movwf	___flmul@a
 12049  0180  3F41               	moviw [1]fsr1
 12050  0181  00C2               	movwf	___flmul@a+1
 12051  0182  3F42               	moviw [2]fsr1
 12052  0183  00C3               	movwf	___flmul@a+2
 12053  0184  3F43               	moviw [3]fsr1
 12054  0185  00C4               	movwf	___flmul@a+3
 12055  0186  3183  23F7  3180   	fcall	___flmul
 12056  0189  0140               	movlb	0	; select bank0
 12057  018A  0840               	movf	?___flmul+3,w
 12058  018B  00DA               	movwf	___flsub@a+3
 12059  018C  083F               	movf	?___flmul+2,w
 12060  018D  00D9               	movwf	___flsub@a+2
 12061  018E  083E               	movf	?___flmul+1,w
 12062  018F  00D8               	movwf	___flsub@a+1
 12063  0190  083D               	movf	?___flmul,w
 12064  0191  00D7               	movwf	___flsub@a
 12065  0192  0141               	movlb	1	; select bank1
 12066  0193  083E               	movf	(_LED_setHSL$2859+3)^(0+128),w
 12067  0194  0140               	movlb	0	; select bank0
 12068  0195  00DE               	movwf	___flsub@b+3
 12069  0196  0141               	movlb	1	; select bank1
 12070  0197  083D               	movf	(_LED_setHSL$2859+2)^(0+128),w
 12071  0198  0140               	movlb	0	; select bank0
 12072  0199  00DD               	movwf	___flsub@b+2
 12073  019A  0141               	movlb	1	; select bank1
 12074  019B  083C               	movf	(_LED_setHSL$2859+1)^(0+128),w
 12075  019C  0140               	movlb	0	; select bank0
 12076  019D  00DC               	movwf	___flsub@b+1
 12077  019E  0141               	movlb	1	; select bank1
 12078  019F  083B               	movf	_LED_setHSL$2859^(0+128),w
 12079  01A0  0140               	movlb	0	; select bank0
 12080  01A1  00DB               	movwf	___flsub@b
 12081  01A2  3190  209C  3180   	fcall	___flsub
 12082  01A5  0140               	movlb	0	; select bank0
 12083  01A6  085A               	movf	?___flsub+3,w
 12084  01A7  0141               	movlb	1	; select bank1
 12085  01A8  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12086  01A9  0140               	movlb	0	; select bank0
 12087  01AA  0859               	movf	?___flsub+2,w
 12088  01AB  0141               	movlb	1	; select bank1
 12089  01AC  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12090  01AD  0140               	movlb	0	; select bank0
 12091  01AE  0858               	movf	?___flsub+1,w
 12092  01AF  0141               	movlb	1	; select bank1
 12093  01B0  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12094  01B1  0140               	movlb	0	; select bank0
 12095  01B2  0857               	movf	?___flsub,w
 12096  01B3  29F2               	goto	L2
 12097  01B4                     l5618:	
 12098  01B4  3006               	movlw	6
 12099  01B5  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12100  01B6  0086               	movwf	6
 12101  01B7  0187               	clrf	7
 12102  01B8  3F40               	moviw [0]fsr1
 12103  01B9  0140               	movlb	0	; select bank0
 12104  01BA  00BD               	movwf	___flmul@b
 12105  01BB  3F41               	moviw [1]fsr1
 12106  01BC  00BE               	movwf	___flmul@b+1
 12107  01BD  3F42               	moviw [2]fsr1
 12108  01BE  00BF               	movwf	___flmul@b+2
 12109  01BF  3F43               	moviw [3]fsr1
 12110  01C0  00C0               	movwf	___flmul@b+3
 12111  01C1  303F               	movlw	63
 12112  01C2  00AC               	movwf	___fladd@b+3
 12113  01C3  3080               	movlw	128
 12114  01C4  00AB               	movwf	___fladd@b+2
 12115  01C5  3000               	movlw	0
 12116  01C6  00AA               	movwf	___fladd@b+1
 12117  01C7  3000               	movlw	0
 12118  01C8  00A9               	movwf	___fladd@b
 12119  01C9  3002               	movlw	2
 12120  01CA  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12121  01CB  0086               	movwf	6
 12122  01CC  0187               	clrf	7
 12123  01CD  3F40               	moviw [0]fsr1
 12124  01CE  00AD               	movwf	___fladd@a
 12125  01CF  3F41               	moviw [1]fsr1
 12126  01D0  00AE               	movwf	___fladd@a+1
 12127  01D1  3F42               	moviw [2]fsr1
 12128  01D2  00AF               	movwf	___fladd@a+2
 12129  01D3  3F43               	moviw [3]fsr1
 12130  01D4  00B0               	movwf	___fladd@a+3
 12131  01D5  318C  243A  3180   	fcall	___fladd
 12132  01D8  0140               	movlb	0	; select bank0
 12133  01D9  082C               	movf	?___fladd+3,w
 12134  01DA  00C4               	movwf	___flmul@a+3
 12135  01DB  082B               	movf	?___fladd+2,w
 12136  01DC  00C3               	movwf	___flmul@a+2
 12137  01DD  082A               	movf	?___fladd+1,w
 12138  01DE  00C2               	movwf	___flmul@a+1
 12139  01DF  0829               	movf	?___fladd,w
 12140  01E0  00C1               	movwf	___flmul@a
 12141  01E1  3183  23F7  3180   	fcall	___flmul
 12142  01E4  0140               	movlb	0	; select bank0
 12143  01E5  0840               	movf	?___flmul+3,w
 12144  01E6  0141               	movlb	1	; select bank1
 12145  01E7  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12146  01E8  0140               	movlb	0	; select bank0
 12147  01E9  083F               	movf	?___flmul+2,w
 12148  01EA  0141               	movlb	1	; select bank1
 12149  01EB  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12150  01EC  0140               	movlb	0	; select bank0
 12151  01ED  083E               	movf	?___flmul+1,w
 12152  01EE  0141               	movlb	1	; select bank1
 12153  01EF  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12154  01F0  0140               	movlb	0	; select bank0
 12155  01F1  083D               	movf	?___flmul,w
 12156  01F2                     L2:	
 12157  01F2  0141               	movlb	1	; select bank1
 12158  01F3  00D3               	movwf	LED_setHSL@v2^(0+128)
 12159                           
 12160                           ;led.c: 100:   v1 = 2 * hsl.L - v2;
 12161  01F4  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12162  01F5  0140               	movlb	0	; select bank0
 12163  01F6  00DA               	movwf	___flsub@a+3
 12164  01F7  0141               	movlb	1	; select bank1
 12165  01F8  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12166  01F9  0140               	movlb	0	; select bank0
 12167  01FA  00D9               	movwf	___flsub@a+2
 12168  01FB  0141               	movlb	1	; select bank1
 12169  01FC  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12170  01FD  0140               	movlb	0	; select bank0
 12171  01FE  00D8               	movwf	___flsub@a+1
 12172  01FF  0141               	movlb	1	; select bank1
 12173  0200  0853               	movf	LED_setHSL@v2^(0+128),w
 12174  0201  0140               	movlb	0	; select bank0
 12175  0202  00D7               	movwf	___flsub@a
 12176  0203  3040               	movlw	64
 12177  0204  00C0               	movwf	___flmul@b+3
 12178  0205  3000               	movlw	0
 12179  0206  00BF               	movwf	___flmul@b+2
 12180  0207  3000               	movlw	0
 12181  0208  00BE               	movwf	___flmul@b+1
 12182  0209  3000               	movlw	0
 12183  020A  00BD               	movwf	___flmul@b
 12184  020B  3006               	movlw	6
 12185  020C  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12186  020D  0086               	movwf	6
 12187  020E  0187               	clrf	7
 12188  020F  3F40               	moviw [0]fsr1
 12189  0210  00C1               	movwf	___flmul@a
 12190  0211  3F41               	moviw [1]fsr1
 12191  0212  00C2               	movwf	___flmul@a+1
 12192  0213  3F42               	moviw [2]fsr1
 12193  0214  00C3               	movwf	___flmul@a+2
 12194  0215  3F43               	moviw [3]fsr1
 12195  0216  00C4               	movwf	___flmul@a+3
 12196  0217  3183  23F7  3180   	fcall	___flmul
 12197  021A  0140               	movlb	0	; select bank0
 12198  021B  0840               	movf	?___flmul+3,w
 12199  021C  00DE               	movwf	___flsub@b+3
 12200  021D  083F               	movf	?___flmul+2,w
 12201  021E  00DD               	movwf	___flsub@b+2
 12202  021F  083E               	movf	?___flmul+1,w
 12203  0220  00DC               	movwf	___flsub@b+1
 12204  0221  083D               	movf	?___flmul,w
 12205  0222  00DB               	movwf	___flsub@b
 12206  0223  3190  209C  3180   	fcall	___flsub
 12207  0226  0140               	movlb	0	; select bank0
 12208  0227  085A               	movf	?___flsub+3,w
 12209  0228  0141               	movlb	1	; select bank1
 12210  0229  00CE               	movwf	(LED_setHSL@v1+3)^(0+128)
 12211  022A  0140               	movlb	0	; select bank0
 12212  022B  0859               	movf	?___flsub+2,w
 12213  022C  0141               	movlb	1	; select bank1
 12214  022D  00CD               	movwf	(LED_setHSL@v1+2)^(0+128)
 12215  022E  0140               	movlb	0	; select bank0
 12216  022F  0858               	movf	?___flsub+1,w
 12217  0230  0141               	movlb	1	; select bank1
 12218  0231  00CC               	movwf	(LED_setHSL@v1+1)^(0+128)
 12219  0232  0140               	movlb	0	; select bank0
 12220  0233  0857               	movf	?___flsub,w
 12221  0234  0141               	movlb	1	; select bank1
 12222  0235  00CB               	movwf	LED_setHSL@v1^(0+128)
 12223                           
 12224                           ;led.c: 102:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12225  0236  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12226  0237  0140               	movlb	0	; select bank0
 12227  0238  00B0               	movwf	___fladd@a+3
 12228  0239  0141               	movlb	1	; select bank1
 12229  023A  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12230  023B  0140               	movlb	0	; select bank0
 12231  023C  00AF               	movwf	___fladd@a+2
 12232  023D  0141               	movlb	1	; select bank1
 12233  023E  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12234  023F  0140               	movlb	0	; select bank0
 12235  0240  00AE               	movwf	___fladd@a+1
 12236  0241  0141               	movlb	1	; select bank1
 12237  0242  084F               	movf	LED_setHSL@hue^(0+128),w
 12238  0243  0140               	movlb	0	; select bank0
 12239  0244  00AD               	movwf	___fladd@a
 12240  0245  303E               	movlw	62
 12241  0246  00AC               	movwf	___fladd@b+3
 12242  0247  30AA               	movlw	170
 12243  0248  00AB               	movwf	___fladd@b+2
 12244  0249  30AA               	movlw	170
 12245  024A  00AA               	movwf	___fladd@b+1
 12246  024B  30AB               	movlw	171
 12247  024C  00A9               	movwf	___fladd@b
 12248  024D  318C  243A  3180   	fcall	___fladd
 12249  0250  0140               	movlb	0	; select bank0
 12250  0251  082C               	movf	?___fladd+3,w
 12251  0252  0141               	movlb	1	; select bank1
 12252  0253  00C6               	movwf	(_LED_setHSL$2860+3)^(0+128)
 12253  0254  0140               	movlb	0	; select bank0
 12254  0255  082B               	movf	?___fladd+2,w
 12255  0256  0141               	movlb	1	; select bank1
 12256  0257  00C5               	movwf	(_LED_setHSL$2860+2)^(0+128)
 12257  0258  0140               	movlb	0	; select bank0
 12258  0259  082A               	movf	?___fladd+1,w
 12259  025A  0141               	movlb	1	; select bank1
 12260  025B  00C4               	movwf	(_LED_setHSL$2860+1)^(0+128)
 12261  025C  0140               	movlb	0	; select bank0
 12262  025D  0829               	movf	?___fladd,w
 12263  025E  0141               	movlb	1	; select bank1
 12264  025F  00C3               	movwf	_LED_setHSL$2860^(0+128)
 12265                           
 12266                           ;led.c: 102:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12267  0260  0846               	movf	(_LED_setHSL$2860+3)^(0+128),w
 12268  0261  0140               	movlb	0	; select bank0
 12269  0262  00EE               	movwf	HueToRGB@vH+3
 12270  0263  0141               	movlb	1	; select bank1
 12271  0264  0845               	movf	(_LED_setHSL$2860+2)^(0+128),w
 12272  0265  0140               	movlb	0	; select bank0
 12273  0266  00ED               	movwf	HueToRGB@vH+2
 12274  0267  0141               	movlb	1	; select bank1
 12275  0268  0844               	movf	(_LED_setHSL$2860+1)^(0+128),w
 12276  0269  0140               	movlb	0	; select bank0
 12277  026A  00EC               	movwf	HueToRGB@vH+1
 12278  026B  0141               	movlb	1	; select bank1
 12279  026C  0843               	movf	_LED_setHSL$2860^(0+128),w
 12280  026D  0140               	movlb	0	; select bank0
 12281  026E  00EB               	movwf	HueToRGB@vH
 12282  026F  0141               	movlb	1	; select bank1
 12283  0270  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12284  0271  0140               	movlb	0	; select bank0
 12285  0272  00EA               	movwf	HueToRGB@v2+3
 12286  0273  0141               	movlb	1	; select bank1
 12287  0274  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12288  0275  0140               	movlb	0	; select bank0
 12289  0276  00E9               	movwf	HueToRGB@v2+2
 12290  0277  0141               	movlb	1	; select bank1
 12291  0278  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12292  0279  0140               	movlb	0	; select bank0
 12293  027A  00E8               	movwf	HueToRGB@v2+1
 12294  027B  0141               	movlb	1	; select bank1
 12295  027C  0853               	movf	LED_setHSL@v2^(0+128),w
 12296  027D  0140               	movlb	0	; select bank0
 12297  027E  00E7               	movwf	HueToRGB@v2
 12298  027F  0141               	movlb	1	; select bank1
 12299  0280  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12300  0281  0140               	movlb	0	; select bank0
 12301  0282  00E6               	movwf	HueToRGB@v1+3
 12302  0283  0141               	movlb	1	; select bank1
 12303  0284  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12304  0285  0140               	movlb	0	; select bank0
 12305  0286  00E5               	movwf	HueToRGB@v1+2
 12306  0287  0141               	movlb	1	; select bank1
 12307  0288  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12308  0289  0140               	movlb	0	; select bank0
 12309  028A  00E4               	movwf	HueToRGB@v1+1
 12310  028B  0141               	movlb	1	; select bank1
 12311  028C  084B               	movf	LED_setHSL@v1^(0+128),w
 12312  028D  0140               	movlb	0	; select bank0
 12313  028E  00E3               	movwf	HueToRGB@v1
 12314  028F  318E  261C  3180   	fcall	_HueToRGB
 12315  0292  0140               	movlb	0	; select bank0
 12316  0293  0866               	movf	?_HueToRGB+3,w
 12317  0294  0141               	movlb	1	; select bank1
 12318  0295  00CA               	movwf	(_LED_setHSL$2861+3)^(0+128)
 12319  0296  0140               	movlb	0	; select bank0
 12320  0297  0865               	movf	?_HueToRGB+2,w
 12321  0298  0141               	movlb	1	; select bank1
 12322  0299  00C9               	movwf	(_LED_setHSL$2861+2)^(0+128)
 12323  029A  0140               	movlb	0	; select bank0
 12324  029B  0864               	movf	?_HueToRGB+1,w
 12325  029C  0141               	movlb	1	; select bank1
 12326  029D  00C8               	movwf	(_LED_setHSL$2861+1)^(0+128)
 12327  029E  0140               	movlb	0	; select bank0
 12328  029F  0863               	movf	?_HueToRGB,w
 12329  02A0  0141               	movlb	1	; select bank1
 12330  02A1  00C7               	movwf	_LED_setHSL$2861^(0+128)
 12331                           
 12332                           ;led.c: 102:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12333  02A2  084A               	movf	(_LED_setHSL$2861+3)^(0+128),w
 12334  02A3  0140               	movlb	0	; select bank0
 12335  02A4  00C4               	movwf	___flmul@a+3
 12336  02A5  0141               	movlb	1	; select bank1
 12337  02A6  0849               	movf	(_LED_setHSL$2861+2)^(0+128),w
 12338  02A7  0140               	movlb	0	; select bank0
 12339  02A8  00C3               	movwf	___flmul@a+2
 12340  02A9  0141               	movlb	1	; select bank1
 12341  02AA  0848               	movf	(_LED_setHSL$2861+1)^(0+128),w
 12342  02AB  0140               	movlb	0	; select bank0
 12343  02AC  00C2               	movwf	___flmul@a+1
 12344  02AD  0141               	movlb	1	; select bank1
 12345  02AE  0847               	movf	_LED_setHSL$2861^(0+128),w
 12346  02AF  0140               	movlb	0	; select bank0
 12347  02B0  00C1               	movwf	___flmul@a
 12348  02B1  3043               	movlw	67
 12349  02B2  00C0               	movwf	___flmul@b+3
 12350  02B3  307F               	movlw	127
 12351  02B4  00BF               	movwf	___flmul@b+2
 12352  02B5  3000               	movlw	0
 12353  02B6  00BE               	movwf	___flmul@b+1
 12354  02B7  3000               	movlw	0
 12355  02B8  00BD               	movwf	___flmul@b
 12356  02B9  3183  23F7  3180   	fcall	___flmul
 12357  02BC  0140               	movlb	0	; select bank0
 12358  02BD  0840               	movf	?___flmul+3,w
 12359  02BE  0141               	movlb	1	; select bank1
 12360  02BF  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12361  02C0  0140               	movlb	0	; select bank0
 12362  02C1  083F               	movf	?___flmul+2,w
 12363  02C2  0141               	movlb	1	; select bank1
 12364  02C3  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12365  02C4  0140               	movlb	0	; select bank0
 12366  02C5  083E               	movf	?___flmul+1,w
 12367  02C6  0141               	movlb	1	; select bank1
 12368  02C7  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12369  02C8  0140               	movlb	0	; select bank0
 12370  02C9  083D               	movf	?___flmul,w
 12371  02CA  0141               	movlb	1	; select bank1
 12372  02CB  00A4               	movwf	___fltol@f1^(0+128)
 12373  02CC  3188  2000  3180   	fcall	___fltol
 12374  02CF  0141               	movlb	1	; select bank1
 12375  02D0  0824               	movf	?___fltol^(0+128),w
 12376  02D1  00B9               	movwf	??_LED_setHSL^(0+128)
 12377  02D2  0839               	movf	??_LED_setHSL^(0+128),w
 12378  02D3  00D7               	movwf	LED_setHSL@rgb^(0+128)
 12379                           
 12380                           ;led.c: 103:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12381  02D4  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12382  02D5  0140               	movlb	0	; select bank0
 12383  02D6  00EE               	movwf	HueToRGB@vH+3
 12384  02D7  0141               	movlb	1	; select bank1
 12385  02D8  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12386  02D9  0140               	movlb	0	; select bank0
 12387  02DA  00ED               	movwf	HueToRGB@vH+2
 12388  02DB  0141               	movlb	1	; select bank1
 12389  02DC  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12390  02DD  0140               	movlb	0	; select bank0
 12391  02DE  00EC               	movwf	HueToRGB@vH+1
 12392  02DF  0141               	movlb	1	; select bank1
 12393  02E0  084F               	movf	LED_setHSL@hue^(0+128),w
 12394  02E1  0140               	movlb	0	; select bank0
 12395  02E2  00EB               	movwf	HueToRGB@vH
 12396  02E3  0141               	movlb	1	; select bank1
 12397  02E4  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12398  02E5  0140               	movlb	0	; select bank0
 12399  02E6  00EA               	movwf	HueToRGB@v2+3
 12400  02E7  0141               	movlb	1	; select bank1
 12401  02E8  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12402  02E9  0140               	movlb	0	; select bank0
 12403  02EA  00E9               	movwf	HueToRGB@v2+2
 12404  02EB  0141               	movlb	1	; select bank1
 12405  02EC  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12406  02ED  0140               	movlb	0	; select bank0
 12407  02EE  00E8               	movwf	HueToRGB@v2+1
 12408  02EF  0141               	movlb	1	; select bank1
 12409  02F0  0853               	movf	LED_setHSL@v2^(0+128),w
 12410  02F1  0140               	movlb	0	; select bank0
 12411  02F2  00E7               	movwf	HueToRGB@v2
 12412  02F3  0141               	movlb	1	; select bank1
 12413  02F4  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12414  02F5  0140               	movlb	0	; select bank0
 12415  02F6  00E6               	movwf	HueToRGB@v1+3
 12416  02F7  0141               	movlb	1	; select bank1
 12417  02F8  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12418  02F9  0140               	movlb	0	; select bank0
 12419  02FA  00E5               	movwf	HueToRGB@v1+2
 12420  02FB  0141               	movlb	1	; select bank1
 12421  02FC  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12422  02FD  0140               	movlb	0	; select bank0
 12423  02FE  00E4               	movwf	HueToRGB@v1+1
 12424  02FF  0141               	movlb	1	; select bank1
 12425  0300  084B               	movf	LED_setHSL@v1^(0+128),w
 12426  0301  0140               	movlb	0	; select bank0
 12427  0302  00E3               	movwf	HueToRGB@v1
 12428  0303  318E  261C  3180   	fcall	_HueToRGB
 12429  0306  0140               	movlb	0	; select bank0
 12430  0307  0866               	movf	?_HueToRGB+3,w
 12431  0308  0141               	movlb	1	; select bank1
 12432  0309  00C2               	movwf	(_LED_setHSL$2862+3)^(0+128)
 12433  030A  0140               	movlb	0	; select bank0
 12434  030B  0865               	movf	?_HueToRGB+2,w
 12435  030C  0141               	movlb	1	; select bank1
 12436  030D  00C1               	movwf	(_LED_setHSL$2862+2)^(0+128)
 12437  030E  0140               	movlb	0	; select bank0
 12438  030F  0864               	movf	?_HueToRGB+1,w
 12439  0310  0141               	movlb	1	; select bank1
 12440  0311  00C0               	movwf	(_LED_setHSL$2862+1)^(0+128)
 12441  0312  0140               	movlb	0	; select bank0
 12442  0313  0863               	movf	?_HueToRGB,w
 12443  0314  0141               	movlb	1	; select bank1
 12444  0315  00BF               	movwf	_LED_setHSL$2862^(0+128)
 12445                           
 12446                           ;led.c: 103:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12447  0316  0842               	movf	(_LED_setHSL$2862+3)^(0+128),w
 12448  0317  0140               	movlb	0	; select bank0
 12449  0318  00C4               	movwf	___flmul@a+3
 12450  0319  0141               	movlb	1	; select bank1
 12451  031A  0841               	movf	(_LED_setHSL$2862+2)^(0+128),w
 12452  031B  0140               	movlb	0	; select bank0
 12453  031C  00C3               	movwf	___flmul@a+2
 12454  031D  0141               	movlb	1	; select bank1
 12455  031E  0840               	movf	(_LED_setHSL$2862+1)^(0+128),w
 12456  031F  0140               	movlb	0	; select bank0
 12457  0320  00C2               	movwf	___flmul@a+1
 12458  0321  0141               	movlb	1	; select bank1
 12459  0322  083F               	movf	_LED_setHSL$2862^(0+128),w
 12460  0323  0140               	movlb	0	; select bank0
 12461  0324  00C1               	movwf	___flmul@a
 12462  0325  3043               	movlw	67
 12463  0326  00C0               	movwf	___flmul@b+3
 12464  0327  307F               	movlw	127
 12465  0328  00BF               	movwf	___flmul@b+2
 12466  0329  3000               	movlw	0
 12467  032A  00BE               	movwf	___flmul@b+1
 12468  032B  3000               	movlw	0
 12469  032C  00BD               	movwf	___flmul@b
 12470  032D  3183  23F7  3180   	fcall	___flmul
 12471  0330  0140               	movlb	0	; select bank0
 12472  0331  0840               	movf	?___flmul+3,w
 12473  0332  0141               	movlb	1	; select bank1
 12474  0333  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12475  0334  0140               	movlb	0	; select bank0
 12476  0335  083F               	movf	?___flmul+2,w
 12477  0336  0141               	movlb	1	; select bank1
 12478  0337  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12479  0338  0140               	movlb	0	; select bank0
 12480  0339  083E               	movf	?___flmul+1,w
 12481  033A  0141               	movlb	1	; select bank1
 12482  033B  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12483  033C  0140               	movlb	0	; select bank0
 12484  033D  083D               	movf	?___flmul,w
 12485  033E  0141               	movlb	1	; select bank1
 12486  033F  00A4               	movwf	___fltol@f1^(0+128)
 12487  0340  3188  2000  3180   	fcall	___fltol
 12488  0343  0141               	movlb	1	; select bank1
 12489  0344  0824               	movf	?___fltol^(0+128),w
 12490  0345  00B9               	movwf	??_LED_setHSL^(0+128)
 12491  0346  0839               	movf	??_LED_setHSL^(0+128),w
 12492  0347  00D8               	movwf	(LED_setHSL@rgb^(0+128)+1)
 12493                           
 12494                           ;led.c: 104:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12495  0348  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12496  0349  0140               	movlb	0	; select bank0
 12497  034A  00B0               	movwf	___fladd@a+3
 12498  034B  0141               	movlb	1	; select bank1
 12499  034C  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12500  034D  0140               	movlb	0	; select bank0
 12501  034E  00AF               	movwf	___fladd@a+2
 12502  034F  0141               	movlb	1	; select bank1
 12503  0350  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12504  0351  0140               	movlb	0	; select bank0
 12505  0352  00AE               	movwf	___fladd@a+1
 12506  0353  0141               	movlb	1	; select bank1
 12507  0354  084F               	movf	LED_setHSL@hue^(0+128),w
 12508  0355  0140               	movlb	0	; select bank0
 12509  0356  00AD               	movwf	___fladd@a
 12510  0357  30BE               	movlw	190
 12511  0358  00AC               	movwf	___fladd@b+3
 12512  0359  30AA               	movlw	170
 12513  035A  00AB               	movwf	___fladd@b+2
 12514  035B  30AA               	movlw	170
 12515  035C  00AA               	movwf	___fladd@b+1
 12516  035D  30AB               	movlw	171
 12517  035E  00A9               	movwf	___fladd@b
 12518  035F  318C  243A  3180   	fcall	___fladd
 12519  0362  0140               	movlb	0	; select bank0
 12520  0363  082C               	movf	?___fladd+3,w
 12521  0364  0141               	movlb	1	; select bank1
 12522  0365  00C6               	movwf	(_LED_setHSL$2860+3)^(0+128)
 12523  0366  0140               	movlb	0	; select bank0
 12524  0367  082B               	movf	?___fladd+2,w
 12525  0368  0141               	movlb	1	; select bank1
 12526  0369  00C5               	movwf	(_LED_setHSL$2860+2)^(0+128)
 12527  036A  0140               	movlb	0	; select bank0
 12528  036B  082A               	movf	?___fladd+1,w
 12529  036C  0141               	movlb	1	; select bank1
 12530  036D  00C4               	movwf	(_LED_setHSL$2860+1)^(0+128)
 12531  036E  0140               	movlb	0	; select bank0
 12532  036F  0829               	movf	?___fladd,w
 12533  0370  0141               	movlb	1	; select bank1
 12534  0371  00C3               	movwf	_LED_setHSL$2860^(0+128)
 12535                           
 12536                           ;led.c: 104:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12537  0372  0846               	movf	(_LED_setHSL$2860+3)^(0+128),w
 12538  0373  0140               	movlb	0	; select bank0
 12539  0374  00EE               	movwf	HueToRGB@vH+3
 12540  0375  0141               	movlb	1	; select bank1
 12541  0376  0845               	movf	(_LED_setHSL$2860+2)^(0+128),w
 12542  0377  0140               	movlb	0	; select bank0
 12543  0378  00ED               	movwf	HueToRGB@vH+2
 12544  0379  0141               	movlb	1	; select bank1
 12545  037A  0844               	movf	(_LED_setHSL$2860+1)^(0+128),w
 12546  037B  0140               	movlb	0	; select bank0
 12547  037C  00EC               	movwf	HueToRGB@vH+1
 12548  037D  0141               	movlb	1	; select bank1
 12549  037E  0843               	movf	_LED_setHSL$2860^(0+128),w
 12550  037F  0140               	movlb	0	; select bank0
 12551  0380  00EB               	movwf	HueToRGB@vH
 12552  0381  0141               	movlb	1	; select bank1
 12553  0382  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12554  0383  0140               	movlb	0	; select bank0
 12555  0384  00EA               	movwf	HueToRGB@v2+3
 12556  0385  0141               	movlb	1	; select bank1
 12557  0386  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12558  0387  0140               	movlb	0	; select bank0
 12559  0388  00E9               	movwf	HueToRGB@v2+2
 12560  0389  0141               	movlb	1	; select bank1
 12561  038A  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12562  038B  0140               	movlb	0	; select bank0
 12563  038C  00E8               	movwf	HueToRGB@v2+1
 12564  038D  0141               	movlb	1	; select bank1
 12565  038E  0853               	movf	LED_setHSL@v2^(0+128),w
 12566  038F  0140               	movlb	0	; select bank0
 12567  0390  00E7               	movwf	HueToRGB@v2
 12568  0391  0141               	movlb	1	; select bank1
 12569  0392  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12570  0393  0140               	movlb	0	; select bank0
 12571  0394  00E6               	movwf	HueToRGB@v1+3
 12572  0395  0141               	movlb	1	; select bank1
 12573  0396  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12574  0397  0140               	movlb	0	; select bank0
 12575  0398  00E5               	movwf	HueToRGB@v1+2
 12576  0399  0141               	movlb	1	; select bank1
 12577  039A  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12578  039B  0140               	movlb	0	; select bank0
 12579  039C  00E4               	movwf	HueToRGB@v1+1
 12580  039D  0141               	movlb	1	; select bank1
 12581  039E  084B               	movf	LED_setHSL@v1^(0+128),w
 12582  039F  0140               	movlb	0	; select bank0
 12583  03A0  00E3               	movwf	HueToRGB@v1
 12584  03A1  318E  261C  3180   	fcall	_HueToRGB
 12585  03A4  0140               	movlb	0	; select bank0
 12586  03A5  0866               	movf	?_HueToRGB+3,w
 12587  03A6  0141               	movlb	1	; select bank1
 12588  03A7  00CA               	movwf	(_LED_setHSL$2861+3)^(0+128)
 12589  03A8  0140               	movlb	0	; select bank0
 12590  03A9  0865               	movf	?_HueToRGB+2,w
 12591  03AA  0141               	movlb	1	; select bank1
 12592  03AB  00C9               	movwf	(_LED_setHSL$2861+2)^(0+128)
 12593  03AC  0140               	movlb	0	; select bank0
 12594  03AD  0864               	movf	?_HueToRGB+1,w
 12595  03AE  0141               	movlb	1	; select bank1
 12596  03AF  00C8               	movwf	(_LED_setHSL$2861+1)^(0+128)
 12597  03B0  0140               	movlb	0	; select bank0
 12598  03B1  0863               	movf	?_HueToRGB,w
 12599  03B2  0141               	movlb	1	; select bank1
 12600  03B3  00C7               	movwf	_LED_setHSL$2861^(0+128)
 12601                           
 12602                           ;led.c: 104:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12603  03B4  084A               	movf	(_LED_setHSL$2861+3)^(0+128),w
 12604  03B5  0140               	movlb	0	; select bank0
 12605  03B6  00C4               	movwf	___flmul@a+3
 12606  03B7  0141               	movlb	1	; select bank1
 12607  03B8  0849               	movf	(_LED_setHSL$2861+2)^(0+128),w
 12608  03B9  0140               	movlb	0	; select bank0
 12609  03BA  00C3               	movwf	___flmul@a+2
 12610  03BB  0141               	movlb	1	; select bank1
 12611  03BC  0848               	movf	(_LED_setHSL$2861+1)^(0+128),w
 12612  03BD  0140               	movlb	0	; select bank0
 12613  03BE  00C2               	movwf	___flmul@a+1
 12614  03BF  0141               	movlb	1	; select bank1
 12615  03C0  0847               	movf	_LED_setHSL$2861^(0+128),w
 12616  03C1  0140               	movlb	0	; select bank0
 12617  03C2  00C1               	movwf	___flmul@a
 12618  03C3  3043               	movlw	67
 12619  03C4  00C0               	movwf	___flmul@b+3
 12620  03C5  307F               	movlw	127
 12621  03C6  00BF               	movwf	___flmul@b+2
 12622  03C7  3000               	movlw	0
 12623  03C8  00BE               	movwf	___flmul@b+1
 12624  03C9  3000               	movlw	0
 12625  03CA  00BD               	movwf	___flmul@b
 12626  03CB  3183  23F7  3180   	fcall	___flmul
 12627  03CE  0140               	movlb	0	; select bank0
 12628  03CF  0840               	movf	?___flmul+3,w
 12629  03D0  0141               	movlb	1	; select bank1
 12630  03D1  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12631  03D2  0140               	movlb	0	; select bank0
 12632  03D3  083F               	movf	?___flmul+2,w
 12633  03D4  0141               	movlb	1	; select bank1
 12634  03D5  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12635  03D6  0140               	movlb	0	; select bank0
 12636  03D7  083E               	movf	?___flmul+1,w
 12637  03D8  0141               	movlb	1	; select bank1
 12638  03D9  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12639  03DA  0140               	movlb	0	; select bank0
 12640  03DB  083D               	movf	?___flmul,w
 12641  03DC  0141               	movlb	1	; select bank1
 12642  03DD  00A4               	movwf	___fltol@f1^(0+128)
 12643  03DE  3188  2000  3180   	fcall	___fltol
 12644  03E1  0141               	movlb	1	; select bank1
 12645  03E2  0824               	movf	?___fltol^(0+128),w
 12646  03E3  00B9               	movwf	??_LED_setHSL^(0+128)
 12647  03E4  0839               	movf	??_LED_setHSL^(0+128),w
 12648  03E5  00D9               	movwf	(LED_setHSL@rgb^(0+128)+2)
 12649  03E6                     l5636:	
 12650                           
 12651                           ;led.c: 107:  LED_setColor(rgb.R, rgb.G, rgb.B, 0);
 12652  03E6  0858               	movf	(LED_setHSL@rgb^(0+128)+1),w
 12653  03E7  00B9               	movwf	??_LED_setHSL^(0+128)
 12654  03E8  0839               	movf	??_LED_setHSL^(0+128),w
 12655  03E9  0140               	movlb	0	; select bank0
 12656  03EA  00A0               	movwf	LED_setColor@green
 12657  03EB  0141               	movlb	1	; select bank1
 12658  03EC  0859               	movf	(LED_setHSL@rgb^(0+128)+2),w
 12659  03ED  00BA               	movwf	(??_LED_setHSL+1)^(0+128)
 12660  03EE  083A               	movf	(??_LED_setHSL+1)^(0+128),w
 12661  03EF  0140               	movlb	0	; select bank0
 12662  03F0  00A1               	movwf	LED_setColor@white
 12663  03F1  01A2               	clrf	LED_setColor@blue
 12664  03F2  0141               	movlb	1	; select bank1
 12665  03F3  0857               	movf	LED_setHSL@rgb^(0+128),w
 12666  03F4  3193  235F         	fcall	_LED_setColor
 12667  03F6  0008               	return
 12668  03F7                     __end_of_LED_setHSL:	
 12669                           
 12670                           	psect	text38
 12671  176A                     __ptext38:	
 12672 ;; *************** function ___xxtofl *****************
 12673 ;; Defined at:
 12674 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;  sign            1    wreg     unsigned char 
 12677 ;;  val             4    0[BANK0 ] long 
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;  sign            1    8[BANK0 ] unsigned char 
 12680 ;;  arg             4   10[BANK0 ] unsigned long 
 12681 ;;  exp             1    9[BANK0 ] unsigned char 
 12682 ;; Return value:  Size  Location     Type
 12683 ;;                  4    0[BANK0 ] unsigned char 
 12684 ;; Registers used:
 12685 ;;		wreg, status,2, status,0
 12686 ;; Tracked objects:
 12687 ;;		On entry : 0/0
 12688 ;;		On exit  : 0/0
 12689 ;;		Unchanged: 0/0
 12690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12692 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12693 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12694 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12695 ;;Total ram usage:       14 bytes
 12696 ;; Hardware stack levels used:    1
 12697 ;; Hardware stack levels required when called:    4
 12698 ;; This function calls:
 12699 ;;		Nothing
 12700 ;; This function is called by:
 12701 ;;		_LED_setHSL
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           
 12706                           ;psect for function ___xxtofl
 12707  176A                     ___xxtofl:	
 12708                           
 12709                           ;incstack = 0
 12710                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12711                           ;___xxtofl@sign stored from wreg
 12712  176A  0140               	movlb	0	; select bank0
 12713  176B  00A8               	movwf	___xxtofl@sign
 12714  176C  0828               	movf	___xxtofl@sign,w
 12715  176D  1D03               	btfss	3,2
 12716  176E  1FA3               	btfss	___xxtofl@val+3,7
 12717  176F  2F80               	goto	l4294
 12718  1770  0920               	comf	___xxtofl@val,w
 12719  1771  00AA               	movwf	___xxtofl@arg
 12720  1772  0921               	comf	___xxtofl@val+1,w
 12721  1773  00AB               	movwf	___xxtofl@arg+1
 12722  1774  0922               	comf	___xxtofl@val+2,w
 12723  1775  00AC               	movwf	___xxtofl@arg+2
 12724  1776  0923               	comf	___xxtofl@val+3,w
 12725  1777  00AD               	movwf	___xxtofl@arg+3
 12726  1778  0AAA               	incf	___xxtofl@arg,f
 12727  1779  1903               	skipnz
 12728  177A  0AAB               	incf	___xxtofl@arg+1,f
 12729  177B  1903               	skipnz
 12730  177C  0AAC               	incf	___xxtofl@arg+2,f
 12731  177D  1903               	skipnz
 12732  177E  0AAD               	incf	___xxtofl@arg+3,f
 12733  177F  2F88               	goto	l1707
 12734  1780                     l4294:	
 12735  1780  0823               	movf	___xxtofl@val+3,w
 12736  1781  00AD               	movwf	___xxtofl@arg+3
 12737  1782  0822               	movf	___xxtofl@val+2,w
 12738  1783  00AC               	movwf	___xxtofl@arg+2
 12739  1784  0821               	movf	___xxtofl@val+1,w
 12740  1785  00AB               	movwf	___xxtofl@arg+1
 12741  1786  0820               	movf	___xxtofl@val,w
 12742  1787  00AA               	movwf	___xxtofl@arg
 12743  1788                     l1707:	
 12744  1788  0823               	movf	___xxtofl@val+3,w
 12745  1789  0422               	iorwf	___xxtofl@val+2,w
 12746  178A  0421               	iorwf	___xxtofl@val+1,w
 12747  178B  0420               	iorwf	___xxtofl@val,w
 12748  178C  1D03               	skipz
 12749  178D  2F97               	goto	l4300
 12750  178E  3000               	movlw	0
 12751  178F  00A3               	movwf	?___xxtofl+3
 12752  1790  3000               	movlw	0
 12753  1791  00A2               	movwf	?___xxtofl+2
 12754  1792  3000               	movlw	0
 12755  1793  00A1               	movwf	?___xxtofl+1
 12756  1794  3000               	movlw	0
 12757  1795  00A0               	movwf	?___xxtofl
 12758  1796  0008               	return
 12759  1797                     l4300:	
 12760  1797  3096               	movlw	150
 12761  1798  00A4               	movwf	??___xxtofl
 12762  1799  0824               	movf	??___xxtofl,w
 12763  179A  00A9               	movwf	___xxtofl@exp
 12764  179B                     l4304:	
 12765  179B  30FE               	movlw	254
 12766  179C  052D               	andwf	___xxtofl@arg+3,w
 12767  179D  1903               	btfsc	3,2
 12768  179E  2FBE               	goto	l1713
 12769  179F  3001               	movlw	1
 12770  17A0  00A4               	movwf	??___xxtofl
 12771  17A1  0824               	movf	??___xxtofl,w
 12772  17A2  07A9               	addwf	___xxtofl@exp,f
 12773  17A3  3001               	movlw	1
 12774  17A4                     u4165:	
 12775  17A4  36AD               	lsrf	___xxtofl@arg+3,f
 12776  17A5  0CAC               	rrf	___xxtofl@arg+2,f
 12777  17A6  0CAB               	rrf	___xxtofl@arg+1,f
 12778  17A7  0CAA               	rrf	___xxtofl@arg,f
 12779  17A8  0B89               	decfsz	9,f
 12780  17A9  2FA4               	goto	u4165
 12781  17AA  2F9B               	goto	l4304
 12782  17AB                     l4306:	
 12783  17AB  3001               	movlw	1
 12784  17AC  00A4               	movwf	??___xxtofl
 12785  17AD  0824               	movf	??___xxtofl,w
 12786  17AE  07A9               	addwf	___xxtofl@exp,f
 12787  17AF  3001               	movlw	1
 12788  17B0  07AA               	addwf	___xxtofl@arg,f
 12789  17B1  3000               	movlw	0
 12790  17B2  3DAB               	addwfc	___xxtofl@arg+1,f
 12791  17B3  3000               	movlw	0
 12792  17B4  3DAC               	addwfc	___xxtofl@arg+2,f
 12793  17B5  3000               	movlw	0
 12794  17B6  3DAD               	addwfc	___xxtofl@arg+3,f
 12795  17B7  3001               	movlw	1
 12796  17B8                     u4185:	
 12797  17B8  36AD               	lsrf	___xxtofl@arg+3,f
 12798  17B9  0CAC               	rrf	___xxtofl@arg+2,f
 12799  17BA  0CAB               	rrf	___xxtofl@arg+1,f
 12800  17BB  0CAA               	rrf	___xxtofl@arg,f
 12801  17BC  0B89               	decfsz	9,f
 12802  17BD  2FB8               	goto	u4185
 12803  17BE                     l1713:	
 12804  17BE  30FF               	movlw	255
 12805  17BF  052D               	andwf	___xxtofl@arg+3,w
 12806  17C0  1903               	btfsc	3,2
 12807  17C1  2FD0               	goto	l4314
 12808  17C2  2FAB               	goto	l4306
 12809  17C3                     l4316:	
 12810  17C3  3002               	movlw	2
 12811  17C4  0229               	subwf	___xxtofl@exp,w
 12812  17C5  1C03               	btfss	3,0
 12813  17C6  2FD2               	goto	l1720
 12814  17C7  3001               	movlw	1
 12815  17C8  02A9               	subwf	___xxtofl@exp,f
 12816  17C9  3001               	movlw	1
 12817  17CA                     u4205:	
 12818  17CA  35AA               	lslf	___xxtofl@arg,f
 12819  17CB  0DAB               	rlf	___xxtofl@arg+1,f
 12820  17CC  0DAC               	rlf	___xxtofl@arg+2,f
 12821  17CD  0DAD               	rlf	___xxtofl@arg+3,f
 12822  17CE  0B89               	decfsz	9,f
 12823  17CF  2FCA               	goto	u4205
 12824  17D0                     l4314:	
 12825  17D0  1FAC               	btfss	___xxtofl@arg+2,7
 12826  17D1  2FC3               	goto	l4316
 12827  17D2                     l1720:	
 12828  17D2  1829               	btfsc	___xxtofl@exp,0
 12829  17D3  2FDC               	goto	l1721
 12830  17D4  30FF               	movlw	255
 12831  17D5  05AA               	andwf	___xxtofl@arg,f
 12832  17D6  30FF               	movlw	255
 12833  17D7  05AB               	andwf	___xxtofl@arg+1,f
 12834  17D8  307F               	movlw	127
 12835  17D9  05AC               	andwf	___xxtofl@arg+2,f
 12836  17DA  30FF               	movlw	255
 12837  17DB  05AD               	andwf	___xxtofl@arg+3,f
 12838  17DC                     l1721:	
 12839  17DC  1003               	clrc
 12840  17DD  0CA9               	rrf	___xxtofl@exp,f
 12841  17DE  0829               	movf	___xxtofl@exp,w
 12842  17DF  00A4               	movwf	??___xxtofl
 12843  17E0  01A5               	clrf	??___xxtofl+1
 12844  17E1  01A6               	clrf	??___xxtofl+2
 12845  17E2  01A7               	clrf	??___xxtofl+3
 12846  17E3  3018               	movlw	24
 12847  17E4                     u4245:	
 12848  17E4  35A4               	lslf	??___xxtofl,f
 12849  17E5  0DA5               	rlf	??___xxtofl+1,f
 12850  17E6  0DA6               	rlf	??___xxtofl+2,f
 12851  17E7  0DA7               	rlf	??___xxtofl+3,f
 12852  17E8  0B89               	decfsz	9,f
 12853  17E9  2FE4               	goto	u4245
 12854  17EA  0824               	movf	??___xxtofl,w
 12855  17EB  04AA               	iorwf	___xxtofl@arg,f
 12856  17EC  0825               	movf	??___xxtofl+1,w
 12857  17ED  04AB               	iorwf	___xxtofl@arg+1,f
 12858  17EE  0826               	movf	??___xxtofl+2,w
 12859  17EF  04AC               	iorwf	___xxtofl@arg+2,f
 12860  17F0  0827               	movf	??___xxtofl+3,w
 12861  17F1  04AD               	iorwf	___xxtofl@arg+3,f
 12862  17F2  0828               	movf	___xxtofl@sign,w
 12863  17F3  1D03               	btfss	3,2
 12864  17F4  1FA3               	btfss	___xxtofl@val+3,7
 12865  17F5  2FF7               	goto	l4328
 12866  17F6  17AD               	bsf	___xxtofl@arg+3,7
 12867  17F7                     l4328:	
 12868  17F7  082D               	movf	___xxtofl@arg+3,w
 12869  17F8  00A3               	movwf	?___xxtofl+3
 12870  17F9  082C               	movf	___xxtofl@arg+2,w
 12871  17FA  00A2               	movwf	?___xxtofl+2
 12872  17FB  082B               	movf	___xxtofl@arg+1,w
 12873  17FC  00A1               	movwf	?___xxtofl+1
 12874  17FD  082A               	movf	___xxtofl@arg,w
 12875  17FE  00A0               	movwf	?___xxtofl
 12876  17FF  0008               	return
 12877  1800                     __end_of___xxtofl:	
 12878                           
 12879                           	psect	text39
 12880  0800                     __ptext39:	
 12881 ;; *************** function ___fltol *****************
 12882 ;; Defined at:
 12883 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;  f1              4    4[BANK1 ] unsigned char 
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;  exp1            1   14[BANK1 ] unsigned char 
 12888 ;;  sign1           1   13[BANK1 ] unsigned char 
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  4    4[BANK1 ] long 
 12891 ;; Registers used:
 12892 ;;		wreg, status,2, status,0
 12893 ;; Tracked objects:
 12894 ;;		On entry : 0/0
 12895 ;;		On exit  : 0/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12898 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12899 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12900 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12901 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12902 ;;Total ram usage:       11 bytes
 12903 ;; Hardware stack levels used:    1
 12904 ;; Hardware stack levels required when called:    4
 12905 ;; This function calls:
 12906 ;;		Nothing
 12907 ;; This function is called by:
 12908 ;;		_LED_setHSL
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           
 12913                           ;psect for function ___fltol
 12914  0800                     ___fltol:	
 12915                           
 12916                           ;incstack = 0
 12917                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12918  0800  1003               	clrc
 12919  0801  0141               	movlb	1	; select bank1
 12920  0802  0D26               	rlf	(___fltol@f1+2)^(0+128),w
 12921  0803  0D27               	rlf	(___fltol@f1+3)^(0+128),w
 12922  0804  00A8               	movwf	??___fltol^(0+128)
 12923  0805  0828               	movf	??___fltol^(0+128),w
 12924  0806  00AE               	movwf	___fltol@exp1^(0+128)
 12925  0807  082E               	movf	___fltol@exp1^(0+128),w
 12926  0808  1D03               	btfss	3,2
 12927  0809  2813               	goto	l5544
 12928  080A                     l5540:	
 12929  080A  3000               	movlw	0
 12930  080B  00A7               	movwf	(?___fltol+3)^(0+128)
 12931  080C  3000               	movlw	0
 12932  080D  00A6               	movwf	(?___fltol+2)^(0+128)
 12933  080E  3000               	movlw	0
 12934  080F  00A5               	movwf	(?___fltol+1)^(0+128)
 12935  0810  3000               	movlw	0
 12936  0811  00A4               	movwf	?___fltol^(0+128)
 12937  0812  0008               	return
 12938  0813                     l5544:	
 12939  0813  0824               	movf	___fltol@f1^(0+128),w
 12940  0814  00A8               	movwf	??___fltol^(0+128)
 12941  0815  0825               	movf	(___fltol@f1+1)^(0+128),w
 12942  0816  00A9               	movwf	(??___fltol^(0+128)+1)
 12943  0817  0826               	movf	(___fltol@f1+2)^(0+128),w
 12944  0818  00AA               	movwf	(??___fltol^(0+128)+2)
 12945  0819  0827               	movf	(___fltol@f1+3)^(0+128),w
 12946  081A  00AB               	movwf	(??___fltol^(0+128)+3)
 12947  081B  301F               	movlw	31
 12948  081C                     u5875:	
 12949  081C  36AB               	lsrf	(??___fltol^(0+128)+3),f
 12950  081D  0CAA               	rrf	(??___fltol^(0+128)+2),f
 12951  081E  0CA9               	rrf	(??___fltol^(0+128)+1),f
 12952  081F  0CA8               	rrf	??___fltol^(0+128),f
 12953  0820  0B89               	decfsz	9,f
 12954  0821  281C               	goto	u5875
 12955  0822  0828               	movf	??___fltol^(0+128),w
 12956  0823  00AC               	movwf	(??___fltol+4)^(0+128)
 12957  0824  082C               	movf	(??___fltol+4)^(0+128),w
 12958  0825  00AD               	movwf	___fltol@sign1^(0+128)
 12959  0826  17A6               	bsf	(___fltol@f1^(0+128)+2),7
 12960  0827  30FF               	movlw	255
 12961  0828  05A4               	andwf	___fltol@f1^(0+128),f
 12962  0829  30FF               	movlw	255
 12963  082A  05A5               	andwf	(___fltol@f1+1)^(0+128),f
 12964  082B  30FF               	movlw	255
 12965  082C  05A6               	andwf	(___fltol@f1+2)^(0+128),f
 12966  082D  3000               	movlw	0
 12967  082E  05A7               	andwf	(___fltol@f1+3)^(0+128),f
 12968  082F  3096               	movlw	150
 12969  0830  02AE               	subwf	___fltol@exp1^(0+128),f
 12970  0831  1FAE               	btfss	___fltol@exp1^(0+128),7
 12971  0832  2846               	goto	l5562
 12972  0833  082E               	movf	___fltol@exp1^(0+128),w
 12973  0834  3A80               	xorlw	128
 12974  0835  3E97               	addlw	151
 12975  0836  1C03               	btfss	3,0
 12976  0837  280A               	goto	l5540
 12977  0838                     l5560:	
 12978  0838  3001               	movlw	1
 12979  0839                     u5905:	
 12980  0839  36A7               	lsrf	(___fltol@f1+3)^(0+128),f
 12981  083A  0CA6               	rrf	(___fltol@f1+2)^(0+128),f
 12982  083B  0CA5               	rrf	(___fltol@f1+1)^(0+128),f
 12983  083C  0CA4               	rrf	___fltol@f1^(0+128),f
 12984  083D  0B89               	decfsz	9,f
 12985  083E  2839               	goto	u5905
 12986  083F  3001               	movlw	1
 12987  0840  00A8               	movwf	??___fltol^(0+128)
 12988  0841  0828               	movf	??___fltol^(0+128),w
 12989  0842  07AE               	addwf	___fltol@exp1^(0+128),f
 12990  0843  1903               	btfsc	3,2
 12991  0844  2857               	goto	l5570
 12992  0845  2838               	goto	l5560
 12993  0846                     l5562:	
 12994  0846  3020               	movlw	32
 12995  0847  022E               	subwf	___fltol@exp1^(0+128),w
 12996  0848  1803               	btfsc	3,0
 12997  0849  280A               	goto	l5540
 12998  084A                     l1473:	
 12999  084A  082E               	movf	___fltol@exp1^(0+128),w
 13000  084B  1903               	btfsc	3,2
 13001  084C  2857               	goto	l5570
 13002  084D  3001               	movlw	1
 13003  084E                     u5935:	
 13004  084E  35A4               	lslf	___fltol@f1^(0+128),f
 13005  084F  0DA5               	rlf	(___fltol@f1+1)^(0+128),f
 13006  0850  0DA6               	rlf	(___fltol@f1+2)^(0+128),f
 13007  0851  0DA7               	rlf	(___fltol@f1+3)^(0+128),f
 13008  0852  0B89               	decfsz	9,f
 13009  0853  284E               	goto	u5935
 13010  0854  3001               	movlw	1
 13011  0855  02AE               	subwf	___fltol@exp1^(0+128),f
 13012  0856  284A               	goto	l1473
 13013  0857                     l5570:	
 13014  0857  082D               	movf	___fltol@sign1^(0+128),w
 13015  0858  1903               	btfsc	3,2
 13016  0859  0008               	return
 13017  085A  09A4               	comf	___fltol@f1^(0+128),f
 13018  085B  09A5               	comf	(___fltol@f1+1)^(0+128),f
 13019  085C  09A6               	comf	(___fltol@f1+2)^(0+128),f
 13020  085D  09A7               	comf	(___fltol@f1+3)^(0+128),f
 13021  085E  0AA4               	incf	___fltol@f1^(0+128),f
 13022  085F  1903               	skipnz
 13023  0860  0AA5               	incf	(___fltol@f1+1)^(0+128),f
 13024  0861  1903               	skipnz
 13025  0862  0AA6               	incf	(___fltol@f1+2)^(0+128),f
 13026  0863  1903               	skipnz
 13027  0864  0AA7               	incf	(___fltol@f1+3)^(0+128),f
 13028  0865  0008               	return
 13029  0866                     __end_of___fltol:	
 13030                           
 13031                           	psect	text40
 13032  13E1                     __ptext40:	
 13033 ;; *************** function ___fleq *****************
 13034 ;; Defined at:
 13035 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;  ff1             4    0[BANK0 ] long 
 13038 ;;  ff2             4    4[BANK0 ] long 
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;		None
 13041 ;; Return value:  Size  Location     Type
 13042 ;;		None               void
 13043 ;; Registers used:
 13044 ;;		wreg, status,2, status,0
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13050 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13052 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13053 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13054 ;;Total ram usage:       12 bytes
 13055 ;; Hardware stack levels used:    1
 13056 ;; Hardware stack levels required when called:    4
 13057 ;; This function calls:
 13058 ;;		Nothing
 13059 ;; This function is called by:
 13060 ;;		_LED_setHSL
 13061 ;;		_pulseColors
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           
 13066                           ;psect for function ___fleq
 13067  13E1                     ___fleq:	
 13068                           
 13069                           ;incstack = 0
 13070                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13071  13E1  3000               	movlw	0
 13072  13E2  0140               	movlb	0	; select bank0
 13073  13E3  0520               	andwf	___fleq@ff1,w
 13074  13E4  00A8               	movwf	??___fleq
 13075  13E5  3000               	movlw	0
 13076  13E6  0521               	andwf	___fleq@ff1+1,w
 13077  13E7  00A9               	movwf	??___fleq+1
 13078  13E8  3080               	movlw	128
 13079  13E9  0522               	andwf	___fleq@ff1+2,w
 13080  13EA  00AA               	movwf	??___fleq+2
 13081  13EB  307F               	movlw	127
 13082  13EC  0523               	andwf	___fleq@ff1+3,w
 13083  13ED  00AB               	movwf	??___fleq+3
 13084  13EE  082B               	movf	??___fleq+3,w
 13085  13EF  042A               	iorwf	??___fleq+2,w
 13086  13F0  0429               	iorwf	??___fleq+1,w
 13087  13F1  0428               	iorwf	??___fleq,w
 13088  13F2  1D03               	skipz
 13089  13F3  2BFC               	goto	l1441
 13090  13F4  3000               	movlw	0
 13091  13F5  00A3               	movwf	___fleq@ff1+3
 13092  13F6  3000               	movlw	0
 13093  13F7  00A2               	movwf	___fleq@ff1+2
 13094  13F8  3000               	movlw	0
 13095  13F9  00A1               	movwf	___fleq@ff1+1
 13096  13FA  3000               	movlw	0
 13097  13FB  00A0               	movwf	___fleq@ff1
 13098  13FC                     l1441:	
 13099  13FC  3000               	movlw	0
 13100  13FD  0524               	andwf	___fleq@ff2,w
 13101  13FE  00A8               	movwf	??___fleq
 13102  13FF  3000               	movlw	0
 13103  1400  0525               	andwf	___fleq@ff2+1,w
 13104  1401  00A9               	movwf	??___fleq+1
 13105  1402  3080               	movlw	128
 13106  1403  0526               	andwf	___fleq@ff2+2,w
 13107  1404  00AA               	movwf	??___fleq+2
 13108  1405  307F               	movlw	127
 13109  1406  0527               	andwf	___fleq@ff2+3,w
 13110  1407  00AB               	movwf	??___fleq+3
 13111  1408  082B               	movf	??___fleq+3,w
 13112  1409  042A               	iorwf	??___fleq+2,w
 13113  140A  0429               	iorwf	??___fleq+1,w
 13114  140B  0428               	iorwf	??___fleq,w
 13115  140C  1D03               	skipz
 13116  140D  2C16               	goto	l1442
 13117  140E  3000               	movlw	0
 13118  140F  00A7               	movwf	___fleq@ff2+3
 13119  1410  3000               	movlw	0
 13120  1411  00A6               	movwf	___fleq@ff2+2
 13121  1412  3000               	movlw	0
 13122  1413  00A5               	movwf	___fleq@ff2+1
 13123  1414  3000               	movlw	0
 13124  1415  00A4               	movwf	___fleq@ff2
 13125  1416                     l1442:	
 13126  1416  0827               	movf	___fleq@ff2+3,w
 13127  1417  0623               	xorwf	___fleq@ff1+3,w
 13128  1418  1D03               	skipz
 13129  1419  2C24               	goto	u3735
 13130  141A  0826               	movf	___fleq@ff2+2,w
 13131  141B  0622               	xorwf	___fleq@ff1+2,w
 13132  141C  1D03               	skipz
 13133  141D  2C24               	goto	u3735
 13134  141E  0825               	movf	___fleq@ff2+1,w
 13135  141F  0621               	xorwf	___fleq@ff1+1,w
 13136  1420  1D03               	skipz
 13137  1421  2C24               	goto	u3735
 13138  1422  0824               	movf	___fleq@ff2,w
 13139  1423  0620               	xorwf	___fleq@ff1,w
 13140  1424                     u3735:	
 13141  1424  1903               	skipnz
 13142  1425  2C28               	goto	l4108
 13143  1426  1003               	clrc
 13144  1427  0008               	return
 13145  1428                     l4108:	
 13146  1428  1403               	setc
 13147  1429  0008               	return
 13148  142A                     __end_of___fleq:	
 13149                           
 13150                           	psect	text41
 13151  0623                     __ptext41:	
 13152 ;; *************** function ___fldiv *****************
 13153 ;; Defined at:
 13154 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13155 ;; Parameters:    Size  Location     Type
 13156 ;;  a               4   14[BANK0 ] long 
 13157 ;;  b               4   18[BANK0 ] long 
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;  grs             4   34[BANK0 ] unsigned long 
 13160 ;;  rem             4   27[BANK0 ] unsigned long 
 13161 ;;  new_exp         2   32[BANK0 ] int 
 13162 ;;  aexp            1   39[BANK0 ] unsigned char 
 13163 ;;  bexp            1   38[BANK0 ] unsigned char 
 13164 ;;  sign            1   31[BANK0 ] unsigned char 
 13165 ;; Return value:  Size  Location     Type
 13166 ;;                  4   14[BANK0 ] unsigned char 
 13167 ;; Registers used:
 13168 ;;		wreg, status,2, status,0
 13169 ;; Tracked objects:
 13170 ;;		On entry : 0/0
 13171 ;;		On exit  : 0/0
 13172 ;;		Unchanged: 0/0
 13173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13174 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13175 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13176 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13177 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13178 ;;Total ram usage:       26 bytes
 13179 ;; Hardware stack levels used:    1
 13180 ;; Hardware stack levels required when called:    4
 13181 ;; This function calls:
 13182 ;;		Nothing
 13183 ;; This function is called by:
 13184 ;;		_LED_setHSL
 13185 ;;		_pulseColors
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           
 13190                           ;psect for function ___fldiv
 13191  0623                     ___fldiv:	
 13192                           
 13193                           ;incstack = 0
 13194                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 13195  0623  0140               	movlb	0	; select bank0
 13196  0624  0835               	movf	___fldiv@b+3,w
 13197  0625  3980               	andlw	128
 13198  0626  00B6               	movwf	??___fldiv
 13199  0627  0836               	movf	??___fldiv,w
 13200  0628  00BF               	movwf	___fldiv@sign
 13201  0629  3535               	lslf	___fldiv@b+3,w
 13202  062A  00B6               	movwf	??___fldiv
 13203  062B  0836               	movf	??___fldiv,w
 13204  062C  00C6               	movwf	___fldiv@bexp
 13205  062D  1BB4               	btfsc	___fldiv@b+2,7
 13206  062E  1446               	bsf	___fldiv@bexp,0
 13207  062F  0846               	movf	___fldiv@bexp,w
 13208  0630  1903               	btfsc	3,2
 13209  0631  2E40               	goto	l4166
 13210  0632  0A46               	incf	___fldiv@bexp,w
 13211  0633  1D03               	btfss	3,2
 13212  0634  2E3D               	goto	l4162
 13213  0635  3000               	movlw	0
 13214  0636  00B5               	movwf	___fldiv@b+3
 13215  0637  3000               	movlw	0
 13216  0638  00B4               	movwf	___fldiv@b+2
 13217  0639  3000               	movlw	0
 13218  063A  00B3               	movwf	___fldiv@b+1
 13219  063B  3000               	movlw	0
 13220  063C  00B2               	movwf	___fldiv@b
 13221  063D                     l4162:	
 13222  063D  17B4               	bsf	___fldiv@b+2,7
 13223  063E  01B5               	clrf	___fldiv@b+3
 13224  063F  2E48               	goto	l4168
 13225  0640                     l4166:	
 13226  0640  3000               	movlw	0
 13227  0641  00B5               	movwf	___fldiv@b+3
 13228  0642  3000               	movlw	0
 13229  0643  00B4               	movwf	___fldiv@b+2
 13230  0644  3000               	movlw	0
 13231  0645  00B3               	movwf	___fldiv@b+1
 13232  0646  3000               	movlw	0
 13233  0647  00B2               	movwf	___fldiv@b
 13234  0648                     l4168:	
 13235  0648  0831               	movf	___fldiv@a+3,w
 13236  0649  3980               	andlw	128
 13237  064A  00B6               	movwf	??___fldiv
 13238  064B  0836               	movf	??___fldiv,w
 13239  064C  06BF               	xorwf	___fldiv@sign,f
 13240  064D  3531               	lslf	___fldiv@a+3,w
 13241  064E  00B6               	movwf	??___fldiv
 13242  064F  0836               	movf	??___fldiv,w
 13243  0650  00C7               	movwf	___fldiv@aexp
 13244  0651  1BB0               	btfsc	___fldiv@a+2,7
 13245  0652  1447               	bsf	___fldiv@aexp,0
 13246  0653  0847               	movf	___fldiv@aexp,w
 13247  0654  1903               	btfsc	3,2
 13248  0655  2E64               	goto	l4186
 13249  0656  0A47               	incf	___fldiv@aexp,w
 13250  0657  1D03               	btfss	3,2
 13251  0658  2E61               	goto	l4182
 13252  0659  3000               	movlw	0
 13253  065A  00B1               	movwf	___fldiv@a+3
 13254  065B  3000               	movlw	0
 13255  065C  00B0               	movwf	___fldiv@a+2
 13256  065D  3000               	movlw	0
 13257  065E  00AF               	movwf	___fldiv@a+1
 13258  065F  3000               	movlw	0
 13259  0660  00AE               	movwf	___fldiv@a
 13260  0661                     l4182:	
 13261  0661  17B0               	bsf	___fldiv@a+2,7
 13262  0662  01B1               	clrf	___fldiv@a+3
 13263  0663  2E6C               	goto	l1629
 13264  0664                     l4186:	
 13265  0664  3000               	movlw	0
 13266  0665  00B1               	movwf	___fldiv@a+3
 13267  0666  3000               	movlw	0
 13268  0667  00B0               	movwf	___fldiv@a+2
 13269  0668  3000               	movlw	0
 13270  0669  00AF               	movwf	___fldiv@a+1
 13271  066A  3000               	movlw	0
 13272  066B  00AE               	movwf	___fldiv@a
 13273  066C                     l1629:	
 13274  066C  0831               	movf	___fldiv@a+3,w
 13275  066D  0430               	iorwf	___fldiv@a+2,w
 13276  066E  042F               	iorwf	___fldiv@a+1,w
 13277  066F  042E               	iorwf	___fldiv@a,w
 13278  0670  1D03               	skipz
 13279  0671  2E8B               	goto	l4196
 13280  0672  3000               	movlw	0
 13281  0673  00B5               	movwf	___fldiv@b+3
 13282  0674  3000               	movlw	0
 13283  0675  00B4               	movwf	___fldiv@b+2
 13284  0676  3000               	movlw	0
 13285  0677  00B3               	movwf	___fldiv@b+1
 13286  0678  3000               	movlw	0
 13287  0679  00B2               	movwf	___fldiv@b
 13288  067A  3080               	movlw	128
 13289  067B  04B4               	iorwf	___fldiv@b+2,f
 13290  067C  307F               	movlw	127
 13291  067D  04B5               	iorwf	___fldiv@b+3,f
 13292  067E                     L3:	
 13293  067E  083F               	movf	___fldiv@sign,w
 13294  067F  00B6               	movwf	??___fldiv
 13295  0680  0836               	movf	??___fldiv,w
 13296  0681  04B5               	iorwf	___fldiv@b+3,f
 13297  0682  0835               	movf	___fldiv@b+3,w
 13298  0683  00B1               	movwf	?___fldiv+3
 13299  0684  0834               	movf	___fldiv@b+2,w
 13300  0685  00B0               	movwf	?___fldiv+2
 13301  0686  0833               	movf	___fldiv@b+1,w
 13302  0687  00AF               	movwf	?___fldiv+1
 13303  0688  0832               	movf	___fldiv@b,w
 13304  0689  00AE               	movwf	?___fldiv
 13305  068A  0008               	return
 13306  068B                     l4196:	
 13307  068B  0846               	movf	___fldiv@bexp,w
 13308  068C  1D03               	btfss	3,2
 13309  068D  2E97               	goto	l4202
 13310  068E  3000               	movlw	0
 13311  068F  00B1               	movwf	?___fldiv+3
 13312  0690  3000               	movlw	0
 13313  0691  00B0               	movwf	?___fldiv+2
 13314  0692  3000               	movlw	0
 13315  0693  00AF               	movwf	?___fldiv+1
 13316  0694  3000               	movlw	0
 13317  0695  00AE               	movwf	?___fldiv
 13318  0696  0008               	return
 13319  0697                     l4202:	
 13320  0697  0846               	movf	___fldiv@bexp,w
 13321  0698  00B6               	movwf	??___fldiv
 13322  0699  01B7               	clrf	??___fldiv+1
 13323  069A  0837               	movf	??___fldiv+1,w
 13324  069B  00B9               	movwf	??___fldiv+3
 13325  069C  0847               	movf	___fldiv@aexp,w
 13326  069D  0236               	subwf	??___fldiv,w
 13327  069E  00B8               	movwf	??___fldiv+2
 13328  069F  1C03               	skipc
 13329  06A0  03B9               	decf	??___fldiv+3,f
 13330  06A1  0838               	movf	??___fldiv+2,w
 13331  06A2  3E7F               	addlw	127
 13332  06A3  00C0               	movwf	___fldiv@new_exp
 13333  06A4  3000               	movlw	0
 13334  06A5  3D39               	addwfc	??___fldiv+3,w
 13335  06A6  00C1               	movwf	___fldiv@new_exp+1
 13336  06A7  0835               	movf	___fldiv@b+3,w
 13337  06A8  00BE               	movwf	___fldiv@rem+3
 13338  06A9  0834               	movf	___fldiv@b+2,w
 13339  06AA  00BD               	movwf	___fldiv@rem+2
 13340  06AB  0833               	movf	___fldiv@b+1,w
 13341  06AC  00BC               	movwf	___fldiv@rem+1
 13342  06AD  0832               	movf	___fldiv@b,w
 13343  06AE  00BB               	movwf	___fldiv@rem
 13344  06AF  3000               	movlw	0
 13345  06B0  00B5               	movwf	___fldiv@b+3
 13346  06B1  3000               	movlw	0
 13347  06B2  00B4               	movwf	___fldiv@b+2
 13348  06B3  3000               	movlw	0
 13349  06B4  00B3               	movwf	___fldiv@b+1
 13350  06B5  3000               	movlw	0
 13351  06B6  00B2               	movwf	___fldiv@b
 13352  06B7  3000               	movlw	0
 13353  06B8  00C5               	movwf	___fldiv@grs+3
 13354  06B9  3000               	movlw	0
 13355  06BA  00C4               	movwf	___fldiv@grs+2
 13356  06BB  3000               	movlw	0
 13357  06BC  00C3               	movwf	___fldiv@grs+1
 13358  06BD  3000               	movlw	0
 13359  06BE  00C2               	movwf	___fldiv@grs
 13360  06BF  01C7               	clrf	___fldiv@aexp
 13361  06C0                     l4230:	
 13362  06C0  301A               	movlw	26
 13363  06C1  0247               	subwf	___fldiv@aexp,w
 13364  06C2  1803               	btfsc	3,0
 13365  06C3  2EFC               	goto	l4232
 13366  06C4  0847               	movf	___fldiv@aexp,w
 13367  06C5  1903               	btfsc	3,2
 13368  06C6  2EDE               	goto	l4222
 13369  06C7  3001               	movlw	1
 13370  06C8                     u3935:	
 13371  06C8  35BB               	lslf	___fldiv@rem,f
 13372  06C9  0DBC               	rlf	___fldiv@rem+1,f
 13373  06CA  0DBD               	rlf	___fldiv@rem+2,f
 13374  06CB  0DBE               	rlf	___fldiv@rem+3,f
 13375  06CC  0B89               	decfsz	9,f
 13376  06CD  2EC8               	goto	u3935
 13377  06CE  3001               	movlw	1
 13378  06CF                     u3945:	
 13379  06CF  35B2               	lslf	___fldiv@b,f
 13380  06D0  0DB3               	rlf	___fldiv@b+1,f
 13381  06D1  0DB4               	rlf	___fldiv@b+2,f
 13382  06D2  0DB5               	rlf	___fldiv@b+3,f
 13383  06D3  0B89               	decfsz	9,f
 13384  06D4  2ECF               	goto	u3945
 13385  06D5  1BC5               	btfsc	___fldiv@grs+3,7
 13386  06D6  1432               	bsf	___fldiv@b,0
 13387  06D7  3001               	movlw	1
 13388  06D8                     u3965:	
 13389  06D8  35C2               	lslf	___fldiv@grs,f
 13390  06D9  0DC3               	rlf	___fldiv@grs+1,f
 13391  06DA  0DC4               	rlf	___fldiv@grs+2,f
 13392  06DB  0DC5               	rlf	___fldiv@grs+3,f
 13393  06DC  0B89               	decfsz	9,f
 13394  06DD  2ED8               	goto	u3965
 13395  06DE                     l4222:	
 13396  06DE  0831               	movf	___fldiv@a+3,w
 13397  06DF  023E               	subwf	___fldiv@rem+3,w
 13398  06E0  1D03               	skipz
 13399  06E1  2EEC               	goto	u3975
 13400  06E2  0830               	movf	___fldiv@a+2,w
 13401  06E3  023D               	subwf	___fldiv@rem+2,w
 13402  06E4  1D03               	skipz
 13403  06E5  2EEC               	goto	u3975
 13404  06E6  082F               	movf	___fldiv@a+1,w
 13405  06E7  023C               	subwf	___fldiv@rem+1,w
 13406  06E8  1D03               	skipz
 13407  06E9  2EEC               	goto	u3975
 13408  06EA  082E               	movf	___fldiv@a,w
 13409  06EB  023B               	subwf	___fldiv@rem,w
 13410  06EC                     u3975:	
 13411  06EC  1C03               	skipc
 13412  06ED  2EF7               	goto	l4228
 13413  06EE  1745               	bsf	___fldiv@grs+3,6
 13414  06EF  082E               	movf	___fldiv@a,w
 13415  06F0  02BB               	subwf	___fldiv@rem,f
 13416  06F1  082F               	movf	___fldiv@a+1,w
 13417  06F2  3BBC               	subwfb	___fldiv@rem+1,f
 13418  06F3  0830               	movf	___fldiv@a+2,w
 13419  06F4  3BBD               	subwfb	___fldiv@rem+2,f
 13420  06F5  0831               	movf	___fldiv@a+3,w
 13421  06F6  3BBE               	subwfb	___fldiv@rem+3,f
 13422  06F7                     l4228:	
 13423  06F7  3001               	movlw	1
 13424  06F8  00B6               	movwf	??___fldiv
 13425  06F9  0836               	movf	??___fldiv,w
 13426  06FA  07C7               	addwf	___fldiv@aexp,f
 13427  06FB  2EC0               	goto	l4230
 13428  06FC                     l4232:	
 13429  06FC  083E               	movf	___fldiv@rem+3,w
 13430  06FD  043D               	iorwf	___fldiv@rem+2,w
 13431  06FE  043C               	iorwf	___fldiv@rem+1,w
 13432  06FF  043B               	iorwf	___fldiv@rem,w
 13433  0700  1D03               	btfss	3,2
 13434  0701  1442               	bsf	___fldiv@grs,0
 13435  0702                     l4246:	
 13436  0702  1BB4               	btfsc	___fldiv@b+2,7
 13437  0703  2F19               	goto	l4248
 13438  0704  3001               	movlw	1
 13439  0705                     u4005:	
 13440  0705  35B2               	lslf	___fldiv@b,f
 13441  0706  0DB3               	rlf	___fldiv@b+1,f
 13442  0707  0DB4               	rlf	___fldiv@b+2,f
 13443  0708  0DB5               	rlf	___fldiv@b+3,f
 13444  0709  0B89               	decfsz	9,f
 13445  070A  2F05               	goto	u4005
 13446  070B  1BC5               	btfsc	___fldiv@grs+3,7
 13447  070C  1432               	bsf	___fldiv@b,0
 13448  070D  3001               	movlw	1
 13449  070E                     u4025:	
 13450  070E  35C2               	lslf	___fldiv@grs,f
 13451  070F  0DC3               	rlf	___fldiv@grs+1,f
 13452  0710  0DC4               	rlf	___fldiv@grs+2,f
 13453  0711  0DC5               	rlf	___fldiv@grs+3,f
 13454  0712  0B89               	decfsz	9,f
 13455  0713  2F0E               	goto	u4025
 13456  0714  30FF               	movlw	255
 13457  0715  07C0               	addwf	___fldiv@new_exp,f
 13458  0716  30FF               	movlw	255
 13459  0717  3DC1               	addwfc	___fldiv@new_exp+1,f
 13460  0718  2F02               	goto	l4246
 13461  0719                     l4248:	
 13462  0719  01C7               	clrf	___fldiv@aexp
 13463  071A  1FC5               	btfss	___fldiv@grs+3,7
 13464  071B  2F32               	goto	l4258
 13465  071C  30FF               	movlw	255
 13466  071D  0542               	andwf	___fldiv@grs,w
 13467  071E  00B6               	movwf	??___fldiv
 13468  071F  30FF               	movlw	255
 13469  0720  0543               	andwf	___fldiv@grs+1,w
 13470  0721  00B7               	movwf	??___fldiv+1
 13471  0722  30FF               	movlw	255
 13472  0723  0544               	andwf	___fldiv@grs+2,w
 13473  0724  00B8               	movwf	??___fldiv+2
 13474  0725  307F               	movlw	127
 13475  0726  0545               	andwf	___fldiv@grs+3,w
 13476  0727  00B9               	movwf	??___fldiv+3
 13477  0728  0839               	movf	??___fldiv+3,w
 13478  0729  0438               	iorwf	??___fldiv+2,w
 13479  072A  0437               	iorwf	??___fldiv+1,w
 13480  072B  0436               	iorwf	??___fldiv,w
 13481  072C  1903               	skipnz
 13482  072D  1832               	btfsc	___fldiv@b,0
 13483  072E  2F30               	goto	l4254
 13484  072F  2F32               	goto	l4258
 13485  0730                     l4254:	
 13486  0730  01C7               	clrf	___fldiv@aexp
 13487  0731  0AC7               	incf	___fldiv@aexp,f
 13488  0732                     l4258:	
 13489  0732  0847               	movf	___fldiv@aexp,w
 13490  0733  1903               	btfsc	3,2
 13491  0734  2F5B               	goto	l4268
 13492  0735  3001               	movlw	1
 13493  0736  07B2               	addwf	___fldiv@b,f
 13494  0737  3000               	movlw	0
 13495  0738  3DB3               	addwfc	___fldiv@b+1,f
 13496  0739  3000               	movlw	0
 13497  073A  3DB4               	addwfc	___fldiv@b+2,f
 13498  073B  3000               	movlw	0
 13499  073C  3DB5               	addwfc	___fldiv@b+3,f
 13500  073D  1C35               	btfss	___fldiv@b+3,0
 13501  073E  2F5B               	goto	l4268
 13502  073F  0832               	movf	___fldiv@b,w
 13503  0740  00B6               	movwf	??___fldiv
 13504  0741  0833               	movf	___fldiv@b+1,w
 13505  0742  00B7               	movwf	??___fldiv+1
 13506  0743  0834               	movf	___fldiv@b+2,w
 13507  0744  00B8               	movwf	??___fldiv+2
 13508  0745  0835               	movf	___fldiv@b+3,w
 13509  0746  00B9               	movwf	??___fldiv+3
 13510  0747  3001               	movlw	1
 13511  0748  00BA               	movwf	??___fldiv+4
 13512  0749                     u4095:	
 13513  0749  37B9               	asrf	??___fldiv+3,f
 13514  074A  0CB8               	rrf	??___fldiv+2,f
 13515  074B  0CB7               	rrf	??___fldiv+1,f
 13516  074C  0CB6               	rrf	??___fldiv,f
 13517  074D  0BBA               	decfsz	??___fldiv+4,f
 13518  074E  2F49               	goto	u4095
 13519  074F  0839               	movf	??___fldiv+3,w
 13520  0750  00B5               	movwf	___fldiv@b+3
 13521  0751  0838               	movf	??___fldiv+2,w
 13522  0752  00B4               	movwf	___fldiv@b+2
 13523  0753  0837               	movf	??___fldiv+1,w
 13524  0754  00B3               	movwf	___fldiv@b+1
 13525  0755  0836               	movf	??___fldiv,w
 13526  0756  00B2               	movwf	___fldiv@b
 13527  0757  3001               	movlw	1
 13528  0758  07C0               	addwf	___fldiv@new_exp,f
 13529  0759  3000               	movlw	0
 13530  075A  3DC1               	addwfc	___fldiv@new_exp+1,f
 13531  075B                     l4268:	
 13532  075B  0841               	movf	___fldiv@new_exp+1,w
 13533  075C  3A80               	xorlw	128
 13534  075D  00B6               	movwf	??___fldiv
 13535  075E  3080               	movlw	128
 13536  075F  0236               	subwf	??___fldiv,w
 13537  0760  1D03               	skipz
 13538  0761  2F64               	goto	u4105
 13539  0762  30FF               	movlw	255
 13540  0763  0240               	subwf	___fldiv@new_exp,w
 13541  0764                     u4105:	
 13542  0764  1C03               	skipc
 13543  0765  2F73               	goto	l1650
 13544  0766  30FF               	movlw	255
 13545  0767  0140               	movlb	0	; select bank0
 13546  0768  00C0               	movwf	___fldiv@new_exp
 13547  0769  3000               	movlw	0
 13548  076A  00C1               	movwf	___fldiv@new_exp+1
 13549  076B  3000               	movlw	0
 13550  076C  00B5               	movwf	___fldiv@b+3
 13551  076D  3000               	movlw	0
 13552  076E  00B4               	movwf	___fldiv@b+2
 13553  076F  3000               	movlw	0
 13554  0770  00B3               	movwf	___fldiv@b+1
 13555  0771  3000               	movlw	0
 13556  0772  00B2               	movwf	___fldiv@b
 13557  0773                     l1650:	
 13558  0773  0140               	movlb	0	; select bank0
 13559  0774  0841               	movf	___fldiv@new_exp+1,w
 13560  0775  3A80               	xorlw	128
 13561  0776  00B6               	movwf	??___fldiv
 13562  0777  3080               	movlw	128
 13563  0778  0236               	subwf	??___fldiv,w
 13564  0779  1D03               	skipz
 13565  077A  2F7D               	goto	u4115
 13566  077B  3001               	movlw	1
 13567  077C  0240               	subwf	___fldiv@new_exp,w
 13568  077D                     u4115:	
 13569  077D  1803               	skipnc
 13570  077E  2F8B               	goto	l1651
 13571  077F  0140               	movlb	0	; select bank0
 13572  0780  01C0               	clrf	___fldiv@new_exp
 13573  0781  01C1               	clrf	___fldiv@new_exp+1
 13574  0782  3000               	movlw	0
 13575  0783  00B5               	movwf	___fldiv@b+3
 13576  0784  3000               	movlw	0
 13577  0785  00B4               	movwf	___fldiv@b+2
 13578  0786  3000               	movlw	0
 13579  0787  00B3               	movwf	___fldiv@b+1
 13580  0788  3000               	movlw	0
 13581  0789  00B2               	movwf	___fldiv@b
 13582  078A  01BF               	clrf	___fldiv@sign
 13583  078B                     l1651:	
 13584  078B  0140               	movlb	0	; select bank0
 13585  078C  0840               	movf	___fldiv@new_exp,w
 13586  078D  00B6               	movwf	??___fldiv
 13587  078E  0836               	movf	??___fldiv,w
 13588  078F  00C6               	movwf	___fldiv@bexp
 13589  0790  1C46               	btfss	___fldiv@bexp,0
 13590  0791  2F94               	goto	l4282
 13591  0792  17B4               	bsf	___fldiv@b+2,7
 13592  0793  2F98               	goto	l1653
 13593  0794                     l4282:	
 13594  0794  307F               	movlw	127
 13595  0795  00B6               	movwf	??___fldiv
 13596  0796  0836               	movf	??___fldiv,w
 13597  0797  05B4               	andwf	___fldiv@b+2,f
 13598  0798                     l1653:	
 13599  0798  3646               	lsrf	___fldiv@bexp,w
 13600  0799  00B6               	movwf	??___fldiv
 13601  079A  0836               	movf	??___fldiv,w
 13602  079B  00B5               	movwf	___fldiv@b+3
 13603  079C  2E7E               	goto	L3
 13604  079D                     __end_of___fldiv:	
 13605                           
 13606                           	psect	text42
 13607  135F                     __ptext42:	
 13608 ;; *************** function _LED_setColor *****************
 13609 ;; Defined at:
 13610 ;;		line 60 in file "led.c"
 13611 ;; Parameters:    Size  Location     Type
 13612 ;;  red             1    wreg     unsigned char 
 13613 ;;  green           1    0[BANK0 ] unsigned char 
 13614 ;;  white           1    1[BANK0 ] unsigned char 
 13615 ;;  blue            1    2[BANK0 ] unsigned char 
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;  red             1   21[BANK0 ] unsigned char 
 13618 ;;  lo4             2   19[BANK0 ] int 
 13619 ;;  hi4             2    0        int 
 13620 ;;  lo3             2   15[BANK0 ] int 
 13621 ;;  hi3             2    0        int 
 13622 ;;  lo2             2   11[BANK0 ] int 
 13623 ;;  hi2             2    0        int 
 13624 ;;  lo1             2    7[BANK0 ] int 
 13625 ;;  hi1             2    0        int 
 13626 ;; Return value:  Size  Location     Type
 13627 ;;                  1    wreg      void 
 13628 ;; Registers used:
 13629 ;;		wreg, status,2
 13630 ;; Tracked objects:
 13631 ;;		On entry : 0/0
 13632 ;;		On exit  : 0/0
 13633 ;;		Unchanged: 0/0
 13634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13635 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13636 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13637 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13638 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13639 ;;Total ram usage:       22 bytes
 13640 ;; Hardware stack levels used:    1
 13641 ;; Hardware stack levels required when called:    4
 13642 ;; This function calls:
 13643 ;;		Nothing
 13644 ;; This function is called by:
 13645 ;;		_LED_setHSL
 13646 ;;		_LED_DMX
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650                           
 13651                           ;psect for function _LED_setColor
 13652  135F                     _LED_setColor:	
 13653                           
 13654                           ;incstack = 0
 13655                           ; Regs used in _LED_setColor: [wreg+status,2]
 13656                           ;LED_setColor@red stored from wreg
 13657  135F  0140               	movlb	0	; select bank0
 13658  1360  00B5               	movwf	LED_setColor@red
 13659                           
 13660                           ;led.c: 61:     red/=2;
 13661  1361  1003               	clrc
 13662  1362  0CB5               	rrf	LED_setColor@red,f
 13663                           
 13664                           ;led.c: 62:     green/=2;
 13665  1363  1003               	clrc
 13666  1364  0CA0               	rrf	LED_setColor@green,f
 13667                           
 13668                           ;led.c: 63:     blue/=2;
 13669  1365  1003               	clrc
 13670  1366  0CA2               	rrf	LED_setColor@blue,f
 13671                           
 13672                           ;led.c: 64:     white/=2;
 13673  1367  1003               	clrc
 13674  1368  0CA1               	rrf	LED_setColor@white,f
 13675                           
 13676                           ;led.c: 66:     int lo1 = red & 0x00FF;
 13677  1369  0835               	movf	LED_setColor@red,w
 13678  136A  00A3               	movwf	??_LED_setColor
 13679  136B  01A4               	clrf	??_LED_setColor+1
 13680  136C  0823               	movf	??_LED_setColor,w
 13681  136D  00A7               	movwf	LED_setColor@lo1
 13682  136E  0824               	movf	??_LED_setColor+1,w
 13683  136F  00A8               	movwf	LED_setColor@lo1+1
 13684                           
 13685                           ;led.c: 68:     int lo2 = green & 0x00FF;
 13686  1370  0820               	movf	LED_setColor@green,w
 13687  1371  00A3               	movwf	??_LED_setColor
 13688  1372  01A4               	clrf	??_LED_setColor+1
 13689  1373  0823               	movf	??_LED_setColor,w
 13690  1374  00AB               	movwf	LED_setColor@lo2
 13691  1375  0824               	movf	??_LED_setColor+1,w
 13692  1376  00AC               	movwf	LED_setColor@lo2+1
 13693                           
 13694                           ;led.c: 70:     int lo3 = blue & 0x00FF;
 13695  1377  0822               	movf	LED_setColor@blue,w
 13696  1378  00A3               	movwf	??_LED_setColor
 13697  1379  01A4               	clrf	??_LED_setColor+1
 13698  137A  0823               	movf	??_LED_setColor,w
 13699  137B  00AF               	movwf	LED_setColor@lo3
 13700  137C  0824               	movf	??_LED_setColor+1,w
 13701  137D  00B0               	movwf	LED_setColor@lo3+1
 13702                           
 13703                           ;led.c: 72:     int lo4 = white & 0x00FF;
 13704  137E  0821               	movf	LED_setColor@white,w
 13705  137F  00A3               	movwf	??_LED_setColor
 13706  1380  01A4               	clrf	??_LED_setColor+1
 13707  1381  0823               	movf	??_LED_setColor,w
 13708  1382  00B3               	movwf	LED_setColor@lo4
 13709  1383  0824               	movf	??_LED_setColor+1,w
 13710  1384  00B4               	movwf	LED_setColor@lo4+1
 13711                           
 13712                           ;led.c: 74:     CCPR1H = hi1;
 13713  1385  0146               	movlb	6	; select bank6
 13714  1386  018D               	clrf	13	;volatile
 13715                           
 13716                           ;led.c: 75:     CCPR1L = lo1;
 13717  1387  0140               	movlb	0	; select bank0
 13718  1388  0827               	movf	LED_setColor@lo1,w
 13719  1389  0146               	movlb	6	; select bank6
 13720  138A  008C               	movwf	12	;volatile
 13721                           
 13722                           ;led.c: 77:     CCPR2H = hi2;
 13723  138B  0191               	clrf	17	;volatile
 13724                           
 13725                           ;led.c: 78:     CCPR2L = lo2;
 13726  138C  0140               	movlb	0	; select bank0
 13727  138D  082B               	movf	LED_setColor@lo2,w
 13728  138E  0146               	movlb	6	; select bank6
 13729  138F  0090               	movwf	16	;volatile
 13730                           
 13731                           ;led.c: 80:     CCPR3H = hi3;
 13732  1390  0195               	clrf	21	;volatile
 13733                           
 13734                           ;led.c: 81:     CCPR3L = lo3;
 13735  1391  0140               	movlb	0	; select bank0
 13736  1392  082F               	movf	LED_setColor@lo3,w
 13737  1393  0146               	movlb	6	; select bank6
 13738  1394  0094               	movwf	20	;volatile
 13739                           
 13740                           ;led.c: 83:     CCPR4H = hi4;
 13741  1395  0199               	clrf	25	;volatile
 13742                           
 13743                           ;led.c: 84:     CCPR4L = lo4;
 13744  1396  0140               	movlb	0	; select bank0
 13745  1397  0833               	movf	LED_setColor@lo4,w
 13746  1398  0146               	movlb	6	; select bank6
 13747  1399  0098               	movwf	24	;volatile
 13748  139A  0008               	return
 13749  139B                     __end_of_LED_setColor:	
 13750                           
 13751                           	psect	text43
 13752  0E1C                     __ptext43:	
 13753 ;; *************** function _HueToRGB *****************
 13754 ;; Defined at:
 13755 ;;		line 41 in file "led.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;  v1              4   67[BANK0 ] float 
 13758 ;;  v2              4   71[BANK0 ] float 
 13759 ;;  vH              4   75[BANK0 ] float 
 13760 ;; Auto vars:     Size  Location     Type
 13761 ;;		None
 13762 ;; Return value:  Size  Location     Type
 13763 ;;                  4   67[BANK0 ] float 
 13764 ;; Registers used:
 13765 ;;		wreg, status,2, status,0, pclath, cstack
 13766 ;; Tracked objects:
 13767 ;;		On entry : 0/0
 13768 ;;		On exit  : 0/0
 13769 ;;		Unchanged: 0/0
 13770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13771 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13772 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13774 ;;      Totals:         0      12       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13775 ;;Total ram usage:       16 bytes
 13776 ;; Hardware stack levels used:    1
 13777 ;; Hardware stack levels required when called:    6
 13778 ;; This function calls:
 13779 ;;		___fladd
 13780 ;;		___flge
 13781 ;;		___flmul
 13782 ;;		___flsub
 13783 ;; This function is called by:
 13784 ;;		_LED_setHSL
 13785 ;; This function uses a non-reentrant model
 13786 ;;
 13787                           
 13788                           
 13789                           ;psect for function _HueToRGB
 13790  0E1C                     _HueToRGB:	
 13791                           
 13792                           ;led.c: 42:  if (vH < 0)
 13793                           
 13794                           ;incstack = 0
 13795                           ; Regs used in _HueToRGB: [wreg+status,2+status,0+pclath+cstack]
 13796  0E1C  0140               	movlb	0	; select bank0
 13797  0E1D  086E               	movf	HueToRGB@vH+3,w
 13798  0E1E  00DA               	movwf	___flge@ff1+3
 13799  0E1F  086D               	movf	HueToRGB@vH+2,w
 13800  0E20  00D9               	movwf	___flge@ff1+2
 13801  0E21  086C               	movf	HueToRGB@vH+1,w
 13802  0E22  00D8               	movwf	___flge@ff1+1
 13803  0E23  086B               	movf	HueToRGB@vH,w
 13804  0E24  00D7               	movwf	___flge@ff1
 13805  0E25  3000               	movlw	0
 13806  0E26  00DE               	movwf	___flge@ff2+3
 13807  0E27  3000               	movlw	0
 13808  0E28  00DD               	movwf	___flge@ff2+2
 13809  0E29  3000               	movlw	0
 13810  0E2A  00DC               	movwf	___flge@ff2+1
 13811  0E2B  3000               	movlw	0
 13812  0E2C  00DB               	movwf	___flge@ff2
 13813  0E2D  3195  25F4  318E   	fcall	___flge
 13814  0E30  1803               	btfsc	3,0
 13815  0E31  2E4F               	goto	l969
 13816                           
 13817                           ;led.c: 43:   vH += 1;
 13818  0E32  303F               	movlw	63
 13819  0E33  0140               	movlb	0	; select bank0
 13820  0E34  00AC               	movwf	___fladd@b+3
 13821  0E35  3080               	movlw	128
 13822  0E36  00AB               	movwf	___fladd@b+2
 13823  0E37  3000               	movlw	0
 13824  0E38  00AA               	movwf	___fladd@b+1
 13825  0E39  3000               	movlw	0
 13826  0E3A  00A9               	movwf	___fladd@b
 13827  0E3B  086E               	movf	HueToRGB@vH+3,w
 13828  0E3C  00B0               	movwf	___fladd@a+3
 13829  0E3D  086D               	movf	HueToRGB@vH+2,w
 13830  0E3E  00AF               	movwf	___fladd@a+2
 13831  0E3F  086C               	movf	HueToRGB@vH+1,w
 13832  0E40  00AE               	movwf	___fladd@a+1
 13833  0E41  086B               	movf	HueToRGB@vH,w
 13834  0E42  00AD               	movwf	___fladd@a
 13835  0E43  318C  243A  318E   	fcall	___fladd
 13836  0E46  0140               	movlb	0	; select bank0
 13837  0E47  082C               	movf	?___fladd+3,w
 13838  0E48  00EE               	movwf	HueToRGB@vH+3
 13839  0E49  082B               	movf	?___fladd+2,w
 13840  0E4A  00ED               	movwf	HueToRGB@vH+2
 13841  0E4B  082A               	movf	?___fladd+1,w
 13842  0E4C  00EC               	movwf	HueToRGB@vH+1
 13843  0E4D  0829               	movf	?___fladd,w
 13844  0E4E  00EB               	movwf	HueToRGB@vH
 13845  0E4F                     l969:	
 13846                           
 13847                           ;led.c: 45:  if (vH > 1)
 13848  0E4F  303F               	movlw	63
 13849  0E50  0140               	movlb	0	; select bank0
 13850  0E51  00DA               	movwf	___flge@ff1+3
 13851  0E52  3080               	movlw	128
 13852  0E53  00D9               	movwf	___flge@ff1+2
 13853  0E54  3000               	movlw	0
 13854  0E55  00D8               	movwf	___flge@ff1+1
 13855  0E56  3000               	movlw	0
 13856  0E57  00D7               	movwf	___flge@ff1
 13857  0E58  086E               	movf	HueToRGB@vH+3,w
 13858  0E59  00DE               	movwf	___flge@ff2+3
 13859  0E5A  086D               	movf	HueToRGB@vH+2,w
 13860  0E5B  00DD               	movwf	___flge@ff2+2
 13861  0E5C  086C               	movf	HueToRGB@vH+1,w
 13862  0E5D  00DC               	movwf	___flge@ff2+1
 13863  0E5E  086B               	movf	HueToRGB@vH,w
 13864  0E5F  00DB               	movwf	___flge@ff2
 13865  0E60  3195  25F4  318E   	fcall	___flge
 13866  0E63  1803               	btfsc	3,0
 13867  0E64  2E82               	goto	l970
 13868                           
 13869                           ;led.c: 46:   vH -= 1;
 13870  0E65  303F               	movlw	63
 13871  0E66  0140               	movlb	0	; select bank0
 13872  0E67  00DA               	movwf	___flsub@a+3
 13873  0E68  3080               	movlw	128
 13874  0E69  00D9               	movwf	___flsub@a+2
 13875  0E6A  3000               	movlw	0
 13876  0E6B  00D8               	movwf	___flsub@a+1
 13877  0E6C  3000               	movlw	0
 13878  0E6D  00D7               	movwf	___flsub@a
 13879  0E6E  086E               	movf	HueToRGB@vH+3,w
 13880  0E6F  00DE               	movwf	___flsub@b+3
 13881  0E70  086D               	movf	HueToRGB@vH+2,w
 13882  0E71  00DD               	movwf	___flsub@b+2
 13883  0E72  086C               	movf	HueToRGB@vH+1,w
 13884  0E73  00DC               	movwf	___flsub@b+1
 13885  0E74  086B               	movf	HueToRGB@vH,w
 13886  0E75  00DB               	movwf	___flsub@b
 13887  0E76  3190  209C  318E   	fcall	___flsub
 13888  0E79  0140               	movlb	0	; select bank0
 13889  0E7A  085A               	movf	?___flsub+3,w
 13890  0E7B  00EE               	movwf	HueToRGB@vH+3
 13891  0E7C  0859               	movf	?___flsub+2,w
 13892  0E7D  00ED               	movwf	HueToRGB@vH+2
 13893  0E7E  0858               	movf	?___flsub+1,w
 13894  0E7F  00EC               	movwf	HueToRGB@vH+1
 13895  0E80  0857               	movf	?___flsub,w
 13896  0E81  00EB               	movwf	HueToRGB@vH
 13897  0E82                     l970:	
 13898                           
 13899                           ;led.c: 48:  if ((6 * vH) < 1)
 13900  0E82  3040               	movlw	64
 13901  0E83  0140               	movlb	0	; select bank0
 13902  0E84  00C0               	movwf	___flmul@b+3
 13903  0E85  30C0               	movlw	192
 13904  0E86  00BF               	movwf	___flmul@b+2
 13905  0E87  3000               	movlw	0
 13906  0E88  00BE               	movwf	___flmul@b+1
 13907  0E89  3000               	movlw	0
 13908  0E8A  00BD               	movwf	___flmul@b
 13909  0E8B  086E               	movf	HueToRGB@vH+3,w
 13910  0E8C  00C4               	movwf	___flmul@a+3
 13911  0E8D  086D               	movf	HueToRGB@vH+2,w
 13912  0E8E  00C3               	movwf	___flmul@a+2
 13913  0E8F  086C               	movf	HueToRGB@vH+1,w
 13914  0E90  00C2               	movwf	___flmul@a+1
 13915  0E91  086B               	movf	HueToRGB@vH,w
 13916  0E92  00C1               	movwf	___flmul@a
 13917  0E93  3183  23F7  318E   	fcall	___flmul
 13918  0E96  0140               	movlb	0	; select bank0
 13919  0E97  0840               	movf	?___flmul+3,w
 13920  0E98  00DA               	movwf	___flge@ff1+3
 13921  0E99  083F               	movf	?___flmul+2,w
 13922  0E9A  00D9               	movwf	___flge@ff1+2
 13923  0E9B  083E               	movf	?___flmul+1,w
 13924  0E9C  00D8               	movwf	___flge@ff1+1
 13925  0E9D  083D               	movf	?___flmul,w
 13926  0E9E  00D7               	movwf	___flge@ff1
 13927  0E9F  303F               	movlw	63
 13928  0EA0  00DE               	movwf	___flge@ff2+3
 13929  0EA1  3080               	movlw	128
 13930  0EA2  00DD               	movwf	___flge@ff2+2
 13931  0EA3  3000               	movlw	0
 13932  0EA4  00DC               	movwf	___flge@ff2+1
 13933  0EA5  3000               	movlw	0
 13934  0EA6  00DB               	movwf	___flge@ff2
 13935  0EA7  3195  25F4  318E   	fcall	___flge
 13936  0EAA  1803               	btfsc	3,0
 13937  0EAB  2F1D               	goto	l5496
 13938                           
 13939                           ;led.c: 49:   return (v1 + (v2 - v1) * 6 * vH);
 13940  0EAC  3040               	movlw	64
 13941  0EAD  0140               	movlb	0	; select bank0
 13942  0EAE  00C0               	movwf	___flmul@b+3
 13943  0EAF  30C0               	movlw	192
 13944  0EB0  00BF               	movwf	___flmul@b+2
 13945  0EB1  3000               	movlw	0
 13946  0EB2  00BE               	movwf	___flmul@b+1
 13947  0EB3  3000               	movlw	0
 13948  0EB4  00BD               	movwf	___flmul@b
 13949  0EB5  0866               	movf	HueToRGB@v1+3,w
 13950  0EB6  00DA               	movwf	___flsub@a+3
 13951  0EB7  0865               	movf	HueToRGB@v1+2,w
 13952  0EB8  00D9               	movwf	___flsub@a+2
 13953  0EB9  0864               	movf	HueToRGB@v1+1,w
 13954  0EBA  00D8               	movwf	___flsub@a+1
 13955  0EBB  0863               	movf	HueToRGB@v1,w
 13956  0EBC  00D7               	movwf	___flsub@a
 13957  0EBD  086A               	movf	HueToRGB@v2+3,w
 13958  0EBE  00DE               	movwf	___flsub@b+3
 13959  0EBF  0869               	movf	HueToRGB@v2+2,w
 13960  0EC0  00DD               	movwf	___flsub@b+2
 13961  0EC1  0868               	movf	HueToRGB@v2+1,w
 13962  0EC2  00DC               	movwf	___flsub@b+1
 13963  0EC3  0867               	movf	HueToRGB@v2,w
 13964  0EC4  00DB               	movwf	___flsub@b
 13965  0EC5  3190  209C  318E   	fcall	___flsub
 13966  0EC8  0140               	movlb	0	; select bank0
 13967  0EC9  085A               	movf	?___flsub+3,w
 13968  0ECA  00C4               	movwf	___flmul@a+3
 13969  0ECB  0859               	movf	?___flsub+2,w
 13970  0ECC  00C3               	movwf	___flmul@a+2
 13971  0ECD  0858               	movf	?___flsub+1,w
 13972  0ECE  00C2               	movwf	___flmul@a+1
 13973  0ECF  0857               	movf	?___flsub,w
 13974  0ED0  00C1               	movwf	___flmul@a
 13975  0ED1  3183  23F7  318E   	fcall	___flmul
 13976  0ED4  0140               	movlb	0	; select bank0
 13977  0ED5  0840               	movf	?___flmul+3,w
 13978  0ED6  0141               	movlb	1	; select bank1
 13979  0ED7  00A3               	movwf	(_HueToRGB$2858+3)^(0+128)
 13980  0ED8  0140               	movlb	0	; select bank0
 13981  0ED9  083F               	movf	?___flmul+2,w
 13982  0EDA  0141               	movlb	1	; select bank1
 13983  0EDB  00A2               	movwf	(_HueToRGB$2858+2)^(0+128)
 13984  0EDC  0140               	movlb	0	; select bank0
 13985  0EDD  083E               	movf	?___flmul+1,w
 13986  0EDE  0141               	movlb	1	; select bank1
 13987  0EDF  00A1               	movwf	(_HueToRGB$2858+1)^(0+128)
 13988  0EE0  0140               	movlb	0	; select bank0
 13989  0EE1  083D               	movf	?___flmul,w
 13990  0EE2  0141               	movlb	1	; select bank1
 13991  0EE3  00A0               	movwf	_HueToRGB$2858^(0+128)
 13992                           
 13993                           ;led.c: 49:   return (v1 + (v2 - v1) * 6 * vH);
 13994  0EE4  0140               	movlb	0	; select bank0
 13995  0EE5  0866               	movf	HueToRGB@v1+3,w
 13996  0EE6  00AC               	movwf	___fladd@b+3
 13997  0EE7  0865               	movf	HueToRGB@v1+2,w
 13998  0EE8  00AB               	movwf	___fladd@b+2
 13999  0EE9  0864               	movf	HueToRGB@v1+1,w
 14000  0EEA  00AA               	movwf	___fladd@b+1
 14001  0EEB  0863               	movf	HueToRGB@v1,w
 14002  0EEC  00A9               	movwf	___fladd@b
 14003  0EED  086E               	movf	HueToRGB@vH+3,w
 14004  0EEE  00C0               	movwf	___flmul@b+3
 14005  0EEF  086D               	movf	HueToRGB@vH+2,w
 14006  0EF0  00BF               	movwf	___flmul@b+2
 14007  0EF1  086C               	movf	HueToRGB@vH+1,w
 14008  0EF2  00BE               	movwf	___flmul@b+1
 14009  0EF3  086B               	movf	HueToRGB@vH,w
 14010  0EF4  00BD               	movwf	___flmul@b
 14011  0EF5  0141               	movlb	1	; select bank1
 14012  0EF6  0823               	movf	(_HueToRGB$2858+3)^(0+128),w
 14013  0EF7  0140               	movlb	0	; select bank0
 14014  0EF8  00C4               	movwf	___flmul@a+3
 14015  0EF9  0141               	movlb	1	; select bank1
 14016  0EFA  0822               	movf	(_HueToRGB$2858+2)^(0+128),w
 14017  0EFB  0140               	movlb	0	; select bank0
 14018  0EFC  00C3               	movwf	___flmul@a+2
 14019  0EFD  0141               	movlb	1	; select bank1
 14020  0EFE  0821               	movf	(_HueToRGB$2858+1)^(0+128),w
 14021  0EFF  0140               	movlb	0	; select bank0
 14022  0F00  00C2               	movwf	___flmul@a+1
 14023  0F01  0141               	movlb	1	; select bank1
 14024  0F02  0820               	movf	_HueToRGB$2858^(0+128),w
 14025  0F03  0140               	movlb	0	; select bank0
 14026  0F04  00C1               	movwf	___flmul@a
 14027  0F05  3183  23F7  318E   	fcall	___flmul
 14028  0F08  0140               	movlb	0	; select bank0
 14029  0F09  0840               	movf	?___flmul+3,w
 14030  0F0A  00B0               	movwf	___fladd@a+3
 14031  0F0B  083F               	movf	?___flmul+2,w
 14032  0F0C  00AF               	movwf	___fladd@a+2
 14033  0F0D  083E               	movf	?___flmul+1,w
 14034  0F0E  00AE               	movwf	___fladd@a+1
 14035  0F0F  083D               	movf	?___flmul,w
 14036  0F10  00AD               	movwf	___fladd@a
 14037  0F11  318C  243A         	fcall	___fladd
 14038  0F13  0140               	movlb	0	; select bank0
 14039  0F14  082C               	movf	?___fladd+3,w
 14040  0F15  00E6               	movwf	?_HueToRGB+3
 14041  0F16  082B               	movf	?___fladd+2,w
 14042  0F17  00E5               	movwf	?_HueToRGB+2
 14043  0F18  082A               	movf	?___fladd+1,w
 14044  0F19  00E4               	movwf	?_HueToRGB+1
 14045  0F1A  0829               	movf	?___fladd,w
 14046  0F1B  00E3               	movwf	?_HueToRGB
 14047  0F1C  0008               	return
 14048  0F1D                     l5496:	
 14049                           
 14050                           ;led.c: 51:  if ((2 * vH) < 1)
 14051  0F1D  3040               	movlw	64
 14052  0F1E  0140               	movlb	0	; select bank0
 14053  0F1F  00C0               	movwf	___flmul@b+3
 14054  0F20  3000               	movlw	0
 14055  0F21  00BF               	movwf	___flmul@b+2
 14056  0F22  3000               	movlw	0
 14057  0F23  00BE               	movwf	___flmul@b+1
 14058  0F24  3000               	movlw	0
 14059  0F25  00BD               	movwf	___flmul@b
 14060  0F26  086E               	movf	HueToRGB@vH+3,w
 14061  0F27  00C4               	movwf	___flmul@a+3
 14062  0F28  086D               	movf	HueToRGB@vH+2,w
 14063  0F29  00C3               	movwf	___flmul@a+2
 14064  0F2A  086C               	movf	HueToRGB@vH+1,w
 14065  0F2B  00C2               	movwf	___flmul@a+1
 14066  0F2C  086B               	movf	HueToRGB@vH,w
 14067  0F2D  00C1               	movwf	___flmul@a
 14068  0F2E  3183  23F7  318E   	fcall	___flmul
 14069  0F31  0140               	movlb	0	; select bank0
 14070  0F32  0840               	movf	?___flmul+3,w
 14071  0F33  00DA               	movwf	___flge@ff1+3
 14072  0F34  083F               	movf	?___flmul+2,w
 14073  0F35  00D9               	movwf	___flge@ff1+2
 14074  0F36  083E               	movf	?___flmul+1,w
 14075  0F37  00D8               	movwf	___flge@ff1+1
 14076  0F38  083D               	movf	?___flmul,w
 14077  0F39  00D7               	movwf	___flge@ff1
 14078  0F3A  303F               	movlw	63
 14079  0F3B  00DE               	movwf	___flge@ff2+3
 14080  0F3C  3080               	movlw	128
 14081  0F3D  00DD               	movwf	___flge@ff2+2
 14082  0F3E  3000               	movlw	0
 14083  0F3F  00DC               	movwf	___flge@ff2+1
 14084  0F40  3000               	movlw	0
 14085  0F41  00DB               	movwf	___flge@ff2
 14086  0F42  3195  25F4  318E   	fcall	___flge
 14087  0F45  1803               	btfsc	3,0
 14088  0F46  2F51               	goto	l5502
 14089                           
 14090                           ;led.c: 52:   return v2;
 14091  0F47  0140               	movlb	0	; select bank0
 14092  0F48  086A               	movf	HueToRGB@v2+3,w
 14093  0F49  00E6               	movwf	?_HueToRGB+3
 14094  0F4A  0869               	movf	HueToRGB@v2+2,w
 14095  0F4B  00E5               	movwf	?_HueToRGB+2
 14096  0F4C  0868               	movf	HueToRGB@v2+1,w
 14097  0F4D  00E4               	movwf	?_HueToRGB+1
 14098  0F4E  0867               	movf	HueToRGB@v2,w
 14099  0F4F  00E3               	movwf	?_HueToRGB
 14100  0F50  0008               	return
 14101  0F51                     l5502:	
 14102                           
 14103                           ;led.c: 54:  if ((3 * vH) < 2)
 14104  0F51  3040               	movlw	64
 14105  0F52  0140               	movlb	0	; select bank0
 14106  0F53  00C0               	movwf	___flmul@b+3
 14107  0F54  3040               	movlw	64
 14108  0F55  00BF               	movwf	___flmul@b+2
 14109  0F56  3000               	movlw	0
 14110  0F57  00BE               	movwf	___flmul@b+1
 14111  0F58  3000               	movlw	0
 14112  0F59  00BD               	movwf	___flmul@b
 14113  0F5A  086E               	movf	HueToRGB@vH+3,w
 14114  0F5B  00C4               	movwf	___flmul@a+3
 14115  0F5C  086D               	movf	HueToRGB@vH+2,w
 14116  0F5D  00C3               	movwf	___flmul@a+2
 14117  0F5E  086C               	movf	HueToRGB@vH+1,w
 14118  0F5F  00C2               	movwf	___flmul@a+1
 14119  0F60  086B               	movf	HueToRGB@vH,w
 14120  0F61  00C1               	movwf	___flmul@a
 14121  0F62  3183  23F7  318E   	fcall	___flmul
 14122  0F65  0140               	movlb	0	; select bank0
 14123  0F66  0840               	movf	?___flmul+3,w
 14124  0F67  00DA               	movwf	___flge@ff1+3
 14125  0F68  083F               	movf	?___flmul+2,w
 14126  0F69  00D9               	movwf	___flge@ff1+2
 14127  0F6A  083E               	movf	?___flmul+1,w
 14128  0F6B  00D8               	movwf	___flge@ff1+1
 14129  0F6C  083D               	movf	?___flmul,w
 14130  0F6D  00D7               	movwf	___flge@ff1
 14131  0F6E  3040               	movlw	64
 14132  0F6F  00DE               	movwf	___flge@ff2+3
 14133  0F70  3000               	movlw	0
 14134  0F71  00DD               	movwf	___flge@ff2+2
 14135  0F72  3000               	movlw	0
 14136  0F73  00DC               	movwf	___flge@ff2+1
 14137  0F74  3000               	movlw	0
 14138  0F75  00DB               	movwf	___flge@ff2
 14139  0F76  3195  25F4  318E   	fcall	___flge
 14140  0F79  1803               	btfsc	3,0
 14141  0F7A  0008               	return
 14142                           
 14143                           ;led.c: 55:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14144  0F7B  0140               	movlb	0	; select bank0
 14145  0F7C  086E               	movf	HueToRGB@vH+3,w
 14146  0F7D  00DA               	movwf	___flsub@a+3
 14147  0F7E  086D               	movf	HueToRGB@vH+2,w
 14148  0F7F  00D9               	movwf	___flsub@a+2
 14149  0F80  086C               	movf	HueToRGB@vH+1,w
 14150  0F81  00D8               	movwf	___flsub@a+1
 14151  0F82  086B               	movf	HueToRGB@vH,w
 14152  0F83  00D7               	movwf	___flsub@a
 14153  0F84  303F               	movlw	63
 14154  0F85  00DE               	movwf	___flsub@b+3
 14155  0F86  302A               	movlw	42
 14156  0F87  00DD               	movwf	___flsub@b+2
 14157  0F88  30AA               	movlw	170
 14158  0F89  00DC               	movwf	___flsub@b+1
 14159  0F8A  30AB               	movlw	171
 14160  0F8B  00DB               	movwf	___flsub@b
 14161  0F8C  3190  209C  318E   	fcall	___flsub
 14162  0F8F  0140               	movlb	0	; select bank0
 14163  0F90  085A               	movf	?___flsub+3,w
 14164  0F91  00C0               	movwf	___flmul@b+3
 14165  0F92  0859               	movf	?___flsub+2,w
 14166  0F93  00BF               	movwf	___flmul@b+2
 14167  0F94  0858               	movf	?___flsub+1,w
 14168  0F95  00BE               	movwf	___flmul@b+1
 14169  0F96  0857               	movf	?___flsub,w
 14170  0F97  00BD               	movwf	___flmul@b
 14171  0F98  0866               	movf	HueToRGB@v1+3,w
 14172  0F99  00DA               	movwf	___flsub@a+3
 14173  0F9A  0865               	movf	HueToRGB@v1+2,w
 14174  0F9B  00D9               	movwf	___flsub@a+2
 14175  0F9C  0864               	movf	HueToRGB@v1+1,w
 14176  0F9D  00D8               	movwf	___flsub@a+1
 14177  0F9E  0863               	movf	HueToRGB@v1,w
 14178  0F9F  00D7               	movwf	___flsub@a
 14179  0FA0  086A               	movf	HueToRGB@v2+3,w
 14180  0FA1  00DE               	movwf	___flsub@b+3
 14181  0FA2  0869               	movf	HueToRGB@v2+2,w
 14182  0FA3  00DD               	movwf	___flsub@b+2
 14183  0FA4  0868               	movf	HueToRGB@v2+1,w
 14184  0FA5  00DC               	movwf	___flsub@b+1
 14185  0FA6  0867               	movf	HueToRGB@v2,w
 14186  0FA7  00DB               	movwf	___flsub@b
 14187  0FA8  3190  209C  318E   	fcall	___flsub
 14188  0FAB  0140               	movlb	0	; select bank0
 14189  0FAC  085A               	movf	?___flsub+3,w
 14190  0FAD  00C4               	movwf	___flmul@a+3
 14191  0FAE  0859               	movf	?___flsub+2,w
 14192  0FAF  00C3               	movwf	___flmul@a+2
 14193  0FB0  0858               	movf	?___flsub+1,w
 14194  0FB1  00C2               	movwf	___flmul@a+1
 14195  0FB2  0857               	movf	?___flsub,w
 14196  0FB3  00C1               	movwf	___flmul@a
 14197  0FB4  3183  23F7  318E   	fcall	___flmul
 14198  0FB7  0140               	movlb	0	; select bank0
 14199  0FB8  0840               	movf	?___flmul+3,w
 14200  0FB9  0141               	movlb	1	; select bank1
 14201  0FBA  00A3               	movwf	(_HueToRGB$2858+3)^(0+128)
 14202  0FBB  0140               	movlb	0	; select bank0
 14203  0FBC  083F               	movf	?___flmul+2,w
 14204  0FBD  0141               	movlb	1	; select bank1
 14205  0FBE  00A2               	movwf	(_HueToRGB$2858+2)^(0+128)
 14206  0FBF  0140               	movlb	0	; select bank0
 14207  0FC0  083E               	movf	?___flmul+1,w
 14208  0FC1  0141               	movlb	1	; select bank1
 14209  0FC2  00A1               	movwf	(_HueToRGB$2858+1)^(0+128)
 14210  0FC3  0140               	movlb	0	; select bank0
 14211  0FC4  083D               	movf	?___flmul,w
 14212  0FC5  0141               	movlb	1	; select bank1
 14213  0FC6  00A0               	movwf	_HueToRGB$2858^(0+128)
 14214                           
 14215                           ;led.c: 55:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14216  0FC7  0140               	movlb	0	; select bank0
 14217  0FC8  0866               	movf	HueToRGB@v1+3,w
 14218  0FC9  00AC               	movwf	___fladd@b+3
 14219  0FCA  0865               	movf	HueToRGB@v1+2,w
 14220  0FCB  00AB               	movwf	___fladd@b+2
 14221  0FCC  0864               	movf	HueToRGB@v1+1,w
 14222  0FCD  00AA               	movwf	___fladd@b+1
 14223  0FCE  0863               	movf	HueToRGB@v1,w
 14224  0FCF  00A9               	movwf	___fladd@b
 14225  0FD0  3040               	movlw	64
 14226  0FD1  00C0               	movwf	___flmul@b+3
 14227  0FD2  30C0               	movlw	192
 14228  0FD3  00BF               	movwf	___flmul@b+2
 14229  0FD4  3000               	movlw	0
 14230  0FD5  00BE               	movwf	___flmul@b+1
 14231  0FD6  3000               	movlw	0
 14232  0FD7  00BD               	movwf	___flmul@b
 14233  0FD8  0141               	movlb	1	; select bank1
 14234  0FD9  0823               	movf	(_HueToRGB$2858+3)^(0+128),w
 14235  0FDA  0140               	movlb	0	; select bank0
 14236  0FDB  00C4               	movwf	___flmul@a+3
 14237  0FDC  0141               	movlb	1	; select bank1
 14238  0FDD  0822               	movf	(_HueToRGB$2858+2)^(0+128),w
 14239  0FDE  0140               	movlb	0	; select bank0
 14240  0FDF  00C3               	movwf	___flmul@a+2
 14241  0FE0  0141               	movlb	1	; select bank1
 14242  0FE1  0821               	movf	(_HueToRGB$2858+1)^(0+128),w
 14243  0FE2  0140               	movlb	0	; select bank0
 14244  0FE3  00C2               	movwf	___flmul@a+1
 14245  0FE4  0141               	movlb	1	; select bank1
 14246  0FE5  0820               	movf	_HueToRGB$2858^(0+128),w
 14247  0FE6  0140               	movlb	0	; select bank0
 14248  0FE7  00C1               	movwf	___flmul@a
 14249  0FE8  3183  23F7  318E   	fcall	___flmul
 14250  0FEB  0140               	movlb	0	; select bank0
 14251  0FEC  0840               	movf	?___flmul+3,w
 14252  0FED  00B0               	movwf	___fladd@a+3
 14253  0FEE  083F               	movf	?___flmul+2,w
 14254  0FEF  00AF               	movwf	___fladd@a+2
 14255  0FF0  083E               	movf	?___flmul+1,w
 14256  0FF1  00AE               	movwf	___fladd@a+1
 14257  0FF2  083D               	movf	?___flmul,w
 14258  0FF3  00AD               	movwf	___fladd@a
 14259  0FF4  318C  243A         	fcall	___fladd
 14260  0FF6  0140               	movlb	0	; select bank0
 14261  0FF7  082C               	movf	?___fladd+3,w
 14262  0FF8  00E6               	movwf	?_HueToRGB+3
 14263  0FF9  082B               	movf	?___fladd+2,w
 14264  0FFA  00E5               	movwf	?_HueToRGB+2
 14265  0FFB  082A               	movf	?___fladd+1,w
 14266  0FFC  00E4               	movwf	?_HueToRGB+1
 14267  0FFD  0829               	movf	?___fladd,w
 14268  0FFE  00E3               	movwf	?_HueToRGB
 14269  0FFF  0008               	return
 14270  1000                     __end_of_HueToRGB:	
 14271                           ;led.c: 57:  return v1;
 14272                           
 14273                           
 14274                           	psect	text44
 14275  109C                     __ptext44:	
 14276 ;; *************** function ___flsub *****************
 14277 ;; Defined at:
 14278 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;  a               4   55[BANK0 ] float 
 14281 ;;  b               4   59[BANK0 ] float 
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;		None
 14284 ;; Return value:  Size  Location     Type
 14285 ;;                  4   55[BANK0 ] float 
 14286 ;; Registers used:
 14287 ;;		wreg, status,2, status,0, pclath, cstack
 14288 ;; Tracked objects:
 14289 ;;		On entry : 0/0
 14290 ;;		On exit  : 0/0
 14291 ;;		Unchanged: 0/0
 14292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14293 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14296 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14297 ;;Total ram usage:        8 bytes
 14298 ;; Hardware stack levels used:    1
 14299 ;; Hardware stack levels required when called:    5
 14300 ;; This function calls:
 14301 ;;		___fladd
 14302 ;; This function is called by:
 14303 ;;		_HueToRGB
 14304 ;;		_LED_setHSL
 14305 ;;		_pulseColors
 14306 ;; This function uses a non-reentrant model
 14307 ;;
 14308                           
 14309                           
 14310                           ;psect for function ___flsub
 14311  109C                     ___flsub:	
 14312                           
 14313                           ;incstack = 0
 14314                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 14315  109C  3080               	movlw	128
 14316  109D  0140               	movlb	0	; select bank0
 14317  109E  06DA               	xorwf	___flsub@a+3,f
 14318  109F  085E               	movf	___flsub@b+3,w
 14319  10A0  00AC               	movwf	___fladd@b+3
 14320  10A1  085D               	movf	___flsub@b+2,w
 14321  10A2  00AB               	movwf	___fladd@b+2
 14322  10A3  085C               	movf	___flsub@b+1,w
 14323  10A4  00AA               	movwf	___fladd@b+1
 14324  10A5  085B               	movf	___flsub@b,w
 14325  10A6  00A9               	movwf	___fladd@b
 14326  10A7  085A               	movf	___flsub@a+3,w
 14327  10A8  00B0               	movwf	___fladd@a+3
 14328  10A9  0859               	movf	___flsub@a+2,w
 14329  10AA  00AF               	movwf	___fladd@a+2
 14330  10AB  0858               	movf	___flsub@a+1,w
 14331  10AC  00AE               	movwf	___fladd@a+1
 14332  10AD  0857               	movf	___flsub@a,w
 14333  10AE  00AD               	movwf	___fladd@a
 14334  10AF  318C  243A         	fcall	___fladd
 14335  10B1  0140               	movlb	0	; select bank0
 14336  10B2  082C               	movf	?___fladd+3,w
 14337  10B3  00DA               	movwf	?___flsub+3
 14338  10B4  082B               	movf	?___fladd+2,w
 14339  10B5  00D9               	movwf	?___flsub+2
 14340  10B6  082A               	movf	?___fladd+1,w
 14341  10B7  00D8               	movwf	?___flsub+1
 14342  10B8  0829               	movf	?___fladd,w
 14343  10B9  00D7               	movwf	?___flsub
 14344  10BA  0008               	return
 14345  10BB                     __end_of___flsub:	
 14346                           
 14347                           	psect	text45
 14348  0C3A                     __ptext45:	
 14349 ;; *************** function ___fladd *****************
 14350 ;; Defined at:
 14351 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;  b               4    9[BANK0 ] float 
 14354 ;;  a               4   13[BANK0 ] float 
 14355 ;; Auto vars:     Size  Location     Type
 14356 ;;  grs             1   28[BANK0 ] unsigned char 
 14357 ;;  bexp            1   27[BANK0 ] unsigned char 
 14358 ;;  aexp            1   26[BANK0 ] unsigned char 
 14359 ;;  signs           1   25[BANK0 ] unsigned char 
 14360 ;; Return value:  Size  Location     Type
 14361 ;;                  4    9[BANK0 ] unsigned char 
 14362 ;; Registers used:
 14363 ;;		wreg, status,2, status,0
 14364 ;; Tracked objects:
 14365 ;;		On entry : 0/0
 14366 ;;		On exit  : 0/0
 14367 ;;		Unchanged: 0/0
 14368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14369 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14370 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14371 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14372 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14373 ;;Total ram usage:       20 bytes
 14374 ;; Hardware stack levels used:    1
 14375 ;; Hardware stack levels required when called:    4
 14376 ;; This function calls:
 14377 ;;		Nothing
 14378 ;; This function is called by:
 14379 ;;		_HueToRGB
 14380 ;;		_LED_setHSL
 14381 ;;		___flsub
 14382 ;; This function uses a non-reentrant model
 14383 ;;
 14384                           
 14385                           
 14386                           ;psect for function ___fladd
 14387  0C3A                     ___fladd:	
 14388                           
 14389                           ;incstack = 0
 14390                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 14391  0C3A  0140               	movlb	0	; select bank0
 14392  0C3B  082C               	movf	___fladd@b+3,w
 14393  0C3C  3980               	andlw	128
 14394  0C3D  00B1               	movwf	??___fladd
 14395  0C3E  0831               	movf	??___fladd,w
 14396  0C3F  00B9               	movwf	___fladd@signs
 14397  0C40  352C               	lslf	___fladd@b+3,w
 14398  0C41  00B1               	movwf	??___fladd
 14399  0C42  0831               	movf	??___fladd,w
 14400  0C43  00BB               	movwf	___fladd@bexp
 14401  0C44  1BAB               	btfsc	___fladd@b+2,7
 14402  0C45  143B               	bsf	___fladd@bexp,0
 14403  0C46  083B               	movf	___fladd@bexp,w
 14404  0C47  1903               	btfsc	3,2
 14405  0C48  2C57               	goto	l3622
 14406  0C49  0A3B               	incf	___fladd@bexp,w
 14407  0C4A  1D03               	btfss	3,2
 14408  0C4B  2C54               	goto	l3618
 14409  0C4C  3000               	movlw	0
 14410  0C4D  00AC               	movwf	___fladd@b+3
 14411  0C4E  3000               	movlw	0
 14412  0C4F  00AB               	movwf	___fladd@b+2
 14413  0C50  3000               	movlw	0
 14414  0C51  00AA               	movwf	___fladd@b+1
 14415  0C52  3000               	movlw	0
 14416  0C53  00A9               	movwf	___fladd@b
 14417  0C54                     l3618:	
 14418  0C54  17AB               	bsf	___fladd@b+2,7
 14419  0C55  01AC               	clrf	___fladd@b+3
 14420  0C56  2C5F               	goto	l3624
 14421  0C57                     l3622:	
 14422  0C57  3000               	movlw	0
 14423  0C58  00AC               	movwf	___fladd@b+3
 14424  0C59  3000               	movlw	0
 14425  0C5A  00AB               	movwf	___fladd@b+2
 14426  0C5B  3000               	movlw	0
 14427  0C5C  00AA               	movwf	___fladd@b+1
 14428  0C5D  3000               	movlw	0
 14429  0C5E  00A9               	movwf	___fladd@b
 14430  0C5F                     l3624:	
 14431  0C5F  0830               	movf	___fladd@a+3,w
 14432  0C60  3980               	andlw	128
 14433  0C61  00B1               	movwf	??___fladd
 14434  0C62  0831               	movf	??___fladd,w
 14435  0C63  00BA               	movwf	___fladd@aexp
 14436  0C64  083A               	movf	___fladd@aexp,w
 14437  0C65  0639               	xorwf	___fladd@signs,w
 14438  0C66  1D03               	btfss	3,2
 14439  0C67  1739               	bsf	___fladd@signs,6
 14440  0C68  3530               	lslf	___fladd@a+3,w
 14441  0C69  00B1               	movwf	??___fladd
 14442  0C6A  0831               	movf	??___fladd,w
 14443  0C6B  00BA               	movwf	___fladd@aexp
 14444  0C6C  1BAF               	btfsc	___fladd@a+2,7
 14445  0C6D  143A               	bsf	___fladd@aexp,0
 14446  0C6E  083A               	movf	___fladd@aexp,w
 14447  0C6F  1903               	btfsc	3,2
 14448  0C70  2C7F               	goto	l3646
 14449  0C71  0A3A               	incf	___fladd@aexp,w
 14450  0C72  1D03               	btfss	3,2
 14451  0C73  2C7C               	goto	l3642
 14452  0C74  3000               	movlw	0
 14453  0C75  00B0               	movwf	___fladd@a+3
 14454  0C76  3000               	movlw	0
 14455  0C77  00AF               	movwf	___fladd@a+2
 14456  0C78  3000               	movlw	0
 14457  0C79  00AE               	movwf	___fladd@a+1
 14458  0C7A  3000               	movlw	0
 14459  0C7B  00AD               	movwf	___fladd@a
 14460  0C7C                     l3642:	
 14461  0C7C  17AF               	bsf	___fladd@a+2,7
 14462  0C7D  01B0               	clrf	___fladd@a+3
 14463  0C7E  2C87               	goto	l1573
 14464  0C7F                     l3646:	
 14465  0C7F  3000               	movlw	0
 14466  0C80  00B0               	movwf	___fladd@a+3
 14467  0C81  3000               	movlw	0
 14468  0C82  00AF               	movwf	___fladd@a+2
 14469  0C83  3000               	movlw	0
 14470  0C84  00AE               	movwf	___fladd@a+1
 14471  0C85  3000               	movlw	0
 14472  0C86  00AD               	movwf	___fladd@a
 14473  0C87                     l1573:	
 14474  0C87  083B               	movf	___fladd@bexp,w
 14475  0C88  023A               	subwf	___fladd@aexp,w
 14476  0C89  1803               	skipnc
 14477  0C8A  2CCD               	goto	l3682
 14478  0C8B  1F39               	btfss	___fladd@signs,6
 14479  0C8C  2C91               	goto	l3652
 14480  0C8D  3080               	movlw	128
 14481  0C8E  00B1               	movwf	??___fladd
 14482  0C8F  0831               	movf	??___fladd,w
 14483  0C90  06B9               	xorwf	___fladd@signs,f
 14484  0C91                     l3652:	
 14485  0C91  083B               	movf	___fladd@bexp,w
 14486  0C92  00B1               	movwf	??___fladd
 14487  0C93  0831               	movf	??___fladd,w
 14488  0C94  00BC               	movwf	___fladd@grs
 14489  0C95  083A               	movf	___fladd@aexp,w
 14490  0C96  00B1               	movwf	??___fladd
 14491  0C97  0831               	movf	??___fladd,w
 14492  0C98  00BB               	movwf	___fladd@bexp
 14493  0C99  083C               	movf	___fladd@grs,w
 14494  0C9A  00B1               	movwf	??___fladd
 14495  0C9B  0831               	movf	??___fladd,w
 14496  0C9C  00BA               	movwf	___fladd@aexp
 14497  0C9D  0829               	movf	___fladd@b,w
 14498  0C9E  00B1               	movwf	??___fladd
 14499  0C9F  0831               	movf	??___fladd,w
 14500  0CA0  00BC               	movwf	___fladd@grs
 14501  0CA1  082D               	movf	___fladd@a,w
 14502  0CA2  00B1               	movwf	??___fladd
 14503  0CA3  0831               	movf	??___fladd,w
 14504  0CA4  00A9               	movwf	___fladd@b
 14505  0CA5  083C               	movf	___fladd@grs,w
 14506  0CA6  00B1               	movwf	??___fladd
 14507  0CA7  0831               	movf	??___fladd,w
 14508  0CA8  00AD               	movwf	___fladd@a
 14509  0CA9  082A               	movf	___fladd@b+1,w
 14510  0CAA  00B1               	movwf	??___fladd
 14511  0CAB  0831               	movf	??___fladd,w
 14512  0CAC  00BC               	movwf	___fladd@grs
 14513  0CAD  082E               	movf	___fladd@a+1,w
 14514  0CAE  00B1               	movwf	??___fladd
 14515  0CAF  0831               	movf	??___fladd,w
 14516  0CB0  00AA               	movwf	___fladd@b+1
 14517  0CB1  083C               	movf	___fladd@grs,w
 14518  0CB2  00B1               	movwf	??___fladd
 14519  0CB3  0831               	movf	??___fladd,w
 14520  0CB4  00AE               	movwf	___fladd@a+1
 14521  0CB5  082B               	movf	___fladd@b+2,w
 14522  0CB6  00B1               	movwf	??___fladd
 14523  0CB7  0831               	movf	??___fladd,w
 14524  0CB8  00BC               	movwf	___fladd@grs
 14525  0CB9  082F               	movf	___fladd@a+2,w
 14526  0CBA  00B1               	movwf	??___fladd
 14527  0CBB  0831               	movf	??___fladd,w
 14528  0CBC  00AB               	movwf	___fladd@b+2
 14529  0CBD  083C               	movf	___fladd@grs,w
 14530  0CBE  00B1               	movwf	??___fladd
 14531  0CBF  0831               	movf	??___fladd,w
 14532  0CC0  00AF               	movwf	___fladd@a+2
 14533  0CC1  082C               	movf	___fladd@b+3,w
 14534  0CC2  00B1               	movwf	??___fladd
 14535  0CC3  0831               	movf	??___fladd,w
 14536  0CC4  00BC               	movwf	___fladd@grs
 14537  0CC5  0830               	movf	___fladd@a+3,w
 14538  0CC6  00B1               	movwf	??___fladd
 14539  0CC7  0831               	movf	??___fladd,w
 14540  0CC8  00AC               	movwf	___fladd@b+3
 14541  0CC9  083C               	movf	___fladd@grs,w
 14542  0CCA  00B1               	movwf	??___fladd
 14543  0CCB  0831               	movf	??___fladd,w
 14544  0CCC  00B0               	movwf	___fladd@a+3
 14545  0CCD                     l3682:	
 14546  0CCD  01BC               	clrf	___fladd@grs
 14547  0CCE  083A               	movf	___fladd@aexp,w
 14548  0CCF  00B1               	movwf	??___fladd
 14549  0CD0  01B2               	clrf	??___fladd+1
 14550  0CD1  0832               	movf	??___fladd+1,w
 14551  0CD2  00B4               	movwf	??___fladd+3
 14552  0CD3  083B               	movf	___fladd@bexp,w
 14553  0CD4  0231               	subwf	??___fladd,w
 14554  0CD5  00B3               	movwf	??___fladd+2
 14555  0CD6  1C03               	skipc
 14556  0CD7  03B4               	decf	??___fladd+3,f
 14557  0CD8  0834               	movf	??___fladd+3,w
 14558  0CD9  3A80               	xorlw	128
 14559  0CDA  00B5               	movwf	??___fladd+4
 14560  0CDB  3080               	movlw	128
 14561  0CDC  0235               	subwf	??___fladd+4,w
 14562  0CDD  1D03               	skipz
 14563  0CDE  2CE1               	goto	u2825
 14564  0CDF  301A               	movlw	26
 14565  0CE0  0233               	subwf	??___fladd+2,w
 14566  0CE1                     u2825:	
 14567  0CE1  1C03               	skipc
 14568  0CE2  2D15               	goto	l3700
 14569  0CE3  0140               	movlb	0	; select bank0
 14570  0CE4  082C               	movf	___fladd@b+3,w
 14571  0CE5  042B               	iorwf	___fladd@b+2,w
 14572  0CE6  042A               	iorwf	___fladd@b+1,w
 14573  0CE7  0429               	iorwf	___fladd@b,w
 14574  0CE8  1903               	btfsc	3,2
 14575  0CE9  2CEC               	goto	u2830
 14576  0CEA  3001               	movlw	1
 14577  0CEB  2CED               	goto	u2840
 14578  0CEC                     u2830:	
 14579  0CEC  3000               	movlw	0
 14580  0CED                     u2840:	
 14581  0CED  00B1               	movwf	??___fladd
 14582  0CEE  0831               	movf	??___fladd,w
 14583  0CEF  00BC               	movwf	___fladd@grs
 14584  0CF0  3000               	movlw	0
 14585  0CF1  00AC               	movwf	___fladd@b+3
 14586  0CF2  3000               	movlw	0
 14587  0CF3  00AB               	movwf	___fladd@b+2
 14588  0CF4  3000               	movlw	0
 14589  0CF5  00AA               	movwf	___fladd@b+1
 14590  0CF6  3000               	movlw	0
 14591  0CF7  00A9               	movwf	___fladd@b
 14592  0CF8  083A               	movf	___fladd@aexp,w
 14593  0CF9  00B1               	movwf	??___fladd
 14594  0CFA  0831               	movf	??___fladd,w
 14595  0CFB  00BB               	movwf	___fladd@bexp
 14596  0CFC  2D1A               	goto	l1577
 14597  0CFD                     l1579:	
 14598  0CFD  1C3C               	btfss	___fladd@grs,0
 14599  0CFE  2D05               	goto	l3690
 14600  0CFF  363C               	lsrf	___fladd@grs,w
 14601  0D00  3801               	iorlw	1
 14602  0D01  00B1               	movwf	??___fladd
 14603  0D02  0831               	movf	??___fladd,w
 14604  0D03  00BC               	movwf	___fladd@grs
 14605  0D04  2D07               	goto	l3692
 14606  0D05                     l3690:	
 14607  0D05  1003               	clrc
 14608  0D06  0CBC               	rrf	___fladd@grs,f
 14609  0D07                     l3692:	
 14610  0D07  1829               	btfsc	___fladd@b,0
 14611  0D08  17BC               	bsf	___fladd@grs,7
 14612  0D09  3001               	movlw	1
 14613  0D0A  00B1               	movwf	??___fladd
 14614  0D0B                     u2875:	
 14615  0D0B  37AC               	asrf	___fladd@b+3,f
 14616  0D0C  0CAB               	rrf	___fladd@b+2,f
 14617  0D0D  0CAA               	rrf	___fladd@b+1,f
 14618  0D0E  0CA9               	rrf	___fladd@b,f
 14619  0D0F  0BB1               	decfsz	??___fladd& (0+127),f
 14620  0D10  2D0B               	goto	u2875
 14621  0D11  3001               	movlw	1
 14622  0D12  00B1               	movwf	??___fladd
 14623  0D13  0831               	movf	??___fladd,w
 14624  0D14  07BB               	addwf	___fladd@bexp,f
 14625  0D15                     l3700:	
 14626  0D15  0140               	movlb	0	; select bank0
 14627  0D16  083A               	movf	___fladd@aexp,w
 14628  0D17  023B               	subwf	___fladd@bexp,w
 14629  0D18  1C03               	skipc
 14630  0D19  2CFD               	goto	l1579
 14631  0D1A                     l1577:	
 14632  0D1A  1B39               	btfsc	___fladd@signs,6
 14633  0D1B  2D4B               	goto	l3726
 14634  0D1C  083B               	movf	___fladd@bexp,w
 14635  0D1D  1D03               	btfss	3,2
 14636  0D1E  2D28               	goto	l3708
 14637  0D1F  3000               	movlw	0
 14638  0D20  00AC               	movwf	?___fladd+3
 14639  0D21  3000               	movlw	0
 14640  0D22  00AB               	movwf	?___fladd+2
 14641  0D23  3000               	movlw	0
 14642  0D24  00AA               	movwf	?___fladd+1
 14643  0D25  3000               	movlw	0
 14644  0D26  00A9               	movwf	?___fladd
 14645  0D27  0008               	return
 14646  0D28                     l3708:	
 14647  0D28  082D               	movf	___fladd@a,w
 14648  0D29  07A9               	addwf	___fladd@b,f
 14649  0D2A  082E               	movf	___fladd@a+1,w
 14650  0D2B  3DAA               	addwfc	___fladd@b+1,f
 14651  0D2C  082F               	movf	___fladd@a+2,w
 14652  0D2D  3DAB               	addwfc	___fladd@b+2,f
 14653  0D2E  0830               	movf	___fladd@a+3,w
 14654  0D2F  3DAC               	addwfc	___fladd@b+3,f
 14655  0D30  1C2C               	btfss	___fladd@b+3,0
 14656  0D31  2DC5               	goto	l3760
 14657  0D32  1C3C               	btfss	___fladd@grs,0
 14658  0D33  2D3A               	goto	l3716
 14659  0D34  363C               	lsrf	___fladd@grs,w
 14660  0D35  3801               	iorlw	1
 14661  0D36  00B1               	movwf	??___fladd
 14662  0D37  0831               	movf	??___fladd,w
 14663  0D38  00BC               	movwf	___fladd@grs
 14664  0D39  2D3C               	goto	l3718
 14665  0D3A                     l3716:	
 14666  0D3A  1003               	clrc
 14667  0D3B  0CBC               	rrf	___fladd@grs,f
 14668  0D3C                     l3718:	
 14669  0D3C  1829               	btfsc	___fladd@b,0
 14670  0D3D  17BC               	bsf	___fladd@grs,7
 14671  0D3E  3001               	movlw	1
 14672  0D3F  00B1               	movwf	??___fladd
 14673  0D40                     u2945:	
 14674  0D40  37AC               	asrf	___fladd@b+3,f
 14675  0D41  0CAB               	rrf	___fladd@b+2,f
 14676  0D42  0CAA               	rrf	___fladd@b+1,f
 14677  0D43  0CA9               	rrf	___fladd@b,f
 14678  0D44  0BB1               	decfsz	??___fladd& (0+127),f
 14679  0D45  2D40               	goto	u2945
 14680  0D46  3001               	movlw	1
 14681  0D47  00B1               	movwf	??___fladd
 14682  0D48  0831               	movf	??___fladd,w
 14683  0D49  07BB               	addwf	___fladd@bexp,f
 14684  0D4A  2DC5               	goto	l3760
 14685  0D4B                     l3726:	
 14686  0D4B  082C               	movf	___fladd@b+3,w
 14687  0D4C  3A80               	xorlw	128
 14688  0D4D  00B1               	movwf	??___fladd
 14689  0D4E  0830               	movf	___fladd@a+3,w
 14690  0D4F  3A80               	xorlw	128
 14691  0D50  0231               	subwf	??___fladd,w
 14692  0D51  1D03               	skipz
 14693  0D52  2D5D               	goto	u2953
 14694  0D53  082F               	movf	___fladd@a+2,w
 14695  0D54  022B               	subwf	___fladd@b+2,w
 14696  0D55  1D03               	skipz
 14697  0D56  2D5D               	goto	u2953
 14698  0D57  082E               	movf	___fladd@a+1,w
 14699  0D58  022A               	subwf	___fladd@b+1,w
 14700  0D59  1D03               	skipz
 14701  0D5A  2D5D               	goto	u2953
 14702  0D5B  082D               	movf	___fladd@a,w
 14703  0D5C  0229               	subwf	___fladd@b,w
 14704  0D5D                     u2953:	
 14705  0D5D  1803               	skipnc
 14706  0D5E  2D95               	goto	l3736
 14707  0D5F  30FF               	movlw	255
 14708  0D60  00B1               	movwf	??___fladd
 14709  0D61  30FF               	movlw	255
 14710  0D62  00B2               	movwf	??___fladd+1
 14711  0D63  30FF               	movlw	255
 14712  0D64  00B3               	movwf	??___fladd+2
 14713  0D65  30FF               	movlw	255
 14714  0D66  00B4               	movwf	??___fladd+3
 14715  0D67  0829               	movf	___fladd@b,w
 14716  0D68  022D               	subwf	___fladd@a,w
 14717  0D69  00B5               	movwf	??___fladd+4
 14718  0D6A  082A               	movf	___fladd@b+1,w
 14719  0D6B  3B2E               	subwfb	___fladd@a+1,w
 14720  0D6C  00B6               	movwf	??___fladd+5
 14721  0D6D  082B               	movf	___fladd@b+2,w
 14722  0D6E  3B2F               	subwfb	___fladd@a+2,w
 14723  0D6F  00B7               	movwf	??___fladd+6
 14724  0D70  082C               	movf	___fladd@b+3,w
 14725  0D71  3B30               	subwfb	___fladd@a+3,w
 14726  0D72  00B8               	movwf	??___fladd+7
 14727  0D73  0835               	movf	??___fladd+4,w
 14728  0D74  07B1               	addwf	??___fladd,f
 14729  0D75  0836               	movf	??___fladd+5,w
 14730  0D76  3DB2               	addwfc	??___fladd+1,f
 14731  0D77  0837               	movf	??___fladd+6,w
 14732  0D78  3DB3               	addwfc	??___fladd+2,f
 14733  0D79  0838               	movf	??___fladd+7,w
 14734  0D7A  3DB4               	addwfc	??___fladd+3,f
 14735  0D7B  0834               	movf	??___fladd+3,w
 14736  0D7C  00AC               	movwf	___fladd@b+3
 14737  0D7D  0833               	movf	??___fladd+2,w
 14738  0D7E  00AB               	movwf	___fladd@b+2
 14739  0D7F  0832               	movf	??___fladd+1,w
 14740  0D80  00AA               	movwf	___fladd@b+1
 14741  0D81  0831               	movf	??___fladd,w
 14742  0D82  00A9               	movwf	___fladd@b
 14743  0D83  3080               	movlw	128
 14744  0D84  00B1               	movwf	??___fladd
 14745  0D85  0831               	movf	??___fladd,w
 14746  0D86  06B9               	xorwf	___fladd@signs,f
 14747  0D87  09BC               	comf	___fladd@grs,f
 14748  0D88  0ABC               	incf	___fladd@grs,f
 14749  0D89  083C               	movf	___fladd@grs,w
 14750  0D8A  1D03               	btfss	3,2
 14751  0D8B  2D9D               	goto	l1594
 14752  0D8C  3001               	movlw	1
 14753  0D8D  07A9               	addwf	___fladd@b,f
 14754  0D8E  3000               	movlw	0
 14755  0D8F  3DAA               	addwfc	___fladd@b+1,f
 14756  0D90  3000               	movlw	0
 14757  0D91  3DAB               	addwfc	___fladd@b+2,f
 14758  0D92  3000               	movlw	0
 14759  0D93  3DAC               	addwfc	___fladd@b+3,f
 14760  0D94  2D9D               	goto	l1594
 14761  0D95                     l3736:	
 14762  0D95  082D               	movf	___fladd@a,w
 14763  0D96  02A9               	subwf	___fladd@b,f
 14764  0D97  082E               	movf	___fladd@a+1,w
 14765  0D98  3BAA               	subwfb	___fladd@b+1,f
 14766  0D99  082F               	movf	___fladd@a+2,w
 14767  0D9A  3BAB               	subwfb	___fladd@b+2,f
 14768  0D9B  0830               	movf	___fladd@a+3,w
 14769  0D9C  3BAC               	subwfb	___fladd@b+3,f
 14770  0D9D                     l1594:	
 14771  0D9D  082C               	movf	___fladd@b+3,w
 14772  0D9E  042B               	iorwf	___fladd@b+2,w
 14773  0D9F  042A               	iorwf	___fladd@b+1,w
 14774  0DA0  0429               	iorwf	___fladd@b,w
 14775  0DA1  1D03               	skipz
 14776  0DA2  2DC3               	goto	l3758
 14777  0DA3  083C               	movf	___fladd@grs,w
 14778  0DA4  1D03               	btfss	3,2
 14779  0DA5  2DC3               	goto	l3758
 14780  0DA6  3000               	movlw	0
 14781  0DA7  00AC               	movwf	?___fladd+3
 14782  0DA8  3000               	movlw	0
 14783  0DA9  00AB               	movwf	?___fladd+2
 14784  0DAA  3000               	movlw	0
 14785  0DAB  00AA               	movwf	?___fladd+1
 14786  0DAC  3000               	movlw	0
 14787  0DAD  00A9               	movwf	?___fladd
 14788  0DAE  0008               	return
 14789  0DAF                     l3744:	
 14790  0DAF  3001               	movlw	1
 14791  0DB0                     u2995:	
 14792  0DB0  35A9               	lslf	___fladd@b,f
 14793  0DB1  0DAA               	rlf	___fladd@b+1,f
 14794  0DB2  0DAB               	rlf	___fladd@b+2,f
 14795  0DB3  0DAC               	rlf	___fladd@b+3,f
 14796  0DB4  0B89               	decfsz	9,f
 14797  0DB5  2DB0               	goto	u2995
 14798  0DB6  1BBC               	btfsc	___fladd@grs,7
 14799  0DB7  1429               	bsf	___fladd@b,0
 14800  0DB8  1C3C               	btfss	___fladd@grs,0
 14801  0DB9  2DBC               	goto	l3752
 14802  0DBA  1403               	setc
 14803  0DBB  2DBD               	goto	L4
 14804  0DBC                     l3752:	
 14805  0DBC  1003               	clrc
 14806  0DBD                     L4:	
 14807  0DBD  0DBC               	rlf	___fladd@grs,f
 14808  0DBE  083B               	movf	___fladd@bexp,w
 14809  0DBF  1903               	btfsc	3,2
 14810  0DC0  2DC3               	goto	l3758
 14811  0DC1  3001               	movlw	1
 14812  0DC2  02BB               	subwf	___fladd@bexp,f
 14813  0DC3                     l3758:	
 14814  0DC3  1FAB               	btfss	___fladd@b+2,7
 14815  0DC4  2DAF               	goto	l3744
 14816  0DC5                     l3760:	
 14817  0DC5  01BA               	clrf	___fladd@aexp
 14818  0DC6  1FBC               	btfss	___fladd@grs,7
 14819  0DC7  2DD0               	goto	l3770
 14820  0DC8  083C               	movf	___fladd@grs,w
 14821  0DC9  397F               	andlw	127
 14822  0DCA  1903               	btfsc	3,2
 14823  0DCB  1829               	btfsc	___fladd@b,0
 14824  0DCC  2DCE               	goto	l3766
 14825  0DCD  2DD0               	goto	l3770
 14826  0DCE                     l3766:	
 14827  0DCE  01BA               	clrf	___fladd@aexp
 14828  0DCF  0ABA               	incf	___fladd@aexp,f
 14829  0DD0                     l3770:	
 14830  0DD0  083A               	movf	___fladd@aexp,w
 14831  0DD1  1903               	btfsc	3,2
 14832  0DD2  2DFC               	goto	l1607
 14833  0DD3  3001               	movlw	1
 14834  0DD4  07A9               	addwf	___fladd@b,f
 14835  0DD5  3000               	movlw	0
 14836  0DD6  3DAA               	addwfc	___fladd@b+1,f
 14837  0DD7  3000               	movlw	0
 14838  0DD8  3DAB               	addwfc	___fladd@b+2,f
 14839  0DD9  3000               	movlw	0
 14840  0DDA  3DAC               	addwfc	___fladd@b+3,f
 14841  0DDB  1C2C               	btfss	___fladd@b+3,0
 14842  0DDC  2DFC               	goto	l1607
 14843  0DDD  0829               	movf	___fladd@b,w
 14844  0DDE  00B1               	movwf	??___fladd
 14845  0DDF  082A               	movf	___fladd@b+1,w
 14846  0DE0  00B2               	movwf	??___fladd+1
 14847  0DE1  082B               	movf	___fladd@b+2,w
 14848  0DE2  00B3               	movwf	??___fladd+2
 14849  0DE3  082C               	movf	___fladd@b+3,w
 14850  0DE4  00B4               	movwf	??___fladd+3
 14851  0DE5  3001               	movlw	1
 14852  0DE6  00B5               	movwf	??___fladd+4
 14853  0DE7                     u3095:	
 14854  0DE7  37B4               	asrf	??___fladd+3,f
 14855  0DE8  0CB3               	rrf	??___fladd+2,f
 14856  0DE9  0CB2               	rrf	??___fladd+1,f
 14857  0DEA  0CB1               	rrf	??___fladd,f
 14858  0DEB  0BB5               	decfsz	??___fladd+4,f
 14859  0DEC  2DE7               	goto	u3095
 14860  0DED  0834               	movf	??___fladd+3,w
 14861  0DEE  00AC               	movwf	___fladd@b+3
 14862  0DEF  0833               	movf	??___fladd+2,w
 14863  0DF0  00AB               	movwf	___fladd@b+2
 14864  0DF1  0832               	movf	??___fladd+1,w
 14865  0DF2  00AA               	movwf	___fladd@b+1
 14866  0DF3  0831               	movf	??___fladd,w
 14867  0DF4  00A9               	movwf	___fladd@b
 14868  0DF5  0A3B               	incf	___fladd@bexp,w
 14869  0DF6  1903               	btfsc	3,2
 14870  0DF7  2DFC               	goto	l1607
 14871  0DF8  3001               	movlw	1
 14872  0DF9  00B1               	movwf	??___fladd
 14873  0DFA  0831               	movf	??___fladd,w
 14874  0DFB  07BB               	addwf	___fladd@bexp,f
 14875  0DFC                     l1607:	
 14876  0DFC  0A3B               	incf	___fladd@bexp,w
 14877  0DFD  1D03               	btfss	3,2
 14878  0DFE  083B               	movf	___fladd@bexp,w
 14879  0DFF  1D03               	btfss	3,2
 14880  0E00  2E0C               	goto	l3788
 14881  0E01  3000               	movlw	0
 14882  0E02  00AC               	movwf	___fladd@b+3
 14883  0E03  3000               	movlw	0
 14884  0E04  00AB               	movwf	___fladd@b+2
 14885  0E05  3000               	movlw	0
 14886  0E06  00AA               	movwf	___fladd@b+1
 14887  0E07  3000               	movlw	0
 14888  0E08  00A9               	movwf	___fladd@b
 14889  0E09  083B               	movf	___fladd@bexp,w
 14890  0E0A  1903               	btfsc	3,2
 14891  0E0B  01B9               	clrf	___fladd@signs
 14892  0E0C                     l3788:	
 14893  0E0C  1C3B               	btfss	___fladd@bexp,0
 14894  0E0D  2E10               	goto	l3792
 14895  0E0E  17AB               	bsf	___fladd@b+2,7
 14896  0E0F  2E14               	goto	l1615
 14897  0E10                     l3792:	
 14898  0E10  307F               	movlw	127
 14899  0E11  00B1               	movwf	??___fladd
 14900  0E12  0831               	movf	??___fladd,w
 14901  0E13  05AB               	andwf	___fladd@b+2,f
 14902  0E14                     l1615:	
 14903  0E14  363B               	lsrf	___fladd@bexp,w
 14904  0E15  00B1               	movwf	??___fladd
 14905  0E16  0831               	movf	??___fladd,w
 14906  0E17  00AC               	movwf	___fladd@b+3
 14907  0E18  1FB9               	btfss	___fladd@signs,7
 14908  0E19  0008               	return
 14909  0E1A  17AC               	bsf	___fladd@b+3,7
 14910  0E1B  0008               	return
 14911  0E1C                     __end_of___fladd:	
 14912                           
 14913                           	psect	text46
 14914  03F7                     __ptext46:	
 14915 ;; *************** function ___flmul *****************
 14916 ;; Defined at:
 14917 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;  b               4   29[BANK0 ] unsigned char 
 14920 ;;  a               4   33[BANK0 ] unsigned char 
 14921 ;; Auto vars:     Size  Location     Type
 14922 ;;  prod            4   49[BANK0 ] struct .
 14923 ;;  grs             4   44[BANK0 ] unsigned long 
 14924 ;;  temp            2   53[BANK0 ] struct .
 14925 ;;  bexp            1   48[BANK0 ] unsigned char 
 14926 ;;  aexp            1   43[BANK0 ] unsigned char 
 14927 ;;  sign            1   42[BANK0 ] unsigned char 
 14928 ;; Return value:  Size  Location     Type
 14929 ;;                  4   29[BANK0 ] unsigned char 
 14930 ;; Registers used:
 14931 ;;		wreg, status,2, status,0, pclath, cstack
 14932 ;; Tracked objects:
 14933 ;;		On entry : 0/0
 14934 ;;		On exit  : 0/0
 14935 ;;		Unchanged: 0/0
 14936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14937 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14938 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14939 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14940 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14941 ;;Total ram usage:       26 bytes
 14942 ;; Hardware stack levels used:    1
 14943 ;; Hardware stack levels required when called:    5
 14944 ;; This function calls:
 14945 ;;		__Umul8_16
 14946 ;; This function is called by:
 14947 ;;		_HueToRGB
 14948 ;;		_LED_setHSL
 14949 ;; This function uses a non-reentrant model
 14950 ;;
 14951                           
 14952                           
 14953                           ;psect for function ___flmul
 14954  03F7                     ___flmul:	
 14955                           
 14956                           ;incstack = 0
 14957                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14958  03F7  0140               	movlb	0	; select bank0
 14959  03F8  0840               	movf	___flmul@b+3,w
 14960  03F9  3980               	andlw	128
 14961  03FA  00C5               	movwf	??___flmul
 14962  03FB  0845               	movf	??___flmul,w
 14963  03FC  00CA               	movwf	___flmul@sign
 14964  03FD  3540               	lslf	___flmul@b+3,w
 14965  03FE  00C5               	movwf	??___flmul
 14966  03FF  0845               	movf	??___flmul,w
 14967  0400  00D0               	movwf	___flmul@bexp
 14968  0401  1BBF               	btfsc	___flmul@b+2,7
 14969  0402  1450               	bsf	___flmul@bexp,0
 14970  0403  0850               	movf	___flmul@bexp,w
 14971  0404  1903               	btfsc	3,2
 14972  0405  2C13               	goto	l5342
 14973  0406  0A50               	incf	___flmul@bexp,w
 14974  0407  1D03               	btfss	3,2
 14975  0408  2C11               	goto	l5340
 14976  0409  3000               	movlw	0
 14977  040A  00C0               	movwf	___flmul@b+3
 14978  040B  3000               	movlw	0
 14979  040C  00BF               	movwf	___flmul@b+2
 14980  040D  3000               	movlw	0
 14981  040E  00BE               	movwf	___flmul@b+1
 14982  040F  3000               	movlw	0
 14983  0410  00BD               	movwf	___flmul@b
 14984  0411                     l5340:	
 14985  0411  17BF               	bsf	___flmul@b+2,7
 14986  0412  2C1B               	goto	l5344
 14987  0413                     l5342:	
 14988  0413  3000               	movlw	0
 14989  0414  00C0               	movwf	___flmul@b+3
 14990  0415  3000               	movlw	0
 14991  0416  00BF               	movwf	___flmul@b+2
 14992  0417  3000               	movlw	0
 14993  0418  00BE               	movwf	___flmul@b+1
 14994  0419  3000               	movlw	0
 14995  041A  00BD               	movwf	___flmul@b
 14996  041B                     l5344:	
 14997  041B  0844               	movf	___flmul@a+3,w
 14998  041C  3980               	andlw	128
 14999  041D  00C5               	movwf	??___flmul
 15000  041E  0845               	movf	??___flmul,w
 15001  041F  06CA               	xorwf	___flmul@sign,f
 15002  0420  3544               	lslf	___flmul@a+3,w
 15003  0421  00C5               	movwf	??___flmul
 15004  0422  0845               	movf	??___flmul,w
 15005  0423  00CB               	movwf	___flmul@aexp
 15006  0424  1BC3               	btfsc	___flmul@a+2,7
 15007  0425  144B               	bsf	___flmul@aexp,0
 15008  0426  084B               	movf	___flmul@aexp,w
 15009  0427  1903               	btfsc	3,2
 15010  0428  2C36               	goto	l5360
 15011  0429  0A4B               	incf	___flmul@aexp,w
 15012  042A  1D03               	btfss	3,2
 15013  042B  2C34               	goto	l5358
 15014  042C  3000               	movlw	0
 15015  042D  00C4               	movwf	___flmul@a+3
 15016  042E  3000               	movlw	0
 15017  042F  00C3               	movwf	___flmul@a+2
 15018  0430  3000               	movlw	0
 15019  0431  00C2               	movwf	___flmul@a+1
 15020  0432  3000               	movlw	0
 15021  0433  00C1               	movwf	___flmul@a
 15022  0434                     l5358:	
 15023  0434  17C3               	bsf	___flmul@a+2,7
 15024  0435  2C3E               	goto	l5362
 15025  0436                     l5360:	
 15026  0436  3000               	movlw	0
 15027  0437  00C4               	movwf	___flmul@a+3
 15028  0438  3000               	movlw	0
 15029  0439  00C3               	movwf	___flmul@a+2
 15030  043A  3000               	movlw	0
 15031  043B  00C2               	movwf	___flmul@a+1
 15032  043C  3000               	movlw	0
 15033  043D  00C1               	movwf	___flmul@a
 15034  043E                     l5362:	
 15035  043E  084B               	movf	___flmul@aexp,w
 15036  043F  1D03               	btfss	3,2
 15037  0440  0850               	movf	___flmul@bexp,w
 15038  0441  1D03               	btfss	3,2
 15039  0442  2C4C               	goto	l5370
 15040  0443  3000               	movlw	0
 15041  0444  00C0               	movwf	?___flmul+3
 15042  0445  3000               	movlw	0
 15043  0446  00BF               	movwf	?___flmul+2
 15044  0447  3000               	movlw	0
 15045  0448  00BE               	movwf	?___flmul+1
 15046  0449  3000               	movlw	0
 15047  044A  00BD               	movwf	?___flmul
 15048  044B  0008               	return
 15049  044C                     l5370:	
 15050  044C  083D               	movf	___flmul@b,w
 15051  044D  00C5               	movwf	??___flmul
 15052  044E  0845               	movf	??___flmul,w
 15053  044F  00A0               	movwf	__Umul8_16@multiplicand
 15054  0450  0843               	movf	___flmul@a+2,w
 15055  0451  3190  20DB  3183   	fcall	__Umul8_16
 15056  0454  0140               	movlb	0	; select bank0
 15057  0455  0821               	movf	?__Umul8_16+1,w
 15058  0456  00D6               	movwf	___flmul@temp+1
 15059  0457  0820               	movf	?__Umul8_16,w
 15060  0458  00D5               	movwf	___flmul@temp
 15061  0459  0855               	movf	___flmul@temp,w
 15062  045A  00C5               	movwf	??___flmul
 15063  045B  01C6               	clrf	??___flmul+1
 15064  045C  01C7               	clrf	??___flmul+2
 15065  045D  01C8               	clrf	??___flmul+3
 15066  045E  0848               	movf	??___flmul+3,w
 15067  045F  00CF               	movwf	___flmul@grs+3
 15068  0460  0847               	movf	??___flmul+2,w
 15069  0461  00CE               	movwf	___flmul@grs+2
 15070  0462  0846               	movf	??___flmul+1,w
 15071  0463  00CD               	movwf	___flmul@grs+1
 15072  0464  0845               	movf	??___flmul,w
 15073  0465  00CC               	movwf	___flmul@grs
 15074  0466  0856               	movf	___flmul@temp+1,w
 15075  0467  00C5               	movwf	??___flmul
 15076  0468  01C6               	clrf	??___flmul+1
 15077  0469  01C7               	clrf	??___flmul+2
 15078  046A  01C8               	clrf	??___flmul+3
 15079  046B  0848               	movf	??___flmul+3,w
 15080  046C  00D4               	movwf	___flmul@prod+3
 15081  046D  0847               	movf	??___flmul+2,w
 15082  046E  00D3               	movwf	___flmul@prod+2
 15083  046F  0846               	movf	??___flmul+1,w
 15084  0470  00D2               	movwf	___flmul@prod+1
 15085  0471  0845               	movf	??___flmul,w
 15086  0472  00D1               	movwf	___flmul@prod
 15087  0473  083E               	movf	___flmul@b+1,w
 15088  0474  00C5               	movwf	??___flmul
 15089  0475  0845               	movf	??___flmul,w
 15090  0476  00A0               	movwf	__Umul8_16@multiplicand
 15091  0477  0842               	movf	___flmul@a+1,w
 15092  0478  3190  20DB  3183   	fcall	__Umul8_16
 15093  047B  0140               	movlb	0	; select bank0
 15094  047C  0821               	movf	?__Umul8_16+1,w
 15095  047D  00D6               	movwf	___flmul@temp+1
 15096  047E  0820               	movf	?__Umul8_16,w
 15097  047F  00D5               	movwf	___flmul@temp
 15098  0480  0855               	movf	___flmul@temp,w
 15099  0481  00C5               	movwf	??___flmul
 15100  0482  01C6               	clrf	??___flmul+1
 15101  0483  01C7               	clrf	??___flmul+2
 15102  0484  01C8               	clrf	??___flmul+3
 15103  0485  0845               	movf	??___flmul,w
 15104  0486  07CC               	addwf	___flmul@grs,f
 15105  0487  0846               	movf	??___flmul+1,w
 15106  0488  3DCD               	addwfc	___flmul@grs+1,f
 15107  0489  0847               	movf	??___flmul+2,w
 15108  048A  3DCE               	addwfc	___flmul@grs+2,f
 15109  048B  0848               	movf	??___flmul+3,w
 15110  048C  3DCF               	addwfc	___flmul@grs+3,f
 15111  048D  0856               	movf	___flmul@temp+1,w
 15112  048E  00C5               	movwf	??___flmul
 15113  048F  01C6               	clrf	??___flmul+1
 15114  0490  01C7               	clrf	??___flmul+2
 15115  0491  01C8               	clrf	??___flmul+3
 15116  0492  0845               	movf	??___flmul,w
 15117  0493  07D1               	addwf	___flmul@prod,f
 15118  0494  0846               	movf	??___flmul+1,w
 15119  0495  3DD2               	addwfc	___flmul@prod+1,f
 15120  0496  0847               	movf	??___flmul+2,w
 15121  0497  3DD3               	addwfc	___flmul@prod+2,f
 15122  0498  0848               	movf	??___flmul+3,w
 15123  0499  3DD4               	addwfc	___flmul@prod+3,f
 15124  049A  083F               	movf	___flmul@b+2,w
 15125  049B  00C5               	movwf	??___flmul
 15126  049C  0845               	movf	??___flmul,w
 15127  049D  00A0               	movwf	__Umul8_16@multiplicand
 15128  049E  0841               	movf	___flmul@a,w
 15129  049F  3190  20DB  3183   	fcall	__Umul8_16
 15130  04A2  0140               	movlb	0	; select bank0
 15131  04A3  0821               	movf	?__Umul8_16+1,w
 15132  04A4  00D6               	movwf	___flmul@temp+1
 15133  04A5  0820               	movf	?__Umul8_16,w
 15134  04A6  00D5               	movwf	___flmul@temp
 15135  04A7  0855               	movf	___flmul@temp,w
 15136  04A8  00C5               	movwf	??___flmul
 15137  04A9  01C6               	clrf	??___flmul+1
 15138  04AA  01C7               	clrf	??___flmul+2
 15139  04AB  01C8               	clrf	??___flmul+3
 15140  04AC  0845               	movf	??___flmul,w
 15141  04AD  07CC               	addwf	___flmul@grs,f
 15142  04AE  0846               	movf	??___flmul+1,w
 15143  04AF  3DCD               	addwfc	___flmul@grs+1,f
 15144  04B0  0847               	movf	??___flmul+2,w
 15145  04B1  3DCE               	addwfc	___flmul@grs+2,f
 15146  04B2  0848               	movf	??___flmul+3,w
 15147  04B3  3DCF               	addwfc	___flmul@grs+3,f
 15148  04B4  0856               	movf	___flmul@temp+1,w
 15149  04B5  00C5               	movwf	??___flmul
 15150  04B6  01C6               	clrf	??___flmul+1
 15151  04B7  01C7               	clrf	??___flmul+2
 15152  04B8  01C8               	clrf	??___flmul+3
 15153  04B9  0845               	movf	??___flmul,w
 15154  04BA  07D1               	addwf	___flmul@prod,f
 15155  04BB  0846               	movf	??___flmul+1,w
 15156  04BC  3DD2               	addwfc	___flmul@prod+1,f
 15157  04BD  0847               	movf	??___flmul+2,w
 15158  04BE  3DD3               	addwfc	___flmul@prod+2,f
 15159  04BF  0848               	movf	??___flmul+3,w
 15160  04C0  3DD4               	addwfc	___flmul@prod+3,f
 15161  04C1  3008               	movlw	8
 15162  04C2                     u5615:	
 15163  04C2  35CC               	lslf	___flmul@grs,f
 15164  04C3  0DCD               	rlf	___flmul@grs+1,f
 15165  04C4  0DCE               	rlf	___flmul@grs+2,f
 15166  04C5  0DCF               	rlf	___flmul@grs+3,f
 15167  04C6  0B89               	decfsz	9,f
 15168  04C7  2CC2               	goto	u5615
 15169  04C8  083E               	movf	___flmul@b+1,w
 15170  04C9  00C5               	movwf	??___flmul
 15171  04CA  0845               	movf	??___flmul,w
 15172  04CB  00A0               	movwf	__Umul8_16@multiplicand
 15173  04CC  0841               	movf	___flmul@a,w
 15174  04CD  3190  20DB  3183   	fcall	__Umul8_16
 15175  04D0  0140               	movlb	0	; select bank0
 15176  04D1  0821               	movf	?__Umul8_16+1,w
 15177  04D2  00D6               	movwf	___flmul@temp+1
 15178  04D3  0820               	movf	?__Umul8_16,w
 15179  04D4  00D5               	movwf	___flmul@temp
 15180  04D5  0855               	movf	___flmul@temp,w
 15181  04D6  07CC               	addwf	___flmul@grs,f
 15182  04D7  0856               	movf	___flmul@temp+1,w
 15183  04D8  3DCD               	addwfc	___flmul@grs+1,f
 15184  04D9  3000               	movlw	0
 15185  04DA  3DCE               	addwfc	___flmul@grs+2,f
 15186  04DB  3DCF               	addwfc	___flmul@grs+3,f
 15187  04DC  083D               	movf	___flmul@b,w
 15188  04DD  00C5               	movwf	??___flmul
 15189  04DE  0845               	movf	??___flmul,w
 15190  04DF  00A0               	movwf	__Umul8_16@multiplicand
 15191  04E0  0842               	movf	___flmul@a+1,w
 15192  04E1  3190  20DB  3183   	fcall	__Umul8_16
 15193  04E4  0140               	movlb	0	; select bank0
 15194  04E5  0821               	movf	?__Umul8_16+1,w
 15195  04E6  00D6               	movwf	___flmul@temp+1
 15196  04E7  0820               	movf	?__Umul8_16,w
 15197  04E8  00D5               	movwf	___flmul@temp
 15198  04E9  0855               	movf	___flmul@temp,w
 15199  04EA  07CC               	addwf	___flmul@grs,f
 15200  04EB  0856               	movf	___flmul@temp+1,w
 15201  04EC  3DCD               	addwfc	___flmul@grs+1,f
 15202  04ED  3000               	movlw	0
 15203  04EE  3DCE               	addwfc	___flmul@grs+2,f
 15204  04EF  3DCF               	addwfc	___flmul@grs+3,f
 15205  04F0  3008               	movlw	8
 15206  04F1                     u5625:	
 15207  04F1  35CC               	lslf	___flmul@grs,f
 15208  04F2  0DCD               	rlf	___flmul@grs+1,f
 15209  04F3  0DCE               	rlf	___flmul@grs+2,f
 15210  04F4  0DCF               	rlf	___flmul@grs+3,f
 15211  04F5  0B89               	decfsz	9,f
 15212  04F6  2CF1               	goto	u5625
 15213  04F7  083D               	movf	___flmul@b,w
 15214  04F8  00C5               	movwf	??___flmul
 15215  04F9  0845               	movf	??___flmul,w
 15216  04FA  00A0               	movwf	__Umul8_16@multiplicand
 15217  04FB  0841               	movf	___flmul@a,w
 15218  04FC  3190  20DB  3183   	fcall	__Umul8_16
 15219  04FF  0140               	movlb	0	; select bank0
 15220  0500  0821               	movf	?__Umul8_16+1,w
 15221  0501  00D6               	movwf	___flmul@temp+1
 15222  0502  0820               	movf	?__Umul8_16,w
 15223  0503  00D5               	movwf	___flmul@temp
 15224  0504  0855               	movf	___flmul@temp,w
 15225  0505  07CC               	addwf	___flmul@grs,f
 15226  0506  0856               	movf	___flmul@temp+1,w
 15227  0507  3DCD               	addwfc	___flmul@grs+1,f
 15228  0508  3000               	movlw	0
 15229  0509  3DCE               	addwfc	___flmul@grs+2,f
 15230  050A  3DCF               	addwfc	___flmul@grs+3,f
 15231  050B  083E               	movf	___flmul@b+1,w
 15232  050C  00C5               	movwf	??___flmul
 15233  050D  0845               	movf	??___flmul,w
 15234  050E  00A0               	movwf	__Umul8_16@multiplicand
 15235  050F  0843               	movf	___flmul@a+2,w
 15236  0510  3190  20DB  3183   	fcall	__Umul8_16
 15237  0513  0140               	movlb	0	; select bank0
 15238  0514  0821               	movf	?__Umul8_16+1,w
 15239  0515  00D6               	movwf	___flmul@temp+1
 15240  0516  0820               	movf	?__Umul8_16,w
 15241  0517  00D5               	movwf	___flmul@temp
 15242  0518  0855               	movf	___flmul@temp,w
 15243  0519  07D1               	addwf	___flmul@prod,f
 15244  051A  0856               	movf	___flmul@temp+1,w
 15245  051B  3DD2               	addwfc	___flmul@prod+1,f
 15246  051C  3000               	movlw	0
 15247  051D  3DD3               	addwfc	___flmul@prod+2,f
 15248  051E  3DD4               	addwfc	___flmul@prod+3,f
 15249  051F  083F               	movf	___flmul@b+2,w
 15250  0520  00C5               	movwf	??___flmul
 15251  0521  0845               	movf	??___flmul,w
 15252  0522  00A0               	movwf	__Umul8_16@multiplicand
 15253  0523  0842               	movf	___flmul@a+1,w
 15254  0524  3190  20DB  3183   	fcall	__Umul8_16
 15255  0527  0140               	movlb	0	; select bank0
 15256  0528  0821               	movf	?__Umul8_16+1,w
 15257  0529  00D6               	movwf	___flmul@temp+1
 15258  052A  0820               	movf	?__Umul8_16,w
 15259  052B  00D5               	movwf	___flmul@temp
 15260  052C  0855               	movf	___flmul@temp,w
 15261  052D  07D1               	addwf	___flmul@prod,f
 15262  052E  0856               	movf	___flmul@temp+1,w
 15263  052F  3DD2               	addwfc	___flmul@prod+1,f
 15264  0530  3000               	movlw	0
 15265  0531  3DD3               	addwfc	___flmul@prod+2,f
 15266  0532  3DD4               	addwfc	___flmul@prod+3,f
 15267  0533  083F               	movf	___flmul@b+2,w
 15268  0534  00C5               	movwf	??___flmul
 15269  0535  0845               	movf	??___flmul,w
 15270  0536  00A0               	movwf	__Umul8_16@multiplicand
 15271  0537  0843               	movf	___flmul@a+2,w
 15272  0538  3190  20DB  3183   	fcall	__Umul8_16
 15273  053B  0140               	movlb	0	; select bank0
 15274  053C  0821               	movf	?__Umul8_16+1,w
 15275  053D  00D6               	movwf	___flmul@temp+1
 15276  053E  0820               	movf	?__Umul8_16,w
 15277  053F  00D5               	movwf	___flmul@temp
 15278  0540  0855               	movf	___flmul@temp,w
 15279  0541  00C5               	movwf	??___flmul
 15280  0542  0856               	movf	___flmul@temp+1,w
 15281  0543  00C6               	movwf	??___flmul+1
 15282  0544  01C7               	clrf	??___flmul+2
 15283  0545  01C8               	clrf	??___flmul+3
 15284  0546  3008               	movlw	8
 15285  0547                     u5635:	
 15286  0547  35C5               	lslf	??___flmul,f
 15287  0548  0DC6               	rlf	??___flmul+1,f
 15288  0549  0DC7               	rlf	??___flmul+2,f
 15289  054A  0DC8               	rlf	??___flmul+3,f
 15290  054B  0B89               	decfsz	9,f
 15291  054C  2D47               	goto	u5635
 15292  054D  0845               	movf	??___flmul,w
 15293  054E  07D1               	addwf	___flmul@prod,f
 15294  054F  0846               	movf	??___flmul+1,w
 15295  0550  3DD2               	addwfc	___flmul@prod+1,f
 15296  0551  0847               	movf	??___flmul+2,w
 15297  0552  3DD3               	addwfc	___flmul@prod+2,f
 15298  0553  0848               	movf	??___flmul+3,w
 15299  0554  3DD4               	addwfc	___flmul@prod+3,f
 15300  0555  084C               	movf	___flmul@grs,w
 15301  0556  00C5               	movwf	??___flmul
 15302  0557  084D               	movf	___flmul@grs+1,w
 15303  0558  00C6               	movwf	??___flmul+1
 15304  0559  084E               	movf	___flmul@grs+2,w
 15305  055A  00C7               	movwf	??___flmul+2
 15306  055B  084F               	movf	___flmul@grs+3,w
 15307  055C  00C8               	movwf	??___flmul+3
 15308  055D  3018               	movlw	24
 15309  055E                     u5645:	
 15310  055E  36C8               	lsrf	??___flmul+3,f
 15311  055F  0CC7               	rrf	??___flmul+2,f
 15312  0560  0CC6               	rrf	??___flmul+1,f
 15313  0561  0CC5               	rrf	??___flmul,f
 15314  0562  0B89               	decfsz	9,f
 15315  0563  2D5E               	goto	u5645
 15316  0564  0845               	movf	??___flmul,w
 15317  0565  07D1               	addwf	___flmul@prod,f
 15318  0566  0846               	movf	??___flmul+1,w
 15319  0567  3DD2               	addwfc	___flmul@prod+1,f
 15320  0568  0847               	movf	??___flmul+2,w
 15321  0569  3DD3               	addwfc	___flmul@prod+2,f
 15322  056A  0848               	movf	??___flmul+3,w
 15323  056B  3DD4               	addwfc	___flmul@prod+3,f
 15324  056C  3008               	movlw	8
 15325  056D                     u5655:	
 15326  056D  35CC               	lslf	___flmul@grs,f
 15327  056E  0DCD               	rlf	___flmul@grs+1,f
 15328  056F  0DCE               	rlf	___flmul@grs+2,f
 15329  0570  0DCF               	rlf	___flmul@grs+3,f
 15330  0571  0B89               	decfsz	9,f
 15331  0572  2D6D               	goto	u5655
 15332  0573  0850               	movf	___flmul@bexp,w
 15333  0574  074B               	addwf	___flmul@aexp,w
 15334  0575  00C5               	movwf	??___flmul
 15335  0576  01C6               	clrf	??___flmul+1
 15336  0577  0DC6               	rlf	??___flmul+1,f
 15337  0578  0845               	movf	??___flmul,w
 15338  0579  3E82               	addlw	130
 15339  057A  00D5               	movwf	___flmul@temp
 15340  057B  30FF               	movlw	255
 15341  057C  3D46               	addwfc	??___flmul+1,w
 15342  057D  00D6               	movwf	___flmul@temp+1
 15343  057E                     l5422:	
 15344  057E  1BD3               	btfsc	___flmul@prod+2,7
 15345  057F  2D95               	goto	l5424
 15346  0580  3001               	movlw	1
 15347  0581                     u5665:	
 15348  0581  35D1               	lslf	___flmul@prod,f
 15349  0582  0DD2               	rlf	___flmul@prod+1,f
 15350  0583  0DD3               	rlf	___flmul@prod+2,f
 15351  0584  0DD4               	rlf	___flmul@prod+3,f
 15352  0585  0B89               	decfsz	9,f
 15353  0586  2D81               	goto	u5665
 15354  0587  1BCF               	btfsc	___flmul@grs+3,7
 15355  0588  1451               	bsf	___flmul@prod,0
 15356  0589  3001               	movlw	1
 15357  058A                     u5685:	
 15358  058A  35CC               	lslf	___flmul@grs,f
 15359  058B  0DCD               	rlf	___flmul@grs+1,f
 15360  058C  0DCE               	rlf	___flmul@grs+2,f
 15361  058D  0DCF               	rlf	___flmul@grs+3,f
 15362  058E  0B89               	decfsz	9,f
 15363  058F  2D8A               	goto	u5685
 15364  0590  30FF               	movlw	255
 15365  0591  07D5               	addwf	___flmul@temp,f
 15366  0592  30FF               	movlw	255
 15367  0593  3DD6               	addwfc	___flmul@temp+1,f
 15368  0594  2D7E               	goto	l5422
 15369  0595                     l5424:	
 15370  0595  01CB               	clrf	___flmul@aexp
 15371  0596  1FCF               	btfss	___flmul@grs+3,7
 15372  0597  2DAE               	goto	l5434
 15373  0598  30FF               	movlw	255
 15374  0599  054C               	andwf	___flmul@grs,w
 15375  059A  00C5               	movwf	??___flmul
 15376  059B  30FF               	movlw	255
 15377  059C  054D               	andwf	___flmul@grs+1,w
 15378  059D  00C6               	movwf	??___flmul+1
 15379  059E  30FF               	movlw	255
 15380  059F  054E               	andwf	___flmul@grs+2,w
 15381  05A0  00C7               	movwf	??___flmul+2
 15382  05A1  307F               	movlw	127
 15383  05A2  054F               	andwf	___flmul@grs+3,w
 15384  05A3  00C8               	movwf	??___flmul+3
 15385  05A4  0848               	movf	??___flmul+3,w
 15386  05A5  0447               	iorwf	??___flmul+2,w
 15387  05A6  0446               	iorwf	??___flmul+1,w
 15388  05A7  0445               	iorwf	??___flmul,w
 15389  05A8  1903               	skipnz
 15390  05A9  1851               	btfsc	___flmul@prod,0
 15391  05AA  2DAC               	goto	l5430
 15392  05AB  2DAE               	goto	l5434
 15393  05AC                     l5430:	
 15394  05AC  01CB               	clrf	___flmul@aexp
 15395  05AD  0ACB               	incf	___flmul@aexp,f
 15396  05AE                     l5434:	
 15397  05AE  084B               	movf	___flmul@aexp,w
 15398  05AF  1903               	btfsc	3,2
 15399  05B0  2DD7               	goto	l5444
 15400  05B1  3001               	movlw	1
 15401  05B2  07D1               	addwf	___flmul@prod,f
 15402  05B3  3000               	movlw	0
 15403  05B4  3DD2               	addwfc	___flmul@prod+1,f
 15404  05B5  3000               	movlw	0
 15405  05B6  3DD3               	addwfc	___flmul@prod+2,f
 15406  05B7  3000               	movlw	0
 15407  05B8  3DD4               	addwfc	___flmul@prod+3,f
 15408  05B9  1C54               	btfss	___flmul@prod+3,0
 15409  05BA  2DD7               	goto	l5444
 15410  05BB  0851               	movf	___flmul@prod,w
 15411  05BC  00C5               	movwf	??___flmul
 15412  05BD  0852               	movf	___flmul@prod+1,w
 15413  05BE  00C6               	movwf	??___flmul+1
 15414  05BF  0853               	movf	___flmul@prod+2,w
 15415  05C0  00C7               	movwf	??___flmul+2
 15416  05C1  0854               	movf	___flmul@prod+3,w
 15417  05C2  00C8               	movwf	??___flmul+3
 15418  05C3  3001               	movlw	1
 15419  05C4  00C9               	movwf	??___flmul+4
 15420  05C5                     u5755:	
 15421  05C5  37C8               	asrf	??___flmul+3,f
 15422  05C6  0CC7               	rrf	??___flmul+2,f
 15423  05C7  0CC6               	rrf	??___flmul+1,f
 15424  05C8  0CC5               	rrf	??___flmul,f
 15425  05C9  0BC9               	decfsz	??___flmul+4,f
 15426  05CA  2DC5               	goto	u5755
 15427  05CB  0848               	movf	??___flmul+3,w
 15428  05CC  00D4               	movwf	___flmul@prod+3
 15429  05CD  0847               	movf	??___flmul+2,w
 15430  05CE  00D3               	movwf	___flmul@prod+2
 15431  05CF  0846               	movf	??___flmul+1,w
 15432  05D0  00D2               	movwf	___flmul@prod+1
 15433  05D1  0845               	movf	??___flmul,w
 15434  05D2  00D1               	movwf	___flmul@prod
 15435  05D3  3001               	movlw	1
 15436  05D4  07D5               	addwf	___flmul@temp,f
 15437  05D5  3000               	movlw	0
 15438  05D6  3DD6               	addwfc	___flmul@temp+1,f
 15439  05D7                     l5444:	
 15440  05D7  0856               	movf	___flmul@temp+1,w
 15441  05D8  3A80               	xorlw	128
 15442  05D9  00C5               	movwf	??___flmul
 15443  05DA  3080               	movlw	128
 15444  05DB  0245               	subwf	??___flmul,w
 15445  05DC  1D03               	skipz
 15446  05DD  2DE0               	goto	u5765
 15447  05DE  30FF               	movlw	255
 15448  05DF  0255               	subwf	___flmul@temp,w
 15449  05E0                     u5765:	
 15450  05E0  1C03               	skipc
 15451  05E1  2DEC               	goto	l5448
 15452  05E2  307F               	movlw	127
 15453  05E3  0140               	movlb	0	; select bank0
 15454  05E4  00D4               	movwf	___flmul@prod+3
 15455  05E5  3080               	movlw	128
 15456  05E6  00D3               	movwf	___flmul@prod+2
 15457  05E7  3000               	movlw	0
 15458  05E8  00D2               	movwf	___flmul@prod+1
 15459  05E9  3000               	movlw	0
 15460  05EA  00D1               	movwf	___flmul@prod
 15461  05EB  2E16               	goto	l1681
 15462  05EC                     l5448:	
 15463  05EC  0140               	movlb	0	; select bank0
 15464  05ED  0856               	movf	___flmul@temp+1,w
 15465  05EE  3A80               	xorlw	128
 15466  05EF  00C5               	movwf	??___flmul
 15467  05F0  3080               	movlw	128
 15468  05F1  0245               	subwf	??___flmul,w
 15469  05F2  1D03               	skipz
 15470  05F3  2DF6               	goto	u5775
 15471  05F4  3001               	movlw	1
 15472  05F5  0255               	subwf	___flmul@temp,w
 15473  05F6                     u5775:	
 15474  05F6  1803               	skipnc
 15475  05F7  2E03               	goto	l5454
 15476  05F8  3000               	movlw	0
 15477  05F9  0140               	movlb	0	; select bank0
 15478  05FA  00D4               	movwf	___flmul@prod+3
 15479  05FB  3000               	movlw	0
 15480  05FC  00D3               	movwf	___flmul@prod+2
 15481  05FD  3000               	movlw	0
 15482  05FE  00D2               	movwf	___flmul@prod+1
 15483  05FF  3000               	movlw	0
 15484  0600  00D1               	movwf	___flmul@prod
 15485  0601  01CA               	clrf	___flmul@sign
 15486  0602  2E16               	goto	l1681
 15487  0603                     l5454:	
 15488  0603  0140               	movlb	0	; select bank0
 15489  0604  0855               	movf	___flmul@temp,w
 15490  0605  00C5               	movwf	??___flmul
 15491  0606  0845               	movf	??___flmul,w
 15492  0607  00D0               	movwf	___flmul@bexp
 15493  0608  30FF               	movlw	255
 15494  0609  05D1               	andwf	___flmul@prod,f
 15495  060A  30FF               	movlw	255
 15496  060B  05D2               	andwf	___flmul@prod+1,f
 15497  060C  307F               	movlw	127
 15498  060D  05D3               	andwf	___flmul@prod+2,f
 15499  060E  3000               	movlw	0
 15500  060F  05D4               	andwf	___flmul@prod+3,f
 15501  0610  1850               	btfsc	___flmul@bexp,0
 15502  0611  17D3               	bsf	___flmul@prod+2,7
 15503  0612  3650               	lsrf	___flmul@bexp,w
 15504  0613  00C5               	movwf	??___flmul
 15505  0614  0845               	movf	??___flmul,w
 15506  0615  00D4               	movwf	___flmul@prod+3
 15507  0616                     l1681:	
 15508  0616  084A               	movf	___flmul@sign,w
 15509  0617  00C5               	movwf	??___flmul
 15510  0618  0845               	movf	??___flmul,w
 15511  0619  04D4               	iorwf	___flmul@prod+3,f
 15512  061A  0854               	movf	___flmul@prod+3,w
 15513  061B  00C0               	movwf	?___flmul+3
 15514  061C  0853               	movf	___flmul@prod+2,w
 15515  061D  00BF               	movwf	?___flmul+2
 15516  061E  0852               	movf	___flmul@prod+1,w
 15517  061F  00BE               	movwf	?___flmul+1
 15518  0620  0851               	movf	___flmul@prod,w
 15519  0621  00BD               	movwf	?___flmul
 15520  0622  0008               	return
 15521  0623                     __end_of___flmul:	
 15522                           
 15523                           	psect	text47
 15524  10DB                     __ptext47:	
 15525 ;; *************** function __Umul8_16 *****************
 15526 ;; Defined at:
 15527 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 15528 ;; Parameters:    Size  Location     Type
 15529 ;;  multiplier      1    wreg     unsigned char 
 15530 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15533 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15534 ;;  product         2    4[BANK0 ] unsigned int 
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  2    0[BANK0 ] unsigned int 
 15537 ;; Registers used:
 15538 ;;		wreg, status,2, status,0
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15544 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15545 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15546 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15547 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15548 ;;Total ram usage:        9 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; Hardware stack levels required when called:    4
 15551 ;; This function calls:
 15552 ;;		Nothing
 15553 ;; This function is called by:
 15554 ;;		___flmul
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           
 15559                           ;psect for function __Umul8_16
 15560  10DB                     __Umul8_16:	
 15561                           
 15562                           ;incstack = 0
 15563                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15564                           ;__Umul8_16@multiplier stored from wreg
 15565  10DB  0140               	movlb	0	; select bank0
 15566  10DC  00A8               	movwf	__Umul8_16@multiplier
 15567  10DD  01A4               	clrf	__Umul8_16@product
 15568  10DE  01A5               	clrf	__Umul8_16@product+1
 15569  10DF  0820               	movf	__Umul8_16@multiplicand,w
 15570  10E0  00A2               	movwf	??__Umul8_16
 15571  10E1  01A3               	clrf	??__Umul8_16+1
 15572  10E2  0822               	movf	??__Umul8_16,w
 15573  10E3  00A6               	movwf	__Umul8_16@word_mpld
 15574  10E4  0823               	movf	??__Umul8_16+1,w
 15575  10E5  00A7               	movwf	__Umul8_16@word_mpld+1
 15576  10E6                     l5260:	
 15577  10E6  1C28               	btfss	__Umul8_16@multiplier,0
 15578  10E7  28EC               	goto	l1726
 15579  10E8  0826               	movf	__Umul8_16@word_mpld,w
 15580  10E9  07A4               	addwf	__Umul8_16@product,f
 15581  10EA  0827               	movf	__Umul8_16@word_mpld+1,w
 15582  10EB  3DA5               	addwfc	__Umul8_16@product+1,f
 15583  10EC                     l1726:	
 15584  10EC  3001               	movlw	1
 15585  10ED                     u5375:	
 15586  10ED  35A6               	lslf	__Umul8_16@word_mpld,f
 15587  10EE  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15588  10EF  0B89               	decfsz	9,f
 15589  10F0  28ED               	goto	u5375
 15590  10F1  1003               	clrc
 15591  10F2  0CA8               	rrf	__Umul8_16@multiplier,f
 15592  10F3  0828               	movf	__Umul8_16@multiplier,w
 15593  10F4  1D03               	btfss	3,2
 15594  10F5  28E6               	goto	l5260
 15595  10F6  0825               	movf	__Umul8_16@product+1,w
 15596  10F7  00A1               	movwf	?__Umul8_16+1
 15597  10F8  0824               	movf	__Umul8_16@product,w
 15598  10F9  00A0               	movwf	?__Umul8_16
 15599  10FA  0008               	return
 15600  10FB                     __end_of__Umul8_16:	
 15601                           
 15602                           	psect	text48
 15603  15F4                     __ptext48:	
 15604 ;; *************** function ___flge *****************
 15605 ;; Defined at:
 15606 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 15607 ;; Parameters:    Size  Location     Type
 15608 ;;  ff1             4   55[BANK0 ] unsigned int 
 15609 ;;  ff2             4   59[BANK0 ] unsigned int 
 15610 ;; Auto vars:     Size  Location     Type
 15611 ;;		None
 15612 ;; Return value:  Size  Location     Type
 15613 ;;		None               void
 15614 ;; Registers used:
 15615 ;;		wreg, status,2, status,0
 15616 ;; Tracked objects:
 15617 ;;		On entry : 0/0
 15618 ;;		On exit  : 0/0
 15619 ;;		Unchanged: 0/0
 15620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15621 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15623 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15624 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15625 ;;Total ram usage:       12 bytes
 15626 ;; Hardware stack levels used:    1
 15627 ;; Hardware stack levels required when called:    4
 15628 ;; This function calls:
 15629 ;;		Nothing
 15630 ;; This function is called by:
 15631 ;;		_HueToRGB
 15632 ;;		_LED_setHSL
 15633 ;;		_pulseColors
 15634 ;; This function uses a non-reentrant model
 15635 ;;
 15636                           
 15637                           
 15638                           ;psect for function ___flge
 15639  15F4                     ___flge:	
 15640                           
 15641                           ;incstack = 0
 15642                           ; Regs used in ___flge: [wreg+status,2+status,0]
 15643  15F4  3000               	movlw	0
 15644  15F5  0140               	movlb	0	; select bank0
 15645  15F6  0557               	andwf	___flge@ff1,w
 15646  15F7  00DF               	movwf	??___flge
 15647  15F8  3000               	movlw	0
 15648  15F9  0558               	andwf	___flge@ff1+1,w
 15649  15FA  00E0               	movwf	??___flge+1
 15650  15FB  3080               	movlw	128
 15651  15FC  0559               	andwf	___flge@ff1+2,w
 15652  15FD  00E1               	movwf	??___flge+2
 15653  15FE  307F               	movlw	127
 15654  15FF  055A               	andwf	___flge@ff1+3,w
 15655  1600  00E2               	movwf	??___flge+3
 15656  1601  0862               	movf	??___flge+3,w
 15657  1602  0461               	iorwf	??___flge+2,w
 15658  1603  0460               	iorwf	??___flge+1,w
 15659  1604  045F               	iorwf	??___flge,w
 15660  1605  1D03               	skipz
 15661  1606  2E0F               	goto	l1450
 15662  1607  3000               	movlw	0
 15663  1608  00DA               	movwf	___flge@ff1+3
 15664  1609  3000               	movlw	0
 15665  160A  00D9               	movwf	___flge@ff1+2
 15666  160B  3000               	movlw	0
 15667  160C  00D8               	movwf	___flge@ff1+1
 15668  160D  3000               	movlw	0
 15669  160E  00D7               	movwf	___flge@ff1
 15670  160F                     l1450:	
 15671  160F  3000               	movlw	0
 15672  1610  055B               	andwf	___flge@ff2,w
 15673  1611  00DF               	movwf	??___flge
 15674  1612  3000               	movlw	0
 15675  1613  055C               	andwf	___flge@ff2+1,w
 15676  1614  00E0               	movwf	??___flge+1
 15677  1615  3080               	movlw	128
 15678  1616  055D               	andwf	___flge@ff2+2,w
 15679  1617  00E1               	movwf	??___flge+2
 15680  1618  307F               	movlw	127
 15681  1619  055E               	andwf	___flge@ff2+3,w
 15682  161A  00E2               	movwf	??___flge+3
 15683  161B  0862               	movf	??___flge+3,w
 15684  161C  0461               	iorwf	??___flge+2,w
 15685  161D  0460               	iorwf	??___flge+1,w
 15686  161E  045F               	iorwf	??___flge,w
 15687  161F  1D03               	skipz
 15688  1620  2E29               	goto	l3820
 15689  1621  3000               	movlw	0
 15690  1622  00DE               	movwf	___flge@ff2+3
 15691  1623  3000               	movlw	0
 15692  1624  00DD               	movwf	___flge@ff2+2
 15693  1625  3000               	movlw	0
 15694  1626  00DC               	movwf	___flge@ff2+1
 15695  1627  3000               	movlw	0
 15696  1628  00DB               	movwf	___flge@ff2
 15697  1629                     l3820:	
 15698  1629  1FDA               	btfss	___flge@ff1+3,7
 15699  162A  2E43               	goto	l3824
 15700  162B  3000               	movlw	0
 15701  162C  00DF               	movwf	??___flge
 15702  162D  3000               	movlw	0
 15703  162E  00E0               	movwf	??___flge+1
 15704  162F  3000               	movlw	0
 15705  1630  00E1               	movwf	??___flge+2
 15706  1631  3080               	movlw	128
 15707  1632  00E2               	movwf	??___flge+3
 15708  1633  0857               	movf	___flge@ff1,w
 15709  1634  02DF               	subwf	??___flge,f
 15710  1635  0858               	movf	___flge@ff1+1,w
 15711  1636  3BE0               	subwfb	??___flge+1,f
 15712  1637  0859               	movf	___flge@ff1+2,w
 15713  1638  3BE1               	subwfb	??___flge+2,f
 15714  1639  085A               	movf	___flge@ff1+3,w
 15715  163A  3BE2               	subwfb	??___flge+3,f
 15716  163B  0862               	movf	??___flge+3,w
 15717  163C  00DA               	movwf	___flge@ff1+3
 15718  163D  0861               	movf	??___flge+2,w
 15719  163E  00D9               	movwf	___flge@ff1+2
 15720  163F  0860               	movf	??___flge+1,w
 15721  1640  00D8               	movwf	___flge@ff1+1
 15722  1641  085F               	movf	??___flge,w
 15723  1642  00D7               	movwf	___flge@ff1
 15724  1643                     l3824:	
 15725  1643  1FDE               	btfss	___flge@ff2+3,7
 15726  1644  2E5D               	goto	l1453
 15727  1645  3000               	movlw	0
 15728  1646  00DF               	movwf	??___flge
 15729  1647  3000               	movlw	0
 15730  1648  00E0               	movwf	??___flge+1
 15731  1649  3000               	movlw	0
 15732  164A  00E1               	movwf	??___flge+2
 15733  164B  3080               	movlw	128
 15734  164C  00E2               	movwf	??___flge+3
 15735  164D  085B               	movf	___flge@ff2,w
 15736  164E  02DF               	subwf	??___flge,f
 15737  164F  085C               	movf	___flge@ff2+1,w
 15738  1650  3BE0               	subwfb	??___flge+1,f
 15739  1651  085D               	movf	___flge@ff2+2,w
 15740  1652  3BE1               	subwfb	??___flge+2,f
 15741  1653  085E               	movf	___flge@ff2+3,w
 15742  1654  3BE2               	subwfb	??___flge+3,f
 15743  1655  0862               	movf	??___flge+3,w
 15744  1656  00DE               	movwf	___flge@ff2+3
 15745  1657  0861               	movf	??___flge+2,w
 15746  1658  00DD               	movwf	___flge@ff2+2
 15747  1659  0860               	movf	??___flge+1,w
 15748  165A  00DC               	movwf	___flge@ff2+1
 15749  165B  085F               	movf	??___flge,w
 15750  165C  00DB               	movwf	___flge@ff2
 15751  165D                     l1453:	
 15752  165D  3080               	movlw	128
 15753  165E  06DA               	xorwf	___flge@ff1+3,f
 15754  165F  3080               	movlw	128
 15755  1660  06DE               	xorwf	___flge@ff2+3,f
 15756  1661  085E               	movf	___flge@ff2+3,w
 15757  1662  025A               	subwf	___flge@ff1+3,w
 15758  1663  1D03               	skipz
 15759  1664  0008               	return
 15760  1665  085D               	movf	___flge@ff2+2,w
 15761  1666  0259               	subwf	___flge@ff1+2,w
 15762  1667  1D03               	skipz
 15763  1668  0008               	return
 15764  1669  085C               	movf	___flge@ff2+1,w
 15765  166A  0258               	subwf	___flge@ff1+1,w
 15766  166B  1D03               	skipz
 15767  166C  0008               	return
 15768  166D  085B               	movf	___flge@ff2,w
 15769  166E  0257               	subwf	___flge@ff1,w
 15770  166F  0008               	return
 15771  1670                     __end_of___flge:	
 15772                           
 15773                           	psect	text49
 15774  1EDD                     __ptext49:	
 15775 ;; *************** function _BEAT_detected *****************
 15776 ;; Defined at:
 15777 ;;		line 41 in file "beat.c"
 15778 ;; Parameters:    Size  Location     Type
 15779 ;;		None
 15780 ;; Auto vars:     Size  Location     Type
 15781 ;;		None
 15782 ;; Return value:  Size  Location     Type
 15783 ;;                  1    wreg      _Bool 
 15784 ;; Registers used:
 15785 ;;		wreg, status,2, status,0
 15786 ;; Tracked objects:
 15787 ;;		On entry : 0/0
 15788 ;;		On exit  : 0/0
 15789 ;;		Unchanged: 0/0
 15790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15795 ;;Total ram usage:        0 bytes
 15796 ;; Hardware stack levels used:    1
 15797 ;; Hardware stack levels required when called:    4
 15798 ;; This function calls:
 15799 ;;		Nothing
 15800 ;; This function is called by:
 15801 ;;		_LED_Beat
 15802 ;; This function uses a non-reentrant model
 15803 ;;
 15804                           
 15805                           
 15806                           ;psect for function _BEAT_detected
 15807  1EDD                     _BEAT_detected:	
 15808                           
 15809                           ;beat.c: 42:     if (detected) {
 15810                           
 15811                           ;incstack = 0
 15812                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 15813  1EDD  0142               	movlb	2	; select bank2
 15814  1EDE  084E               	movf	_detected^(0+256),w
 15815  1EDF  1903               	btfsc	3,2
 15816  1EE0  2EE4               	goto	l5684
 15817                           
 15818                           ;beat.c: 43:         detected = 0;
 15819  1EE1  01CE               	clrf	_detected^(0+256)
 15820                           
 15821                           ;beat.c: 44:         return 1;
 15822  1EE2  3001               	movlw	1
 15823  1EE3  0008               	return
 15824  1EE4                     l5684:	
 15825                           
 15826                           ;beat.c: 46:     return 0;
 15827  1EE4  3000               	movlw	0
 15828  1EE5  0008               	return
 15829  1EE6                     __end_of_BEAT_detected:	
 15830                           
 15831                           	psect	text50
 15832  0A04                     __ptext50:	
 15833 ;; *************** function _BEAT_task *****************
 15834 ;; Defined at:
 15835 ;;		line 59 in file "beat.c"
 15836 ;; Parameters:    Size  Location     Type
 15837 ;;		None
 15838 ;; Auto vars:     Size  Location     Type
 15839 ;;  offset          2   10[BANK0 ] unsigned short 
 15840 ;; Return value:  Size  Location     Type
 15841 ;;                  1    wreg      void 
 15842 ;; Registers used:
 15843 ;;		wreg, status,2, status,0, pclath, cstack
 15844 ;; Tracked objects:
 15845 ;;		On entry : 0/0
 15846 ;;		On exit  : 0/0
 15847 ;;		Unchanged: 0/0
 15848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15850 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15851 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15852 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15853 ;;Total ram usage:        4 bytes
 15854 ;; Hardware stack levels used:    1
 15855 ;; Hardware stack levels required when called:    5
 15856 ;; This function calls:
 15857 ;;		_ADCC_SetUpperThreshold
 15858 ;;		_CLOCK_getTime
 15859 ;;		_TM1650_isEnabled
 15860 ;;		___lwdiv
 15861 ;; This function is called by:
 15862 ;;		_MENU_task
 15863 ;; This function uses a non-reentrant model
 15864 ;;
 15865                           
 15866                           
 15867                           ;psect for function _BEAT_task
 15868  0A04                     _BEAT_task:	
 15869                           
 15870                           ;beat.c: 61:     if (TM1650_isEnabled())
 15871                           
 15872                           ;incstack = 0
 15873                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 15874  0A04  319E  268B  318A   	fcall	_TM1650_isEnabled
 15875  0A07  3A00               	xorlw	0
 15876  0A08  1D03               	btfss	3,2
 15877  0A09  0008               	return
 15878                           
 15879                           ;beat.c: 64:     if (CLOCK_getTime() - lastRun < delay)
 15880  0A0A  319E  26CB  318A   	fcall	_CLOCK_getTime
 15881  0A0D  0142               	movlb	2	; select bank2
 15882  0A0E  083D               	movf	_lastRun^(0+256),w
 15883  0A0F  0140               	movlb	0	; select bank0
 15884  0A10  0220               	subwf	?_CLOCK_getTime,w
 15885  0A11  00A8               	movwf	??_BEAT_task
 15886  0A12  0142               	movlb	2	; select bank2
 15887  0A13  083E               	movf	(_lastRun+1)^(0+256),w
 15888  0A14  0140               	movlb	0	; select bank0
 15889  0A15  3B21               	subwfb	?_CLOCK_getTime+1,w
 15890  0A16  00A9               	movwf	??_BEAT_task+1
 15891  0A17  0142               	movlb	2	; select bank2
 15892  0A18  0866               	movf	(_delay+1)^(0+256),w
 15893  0A19  0140               	movlb	0	; select bank0
 15894  0A1A  0229               	subwf	??_BEAT_task+1,w
 15895  0A1B  1D03               	skipz
 15896  0A1C  2A21               	goto	u6135
 15897  0A1D  0142               	movlb	2	; select bank2
 15898  0A1E  0865               	movf	_delay^(0+256),w
 15899  0A1F  0140               	movlb	0	; select bank0
 15900  0A20  0228               	subwf	??_BEAT_task,w
 15901  0A21                     u6135:	
 15902  0A21  1C03               	btfss	3,0
 15903  0A22  0008               	return
 15904                           
 15905                           ;beat.c: 67:     lastRun = CLOCK_getTime();
 15906  0A23  319E  26CB  318A   	fcall	_CLOCK_getTime
 15907  0A26  0140               	movlb	0	; select bank0
 15908  0A27  0821               	movf	?_CLOCK_getTime+1,w
 15909  0A28  0142               	movlb	2	; select bank2
 15910  0A29  00BE               	movwf	(_lastRun+1)^(0+256)
 15911  0A2A  0140               	movlb	0	; select bank0
 15912  0A2B  0820               	movf	?_CLOCK_getTime,w
 15913  0A2C  0142               	movlb	2	; select bank2
 15914  0A2D  00BD               	movwf	_lastRun^(0+256)
 15915                           
 15916                           ;beat.c: 69:     if (thresholdExceeded == 1) {
 15917  0A2E  0141               	movlb	1	; select bank1
 15918  0A2F  036A               	decf	_thresholdExceeded^(0+128),w
 15919  0A30  1D03               	btfss	3,2
 15920  0A31  2A38               	goto	l5892
 15921                           
 15922                           ;beat.c: 73:         thresholdCount++;
 15923  0A32  3001               	movlw	1
 15924  0A33  0142               	movlb	2	; select bank2
 15925  0A34  07BB               	addwf	_thresholdCount^(0+256),f
 15926  0A35  3000               	movlw	0
 15927  0A36  3DBC               	addwfc	(_thresholdCount+1)^(0+256),f
 15928                           
 15929                           ;beat.c: 74:     } else {
 15930  0A37  2A3F               	goto	l5896
 15931  0A38                     l5892:	
 15932                           
 15933                           ;beat.c: 76:         thresholdCount = 0;
 15934  0A38  0142               	movlb	2	; select bank2
 15935  0A39  01BB               	clrf	_thresholdCount^(0+256)
 15936  0A3A  01BC               	clrf	(_thresholdCount+1)^(0+256)
 15937                           
 15938                           ;beat.c: 77:         delay = 20;
 15939  0A3B  3014               	movlw	20
 15940  0A3C  00E5               	movwf	_delay^(0+256)
 15941  0A3D  3000               	movlw	0
 15942  0A3E  00E6               	movwf	(_delay^(0+256)+1)
 15943  0A3F                     l5896:	
 15944                           
 15945                           ;beat.c: 83:     if (thresholdExceeded == 1 && lastDetected == 0) {
 15946  0A3F  0141               	movlb	1	; select bank1
 15947  0A40  036A               	decf	_thresholdExceeded^(0+128),w
 15948  0A41  1D03               	btfss	3,2
 15949  0A42  2A86               	goto	l5914
 15950  0A43  0142               	movlb	2	; select bank2
 15951  0A44  084D               	movf	_lastDetected^(0+256),w
 15952  0A45  1D03               	btfss	3,2
 15953  0A46  2A86               	goto	l5914
 15954                           
 15955                           ;beat.c: 85:         detected = 1;
 15956  0A47  01CE               	clrf	_detected^(0+256)
 15957  0A48  0ACE               	incf	_detected^(0+256),f
 15958                           
 15959                           ;beat.c: 88:         delay = 100;
 15960  0A49  3064               	movlw	100
 15961  0A4A  00E5               	movwf	_delay^(0+256)
 15962  0A4B  3000               	movlw	0
 15963  0A4C  00E6               	movwf	(_delay^(0+256)+1)
 15964                           
 15965                           ;beat.c: 91:         time_t offset = CLOCK_getTime() - lastBeat;
 15966  0A4D  319E  26CB  318A   	fcall	_CLOCK_getTime
 15967  0A50  0142               	movlb	2	; select bank2
 15968  0A51  0841               	movf	_lastBeat^(0+256),w
 15969  0A52  0140               	movlb	0	; select bank0
 15970  0A53  0220               	subwf	?_CLOCK_getTime,w
 15971  0A54  00AA               	movwf	BEAT_task@offset
 15972  0A55  0142               	movlb	2	; select bank2
 15973  0A56  0842               	movf	(_lastBeat+1)^(0+256),w
 15974  0A57  0140               	movlb	0	; select bank0
 15975  0A58  3B21               	subwfb	?_CLOCK_getTime+1,w
 15976  0A59  00AB               	movwf	BEAT_task@offset+1
 15977                           
 15978                           ;beat.c: 93:         lastBeat = CLOCK_getTime();
 15979  0A5A  319E  26CB  318A   	fcall	_CLOCK_getTime
 15980  0A5D  0140               	movlb	0	; select bank0
 15981  0A5E  0821               	movf	?_CLOCK_getTime+1,w
 15982  0A5F  0142               	movlb	2	; select bank2
 15983  0A60  00C2               	movwf	(_lastBeat+1)^(0+256)
 15984  0A61  0140               	movlb	0	; select bank0
 15985  0A62  0820               	movf	?_CLOCK_getTime,w
 15986  0A63  0142               	movlb	2	; select bank2
 15987  0A64  00C1               	movwf	_lastBeat^(0+256)
 15988                           
 15989                           ;beat.c: 95:         if (offset < 150)
 15990  0A65  3000               	movlw	0
 15991  0A66  0140               	movlb	0	; select bank0
 15992  0A67  022B               	subwf	BEAT_task@offset+1,w
 15993  0A68  3096               	movlw	150
 15994  0A69  1903               	skipnz
 15995  0A6A  022A               	subwf	BEAT_task@offset,w
 15996  0A6B  1803               	skipnc
 15997  0A6C  2A73               	goto	l5912
 15998                           
 15999                           ;beat.c: 96:             bpm = 400;
 16000  0A6D  3090               	movlw	144
 16001  0A6E  0142               	movlb	2	; select bank2
 16002  0A6F  00BF               	movwf	_bpm^(0+256)
 16003  0A70  3001               	movlw	1
 16004  0A71  00C0               	movwf	(_bpm^(0+256)+1)
 16005  0A72  2A86               	goto	l5914
 16006  0A73                     l5912:	
 16007                           
 16008                           ;beat.c: 98:             bpm = 60 * 1000 / offset;
 16009  0A73  082B               	movf	BEAT_task@offset+1,w
 16010  0A74  00A1               	movwf	___lwdiv@divisor+1
 16011  0A75  082A               	movf	BEAT_task@offset,w
 16012  0A76  00A0               	movwf	___lwdiv@divisor
 16013  0A77  3060               	movlw	96
 16014  0A78  00A2               	movwf	___lwdiv@dividend
 16015  0A79  30EA               	movlw	234
 16016  0A7A  00A3               	movwf	___lwdiv@dividend+1
 16017  0A7B  3192  2288  318A   	fcall	___lwdiv
 16018  0A7E  0140               	movlb	0	; select bank0
 16019  0A7F  0821               	movf	?___lwdiv+1,w
 16020  0A80  0142               	movlb	2	; select bank2
 16021  0A81  00C0               	movwf	(_bpm+1)^(0+256)
 16022  0A82  0140               	movlb	0	; select bank0
 16023  0A83  0820               	movf	?___lwdiv,w
 16024  0A84  0142               	movlb	2	; select bank2
 16025  0A85  00BF               	movwf	_bpm^(0+256)
 16026  0A86                     l5914:	
 16027                           
 16028                           ;beat.c: 104:     lastDetected = thresholdExceeded;
 16029  0A86  0141               	movlb	1	; select bank1
 16030  0A87  086A               	movf	_thresholdExceeded^(0+128),w
 16031  0A88  0140               	movlb	0	; select bank0
 16032  0A89  00A8               	movwf	??_BEAT_task
 16033  0A8A  0828               	movf	??_BEAT_task,w
 16034  0A8B  0142               	movlb	2	; select bank2
 16035  0A8C  00CD               	movwf	_lastDetected^(0+256)
 16036                           
 16037                           ;beat.c: 105:     thresholdExceeded = 0;
 16038  0A8D  0141               	movlb	1	; select bank1
 16039  0A8E  01EA               	clrf	_thresholdExceeded^(0+128)
 16040                           
 16041                           ;beat.c: 107:     if (thresholdCount > 3) {
 16042  0A8F  0142               	movlb	2	; select bank2
 16043  0A90  083C               	movf	(_thresholdCount+1)^(0+256),w
 16044  0A91  3A80               	xorlw	128
 16045  0A92  0140               	movlb	0	; select bank0
 16046  0A93  00A8               	movwf	??_BEAT_task
 16047  0A94  3080               	movlw	128
 16048  0A95  0228               	subwf	??_BEAT_task,w
 16049  0A96  1D03               	skipz
 16050  0A97  2A9B               	goto	u6185
 16051  0A98  3004               	movlw	4
 16052  0A99  0142               	movlb	2	; select bank2
 16053  0A9A  023B               	subwf	_thresholdCount^(0+256),w
 16054  0A9B                     u6185:	
 16055  0A9B  1C03               	skipc
 16056  0A9C  2ABA               	goto	l5928
 16057                           
 16058                           ;beat.c: 108:         threshold += 1;
 16059  0A9D  3001               	movlw	1
 16060  0A9E  0142               	movlb	2	; select bank2
 16061  0A9F  07E7               	addwf	_threshold^(0+256),f
 16062  0AA0  3000               	movlw	0
 16063  0AA1  3DE8               	addwfc	(_threshold+1)^(0+256),f
 16064                           
 16065                           ;beat.c: 109:         ADCC_SetUpperThreshold(threshold);
 16066  0AA2  0868               	movf	(_threshold+1)^(0+256),w
 16067  0AA3  0140               	movlb	0	; select bank0
 16068  0AA4  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16069  0AA5  0142               	movlb	2	; select bank2
 16070  0AA6  0867               	movf	_threshold^(0+256),w
 16071  0AA7  0140               	movlb	0	; select bank0
 16072  0AA8  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16073  0AA9  319E  26B9  318A   	fcall	_ADCC_SetUpperThreshold
 16074                           
 16075                           ;beat.c: 110:         thresholdCount = 0;
 16076  0AAC  0142               	movlb	2	; select bank2
 16077  0AAD  01BB               	clrf	_thresholdCount^(0+256)
 16078  0AAE  01BC               	clrf	(_thresholdCount+1)^(0+256)
 16079                           
 16080                           ;beat.c: 113:         lastBeat = CLOCK_getTime();
 16081  0AAF  319E  26CB         	fcall	_CLOCK_getTime
 16082  0AB1  0140               	movlb	0	; select bank0
 16083  0AB2  0821               	movf	?_CLOCK_getTime+1,w
 16084  0AB3  0142               	movlb	2	; select bank2
 16085  0AB4  00C2               	movwf	(_lastBeat+1)^(0+256)
 16086  0AB5  0140               	movlb	0	; select bank0
 16087  0AB6  0820               	movf	?_CLOCK_getTime,w
 16088  0AB7  0142               	movlb	2	; select bank2
 16089  0AB8  00C1               	movwf	_lastBeat^(0+256)
 16090                           
 16091                           ;beat.c: 114:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 16092  0AB9  0008               	return
 16093  0ABA                     l5928:	
 16094  0ABA  319E  26CB  318A   	fcall	_CLOCK_getTime
 16095  0ABD  0142               	movlb	2	; select bank2
 16096  0ABE  0841               	movf	_lastBeat^(0+256),w
 16097  0ABF  0140               	movlb	0	; select bank0
 16098  0AC0  0220               	subwf	?_CLOCK_getTime,w
 16099  0AC1  00A8               	movwf	??_BEAT_task
 16100  0AC2  0142               	movlb	2	; select bank2
 16101  0AC3  0842               	movf	(_lastBeat+1)^(0+256),w
 16102  0AC4  0140               	movlb	0	; select bank0
 16103  0AC5  3B21               	subwfb	?_CLOCK_getTime+1,w
 16104  0AC6  00A9               	movwf	??_BEAT_task+1
 16105  0AC7  3003               	movlw	3
 16106  0AC8  0229               	subwf	??_BEAT_task+1,w
 16107  0AC9  30E9               	movlw	233
 16108  0ACA  1903               	skipnz
 16109  0ACB  0228               	subwf	??_BEAT_task,w
 16110  0ACC  1C03               	skipc
 16111  0ACD  0008               	return
 16112                           
 16113                           ;beat.c: 115:         threshold -= 1;
 16114  0ACE  3001               	movlw	1
 16115  0ACF  0142               	movlb	2	; select bank2
 16116  0AD0  02E7               	subwf	_threshold^(0+256),f
 16117  0AD1  3000               	movlw	0
 16118  0AD2  3BE8               	subwfb	(_threshold+1)^(0+256),f
 16119                           
 16120                           ;beat.c: 116:         ADCC_SetUpperThreshold(threshold);
 16121  0AD3  0868               	movf	(_threshold+1)^(0+256),w
 16122  0AD4  0140               	movlb	0	; select bank0
 16123  0AD5  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16124  0AD6  0142               	movlb	2	; select bank2
 16125  0AD7  0867               	movf	_threshold^(0+256),w
 16126  0AD8  0140               	movlb	0	; select bank0
 16127  0AD9  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16128  0ADA  319E  26B9         	fcall	_ADCC_SetUpperThreshold
 16129  0ADC  0008               	return
 16130  0ADD                     __end_of_BEAT_task:	
 16131                           
 16132                           	psect	text51
 16133  1288                     __ptext51:	
 16134 ;; *************** function ___lwdiv *****************
 16135 ;; Defined at:
 16136 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 16137 ;; Parameters:    Size  Location     Type
 16138 ;;  divisor         2    0[BANK0 ] unsigned int 
 16139 ;;  dividend        2    2[BANK0 ] unsigned int 
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;  quotient        2    6[BANK0 ] unsigned int 
 16142 ;;  counter         1    5[BANK0 ] unsigned char 
 16143 ;; Return value:  Size  Location     Type
 16144 ;;                  2    0[BANK0 ] unsigned int 
 16145 ;; Registers used:
 16146 ;;		wreg, status,2, status,0
 16147 ;; Tracked objects:
 16148 ;;		On entry : 0/0
 16149 ;;		On exit  : 0/0
 16150 ;;		Unchanged: 0/0
 16151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16153 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16154 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16155 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16156 ;;Total ram usage:        8 bytes
 16157 ;; Hardware stack levels used:    1
 16158 ;; Hardware stack levels required when called:    4
 16159 ;; This function calls:
 16160 ;;		Nothing
 16161 ;; This function is called by:
 16162 ;;		_TM1650_fastPrintNum
 16163 ;;		_BEAT_task
 16164 ;; This function uses a non-reentrant model
 16165 ;;
 16166                           
 16167                           
 16168                           ;psect for function ___lwdiv
 16169  1288                     ___lwdiv:	
 16170                           
 16171                           ;incstack = 0
 16172                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16173  1288  0140               	movlb	0	; select bank0
 16174  1289  01A6               	clrf	___lwdiv@quotient
 16175  128A  01A7               	clrf	___lwdiv@quotient+1
 16176  128B  0820               	movf	___lwdiv@divisor,w
 16177  128C  0421               	iorwf	___lwdiv@divisor+1,w
 16178  128D  1903               	btfsc	3,2
 16179  128E  2AB8               	goto	l5294
 16180  128F  01A5               	clrf	___lwdiv@counter
 16181  1290  0AA5               	incf	___lwdiv@counter,f
 16182  1291                     l5282:	
 16183  1291  1BA1               	btfsc	___lwdiv@divisor+1,7
 16184  1292  2A9D               	goto	l5284
 16185  1293  3001               	movlw	1
 16186  1294                     u5415:	
 16187  1294  35A0               	lslf	___lwdiv@divisor,f
 16188  1295  0DA1               	rlf	___lwdiv@divisor+1,f
 16189  1296  0B89               	decfsz	9,f
 16190  1297  2A94               	goto	u5415
 16191  1298  3001               	movlw	1
 16192  1299  00A4               	movwf	??___lwdiv
 16193  129A  0824               	movf	??___lwdiv,w
 16194  129B  07A5               	addwf	___lwdiv@counter,f
 16195  129C  2A91               	goto	l5282
 16196  129D                     l5284:	
 16197  129D  3001               	movlw	1
 16198  129E                     u5435:	
 16199  129E  35A6               	lslf	___lwdiv@quotient,f
 16200  129F  0DA7               	rlf	___lwdiv@quotient+1,f
 16201  12A0  0B89               	decfsz	9,f
 16202  12A1  2A9E               	goto	u5435
 16203  12A2  0821               	movf	___lwdiv@divisor+1,w
 16204  12A3  0223               	subwf	___lwdiv@dividend+1,w
 16205  12A4  1D03               	skipz
 16206  12A5  2AA8               	goto	u5445
 16207  12A6  0820               	movf	___lwdiv@divisor,w
 16208  12A7  0222               	subwf	___lwdiv@dividend,w
 16209  12A8                     u5445:	
 16210  12A8  1C03               	skipc
 16211  12A9  2AAF               	goto	l5290
 16212  12AA  0820               	movf	___lwdiv@divisor,w
 16213  12AB  02A2               	subwf	___lwdiv@dividend,f
 16214  12AC  0821               	movf	___lwdiv@divisor+1,w
 16215  12AD  3BA3               	subwfb	___lwdiv@dividend+1,f
 16216  12AE  1426               	bsf	___lwdiv@quotient,0
 16217  12AF                     l5290:	
 16218  12AF  3001               	movlw	1
 16219  12B0                     u5455:	
 16220  12B0  36A1               	lsrf	___lwdiv@divisor+1,f
 16221  12B1  0CA0               	rrf	___lwdiv@divisor,f
 16222  12B2  0B89               	decfsz	9,f
 16223  12B3  2AB0               	goto	u5455
 16224  12B4  3001               	movlw	1
 16225  12B5  02A5               	subwf	___lwdiv@counter,f
 16226  12B6  1D03               	btfss	3,2
 16227  12B7  2A9D               	goto	l5284
 16228  12B8                     l5294:	
 16229  12B8  0827               	movf	___lwdiv@quotient+1,w
 16230  12B9  00A1               	movwf	?___lwdiv+1
 16231  12BA  0826               	movf	___lwdiv@quotient,w
 16232  12BB  00A0               	movwf	?___lwdiv
 16233  12BC  0008               	return
 16234  12BD                     __end_of___lwdiv:	
 16235                           
 16236                           	psect	text52
 16237  1E8B                     __ptext52:	
 16238 ;; *************** function _TM1650_isEnabled *****************
 16239 ;; Defined at:
 16240 ;;		line 70 in file "tm1650.c"
 16241 ;; Parameters:    Size  Location     Type
 16242 ;;		None
 16243 ;; Auto vars:     Size  Location     Type
 16244 ;;		None
 16245 ;; Return value:  Size  Location     Type
 16246 ;;                  1    wreg      _Bool 
 16247 ;; Registers used:
 16248 ;;		wreg
 16249 ;; Tracked objects:
 16250 ;;		On entry : 0/0
 16251 ;;		On exit  : 0/0
 16252 ;;		Unchanged: 0/0
 16253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16258 ;;Total ram usage:        0 bytes
 16259 ;; Hardware stack levels used:    1
 16260 ;; Hardware stack levels required when called:    4
 16261 ;; This function calls:
 16262 ;;		Nothing
 16263 ;; This function is called by:
 16264 ;;		_BEAT_task
 16265 ;; This function uses a non-reentrant model
 16266 ;;
 16267                           
 16268                           
 16269                           ;psect for function _TM1650_isEnabled
 16270  1E8B                     _TM1650_isEnabled:	
 16271                           
 16272                           ;tm1650.c: 71:     return isOn;
 16273                           
 16274                           ;incstack = 0
 16275                           ; Regs used in _TM1650_isEnabled: [wreg]
 16276  1E8B  0142               	movlb	2	; select bank2
 16277  1E8C  0853               	movf	_isOn^(0+256),w
 16278  1E8D  0008               	return
 16279  1E8E                     __end_of_TM1650_isEnabled:	
 16280                           
 16281                           	psect	text53
 16282  1328                     __ptext53:	
 16283 ;; *************** function _DMX_task *****************
 16284 ;; Defined at:
 16285 ;;		line 38 in file "dmx.c"
 16286 ;; Parameters:    Size  Location     Type
 16287 ;;		None
 16288 ;; Auto vars:     Size  Location     Type
 16289 ;;  time            2    4[BANK0 ] unsigned short 
 16290 ;; Return value:  Size  Location     Type
 16291 ;;                  1    wreg      void 
 16292 ;; Registers used:
 16293 ;;		wreg, status,2, status,0, pclath, cstack
 16294 ;; Tracked objects:
 16295 ;;		On entry : 0/0
 16296 ;;		On exit  : 0/0
 16297 ;;		Unchanged: 0/0
 16298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16301 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16302 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16303 ;;Total ram usage:        4 bytes
 16304 ;; Hardware stack levels used:    1
 16305 ;; Hardware stack levels required when called:    5
 16306 ;; This function calls:
 16307 ;;		_CLOCK_getTime
 16308 ;; This function is called by:
 16309 ;;		_main
 16310 ;; This function uses a non-reentrant model
 16311 ;;
 16312                           
 16313                           
 16314                           ;psect for function _DMX_task
 16315  1328                     _DMX_task:	
 16316                           
 16317                           ;dmx.c: 39:     time_t time = CLOCK_getTime();
 16318                           
 16319                           ;incstack = 0
 16320                           ; Regs used in _DMX_task: [wreg+status,2+status,0+pclath+cstack]
 16321  1328  319E  26CB  3193   	fcall	_CLOCK_getTime
 16322  132B  0140               	movlb	0	; select bank0
 16323  132C  0821               	movf	?_CLOCK_getTime+1,w
 16324  132D  00A5               	movwf	DMX_task@time+1
 16325  132E  0820               	movf	?_CLOCK_getTime,w
 16326  132F  00A4               	movwf	DMX_task@time
 16327                           
 16328                           ;dmx.c: 40:     if (time - lastTime < 1000)
 16329  1330  0142               	movlb	2	; select bank2
 16330  1331  0837               	movf	dmx@lastTime^(0+256),w
 16331  1332  0140               	movlb	0	; select bank0
 16332  1333  0224               	subwf	DMX_task@time,w
 16333  1334  00A2               	movwf	??_DMX_task
 16334  1335  0142               	movlb	2	; select bank2
 16335  1336  0838               	movf	(dmx@lastTime+1)^(0+256),w
 16336  1337  0140               	movlb	0	; select bank0
 16337  1338  3B25               	subwfb	DMX_task@time+1,w
 16338  1339  00A3               	movwf	??_DMX_task+1
 16339  133A  3003               	movlw	3
 16340  133B  0223               	subwf	??_DMX_task+1,w
 16341  133C  30E8               	movlw	232
 16342  133D  1903               	skipnz
 16343  133E  0222               	subwf	??_DMX_task,w
 16344  133F  1C03               	btfss	3,0
 16345  1340  0008               	return
 16346                           
 16347                           ;dmx.c: 42:     lastTime = time;
 16348  1341  0825               	movf	DMX_task@time+1,w
 16349  1342  0142               	movlb	2	; select bank2
 16350  1343  00B8               	movwf	(dmx@lastTime+1)^(0+256)
 16351  1344  0140               	movlb	0	; select bank0
 16352  1345  0824               	movf	DMX_task@time,w
 16353  1346  0142               	movlb	2	; select bank2
 16354  1347  00B7               	movwf	dmx@lastTime^(0+256)
 16355                           
 16356                           ;dmx.c: 44:     if(offCheck && !toggleCheck) {
 16357  1348  084C               	movf	_offCheck^(0+256),w
 16358  1349  1903               	btfsc	3,2
 16359  134A  2B52               	goto	l6102
 16360  134B  084A               	movf	_toggleCheck^(0+256),w
 16361  134C  1D03               	btfss	3,2
 16362  134D  2B52               	goto	l6102
 16363                           
 16364                           ;dmx.c: 46:         toggleCheck = 1;
 16365  134E  01CA               	clrf	_toggleCheck^(0+256)
 16366  134F  0ACA               	incf	_toggleCheck^(0+256),f
 16367                           
 16368                           ;dmx.c: 47:         offCheck = 0;
 16369  1350  01CC               	clrf	_offCheck^(0+256)
 16370  1351  0008               	return
 16371  1352                     l6102:	
 16372                           
 16373                           ;dmx.c: 51:     if (offCheck && toggleCheck) {
 16374  1352  084C               	movf	_offCheck^(0+256),w
 16375  1353  1903               	btfsc	3,2
 16376  1354  2B5D               	goto	l6110
 16377  1355  084A               	movf	_toggleCheck^(0+256),w
 16378  1356  1903               	btfsc	3,2
 16379  1357  2B5D               	goto	l6110
 16380                           
 16381                           ;dmx.c: 52:         dmxOn = 1;
 16382  1358  01CB               	clrf	_dmxOn^(0+256)
 16383  1359  0ACB               	incf	_dmxOn^(0+256),f
 16384                           
 16385                           ;dmx.c: 53:         toggleCheck = 0;
 16386  135A  01CA               	clrf	_toggleCheck^(0+256)
 16387                           
 16388                           ;dmx.c: 54:         offCheck = 0;
 16389  135B  01CC               	clrf	_offCheck^(0+256)
 16390                           
 16391                           ;dmx.c: 55:     } else {
 16392  135C  0008               	return
 16393  135D                     l6110:	
 16394                           
 16395                           ;dmx.c: 56:         dmxOn = 0;
 16396  135D  01CB               	clrf	_dmxOn^(0+256)
 16397  135E  0008               	return
 16398  135F                     __end_of_DMX_task:	
 16399                           
 16400                           	psect	text54
 16401  1EA8                     __ptext54:	
 16402 ;; *************** function _CLOCK_init *****************
 16403 ;; Defined at:
 16404 ;;		line 9 in file "clock.c"
 16405 ;; Parameters:    Size  Location     Type
 16406 ;;		None
 16407 ;; Auto vars:     Size  Location     Type
 16408 ;;		None
 16409 ;; Return value:  Size  Location     Type
 16410 ;;                  1    wreg      void 
 16411 ;; Registers used:
 16412 ;;		wreg, status,2, status,0, pclath, cstack
 16413 ;; Tracked objects:
 16414 ;;		On entry : 0/0
 16415 ;;		On exit  : 0/0
 16416 ;;		Unchanged: 0/0
 16417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16422 ;;Total ram usage:        0 bytes
 16423 ;; Hardware stack levels used:    1
 16424 ;; Hardware stack levels required when called:    5
 16425 ;; This function calls:
 16426 ;;		_TMR0_SetInterruptHandler
 16427 ;; This function is called by:
 16428 ;;		_main
 16429 ;; This function uses a non-reentrant model
 16430 ;;
 16431                           
 16432                           
 16433                           ;psect for function _CLOCK_init
 16434  1EA8                     _CLOCK_init:	
 16435                           
 16436                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 16437                           
 16438                           ;incstack = 0
 16439                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 16440  1EA8  30A2               	movlw	low _CLOCK_timerCallback
 16441  1EA9  0140               	movlb	0	; select bank0
 16442  1EAA  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16443  1EAB  301E               	movlw	high _CLOCK_timerCallback
 16444  1EAC  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16445  1EAD  319E  26D4         	fcall	_TMR0_SetInterruptHandler
 16446  1EAF  0008               	return
 16447  1EB0                     __end_of_CLOCK_init:	
 16448                           
 16449                           	psect	text55
 16450  1ED4                     __ptext55:	
 16451 ;; *************** function _TMR0_SetInterruptHandler *****************
 16452 ;; Defined at:
 16453 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16454 ;; Parameters:    Size  Location     Type
 16455 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16456 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 16457 ;; Auto vars:     Size  Location     Type
 16458 ;;		None
 16459 ;; Return value:  Size  Location     Type
 16460 ;;                  1    wreg      void 
 16461 ;; Registers used:
 16462 ;;		wreg
 16463 ;; Tracked objects:
 16464 ;;		On entry : 0/0
 16465 ;;		On exit  : 0/0
 16466 ;;		Unchanged: 0/0
 16467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16468 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16471 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16472 ;;Total ram usage:        2 bytes
 16473 ;; Hardware stack levels used:    1
 16474 ;; Hardware stack levels required when called:    4
 16475 ;; This function calls:
 16476 ;;		Nothing
 16477 ;; This function is called by:
 16478 ;;		_TMR0_Initialize
 16479 ;;		_CLOCK_init
 16480 ;; This function uses a non-reentrant model
 16481 ;;
 16482                           
 16483                           
 16484                           ;psect for function _TMR0_SetInterruptHandler
 16485  1ED4                     _TMR0_SetInterruptHandler:	
 16486                           
 16487                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16488                           
 16489                           ;incstack = 0
 16490                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16491  1ED4  0140               	movlb	0	; select bank0
 16492  1ED5  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16493  1ED6  0142               	movlb	2	; select bank2
 16494  1ED7  00EE               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 16495  1ED8  0140               	movlb	0	; select bank0
 16496  1ED9  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16497  1EDA  0142               	movlb	2	; select bank2
 16498  1EDB  00ED               	movwf	_TMR0_InterruptHandler^(0+256)
 16499  1EDC  0008               	return
 16500  1EDD                     __end_of_TMR0_SetInterruptHandler:	
 16501                           
 16502                           	psect	text56
 16503  0932                     __ptext56:	
 16504 ;; *************** function _BUTTONS_task *****************
 16505 ;; Defined at:
 16506 ;;		line 37 in file "buttons.c"
 16507 ;; Parameters:    Size  Location     Type
 16508 ;;		None
 16509 ;; Auto vars:     Size  Location     Type
 16510 ;;  btn             1    8[BANK0 ] PTR struct .
 16511 ;;		 -> buttons(32), 
 16512 ;;  i               1    5[BANK0 ] unsigned char 
 16513 ;;  time            2    6[BANK0 ] unsigned short 
 16514 ;; Return value:  Size  Location     Type
 16515 ;;                  1    wreg      void 
 16516 ;; Registers used:
 16517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16518 ;; Tracked objects:
 16519 ;;		On entry : 0/0
 16520 ;;		On exit  : 0/0
 16521 ;;		Unchanged: 0/0
 16522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16524 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16525 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16526 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16527 ;;Total ram usage:        7 bytes
 16528 ;; Hardware stack levels used:    1
 16529 ;; Hardware stack levels required when called:    5
 16530 ;; This function calls:
 16531 ;;		_CLOCK_getTime
 16532 ;; This function is called by:
 16533 ;;		_main
 16534 ;; This function uses a non-reentrant model
 16535 ;;
 16536                           
 16537                           
 16538                           ;psect for function _BUTTONS_task
 16539  0932                     _BUTTONS_task:	
 16540                           
 16541                           ;buttons.c: 38:     time_t time = CLOCK_getTime();
 16542                           
 16543                           ;incstack = 0
 16544                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16545  0932  319E  26CB  3189   	fcall	_CLOCK_getTime
 16546  0935  0140               	movlb	0	; select bank0
 16547  0936  0821               	movf	?_CLOCK_getTime+1,w
 16548  0937  00A7               	movwf	BUTTONS_task@time+1
 16549  0938  0820               	movf	?_CLOCK_getTime,w
 16550  0939  00A6               	movwf	BUTTONS_task@time
 16551                           
 16552                           ;buttons.c: 41:     if (time - lastTime < 50)
 16553  093A  0142               	movlb	2	; select bank2
 16554  093B  0843               	movf	_lastTime^(0+256),w
 16555  093C  0140               	movlb	0	; select bank0
 16556  093D  0226               	subwf	BUTTONS_task@time,w
 16557  093E  00A2               	movwf	??_BUTTONS_task
 16558  093F  0142               	movlb	2	; select bank2
 16559  0940  0844               	movf	(_lastTime+1)^(0+256),w
 16560  0941  0140               	movlb	0	; select bank0
 16561  0942  3B27               	subwfb	BUTTONS_task@time+1,w
 16562  0943  00A3               	movwf	??_BUTTONS_task+1
 16563  0944  3000               	movlw	0
 16564  0945  0223               	subwf	??_BUTTONS_task+1,w
 16565  0946  3032               	movlw	50
 16566  0947  1903               	skipnz
 16567  0948  0222               	subwf	??_BUTTONS_task,w
 16568  0949  1C03               	btfss	3,0
 16569  094A  0008               	return
 16570                           
 16571                           ;buttons.c: 44:     lastTime = time;
 16572  094B  0827               	movf	BUTTONS_task@time+1,w
 16573  094C  0142               	movlb	2	; select bank2
 16574  094D  00C4               	movwf	(_lastTime+1)^(0+256)
 16575  094E  0140               	movlb	0	; select bank0
 16576  094F  0826               	movf	BUTTONS_task@time,w
 16577  0950  0142               	movlb	2	; select bank2
 16578  0951  00C3               	movwf	_lastTime^(0+256)
 16579                           
 16580                           ;buttons.c: 47:     for (uint8_t i = 0; i < 4; i++) {
 16581  0952  0140               	movlb	0	; select bank0
 16582  0953  01A5               	clrf	BUTTONS_task@i
 16583  0954                     l6126:	
 16584                           
 16585                           ;buttons.c: 48:         button_t* btn = buttons + i;
 16586  0954  0825               	movf	BUTTONS_task@i,w
 16587  0955  00A2               	movwf	??_BUTTONS_task
 16588  0956  3002               	movlw	2
 16589  0957                     u6425:	
 16590  0957  35A2               	lslf	??_BUTTONS_task,f
 16591  0958  3EFF               	addlw	-1
 16592  0959  1D03               	skipz
 16593  095A  2957               	goto	u6425
 16594  095B  3522               	lslf	??_BUTTONS_task,w
 16595  095C  3E20               	addlw	(low (_buttons| (0+512)))& (0+255)
 16596  095D  00A3               	movwf	??_BUTTONS_task+1
 16597  095E  0823               	movf	??_BUTTONS_task+1,w
 16598  095F  00A8               	movwf	BUTTONS_task@btn
 16599                           
 16600                           ;buttons.c: 51:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 16601  0960  0828               	movf	BUTTONS_task@btn,w
 16602  0961  0086               	movwf	6
 16603  0962  3002               	movlw	2	; select bank4/5
 16604  0963  0087               	movwf	7
 16605  0964  3F40               	moviw [0]fsr1
 16606  0965  00A2               	movwf	??_BUTTONS_task
 16607  0966  3F41               	moviw [1]fsr1
 16608  0967  00A3               	movwf	??_BUTTONS_task+1
 16609  0968  0822               	movf	??_BUTTONS_task,w
 16610  0969  0086               	movwf	6
 16611  096A  0823               	movf	??_BUTTONS_task+1,w
 16612  096B  0087               	movwf	7
 16613  096C  3001               	movlw	1
 16614  096D  00A4               	movwf	??_BUTTONS_task+2
 16615  096E  0828               	movf	BUTTONS_task@btn,w
 16616  096F  3E02               	addlw	2
 16617  0970  0084               	movwf	4
 16618  0971  3002               	movlw	2	; select bank4/5
 16619  0972  0085               	movwf	5
 16620  0973  0A00               	incf	0,w
 16621  0974  2976               	goto	u6434
 16622  0975                     u6435:	
 16623  0975  35A4               	lslf	??_BUTTONS_task+2,f
 16624  0976                     u6434:	
 16625  0976  0B89               	decfsz	9,f
 16626  0977  2975               	goto	u6435
 16627  0978  0824               	movf	??_BUTTONS_task+2,w
 16628  0979  0501               	andwf	1,w
 16629  097A  1D03               	btfss	3,2
 16630  097B  2984               	goto	l6132
 16631                           
 16632                           ;buttons.c: 52:             btn->state = STATE_PRESSED;
 16633  097C  0828               	movf	BUTTONS_task@btn,w
 16634  097D  3E03               	addlw	3
 16635  097E  0086               	movwf	6
 16636  097F  3002               	movlw	2	; select bank4/5
 16637  0980  0087               	movwf	7
 16638  0981  0181               	clrf	1
 16639  0982  0A81               	incf	1,f
 16640                           
 16641                           ;buttons.c: 53:         } else {
 16642  0983  298A               	goto	l802
 16643  0984                     l6132:	
 16644                           
 16645                           ;buttons.c: 54:             btn->state = STATE_UNPRESSED;
 16646  0984  0828               	movf	BUTTONS_task@btn,w
 16647  0985  3E03               	addlw	3
 16648  0986  0086               	movwf	6
 16649  0987  3002               	movlw	2	; select bank4/5
 16650  0988  0087               	movwf	7
 16651  0989  0181               	clrf	1
 16652  098A                     l802:	
 16653                           ;buttons.c: 55:         }
 16654                           
 16655                           
 16656                           ;buttons.c: 57:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
 16657  098A  0828               	movf	BUTTONS_task@btn,w
 16658  098B  3E03               	addlw	3
 16659  098C  0086               	movwf	6
 16660  098D  3002               	movlw	2	; select bank4/5
 16661  098E  0087               	movwf	7
 16662  098F  0301               	decf	1,w
 16663  0990  1D03               	btfss	3,2
 16664  0991  29AB               	goto	l6138
 16665  0992  0828               	movf	BUTTONS_task@btn,w
 16666  0993  3E04               	addlw	4
 16667  0994  0086               	movwf	6
 16668  0995  3002               	movlw	2	; select bank4/5
 16669  0996  0087               	movwf	7
 16670  0997  0801               	movf	1,w
 16671  0998  1D03               	btfss	3,2
 16672  0999  29AB               	goto	l6138
 16673                           
 16674                           ;buttons.c: 59:             btn->event = EVENT_PRESSED;
 16675  099A  0828               	movf	BUTTONS_task@btn,w
 16676  099B  3E05               	addlw	5
 16677  099C  0086               	movwf	6
 16678  099D  3002               	movlw	2	; select bank4/5
 16679  099E  0087               	movwf	7
 16680  099F  0181               	clrf	1
 16681  09A0  0A81               	incf	1,f
 16682                           
 16683                           ;buttons.c: 60:             btn->pressTime = time;
 16684  09A1  0828               	movf	BUTTONS_task@btn,w
 16685  09A2  3E06               	addlw	6
 16686  09A3  0086               	movwf	6
 16687  09A4  3002               	movlw	2	; select bank4/5
 16688  09A5  0087               	movwf	7
 16689  09A6  0826               	movf	BUTTONS_task@time,w
 16690  09A7  3FC0               	movwi [0]fsr1
 16691  09A8  0827               	movf	BUTTONS_task@time+1,w
 16692  09A9  3FC1               	movwi [1]fsr1
 16693                           
 16694                           ;buttons.c: 61:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 16695  09AA  29ED               	goto	l804
 16696  09AB                     l6138:	
 16697  09AB  0828               	movf	BUTTONS_task@btn,w
 16698  09AC  3E03               	addlw	3
 16699  09AD  0086               	movwf	6
 16700  09AE  3002               	movlw	2	; select bank4/5
 16701  09AF  0087               	movwf	7
 16702  09B0  0301               	decf	1,w
 16703  09B1  1D03               	btfss	3,2
 16704  09B2  29D7               	goto	l6146
 16705  09B3  0828               	movf	BUTTONS_task@btn,w
 16706  09B4  3E04               	addlw	4
 16707  09B5  0086               	movwf	6
 16708  09B6  3002               	movlw	2	; select bank4/5
 16709  09B7  0087               	movwf	7
 16710  09B8  0301               	decf	1,w
 16711  09B9  1D03               	btfss	3,2
 16712  09BA  29D7               	goto	l6146
 16713                           
 16714                           ;buttons.c: 63:             if(time - btn->pressTime > 500) {
 16715  09BB  0828               	movf	BUTTONS_task@btn,w
 16716  09BC  3E06               	addlw	6
 16717  09BD  0086               	movwf	6
 16718  09BE  3002               	movlw	2	; select bank4/5
 16719  09BF  0087               	movwf	7
 16720  09C0  3F40               	moviw [0]fsr1
 16721  09C1  0226               	subwf	BUTTONS_task@time,w
 16722  09C2  00A2               	movwf	??_BUTTONS_task
 16723  09C3  3F41               	moviw [1]fsr1
 16724  09C4  3B27               	subwfb	BUTTONS_task@time+1,w
 16725  09C5  00A3               	movwf	??_BUTTONS_task+1
 16726  09C6  3001               	movlw	1
 16727  09C7  0223               	subwf	??_BUTTONS_task+1,w
 16728  09C8  30F5               	movlw	245
 16729  09C9  1903               	skipnz
 16730  09CA  0222               	subwf	??_BUTTONS_task,w
 16731  09CB  1C03               	skipc
 16732  09CC  29ED               	goto	l804
 16733                           
 16734                           ;buttons.c: 64:                 btn->event = EVENT_HELD;
 16735  09CD  3002               	movlw	2
 16736  09CE  00A2               	movwf	??_BUTTONS_task
 16737  09CF  0828               	movf	BUTTONS_task@btn,w
 16738  09D0  3E05               	addlw	5
 16739  09D1  0086               	movwf	6
 16740  09D2  3002               	movlw	2	; select bank4/5
 16741  09D3  0087               	movwf	7
 16742  09D4  0822               	movf	??_BUTTONS_task,w
 16743  09D5  0081               	movwf	1
 16744  09D6  29ED               	goto	l804
 16745  09D7                     l6146:	
 16746  09D7  0828               	movf	BUTTONS_task@btn,w
 16747  09D8  3E03               	addlw	3
 16748  09D9  0086               	movwf	6
 16749  09DA  3002               	movlw	2	; select bank4/5
 16750  09DB  0087               	movwf	7
 16751  09DC  0801               	movf	1,w
 16752  09DD  1D03               	btfss	3,2
 16753  09DE  29ED               	goto	l804
 16754  09DF  0828               	movf	BUTTONS_task@btn,w
 16755  09E0  3E04               	addlw	4
 16756  09E1  0086               	movwf	6
 16757  09E2  3002               	movlw	2	; select bank4/5
 16758  09E3  0087               	movwf	7
 16759  09E4  0301               	decf	1,w
 16760  09E5  1D03               	btfss	3,2
 16761  09E6  29ED               	goto	l804
 16762                           
 16763                           ;buttons.c: 67:             btn->event = EVENT_IDLE;
 16764  09E7  0828               	movf	BUTTONS_task@btn,w
 16765  09E8  3E05               	addlw	5
 16766  09E9  0086               	movwf	6
 16767  09EA  3002               	movlw	2	; select bank4/5
 16768  09EB  0087               	movwf	7
 16769  09EC  0181               	clrf	1
 16770  09ED                     l804:	
 16771                           
 16772                           ;buttons.c: 70:         btn->lastState = btn->state;
 16773  09ED  0828               	movf	BUTTONS_task@btn,w
 16774  09EE  3E03               	addlw	3
 16775  09EF  0086               	movwf	6
 16776  09F0  3002               	movlw	2	; select bank4/5
 16777  09F1  0087               	movwf	7
 16778  09F2  0801               	movf	1,w
 16779  09F3  00A2               	movwf	??_BUTTONS_task
 16780  09F4  0828               	movf	BUTTONS_task@btn,w
 16781  09F5  3E04               	addlw	4
 16782  09F6  0086               	movwf	6
 16783  09F7  3002               	movlw	2	; select bank4/5
 16784  09F8  0087               	movwf	7
 16785  09F9  0822               	movf	??_BUTTONS_task,w
 16786  09FA  0081               	movwf	1
 16787                           
 16788                           ;buttons.c: 71:     }
 16789  09FB  3001               	movlw	1
 16790  09FC  00A2               	movwf	??_BUTTONS_task
 16791  09FD  0822               	movf	??_BUTTONS_task,w
 16792  09FE  07A5               	addwf	BUTTONS_task@i,f
 16793  09FF  3004               	movlw	4
 16794  0A00  0225               	subwf	BUTTONS_task@i,w
 16795  0A01  1803               	btfsc	3,0
 16796  0A02  0008               	return
 16797  0A03  2954               	goto	l6126
 16798  0A04                     __end_of_BUTTONS_task:	
 16799                           
 16800                           	psect	text57
 16801  1ECB                     __ptext57:	
 16802 ;; *************** function _CLOCK_getTime *****************
 16803 ;; Defined at:
 16804 ;;		line 17 in file "clock.c"
 16805 ;; Parameters:    Size  Location     Type
 16806 ;;		None
 16807 ;; Auto vars:     Size  Location     Type
 16808 ;;		None
 16809 ;; Return value:  Size  Location     Type
 16810 ;;                  2    0[BANK0 ] unsigned short 
 16811 ;; Registers used:
 16812 ;;		wreg
 16813 ;; Tracked objects:
 16814 ;;		On entry : 0/0
 16815 ;;		On exit  : 0/0
 16816 ;;		Unchanged: 0/0
 16817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16818 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16822 ;;Total ram usage:        2 bytes
 16823 ;; Hardware stack levels used:    1
 16824 ;; Hardware stack levels required when called:    4
 16825 ;; This function calls:
 16826 ;;		Nothing
 16827 ;; This function is called by:
 16828 ;;		_BUTTONS_task
 16829 ;;		_BEAT_task
 16830 ;;		_DMX_task
 16831 ;;		_fadeColor
 16832 ;;		_cycleColors
 16833 ;;		_numControl_Set
 16834 ;; This function uses a non-reentrant model
 16835 ;;
 16836                           
 16837                           
 16838                           ;psect for function _CLOCK_getTime
 16839  1ECB                     _CLOCK_getTime:	
 16840                           
 16841                           ;clock.c: 18:     return currentTime;
 16842                           
 16843                           ;incstack = 0
 16844                           ; Regs used in _CLOCK_getTime: [wreg]
 16845  1ECB  0142               	movlb	2	; select bank2
 16846  1ECC  0848               	movf	(_currentTime+1)^(0+256),w
 16847  1ECD  0140               	movlb	0	; select bank0
 16848  1ECE  00A1               	movwf	?_CLOCK_getTime+1
 16849  1ECF  0142               	movlb	2	; select bank2
 16850  1ED0  0847               	movf	_currentTime^(0+256),w
 16851  1ED1  0140               	movlb	0	; select bank0
 16852  1ED2  00A0               	movwf	?_CLOCK_getTime
 16853  1ED3  0008               	return
 16854  1ED4                     __end_of_CLOCK_getTime:	
 16855                           
 16856                           	psect	text58
 16857  1473                     __ptext58:	
 16858 ;; *************** function _BUTTONS_init *****************
 16859 ;; Defined at:
 16860 ;;		line 21 in file "buttons.c"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;		None
 16863 ;; Auto vars:     Size  Location     Type
 16864 ;;		None
 16865 ;; Return value:  Size  Location     Type
 16866 ;;                  1    wreg      void 
 16867 ;; Registers used:
 16868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16869 ;; Tracked objects:
 16870 ;;		On entry : 0/0
 16871 ;;		On exit  : 0/0
 16872 ;;		Unchanged: 0/0
 16873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16877 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16878 ;;Total ram usage:        1 bytes
 16879 ;; Hardware stack levels used:    1
 16880 ;; Hardware stack levels required when called:    5
 16881 ;; This function calls:
 16882 ;;		_init
 16883 ;; This function is called by:
 16884 ;;		_main
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           
 16889                           ;psect for function _BUTTONS_init
 16890  1473                     _BUTTONS_init:	
 16891                           
 16892                           ;buttons.c: 22:     menu = &buttons[0];
 16893                           
 16894                           ;incstack = 0
 16895                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16896  1473  3020               	movlw	(low (_buttons| (0+512)))& (0+255)
 16897  1474  0140               	movlb	0	; select bank0
 16898  1475  00A5               	movwf	??_BUTTONS_init
 16899  1476  0825               	movf	??_BUTTONS_init,w
 16900  1477  0142               	movlb	2	; select bank2
 16901  1478  00CF               	movwf	_menu^(0+256)
 16902                           
 16903                           ;buttons.c: 23:     up = &buttons[1];
 16904  1479  3028               	movlw	(low ((_buttons| (0+512)+8)))& (0+255)
 16905  147A  0140               	movlb	0	; select bank0
 16906  147B  00A5               	movwf	??_BUTTONS_init
 16907  147C  0825               	movf	??_BUTTONS_init,w
 16908  147D  0142               	movlb	2	; select bank2
 16909  147E  00D2               	movwf	_up^(0+256)
 16910                           
 16911                           ;buttons.c: 24:     down = &buttons[2];
 16912  147F  3030               	movlw	(low ((_buttons| (0+512)+16)))& (0+255)
 16913  1480  0140               	movlb	0	; select bank0
 16914  1481  00A5               	movwf	??_BUTTONS_init
 16915  1482  0825               	movf	??_BUTTONS_init,w
 16916  1483  0142               	movlb	2	; select bank2
 16917  1484  00D1               	movwf	_down^(0+256)
 16918                           
 16919                           ;buttons.c: 25:     enter = &buttons[3];
 16920  1485  3038               	movlw	(low ((_buttons| (0+512)+24)))& (0+255)
 16921  1486  0140               	movlb	0	; select bank0
 16922  1487  00A5               	movwf	??_BUTTONS_init
 16923  1488  0825               	movf	??_BUTTONS_init,w
 16924  1489  0142               	movlb	2	; select bank2
 16925  148A  00D0               	movwf	_enter^(0+256)
 16926                           
 16927                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 16928  148B  300E               	movlw	14
 16929  148C  0140               	movlb	0	; select bank0
 16930  148D  00A0               	movwf	init@port
 16931  148E  3000               	movlw	0
 16932  148F  00A1               	movwf	init@port+1
 16933  1490  3002               	movlw	2
 16934  1491  00A5               	movwf	??_BUTTONS_init
 16935  1492  0825               	movf	??_BUTTONS_init,w
 16936  1493  00A2               	movwf	init@pin
 16937  1494  0142               	movlb	2	; select bank2
 16938  1495  084F               	movf	_menu^(0+256),w
 16939  1496  3190  20BB  3194   	fcall	_init
 16940                           
 16941                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 16942  1499  300C               	movlw	12
 16943  149A  0140               	movlb	0	; select bank0
 16944  149B  00A0               	movwf	init@port
 16945  149C  3000               	movlw	0
 16946  149D  00A1               	movwf	init@port+1
 16947  149E  3002               	movlw	2
 16948  149F  00A5               	movwf	??_BUTTONS_init
 16949  14A0  0825               	movf	??_BUTTONS_init,w
 16950  14A1  00A2               	movwf	init@pin
 16951  14A2  0142               	movlb	2	; select bank2
 16952  14A3  0850               	movf	_enter^(0+256),w
 16953  14A4  3190  20BB  3194   	fcall	_init
 16954                           
 16955                           ;buttons.c: 29:     init(down, &PORTC, 0);
 16956  14A7  300E               	movlw	14
 16957  14A8  0140               	movlb	0	; select bank0
 16958  14A9  00A0               	movwf	init@port
 16959  14AA  3000               	movlw	0
 16960  14AB  00A1               	movwf	init@port+1
 16961  14AC  01A2               	clrf	init@pin
 16962  14AD  0142               	movlb	2	; select bank2
 16963  14AE  0851               	movf	_down^(0+256),w
 16964  14AF  3190  20BB  3194   	fcall	_init
 16965                           
 16966                           ;buttons.c: 30:     init(up, &PORTC, 1);
 16967  14B2  300E               	movlw	14
 16968  14B3  0140               	movlb	0	; select bank0
 16969  14B4  00A0               	movwf	init@port
 16970  14B5  3000               	movlw	0
 16971  14B6  00A1               	movwf	init@port+1
 16972  14B7  01A2               	clrf	init@pin
 16973  14B8  0AA2               	incf	init@pin,f
 16974  14B9  0142               	movlb	2	; select bank2
 16975  14BA  0852               	movf	_up^(0+256),w
 16976  14BB  3190  20BB         	fcall	_init
 16977  14BD  0008               	return
 16978  14BE                     __end_of_BUTTONS_init:	
 16979                           
 16980                           	psect	text59
 16981  10BB                     __ptext59:	
 16982 ;; *************** function _init *****************
 16983 ;; Defined at:
 16984 ;;		line 14 in file "buttons.c"
 16985 ;; Parameters:    Size  Location     Type
 16986 ;;  btn             1    wreg     PTR struct .
 16987 ;;		 -> buttons(32), NULL(0), 
 16988 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 16989 ;;		 -> PORTA(1), PORTC(1), 
 16990 ;;  pin             1    2[BANK0 ] unsigned char 
 16991 ;; Auto vars:     Size  Location     Type
 16992 ;;  btn             1    4[BANK0 ] PTR struct .
 16993 ;;		 -> buttons(32), NULL(0), 
 16994 ;; Return value:  Size  Location     Type
 16995 ;;                  1    wreg      void 
 16996 ;; Registers used:
 16997 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16998 ;; Tracked objects:
 16999 ;;		On entry : 0/0
 17000 ;;		On exit  : 0/0
 17001 ;;		Unchanged: 0/0
 17002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17003 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17004 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17006 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17007 ;;Total ram usage:        5 bytes
 17008 ;; Hardware stack levels used:    1
 17009 ;; Hardware stack levels required when called:    4
 17010 ;; This function calls:
 17011 ;;		Nothing
 17012 ;; This function is called by:
 17013 ;;		_BUTTONS_init
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           
 17017                           
 17018                           ;psect for function _init
 17019  10BB                     _init:	
 17020                           
 17021                           ;incstack = 0
 17022                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 17023                           ;init@btn stored from wreg
 17024  10BB  0140               	movlb	0	; select bank0
 17025  10BC  00A4               	movwf	init@btn
 17026                           
 17027                           ;buttons.c: 15:     btn->port = port;
 17028  10BD  0824               	movf	init@btn,w
 17029  10BE  0086               	movwf	6
 17030  10BF  3002               	movlw	2	; select bank4/5
 17031  10C0  0087               	movwf	7
 17032  10C1  0820               	movf	init@port,w
 17033  10C2  3FC0               	movwi [0]fsr1
 17034  10C3  0821               	movf	init@port+1,w
 17035  10C4  3FC1               	movwi [1]fsr1
 17036                           
 17037                           ;buttons.c: 16:     btn->pin = pin;
 17038  10C5  0822               	movf	init@pin,w
 17039  10C6  00A3               	movwf	??_init
 17040  10C7  0824               	movf	init@btn,w
 17041  10C8  3E02               	addlw	2
 17042  10C9  0086               	movwf	6
 17043  10CA  3002               	movlw	2	; select bank4/5
 17044  10CB  0087               	movwf	7
 17045  10CC  0823               	movf	??_init,w
 17046  10CD  0081               	movwf	1
 17047                           
 17048                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 17049  10CE  0824               	movf	init@btn,w
 17050  10CF  3E03               	addlw	3
 17051  10D0  0086               	movwf	6
 17052  10D1  3002               	movlw	2	; select bank4/5
 17053  10D2  0087               	movwf	7
 17054  10D3  0181               	clrf	1
 17055                           
 17056                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 17057  10D4  0824               	movf	init@btn,w
 17058  10D5  3E05               	addlw	5
 17059  10D6  0086               	movwf	6
 17060  10D7  3002               	movlw	2	; select bank4/5
 17061  10D8  0087               	movwf	7
 17062  10D9  0181               	clrf	1
 17063  10DA  0008               	return
 17064  10DB                     __end_of_init:	
 17065                           
 17066                           	psect	text60
 17067  1FB9                     __ptext60:	
 17068 ;; *************** function _BEAT_init *****************
 17069 ;; Defined at:
 17070 ;;		line 31 in file "beat.c"
 17071 ;; Parameters:    Size  Location     Type
 17072 ;;		None
 17073 ;; Auto vars:     Size  Location     Type
 17074 ;;		None
 17075 ;; Return value:  Size  Location     Type
 17076 ;;                  1    wreg      void 
 17077 ;; Registers used:
 17078 ;;		wreg, status,2, status,0, pclath, cstack
 17079 ;; Tracked objects:
 17080 ;;		On entry : 0/0
 17081 ;;		On exit  : 0/0
 17082 ;;		Unchanged: 0/0
 17083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17088 ;;Total ram usage:        0 bytes
 17089 ;; Hardware stack levels used:    1
 17090 ;; Hardware stack levels required when called:    5
 17091 ;; This function calls:
 17092 ;;		_ADCC_SetADTIInterruptHandler
 17093 ;;		_ADCC_SetUpperThreshold
 17094 ;;		_ADCC_StartConversion
 17095 ;; This function is called by:
 17096 ;;		_main
 17097 ;; This function uses a non-reentrant model
 17098 ;;
 17099                           
 17100                           
 17101                           ;psect for function _BEAT_init
 17102  1FB9                     _BEAT_init:	
 17103                           
 17104                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 17105                           
 17106                           ;incstack = 0
 17107                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 17108  1FB9  0142               	movlb	2	; select bank2
 17109  1FBA  0868               	movf	(_threshold+1)^(0+256),w
 17110  1FBB  0140               	movlb	0	; select bank0
 17111  1FBC  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17112  1FBD  0142               	movlb	2	; select bank2
 17113  1FBE  0867               	movf	_threshold^(0+256),w
 17114  1FBF  0140               	movlb	0	; select bank0
 17115  1FC0  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17116  1FC1  319E  26B9  319F   	fcall	_ADCC_SetUpperThreshold
 17117                           
 17118                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 17119  1FC4  3091               	movlw	low _adcThresholdHandler
 17120  1FC5  0140               	movlb	0	; select bank0
 17121  1FC6  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 17122  1FC7  301E               	movlw	high _adcThresholdHandler
 17123  1FC8  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 17124  1FC9  319E  26B0  319F   	fcall	_ADCC_SetADTIInterruptHandler
 17125                           
 17126                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 17127  1FCC  300F               	movlw	15
 17128  1FCD  319E  26C2         	fcall	_ADCC_StartConversion
 17129  1FCF  0008               	return
 17130  1FD0                     __end_of_BEAT_init:	
 17131                           
 17132                           	psect	text61
 17133  1EC2                     __ptext61:	
 17134 ;; *************** function _ADCC_StartConversion *****************
 17135 ;; Defined at:
 17136 ;;		line 121 in file "mcc_generated_files/adcc.c"
 17137 ;; Parameters:    Size  Location     Type
 17138 ;;  channel         1    wreg     enum E10867
 17139 ;; Auto vars:     Size  Location     Type
 17140 ;;  channel         1    0[BANK0 ] enum E10867
 17141 ;; Return value:  Size  Location     Type
 17142 ;;                  1    wreg      void 
 17143 ;; Registers used:
 17144 ;;		wreg
 17145 ;; Tracked objects:
 17146 ;;		On entry : 0/0
 17147 ;;		On exit  : 0/0
 17148 ;;		Unchanged: 0/0
 17149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17153 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17154 ;;Total ram usage:        1 bytes
 17155 ;; Hardware stack levels used:    1
 17156 ;; Hardware stack levels required when called:    4
 17157 ;; This function calls:
 17158 ;;		Nothing
 17159 ;; This function is called by:
 17160 ;;		_BEAT_init
 17161 ;; This function uses a non-reentrant model
 17162 ;;
 17163                           
 17164                           
 17165                           ;psect for function _ADCC_StartConversion
 17166  1EC2                     _ADCC_StartConversion:	
 17167                           
 17168                           ;incstack = 0
 17169                           ; Regs used in _ADCC_StartConversion: [wreg]
 17170                           ;ADCC_StartConversion@channel stored from wreg
 17171  1EC2  0140               	movlb	0	; select bank0
 17172  1EC3  00A0               	movwf	ADCC_StartConversion@channel
 17173                           
 17174                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 17175  1EC4  0820               	movf	ADCC_StartConversion@channel,w
 17176  1EC5  0141               	movlb	1	; select bank1
 17177  1EC6  009F               	movwf	31	;volatile
 17178                           
 17179                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 17180  1EC7  0142               	movlb	2	; select bank2
 17181  1EC8  1791               	bsf	17,7	;volatile
 17182                           
 17183                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 17184  1EC9  1411               	bsf	17,0	;volatile
 17185  1ECA  0008               	return
 17186  1ECB                     __end_of_ADCC_StartConversion:	
 17187                           
 17188                           	psect	text62
 17189  1EB9                     __ptext62:	
 17190 ;; *************** function _ADCC_SetUpperThreshold *****************
 17191 ;; Defined at:
 17192 ;;		line 251 in file "mcc_generated_files/adcc.c"
 17193 ;; Parameters:    Size  Location     Type
 17194 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 17195 ;; Auto vars:     Size  Location     Type
 17196 ;;		None
 17197 ;; Return value:  Size  Location     Type
 17198 ;;                  1    wreg      void 
 17199 ;; Registers used:
 17200 ;;		wreg, status,2
 17201 ;; Tracked objects:
 17202 ;;		On entry : 0/0
 17203 ;;		On exit  : 0/0
 17204 ;;		Unchanged: 0/0
 17205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17209 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17210 ;;Total ram usage:        2 bytes
 17211 ;; Hardware stack levels used:    1
 17212 ;; Hardware stack levels required when called:    4
 17213 ;; This function calls:
 17214 ;;		Nothing
 17215 ;; This function is called by:
 17216 ;;		_BEAT_init
 17217 ;;		_BEAT_task
 17218 ;; This function uses a non-reentrant model
 17219 ;;
 17220                           
 17221                           
 17222                           ;psect for function _ADCC_SetUpperThreshold
 17223  1EB9                     _ADCC_SetUpperThreshold:	
 17224                           
 17225                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 17226                           
 17227                           ;incstack = 0
 17228                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 17229  1EB9  0140               	movlb	0	; select bank0
 17230  1EBA  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 17231  1EBB  0141               	movlb	1	; select bank1
 17232  1EBC  008F               	movwf	15	;volatile
 17233                           
 17234                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 17235  1EBD  0140               	movlb	0	; select bank0
 17236  1EBE  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 17237  1EBF  0141               	movlb	1	; select bank1
 17238  1EC0  008E               	movwf	14	;volatile
 17239  1EC1  0008               	return
 17240  1EC2                     __end_of_ADCC_SetUpperThreshold:	
 17241                           
 17242                           	psect	text63
 17243  1EB0                     __ptext63:	
 17244 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17245 ;; Defined at:
 17246 ;;		line 317 in file "mcc_generated_files/adcc.c"
 17247 ;; Parameters:    Size  Location     Type
 17248 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 17249 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 17250 ;; Auto vars:     Size  Location     Type
 17251 ;;		None
 17252 ;; Return value:  Size  Location     Type
 17253 ;;                  1    wreg      void 
 17254 ;; Registers used:
 17255 ;;		wreg
 17256 ;; Tracked objects:
 17257 ;;		On entry : 0/0
 17258 ;;		On exit  : 0/0
 17259 ;;		Unchanged: 0/0
 17260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17265 ;;Total ram usage:        2 bytes
 17266 ;; Hardware stack levels used:    1
 17267 ;; Hardware stack levels required when called:    4
 17268 ;; This function calls:
 17269 ;;		Nothing
 17270 ;; This function is called by:
 17271 ;;		_ADCC_Initialize
 17272 ;;		_BEAT_init
 17273 ;; This function uses a non-reentrant model
 17274 ;;
 17275                           
 17276                           
 17277                           ;psect for function _ADCC_SetADTIInterruptHandler
 17278  1EB0                     _ADCC_SetADTIInterruptHandler:	
 17279                           
 17280                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 17281                           
 17282                           ;incstack = 0
 17283                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 17284  1EB0  0140               	movlb	0	; select bank0
 17285  1EB1  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 17286  1EB2  0142               	movlb	2	; select bank2
 17287  1EB3  00EC               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 17288  1EB4  0140               	movlb	0	; select bank0
 17289  1EB5  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 17290  1EB6  0142               	movlb	2	; select bank2
 17291  1EB7  00EB               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 17292  1EB8  0008               	return
 17293  1EB9                     __end_of_ADCC_SetADTIInterruptHandler:	
 17294                           
 17295                           	psect	intentry
 17296  0004                     __pintentry:	
 17297 ;; *************** function _INTERRUPT_InterruptManager *****************
 17298 ;; Defined at:
 17299 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17300 ;; Parameters:    Size  Location     Type
 17301 ;;		None
 17302 ;; Auto vars:     Size  Location     Type
 17303 ;;		None
 17304 ;; Return value:  Size  Location     Type
 17305 ;;                  1    wreg      void 
 17306 ;; Registers used:
 17307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17308 ;; Tracked objects:
 17309 ;;		On entry : 0/0
 17310 ;;		On exit  : 0/0
 17311 ;;		Unchanged: 0/0
 17312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17317 ;;Total ram usage:        0 bytes
 17318 ;; Hardware stack levels used:    1
 17319 ;; Hardware stack levels required when called:    3
 17320 ;; This function calls:
 17321 ;;		Absolute function
 17322 ;;		_ADCC_ThresholdISR
 17323 ;;		_DMX_ISR
 17324 ;;		_EUSART1_Receive_ISR
 17325 ;;		_EUSART1_Transmit_ISR
 17326 ;;		_I2C1_BusCollisionISR
 17327 ;;		_I2C1_ISR
 17328 ;;		_TMR0_ISR
 17329 ;; This function is called by:
 17330 ;;		Interrupt level 1
 17331 ;; This function uses a non-reentrant model
 17332 ;;
 17333                           
 17334  0004                     _INTERRUPT_InterruptManager:	
 17335                           
 17336                           ;incstack = 0
 17337  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17338                           
 17339                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17340  0005  3180               	pagesel	$
 17341                           
 17342                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17343  0006  014E               	movlb	14	; select bank14
 17344  0007  1A96               	btfsc	22,5	;volatile
 17345  0008  1E8C               	btfss	12,5	;volatile
 17346  0009  280E               	goto	i1l280
 17347                           
 17348                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17349  000A  3187  27F2  3180   	fcall	_TMR0_ISR
 17350                           
 17351                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17352  000D  2837               	goto	i1l294
 17353  000E                     i1l280:	
 17354                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17355                           
 17356  000E  1F0B               	btfss	11,6	;volatile
 17357  000F  2837               	goto	i1l294
 17358                           
 17359                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17360  0010  1899               	btfsc	25,1	;volatile
 17361  0011  1C8F               	btfss	15,1	;volatile
 17362  0012  2817               	goto	i1l283
 17363                           
 17364                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 17365  0013  319E  2688  3180   	fcall	_I2C1_BusCollisionISR
 17366                           
 17367                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17368  0016  2837               	goto	i1l294
 17369  0017                     i1l283:	
 17370                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17371                           
 17372  0017  1819               	btfsc	25,0	;volatile
 17373  0018  1C0F               	btfss	15,0	;volatile
 17374  0019  281E               	goto	i1l285
 17375                           
 17376                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 17377  001A  318A  22DD  3180   	fcall	_I2C1_ISR
 17378                           
 17379                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17380  001D  2837               	goto	i1l294
 17381  001E                     i1l285:	
 17382                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 17383                           
 17384  001E  1A19               	btfsc	25,4	;volatile
 17385  001F  1E0F               	btfss	15,4	;volatile
 17386  0020  2828               	goto	i1l287
 17387                           
 17388                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 17389  0021  0143               	movlb	3	; select bank3
 17390  0022  0863               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384),w
 17391  0023  008A               	movwf	10
 17392  0024  0862               	movf	_EUSART1_TxDefaultInterruptHandler^(0+384),w
 17393  0025  000A               	callw
 17394  0026  3180               	pagesel	$
 17395                           
 17396                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17397  0027  2837               	goto	i1l294
 17398  0028                     i1l287:	
 17399                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 17400                           
 17401  0028  1A99               	btfsc	25,5	;volatile
 17402  0029  1E8F               	btfss	15,5	;volatile
 17403  002A  2832               	goto	i1l289
 17404                           
 17405                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 17406  002B  0143               	movlb	3	; select bank3
 17407  002C  0861               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 17408  002D  008A               	movwf	10
 17409  002E  0860               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 17410  002F  000A               	callw
 17411  0030  3180               	pagesel	$
 17412                           
 17413                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17414  0031  2837               	goto	i1l294
 17415  0032                     i1l289:	
 17416                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 17417                           
 17418  0032  1897               	btfsc	23,1	;volatile
 17419  0033  1C8D               	btfss	13,1	;volatile
 17420  0034  2837               	goto	i1l294
 17421                           
 17422                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 17423  0035  319F  2748         	fcall	_ADCC_ThresholdISR
 17424  0037                     i1l294:	
 17425                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17426                           
 17427  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17428  0038  0009               	retfie
 17429  0039                     __end_of_INTERRUPT_InterruptManager:	
 17430                           
 17431                           	psect	text65
 17432  07F2                     __ptext65:	
 17433 ;; *************** function _TMR0_ISR *****************
 17434 ;; Defined at:
 17435 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 17436 ;; Parameters:    Size  Location     Type
 17437 ;;		None
 17438 ;; Auto vars:     Size  Location     Type
 17439 ;;		None
 17440 ;; Return value:  Size  Location     Type
 17441 ;;                  1    wreg      void 
 17442 ;; Registers used:
 17443 ;;		wreg, status,2, status,0, pclath, cstack
 17444 ;; Tracked objects:
 17445 ;;		On entry : 0/0
 17446 ;;		On exit  : 0/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17453 ;;Total ram usage:        0 bytes
 17454 ;; Hardware stack levels used:    1
 17455 ;; Hardware stack levels required when called:    1
 17456 ;; This function calls:
 17457 ;;		Absolute function
 17458 ;;		_CLOCK_timerCallback
 17459 ;;		_TMR0_DefaultInterruptHandler
 17460 ;; This function is called by:
 17461 ;;		_INTERRUPT_InterruptManager
 17462 ;; This function uses a non-reentrant model
 17463 ;;
 17464                           
 17465                           
 17466                           ;psect for function _TMR0_ISR
 17467  07F2                     _TMR0_ISR:	
 17468                           
 17469                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 17470                           
 17471                           ;incstack = 0
 17472                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17473  07F2  014E               	movlb	14	; select bank14
 17474  07F3  128C               	bcf	12,5	;volatile
 17475                           
 17476                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 17477  07F4  0142               	movlb	2	; select bank2
 17478  07F5  086D               	movf	_TMR0_InterruptHandler^(0+256),w
 17479  07F6  046E               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 17480  07F7  1903               	btfsc	3,2
 17481  07F8  0008               	return
 17482                           
 17483                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 17484  07F9  086E               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 17485  07FA  008A               	movwf	10
 17486  07FB  086D               	movf	_TMR0_InterruptHandler^(0+256),w
 17487  07FC  000A               	callw
 17488  07FD  3187               	pagesel	$
 17489  07FE  0008               	return
 17490  07FF                     __end_of_TMR0_ISR:	
 17491                           
 17492                           	psect	text66
 17493  1EA2                     __ptext66:	
 17494 ;; *************** function _CLOCK_timerCallback *****************
 17495 ;; Defined at:
 17496 ;;		line 21 in file "clock.c"
 17497 ;; Parameters:    Size  Location     Type
 17498 ;;		None
 17499 ;; Auto vars:     Size  Location     Type
 17500 ;;		None
 17501 ;; Return value:  Size  Location     Type
 17502 ;;                  1    wreg      void 
 17503 ;; Registers used:
 17504 ;;		wreg
 17505 ;; Tracked objects:
 17506 ;;		On entry : 0/0
 17507 ;;		On exit  : 0/0
 17508 ;;		Unchanged: 0/0
 17509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17514 ;;Total ram usage:        0 bytes
 17515 ;; Hardware stack levels used:    1
 17516 ;; This function calls:
 17517 ;;		Nothing
 17518 ;; This function is called by:
 17519 ;;		_CLOCK_init
 17520 ;;		_TMR0_ISR
 17521 ;; This function uses a non-reentrant model
 17522 ;;
 17523                           
 17524                           
 17525                           ;psect for function _CLOCK_timerCallback
 17526  1EA2                     _CLOCK_timerCallback:	
 17527                           
 17528                           ;clock.c: 22:     currentTime++;
 17529                           
 17530                           ;incstack = 0
 17531                           ; Regs used in _CLOCK_timerCallback: [wreg]
 17532  1EA2  3001               	movlw	1
 17533  1EA3  0142               	movlb	2	; select bank2
 17534  1EA4  07C7               	addwf	_currentTime^(0+256),f
 17535  1EA5  3000               	movlw	0
 17536  1EA6  3DC8               	addwfc	(_currentTime+1)^(0+256),f
 17537  1EA7  0008               	return
 17538  1EA8                     __end_of_CLOCK_timerCallback:	
 17539                           
 17540                           	psect	text67
 17541  07FF                     __ptext67:	
 17542 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17543 ;; Defined at:
 17544 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 17545 ;; Parameters:    Size  Location     Type
 17546 ;;		None
 17547 ;; Auto vars:     Size  Location     Type
 17548 ;;		None
 17549 ;; Return value:  Size  Location     Type
 17550 ;;                  1    wreg      void 
 17551 ;; Registers used:
 17552 ;;		None
 17553 ;; Tracked objects:
 17554 ;;		On entry : 0/0
 17555 ;;		On exit  : 0/0
 17556 ;;		Unchanged: 0/0
 17557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17562 ;;Total ram usage:        0 bytes
 17563 ;; Hardware stack levels used:    1
 17564 ;; This function calls:
 17565 ;;		Nothing
 17566 ;; This function is called by:
 17567 ;;		_TMR0_Initialize
 17568 ;;		_TMR0_ISR
 17569 ;; This function uses a non-reentrant model
 17570 ;;
 17571                           
 17572                           
 17573                           ;psect for function _TMR0_DefaultInterruptHandler
 17574  07FF                     _TMR0_DefaultInterruptHandler:	
 17575                           
 17576                           ;incstack = 0
 17577                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17578  07FF  0008               	return
 17579  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 17580                           
 17581                           	psect	text68
 17582  0ADD                     __ptext68:	
 17583 ;; *************** function _I2C1_ISR *****************
 17584 ;; Defined at:
 17585 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 17586 ;; Parameters:    Size  Location     Type
 17587 ;;		None
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;		None
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  1    wreg      void 
 17592 ;; Registers used:
 17593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17594 ;; Tracked objects:
 17595 ;;		On entry : 0/0
 17596 ;;		On exit  : 0/0
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17602 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17603 ;;Total ram usage:        4 bytes
 17604 ;; Hardware stack levels used:    1
 17605 ;; Hardware stack levels required when called:    1
 17606 ;; This function calls:
 17607 ;;		_I2C1_FunctionComplete
 17608 ;;		_I2C1_Stop
 17609 ;; This function is called by:
 17610 ;;		_INTERRUPT_InterruptManager
 17611 ;; This function uses a non-reentrant model
 17612 ;;
 17613                           
 17614                           
 17615                           ;psect for function _I2C1_ISR
 17616  0ADD                     _I2C1_ISR:	
 17617                           
 17618                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 17619                           
 17620                           ;incstack = 0
 17621                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17622  0ADD  014E               	movlb	14	; select bank14
 17623  0ADE  100F               	bcf	15,0	;volatile
 17624                           
 17625                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 17626  0ADF  0143               	movlb	3	; select bank3
 17627  0AE0  1F90               	btfss	16,7	;volatile
 17628  0AE1  2C0D               	goto	i1l4932
 17629                           
 17630                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 17631  0AE2  1390               	bcf	16,7	;volatile
 17632                           
 17633                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 17634  0AE3  0142               	movlb	2	; select bank2
 17635  0AE4  01D8               	clrf	_i2c1_state^(0+256)
 17636                           
 17637                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 17638  0AE5  0141               	movlb	1	; select bank1
 17639  0AE6  086B               	movf	_p_i2c1_current^(0+128),w
 17640  0AE7  3E02               	addlw	2
 17641  0AE8  0086               	movwf	6
 17642  0AE9  3001               	movlw	1	; select bank2/3
 17643  0AEA  0087               	movwf	7
 17644  0AEB  0801               	movf	1,w
 17645  0AEC  0086               	movwf	6
 17646  0AED  0187               	clrf	7
 17647  0AEE  0181               	clrf	1
 17648  0AEF  0A81               	incf	1,f
 17649                           
 17650                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 17651  0AF0  01EB               	clrf	_p_i2c1_current^(0+128)
 17652  0AF1  0008               	return
 17653  0AF2                     i1l402:	
 17654                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 17655                           
 17656                           
 17657                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 17658  0AF2  18A2               	btfsc	(_i2c1_object^(0+256)+2),1
 17659  0AF3  0008               	return
 17660                           
 17661                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 17662  0AF4  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17663  0AF5  00F8               	movwf	??_I2C1_ISR
 17664  0AF6  0878               	movf	??_I2C1_ISR,w
 17665  0AF7  0141               	movlb	1	; select bank1
 17666  0AF8  00EB               	movwf	_p_i2c1_current^(0+128)
 17667                           
 17668                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 17669  0AF9  0142               	movlb	2	; select bank2
 17670  0AFA  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17671  0AFB  0086               	movwf	6
 17672  0AFC  3001               	movlw	1	; select bank2/3
 17673  0AFD  0087               	movwf	7
 17674  0AFE  0801               	movf	1,w
 17675  0AFF  00F8               	movwf	??_I2C1_ISR
 17676  0B00  0878               	movf	??_I2C1_ISR,w
 17677  0B01  00D7               	movwf	_i2c1_trb_count^(0+256)
 17678                           
 17679                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 17680  0B02  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17681  0B03  0086               	movwf	6
 17682  0B04  3001               	movlw	1	; select bank2/3
 17683  0B05  0087               	movwf	7
 17684  0B06  3001               	movlw	1	; select bank2/3
 17685  0B07  3F41               	moviw [1]fsr1
 17686  0B08  0141               	movlb	1	; select bank1
 17687  0B09  00EC               	movwf	_p_i2c1_trb_current^(0+128)
 17688                           
 17689                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 17690  0B0A  3003               	movlw	3
 17691  0B0B  00F8               	movwf	??_I2C1_ISR
 17692  0B0C  0878               	movf	??_I2C1_ISR,w
 17693  0B0D  0142               	movlb	2	; select bank2
 17694  0B0E  07A1               	addwf	(low ((_i2c1_object| (0+256)+1)))^0,f
 17695                           
 17696                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 17697  0B0F  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17698  0B10  3A61               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 17699  0B11  1D03               	skipz
 17700  0B12  2B17               	goto	i1l4820
 17701                           
 17702                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 17703  0B13  305E               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 17704  0B14  00F8               	movwf	??_I2C1_ISR
 17705  0B15  0878               	movf	??_I2C1_ISR,w
 17706  0B16  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
 17707  0B17                     i1l4820:	
 17708                           
 17709                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 17710  0B17  1022               	bcf	(_i2c1_object^(0+256)+2),0
 17711                           
 17712                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 17713  0B18  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 17714  0B19  0620               	xorwf	_i2c1_object^(0+256),w
 17715  0B1A  1903               	btfsc	3,2
 17716                           
 17717                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 17718  0B1B  14A2               	bsf	(_i2c1_object^(0+256)+2),1
 17719                           
 17720                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 17721                           
 17722                           ;mcc_generated_files/i2c1.c: 290:                 }
 17723  0B1C  0143               	movlb	3	; select bank3
 17724  0B1D  1411               	bsf	17,0	;volatile
 17725  0B1E                     i1l4824:	
 17726                           
 17727                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 17728  0B1E  3002               	movlw	2
 17729  0B1F  00F8               	movwf	??_I2C1_ISR
 17730  0B20  0878               	movf	??_I2C1_ISR,w
 17731  0B21  0142               	movlb	2	; select bank2
 17732  0B22  00D8               	movwf	_i2c1_state^(0+256)
 17733  0B23  0008               	return
 17734  0B24                     i1l407:	
 17735                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 17736                           
 17737  0B24  2BB6               	goto	i1l428
 17738  0B25                     i1l408:	
 17739                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 17740                           
 17741                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 17742                           
 17743                           
 17744                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 17745  0B25  0143               	movlb	3	; select bank3
 17746  0B26  1F11               	btfss	17,6	;volatile
 17747  0B27  2B31               	goto	i1l4832
 17748                           
 17749                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 17750  0B28  3001               	movlw	1
 17751  0B29  00F8               	movwf	??_I2C1_ISR
 17752  0B2A  0878               	movf	??_I2C1_ISR,w
 17753  0B2B  0142               	movlb	2	; select bank2
 17754  0B2C  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 17755                           
 17756                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17757  0B2D  3004               	movlw	4
 17758  0B2E  3190  2010         	fcall	_I2C1_Stop
 17759                           
 17760                           ;mcc_generated_files/i2c1.c: 319:             }
 17761  0B30  0008               	return
 17762  0B31                     i1l4832:	
 17763                           
 17764                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 17765  0B31  0875               	movf	I2C1_ISR@i2c_address+1,w
 17766  0B32  00F9               	movwf	??_I2C1_ISR+1
 17767  0B33  0874               	movf	I2C1_ISR@i2c_address,w
 17768  0B34  00F8               	movwf	??_I2C1_ISR
 17769  0B35  36F9               	lsrf	??_I2C1_ISR+1,f
 17770  0B36  0CF8               	rrf	??_I2C1_ISR,f
 17771  0B37  0878               	movf	??_I2C1_ISR,w
 17772  0B38  008C               	movwf	12	;volatile
 17773                           
 17774                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 17775  0B39  1C74               	btfss	I2C1_ISR@i2c_address,0
 17776  0B3A  2B41               	goto	i1l4838
 17777                           
 17778                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 17779  0B3B  300B               	movlw	11
 17780  0B3C  00F8               	movwf	??_I2C1_ISR
 17781  0B3D  0878               	movf	??_I2C1_ISR,w
 17782  0B3E  0142               	movlb	2	; select bank2
 17783  0B3F  00D8               	movwf	_i2c1_state^(0+256)
 17784                           
 17785                           ;mcc_generated_files/i2c1.c: 331:                 }
 17786  0B40  0008               	return
 17787  0B41                     i1l4838:	
 17788                           
 17789                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 17790  0B41  3003               	movlw	3
 17791  0B42  00F8               	movwf	??_I2C1_ISR
 17792  0B43  0878               	movf	??_I2C1_ISR,w
 17793  0B44  0142               	movlb	2	; select bank2
 17794  0B45  00D8               	movwf	_i2c1_state^(0+256)
 17795  0B46  0008               	return
 17796  0B47                     i1l413:	
 17797                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 17798                           
 17799                           
 17800                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 17801  0B47  0143               	movlb	3	; select bank3
 17802  0B48  1F11               	btfss	17,6	;volatile
 17803  0B49  2B53               	goto	i1l414
 17804                           
 17805                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 17806  0B4A  3001               	movlw	1
 17807  0B4B  00F8               	movwf	??_I2C1_ISR
 17808  0B4C  0878               	movf	??_I2C1_ISR,w
 17809  0B4D  0142               	movlb	2	; select bank2
 17810  0B4E  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 17811                           
 17812                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 17813  0B4F  3004               	movlw	4
 17814  0B50  3190  2010         	fcall	_I2C1_Stop
 17815                           
 17816                           ;mcc_generated_files/i2c1.c: 347:             }
 17817  0B52  0008               	return
 17818  0B53                     i1l414:	
 17819                           ;mcc_generated_files/i2c1.c: 348:             else
 17820                           
 17821                           
 17822                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 17823  0B53  1491               	bsf	17,1	;volatile
 17824                           
 17825                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 17826  0B54  0875               	movf	I2C1_ISR@i2c_address+1,w
 17827  0B55  00F9               	movwf	??_I2C1_ISR+1
 17828  0B56  0874               	movf	I2C1_ISR@i2c_address,w
 17829  0B57  00F8               	movwf	??_I2C1_ISR
 17830  0B58  0879               	movf	??_I2C1_ISR+1,w
 17831  0B59  00F8               	movwf	??_I2C1_ISR
 17832  0B5A  01F9               	clrf	??_I2C1_ISR+1
 17833  0B5B  3006               	movlw	6
 17834  0B5C  0578               	andwf	??_I2C1_ISR,w
 17835  0B5D  00FA               	movwf	??_I2C1_ISR+2
 17836  0B5E  3000               	movlw	0
 17837  0B5F  0579               	andwf	??_I2C1_ISR+1,w
 17838  0B60  00FB               	movwf	??_I2C1_ISR+3
 17839  0B61  30F0               	movlw	240
 17840  0B62  047A               	iorwf	??_I2C1_ISR+2,w
 17841  0B63  00F4               	movwf	I2C1_ISR@i2c_address
 17842  0B64  3000               	movlw	0
 17843  0B65  047B               	iorwf	??_I2C1_ISR+3,w
 17844  0B66  00F5               	movwf	I2C1_ISR@i2c_address+1
 17845                           
 17846                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 17847  0B67  1474               	bsf	I2C1_ISR@i2c_address,0
 17848                           
 17849                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 17850  0B68  0142               	movlb	2	; select bank2
 17851  0B69  01D4               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+256)
 17852  0B6A  0AD4               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+256),f
 17853  0B6B  2B1E               	goto	i1l4824
 17854  0B6C                     i1l4852:	
 17855                           
 17856                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 17857  0B6C  0354               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+256),w
 17858  0B6D  1903               	btfsc	3,2
 17859  0B6E  2B89               	goto	i1l4872
 17860                           
 17861                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 17862  0B6F  0141               	movlb	1	; select bank1
 17863  0B70  086C               	movf	_p_i2c1_trb_current^(0+128),w
 17864  0B71  0086               	movwf	6
 17865  0B72  3001               	movlw	1	; select bank2/3
 17866  0B73  0087               	movwf	7
 17867  0B74  3F40               	moviw [0]fsr1
 17868  0B75  00F4               	movwf	I2C1_ISR@i2c_address
 17869  0B76  3F41               	moviw [1]fsr1
 17870  0B77  00F5               	movwf	I2C1_ISR@i2c_address+1
 17871                           
 17872                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 17873  0B78  086C               	movf	_p_i2c1_trb_current^(0+128),w
 17874  0B79  0086               	movwf	6
 17875  0B7A  3001               	movlw	1	; select bank2/3
 17876  0B7B  0087               	movwf	7
 17877  0B7C  3001               	movlw	1	; select bank2/3
 17878  0B7D  3F43               	moviw [3]fsr1
 17879  0B7E  0142               	movlb	2	; select bank2
 17880  0B7F  00D6               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+256)
 17881                           
 17882                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 17883  0B80  0141               	movlb	1	; select bank1
 17884  0B81  086C               	movf	_p_i2c1_trb_current^(0+128),w
 17885  0B82  0086               	movwf	6
 17886  0B83  3001               	movlw	1	; select bank2/3
 17887  0B84  0087               	movwf	7
 17888  0B85  3001               	movlw	1	; select bank2/3
 17889  0B86  3F42               	moviw [2]fsr1
 17890  0B87  0142               	movlb	2	; select bank2
 17891  0B88  00D5               	movwf	I2C1_ISR@i2c_bytes_left^(0+256)
 17892  0B89                     i1l4872:	
 17893                           
 17894                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 17895  0B89  0874               	movf	I2C1_ISR@i2c_address,w
 17896  0B8A  0143               	movlb	3	; select bank3
 17897  0B8B  008C               	movwf	12	;volatile
 17898                           
 17899                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 17900  0B8C  1C74               	btfss	I2C1_ISR@i2c_address,0
 17901  0B8D  2B41               	goto	i1l4838
 17902                           
 17903                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 17904  0B8E  3005               	movlw	5
 17905  0B8F  00F8               	movwf	??_I2C1_ISR
 17906  0B90  0878               	movf	??_I2C1_ISR,w
 17907  0B91  0142               	movlb	2	; select bank2
 17908  0B92  00D8               	movwf	_i2c1_state^(0+256)
 17909                           
 17910                           ;mcc_generated_files/i2c1.c: 419:                 }
 17911  0B93  0008               	return
 17912  0B94                     i1l424:	
 17913                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 17914                           
 17915                           
 17916                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 17917  0B94  0143               	movlb	3	; select bank3
 17918  0B95  1F11               	btfss	17,6	;volatile
 17919  0B96  2BA2               	goto	i1l4886
 17920                           
 17921                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 17922  0B97  3001               	movlw	1
 17923  0B98  00F8               	movwf	??_I2C1_ISR
 17924  0B99  0878               	movf	??_I2C1_ISR,w
 17925  0B9A  0142               	movlb	2	; select bank2
 17926  0B9B  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 17927                           
 17928                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 17929  0B9C  0143               	movlb	3	; select bank3
 17930  0B9D  1311               	bcf	17,6	;volatile
 17931                           
 17932                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 17933  0B9E  3005               	movlw	5
 17934  0B9F  3190  2010         	fcall	_I2C1_Stop
 17935                           
 17936                           ;mcc_generated_files/i2c1.c: 442:             }
 17937  0BA1  0008               	return
 17938  0BA2                     i1l4886:	
 17939                           
 17940                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 17941  0BA2  3001               	movlw	1
 17942  0BA3  0142               	movlb	2	; select bank2
 17943  0BA4  02D5               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 17944  0BA5  0A55               	incf	I2C1_ISR@i2c_bytes_left^(0+256),w
 17945  0BA6  1D03               	btfss	3,2
 17946  0BA7  2BB9               	goto	i1l4894
 17947                           
 17948                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 17949  0BA8  3004               	movlw	4
 17950  0BA9  00F8               	movwf	??_I2C1_ISR
 17951  0BAA  0878               	movf	??_I2C1_ISR,w
 17952  0BAB  0141               	movlb	1	; select bank1
 17953  0BAC  07EC               	addwf	_p_i2c1_trb_current^(0+128),f
 17954                           
 17955                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 17956  0BAD  3001               	movlw	1
 17957  0BAE  0142               	movlb	2	; select bank2
 17958  0BAF  02D7               	subwf	_i2c1_trb_count^(0+256),f
 17959  0BB0  1D03               	btfss	3,2
 17960  0BB1  2BB6               	goto	i1l428
 17961                           
 17962                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 17963  0BB2  3000               	movlw	0
 17964  0BB3  3190  2010         	fcall	_I2C1_Stop
 17965                           
 17966                           ;mcc_generated_files/i2c1.c: 457:                     }
 17967  0BB5  0008               	return
 17968  0BB6                     i1l428:	
 17969                           ;mcc_generated_files/i2c1.c: 458:                     else
 17970                           
 17971                           
 17972                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 17973  0BB6  0143               	movlb	3	; select bank3
 17974  0BB7  1491               	bsf	17,1	;volatile
 17975  0BB8  2B1E               	goto	i1l4824
 17976  0BB9                     i1l4894:	
 17977                           
 17978                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 17979  0BB9  0856               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 17980  0BBA  0086               	movwf	6
 17981  0BBB  0187               	clrf	7
 17982  0BBC  0801               	movf	1,w
 17983  0BBD  0143               	movlb	3	; select bank3
 17984  0BBE  008C               	movwf	12	;volatile
 17985  0BBF  3001               	movlw	1
 17986  0BC0  00F8               	movwf	??_I2C1_ISR
 17987  0BC1  0878               	movf	??_I2C1_ISR,w
 17988  0BC2  0142               	movlb	2	; select bank2
 17989  0BC3  07D6               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 17990  0BC4  0008               	return
 17991  0BC5                     i1l431:	
 17992                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 17993                           
 17994                           
 17995                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 17996  0BC5  0143               	movlb	3	; select bank3
 17997  0BC6  1F11               	btfss	17,6	;volatile
 17998  0BC7  2BD3               	goto	i1l432
 17999                           
 18000                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 18001  0BC8  3001               	movlw	1
 18002  0BC9  00F8               	movwf	??_I2C1_ISR
 18003  0BCA  0878               	movf	??_I2C1_ISR,w
 18004  0BCB  0142               	movlb	2	; select bank2
 18005  0BCC  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18006                           
 18007                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18008  0BCD  3004               	movlw	4
 18009  0BCE  3190  2010         	fcall	_I2C1_Stop
 18010                           
 18011                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 18012  0BD0  0143               	movlb	3	; select bank3
 18013  0BD1  1311               	bcf	17,6	;volatile
 18014                           
 18015                           ;mcc_generated_files/i2c1.c: 495:             }
 18016  0BD2  0008               	return
 18017  0BD3                     i1l432:	
 18018                           ;mcc_generated_files/i2c1.c: 496:             else
 18019                           
 18020                           
 18021                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 18022  0BD3  1591               	bsf	17,3	;volatile
 18023                           
 18024                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 18025  0BD4  3008               	movlw	8
 18026  0BD5  00F8               	movwf	??_I2C1_ISR
 18027  0BD6  0878               	movf	??_I2C1_ISR,w
 18028  0BD7  0142               	movlb	2	; select bank2
 18029  0BD8  00D8               	movwf	_i2c1_state^(0+256)
 18030  0BD9  0008               	return
 18031  0BDA                     i1l4906:	
 18032                           
 18033                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 18034  0BDA  3008               	movlw	8
 18035  0BDB  00F8               	movwf	??_I2C1_ISR
 18036  0BDC  0878               	movf	??_I2C1_ISR,w
 18037  0BDD  00D8               	movwf	_i2c1_state^(0+256)
 18038                           
 18039                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 18040  0BDE  0143               	movlb	3	; select bank3
 18041  0BDF  1591               	bsf	17,3	;volatile
 18042                           
 18043                           ;mcc_generated_files/i2c1.c: 513:             break;
 18044  0BE0  0008               	return
 18045  0BE1                     i1l4910:	
 18046                           
 18047                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 18048  0BE1  0143               	movlb	3	; select bank3
 18049  0BE2  080C               	movf	12,w	;volatile
 18050  0BE3  00F8               	movwf	??_I2C1_ISR
 18051  0BE4  0142               	movlb	2	; select bank2
 18052  0BE5  0856               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 18053  0BE6  0086               	movwf	6
 18054  0BE7  0187               	clrf	7
 18055  0BE8  0878               	movf	??_I2C1_ISR,w
 18056  0BE9  0081               	movwf	1
 18057  0BEA  3001               	movlw	1
 18058  0BEB  00F8               	movwf	??_I2C1_ISR
 18059  0BEC  0878               	movf	??_I2C1_ISR,w
 18060  0BED  07D6               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 18061                           
 18062                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 18063  0BEE  3001               	movlw	1
 18064  0BEF  02D5               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 18065  0BF0  1903               	btfsc	3,2
 18066  0BF1  2BFA               	goto	i1l436
 18067                           
 18068                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 18069  0BF2  0143               	movlb	3	; select bank3
 18070  0BF3  1291               	bcf	17,5	;volatile
 18071                           
 18072                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 18073  0BF4  3006               	movlw	6
 18074  0BF5  00F8               	movwf	??_I2C1_ISR
 18075  0BF6  0878               	movf	??_I2C1_ISR,w
 18076  0BF7  0142               	movlb	2	; select bank2
 18077  0BF8  00D8               	movwf	_i2c1_state^(0+256)
 18078                           
 18079                           ;mcc_generated_files/i2c1.c: 532:             }
 18080  0BF9  2BFE               	goto	i1l4922
 18081  0BFA                     i1l436:	
 18082                           ;mcc_generated_files/i2c1.c: 533:             else
 18083                           
 18084                           
 18085                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 18086  0BFA  0143               	movlb	3	; select bank3
 18087  0BFB  1691               	bsf	17,5	;volatile
 18088                           
 18089                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 18090  0BFC  319F  2755         	fcall	_I2C1_FunctionComplete
 18091  0BFE                     i1l4922:	
 18092                           
 18093                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 18094  0BFE  0143               	movlb	3	; select bank3
 18095  0BFF  1611               	bsf	17,4	;volatile
 18096                           
 18097                           ;mcc_generated_files/i2c1.c: 545:             break;
 18098  0C00  0008               	return
 18099  0C01                     i1l4924:	
 18100                           
 18101                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18102  0C01  3000               	movlw	0
 18103  0C02  3190  2010         	fcall	_I2C1_Stop
 18104                           
 18105                           ;mcc_generated_files/i2c1.c: 552:             break;
 18106  0C04  0008               	return
 18107  0C05                     i1l4926:	
 18108                           
 18109                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 18110  0C05  3001               	movlw	1
 18111  0C06  00F8               	movwf	??_I2C1_ISR
 18112  0C07  0878               	movf	??_I2C1_ISR,w
 18113  0C08  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18114                           
 18115                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 18116  0C09  3006               	movlw	6
 18117  0C0A  3190  2010         	fcall	_I2C1_Stop
 18118                           
 18119                           ;mcc_generated_files/i2c1.c: 560:             break;
 18120  0C0C  0008               	return
 18121  0C0D                     i1l4932:	
 18122  0C0D  0142               	movlb	2	; select bank2
 18123  0C0E  0858               	movf	_i2c1_state^(0+256),w
 18124  0C0F  00F8               	movwf	??_I2C1_ISR
 18125  0C10  01F9               	clrf	??_I2C1_ISR+1
 18126                           
 18127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18128                           ; Switch size 1, requested type "simple"
 18129                           ; Number of cases is 1, Range of values is 0 to 0
 18130                           ; switch strategies available:
 18131                           ; Name         Instructions Cycles
 18132                           ; simple_byte            4     3 (average)
 18133                           ; direct_byte            8     6 (fixed)
 18134                           ; jumptable            260     6 (fixed)
 18135                           ;	Chosen strategy is simple_byte
 18136  0C11  0879               	movf	??_I2C1_ISR+1,w
 18137  0C12  3A00               	xorlw	0	; case 0
 18138  0C13  1903               	skipnz
 18139  0C14  2C16               	goto	i1l6218
 18140  0C15  2C05               	goto	i1l4926
 18141  0C16                     i1l6218:	
 18142                           
 18143                           ; Switch size 1, requested type "simple"
 18144                           ; Number of cases is 11, Range of values is 0 to 11
 18145                           ; switch strategies available:
 18146                           ; Name         Instructions Cycles
 18147                           ; direct_byte           30     6 (fixed)
 18148                           ; simple_byte           34    18 (average)
 18149                           ; jumptable            260     6 (fixed)
 18150                           ;	Chosen strategy is simple_byte
 18151  0C16  0878               	movf	??_I2C1_ISR,w
 18152  0C17  3A00               	xorlw	0	; case 0
 18153  0C18  1903               	skipnz
 18154  0C19  2AF2               	goto	i1l402
 18155  0C1A  3A01               	xorlw	1	; case 1
 18156  0C1B  1903               	skipnz
 18157  0C1C  2B24               	goto	i1l407
 18158  0C1D  3A03               	xorlw	3	; case 2
 18159  0C1E  1903               	skipnz
 18160  0C1F  2B6C               	goto	i1l4852
 18161  0C20  3A01               	xorlw	1	; case 3
 18162  0C21  1903               	skipnz
 18163  0C22  2B94               	goto	i1l424
 18164  0C23  3A07               	xorlw	7	; case 4
 18165  0C24  1903               	skipnz
 18166  0C25  2C01               	goto	i1l4924
 18167  0C26  3A01               	xorlw	1	; case 5
 18168  0C27  1903               	skipnz
 18169  0C28  2BC5               	goto	i1l431
 18170  0C29  3A03               	xorlw	3	; case 6
 18171  0C2A  1903               	skipnz
 18172  0C2B  2BDA               	goto	i1l4906
 18173  0C2C  3A01               	xorlw	1	; case 7
 18174  0C2D  1903               	skipnz
 18175  0C2E  2C01               	goto	i1l4924
 18176  0C2F  3A0F               	xorlw	15	; case 8
 18177  0C30  1903               	skipnz
 18178  0C31  2BE1               	goto	i1l4910
 18179  0C32  3A02               	xorlw	2	; case 10
 18180  0C33  1903               	skipnz
 18181  0C34  2B25               	goto	i1l408
 18182  0C35  3A01               	xorlw	1	; case 11
 18183  0C36  1903               	skipnz
 18184  0C37  2B47               	goto	i1l413
 18185  0C38  2C05               	goto	i1l4926
 18186  0C39  0008               	return
 18187  0C3A                     __end_of_I2C1_ISR:	
 18188                           
 18189                           	psect	text69
 18190  1010                     __ptext69:	
 18191 ;; *************** function _I2C1_Stop *****************
 18192 ;; Defined at:
 18193 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 18194 ;; Parameters:    Size  Location     Type
 18195 ;;  completion_c    1    wreg     enum E10866
 18196 ;; Auto vars:     Size  Location     Type
 18197 ;;  completion_c    1    1[COMMON] enum E10866
 18198 ;; Return value:  Size  Location     Type
 18199 ;;                  1    wreg      void 
 18200 ;; Registers used:
 18201 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18202 ;; Tracked objects:
 18203 ;;		On entry : 0/0
 18204 ;;		On exit  : 0/0
 18205 ;;		Unchanged: 0/0
 18206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18211 ;;Total ram usage:        2 bytes
 18212 ;; Hardware stack levels used:    1
 18213 ;; This function calls:
 18214 ;;		Nothing
 18215 ;; This function is called by:
 18216 ;;		_I2C1_ISR
 18217 ;; This function uses a non-reentrant model
 18218 ;;
 18219                           
 18220                           
 18221                           ;psect for function _I2C1_Stop
 18222  1010                     _I2C1_Stop:	
 18223                           
 18224                           ;incstack = 0
 18225                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 18226                           ;I2C1_Stop@completion_code stored from wreg
 18227  1010  00F7               	movwf	I2C1_Stop@completion_code
 18228                           
 18229                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 18230  1011  0143               	movlb	3	; select bank3
 18231  1012  1511               	bsf	17,2	;volatile
 18232                           
 18233                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 18234  1013  0141               	movlb	1	; select bank1
 18235  1014  086B               	movf	_p_i2c1_current^(0+128),w
 18236  1015  3E02               	addlw	2
 18237  1016  0086               	movwf	6
 18238  1017  3001               	movlw	1	; select bank2/3
 18239  1018  0087               	movwf	7
 18240  1019  0801               	movf	1,w
 18241  101A  1903               	btfsc	3,2
 18242  101B  2828               	goto	i1l4598
 18243                           
 18244                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 18245  101C  0877               	movf	I2C1_Stop@completion_code,w
 18246  101D  00F6               	movwf	??_I2C1_Stop
 18247  101E  086B               	movf	_p_i2c1_current^(0+128),w
 18248  101F  3E02               	addlw	2
 18249  1020  0086               	movwf	6
 18250  1021  3001               	movlw	1	; select bank2/3
 18251  1022  0087               	movwf	7
 18252  1023  0801               	movf	1,w
 18253  1024  0086               	movwf	6
 18254  1025  0187               	clrf	7
 18255  1026  0876               	movf	??_I2C1_Stop,w
 18256  1027  0081               	movwf	1
 18257  1028                     i1l4598:	
 18258                           
 18259                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 18260  1028  0142               	movlb	2	; select bank2
 18261  1029  01D8               	clrf	_i2c1_state^(0+256)
 18262  102A  0008               	return
 18263  102B                     __end_of_I2C1_Stop:	
 18264                           
 18265                           	psect	text70
 18266  1F55                     __ptext70:	
 18267 ;; *************** function _I2C1_FunctionComplete *****************
 18268 ;; Defined at:
 18269 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 18270 ;; Parameters:    Size  Location     Type
 18271 ;;		None
 18272 ;; Auto vars:     Size  Location     Type
 18273 ;;		None
 18274 ;; Return value:  Size  Location     Type
 18275 ;;                  1    wreg      void 
 18276 ;; Registers used:
 18277 ;;		wreg, status,2, status,0
 18278 ;; Tracked objects:
 18279 ;;		On entry : 0/0
 18280 ;;		On exit  : 0/0
 18281 ;;		Unchanged: 0/0
 18282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18287 ;;Total ram usage:        1 bytes
 18288 ;; Hardware stack levels used:    1
 18289 ;; This function calls:
 18290 ;;		Nothing
 18291 ;; This function is called by:
 18292 ;;		_I2C1_ISR
 18293 ;; This function uses a non-reentrant model
 18294 ;;
 18295                           
 18296                           
 18297                           ;psect for function _I2C1_FunctionComplete
 18298  1F55                     _I2C1_FunctionComplete:	
 18299                           
 18300                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 18301                           
 18302                           ;incstack = 0
 18303                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 18304  1F55  3004               	movlw	4
 18305  1F56  00F6               	movwf	??_I2C1_FunctionComplete
 18306  1F57  0876               	movf	??_I2C1_FunctionComplete,w
 18307  1F58  0141               	movlb	1	; select bank1
 18308  1F59  07EC               	addwf	_p_i2c1_trb_current^(0+128),f
 18309                           
 18310                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 18311  1F5A  3001               	movlw	1
 18312  1F5B  0142               	movlb	2	; select bank2
 18313  1F5C  02D7               	subwf	_i2c1_trb_count^(0+256),f
 18314  1F5D  1D03               	btfss	3,2
 18315  1F5E  2F64               	goto	i1l443
 18316                           
 18317                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 18318  1F5F  3004               	movlw	4
 18319  1F60  00F6               	movwf	??_I2C1_FunctionComplete
 18320  1F61  0876               	movf	??_I2C1_FunctionComplete,w
 18321  1F62  00D8               	movwf	_i2c1_state^(0+256)
 18322                           
 18323                           ;mcc_generated_files/i2c1.c: 575:     }
 18324  1F63  0008               	return
 18325  1F64                     i1l443:	
 18326                           ;mcc_generated_files/i2c1.c: 576:     else
 18327                           
 18328                           
 18329                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 18330  1F64  01D8               	clrf	_i2c1_state^(0+256)
 18331  1F65  0AD8               	incf	_i2c1_state^(0+256),f
 18332  1F66  0008               	return
 18333  1F67                     __end_of_I2C1_FunctionComplete:	
 18334                           
 18335                           	psect	text71
 18336  1E88                     __ptext71:	
 18337 ;; *************** function _I2C1_BusCollisionISR *****************
 18338 ;; Defined at:
 18339 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 18340 ;; Parameters:    Size  Location     Type
 18341 ;;		None
 18342 ;; Auto vars:     Size  Location     Type
 18343 ;;		None
 18344 ;; Return value:  Size  Location     Type
 18345 ;;                  1    wreg      void 
 18346 ;; Registers used:
 18347 ;;		None
 18348 ;; Tracked objects:
 18349 ;;		On entry : 0/0
 18350 ;;		On exit  : 0/0
 18351 ;;		Unchanged: 0/0
 18352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18357 ;;Total ram usage:        0 bytes
 18358 ;; Hardware stack levels used:    1
 18359 ;; This function calls:
 18360 ;;		Nothing
 18361 ;; This function is called by:
 18362 ;;		_INTERRUPT_InterruptManager
 18363 ;; This function uses a non-reentrant model
 18364 ;;
 18365                           
 18366                           
 18367                           ;psect for function _I2C1_BusCollisionISR
 18368  1E88                     _I2C1_BusCollisionISR:	
 18369                           
 18370                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 18371                           
 18372                           ;incstack = 0
 18373                           ; Regs used in _I2C1_BusCollisionISR: []
 18374  1E88  014E               	movlb	14	; select bank14
 18375  1E89  108F               	bcf	15,1	;volatile
 18376  1E8A  0008               	return
 18377  1E8B                     __end_of_I2C1_BusCollisionISR:	
 18378                           
 18379                           	psect	text72
 18380  102B                     __ptext72:	
 18381 ;; *************** function _EUSART1_Transmit_ISR *****************
 18382 ;; Defined at:
 18383 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 18384 ;; Parameters:    Size  Location     Type
 18385 ;;		None
 18386 ;; Auto vars:     Size  Location     Type
 18387 ;;		None
 18388 ;; Return value:  Size  Location     Type
 18389 ;;                  1    wreg      void 
 18390 ;; Registers used:
 18391 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18392 ;; Tracked objects:
 18393 ;;		On entry : 0/0
 18394 ;;		On exit  : 0/0
 18395 ;;		Unchanged: 0/0
 18396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18399 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18400 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18401 ;;Total ram usage:        1 bytes
 18402 ;; Hardware stack levels used:    1
 18403 ;; This function calls:
 18404 ;;		Nothing
 18405 ;; This function is called by:
 18406 ;;		_EUSART1_Initialize
 18407 ;;		_INTERRUPT_InterruptManager
 18408 ;; This function uses a non-reentrant model
 18409 ;;
 18410                           
 18411                           
 18412                           ;psect for function _EUSART1_Transmit_ISR
 18413  102B                     _EUSART1_Transmit_ISR:	
 18414                           
 18415                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 18416                           
 18417                           ;incstack = 0
 18418                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18419  102B  3008               	movlw	8
 18420  102C  0142               	movlb	2	; select bank2
 18421  102D  026F               	subwf	_eusart1TxBufferRemaining^(0+256),w	;volatile
 18422  102E  1803               	skipnc
 18423  102F  2844               	goto	i1l106
 18424                           
 18425                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 18426  1030  0872               	movf	_eusart1TxTail,w
 18427  1031  3EBA               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 18428  1032  0086               	movwf	6
 18429  1033  3001               	movlw	1	; select bank3/4
 18430  1034  0087               	movwf	7
 18431  1035  0801               	movf	1,w
 18432  1036  009A               	movwf	26	;volatile
 18433  1037  3001               	movlw	1
 18434  1038  00F6               	movwf	??_EUSART1_Transmit_ISR
 18435  1039  0876               	movf	??_EUSART1_Transmit_ISR,w
 18436  103A  07F2               	addwf	_eusart1TxTail,f	;volatile
 18437                           
 18438                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 18439  103B  3008               	movlw	8
 18440  103C  0272               	subwf	_eusart1TxTail,w	;volatile
 18441  103D  1803               	btfsc	3,0
 18442                           
 18443                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 18444  103E  01F2               	clrf	_eusart1TxTail	;volatile
 18445                           
 18446                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 18447  103F  3001               	movlw	1
 18448  1040  00F6               	movwf	??_EUSART1_Transmit_ISR
 18449  1041  0876               	movf	??_EUSART1_Transmit_ISR,w
 18450  1042  07EF               	addwf	_eusart1TxBufferRemaining^(0+256),f	;volatile
 18451                           
 18452                           ;mcc_generated_files/eusart1.c: 206:     }
 18453  1043  0008               	return
 18454  1044                     i1l106:	
 18455                           ;mcc_generated_files/eusart1.c: 207:     else
 18456                           
 18457                           
 18458                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 18459  1044  014E               	movlb	14	; select bank14
 18460  1045  1219               	bcf	25,4	;volatile
 18461  1046  0008               	return
 18462  1047                     __end_of_EUSART1_Transmit_ISR:	
 18463                           
 18464                           	psect	text73
 18465  113F                     __ptext73:	
 18466 ;; *************** function _DMX_ISR *****************
 18467 ;; Defined at:
 18468 ;;		line 13 in file "dmx.c"
 18469 ;; Parameters:    Size  Location     Type
 18470 ;;		None
 18471 ;; Auto vars:     Size  Location     Type
 18472 ;;		None
 18473 ;; Return value:  Size  Location     Type
 18474 ;;                  1    wreg      void 
 18475 ;; Registers used:
 18476 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18477 ;; Tracked objects:
 18478 ;;		On entry : 0/0
 18479 ;;		On exit  : 0/0
 18480 ;;		Unchanged: 0/0
 18481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18484 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18486 ;;Total ram usage:        4 bytes
 18487 ;; Hardware stack levels used:    1
 18488 ;; This function calls:
 18489 ;;		Nothing
 18490 ;; This function is called by:
 18491 ;;		_main
 18492 ;;		_INTERRUPT_InterruptManager
 18493 ;; This function uses a non-reentrant model
 18494 ;;
 18495                           
 18496                           
 18497                           ;psect for function _DMX_ISR
 18498  113F                     _DMX_ISR:	
 18499                           
 18500                           ;dmx.c: 14:         LATB6 = 1;
 18501                           
 18502                           ;incstack = 0
 18503                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18504  113F  0140               	movlb	0	; select bank0
 18505  1140  1719               	bsf	25,6	;volatile
 18506                           
 18507                           ;dmx.c: 15:         LATB6 = 0;
 18508  1141  1319               	bcf	25,6	;volatile
 18509                           
 18510                           ;dmx.c: 16:     if (RC1STAbits.FERR) {
 18511  1142  0142               	movlb	2	; select bank2
 18512  1143  1D1D               	btfss	29,2	;volatile
 18513  1144  294A               	goto	i1l5074
 18514                           
 18515                           ;dmx.c: 18:         dmxPointer = 0;
 18516  1145  01B9               	clrf	_dmxPointer^(0+256)
 18517  1146  01BA               	clrf	(_dmxPointer+1)^(0+256)
 18518                           
 18519                           ;dmx.c: 19:         offCheck = 1;
 18520  1147  01CC               	clrf	_offCheck^(0+256)
 18521  1148  0ACC               	incf	_offCheck^(0+256),f
 18522                           
 18523                           ;dmx.c: 20:     } else {
 18524  1149  294E               	goto	i1l5076
 18525  114A                     i1l5074:	
 18526                           
 18527                           ;dmx.c: 21:         dmxPointer++;
 18528  114A  3001               	movlw	1
 18529  114B  07B9               	addwf	_dmxPointer^(0+256),f
 18530  114C  3000               	movlw	0
 18531  114D  3DBA               	addwfc	(_dmxPointer+1)^(0+256),f
 18532  114E                     i1l5076:	
 18533                           
 18534                           ;dmx.c: 23:     dmxData[dmxPointer] = RC1REG;
 18535  114E  30EF               	movlw	239
 18536  114F  00F6               	movwf	??_DMX_ISR
 18537  1150  3025               	movlw	37
 18538  1151  00F7               	movwf	??_DMX_ISR+1
 18539  1152  0839               	movf	_dmxPointer^(0+256),w
 18540  1153  0776               	addwf	??_DMX_ISR,w
 18541  1154  00F8               	movwf	??_DMX_ISR+2
 18542  1155  083A               	movf	(_dmxPointer+1)^(0+256),w
 18543  1156  3D77               	addwfc	??_DMX_ISR+1,w
 18544  1157  00F9               	movwf	??_DMX_ISR+3
 18545  1158  0878               	movf	??_DMX_ISR+2,w
 18546  1159  0086               	movwf	6
 18547  115A  0879               	movf	??_DMX_ISR+3,w
 18548  115B  0087               	movwf	7
 18549  115C  0819               	movf	25,w	;volatile
 18550  115D  0081               	movwf	1
 18551                           
 18552                           ;dmx.c: 25:     if (RC1STAbits.OERR) {
 18553  115E  1C9D               	btfss	29,1	;volatile
 18554  115F  0008               	return
 18555                           
 18556                           ;dmx.c: 26:         RC1STAbits.CREN = 0;
 18557  1160  121D               	bcf	29,4	;volatile
 18558                           
 18559                           ;dmx.c: 27:         RC1STAbits.CREN = 1;
 18560  1161  161D               	bsf	29,4	;volatile
 18561  1162  0008               	return
 18562  1163                     __end_of_DMX_ISR:	
 18563                           
 18564                           	psect	text74
 18565  12F2                     __ptext74:	
 18566 ;; *************** function _EUSART1_Receive_ISR *****************
 18567 ;; Defined at:
 18568 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 18569 ;; Parameters:    Size  Location     Type
 18570 ;;		None
 18571 ;; Auto vars:     Size  Location     Type
 18572 ;;		None
 18573 ;; Return value:  Size  Location     Type
 18574 ;;                  1    wreg      void 
 18575 ;; Registers used:
 18576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18577 ;; Tracked objects:
 18578 ;;		On entry : 0/0
 18579 ;;		On exit  : 0/0
 18580 ;;		Unchanged: 0/0
 18581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18586 ;;Total ram usage:        0 bytes
 18587 ;; Hardware stack levels used:    1
 18588 ;; Hardware stack levels required when called:    2
 18589 ;; This function calls:
 18590 ;;		Absolute function
 18591 ;;		_EUSART1_DefaultErrorHandler
 18592 ;;		_EUSART1_DefaultFramingErrorHandler
 18593 ;;		_EUSART1_DefaultOverrunErrorHandler
 18594 ;;		_EUSART1_RxDataHandler
 18595 ;; This function is called by:
 18596 ;;		_EUSART1_Initialize
 18597 ;;		_INTERRUPT_InterruptManager
 18598 ;; This function uses a non-reentrant model
 18599 ;;
 18600                           
 18601                           
 18602                           ;psect for function _EUSART1_Receive_ISR
 18603  12F2                     _EUSART1_Receive_ISR:	
 18604                           
 18605                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 18606                           
 18607                           ;incstack = 0
 18608                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18609  12F2  0871               	movf	_eusart1RxHead,w	;volatile
 18610  12F3  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18611  12F4  0086               	movwf	6
 18612  12F5  3001               	movlw	1	; select bank3/4
 18613  12F6  0087               	movwf	7
 18614  12F7  0181               	clrf	1
 18615                           
 18616                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 18617  12F8  0142               	movlb	2	; select bank2
 18618  12F9  1D1D               	btfss	29,2	;volatile
 18619  12FA  2B07               	goto	i1l4762
 18620                           
 18621                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 18622  12FB  0871               	movf	_eusart1RxHead,w	;volatile
 18623  12FC  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18624  12FD  0086               	movwf	6
 18625  12FE  3001               	movlw	1	; select bank3/4
 18626  12FF  0087               	movwf	7
 18627  1300  1481               	bsf	1,1
 18628                           
 18629                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 18630  1301  0143               	movlb	3	; select bank3
 18631  1302  085F               	movf	(_EUSART1_FramingErrorHandler+1)^(0+384),w
 18632  1303  008A               	movwf	10
 18633  1304  085E               	movf	_EUSART1_FramingErrorHandler^(0+384),w
 18634  1305  000A               	callw
 18635  1306  3192               	pagesel	$
 18636  1307                     i1l4762:	
 18637                           
 18638                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 18639  1307  0142               	movlb	2	; select bank2
 18640  1308  1C9D               	btfss	29,1	;volatile
 18641  1309  2B16               	goto	i1l4768
 18642                           
 18643                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 18644  130A  0871               	movf	_eusart1RxHead,w	;volatile
 18645  130B  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18646  130C  0086               	movwf	6
 18647  130D  3001               	movlw	1	; select bank3/4
 18648  130E  0087               	movwf	7
 18649  130F  1501               	bsf	1,2
 18650                           
 18651                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 18652  1310  0143               	movlb	3	; select bank3
 18653  1311  085D               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+384),w
 18654  1312  008A               	movwf	10
 18655  1313  085C               	movf	_EUSART1_OverrunErrorHandler^(0+384),w
 18656  1314  000A               	callw
 18657  1315  3192               	pagesel	$
 18658  1316                     i1l4768:	
 18659                           
 18660                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 18661  1316  0871               	movf	_eusart1RxHead,w	;volatile
 18662  1317  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18663  1318  0086               	movwf	6
 18664  1319  3001               	movlw	1	; select bank3/4
 18665  131A  0087               	movwf	7
 18666  131B  0801               	movf	1,w
 18667  131C  1903               	btfsc	3,2
 18668  131D  2B25               	goto	i1l4772
 18669                           
 18670                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 18671  131E  0143               	movlb	3	; select bank3
 18672  131F  085B               	movf	(_EUSART1_ErrorHandler+1)^(0+384),w
 18673  1320  008A               	movwf	10
 18674  1321  085A               	movf	_EUSART1_ErrorHandler^(0+384),w
 18675  1322  000A               	callw
 18676  1323  3192               	pagesel	$
 18677                           
 18678                           ;mcc_generated_files/eusart1.c: 230:     } else {
 18679  1324  0008               	return
 18680  1325                     i1l4772:	
 18681                           
 18682                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 18683  1325  319F  27D0         	fcall	_EUSART1_RxDataHandler
 18684  1327  0008               	return
 18685  1328                     __end_of_EUSART1_Receive_ISR:	
 18686                           
 18687                           	psect	text75
 18688  1E95                     __ptext75:	
 18689 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 18690 ;; Defined at:
 18691 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 18692 ;; Parameters:    Size  Location     Type
 18693 ;;		None
 18694 ;; Auto vars:     Size  Location     Type
 18695 ;;		None
 18696 ;; Return value:  Size  Location     Type
 18697 ;;                  1    wreg      void 
 18698 ;; Registers used:
 18699 ;;		None
 18700 ;; Tracked objects:
 18701 ;;		On entry : 0/0
 18702 ;;		On exit  : 0/0
 18703 ;;		Unchanged: 0/0
 18704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18709 ;;Total ram usage:        0 bytes
 18710 ;; Hardware stack levels used:    1
 18711 ;; This function calls:
 18712 ;;		Nothing
 18713 ;; This function is called by:
 18714 ;;		_EUSART1_Initialize
 18715 ;;		_EUSART1_Receive_ISR
 18716 ;; This function uses a non-reentrant model
 18717 ;;
 18718                           
 18719                           
 18720                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 18721  1E95                     _EUSART1_DefaultOverrunErrorHandler:	
 18722                           
 18723                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 18724                           
 18725                           ;incstack = 0
 18726                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 18727  1E95  0142               	movlb	2	; select bank2
 18728  1E96  121D               	bcf	29,4	;volatile
 18729                           
 18730                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 18731  1E97  161D               	bsf	29,4	;volatile
 18732  1E98  0008               	return
 18733  1E99                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 18734                           
 18735                           	psect	text76
 18736  1E84                     __ptext76:	
 18737 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 18738 ;; Defined at:
 18739 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 18740 ;; Parameters:    Size  Location     Type
 18741 ;;		None
 18742 ;; Auto vars:     Size  Location     Type
 18743 ;;		None
 18744 ;; Return value:  Size  Location     Type
 18745 ;;                  1    wreg      void 
 18746 ;; Registers used:
 18747 ;;		None
 18748 ;; Tracked objects:
 18749 ;;		On entry : 0/0
 18750 ;;		On exit  : 0/0
 18751 ;;		Unchanged: 0/0
 18752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18757 ;;Total ram usage:        0 bytes
 18758 ;; Hardware stack levels used:    1
 18759 ;; This function calls:
 18760 ;;		Nothing
 18761 ;; This function is called by:
 18762 ;;		_EUSART1_Initialize
 18763 ;;		_EUSART1_Receive_ISR
 18764 ;; This function uses a non-reentrant model
 18765 ;;
 18766                           
 18767                           
 18768                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 18769  1E84                     _EUSART1_DefaultFramingErrorHandler:	
 18770                           
 18771                           ;incstack = 0
 18772                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 18773  1E84  0008               	return
 18774  1E85                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 18775                           
 18776                           	psect	text77
 18777  1E85                     __ptext77:	
 18778 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 18779 ;; Defined at:
 18780 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 18781 ;; Parameters:    Size  Location     Type
 18782 ;;		None
 18783 ;; Auto vars:     Size  Location     Type
 18784 ;;		None
 18785 ;; Return value:  Size  Location     Type
 18786 ;;                  1    wreg      void 
 18787 ;; Registers used:
 18788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18789 ;; Tracked objects:
 18790 ;;		On entry : 0/0
 18791 ;;		On exit  : 0/0
 18792 ;;		Unchanged: 0/0
 18793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18798 ;;Total ram usage:        0 bytes
 18799 ;; Hardware stack levels used:    1
 18800 ;; Hardware stack levels required when called:    1
 18801 ;; This function calls:
 18802 ;;		_EUSART1_RxDataHandler
 18803 ;; This function is called by:
 18804 ;;		_EUSART1_Initialize
 18805 ;;		_EUSART1_Receive_ISR
 18806 ;; This function uses a non-reentrant model
 18807 ;;
 18808                           
 18809                           
 18810                           ;psect for function _EUSART1_DefaultErrorHandler
 18811  1E85                     _EUSART1_DefaultErrorHandler:	
 18812                           
 18813                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 18814                           
 18815                           ;incstack = 0
 18816                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 18817  1E85  319F  27D0         	fcall	_EUSART1_RxDataHandler
 18818  1E87  0008               	return
 18819  1E88                     __end_of_EUSART1_DefaultErrorHandler:	
 18820                           
 18821                           	psect	text78
 18822  1FD0                     __ptext78:	
 18823 ;; *************** function _EUSART1_RxDataHandler *****************
 18824 ;; Defined at:
 18825 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 18826 ;; Parameters:    Size  Location     Type
 18827 ;;		None
 18828 ;; Auto vars:     Size  Location     Type
 18829 ;;		None
 18830 ;; Return value:  Size  Location     Type
 18831 ;;                  1    wreg      void 
 18832 ;; Registers used:
 18833 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18834 ;; Tracked objects:
 18835 ;;		On entry : 0/0
 18836 ;;		On exit  : 0/0
 18837 ;;		Unchanged: 0/0
 18838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18843 ;;Total ram usage:        1 bytes
 18844 ;; Hardware stack levels used:    1
 18845 ;; This function calls:
 18846 ;;		Nothing
 18847 ;; This function is called by:
 18848 ;;		_EUSART1_Receive_ISR
 18849 ;;		_EUSART1_DefaultErrorHandler
 18850 ;; This function uses a non-reentrant model
 18851 ;;
 18852                           
 18853                           
 18854                           ;psect for function _EUSART1_RxDataHandler
 18855  1FD0                     _EUSART1_RxDataHandler:	
 18856                           
 18857                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 18858                           
 18859                           ;incstack = 0
 18860                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 18861  1FD0  0142               	movlb	2	; select bank2
 18862  1FD1  0819               	movf	25,w	;volatile
 18863  1FD2  00F6               	movwf	??_EUSART1_RxDataHandler
 18864  1FD3  0871               	movf	_eusart1RxHead,w
 18865  1FD4  3EB2               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 18866  1FD5  0086               	movwf	6
 18867  1FD6  3001               	movlw	1	; select bank3/4
 18868  1FD7  0087               	movwf	7
 18869  1FD8  0876               	movf	??_EUSART1_RxDataHandler,w
 18870  1FD9  0081               	movwf	1
 18871  1FDA  3001               	movlw	1
 18872  1FDB  00F6               	movwf	??_EUSART1_RxDataHandler
 18873  1FDC  0876               	movf	??_EUSART1_RxDataHandler,w
 18874  1FDD  07F1               	addwf	_eusart1RxHead,f	;volatile
 18875                           
 18876                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 18877  1FDE  3008               	movlw	8
 18878  1FDF  0271               	subwf	_eusart1RxHead,w	;volatile
 18879  1FE0  1803               	btfsc	3,0
 18880                           
 18881                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 18882  1FE1  01F1               	clrf	_eusart1RxHead	;volatile
 18883                           
 18884                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 18885  1FE2  3001               	movlw	1
 18886  1FE3  00F6               	movwf	??_EUSART1_RxDataHandler
 18887  1FE4  0876               	movf	??_EUSART1_RxDataHandler,w
 18888  1FE5  0141               	movlb	1	; select bank1
 18889  1FE6  07ED               	addwf	_eusart1RxCount^(0+128),f	;volatile
 18890  1FE7  0008               	return
 18891  1FE8                     __end_of_EUSART1_RxDataHandler:	
 18892                           
 18893                           	psect	text79
 18894  1F48                     __ptext79:	
 18895 ;; *************** function _ADCC_ThresholdISR *****************
 18896 ;; Defined at:
 18897 ;;		line 308 in file "mcc_generated_files/adcc.c"
 18898 ;; Parameters:    Size  Location     Type
 18899 ;;		None
 18900 ;; Auto vars:     Size  Location     Type
 18901 ;;		None
 18902 ;; Return value:  Size  Location     Type
 18903 ;;                  1    wreg      void 
 18904 ;; Registers used:
 18905 ;;		wreg, status,2, status,0, pclath, cstack
 18906 ;; Tracked objects:
 18907 ;;		On entry : 0/0
 18908 ;;		On exit  : 0/0
 18909 ;;		Unchanged: 0/0
 18910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18915 ;;Total ram usage:        0 bytes
 18916 ;; Hardware stack levels used:    1
 18917 ;; Hardware stack levels required when called:    1
 18918 ;; This function calls:
 18919 ;;		Absolute function
 18920 ;;		_ADCC_DefaultInterruptHandler
 18921 ;;		_adcThresholdHandler
 18922 ;; This function is called by:
 18923 ;;		_INTERRUPT_InterruptManager
 18924 ;; This function uses a non-reentrant model
 18925 ;;
 18926                           
 18927                           
 18928                           ;psect for function _ADCC_ThresholdISR
 18929  1F48                     _ADCC_ThresholdISR:	
 18930                           
 18931                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 18932                           
 18933                           ;incstack = 0
 18934                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 18935  1F48  014E               	movlb	14	; select bank14
 18936  1F49  108D               	bcf	13,1	;volatile
 18937                           
 18938                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 18939  1F4A  0142               	movlb	2	; select bank2
 18940  1F4B  086B               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 18941  1F4C  046C               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 18942  1F4D  1903               	btfsc	3,2
 18943  1F4E  0008               	return
 18944                           
 18945                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 18946  1F4F  086C               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 18947  1F50  008A               	movwf	10
 18948  1F51  086B               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 18949  1F52  000A               	callw
 18950  1F53  319F               	pagesel	$
 18951  1F54  0008               	return
 18952  1F55                     __end_of_ADCC_ThresholdISR:	
 18953                           
 18954                           	psect	text80
 18955  1E83                     __ptext80:	
 18956 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 18957 ;; Defined at:
 18958 ;;		line 320 in file "mcc_generated_files/adcc.c"
 18959 ;; Parameters:    Size  Location     Type
 18960 ;;		None
 18961 ;; Auto vars:     Size  Location     Type
 18962 ;;		None
 18963 ;; Return value:  Size  Location     Type
 18964 ;;                  1    wreg      void 
 18965 ;; Registers used:
 18966 ;;		None
 18967 ;; Tracked objects:
 18968 ;;		On entry : 0/0
 18969 ;;		On exit  : 0/0
 18970 ;;		Unchanged: 0/0
 18971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18976 ;;Total ram usage:        0 bytes
 18977 ;; Hardware stack levels used:    1
 18978 ;; This function calls:
 18979 ;;		Nothing
 18980 ;; This function is called by:
 18981 ;;		_ADCC_Initialize
 18982 ;;		_ADCC_ThresholdISR
 18983 ;; This function uses a non-reentrant model
 18984 ;;
 18985                           
 18986                           
 18987                           ;psect for function _ADCC_DefaultInterruptHandler
 18988  1E83                     _ADCC_DefaultInterruptHandler:	
 18989                           
 18990                           ;incstack = 0
 18991                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 18992  1E83  0008               	return
 18993  1E84                     __end_of_ADCC_DefaultInterruptHandler:	
 18994                           
 18995                           	psect	text81
 18996  1E91                     __ptext81:	
 18997 ;; *************** function _adcThresholdHandler *****************
 18998 ;; Defined at:
 18999 ;;		line 27 in file "beat.c"
 19000 ;; Parameters:    Size  Location     Type
 19001 ;;		None
 19002 ;; Auto vars:     Size  Location     Type
 19003 ;;		None
 19004 ;; Return value:  Size  Location     Type
 19005 ;;                  1    wreg      void 
 19006 ;; Registers used:
 19007 ;;		None
 19008 ;; Tracked objects:
 19009 ;;		On entry : 0/0
 19010 ;;		On exit  : 0/0
 19011 ;;		Unchanged: 0/0
 19012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19017 ;;Total ram usage:        0 bytes
 19018 ;; Hardware stack levels used:    1
 19019 ;; This function calls:
 19020 ;;		Nothing
 19021 ;; This function is called by:
 19022 ;;		_BEAT_init
 19023 ;;		_ADCC_ThresholdISR
 19024 ;; This function uses a non-reentrant model
 19025 ;;
 19026                           
 19027                           
 19028                           ;psect for function _adcThresholdHandler
 19029  1E91                     _adcThresholdHandler:	
 19030                           
 19031                           ;beat.c: 28:     thresholdExceeded = 1;
 19032                           
 19033                           ;incstack = 0
 19034                           ; Regs used in _adcThresholdHandler: []
 19035  1E91  0141               	movlb	1	; select bank1
 19036  1E92  01EA               	clrf	_thresholdExceeded^(0+128)
 19037  1E93  0AEA               	incf	_thresholdExceeded^(0+128),f
 19038  1E94  0008               	return
 19039  1E95                     __end_of_adcThresholdHandler:	
 19040  007E                     btemp	set	126	;btemp
 19041  007E                     int$flags	set	126
 19042  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        32
    BSS         145
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     74      80
    BANK2            80      0      80
    BANK3            80      2      70
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    numControl_Set@val	PTR int  size(2) Largest target is 2
		 -> cycleSpeed(BANK2[2]), address(BANK1[2]), 

    decrement@val	PTR int  size(2) Largest target is 2
		 -> cycleSpeed(BANK2[2]), address(BANK1[2]), 

    increment@val	PTR int  size(2) Largest target is 2
		 -> cycleSpeed(BANK2[2]), address(BANK1[2]), 

    cycleColors@foo	PTR volatile int  size(1) Largest target is 2
		 -> cycleSpeed(BANK2[2]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    S1461$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK2[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MENU_task->_pulseColors
    _menuButtons->_BUTTONS_isClicked
    _numControl_Set->_decrement
    _numControl_Set->_increment
    _increment->_TM1650_fastPrintNum
    _decrement->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _LED_DMX->_LED_setColor
    _LED_setHSL->_HueToRGB
    ___fltol->_HueToRGB
    ___fldiv->___xxtofl
    _HueToRGB->___flge
    ___flsub->___flmul
    ___fladd->__Umul8_16
    ___flmul->___fladd
    ___flge->___flmul
    _BEAT_task->___lwdiv
    _DMX_task->_CLOCK_getTime
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MENU_task
    _MENU_task->_cycleColors
    _pulseColors->_LED_setHSL
    _cycleColors->_LED_setHSL
    _LED_Beat->_fadeColor
    _fadeColor->_LED_setHSL
    _LED_setHSL->___fltol
    ___fltol->_HueToRGB

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  157295
                                              0 BANK3      2     2      0
                          _BEAT_init
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                           _DMX_task
      _EUSART1_SetRxInterruptHandler
                          _MENU_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MENU_task                                            1     1      0  151321
                                             73 BANK1      1     1      0
                          _BEAT_task
                           _LED_Beat
                            _LED_DMX
                      _TM1650_enable
                    _TM1650_setDigit
                        _cycleColors
                            _isDMXOn
                        _menuButtons
                     _numControl_Set
                        _pulseColors
 ---------------------------------------------------------------------------------
 (2) _pulseColors                                          1     1      0   44151
                                             79 BANK0      1     1      0
                         _LED_setHSL
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _menuButtons                                          0     0      0     201
                  _BUTTONS_isClicked
 ---------------------------------------------------------------------------------
 (2) _isDMXOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cycleColors                                         15    15      0   49753
                                             58 BANK1     15    15      0
                      _CLOCK_getTime
                         _LED_setHSL
                     _numControl_Set
 ---------------------------------------------------------------------------------
 (2) _numControl_Set                                       6     4      2   13162
                                             38 BANK0      6     4      2
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                          _decrement
                          _increment
 ---------------------------------------------------------------------------------
 (3) _increment                                            4     2      2    5351
                                             34 BANK0      4     2      2
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _decrement                                            4     2      2    5351
                                             34 BANK0      4     2      2
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (4) _TM1650_fastPrintNum                                  7     5      2    5187
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _TM1650_setDigit                                      7     4      3    3672
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isClicked                                    4     1      3     201
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _LED_DMX                                             11    11      0     948
                                             22 BANK0     11    11      0
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_Beat                                             0     0      0   36446
                      _BEAT_detected
                          _fadeColor
 ---------------------------------------------------------------------------------
 (3) _fadeColor                                            4     4      0   36446
                                             58 BANK1      4     4      0
                      _CLOCK_getTime
                         _LED_setHSL
 ---------------------------------------------------------------------------------
 (3) _LED_setHSL                                          43    33     10   36381
                                             15 BANK1     43    33     10
                           _HueToRGB
                       _LED_setColor
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     697
                                              4 BANK1     11     7      4
                           _HueToRGB (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _LED_setColor                                        22    19      3     948
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (4) _HueToRGB                                            16     4     12   16255
                                             67 BANK0     12     0     12
                                              0 BANK1      4     4      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4705
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3200
                                              9 BANK0     20    12      8
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    5693
                                             29 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1246
                                             55 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_task                                             4     4      0      65
                                              2 BANK0      4     4      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (3) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (13) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (13) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _DMX_task
     _CLOCK_getTime
   _EUSART1_SetRxInterruptHandler
   _MENU_task
     _BEAT_task
       _ADCC_SetUpperThreshold
       _CLOCK_getTime
       _TM1650_isEnabled
       ___lwdiv
     _LED_Beat
       _BEAT_detected
       _fadeColor
         _CLOCK_getTime
         _LED_setHSL
           _HueToRGB
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           _LED_setColor
           ___fladd
             __Umul8_16 (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___xxtofl
     _LED_DMX
       _LED_setColor
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _TM1650_setDigit
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _cycleColors
       _CLOCK_getTime
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fleq
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
       _numControl_Set
         _BUTTONS_isClicked
         _CLOCK_getTime
         _TM1650_enable
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         _decrement
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
         _increment
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
     _isDMXOn
     _menuButtons
       _BUTTONS_isClicked
     _numControl_Set
       _BUTTONS_isClicked
       _CLOCK_getTime
       _TM1650_enable
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       _decrement
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
       _increment
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
     _pulseColors
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fleq
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
       ___fldiv
         ___xxtofl (ARG)
       ___fleq
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     162       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4A      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      2      46      12       87.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      20      14       40.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     162      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 23:35:32 2019

                                   _pulseColors 0866                        _eusart1TxBufferRemaining 016F  
                                  ___fldiv@aexp 0047                                    ___fldiv@bexp 0046  
                      ??_ADCC_SetUpperThreshold 0022                                    ___fldiv@sign 003F  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0076  
                                    HueToRGB@v1 0063                                      HueToRGB@v2 0067  
                                    HueToRGB@vH 006B                                              _up 0152  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00D9  
                           __Umul8_16@word_mpld 0026                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 1E91                                             l802 098A  
                                           l804 09ED                                             l970 0E82  
                                           l969 0E4F                                             _bpm 013F  
                       __size_of_PMD_Initialize 000A                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                    ?_cycleColors 0076  
                                  ___flmul@aexp 004B                                    ___flmul@bexp 0050  
                                   ?_LED_setHSL 00AF                                    ___flmul@sign 004A  
                                  ___flmul@temp 0055                                    ___flmul@prod 0051  
                                 __CFG_BBEN$OFF 0000                                 __end_of_LED_DMX 1473  
                               __end_of_DMX_ISR 1163                                __end_of_I2C1_ISR 0C3A  
                                  ___fltol@exp1 00AE                                            l1000 14F0  
                                          l1068 0892                                            l1441 13FC  
                                          l1450 160F                                            l1442 1416  
                                          l1453 165D                                            l1615 0E14  
                                          l1607 0DFC                                            l1720 17D2  
                                          l1473 084A                                            l1721 17DC  
                                          l1713 17BE                                            l1650 0773  
                                          l4202 0697                                            l1651 078B  
                                          l1707 1788                                            l4108 1428  
                                          l4300 1797                                            l1573 0C87  
                                          l1653 0798                                            l1629 066C  
                                          l1726 10EC                                            l4222 06DE  
                                          l4230 06C0                                            l4232 06FC  
                                          l4304 179B                                            l1681 0616  
                                          l1577 0D1A                                            l1594 0D9D  
                                          l4162 063D                                            l4314 17D0  
                                          l4306 17AB                                            l1579 0CFD  
                                          l3700 0D15                                            l4228 06F7  
                                          l4316 17C3                                            l6110 135D  
                                          l6102 1352                                            l3622 0C57  
                                          l4254 0730                                            l4246 0702  
                                          l4182 0661                                            l4166 0640  
                          _ADCC_StartConversion 1EC2                                            l3624 0C5F  
                                          l4248 0719                                            l4168 0648  
                                          l4328 17F7                                            l5232 07D8  
                                          l5312 124D                                            l3642 0C7C  
                                          l3618 0C54                                            l4282 0794  
                                          l4258 0732                                            l4186 0664  
                                          l5218 1E9D                                            l5306 1235  
                                          l6132 0984                                            l3820 1629  
                                          l5260 10E6                                            l5340 0411  
                                          l3716 0D3A                                            l3708 0D28  
                                          l3652 0C91                                            l4268 075B  
                                          l4196 068B                                            l5236 07DF  
                                          l5308 1241                                            l5316 1256  
                                          l6126 0954                                            l5430 05AC  
                                          l5422 057E                                            l5342 0413  
                                          l3718 0D3C                                            l3726 0D4B  
                                          l3646 0C7F                                            l5502 0F51  
                                          l4294 1780                                            l5238 07E5  
                                          l5254 1096                                            l3824 1643  
                                          l5424 0595                                            l5360 0436  
                                          l5344 041B                                            l3752 0DBC  
                                          l3744 0DAF                                            l3736 0D95  
                                          l3760 0DC5                                            l5248 11FD  
                                          l6080 1572                                            l6056 1521  
                                          l6146 09D7                                            l6138 09AB  
                                          l5290 12AF                                            l5282 1291  
                                          l5434 05AE                                            l5370 044C  
                                          l5362 043E                                            l3770 0DD0  
                                          l3690 0D05                                            l3682 0CCD  
                                          l6066 1533                                            l5284 129D  
                                          l5444 05D7                                            l3692 0D07  
                                          l5540 080A                                            l5612 00F1  
                                          l5700 14EC                                            l6180 12E8  
                                          l5294 12B8                                            l5454 0603  
                                          l5358 0434                                            l3766 0DCE  
                                          l3758 0DC3                                            l5470 15B1  
                                          l5448 05EC                                            l3792 0E10  
                                          l5560 0838                                            l5544 0813  
                                          l5570 0857                                            l5562 0846  
                                          l5618 01B4                                            l5650 1219  
                                          l5642 11C6                                            l3788 0E0C  
                                          l5636 03E6                                            l5708 14FE  
                                          l5476 15B5                                            l5652 1223  
                                          l5644 11CF                                            l5734 1745  
                                          l5726 1728                                            l5912 0A73  
                                          l5496 0F1D                                            l5592 110B  
                                          l5584 1F9D                                            l5914 0A86  
                                          l5684 1EE4                                            l5598 1110  
                                          l5928 0ABA                                            l5944 1009  
                                          l5970 16B0                                            l5954 1FFB  
                                          l5892 0A38                                            l5972 16B4  
                                          l5990 08AA                                            l5896 0A3F  
                                          l5994 08F4                                            l5988 088E  
                                ?_TM1650_enable 0076                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u4005 0705                                            u4105 0764  
                                          u4025 070E                                            u4115 077D  
                                          u4205 17CA                                            u3095 0DE7  
                                          u4245 17E4                                            u4165 17A4  
                                          u2830 0CEC                                            u4095 0749  
                                          u2840 0CED                                            u2825 0CE1  
                                          u4185 17B8                                            _PMD0 0796  
                                          _PMD1 0797                                            u6070 1509  
                                          u6310 092B                                            _PMD2 0798  
                                          u5415 1294                                            u6135 0A21  
                                          u3735 1424                                            _PMD3 0799  
                                          _PMD4 079A                                            u2953 0D5D  
                                          u2945 0D40                                            u5505 1247  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u5435 129E                                            u2875 0D0B  
                                          u5515 124E                                            _PMD7 079D  
                                          u6260 16BF                                            u5445 12A8  
                                          u6245 168F                                            u6270 16E5  
                                          u5455 12B0                                            u5375 10ED  
                                          u5615 04C2                                            u3935 06C8  
                                          u6425 0957                                            u6185 0A9B  
                                          u5625 04F1                                            u3945 06CF  
                                          u6434 0976                                            u6435 0975  
                                          u5635 0547                                            u2995 0DB0  
                                          u5395 1055                                            u5645 055E  
                                          u3965 06D8                                            u5485 1238  
                                          u5805 15F1                                            u5655 056D  
                                          u3975 06EC                                            u5665 0581  
                                          u5905 0839                                            u5755 05C5  
                                          u6547 12D5                                            u5765 05E0  
                                          u5685 058A                                            u5775 05F6  
                                          u5935 084E                                            u5875 081C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0076                                   ?_BUTTONS_task 0076  
                          ?_adcThresholdHandler 0076                                            _isOn 0153  
                                          _main 12BD                                            _down 0151  
                                          _init 10BB                                            _menu 014F  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                cycleColors@color 00DF  
                       __size_of_numControl_Set 007E                                            start 0039  
                               ___fldiv@new_exp 0040                         __end_of_TM1650_setDigit 1063  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                  I2C1_MasterWriteTRBBuild@length 0021  
                            __size_of_MENU_task 006A                         __end_of_TMR0_Initialize 1F7B  
                                    _i2c1_state 0158                                __end_of_LED_Beat 1010  
                ??_TMR0_DefaultInterruptHandler 0076                  __size_of_OSCILLATOR_Initialize 0009  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 1F1C  
                      __end_of_TM1650_isEnabled 1E8E                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 01AA                                   ___fltol@sign1 00AD  
                                         _ADCAP 010E                                           _ADACT 0117  
                               __end_of___fladd 0E1C                                           ?_main 0076  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                               __end_of___fldiv 079D                                           _ADREF 0116  
                             __end_of_I2C1_Stop 102B                                    ?_menuButtons 0076  
                                 __CFG_WDTE$OFF 0000                                           _ADRPT 009A  
                               __end_of___flmul 0623                                 __end_of___flsub 10BB  
                               __end_of___fltol 0866                                __end_of_DMX_task 135F  
                                         _LATB6 00CE                                 __end_of___lwdiv 12BD  
                    _ADCC_ADTI_InterruptHandler 016B                                           i1l106 1044  
                                         i1l402 0AF2                                           i1l413 0B47  
                                         i1l414 0B53                                           i1l431 0BC5  
                                         i1l407 0B24                                           i1l432 0BD3  
                                         i1l424 0B94                                           i1l408 0B25  
                                         i1l280 000E                                 __end_of___lwmod 125B  
                                         i1l443 1F64                                           i1l283 0017  
                                         i1l436 0BFA                                           i1l428 0BB6  
                                         i1l285 001E                                           i1l294 0037  
                                         i1l287 0028                                           i1l289 0032  
                                         _OSCEN 0891                                           _TMR0H 059D  
                                         _TMR0L 059C                                           _PORTA 000C  
                                         _PORTC 000E                                 __end_of_isDMXOn 1E91  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                           _TXREG 011A  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 1E8B  
                     ?_TMR0_SetInterruptHandler 0020                            _EUSART1_Transmit_ISR 102B  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 07FF  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                 __end_of_initLED 11B1  
                                         _delay 0165                                           _dmxOn 014B  
                                         _color 01D0                                           _count 0145  
                                         _enter 0150                           ?_ADCC_StartConversion 0076  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0076  
                             __end_of_BEAT_init 1FD0                               __end_of_BEAT_task 0ADD  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 1E85     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 1E84                 I2C1_MasterWriteTRBBuild@address 0022  
                               __initialization 003B                            TM1650_setDigit@digit 003A  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                    __end_of_EUSART1_Initialize 13E1                                    __end_of_main 12F2  
                                  __end_of_init 10DB                             __size_of_LED_setHSL 035E  
                              __end_of_HueToRGB 1000                                   ?_LED_setColor 0020  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1ED4  
                   ?_INTERRUPT_InterruptManager 0076                                     _i2c1_object 0120  
                                        ??_main 01E4                                          ??_init 0023  
                                     ??_LED_DMX 0036                                       ??_DMX_ISR 0076  
                         ?_EUSART1_Transmit_ISR 0076                                 ??_TM1650_enable 0034  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR1L 030C  
                                        _CCPR3H 0315                                          _CCPR2L 0310  
                                        _CCPR4H 0319                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                             __end_of_MENU_task 157A                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5074 114A                                          i1l5076 114E  
                                __CFG_WDTCCS$SC 0000                                          i1l6218 0C16  
                                        i1l4820 0B17                                          i1l4910 0BE1  
                                        i1l4832 0B31                                          i1l4824 0B1E  
                                        i1l4762 1307                                          i1l4922 0BFE  
                                        i1l4906 0BDA                                          i1l4772 1325  
                                        i1l4924 0C01                                          i1l4852 0B6C  
                                        i1l4932 0C0D                                          i1l4598 1028  
                                        i1l4926 0C05                                          i1l4838 0B41  
                                        i1l4768 1316                                          i1l4872 0B89  
                                        i1l4894 0BB9                                          i1l4886 0BA2  
                                        _OSCFRQ 0893                                   _lastTimeCycle 0133  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                        _TRISC3 00A3                                          _TRISB6 009E  
                                        _TRISC4 00A4                                          _TRISC6 00A6  
                                        _TRISC7 00A7                                   _lastTimePulse 012F  
                              __end_of___xxtofl 1800                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00EB  
                                        ___flge 15F4                                          ___fleq 13E1  
                                ??_LED_setColor 0023                     __end_of_TM1650_fastPrintNum 15F4  
                             _ADCC_ThresholdISR 1F48                                       ??___fladd 0031  
                                     ??___fldiv 0036                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0045                                       ??___flsub 005F  
                                     ??___fltol 00A8                                       ??___lwdiv 0024  
                                     ??___lwmod 0024                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                       ??_isDMXOn 0020  
                              ?_TMR0_Initialize 0076                              ?_ADCC_ThresholdISR 0076  
                                     ?_I2C1_ISR 0076                          __size_of_BEAT_detected 0009  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 0129                            __size_of_TM1650_init 0004  
                                     ??_initLED 0020                                 _ADCC_Initialize 1163  
                                _PMD_Initialize 1F1C                                    ??_CLOCK_init 0022  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0076  
                        ??_ADCC_StartConversion 0020            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                          __size_of_cycleColors 007C                          _ADCC_SetUpperThreshold 1EB9  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                 _eusart1RxBuffer 01B2  
                               _eusart1TxBuffer 01BA                                      ___flge@ff1 0057  
                                    ___flge@ff2 005B                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 1FA4  
                                  ___xxtofl@val 0020                                      ___fleq@ff1 0020  
                                    ___fleq@ff2 0024                         __end_of__initialization 0095  
                                     ?_LED_Beat 0076                                  _numControl_Set 16EC  
                            ?_SYSTEM_Initialize 0076                                      ___fltol@f1 00A4  
                                     ?_DMX_task 0076                                  _i2c1_trb_count 0157  
                __size_of_EUSART1_RxDataHandler 0018                       __end_of_ADCC_ThresholdISR 1F55  
                 __end_of_EUSART1_RxDataHandler 1FE8                              __size_of_fadeColor 0052  
                         _I2C1_FunctionComplete 1F55                            _I2C1_BusCollisionISR 1E88  
                                __pcstackCOMMON 0076                              __end_of_CLOCK_init 1EB0  
                                  ?_pulseColors 0076                          I2C1_MasterWrite@length 0027  
                                  __pidataBANK1 0002                                    __pidataBANK2 1F26  
                                  __pidataBANK3 1F7B                             ??_SYSTEM_Initialize 0023  
                                     ?_TMR0_ISR 0076                     TM1650_fastPrintNum@numWrite 003E  
                            __size_of_decrement 002A                                      ??_I2C1_ISR 0078  
                          __end_of_BUTTONS_init 14BE                          __end_of_PMD_Initialize 1F26  
                          __end_of_BUTTONS_task 0A04                          ??_EUSART1_Transmit_ISR 0076  
                          __size_of_menuButtons 0018                     __end_of_EUSART1_Receive_ISR 1328  
                                  ??_LED_setHSL 00B9                               _thresholdExceeded 00EA  
                   ADCC_StartConversion@channel 0020                               LED_setColor@green 0020  
                             LED_setColor@white 0021                       __end_of_SYSTEM_Initialize 1FB9  
                                 _eusart1RxHead 0071                                   _eusart1TxHead 0073  
                                 _eusart1RxTail 0070                                      __pbssBANK1 00EA  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                     ?_HueToRGB 0063                                      __pbssBANK4 0220  
                                 _eusart1TxTail 0072               _EUSART1_TxDefaultInterruptHandler 01E2  
               ??_EUSART1_SetRxInterruptHandler 0022                          __end_of_numControl_Set 176A  
                                 _BEAT_detected 1EDD                                      ??_LED_Beat 006F  
                            __size_of_increment 0029                                      ??_DMX_task 0022  
                             __end_of__Umul8_16 10FB                           ?_I2C1_BusCollisionISR 0076  
               __end_of_EUSART1_SetErrorHandler 1EEF                                      __pmaintext 12BD  
                                       ?___flge 0057                                         ?___fleq 0020  
              __end_of_TMR0_SetInterruptHandler 1EDD                                      ??_TMR0_ISR 0076  
                               __CFG_PPS1WAY$ON 0000                                    LED_setHSL@v1 00CB  
                                  LED_setHSL@v2 00D3                                writeData@address 0032  
                       __end_of_ADCC_Initialize 1189                              __end_of_LED_setHSL 03F7  
                                    __pintentry 0004                                 _I2C1_Initialize 1063  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1EB9  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1EB0  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                                  increment@val 0042                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0076                               ?_TM1650_isEnabled 0076  
        __end_of_EUSART1_SetFramingErrorHandler 1EF8         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 1EEF                                         _LED_DMX 142A  
                                       _DMX_ISR 113F                                       ?___xxtofl 0020  
                            ??_TM1650_isEnabled 0020                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                     _I2C1_Stop 1010                               __end_of_fadeColor 1510  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                    _dmxPointer 0139                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 139B  
                             __end_of_charTable 1860                             _CLOCK_timerCallback 1EA2  
                                    ??_HueToRGB 006F                                  ?_BEAT_detected 0076  
                             __end_of_decrement 122E                                 ?_numControl_Set 0046  
                 I2C1_MasterTRBInsert@ptrb_list 0020                                      _cycleSpeed 0169  
                            __size_of_writeData 001D                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0076                                       _BEAT_init 1FB9  
                 __size_of_I2C1_MasterTRBInsert 0055                                       _BEAT_task 0A04  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 00EC  
                               __size_of___flge 007C                                 __size_of___fleq 0049  
                                       ___fladd 0C3A                                         ___fldiv 0623  
                          ?_CLOCK_timerCallback 0076                                         ___flmul 03F7  
                                       ___flsub 109C                                         ___fltol 0800  
                                       ___lwdiv 1288                                         ___lwmod 122E  
                                       _address 00EE                               numControl_Set@val 0046  
                                       _isDMXOn 1E8E                                         _dmxData 25EF  
                                       __ptext1 1189                                         __ptext2 1E99  
                                       __ptext3 1FA4                                         __ptext4 1F67  
                                       __ptext5 1F1C                                         __ptext6 125B  
                                       __ptext7 1F13                                         __ptext8 1063  
                                       __ptext9 139B                               __end_of_increment 11DA  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                                       _initLED 1189                                         _lastRun 013D  
                                  DMX_task@time 0024                           _OSCILLATOR_Initialize 1F13  
                                     _T2CONbits 028E                                         _buttons 0220  
                                    ??___xxtofl 0024                              _EUSART1_Initialize 139B  
                      ??_PIN_MANAGER_Initialize 0020                                 __CFG_WRTSAF$OFF 0000  
                                    ?_I2C1_Stop 0076                     __end_of_adcThresholdHandler 1E95  
                 ??_EUSART1_DefaultErrorHandler 0077                      __size_of_SYSTEM_Initialize 0015  
                          I2C1_ISR@pi2c_buf_ptr 0156                                         clrloop0 1F31  
                          end_of_initialization 0095                             ?_EUSART1_Initialize 0076  
                                       init@btn 0024                                         init@pin 0022  
                                       init_ram 1F3C                     _EUSART1_OverrunErrorHandler 01DC  
                                       initloop 1F3D                                       _MENU_task 1510  
                        ??_I2C1_BusCollisionISR 0076                         __end_of_I2C1_Initialize 107F  
         __end_of_EUSART1_SetRxInterruptHandler 1F0A          __size_of_EUSART1_SetRxInterruptHandler 0009  
                 _EUSART1_SetRxInterruptHandler 1F01                                      ?_BEAT_init 0076  
                                    ?_BEAT_task 0076                           __size_of_BUTTONS_init 004B  
                         __size_of_BUTTONS_task 00D2                           ??_CLOCK_timerCallback 0076  
                              ?_ADCC_Initialize 0076                            ??_EUSART1_Initialize 0022  
                          __size_of_pulseColors 00CC                           __CFG_WDTCPS$WDTCPS_31 0000  
                      _TMR0_SetInterruptHandler 1ED4                       __size_of_I2C1_MasterWrite 002A  
                             __size_of_I2C1_ISR 015D                               __end_of_writeData 109C  
                                   ___fladd@grs 003C                         ?_ADCC_SetUpperThreshold 0020  
                                 ___xxtofl@sign 0028                                      _pulseColor 01C6  
                                   ___fldiv@grs 0042                                     ___fldiv@rem 003B  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 1FA4  
             I2C1_ISR@i2c_10bit_address_restart 0154                          __size_of_CLOCK_getTime 0009  
                                   ___flmul@grs 004C                                 cycleColors@F108 01A0  
                                  _BUTTONS_init 1473                                    _BUTTONS_task 0932  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                                    ?_MENU_task 0076                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                               __size_of_LED_Beat 0010  
                       I2C1_MasterWrite@address 0028                                 cycleColors@time 00DD  
          __size_of_EUSART1_DefaultErrorHandler 0003                               __size_of_DMX_task 0037  
                ??_ADCC_DefaultInterruptHandler 0076                                  __end_of___flge 1670  
                                __end_of___fleq 142A                                   ??_TM1650_init 0035  
                       I2C1_MasterWrite@trBlock 015A                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0077                        __size_of_TM1650_setDigit 001C  
                        ?_OSCILLATOR_Initialize 0076                  __end_of_ADCC_SetUpperThreshold 1EC2  
                  __size_of_TM1650_fastPrintNum 007A                           __size_of_LED_setColor 003C  
                                  _lastDetected 014D                                   ??_cycleColors 00DA  
                           start_initialization 003B                                     ??_I2C1_Stop 0076  
                      __size_of_TMR0_Initialize 0014                 __size_of_PIN_MANAGER_Initialize 002D  
                           TM1650_setDigit@data 0034   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0023                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 10FB                                     _fadeAmmount 0163  
                            ?_BUTTONS_isClicked 0020                               __size_of_HueToRGB 01E4  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0076  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                                      ??___flge 005F                                        ??___fleq 0028  
                           ??_BUTTONS_isClicked 0023                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 1FD0                                    _LED_setColor 135F  
                ?_EUSART1_SetRxInterruptHandler 0020                                       __Umul8_16 10DB  
                                   __pdataBANK1 00EE                                     __pdataBANK2 0161  
                                   __pdataBANK3 01C6                                   _CLOCK_getTime 1ECB  
                                 ??_menuButtons 0024                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 00ED                                       ___fladd@a 002D  
                                     ___fladd@b 0029                                     _changeColor 0149  
                                      ?_LED_DMX 0076                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 25EF  
                                      ?_DMX_ISR 0076                             __end_of_TM1650_init 1E9D  
                                     ___flmul@a 0041                                       ___flmul@b 003D  
                                   __pbssCOMMON 0070                                       ___flsub@a 0057  
                                     ___flsub@b 005B               _EUSART1_RxDefaultInterruptHandler 01E0  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 001C  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00A0  
                                 __pcstackBANK3 01E4                                ??_numControl_Set 0048  
                                 _i2c1_tr_queue 015E                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 111C                             __end_of_cycleColors 16EC  
                                     _fadeColor 14BE                 ??_EUSART1_SetTxInterruptHandler 0022  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0076                       __size_of_TM1650_isEnabled 0003  
                  __size_of_EUSART1_Receive_ISR 0036                                LED_setColor@blue 0022  
                                  _currentState 0161                                       _charTable 1800  
                                   ??_MENU_task 00E9                           _TMR0_InterruptHandler 016D  
                                     __pnvBANK2 016B                                       __pnvBANK3 01DA  
                                     _decrement 1204                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 125B                                        ?___fladd 0029  
                                      ?___fldiv 002E                                        ?___flmul 003D  
                                      ?___flsub 0057                                        ?___fltol 00A4  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0020                                  ?_CLOCK_getTime 0020  
                                      ?_isDMXOn 0076                                        _I2C1_ISR 0ADD  
                                 LED_setHSL@hue 00CF                                   LED_setHSL@hsl 00AF  
                                 LED_setHSL@rgb 00D7                    ??_INTERRUPT_InterruptManager 007C  
                               writeData@status 0033                                _I2C1_MasterWrite 11DA  
                                      _BAUD1CON 011F                                        ?_initLED 0076  
                  __end_of_I2C1_MasterTRBInsert 07F2      __end_of_EUSART1_DefaultOverrunErrorHandler 1E99  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 1E95  
                          _EUSART1_ErrorHandler 01DA                         _EUSART1_SetErrorHandler 1EE6  
                                     _increment 11B1                               ??_TM1650_setDigit 0037  
                           __end_of_menuButtons 2000                                ___lwdiv@quotient 0026  
                                  decrement@val 0042                                        _T2CLKCON 0290  
                                    ?_fadeColor 0076        __end_of_I2C1_WaitForLastPacketToComplete 1EA2  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0076                _I2C1_WaitForLastPacketToComplete 1E9D  
                        I2C1_MasterRead@trBlock 01C2                               ??_TMR0_Initialize 0022  
                                      _LED_Beat 1000         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0023                                       clear_ram0 1F30  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                      ?_decrement 0042  
                                      _DMX_task 1328             __size_of_INTERRUPT_InterruptManager 0035  
                    ??_TMR0_SetInterruptHandler 0022                                        _PIR0bits 070C  
                                      _PIR1bits 070D                                        _PIR3bits 070F  
                          TM1650_fastPrintNum@i 0040                                        _RX1DTPPS 1ECB  
                        ?_EUSART1_RxDataHandler 0076                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 07F2                                        _SSP1STAT 018F  
                                   _TM1650_init 1E99                                       _threshold 0167  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                              __size_of_LED_DMX 0049                                     _cycleColors 1670  
                                cycleColors@foo 00DC                                __size_of_DMX_ISR 0024  
                                    ?_increment 0042                                       _writeData 107F  
                    __size_of_BUTTONS_isClicked 0021                                        _HueToRGB 0E1C  
                                   _hueValCycle 0131                    __size_of_adcThresholdHandler 0004  
                                   _hueValPulse 012D                     __end_of_CLOCK_timerCallback 1EA8  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 157A  
                                    _ADSTATbits 0115                              controller@lastTime 012B  
         __end_of_EUSART1_SetTxInterruptHandler 1F13          __size_of_EUSART1_SetTxInterruptHandler 0009  
                 _EUSART1_SetTxInterruptHandler 1F0A                   __size_of_I2C1_BusCollisionISR 0003  
                                 ??_pulseColors 006F                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 0155                                 _LED_setHSL$2860 00C3  
                               _LED_setHSL$2861 00C7                                 _LED_setHSL$2862 00BF  
                               _LED_setHSL$2859 00BB                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fladd 01E2  
                              __size_of___fldiv 017A                                __size_of___flmul 022C  
                              __size_of___flsub 001F                                __size_of___fltol 0066  
                   __size_of_EUSART1_Initialize 0046                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                                __size_of_isDMXOn 0003  
              __end_of_I2C1_MasterWriteTRBBuild 113F                                     _menuButtons 1FE8  
                          ?_TM1650_fastPrintNum 003B                       ??_EUSART1_SetErrorHandler 0022  
                               BEAT_task@offset 002A                                        _fadeTime 0125  
                               LED_setColor@lo1 0027                                 LED_setColor@lo2 002B  
                           TM1650_enable@enable 0034                                 LED_setColor@lo3 002F  
                               LED_setColor@lo4 0033             __end_of_EUSART1_DefaultErrorHandler 1E88  
                   _EUSART1_DefaultErrorHandler 1E85                                 LED_setColor@red 0035  
                            numControl_Set@time 004A                                     _currentTime 0147  
                                    _CLOCK_init 1EA8                                __size_of_initLED 0028  
                                      ___xxtofl 176A                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0074                                 ___lwdiv@counter 0025  
                                      _detected 014E                                      ?_writeData 002E  
                                      __ptext10 1F0A                                        __ptext11 1F01  
                                      __ptext20 1670                                        __ptext12 1EF8  
                                      __ptext21 16EC                                        __ptext13 1EEF  
                                      __ptext30 111C                                        __ptext22 11B1  
                                      __ptext14 1EE6                                        __ptext31 079D  
                                      __ptext23 1204                                        __ptext15 1163  
                                      __ptext40 13E1                                        __ptext32 1E9D  
                                      __ptext24 157A                                        __ptext16 1510  
                                      __ptext41 0623                                        __ptext33 10FB  
                                      __ptext25 122E                                        __ptext17 0866  
                                      __ptext50 0A04                                        __ptext42 135F  
                                      __ptext34 142A                                        __ptext26 1047  
                                      __ptext18 1FE8                                        __ptext51 1288  
                                      __ptext43 0E1C                                        __ptext35 1000  
                                      __ptext27 1F8F                                        __ptext19 1E8E  
                                      __ptext60 1FB9                                        __ptext52 1E8B  
                                      __ptext44 109C                                        __ptext36 14BE  
                                      __ptext28 107F                                        __ptext61 1EC2  
                                      __ptext53 1328                                        __ptext45 0C3A  
                                      __ptext37 0099                                        __ptext29 11DA  
                                      __ptext70 1F55                                        __ptext62 1EB9  
                                      __ptext54 1EA8                                        __ptext46 03F7  
                                      __ptext38 176A                                        __ptext71 1E88  
                                      __ptext63 1EB0                                        __ptext55 1ED4  
                                      __ptext47 10DB                                        __ptext39 0800  
                                      __ptext80 1E83                                        __ptext72 102B  
                                      __ptext56 0932                                        __ptext48 15F4  
                                      __ptext81 1E91                                        __ptext73 113F  
                                      __ptext65 07F2                                        __ptext57 1ECB  
                                      __ptext49 1EDD                                        __ptext74 12F2  
                                      __ptext66 1EA2                                        __ptext58 1473  
                                      __ptext75 1E95                                        __ptext67 07FF  
                                      __ptext59 10BB                                        __ptext76 1E84  
                                      __ptext68 0ADD                                        __ptext77 1E85  
                                      __ptext69 1010                                        __ptext78 1FD0  
                                      __ptext79 1F48                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _offCheck 014C  
                                   ??_fadeColor 00DA                           __end_of_BEAT_detected 1EE6  
                                      _lastBeat 0141                                        _lastTime 0143  
                              _TM1650_isEnabled 1E8B                                   __size_of_main 0035  
                                 __size_of_init 0020            __end_of_TMR0_DefaultInterruptHandler 0800  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 07FF  
                          __CFG_WDTCWS$WDTCWS_7 0000                                     ??_decrement 0044  
                          _I2C1_MasterTRBInsert 079D                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                    __end_of_ADCC_StartConversion 1ECB  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0039  
                    _INTERRUPT_InterruptManager 0004                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 01DE                             _EUSART1_Receive_ISR 12F2  
                           __end_of_pulseColors 0932                           ??_TM1650_fastPrintNum 003D  
                             TM1650_setDigit@dp 0035                                      _INTCONbits 000B  
                                      init@port 0020                                   _HueToRGB$2858 00A0  
                                   ??_increment 0044                                      _LED_setHSL 0099  
          __end_of_ADCC_DefaultInterruptHandler 1E84           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1E83                                        intlevel1 0000  
                                _thresholdCount 013B                            ?_EUSART1_Receive_ISR 0076  
                                 writeData@data 002E                                ___lwmod@dividend 0022  
                       ?_PIN_MANAGER_Initialize 0076                        __end_of_I2C1_MasterWrite 1204  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0012  
        __end_of_EUSART1_SetOverrunErrorHandler 1F01         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1EF8                   __end_of_I2C1_FunctionComplete 1F67  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 1047  
                                   led@lastTime 0135                   ?_TMR0_DefaultInterruptHandler 0076  
                        TM1650_fastPrintNum@num 003B  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 1047  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 0159  
                                 __pstringtext1 1800                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0020                                     ?_CLOCK_init 0076  
                               _TMR0_Initialize 1F67                                 ___lwmod@counter 0025  
                                   dmx@lastTime 0137                                   fadeColor@time 00DC  
                      _I2C1_MasterWriteTRBBuild 111C                                     ??_writeData 002F  
                                    _TX1STAbits 011E                                   ___fladd@signs 0039  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 1288                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 1F8F                                    ___fladd@aexp 003A  
                                  ___fladd@bexp 003B                              __size_of_I2C1_Stop 001B  
                 ?_ADCC_DefaultInterruptHandler 0076                                     _toggleCheck 014A  
                          __Umul8_16@multiplier 0028                         ??_EUSART1_RxDataHandler 0076  
                             __Umul8_16@product 0024  
