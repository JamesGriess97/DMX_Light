

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 23:15:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	intentry,global,class=CODE,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,delta=2
   108                           	psect	text83,local,class=CODE,merge=1,delta=2
   109                           	psect	text84,local,class=CODE,merge=1,delta=2
   110                           	dabs	1,0xCA0,32
   111                           	dabs	1,0xC20,80
   112                           	dabs	1,0xBA0,80
   113                           	dabs	1,0xB20,80
   114                           	dabs	1,0xAA0,80
   115                           	dabs	1,0xA20,80
   116                           	dabs	1,0x9A0,80
   117                           	dabs	1,0x96F,1
   118                           	dabs	1,0x25EF,0,_dmxData
   119                           	dabs	1,0x7E,2
   120  0000                     
   121                           ; Version 2.05
   122                           ; Generated 20/12/2018 GMT
   123                           ; 
   124                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   125                           ; All rights reserved.
   126                           ; 
   127                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   128                           ; 
   129                           ; Redistribution and use in source and binary forms, with or without modification, are
   130                           ; permitted provided that the following conditions are met:
   131                           ; 
   132                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   133                           ;        conditions and the following disclaimer.
   134                           ; 
   135                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   136                           ;        of conditions and the following disclaimer in the documentation and/or other
   137                           ;        materials provided with the distribution.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC16F18446 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  008C                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  010F                     	;# 
   210  0110                     	;# 
   211  0111                     	;# 
   212  0112                     	;# 
   213  0113                     	;# 
   214  0114                     	;# 
   215  0115                     	;# 
   216  0116                     	;# 
   217  0117                     	;# 
   218  0118                     	;# 
   219  0119                     	;# 
   220  0119                     	;# 
   221  0119                     	;# 
   222  011A                     	;# 
   223  011A                     	;# 
   224  011A                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011B                     	;# 
   229  011B                     	;# 
   230  011C                     	;# 
   231  011C                     	;# 
   232  011C                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  011D                     	;# 
   236  011E                     	;# 
   237  011E                     	;# 
   238  011E                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  011F                     	;# 
   243  011F                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  018E                     	;# 
   247  018F                     	;# 
   248  0190                     	;# 
   249  0191                     	;# 
   250  0192                     	;# 
   251  0196                     	;# 
   252  0197                     	;# 
   253  0198                     	;# 
   254  0199                     	;# 
   255  019A                     	;# 
   256  019B                     	;# 
   257  019C                     	;# 
   258  020C                     	;# 
   259  020D                     	;# 
   260  020E                     	;# 
   261  020E                     	;# 
   262  020F                     	;# 
   263  020F                     	;# 
   264  0210                     	;# 
   265  0210                     	;# 
   266  0211                     	;# 
   267  0211                     	;# 
   268  0212                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0216                     	;# 
   275  0216                     	;# 
   276  0217                     	;# 
   277  0217                     	;# 
   278  0218                     	;# 
   279  0219                     	;# 
   280  021A                     	;# 
   281  021A                     	;# 
   282  021B                     	;# 
   283  021B                     	;# 
   284  021C                     	;# 
   285  021C                     	;# 
   286  021D                     	;# 
   287  021D                     	;# 
   288  021E                     	;# 
   289  021F                     	;# 
   290  028C                     	;# 
   291  028C                     	;# 
   292  028D                     	;# 
   293  028D                     	;# 
   294  028E                     	;# 
   295  028F                     	;# 
   296  0290                     	;# 
   297  0291                     	;# 
   298  0292                     	;# 
   299  0292                     	;# 
   300  0293                     	;# 
   301  0293                     	;# 
   302  0294                     	;# 
   303  0295                     	;# 
   304  0296                     	;# 
   305  0297                     	;# 
   306  0298                     	;# 
   307  0298                     	;# 
   308  0299                     	;# 
   309  0299                     	;# 
   310  029A                     	;# 
   311  029B                     	;# 
   312  029C                     	;# 
   313  029D                     	;# 
   314  029F                     	;# 
   315  030C                     	;# 
   316  030C                     	;# 
   317  030D                     	;# 
   318  030E                     	;# 
   319  030F                     	;# 
   320  0310                     	;# 
   321  0310                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0314                     	;# 
   326  0314                     	;# 
   327  0315                     	;# 
   328  0316                     	;# 
   329  0317                     	;# 
   330  0318                     	;# 
   331  0318                     	;# 
   332  0319                     	;# 
   333  031A                     	;# 
   334  031B                     	;# 
   335  038C                     	;# 
   336  038C                     	;# 
   337  038D                     	;# 
   338  038E                     	;# 
   339  0390                     	;# 
   340  0390                     	;# 
   341  0391                     	;# 
   342  0392                     	;# 
   343  048C                     	;# 
   344  048C                     	;# 
   345  048D                     	;# 
   346  048E                     	;# 
   347  048F                     	;# 
   348  048F                     	;# 
   349  0490                     	;# 
   350  0491                     	;# 
   351  0492                     	;# 
   352  0492                     	;# 
   353  0493                     	;# 
   354  0494                     	;# 
   355  0495                     	;# 
   356  0495                     	;# 
   357  0496                     	;# 
   358  0497                     	;# 
   359  0498                     	;# 
   360  0499                     	;# 
   361  049A                     	;# 
   362  049B                     	;# 
   363  049C                     	;# 
   364  049D                     	;# 
   365  058C                     	;# 
   366  058C                     	;# 
   367  058D                     	;# 
   368  058E                     	;# 
   369  058F                     	;# 
   370  058F                     	;# 
   371  0590                     	;# 
   372  0591                     	;# 
   373  0592                     	;# 
   374  0593                     	;# 
   375  059C                     	;# 
   376  059C                     	;# 
   377  059D                     	;# 
   378  059D                     	;# 
   379  059E                     	;# 
   380  059F                     	;# 
   381  060C                     	;# 
   382  060C                     	;# 
   383  060D                     	;# 
   384  060D                     	;# 
   385  060E                     	;# 
   386  060F                     	;# 
   387  0610                     	;# 
   388  0611                     	;# 
   389  0612                     	;# 
   390  0613                     	;# 
   391  0614                     	;# 
   392  0616                     	;# 
   393  0616                     	;# 
   394  0617                     	;# 
   395  0617                     	;# 
   396  0618                     	;# 
   397  0619                     	;# 
   398  061A                     	;# 
   399  061B                     	;# 
   400  061C                     	;# 
   401  061D                     	;# 
   402  061E                     	;# 
   403  070C                     	;# 
   404  070D                     	;# 
   405  070E                     	;# 
   406  070F                     	;# 
   407  0710                     	;# 
   408  0711                     	;# 
   409  0712                     	;# 
   410  0713                     	;# 
   411  0714                     	;# 
   412  0716                     	;# 
   413  0717                     	;# 
   414  0718                     	;# 
   415  0719                     	;# 
   416  071A                     	;# 
   417  071B                     	;# 
   418  071C                     	;# 
   419  071D                     	;# 
   420  071E                     	;# 
   421  0796                     	;# 
   422  0797                     	;# 
   423  0798                     	;# 
   424  0799                     	;# 
   425  079A                     	;# 
   426  079B                     	;# 
   427  079C                     	;# 
   428  079D                     	;# 
   429  080C                     	;# 
   430  080D                     	;# 
   431  080E                     	;# 
   432  080F                     	;# 
   433  0810                     	;# 
   434  0811                     	;# 
   435  0812                     	;# 
   436  0813                     	;# 
   437  0814                     	;# 
   438  081A                     	;# 
   439  081A                     	;# 
   440  081B                     	;# 
   441  081C                     	;# 
   442  081C                     	;# 
   443  081D                     	;# 
   444  081E                     	;# 
   445  081F                     	;# 
   446  088C                     	;# 
   447  088D                     	;# 
   448  088E                     	;# 
   449  088F                     	;# 
   450  0890                     	;# 
   451  0891                     	;# 
   452  0892                     	;# 
   453  0893                     	;# 
   454  0895                     	;# 
   455  0896                     	;# 
   456  0897                     	;# 
   457  0898                     	;# 
   458  0899                     	;# 
   459  089A                     	;# 
   460  089B                     	;# 
   461  090C                     	;# 
   462  090E                     	;# 
   463  090F                     	;# 
   464  091F                     	;# 
   465  098F                     	;# 
   466  098F                     	;# 
   467  0990                     	;# 
   468  0991                     	;# 
   469  0992                     	;# 
   470  0993                     	;# 
   471  0994                     	;# 
   472  0995                     	;# 
   473  0996                     	;# 
   474  0997                     	;# 
   475  1E0F                     	;# 
   476  1E10                     	;# 
   477  1E11                     	;# 
   478  1E12                     	;# 
   479  1E13                     	;# 
   480  1E14                     	;# 
   481  1E15                     	;# 
   482  1E16                     	;# 
   483  1E17                     	;# 
   484  1E18                     	;# 
   485  1E19                     	;# 
   486  1E1A                     	;# 
   487  1E1B                     	;# 
   488  1E1C                     	;# 
   489  1E1D                     	;# 
   490  1E1E                     	;# 
   491  1E1F                     	;# 
   492  1E20                     	;# 
   493  1E21                     	;# 
   494  1E22                     	;# 
   495  1E23                     	;# 
   496  1E24                     	;# 
   497  1E25                     	;# 
   498  1E26                     	;# 
   499  1E27                     	;# 
   500  1E28                     	;# 
   501  1E29                     	;# 
   502  1E2A                     	;# 
   503  1E2B                     	;# 
   504  1E2C                     	;# 
   505  1E2D                     	;# 
   506  1E2E                     	;# 
   507  1E2F                     	;# 
   508  1E30                     	;# 
   509  1E31                     	;# 
   510  1E32                     	;# 
   511  1E33                     	;# 
   512  1E34                     	;# 
   513  1E35                     	;# 
   514  1E36                     	;# 
   515  1E37                     	;# 
   516  1E8F                     	;# 
   517  1E90                     	;# 
   518  1E91                     	;# 
   519  1E92                     	;# 
   520  1E93                     	;# 
   521  1E94                     	;# 
   522  1E95                     	;# 
   523  1E96                     	;# 
   524  1E97                     	;# 
   525  1E9C                     	;# 
   526  1E9D                     	;# 
   527  1E9E                     	;# 
   528  1EA1                     	;# 
   529  1EA2                     	;# 
   530  1EA3                     	;# 
   531  1EA4                     	;# 
   532  1EA9                     	;# 
   533  1EAA                     	;# 
   534  1EB1                     	;# 
   535  1EB2                     	;# 
   536  1EB8                     	;# 
   537  1EB9                     	;# 
   538  1EBA                     	;# 
   539  1EBB                     	;# 
   540  1EBC                     	;# 
   541  1EBD                     	;# 
   542  1EBE                     	;# 
   543  1EC3                     	;# 
   544  1EC5                     	;# 
   545  1EC6                     	;# 
   546  1EC7                     	;# 
   547  1EC8                     	;# 
   548  1EC9                     	;# 
   549  1ECA                     	;# 
   550  1ECB                     	;# 
   551  1ECB                     	;# 
   552  1ECB                     	;# 
   553  1ECC                     	;# 
   554  1ECC                     	;# 
   555  1ECC                     	;# 
   556  1F10                     	;# 
   557  1F11                     	;# 
   558  1F12                     	;# 
   559  1F14                     	;# 
   560  1F15                     	;# 
   561  1F1C                     	;# 
   562  1F1D                     	;# 
   563  1F1E                     	;# 
   564  1F1F                     	;# 
   565  1F20                     	;# 
   566  1F21                     	;# 
   567  1F22                     	;# 
   568  1F23                     	;# 
   569  1F24                     	;# 
   570  1F25                     	;# 
   571  1F26                     	;# 
   572  1F27                     	;# 
   573  1F38                     	;# 
   574  1F39                     	;# 
   575  1F3A                     	;# 
   576  1F3B                     	;# 
   577  1F3C                     	;# 
   578  1F3D                     	;# 
   579  1F3E                     	;# 
   580  1F3F                     	;# 
   581  1F43                     	;# 
   582  1F44                     	;# 
   583  1F45                     	;# 
   584  1F46                     	;# 
   585  1F47                     	;# 
   586  1F48                     	;# 
   587  1F49                     	;# 
   588  1F4A                     	;# 
   589  1F4E                     	;# 
   590  1F4F                     	;# 
   591  1F50                     	;# 
   592  1F51                     	;# 
   593  1F52                     	;# 
   594  1F53                     	;# 
   595  1F54                     	;# 
   596  1F55                     	;# 
   597  1FE4                     	;# 
   598  1FE5                     	;# 
   599  1FE6                     	;# 
   600  1FE7                     	;# 
   601  1FE8                     	;# 
   602  1FE8                     	;# 
   603  1FE9                     	;# 
   604  1FEA                     	;# 
   605  1FEB                     	;# 
   606  1FED                     	;# 
   607  1FEE                     	;# 
   608  1FEF                     	;# 
   609  0000                     	;# 
   610  0001                     	;# 
   611  0002                     	;# 
   612  0003                     	;# 
   613  0004                     	;# 
   614  0005                     	;# 
   615  0006                     	;# 
   616  0007                     	;# 
   617  0008                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000D                     	;# 
   623  000E                     	;# 
   624  0012                     	;# 
   625  0013                     	;# 
   626  0014                     	;# 
   627  0018                     	;# 
   628  0019                     	;# 
   629  001A                     	;# 
   630  008C                     	;# 
   631  008C                     	;# 
   632  008D                     	;# 
   633  008E                     	;# 
   634  008E                     	;# 
   635  008F                     	;# 
   636  0090                     	;# 
   637  0090                     	;# 
   638  0091                     	;# 
   639  0092                     	;# 
   640  0092                     	;# 
   641  0093                     	;# 
   642  0094                     	;# 
   643  0094                     	;# 
   644  0095                     	;# 
   645  0096                     	;# 
   646  0096                     	;# 
   647  0097                     	;# 
   648  0098                     	;# 
   649  0099                     	;# 
   650  009A                     	;# 
   651  009B                     	;# 
   652  009B                     	;# 
   653  009C                     	;# 
   654  009D                     	;# 
   655  009D                     	;# 
   656  009E                     	;# 
   657  009F                     	;# 
   658  010C                     	;# 
   659  010C                     	;# 
   660  010D                     	;# 
   661  010E                     	;# 
   662  010F                     	;# 
   663  010F                     	;# 
   664  0110                     	;# 
   665  0111                     	;# 
   666  0112                     	;# 
   667  0113                     	;# 
   668  0114                     	;# 
   669  0115                     	;# 
   670  0116                     	;# 
   671  0117                     	;# 
   672  0118                     	;# 
   673  0119                     	;# 
   674  0119                     	;# 
   675  0119                     	;# 
   676  011A                     	;# 
   677  011A                     	;# 
   678  011A                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011B                     	;# 
   682  011B                     	;# 
   683  011B                     	;# 
   684  011C                     	;# 
   685  011C                     	;# 
   686  011C                     	;# 
   687  011D                     	;# 
   688  011D                     	;# 
   689  011D                     	;# 
   690  011E                     	;# 
   691  011E                     	;# 
   692  011E                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  011F                     	;# 
   696  011F                     	;# 
   697  011F                     	;# 
   698  018C                     	;# 
   699  018D                     	;# 
   700  018E                     	;# 
   701  018F                     	;# 
   702  0190                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0196                     	;# 
   706  0197                     	;# 
   707  0198                     	;# 
   708  0199                     	;# 
   709  019A                     	;# 
   710  019B                     	;# 
   711  019C                     	;# 
   712  020C                     	;# 
   713  020D                     	;# 
   714  020E                     	;# 
   715  020E                     	;# 
   716  020F                     	;# 
   717  020F                     	;# 
   718  0210                     	;# 
   719  0210                     	;# 
   720  0211                     	;# 
   721  0211                     	;# 
   722  0212                     	;# 
   723  0213                     	;# 
   724  0214                     	;# 
   725  0214                     	;# 
   726  0215                     	;# 
   727  0215                     	;# 
   728  0216                     	;# 
   729  0216                     	;# 
   730  0217                     	;# 
   731  0217                     	;# 
   732  0218                     	;# 
   733  0219                     	;# 
   734  021A                     	;# 
   735  021A                     	;# 
   736  021B                     	;# 
   737  021B                     	;# 
   738  021C                     	;# 
   739  021C                     	;# 
   740  021D                     	;# 
   741  021D                     	;# 
   742  021E                     	;# 
   743  021F                     	;# 
   744  028C                     	;# 
   745  028C                     	;# 
   746  028D                     	;# 
   747  028D                     	;# 
   748  028E                     	;# 
   749  028F                     	;# 
   750  0290                     	;# 
   751  0291                     	;# 
   752  0292                     	;# 
   753  0292                     	;# 
   754  0293                     	;# 
   755  0293                     	;# 
   756  0294                     	;# 
   757  0295                     	;# 
   758  0296                     	;# 
   759  0297                     	;# 
   760  0298                     	;# 
   761  0298                     	;# 
   762  0299                     	;# 
   763  0299                     	;# 
   764  029A                     	;# 
   765  029B                     	;# 
   766  029C                     	;# 
   767  029D                     	;# 
   768  029F                     	;# 
   769  030C                     	;# 
   770  030C                     	;# 
   771  030D                     	;# 
   772  030E                     	;# 
   773  030F                     	;# 
   774  0310                     	;# 
   775  0310                     	;# 
   776  0311                     	;# 
   777  0312                     	;# 
   778  0313                     	;# 
   779  0314                     	;# 
   780  0314                     	;# 
   781  0315                     	;# 
   782  0316                     	;# 
   783  0317                     	;# 
   784  0318                     	;# 
   785  0318                     	;# 
   786  0319                     	;# 
   787  031A                     	;# 
   788  031B                     	;# 
   789  038C                     	;# 
   790  038C                     	;# 
   791  038D                     	;# 
   792  038E                     	;# 
   793  0390                     	;# 
   794  0390                     	;# 
   795  0391                     	;# 
   796  0392                     	;# 
   797  048C                     	;# 
   798  048C                     	;# 
   799  048D                     	;# 
   800  048E                     	;# 
   801  048F                     	;# 
   802  048F                     	;# 
   803  0490                     	;# 
   804  0491                     	;# 
   805  0492                     	;# 
   806  0492                     	;# 
   807  0493                     	;# 
   808  0494                     	;# 
   809  0495                     	;# 
   810  0495                     	;# 
   811  0496                     	;# 
   812  0497                     	;# 
   813  0498                     	;# 
   814  0499                     	;# 
   815  049A                     	;# 
   816  049B                     	;# 
   817  049C                     	;# 
   818  049D                     	;# 
   819  058C                     	;# 
   820  058C                     	;# 
   821  058D                     	;# 
   822  058E                     	;# 
   823  058F                     	;# 
   824  058F                     	;# 
   825  0590                     	;# 
   826  0591                     	;# 
   827  0592                     	;# 
   828  0593                     	;# 
   829  059C                     	;# 
   830  059C                     	;# 
   831  059D                     	;# 
   832  059D                     	;# 
   833  059E                     	;# 
   834  059F                     	;# 
   835  060C                     	;# 
   836  060C                     	;# 
   837  060D                     	;# 
   838  060D                     	;# 
   839  060E                     	;# 
   840  060F                     	;# 
   841  0610                     	;# 
   842  0611                     	;# 
   843  0612                     	;# 
   844  0613                     	;# 
   845  0614                     	;# 
   846  0616                     	;# 
   847  0616                     	;# 
   848  0617                     	;# 
   849  0617                     	;# 
   850  0618                     	;# 
   851  0619                     	;# 
   852  061A                     	;# 
   853  061B                     	;# 
   854  061C                     	;# 
   855  061D                     	;# 
   856  061E                     	;# 
   857  070C                     	;# 
   858  070D                     	;# 
   859  070E                     	;# 
   860  070F                     	;# 
   861  0710                     	;# 
   862  0711                     	;# 
   863  0712                     	;# 
   864  0713                     	;# 
   865  0714                     	;# 
   866  0716                     	;# 
   867  0717                     	;# 
   868  0718                     	;# 
   869  0719                     	;# 
   870  071A                     	;# 
   871  071B                     	;# 
   872  071C                     	;# 
   873  071D                     	;# 
   874  071E                     	;# 
   875  0796                     	;# 
   876  0797                     	;# 
   877  0798                     	;# 
   878  0799                     	;# 
   879  079A                     	;# 
   880  079B                     	;# 
   881  079C                     	;# 
   882  079D                     	;# 
   883  080C                     	;# 
   884  080D                     	;# 
   885  080E                     	;# 
   886  080F                     	;# 
   887  0810                     	;# 
   888  0811                     	;# 
   889  0812                     	;# 
   890  0813                     	;# 
   891  0814                     	;# 
   892  081A                     	;# 
   893  081A                     	;# 
   894  081B                     	;# 
   895  081C                     	;# 
   896  081C                     	;# 
   897  081D                     	;# 
   898  081E                     	;# 
   899  081F                     	;# 
   900  088C                     	;# 
   901  088D                     	;# 
   902  088E                     	;# 
   903  088F                     	;# 
   904  0890                     	;# 
   905  0891                     	;# 
   906  0892                     	;# 
   907  0893                     	;# 
   908  0895                     	;# 
   909  0896                     	;# 
   910  0897                     	;# 
   911  0898                     	;# 
   912  0899                     	;# 
   913  089A                     	;# 
   914  089B                     	;# 
   915  090C                     	;# 
   916  090E                     	;# 
   917  090F                     	;# 
   918  091F                     	;# 
   919  098F                     	;# 
   920  098F                     	;# 
   921  0990                     	;# 
   922  0991                     	;# 
   923  0992                     	;# 
   924  0993                     	;# 
   925  0994                     	;# 
   926  0995                     	;# 
   927  0996                     	;# 
   928  0997                     	;# 
   929  1E0F                     	;# 
   930  1E10                     	;# 
   931  1E11                     	;# 
   932  1E12                     	;# 
   933  1E13                     	;# 
   934  1E14                     	;# 
   935  1E15                     	;# 
   936  1E16                     	;# 
   937  1E17                     	;# 
   938  1E18                     	;# 
   939  1E19                     	;# 
   940  1E1A                     	;# 
   941  1E1B                     	;# 
   942  1E1C                     	;# 
   943  1E1D                     	;# 
   944  1E1E                     	;# 
   945  1E1F                     	;# 
   946  1E20                     	;# 
   947  1E21                     	;# 
   948  1E22                     	;# 
   949  1E23                     	;# 
   950  1E24                     	;# 
   951  1E25                     	;# 
   952  1E26                     	;# 
   953  1E27                     	;# 
   954  1E28                     	;# 
   955  1E29                     	;# 
   956  1E2A                     	;# 
   957  1E2B                     	;# 
   958  1E2C                     	;# 
   959  1E2D                     	;# 
   960  1E2E                     	;# 
   961  1E2F                     	;# 
   962  1E30                     	;# 
   963  1E31                     	;# 
   964  1E32                     	;# 
   965  1E33                     	;# 
   966  1E34                     	;# 
   967  1E35                     	;# 
   968  1E36                     	;# 
   969  1E37                     	;# 
   970  1E8F                     	;# 
   971  1E90                     	;# 
   972  1E91                     	;# 
   973  1E92                     	;# 
   974  1E93                     	;# 
   975  1E94                     	;# 
   976  1E95                     	;# 
   977  1E96                     	;# 
   978  1E97                     	;# 
   979  1E9C                     	;# 
   980  1E9D                     	;# 
   981  1E9E                     	;# 
   982  1EA1                     	;# 
   983  1EA2                     	;# 
   984  1EA3                     	;# 
   985  1EA4                     	;# 
   986  1EA9                     	;# 
   987  1EAA                     	;# 
   988  1EB1                     	;# 
   989  1EB2                     	;# 
   990  1EB8                     	;# 
   991  1EB9                     	;# 
   992  1EBA                     	;# 
   993  1EBB                     	;# 
   994  1EBC                     	;# 
   995  1EBD                     	;# 
   996  1EBE                     	;# 
   997  1EC3                     	;# 
   998  1EC5                     	;# 
   999  1EC6                     	;# 
  1000  1EC7                     	;# 
  1001  1EC8                     	;# 
  1002  1EC9                     	;# 
  1003  1ECA                     	;# 
  1004  1ECB                     	;# 
  1005  1ECB                     	;# 
  1006  1ECB                     	;# 
  1007  1ECC                     	;# 
  1008  1ECC                     	;# 
  1009  1ECC                     	;# 
  1010  1F10                     	;# 
  1011  1F11                     	;# 
  1012  1F12                     	;# 
  1013  1F14                     	;# 
  1014  1F15                     	;# 
  1015  1F1C                     	;# 
  1016  1F1D                     	;# 
  1017  1F1E                     	;# 
  1018  1F1F                     	;# 
  1019  1F20                     	;# 
  1020  1F21                     	;# 
  1021  1F22                     	;# 
  1022  1F23                     	;# 
  1023  1F24                     	;# 
  1024  1F25                     	;# 
  1025  1F26                     	;# 
  1026  1F27                     	;# 
  1027  1F38                     	;# 
  1028  1F39                     	;# 
  1029  1F3A                     	;# 
  1030  1F3B                     	;# 
  1031  1F3C                     	;# 
  1032  1F3D                     	;# 
  1033  1F3E                     	;# 
  1034  1F3F                     	;# 
  1035  1F43                     	;# 
  1036  1F44                     	;# 
  1037  1F45                     	;# 
  1038  1F46                     	;# 
  1039  1F47                     	;# 
  1040  1F48                     	;# 
  1041  1F49                     	;# 
  1042  1F4A                     	;# 
  1043  1F4E                     	;# 
  1044  1F4F                     	;# 
  1045  1F50                     	;# 
  1046  1F51                     	;# 
  1047  1F52                     	;# 
  1048  1F53                     	;# 
  1049  1F54                     	;# 
  1050  1F55                     	;# 
  1051  1FE4                     	;# 
  1052  1FE5                     	;# 
  1053  1FE6                     	;# 
  1054  1FE7                     	;# 
  1055  1FE8                     	;# 
  1056  1FE8                     	;# 
  1057  1FE9                     	;# 
  1058  1FEA                     	;# 
  1059  1FEB                     	;# 
  1060  1FED                     	;# 
  1061  1FEE                     	;# 
  1062  1FEF                     	;# 
  1063  0000                     	;# 
  1064  0001                     	;# 
  1065  0002                     	;# 
  1066  0003                     	;# 
  1067  0004                     	;# 
  1068  0005                     	;# 
  1069  0006                     	;# 
  1070  0007                     	;# 
  1071  0008                     	;# 
  1072  0009                     	;# 
  1073  000A                     	;# 
  1074  000B                     	;# 
  1075  000C                     	;# 
  1076  000D                     	;# 
  1077  000E                     	;# 
  1078  0012                     	;# 
  1079  0013                     	;# 
  1080  0014                     	;# 
  1081  0018                     	;# 
  1082  0019                     	;# 
  1083  001A                     	;# 
  1084  008C                     	;# 
  1085  008C                     	;# 
  1086  008D                     	;# 
  1087  008E                     	;# 
  1088  008E                     	;# 
  1089  008F                     	;# 
  1090  0090                     	;# 
  1091  0090                     	;# 
  1092  0091                     	;# 
  1093  0092                     	;# 
  1094  0092                     	;# 
  1095  0093                     	;# 
  1096  0094                     	;# 
  1097  0094                     	;# 
  1098  0095                     	;# 
  1099  0096                     	;# 
  1100  0096                     	;# 
  1101  0097                     	;# 
  1102  0098                     	;# 
  1103  0099                     	;# 
  1104  009A                     	;# 
  1105  009B                     	;# 
  1106  009B                     	;# 
  1107  009C                     	;# 
  1108  009D                     	;# 
  1109  009D                     	;# 
  1110  009E                     	;# 
  1111  009F                     	;# 
  1112  010C                     	;# 
  1113  010C                     	;# 
  1114  010D                     	;# 
  1115  010E                     	;# 
  1116  010F                     	;# 
  1117  010F                     	;# 
  1118  0110                     	;# 
  1119  0111                     	;# 
  1120  0112                     	;# 
  1121  0113                     	;# 
  1122  0114                     	;# 
  1123  0115                     	;# 
  1124  0116                     	;# 
  1125  0117                     	;# 
  1126  0118                     	;# 
  1127  0119                     	;# 
  1128  0119                     	;# 
  1129  0119                     	;# 
  1130  011A                     	;# 
  1131  011A                     	;# 
  1132  011A                     	;# 
  1133  011B                     	;# 
  1134  011B                     	;# 
  1135  011B                     	;# 
  1136  011B                     	;# 
  1137  011B                     	;# 
  1138  011C                     	;# 
  1139  011C                     	;# 
  1140  011C                     	;# 
  1141  011D                     	;# 
  1142  011D                     	;# 
  1143  011D                     	;# 
  1144  011E                     	;# 
  1145  011E                     	;# 
  1146  011E                     	;# 
  1147  011F                     	;# 
  1148  011F                     	;# 
  1149  011F                     	;# 
  1150  011F                     	;# 
  1151  011F                     	;# 
  1152  018C                     	;# 
  1153  018D                     	;# 
  1154  018E                     	;# 
  1155  018F                     	;# 
  1156  0190                     	;# 
  1157  0191                     	;# 
  1158  0192                     	;# 
  1159  0196                     	;# 
  1160  0197                     	;# 
  1161  0198                     	;# 
  1162  0199                     	;# 
  1163  019A                     	;# 
  1164  019B                     	;# 
  1165  019C                     	;# 
  1166  020C                     	;# 
  1167  020D                     	;# 
  1168  020E                     	;# 
  1169  020E                     	;# 
  1170  020F                     	;# 
  1171  020F                     	;# 
  1172  0210                     	;# 
  1173  0210                     	;# 
  1174  0211                     	;# 
  1175  0211                     	;# 
  1176  0212                     	;# 
  1177  0213                     	;# 
  1178  0214                     	;# 
  1179  0214                     	;# 
  1180  0215                     	;# 
  1181  0215                     	;# 
  1182  0216                     	;# 
  1183  0216                     	;# 
  1184  0217                     	;# 
  1185  0217                     	;# 
  1186  0218                     	;# 
  1187  0219                     	;# 
  1188  021A                     	;# 
  1189  021A                     	;# 
  1190  021B                     	;# 
  1191  021B                     	;# 
  1192  021C                     	;# 
  1193  021C                     	;# 
  1194  021D                     	;# 
  1195  021D                     	;# 
  1196  021E                     	;# 
  1197  021F                     	;# 
  1198  028C                     	;# 
  1199  028C                     	;# 
  1200  028D                     	;# 
  1201  028D                     	;# 
  1202  028E                     	;# 
  1203  028F                     	;# 
  1204  0290                     	;# 
  1205  0291                     	;# 
  1206  0292                     	;# 
  1207  0292                     	;# 
  1208  0293                     	;# 
  1209  0293                     	;# 
  1210  0294                     	;# 
  1211  0295                     	;# 
  1212  0296                     	;# 
  1213  0297                     	;# 
  1214  0298                     	;# 
  1215  0298                     	;# 
  1216  0299                     	;# 
  1217  0299                     	;# 
  1218  029A                     	;# 
  1219  029B                     	;# 
  1220  029C                     	;# 
  1221  029D                     	;# 
  1222  029F                     	;# 
  1223  030C                     	;# 
  1224  030C                     	;# 
  1225  030D                     	;# 
  1226  030E                     	;# 
  1227  030F                     	;# 
  1228  0310                     	;# 
  1229  0310                     	;# 
  1230  0311                     	;# 
  1231  0312                     	;# 
  1232  0313                     	;# 
  1233  0314                     	;# 
  1234  0314                     	;# 
  1235  0315                     	;# 
  1236  0316                     	;# 
  1237  0317                     	;# 
  1238  0318                     	;# 
  1239  0318                     	;# 
  1240  0319                     	;# 
  1241  031A                     	;# 
  1242  031B                     	;# 
  1243  038C                     	;# 
  1244  038C                     	;# 
  1245  038D                     	;# 
  1246  038E                     	;# 
  1247  0390                     	;# 
  1248  0390                     	;# 
  1249  0391                     	;# 
  1250  0392                     	;# 
  1251  048C                     	;# 
  1252  048C                     	;# 
  1253  048D                     	;# 
  1254  048E                     	;# 
  1255  048F                     	;# 
  1256  048F                     	;# 
  1257  0490                     	;# 
  1258  0491                     	;# 
  1259  0492                     	;# 
  1260  0492                     	;# 
  1261  0493                     	;# 
  1262  0494                     	;# 
  1263  0495                     	;# 
  1264  0495                     	;# 
  1265  0496                     	;# 
  1266  0497                     	;# 
  1267  0498                     	;# 
  1268  0499                     	;# 
  1269  049A                     	;# 
  1270  049B                     	;# 
  1271  049C                     	;# 
  1272  049D                     	;# 
  1273  058C                     	;# 
  1274  058C                     	;# 
  1275  058D                     	;# 
  1276  058E                     	;# 
  1277  058F                     	;# 
  1278  058F                     	;# 
  1279  0590                     	;# 
  1280  0591                     	;# 
  1281  0592                     	;# 
  1282  0593                     	;# 
  1283  059C                     	;# 
  1284  059C                     	;# 
  1285  059D                     	;# 
  1286  059D                     	;# 
  1287  059E                     	;# 
  1288  059F                     	;# 
  1289  060C                     	;# 
  1290  060C                     	;# 
  1291  060D                     	;# 
  1292  060D                     	;# 
  1293  060E                     	;# 
  1294  060F                     	;# 
  1295  0610                     	;# 
  1296  0611                     	;# 
  1297  0612                     	;# 
  1298  0613                     	;# 
  1299  0614                     	;# 
  1300  0616                     	;# 
  1301  0616                     	;# 
  1302  0617                     	;# 
  1303  0617                     	;# 
  1304  0618                     	;# 
  1305  0619                     	;# 
  1306  061A                     	;# 
  1307  061B                     	;# 
  1308  061C                     	;# 
  1309  061D                     	;# 
  1310  061E                     	;# 
  1311  070C                     	;# 
  1312  070D                     	;# 
  1313  070E                     	;# 
  1314  070F                     	;# 
  1315  0710                     	;# 
  1316  0711                     	;# 
  1317  0712                     	;# 
  1318  0713                     	;# 
  1319  0714                     	;# 
  1320  0716                     	;# 
  1321  0717                     	;# 
  1322  0718                     	;# 
  1323  0719                     	;# 
  1324  071A                     	;# 
  1325  071B                     	;# 
  1326  071C                     	;# 
  1327  071D                     	;# 
  1328  071E                     	;# 
  1329  0796                     	;# 
  1330  0797                     	;# 
  1331  0798                     	;# 
  1332  0799                     	;# 
  1333  079A                     	;# 
  1334  079B                     	;# 
  1335  079C                     	;# 
  1336  079D                     	;# 
  1337  080C                     	;# 
  1338  080D                     	;# 
  1339  080E                     	;# 
  1340  080F                     	;# 
  1341  0810                     	;# 
  1342  0811                     	;# 
  1343  0812                     	;# 
  1344  0813                     	;# 
  1345  0814                     	;# 
  1346  081A                     	;# 
  1347  081A                     	;# 
  1348  081B                     	;# 
  1349  081C                     	;# 
  1350  081C                     	;# 
  1351  081D                     	;# 
  1352  081E                     	;# 
  1353  081F                     	;# 
  1354  088C                     	;# 
  1355  088D                     	;# 
  1356  088E                     	;# 
  1357  088F                     	;# 
  1358  0890                     	;# 
  1359  0891                     	;# 
  1360  0892                     	;# 
  1361  0893                     	;# 
  1362  0895                     	;# 
  1363  0896                     	;# 
  1364  0897                     	;# 
  1365  0898                     	;# 
  1366  0899                     	;# 
  1367  089A                     	;# 
  1368  089B                     	;# 
  1369  090C                     	;# 
  1370  090E                     	;# 
  1371  090F                     	;# 
  1372  091F                     	;# 
  1373  098F                     	;# 
  1374  098F                     	;# 
  1375  0990                     	;# 
  1376  0991                     	;# 
  1377  0992                     	;# 
  1378  0993                     	;# 
  1379  0994                     	;# 
  1380  0995                     	;# 
  1381  0996                     	;# 
  1382  0997                     	;# 
  1383  1E0F                     	;# 
  1384  1E10                     	;# 
  1385  1E11                     	;# 
  1386  1E12                     	;# 
  1387  1E13                     	;# 
  1388  1E14                     	;# 
  1389  1E15                     	;# 
  1390  1E16                     	;# 
  1391  1E17                     	;# 
  1392  1E18                     	;# 
  1393  1E19                     	;# 
  1394  1E1A                     	;# 
  1395  1E1B                     	;# 
  1396  1E1C                     	;# 
  1397  1E1D                     	;# 
  1398  1E1E                     	;# 
  1399  1E1F                     	;# 
  1400  1E20                     	;# 
  1401  1E21                     	;# 
  1402  1E22                     	;# 
  1403  1E23                     	;# 
  1404  1E24                     	;# 
  1405  1E25                     	;# 
  1406  1E26                     	;# 
  1407  1E27                     	;# 
  1408  1E28                     	;# 
  1409  1E29                     	;# 
  1410  1E2A                     	;# 
  1411  1E2B                     	;# 
  1412  1E2C                     	;# 
  1413  1E2D                     	;# 
  1414  1E2E                     	;# 
  1415  1E2F                     	;# 
  1416  1E30                     	;# 
  1417  1E31                     	;# 
  1418  1E32                     	;# 
  1419  1E33                     	;# 
  1420  1E34                     	;# 
  1421  1E35                     	;# 
  1422  1E36                     	;# 
  1423  1E37                     	;# 
  1424  1E8F                     	;# 
  1425  1E90                     	;# 
  1426  1E91                     	;# 
  1427  1E92                     	;# 
  1428  1E93                     	;# 
  1429  1E94                     	;# 
  1430  1E95                     	;# 
  1431  1E96                     	;# 
  1432  1E97                     	;# 
  1433  1E9C                     	;# 
  1434  1E9D                     	;# 
  1435  1E9E                     	;# 
  1436  1EA1                     	;# 
  1437  1EA2                     	;# 
  1438  1EA3                     	;# 
  1439  1EA4                     	;# 
  1440  1EA9                     	;# 
  1441  1EAA                     	;# 
  1442  1EB1                     	;# 
  1443  1EB2                     	;# 
  1444  1EB8                     	;# 
  1445  1EB9                     	;# 
  1446  1EBA                     	;# 
  1447  1EBB                     	;# 
  1448  1EBC                     	;# 
  1449  1EBD                     	;# 
  1450  1EBE                     	;# 
  1451  1EC3                     	;# 
  1452  1EC5                     	;# 
  1453  1EC6                     	;# 
  1454  1EC7                     	;# 
  1455  1EC8                     	;# 
  1456  1EC9                     	;# 
  1457  1ECA                     	;# 
  1458  1ECB                     	;# 
  1459  1ECB                     	;# 
  1460  1ECB                     	;# 
  1461  1ECC                     	;# 
  1462  1ECC                     	;# 
  1463  1ECC                     	;# 
  1464  1F10                     	;# 
  1465  1F11                     	;# 
  1466  1F12                     	;# 
  1467  1F14                     	;# 
  1468  1F15                     	;# 
  1469  1F1C                     	;# 
  1470  1F1D                     	;# 
  1471  1F1E                     	;# 
  1472  1F1F                     	;# 
  1473  1F20                     	;# 
  1474  1F21                     	;# 
  1475  1F22                     	;# 
  1476  1F23                     	;# 
  1477  1F24                     	;# 
  1478  1F25                     	;# 
  1479  1F26                     	;# 
  1480  1F27                     	;# 
  1481  1F38                     	;# 
  1482  1F39                     	;# 
  1483  1F3A                     	;# 
  1484  1F3B                     	;# 
  1485  1F3C                     	;# 
  1486  1F3D                     	;# 
  1487  1F3E                     	;# 
  1488  1F3F                     	;# 
  1489  1F43                     	;# 
  1490  1F44                     	;# 
  1491  1F45                     	;# 
  1492  1F46                     	;# 
  1493  1F47                     	;# 
  1494  1F48                     	;# 
  1495  1F49                     	;# 
  1496  1F4A                     	;# 
  1497  1F4E                     	;# 
  1498  1F4F                     	;# 
  1499  1F50                     	;# 
  1500  1F51                     	;# 
  1501  1F52                     	;# 
  1502  1F53                     	;# 
  1503  1F54                     	;# 
  1504  1F55                     	;# 
  1505  1FE4                     	;# 
  1506  1FE5                     	;# 
  1507  1FE6                     	;# 
  1508  1FE7                     	;# 
  1509  1FE8                     	;# 
  1510  1FE8                     	;# 
  1511  1FE9                     	;# 
  1512  1FEA                     	;# 
  1513  1FEB                     	;# 
  1514  1FED                     	;# 
  1515  1FEE                     	;# 
  1516  1FEF                     	;# 
  1517  0000                     	;# 
  1518  0001                     	;# 
  1519  0002                     	;# 
  1520  0003                     	;# 
  1521  0004                     	;# 
  1522  0005                     	;# 
  1523  0006                     	;# 
  1524  0007                     	;# 
  1525  0008                     	;# 
  1526  0009                     	;# 
  1527  000A                     	;# 
  1528  000B                     	;# 
  1529  000C                     	;# 
  1530  000D                     	;# 
  1531  000E                     	;# 
  1532  0012                     	;# 
  1533  0013                     	;# 
  1534  0014                     	;# 
  1535  0018                     	;# 
  1536  0019                     	;# 
  1537  001A                     	;# 
  1538  008C                     	;# 
  1539  008C                     	;# 
  1540  008D                     	;# 
  1541  008E                     	;# 
  1542  008E                     	;# 
  1543  008F                     	;# 
  1544  0090                     	;# 
  1545  0090                     	;# 
  1546  0091                     	;# 
  1547  0092                     	;# 
  1548  0092                     	;# 
  1549  0093                     	;# 
  1550  0094                     	;# 
  1551  0094                     	;# 
  1552  0095                     	;# 
  1553  0096                     	;# 
  1554  0096                     	;# 
  1555  0097                     	;# 
  1556  0098                     	;# 
  1557  0099                     	;# 
  1558  009A                     	;# 
  1559  009B                     	;# 
  1560  009B                     	;# 
  1561  009C                     	;# 
  1562  009D                     	;# 
  1563  009D                     	;# 
  1564  009E                     	;# 
  1565  009F                     	;# 
  1566  010C                     	;# 
  1567  010C                     	;# 
  1568  010D                     	;# 
  1569  010E                     	;# 
  1570  010F                     	;# 
  1571  010F                     	;# 
  1572  0110                     	;# 
  1573  0111                     	;# 
  1574  0112                     	;# 
  1575  0113                     	;# 
  1576  0114                     	;# 
  1577  0115                     	;# 
  1578  0116                     	;# 
  1579  0117                     	;# 
  1580  0118                     	;# 
  1581  0119                     	;# 
  1582  0119                     	;# 
  1583  0119                     	;# 
  1584  011A                     	;# 
  1585  011A                     	;# 
  1586  011A                     	;# 
  1587  011B                     	;# 
  1588  011B                     	;# 
  1589  011B                     	;# 
  1590  011B                     	;# 
  1591  011B                     	;# 
  1592  011C                     	;# 
  1593  011C                     	;# 
  1594  011C                     	;# 
  1595  011D                     	;# 
  1596  011D                     	;# 
  1597  011D                     	;# 
  1598  011E                     	;# 
  1599  011E                     	;# 
  1600  011E                     	;# 
  1601  011F                     	;# 
  1602  011F                     	;# 
  1603  011F                     	;# 
  1604  011F                     	;# 
  1605  011F                     	;# 
  1606  018C                     	;# 
  1607  018D                     	;# 
  1608  018E                     	;# 
  1609  018F                     	;# 
  1610  0190                     	;# 
  1611  0191                     	;# 
  1612  0192                     	;# 
  1613  0196                     	;# 
  1614  0197                     	;# 
  1615  0198                     	;# 
  1616  0199                     	;# 
  1617  019A                     	;# 
  1618  019B                     	;# 
  1619  019C                     	;# 
  1620  020C                     	;# 
  1621  020D                     	;# 
  1622  020E                     	;# 
  1623  020E                     	;# 
  1624  020F                     	;# 
  1625  020F                     	;# 
  1626  0210                     	;# 
  1627  0210                     	;# 
  1628  0211                     	;# 
  1629  0211                     	;# 
  1630  0212                     	;# 
  1631  0213                     	;# 
  1632  0214                     	;# 
  1633  0214                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0216                     	;# 
  1637  0216                     	;# 
  1638  0217                     	;# 
  1639  0217                     	;# 
  1640  0218                     	;# 
  1641  0219                     	;# 
  1642  021A                     	;# 
  1643  021A                     	;# 
  1644  021B                     	;# 
  1645  021B                     	;# 
  1646  021C                     	;# 
  1647  021C                     	;# 
  1648  021D                     	;# 
  1649  021D                     	;# 
  1650  021E                     	;# 
  1651  021F                     	;# 
  1652  028C                     	;# 
  1653  028C                     	;# 
  1654  028D                     	;# 
  1655  028D                     	;# 
  1656  028E                     	;# 
  1657  028F                     	;# 
  1658  0290                     	;# 
  1659  0291                     	;# 
  1660  0292                     	;# 
  1661  0292                     	;# 
  1662  0293                     	;# 
  1663  0293                     	;# 
  1664  0294                     	;# 
  1665  0295                     	;# 
  1666  0296                     	;# 
  1667  0297                     	;# 
  1668  0298                     	;# 
  1669  0298                     	;# 
  1670  0299                     	;# 
  1671  0299                     	;# 
  1672  029A                     	;# 
  1673  029B                     	;# 
  1674  029C                     	;# 
  1675  029D                     	;# 
  1676  029F                     	;# 
  1677  030C                     	;# 
  1678  030C                     	;# 
  1679  030D                     	;# 
  1680  030E                     	;# 
  1681  030F                     	;# 
  1682  0310                     	;# 
  1683  0310                     	;# 
  1684  0311                     	;# 
  1685  0312                     	;# 
  1686  0313                     	;# 
  1687  0314                     	;# 
  1688  0314                     	;# 
  1689  0315                     	;# 
  1690  0316                     	;# 
  1691  0317                     	;# 
  1692  0318                     	;# 
  1693  0318                     	;# 
  1694  0319                     	;# 
  1695  031A                     	;# 
  1696  031B                     	;# 
  1697  038C                     	;# 
  1698  038C                     	;# 
  1699  038D                     	;# 
  1700  038E                     	;# 
  1701  0390                     	;# 
  1702  0390                     	;# 
  1703  0391                     	;# 
  1704  0392                     	;# 
  1705  048C                     	;# 
  1706  048C                     	;# 
  1707  048D                     	;# 
  1708  048E                     	;# 
  1709  048F                     	;# 
  1710  048F                     	;# 
  1711  0490                     	;# 
  1712  0491                     	;# 
  1713  0492                     	;# 
  1714  0492                     	;# 
  1715  0493                     	;# 
  1716  0494                     	;# 
  1717  0495                     	;# 
  1718  0495                     	;# 
  1719  0496                     	;# 
  1720  0497                     	;# 
  1721  0498                     	;# 
  1722  0499                     	;# 
  1723  049A                     	;# 
  1724  049B                     	;# 
  1725  049C                     	;# 
  1726  049D                     	;# 
  1727  058C                     	;# 
  1728  058C                     	;# 
  1729  058D                     	;# 
  1730  058E                     	;# 
  1731  058F                     	;# 
  1732  058F                     	;# 
  1733  0590                     	;# 
  1734  0591                     	;# 
  1735  0592                     	;# 
  1736  0593                     	;# 
  1737  059C                     	;# 
  1738  059C                     	;# 
  1739  059D                     	;# 
  1740  059D                     	;# 
  1741  059E                     	;# 
  1742  059F                     	;# 
  1743  060C                     	;# 
  1744  060C                     	;# 
  1745  060D                     	;# 
  1746  060D                     	;# 
  1747  060E                     	;# 
  1748  060F                     	;# 
  1749  0610                     	;# 
  1750  0611                     	;# 
  1751  0612                     	;# 
  1752  0613                     	;# 
  1753  0614                     	;# 
  1754  0616                     	;# 
  1755  0616                     	;# 
  1756  0617                     	;# 
  1757  0617                     	;# 
  1758  0618                     	;# 
  1759  0619                     	;# 
  1760  061A                     	;# 
  1761  061B                     	;# 
  1762  061C                     	;# 
  1763  061D                     	;# 
  1764  061E                     	;# 
  1765  070C                     	;# 
  1766  070D                     	;# 
  1767  070E                     	;# 
  1768  070F                     	;# 
  1769  0710                     	;# 
  1770  0711                     	;# 
  1771  0712                     	;# 
  1772  0713                     	;# 
  1773  0714                     	;# 
  1774  0716                     	;# 
  1775  0717                     	;# 
  1776  0718                     	;# 
  1777  0719                     	;# 
  1778  071A                     	;# 
  1779  071B                     	;# 
  1780  071C                     	;# 
  1781  071D                     	;# 
  1782  071E                     	;# 
  1783  0796                     	;# 
  1784  0797                     	;# 
  1785  0798                     	;# 
  1786  0799                     	;# 
  1787  079A                     	;# 
  1788  079B                     	;# 
  1789  079C                     	;# 
  1790  079D                     	;# 
  1791  080C                     	;# 
  1792  080D                     	;# 
  1793  080E                     	;# 
  1794  080F                     	;# 
  1795  0810                     	;# 
  1796  0811                     	;# 
  1797  0812                     	;# 
  1798  0813                     	;# 
  1799  0814                     	;# 
  1800  081A                     	;# 
  1801  081A                     	;# 
  1802  081B                     	;# 
  1803  081C                     	;# 
  1804  081C                     	;# 
  1805  081D                     	;# 
  1806  081E                     	;# 
  1807  081F                     	;# 
  1808  088C                     	;# 
  1809  088D                     	;# 
  1810  088E                     	;# 
  1811  088F                     	;# 
  1812  0890                     	;# 
  1813  0891                     	;# 
  1814  0892                     	;# 
  1815  0893                     	;# 
  1816  0895                     	;# 
  1817  0896                     	;# 
  1818  0897                     	;# 
  1819  0898                     	;# 
  1820  0899                     	;# 
  1821  089A                     	;# 
  1822  089B                     	;# 
  1823  090C                     	;# 
  1824  090E                     	;# 
  1825  090F                     	;# 
  1826  091F                     	;# 
  1827  098F                     	;# 
  1828  098F                     	;# 
  1829  0990                     	;# 
  1830  0991                     	;# 
  1831  0992                     	;# 
  1832  0993                     	;# 
  1833  0994                     	;# 
  1834  0995                     	;# 
  1835  0996                     	;# 
  1836  0997                     	;# 
  1837  1E0F                     	;# 
  1838  1E10                     	;# 
  1839  1E11                     	;# 
  1840  1E12                     	;# 
  1841  1E13                     	;# 
  1842  1E14                     	;# 
  1843  1E15                     	;# 
  1844  1E16                     	;# 
  1845  1E17                     	;# 
  1846  1E18                     	;# 
  1847  1E19                     	;# 
  1848  1E1A                     	;# 
  1849  1E1B                     	;# 
  1850  1E1C                     	;# 
  1851  1E1D                     	;# 
  1852  1E1E                     	;# 
  1853  1E1F                     	;# 
  1854  1E20                     	;# 
  1855  1E21                     	;# 
  1856  1E22                     	;# 
  1857  1E23                     	;# 
  1858  1E24                     	;# 
  1859  1E25                     	;# 
  1860  1E26                     	;# 
  1861  1E27                     	;# 
  1862  1E28                     	;# 
  1863  1E29                     	;# 
  1864  1E2A                     	;# 
  1865  1E2B                     	;# 
  1866  1E2C                     	;# 
  1867  1E2D                     	;# 
  1868  1E2E                     	;# 
  1869  1E2F                     	;# 
  1870  1E30                     	;# 
  1871  1E31                     	;# 
  1872  1E32                     	;# 
  1873  1E33                     	;# 
  1874  1E34                     	;# 
  1875  1E35                     	;# 
  1876  1E36                     	;# 
  1877  1E37                     	;# 
  1878  1E8F                     	;# 
  1879  1E90                     	;# 
  1880  1E91                     	;# 
  1881  1E92                     	;# 
  1882  1E93                     	;# 
  1883  1E94                     	;# 
  1884  1E95                     	;# 
  1885  1E96                     	;# 
  1886  1E97                     	;# 
  1887  1E9C                     	;# 
  1888  1E9D                     	;# 
  1889  1E9E                     	;# 
  1890  1EA1                     	;# 
  1891  1EA2                     	;# 
  1892  1EA3                     	;# 
  1893  1EA4                     	;# 
  1894  1EA9                     	;# 
  1895  1EAA                     	;# 
  1896  1EB1                     	;# 
  1897  1EB2                     	;# 
  1898  1EB8                     	;# 
  1899  1EB9                     	;# 
  1900  1EBA                     	;# 
  1901  1EBB                     	;# 
  1902  1EBC                     	;# 
  1903  1EBD                     	;# 
  1904  1EBE                     	;# 
  1905  1EC3                     	;# 
  1906  1EC5                     	;# 
  1907  1EC6                     	;# 
  1908  1EC7                     	;# 
  1909  1EC8                     	;# 
  1910  1EC9                     	;# 
  1911  1ECA                     	;# 
  1912  1ECB                     	;# 
  1913  1ECB                     	;# 
  1914  1ECB                     	;# 
  1915  1ECC                     	;# 
  1916  1ECC                     	;# 
  1917  1ECC                     	;# 
  1918  1F10                     	;# 
  1919  1F11                     	;# 
  1920  1F12                     	;# 
  1921  1F14                     	;# 
  1922  1F15                     	;# 
  1923  1F1C                     	;# 
  1924  1F1D                     	;# 
  1925  1F1E                     	;# 
  1926  1F1F                     	;# 
  1927  1F20                     	;# 
  1928  1F21                     	;# 
  1929  1F22                     	;# 
  1930  1F23                     	;# 
  1931  1F24                     	;# 
  1932  1F25                     	;# 
  1933  1F26                     	;# 
  1934  1F27                     	;# 
  1935  1F38                     	;# 
  1936  1F39                     	;# 
  1937  1F3A                     	;# 
  1938  1F3B                     	;# 
  1939  1F3C                     	;# 
  1940  1F3D                     	;# 
  1941  1F3E                     	;# 
  1942  1F3F                     	;# 
  1943  1F43                     	;# 
  1944  1F44                     	;# 
  1945  1F45                     	;# 
  1946  1F46                     	;# 
  1947  1F47                     	;# 
  1948  1F48                     	;# 
  1949  1F49                     	;# 
  1950  1F4A                     	;# 
  1951  1F4E                     	;# 
  1952  1F4F                     	;# 
  1953  1F50                     	;# 
  1954  1F51                     	;# 
  1955  1F52                     	;# 
  1956  1F53                     	;# 
  1957  1F54                     	;# 
  1958  1F55                     	;# 
  1959  1FE4                     	;# 
  1960  1FE5                     	;# 
  1961  1FE6                     	;# 
  1962  1FE7                     	;# 
  1963  1FE8                     	;# 
  1964  1FE8                     	;# 
  1965  1FE9                     	;# 
  1966  1FEA                     	;# 
  1967  1FEB                     	;# 
  1968  1FED                     	;# 
  1969  1FEE                     	;# 
  1970  1FEF                     	;# 
  1971  0000                     	;# 
  1972  0001                     	;# 
  1973  0002                     	;# 
  1974  0003                     	;# 
  1975  0004                     	;# 
  1976  0005                     	;# 
  1977  0006                     	;# 
  1978  0007                     	;# 
  1979  0008                     	;# 
  1980  0009                     	;# 
  1981  000A                     	;# 
  1982  000B                     	;# 
  1983  000C                     	;# 
  1984  000D                     	;# 
  1985  000E                     	;# 
  1986  0012                     	;# 
  1987  0013                     	;# 
  1988  0014                     	;# 
  1989  0018                     	;# 
  1990  0019                     	;# 
  1991  001A                     	;# 
  1992  008C                     	;# 
  1993  008C                     	;# 
  1994  008D                     	;# 
  1995  008E                     	;# 
  1996  008E                     	;# 
  1997  008F                     	;# 
  1998  0090                     	;# 
  1999  0090                     	;# 
  2000  0091                     	;# 
  2001  0092                     	;# 
  2002  0092                     	;# 
  2003  0093                     	;# 
  2004  0094                     	;# 
  2005  0094                     	;# 
  2006  0095                     	;# 
  2007  0096                     	;# 
  2008  0096                     	;# 
  2009  0097                     	;# 
  2010  0098                     	;# 
  2011  0099                     	;# 
  2012  009A                     	;# 
  2013  009B                     	;# 
  2014  009B                     	;# 
  2015  009C                     	;# 
  2016  009D                     	;# 
  2017  009D                     	;# 
  2018  009E                     	;# 
  2019  009F                     	;# 
  2020  010C                     	;# 
  2021  010C                     	;# 
  2022  010D                     	;# 
  2023  010E                     	;# 
  2024  010F                     	;# 
  2025  010F                     	;# 
  2026  0110                     	;# 
  2027  0111                     	;# 
  2028  0112                     	;# 
  2029  0113                     	;# 
  2030  0114                     	;# 
  2031  0115                     	;# 
  2032  0116                     	;# 
  2033  0117                     	;# 
  2034  0118                     	;# 
  2035  0119                     	;# 
  2036  0119                     	;# 
  2037  0119                     	;# 
  2038  011A                     	;# 
  2039  011A                     	;# 
  2040  011A                     	;# 
  2041  011B                     	;# 
  2042  011B                     	;# 
  2043  011B                     	;# 
  2044  011B                     	;# 
  2045  011B                     	;# 
  2046  011C                     	;# 
  2047  011C                     	;# 
  2048  011C                     	;# 
  2049  011D                     	;# 
  2050  011D                     	;# 
  2051  011D                     	;# 
  2052  011E                     	;# 
  2053  011E                     	;# 
  2054  011E                     	;# 
  2055  011F                     	;# 
  2056  011F                     	;# 
  2057  011F                     	;# 
  2058  011F                     	;# 
  2059  011F                     	;# 
  2060  018C                     	;# 
  2061  018D                     	;# 
  2062  018E                     	;# 
  2063  018F                     	;# 
  2064  0190                     	;# 
  2065  0191                     	;# 
  2066  0192                     	;# 
  2067  0196                     	;# 
  2068  0197                     	;# 
  2069  0198                     	;# 
  2070  0199                     	;# 
  2071  019A                     	;# 
  2072  019B                     	;# 
  2073  019C                     	;# 
  2074  020C                     	;# 
  2075  020D                     	;# 
  2076  020E                     	;# 
  2077  020E                     	;# 
  2078  020F                     	;# 
  2079  020F                     	;# 
  2080  0210                     	;# 
  2081  0210                     	;# 
  2082  0211                     	;# 
  2083  0211                     	;# 
  2084  0212                     	;# 
  2085  0213                     	;# 
  2086  0214                     	;# 
  2087  0214                     	;# 
  2088  0215                     	;# 
  2089  0215                     	;# 
  2090  0216                     	;# 
  2091  0216                     	;# 
  2092  0217                     	;# 
  2093  0217                     	;# 
  2094  0218                     	;# 
  2095  0219                     	;# 
  2096  021A                     	;# 
  2097  021A                     	;# 
  2098  021B                     	;# 
  2099  021B                     	;# 
  2100  021C                     	;# 
  2101  021C                     	;# 
  2102  021D                     	;# 
  2103  021D                     	;# 
  2104  021E                     	;# 
  2105  021F                     	;# 
  2106  028C                     	;# 
  2107  028C                     	;# 
  2108  028D                     	;# 
  2109  028D                     	;# 
  2110  028E                     	;# 
  2111  028F                     	;# 
  2112  0290                     	;# 
  2113  0291                     	;# 
  2114  0292                     	;# 
  2115  0292                     	;# 
  2116  0293                     	;# 
  2117  0293                     	;# 
  2118  0294                     	;# 
  2119  0295                     	;# 
  2120  0296                     	;# 
  2121  0297                     	;# 
  2122  0298                     	;# 
  2123  0298                     	;# 
  2124  0299                     	;# 
  2125  0299                     	;# 
  2126  029A                     	;# 
  2127  029B                     	;# 
  2128  029C                     	;# 
  2129  029D                     	;# 
  2130  029F                     	;# 
  2131  030C                     	;# 
  2132  030C                     	;# 
  2133  030D                     	;# 
  2134  030E                     	;# 
  2135  030F                     	;# 
  2136  0310                     	;# 
  2137  0310                     	;# 
  2138  0311                     	;# 
  2139  0312                     	;# 
  2140  0313                     	;# 
  2141  0314                     	;# 
  2142  0314                     	;# 
  2143  0315                     	;# 
  2144  0316                     	;# 
  2145  0317                     	;# 
  2146  0318                     	;# 
  2147  0318                     	;# 
  2148  0319                     	;# 
  2149  031A                     	;# 
  2150  031B                     	;# 
  2151  038C                     	;# 
  2152  038C                     	;# 
  2153  038D                     	;# 
  2154  038E                     	;# 
  2155  0390                     	;# 
  2156  0390                     	;# 
  2157  0391                     	;# 
  2158  0392                     	;# 
  2159  048C                     	;# 
  2160  048C                     	;# 
  2161  048D                     	;# 
  2162  048E                     	;# 
  2163  048F                     	;# 
  2164  048F                     	;# 
  2165  0490                     	;# 
  2166  0491                     	;# 
  2167  0492                     	;# 
  2168  0492                     	;# 
  2169  0493                     	;# 
  2170  0494                     	;# 
  2171  0495                     	;# 
  2172  0495                     	;# 
  2173  0496                     	;# 
  2174  0497                     	;# 
  2175  0498                     	;# 
  2176  0499                     	;# 
  2177  049A                     	;# 
  2178  049B                     	;# 
  2179  049C                     	;# 
  2180  049D                     	;# 
  2181  058C                     	;# 
  2182  058C                     	;# 
  2183  058D                     	;# 
  2184  058E                     	;# 
  2185  058F                     	;# 
  2186  058F                     	;# 
  2187  0590                     	;# 
  2188  0591                     	;# 
  2189  0592                     	;# 
  2190  0593                     	;# 
  2191  059C                     	;# 
  2192  059C                     	;# 
  2193  059D                     	;# 
  2194  059D                     	;# 
  2195  059E                     	;# 
  2196  059F                     	;# 
  2197  060C                     	;# 
  2198  060C                     	;# 
  2199  060D                     	;# 
  2200  060D                     	;# 
  2201  060E                     	;# 
  2202  060F                     	;# 
  2203  0610                     	;# 
  2204  0611                     	;# 
  2205  0612                     	;# 
  2206  0613                     	;# 
  2207  0614                     	;# 
  2208  0616                     	;# 
  2209  0616                     	;# 
  2210  0617                     	;# 
  2211  0617                     	;# 
  2212  0618                     	;# 
  2213  0619                     	;# 
  2214  061A                     	;# 
  2215  061B                     	;# 
  2216  061C                     	;# 
  2217  061D                     	;# 
  2218  061E                     	;# 
  2219  070C                     	;# 
  2220  070D                     	;# 
  2221  070E                     	;# 
  2222  070F                     	;# 
  2223  0710                     	;# 
  2224  0711                     	;# 
  2225  0712                     	;# 
  2226  0713                     	;# 
  2227  0714                     	;# 
  2228  0716                     	;# 
  2229  0717                     	;# 
  2230  0718                     	;# 
  2231  0719                     	;# 
  2232  071A                     	;# 
  2233  071B                     	;# 
  2234  071C                     	;# 
  2235  071D                     	;# 
  2236  071E                     	;# 
  2237  0796                     	;# 
  2238  0797                     	;# 
  2239  0798                     	;# 
  2240  0799                     	;# 
  2241  079A                     	;# 
  2242  079B                     	;# 
  2243  079C                     	;# 
  2244  079D                     	;# 
  2245  080C                     	;# 
  2246  080D                     	;# 
  2247  080E                     	;# 
  2248  080F                     	;# 
  2249  0810                     	;# 
  2250  0811                     	;# 
  2251  0812                     	;# 
  2252  0813                     	;# 
  2253  0814                     	;# 
  2254  081A                     	;# 
  2255  081A                     	;# 
  2256  081B                     	;# 
  2257  081C                     	;# 
  2258  081C                     	;# 
  2259  081D                     	;# 
  2260  081E                     	;# 
  2261  081F                     	;# 
  2262  088C                     	;# 
  2263  088D                     	;# 
  2264  088E                     	;# 
  2265  088F                     	;# 
  2266  0890                     	;# 
  2267  0891                     	;# 
  2268  0892                     	;# 
  2269  0893                     	;# 
  2270  0895                     	;# 
  2271  0896                     	;# 
  2272  0897                     	;# 
  2273  0898                     	;# 
  2274  0899                     	;# 
  2275  089A                     	;# 
  2276  089B                     	;# 
  2277  090C                     	;# 
  2278  090E                     	;# 
  2279  090F                     	;# 
  2280  091F                     	;# 
  2281  098F                     	;# 
  2282  098F                     	;# 
  2283  0990                     	;# 
  2284  0991                     	;# 
  2285  0992                     	;# 
  2286  0993                     	;# 
  2287  0994                     	;# 
  2288  0995                     	;# 
  2289  0996                     	;# 
  2290  0997                     	;# 
  2291  1E0F                     	;# 
  2292  1E10                     	;# 
  2293  1E11                     	;# 
  2294  1E12                     	;# 
  2295  1E13                     	;# 
  2296  1E14                     	;# 
  2297  1E15                     	;# 
  2298  1E16                     	;# 
  2299  1E17                     	;# 
  2300  1E18                     	;# 
  2301  1E19                     	;# 
  2302  1E1A                     	;# 
  2303  1E1B                     	;# 
  2304  1E1C                     	;# 
  2305  1E1D                     	;# 
  2306  1E1E                     	;# 
  2307  1E1F                     	;# 
  2308  1E20                     	;# 
  2309  1E21                     	;# 
  2310  1E22                     	;# 
  2311  1E23                     	;# 
  2312  1E24                     	;# 
  2313  1E25                     	;# 
  2314  1E26                     	;# 
  2315  1E27                     	;# 
  2316  1E28                     	;# 
  2317  1E29                     	;# 
  2318  1E2A                     	;# 
  2319  1E2B                     	;# 
  2320  1E2C                     	;# 
  2321  1E2D                     	;# 
  2322  1E2E                     	;# 
  2323  1E2F                     	;# 
  2324  1E30                     	;# 
  2325  1E31                     	;# 
  2326  1E32                     	;# 
  2327  1E33                     	;# 
  2328  1E34                     	;# 
  2329  1E35                     	;# 
  2330  1E36                     	;# 
  2331  1E37                     	;# 
  2332  1E8F                     	;# 
  2333  1E90                     	;# 
  2334  1E91                     	;# 
  2335  1E92                     	;# 
  2336  1E93                     	;# 
  2337  1E94                     	;# 
  2338  1E95                     	;# 
  2339  1E96                     	;# 
  2340  1E97                     	;# 
  2341  1E9C                     	;# 
  2342  1E9D                     	;# 
  2343  1E9E                     	;# 
  2344  1EA1                     	;# 
  2345  1EA2                     	;# 
  2346  1EA3                     	;# 
  2347  1EA4                     	;# 
  2348  1EA9                     	;# 
  2349  1EAA                     	;# 
  2350  1EB1                     	;# 
  2351  1EB2                     	;# 
  2352  1EB8                     	;# 
  2353  1EB9                     	;# 
  2354  1EBA                     	;# 
  2355  1EBB                     	;# 
  2356  1EBC                     	;# 
  2357  1EBD                     	;# 
  2358  1EBE                     	;# 
  2359  1EC3                     	;# 
  2360  1EC5                     	;# 
  2361  1EC6                     	;# 
  2362  1EC7                     	;# 
  2363  1EC8                     	;# 
  2364  1EC9                     	;# 
  2365  1ECA                     	;# 
  2366  1ECB                     	;# 
  2367  1ECB                     	;# 
  2368  1ECB                     	;# 
  2369  1ECC                     	;# 
  2370  1ECC                     	;# 
  2371  1ECC                     	;# 
  2372  1F10                     	;# 
  2373  1F11                     	;# 
  2374  1F12                     	;# 
  2375  1F14                     	;# 
  2376  1F15                     	;# 
  2377  1F1C                     	;# 
  2378  1F1D                     	;# 
  2379  1F1E                     	;# 
  2380  1F1F                     	;# 
  2381  1F20                     	;# 
  2382  1F21                     	;# 
  2383  1F22                     	;# 
  2384  1F23                     	;# 
  2385  1F24                     	;# 
  2386  1F25                     	;# 
  2387  1F26                     	;# 
  2388  1F27                     	;# 
  2389  1F38                     	;# 
  2390  1F39                     	;# 
  2391  1F3A                     	;# 
  2392  1F3B                     	;# 
  2393  1F3C                     	;# 
  2394  1F3D                     	;# 
  2395  1F3E                     	;# 
  2396  1F3F                     	;# 
  2397  1F43                     	;# 
  2398  1F44                     	;# 
  2399  1F45                     	;# 
  2400  1F46                     	;# 
  2401  1F47                     	;# 
  2402  1F48                     	;# 
  2403  1F49                     	;# 
  2404  1F4A                     	;# 
  2405  1F4E                     	;# 
  2406  1F4F                     	;# 
  2407  1F50                     	;# 
  2408  1F51                     	;# 
  2409  1F52                     	;# 
  2410  1F53                     	;# 
  2411  1F54                     	;# 
  2412  1F55                     	;# 
  2413  1FE4                     	;# 
  2414  1FE5                     	;# 
  2415  1FE6                     	;# 
  2416  1FE7                     	;# 
  2417  1FE8                     	;# 
  2418  1FE8                     	;# 
  2419  1FE9                     	;# 
  2420  1FEA                     	;# 
  2421  1FEB                     	;# 
  2422  1FED                     	;# 
  2423  1FEE                     	;# 
  2424  1FEF                     	;# 
  2425  0000                     	;# 
  2426  0001                     	;# 
  2427  0002                     	;# 
  2428  0003                     	;# 
  2429  0004                     	;# 
  2430  0005                     	;# 
  2431  0006                     	;# 
  2432  0007                     	;# 
  2433  0008                     	;# 
  2434  0009                     	;# 
  2435  000A                     	;# 
  2436  000B                     	;# 
  2437  000C                     	;# 
  2438  000D                     	;# 
  2439  000E                     	;# 
  2440  0012                     	;# 
  2441  0013                     	;# 
  2442  0014                     	;# 
  2443  0018                     	;# 
  2444  0019                     	;# 
  2445  001A                     	;# 
  2446  008C                     	;# 
  2447  008C                     	;# 
  2448  008D                     	;# 
  2449  008E                     	;# 
  2450  008E                     	;# 
  2451  008F                     	;# 
  2452  0090                     	;# 
  2453  0090                     	;# 
  2454  0091                     	;# 
  2455  0092                     	;# 
  2456  0092                     	;# 
  2457  0093                     	;# 
  2458  0094                     	;# 
  2459  0094                     	;# 
  2460  0095                     	;# 
  2461  0096                     	;# 
  2462  0096                     	;# 
  2463  0097                     	;# 
  2464  0098                     	;# 
  2465  0099                     	;# 
  2466  009A                     	;# 
  2467  009B                     	;# 
  2468  009B                     	;# 
  2469  009C                     	;# 
  2470  009D                     	;# 
  2471  009D                     	;# 
  2472  009E                     	;# 
  2473  009F                     	;# 
  2474  010C                     	;# 
  2475  010C                     	;# 
  2476  010D                     	;# 
  2477  010E                     	;# 
  2478  010F                     	;# 
  2479  010F                     	;# 
  2480  0110                     	;# 
  2481  0111                     	;# 
  2482  0112                     	;# 
  2483  0113                     	;# 
  2484  0114                     	;# 
  2485  0115                     	;# 
  2486  0116                     	;# 
  2487  0117                     	;# 
  2488  0118                     	;# 
  2489  0119                     	;# 
  2490  0119                     	;# 
  2491  0119                     	;# 
  2492  011A                     	;# 
  2493  011A                     	;# 
  2494  011A                     	;# 
  2495  011B                     	;# 
  2496  011B                     	;# 
  2497  011B                     	;# 
  2498  011B                     	;# 
  2499  011B                     	;# 
  2500  011C                     	;# 
  2501  011C                     	;# 
  2502  011C                     	;# 
  2503  011D                     	;# 
  2504  011D                     	;# 
  2505  011D                     	;# 
  2506  011E                     	;# 
  2507  011E                     	;# 
  2508  011E                     	;# 
  2509  011F                     	;# 
  2510  011F                     	;# 
  2511  011F                     	;# 
  2512  011F                     	;# 
  2513  011F                     	;# 
  2514  018C                     	;# 
  2515  018D                     	;# 
  2516  018E                     	;# 
  2517  018F                     	;# 
  2518  0190                     	;# 
  2519  0191                     	;# 
  2520  0192                     	;# 
  2521  0196                     	;# 
  2522  0197                     	;# 
  2523  0198                     	;# 
  2524  0199                     	;# 
  2525  019A                     	;# 
  2526  019B                     	;# 
  2527  019C                     	;# 
  2528  020C                     	;# 
  2529  020D                     	;# 
  2530  020E                     	;# 
  2531  020E                     	;# 
  2532  020F                     	;# 
  2533  020F                     	;# 
  2534  0210                     	;# 
  2535  0210                     	;# 
  2536  0211                     	;# 
  2537  0211                     	;# 
  2538  0212                     	;# 
  2539  0213                     	;# 
  2540  0214                     	;# 
  2541  0214                     	;# 
  2542  0215                     	;# 
  2543  0215                     	;# 
  2544  0216                     	;# 
  2545  0216                     	;# 
  2546  0217                     	;# 
  2547  0217                     	;# 
  2548  0218                     	;# 
  2549  0219                     	;# 
  2550  021A                     	;# 
  2551  021A                     	;# 
  2552  021B                     	;# 
  2553  021B                     	;# 
  2554  021C                     	;# 
  2555  021C                     	;# 
  2556  021D                     	;# 
  2557  021D                     	;# 
  2558  021E                     	;# 
  2559  021F                     	;# 
  2560  028C                     	;# 
  2561  028C                     	;# 
  2562  028D                     	;# 
  2563  028D                     	;# 
  2564  028E                     	;# 
  2565  028F                     	;# 
  2566  0290                     	;# 
  2567  0291                     	;# 
  2568  0292                     	;# 
  2569  0292                     	;# 
  2570  0293                     	;# 
  2571  0293                     	;# 
  2572  0294                     	;# 
  2573  0295                     	;# 
  2574  0296                     	;# 
  2575  0297                     	;# 
  2576  0298                     	;# 
  2577  0298                     	;# 
  2578  0299                     	;# 
  2579  0299                     	;# 
  2580  029A                     	;# 
  2581  029B                     	;# 
  2582  029C                     	;# 
  2583  029D                     	;# 
  2584  029F                     	;# 
  2585  030C                     	;# 
  2586  030C                     	;# 
  2587  030D                     	;# 
  2588  030E                     	;# 
  2589  030F                     	;# 
  2590  0310                     	;# 
  2591  0310                     	;# 
  2592  0311                     	;# 
  2593  0312                     	;# 
  2594  0313                     	;# 
  2595  0314                     	;# 
  2596  0314                     	;# 
  2597  0315                     	;# 
  2598  0316                     	;# 
  2599  0317                     	;# 
  2600  0318                     	;# 
  2601  0318                     	;# 
  2602  0319                     	;# 
  2603  031A                     	;# 
  2604  031B                     	;# 
  2605  038C                     	;# 
  2606  038C                     	;# 
  2607  038D                     	;# 
  2608  038E                     	;# 
  2609  0390                     	;# 
  2610  0390                     	;# 
  2611  0391                     	;# 
  2612  0392                     	;# 
  2613  048C                     	;# 
  2614  048C                     	;# 
  2615  048D                     	;# 
  2616  048E                     	;# 
  2617  048F                     	;# 
  2618  048F                     	;# 
  2619  0490                     	;# 
  2620  0491                     	;# 
  2621  0492                     	;# 
  2622  0492                     	;# 
  2623  0493                     	;# 
  2624  0494                     	;# 
  2625  0495                     	;# 
  2626  0495                     	;# 
  2627  0496                     	;# 
  2628  0497                     	;# 
  2629  0498                     	;# 
  2630  0499                     	;# 
  2631  049A                     	;# 
  2632  049B                     	;# 
  2633  049C                     	;# 
  2634  049D                     	;# 
  2635  058C                     	;# 
  2636  058C                     	;# 
  2637  058D                     	;# 
  2638  058E                     	;# 
  2639  058F                     	;# 
  2640  058F                     	;# 
  2641  0590                     	;# 
  2642  0591                     	;# 
  2643  0592                     	;# 
  2644  0593                     	;# 
  2645  059C                     	;# 
  2646  059C                     	;# 
  2647  059D                     	;# 
  2648  059D                     	;# 
  2649  059E                     	;# 
  2650  059F                     	;# 
  2651  060C                     	;# 
  2652  060C                     	;# 
  2653  060D                     	;# 
  2654  060D                     	;# 
  2655  060E                     	;# 
  2656  060F                     	;# 
  2657  0610                     	;# 
  2658  0611                     	;# 
  2659  0612                     	;# 
  2660  0613                     	;# 
  2661  0614                     	;# 
  2662  0616                     	;# 
  2663  0616                     	;# 
  2664  0617                     	;# 
  2665  0617                     	;# 
  2666  0618                     	;# 
  2667  0619                     	;# 
  2668  061A                     	;# 
  2669  061B                     	;# 
  2670  061C                     	;# 
  2671  061D                     	;# 
  2672  061E                     	;# 
  2673  070C                     	;# 
  2674  070D                     	;# 
  2675  070E                     	;# 
  2676  070F                     	;# 
  2677  0710                     	;# 
  2678  0711                     	;# 
  2679  0712                     	;# 
  2680  0713                     	;# 
  2681  0714                     	;# 
  2682  0716                     	;# 
  2683  0717                     	;# 
  2684  0718                     	;# 
  2685  0719                     	;# 
  2686  071A                     	;# 
  2687  071B                     	;# 
  2688  071C                     	;# 
  2689  071D                     	;# 
  2690  071E                     	;# 
  2691  0796                     	;# 
  2692  0797                     	;# 
  2693  0798                     	;# 
  2694  0799                     	;# 
  2695  079A                     	;# 
  2696  079B                     	;# 
  2697  079C                     	;# 
  2698  079D                     	;# 
  2699  080C                     	;# 
  2700  080D                     	;# 
  2701  080E                     	;# 
  2702  080F                     	;# 
  2703  0810                     	;# 
  2704  0811                     	;# 
  2705  0812                     	;# 
  2706  0813                     	;# 
  2707  0814                     	;# 
  2708  081A                     	;# 
  2709  081A                     	;# 
  2710  081B                     	;# 
  2711  081C                     	;# 
  2712  081C                     	;# 
  2713  081D                     	;# 
  2714  081E                     	;# 
  2715  081F                     	;# 
  2716  088C                     	;# 
  2717  088D                     	;# 
  2718  088E                     	;# 
  2719  088F                     	;# 
  2720  0890                     	;# 
  2721  0891                     	;# 
  2722  0892                     	;# 
  2723  0893                     	;# 
  2724  0895                     	;# 
  2725  0896                     	;# 
  2726  0897                     	;# 
  2727  0898                     	;# 
  2728  0899                     	;# 
  2729  089A                     	;# 
  2730  089B                     	;# 
  2731  090C                     	;# 
  2732  090E                     	;# 
  2733  090F                     	;# 
  2734  091F                     	;# 
  2735  098F                     	;# 
  2736  098F                     	;# 
  2737  0990                     	;# 
  2738  0991                     	;# 
  2739  0992                     	;# 
  2740  0993                     	;# 
  2741  0994                     	;# 
  2742  0995                     	;# 
  2743  0996                     	;# 
  2744  0997                     	;# 
  2745  1E0F                     	;# 
  2746  1E10                     	;# 
  2747  1E11                     	;# 
  2748  1E12                     	;# 
  2749  1E13                     	;# 
  2750  1E14                     	;# 
  2751  1E15                     	;# 
  2752  1E16                     	;# 
  2753  1E17                     	;# 
  2754  1E18                     	;# 
  2755  1E19                     	;# 
  2756  1E1A                     	;# 
  2757  1E1B                     	;# 
  2758  1E1C                     	;# 
  2759  1E1D                     	;# 
  2760  1E1E                     	;# 
  2761  1E1F                     	;# 
  2762  1E20                     	;# 
  2763  1E21                     	;# 
  2764  1E22                     	;# 
  2765  1E23                     	;# 
  2766  1E24                     	;# 
  2767  1E25                     	;# 
  2768  1E26                     	;# 
  2769  1E27                     	;# 
  2770  1E28                     	;# 
  2771  1E29                     	;# 
  2772  1E2A                     	;# 
  2773  1E2B                     	;# 
  2774  1E2C                     	;# 
  2775  1E2D                     	;# 
  2776  1E2E                     	;# 
  2777  1E2F                     	;# 
  2778  1E30                     	;# 
  2779  1E31                     	;# 
  2780  1E32                     	;# 
  2781  1E33                     	;# 
  2782  1E34                     	;# 
  2783  1E35                     	;# 
  2784  1E36                     	;# 
  2785  1E37                     	;# 
  2786  1E8F                     	;# 
  2787  1E90                     	;# 
  2788  1E91                     	;# 
  2789  1E92                     	;# 
  2790  1E93                     	;# 
  2791  1E94                     	;# 
  2792  1E95                     	;# 
  2793  1E96                     	;# 
  2794  1E97                     	;# 
  2795  1E9C                     	;# 
  2796  1E9D                     	;# 
  2797  1E9E                     	;# 
  2798  1EA1                     	;# 
  2799  1EA2                     	;# 
  2800  1EA3                     	;# 
  2801  1EA4                     	;# 
  2802  1EA9                     	;# 
  2803  1EAA                     	;# 
  2804  1EB1                     	;# 
  2805  1EB2                     	;# 
  2806  1EB8                     	;# 
  2807  1EB9                     	;# 
  2808  1EBA                     	;# 
  2809  1EBB                     	;# 
  2810  1EBC                     	;# 
  2811  1EBD                     	;# 
  2812  1EBE                     	;# 
  2813  1EC3                     	;# 
  2814  1EC5                     	;# 
  2815  1EC6                     	;# 
  2816  1EC7                     	;# 
  2817  1EC8                     	;# 
  2818  1EC9                     	;# 
  2819  1ECA                     	;# 
  2820  1ECB                     	;# 
  2821  1ECB                     	;# 
  2822  1ECB                     	;# 
  2823  1ECC                     	;# 
  2824  1ECC                     	;# 
  2825  1ECC                     	;# 
  2826  1F10                     	;# 
  2827  1F11                     	;# 
  2828  1F12                     	;# 
  2829  1F14                     	;# 
  2830  1F15                     	;# 
  2831  1F1C                     	;# 
  2832  1F1D                     	;# 
  2833  1F1E                     	;# 
  2834  1F1F                     	;# 
  2835  1F20                     	;# 
  2836  1F21                     	;# 
  2837  1F22                     	;# 
  2838  1F23                     	;# 
  2839  1F24                     	;# 
  2840  1F25                     	;# 
  2841  1F26                     	;# 
  2842  1F27                     	;# 
  2843  1F38                     	;# 
  2844  1F39                     	;# 
  2845  1F3A                     	;# 
  2846  1F3B                     	;# 
  2847  1F3C                     	;# 
  2848  1F3D                     	;# 
  2849  1F3E                     	;# 
  2850  1F3F                     	;# 
  2851  1F43                     	;# 
  2852  1F44                     	;# 
  2853  1F45                     	;# 
  2854  1F46                     	;# 
  2855  1F47                     	;# 
  2856  1F48                     	;# 
  2857  1F49                     	;# 
  2858  1F4A                     	;# 
  2859  1F4E                     	;# 
  2860  1F4F                     	;# 
  2861  1F50                     	;# 
  2862  1F51                     	;# 
  2863  1F52                     	;# 
  2864  1F53                     	;# 
  2865  1F54                     	;# 
  2866  1F55                     	;# 
  2867  1FE4                     	;# 
  2868  1FE5                     	;# 
  2869  1FE6                     	;# 
  2870  1FE7                     	;# 
  2871  1FE8                     	;# 
  2872  1FE8                     	;# 
  2873  1FE9                     	;# 
  2874  1FEA                     	;# 
  2875  1FEB                     	;# 
  2876  1FED                     	;# 
  2877  1FEE                     	;# 
  2878  1FEF                     	;# 
  2879  0000                     	;# 
  2880  0001                     	;# 
  2881  0002                     	;# 
  2882  0003                     	;# 
  2883  0004                     	;# 
  2884  0005                     	;# 
  2885  0006                     	;# 
  2886  0007                     	;# 
  2887  0008                     	;# 
  2888  0009                     	;# 
  2889  000A                     	;# 
  2890  000B                     	;# 
  2891  000C                     	;# 
  2892  000D                     	;# 
  2893  000E                     	;# 
  2894  0012                     	;# 
  2895  0013                     	;# 
  2896  0014                     	;# 
  2897  0018                     	;# 
  2898  0019                     	;# 
  2899  001A                     	;# 
  2900  008C                     	;# 
  2901  008C                     	;# 
  2902  008D                     	;# 
  2903  008E                     	;# 
  2904  008E                     	;# 
  2905  008F                     	;# 
  2906  0090                     	;# 
  2907  0090                     	;# 
  2908  0091                     	;# 
  2909  0092                     	;# 
  2910  0092                     	;# 
  2911  0093                     	;# 
  2912  0094                     	;# 
  2913  0094                     	;# 
  2914  0095                     	;# 
  2915  0096                     	;# 
  2916  0096                     	;# 
  2917  0097                     	;# 
  2918  0098                     	;# 
  2919  0099                     	;# 
  2920  009A                     	;# 
  2921  009B                     	;# 
  2922  009B                     	;# 
  2923  009C                     	;# 
  2924  009D                     	;# 
  2925  009D                     	;# 
  2926  009E                     	;# 
  2927  009F                     	;# 
  2928  010C                     	;# 
  2929  010C                     	;# 
  2930  010D                     	;# 
  2931  010E                     	;# 
  2932  010F                     	;# 
  2933  010F                     	;# 
  2934  0110                     	;# 
  2935  0111                     	;# 
  2936  0112                     	;# 
  2937  0113                     	;# 
  2938  0114                     	;# 
  2939  0115                     	;# 
  2940  0116                     	;# 
  2941  0117                     	;# 
  2942  0118                     	;# 
  2943  0119                     	;# 
  2944  0119                     	;# 
  2945  0119                     	;# 
  2946  011A                     	;# 
  2947  011A                     	;# 
  2948  011A                     	;# 
  2949  011B                     	;# 
  2950  011B                     	;# 
  2951  011B                     	;# 
  2952  011B                     	;# 
  2953  011B                     	;# 
  2954  011C                     	;# 
  2955  011C                     	;# 
  2956  011C                     	;# 
  2957  011D                     	;# 
  2958  011D                     	;# 
  2959  011D                     	;# 
  2960  011E                     	;# 
  2961  011E                     	;# 
  2962  011E                     	;# 
  2963  011F                     	;# 
  2964  011F                     	;# 
  2965  011F                     	;# 
  2966  011F                     	;# 
  2967  011F                     	;# 
  2968  018C                     	;# 
  2969  018D                     	;# 
  2970  018E                     	;# 
  2971  018F                     	;# 
  2972  0190                     	;# 
  2973  0191                     	;# 
  2974  0192                     	;# 
  2975  0196                     	;# 
  2976  0197                     	;# 
  2977  0198                     	;# 
  2978  0199                     	;# 
  2979  019A                     	;# 
  2980  019B                     	;# 
  2981  019C                     	;# 
  2982  020C                     	;# 
  2983  020D                     	;# 
  2984  020E                     	;# 
  2985  020E                     	;# 
  2986  020F                     	;# 
  2987  020F                     	;# 
  2988  0210                     	;# 
  2989  0210                     	;# 
  2990  0211                     	;# 
  2991  0211                     	;# 
  2992  0212                     	;# 
  2993  0213                     	;# 
  2994  0214                     	;# 
  2995  0214                     	;# 
  2996  0215                     	;# 
  2997  0215                     	;# 
  2998  0216                     	;# 
  2999  0216                     	;# 
  3000  0217                     	;# 
  3001  0217                     	;# 
  3002  0218                     	;# 
  3003  0219                     	;# 
  3004  021A                     	;# 
  3005  021A                     	;# 
  3006  021B                     	;# 
  3007  021B                     	;# 
  3008  021C                     	;# 
  3009  021C                     	;# 
  3010  021D                     	;# 
  3011  021D                     	;# 
  3012  021E                     	;# 
  3013  021F                     	;# 
  3014  028C                     	;# 
  3015  028C                     	;# 
  3016  028D                     	;# 
  3017  028D                     	;# 
  3018  028E                     	;# 
  3019  028F                     	;# 
  3020  0290                     	;# 
  3021  0291                     	;# 
  3022  0292                     	;# 
  3023  0292                     	;# 
  3024  0293                     	;# 
  3025  0293                     	;# 
  3026  0294                     	;# 
  3027  0295                     	;# 
  3028  0296                     	;# 
  3029  0297                     	;# 
  3030  0298                     	;# 
  3031  0298                     	;# 
  3032  0299                     	;# 
  3033  0299                     	;# 
  3034  029A                     	;# 
  3035  029B                     	;# 
  3036  029C                     	;# 
  3037  029D                     	;# 
  3038  029F                     	;# 
  3039  030C                     	;# 
  3040  030C                     	;# 
  3041  030D                     	;# 
  3042  030E                     	;# 
  3043  030F                     	;# 
  3044  0310                     	;# 
  3045  0310                     	;# 
  3046  0311                     	;# 
  3047  0312                     	;# 
  3048  0313                     	;# 
  3049  0314                     	;# 
  3050  0314                     	;# 
  3051  0315                     	;# 
  3052  0316                     	;# 
  3053  0317                     	;# 
  3054  0318                     	;# 
  3055  0318                     	;# 
  3056  0319                     	;# 
  3057  031A                     	;# 
  3058  031B                     	;# 
  3059  038C                     	;# 
  3060  038C                     	;# 
  3061  038D                     	;# 
  3062  038E                     	;# 
  3063  0390                     	;# 
  3064  0390                     	;# 
  3065  0391                     	;# 
  3066  0392                     	;# 
  3067  048C                     	;# 
  3068  048C                     	;# 
  3069  048D                     	;# 
  3070  048E                     	;# 
  3071  048F                     	;# 
  3072  048F                     	;# 
  3073  0490                     	;# 
  3074  0491                     	;# 
  3075  0492                     	;# 
  3076  0492                     	;# 
  3077  0493                     	;# 
  3078  0494                     	;# 
  3079  0495                     	;# 
  3080  0495                     	;# 
  3081  0496                     	;# 
  3082  0497                     	;# 
  3083  0498                     	;# 
  3084  0499                     	;# 
  3085  049A                     	;# 
  3086  049B                     	;# 
  3087  049C                     	;# 
  3088  049D                     	;# 
  3089  058C                     	;# 
  3090  058C                     	;# 
  3091  058D                     	;# 
  3092  058E                     	;# 
  3093  058F                     	;# 
  3094  058F                     	;# 
  3095  0590                     	;# 
  3096  0591                     	;# 
  3097  0592                     	;# 
  3098  0593                     	;# 
  3099  059C                     	;# 
  3100  059C                     	;# 
  3101  059D                     	;# 
  3102  059D                     	;# 
  3103  059E                     	;# 
  3104  059F                     	;# 
  3105  060C                     	;# 
  3106  060C                     	;# 
  3107  060D                     	;# 
  3108  060D                     	;# 
  3109  060E                     	;# 
  3110  060F                     	;# 
  3111  0610                     	;# 
  3112  0611                     	;# 
  3113  0612                     	;# 
  3114  0613                     	;# 
  3115  0614                     	;# 
  3116  0616                     	;# 
  3117  0616                     	;# 
  3118  0617                     	;# 
  3119  0617                     	;# 
  3120  0618                     	;# 
  3121  0619                     	;# 
  3122  061A                     	;# 
  3123  061B                     	;# 
  3124  061C                     	;# 
  3125  061D                     	;# 
  3126  061E                     	;# 
  3127  070C                     	;# 
  3128  070D                     	;# 
  3129  070E                     	;# 
  3130  070F                     	;# 
  3131  0710                     	;# 
  3132  0711                     	;# 
  3133  0712                     	;# 
  3134  0713                     	;# 
  3135  0714                     	;# 
  3136  0716                     	;# 
  3137  0717                     	;# 
  3138  0718                     	;# 
  3139  0719                     	;# 
  3140  071A                     	;# 
  3141  071B                     	;# 
  3142  071C                     	;# 
  3143  071D                     	;# 
  3144  071E                     	;# 
  3145  0796                     	;# 
  3146  0797                     	;# 
  3147  0798                     	;# 
  3148  0799                     	;# 
  3149  079A                     	;# 
  3150  079B                     	;# 
  3151  079C                     	;# 
  3152  079D                     	;# 
  3153  080C                     	;# 
  3154  080D                     	;# 
  3155  080E                     	;# 
  3156  080F                     	;# 
  3157  0810                     	;# 
  3158  0811                     	;# 
  3159  0812                     	;# 
  3160  0813                     	;# 
  3161  0814                     	;# 
  3162  081A                     	;# 
  3163  081A                     	;# 
  3164  081B                     	;# 
  3165  081C                     	;# 
  3166  081C                     	;# 
  3167  081D                     	;# 
  3168  081E                     	;# 
  3169  081F                     	;# 
  3170  088C                     	;# 
  3171  088D                     	;# 
  3172  088E                     	;# 
  3173  088F                     	;# 
  3174  0890                     	;# 
  3175  0891                     	;# 
  3176  0892                     	;# 
  3177  0893                     	;# 
  3178  0895                     	;# 
  3179  0896                     	;# 
  3180  0897                     	;# 
  3181  0898                     	;# 
  3182  0899                     	;# 
  3183  089A                     	;# 
  3184  089B                     	;# 
  3185  090C                     	;# 
  3186  090E                     	;# 
  3187  090F                     	;# 
  3188  091F                     	;# 
  3189  098F                     	;# 
  3190  098F                     	;# 
  3191  0990                     	;# 
  3192  0991                     	;# 
  3193  0992                     	;# 
  3194  0993                     	;# 
  3195  0994                     	;# 
  3196  0995                     	;# 
  3197  0996                     	;# 
  3198  0997                     	;# 
  3199  1E0F                     	;# 
  3200  1E10                     	;# 
  3201  1E11                     	;# 
  3202  1E12                     	;# 
  3203  1E13                     	;# 
  3204  1E14                     	;# 
  3205  1E15                     	;# 
  3206  1E16                     	;# 
  3207  1E17                     	;# 
  3208  1E18                     	;# 
  3209  1E19                     	;# 
  3210  1E1A                     	;# 
  3211  1E1B                     	;# 
  3212  1E1C                     	;# 
  3213  1E1D                     	;# 
  3214  1E1E                     	;# 
  3215  1E1F                     	;# 
  3216  1E20                     	;# 
  3217  1E21                     	;# 
  3218  1E22                     	;# 
  3219  1E23                     	;# 
  3220  1E24                     	;# 
  3221  1E25                     	;# 
  3222  1E26                     	;# 
  3223  1E27                     	;# 
  3224  1E28                     	;# 
  3225  1E29                     	;# 
  3226  1E2A                     	;# 
  3227  1E2B                     	;# 
  3228  1E2C                     	;# 
  3229  1E2D                     	;# 
  3230  1E2E                     	;# 
  3231  1E2F                     	;# 
  3232  1E30                     	;# 
  3233  1E31                     	;# 
  3234  1E32                     	;# 
  3235  1E33                     	;# 
  3236  1E34                     	;# 
  3237  1E35                     	;# 
  3238  1E36                     	;# 
  3239  1E37                     	;# 
  3240  1E8F                     	;# 
  3241  1E90                     	;# 
  3242  1E91                     	;# 
  3243  1E92                     	;# 
  3244  1E93                     	;# 
  3245  1E94                     	;# 
  3246  1E95                     	;# 
  3247  1E96                     	;# 
  3248  1E97                     	;# 
  3249  1E9C                     	;# 
  3250  1E9D                     	;# 
  3251  1E9E                     	;# 
  3252  1EA1                     	;# 
  3253  1EA2                     	;# 
  3254  1EA3                     	;# 
  3255  1EA4                     	;# 
  3256  1EA9                     	;# 
  3257  1EAA                     	;# 
  3258  1EB1                     	;# 
  3259  1EB2                     	;# 
  3260  1EB8                     	;# 
  3261  1EB9                     	;# 
  3262  1EBA                     	;# 
  3263  1EBB                     	;# 
  3264  1EBC                     	;# 
  3265  1EBD                     	;# 
  3266  1EBE                     	;# 
  3267  1EC3                     	;# 
  3268  1EC5                     	;# 
  3269  1EC6                     	;# 
  3270  1EC7                     	;# 
  3271  1EC8                     	;# 
  3272  1EC9                     	;# 
  3273  1ECA                     	;# 
  3274  1ECB                     	;# 
  3275  1ECB                     	;# 
  3276  1ECB                     	;# 
  3277  1ECC                     	;# 
  3278  1ECC                     	;# 
  3279  1ECC                     	;# 
  3280  1F10                     	;# 
  3281  1F11                     	;# 
  3282  1F12                     	;# 
  3283  1F14                     	;# 
  3284  1F15                     	;# 
  3285  1F1C                     	;# 
  3286  1F1D                     	;# 
  3287  1F1E                     	;# 
  3288  1F1F                     	;# 
  3289  1F20                     	;# 
  3290  1F21                     	;# 
  3291  1F22                     	;# 
  3292  1F23                     	;# 
  3293  1F24                     	;# 
  3294  1F25                     	;# 
  3295  1F26                     	;# 
  3296  1F27                     	;# 
  3297  1F38                     	;# 
  3298  1F39                     	;# 
  3299  1F3A                     	;# 
  3300  1F3B                     	;# 
  3301  1F3C                     	;# 
  3302  1F3D                     	;# 
  3303  1F3E                     	;# 
  3304  1F3F                     	;# 
  3305  1F43                     	;# 
  3306  1F44                     	;# 
  3307  1F45                     	;# 
  3308  1F46                     	;# 
  3309  1F47                     	;# 
  3310  1F48                     	;# 
  3311  1F49                     	;# 
  3312  1F4A                     	;# 
  3313  1F4E                     	;# 
  3314  1F4F                     	;# 
  3315  1F50                     	;# 
  3316  1F51                     	;# 
  3317  1F52                     	;# 
  3318  1F53                     	;# 
  3319  1F54                     	;# 
  3320  1F55                     	;# 
  3321  1FE4                     	;# 
  3322  1FE5                     	;# 
  3323  1FE6                     	;# 
  3324  1FE7                     	;# 
  3325  1FE8                     	;# 
  3326  1FE8                     	;# 
  3327  1FE9                     	;# 
  3328  1FEA                     	;# 
  3329  1FEB                     	;# 
  3330  1FED                     	;# 
  3331  1FEE                     	;# 
  3332  1FEF                     	;# 
  3333  0000                     	;# 
  3334  0001                     	;# 
  3335  0002                     	;# 
  3336  0003                     	;# 
  3337  0004                     	;# 
  3338  0005                     	;# 
  3339  0006                     	;# 
  3340  0007                     	;# 
  3341  0008                     	;# 
  3342  0009                     	;# 
  3343  000A                     	;# 
  3344  000B                     	;# 
  3345  000C                     	;# 
  3346  000D                     	;# 
  3347  000E                     	;# 
  3348  0012                     	;# 
  3349  0013                     	;# 
  3350  0014                     	;# 
  3351  0018                     	;# 
  3352  0019                     	;# 
  3353  001A                     	;# 
  3354  008C                     	;# 
  3355  008C                     	;# 
  3356  008D                     	;# 
  3357  008E                     	;# 
  3358  008E                     	;# 
  3359  008F                     	;# 
  3360  0090                     	;# 
  3361  0090                     	;# 
  3362  0091                     	;# 
  3363  0092                     	;# 
  3364  0092                     	;# 
  3365  0093                     	;# 
  3366  0094                     	;# 
  3367  0094                     	;# 
  3368  0095                     	;# 
  3369  0096                     	;# 
  3370  0096                     	;# 
  3371  0097                     	;# 
  3372  0098                     	;# 
  3373  0099                     	;# 
  3374  009A                     	;# 
  3375  009B                     	;# 
  3376  009B                     	;# 
  3377  009C                     	;# 
  3378  009D                     	;# 
  3379  009D                     	;# 
  3380  009E                     	;# 
  3381  009F                     	;# 
  3382  010C                     	;# 
  3383  010C                     	;# 
  3384  010D                     	;# 
  3385  010E                     	;# 
  3386  010F                     	;# 
  3387  010F                     	;# 
  3388  0110                     	;# 
  3389  0111                     	;# 
  3390  0112                     	;# 
  3391  0113                     	;# 
  3392  0114                     	;# 
  3393  0115                     	;# 
  3394  0116                     	;# 
  3395  0117                     	;# 
  3396  0118                     	;# 
  3397  0119                     	;# 
  3398  0119                     	;# 
  3399  0119                     	;# 
  3400  011A                     	;# 
  3401  011A                     	;# 
  3402  011A                     	;# 
  3403  011B                     	;# 
  3404  011B                     	;# 
  3405  011B                     	;# 
  3406  011B                     	;# 
  3407  011B                     	;# 
  3408  011C                     	;# 
  3409  011C                     	;# 
  3410  011C                     	;# 
  3411  011D                     	;# 
  3412  011D                     	;# 
  3413  011D                     	;# 
  3414  011E                     	;# 
  3415  011E                     	;# 
  3416  011E                     	;# 
  3417  011F                     	;# 
  3418  011F                     	;# 
  3419  011F                     	;# 
  3420  011F                     	;# 
  3421  011F                     	;# 
  3422  018C                     	;# 
  3423  018D                     	;# 
  3424  018E                     	;# 
  3425  018F                     	;# 
  3426  0190                     	;# 
  3427  0191                     	;# 
  3428  0192                     	;# 
  3429  0196                     	;# 
  3430  0197                     	;# 
  3431  0198                     	;# 
  3432  0199                     	;# 
  3433  019A                     	;# 
  3434  019B                     	;# 
  3435  019C                     	;# 
  3436  020C                     	;# 
  3437  020D                     	;# 
  3438  020E                     	;# 
  3439  020E                     	;# 
  3440  020F                     	;# 
  3441  020F                     	;# 
  3442  0210                     	;# 
  3443  0210                     	;# 
  3444  0211                     	;# 
  3445  0211                     	;# 
  3446  0212                     	;# 
  3447  0213                     	;# 
  3448  0214                     	;# 
  3449  0214                     	;# 
  3450  0215                     	;# 
  3451  0215                     	;# 
  3452  0216                     	;# 
  3453  0216                     	;# 
  3454  0217                     	;# 
  3455  0217                     	;# 
  3456  0218                     	;# 
  3457  0219                     	;# 
  3458  021A                     	;# 
  3459  021A                     	;# 
  3460  021B                     	;# 
  3461  021B                     	;# 
  3462  021C                     	;# 
  3463  021C                     	;# 
  3464  021D                     	;# 
  3465  021D                     	;# 
  3466  021E                     	;# 
  3467  021F                     	;# 
  3468  028C                     	;# 
  3469  028C                     	;# 
  3470  028D                     	;# 
  3471  028D                     	;# 
  3472  028E                     	;# 
  3473  028F                     	;# 
  3474  0290                     	;# 
  3475  0291                     	;# 
  3476  0292                     	;# 
  3477  0292                     	;# 
  3478  0293                     	;# 
  3479  0293                     	;# 
  3480  0294                     	;# 
  3481  0295                     	;# 
  3482  0296                     	;# 
  3483  0297                     	;# 
  3484  0298                     	;# 
  3485  0298                     	;# 
  3486  0299                     	;# 
  3487  0299                     	;# 
  3488  029A                     	;# 
  3489  029B                     	;# 
  3490  029C                     	;# 
  3491  029D                     	;# 
  3492  029F                     	;# 
  3493  030C                     	;# 
  3494  030C                     	;# 
  3495  030D                     	;# 
  3496  030E                     	;# 
  3497  030F                     	;# 
  3498  0310                     	;# 
  3499  0310                     	;# 
  3500  0311                     	;# 
  3501  0312                     	;# 
  3502  0313                     	;# 
  3503  0314                     	;# 
  3504  0314                     	;# 
  3505  0315                     	;# 
  3506  0316                     	;# 
  3507  0317                     	;# 
  3508  0318                     	;# 
  3509  0318                     	;# 
  3510  0319                     	;# 
  3511  031A                     	;# 
  3512  031B                     	;# 
  3513  038C                     	;# 
  3514  038C                     	;# 
  3515  038D                     	;# 
  3516  038E                     	;# 
  3517  0390                     	;# 
  3518  0390                     	;# 
  3519  0391                     	;# 
  3520  0392                     	;# 
  3521  048C                     	;# 
  3522  048C                     	;# 
  3523  048D                     	;# 
  3524  048E                     	;# 
  3525  048F                     	;# 
  3526  048F                     	;# 
  3527  0490                     	;# 
  3528  0491                     	;# 
  3529  0492                     	;# 
  3530  0492                     	;# 
  3531  0493                     	;# 
  3532  0494                     	;# 
  3533  0495                     	;# 
  3534  0495                     	;# 
  3535  0496                     	;# 
  3536  0497                     	;# 
  3537  0498                     	;# 
  3538  0499                     	;# 
  3539  049A                     	;# 
  3540  049B                     	;# 
  3541  049C                     	;# 
  3542  049D                     	;# 
  3543  058C                     	;# 
  3544  058C                     	;# 
  3545  058D                     	;# 
  3546  058E                     	;# 
  3547  058F                     	;# 
  3548  058F                     	;# 
  3549  0590                     	;# 
  3550  0591                     	;# 
  3551  0592                     	;# 
  3552  0593                     	;# 
  3553  059C                     	;# 
  3554  059C                     	;# 
  3555  059D                     	;# 
  3556  059D                     	;# 
  3557  059E                     	;# 
  3558  059F                     	;# 
  3559  060C                     	;# 
  3560  060C                     	;# 
  3561  060D                     	;# 
  3562  060D                     	;# 
  3563  060E                     	;# 
  3564  060F                     	;# 
  3565  0610                     	;# 
  3566  0611                     	;# 
  3567  0612                     	;# 
  3568  0613                     	;# 
  3569  0614                     	;# 
  3570  0616                     	;# 
  3571  0616                     	;# 
  3572  0617                     	;# 
  3573  0617                     	;# 
  3574  0618                     	;# 
  3575  0619                     	;# 
  3576  061A                     	;# 
  3577  061B                     	;# 
  3578  061C                     	;# 
  3579  061D                     	;# 
  3580  061E                     	;# 
  3581  070C                     	;# 
  3582  070D                     	;# 
  3583  070E                     	;# 
  3584  070F                     	;# 
  3585  0710                     	;# 
  3586  0711                     	;# 
  3587  0712                     	;# 
  3588  0713                     	;# 
  3589  0714                     	;# 
  3590  0716                     	;# 
  3591  0717                     	;# 
  3592  0718                     	;# 
  3593  0719                     	;# 
  3594  071A                     	;# 
  3595  071B                     	;# 
  3596  071C                     	;# 
  3597  071D                     	;# 
  3598  071E                     	;# 
  3599  0796                     	;# 
  3600  0797                     	;# 
  3601  0798                     	;# 
  3602  0799                     	;# 
  3603  079A                     	;# 
  3604  079B                     	;# 
  3605  079C                     	;# 
  3606  079D                     	;# 
  3607  080C                     	;# 
  3608  080D                     	;# 
  3609  080E                     	;# 
  3610  080F                     	;# 
  3611  0810                     	;# 
  3612  0811                     	;# 
  3613  0812                     	;# 
  3614  0813                     	;# 
  3615  0814                     	;# 
  3616  081A                     	;# 
  3617  081A                     	;# 
  3618  081B                     	;# 
  3619  081C                     	;# 
  3620  081C                     	;# 
  3621  081D                     	;# 
  3622  081E                     	;# 
  3623  081F                     	;# 
  3624  088C                     	;# 
  3625  088D                     	;# 
  3626  088E                     	;# 
  3627  088F                     	;# 
  3628  0890                     	;# 
  3629  0891                     	;# 
  3630  0892                     	;# 
  3631  0893                     	;# 
  3632  0895                     	;# 
  3633  0896                     	;# 
  3634  0897                     	;# 
  3635  0898                     	;# 
  3636  0899                     	;# 
  3637  089A                     	;# 
  3638  089B                     	;# 
  3639  090C                     	;# 
  3640  090E                     	;# 
  3641  090F                     	;# 
  3642  091F                     	;# 
  3643  098F                     	;# 
  3644  098F                     	;# 
  3645  0990                     	;# 
  3646  0991                     	;# 
  3647  0992                     	;# 
  3648  0993                     	;# 
  3649  0994                     	;# 
  3650  0995                     	;# 
  3651  0996                     	;# 
  3652  0997                     	;# 
  3653  1E0F                     	;# 
  3654  1E10                     	;# 
  3655  1E11                     	;# 
  3656  1E12                     	;# 
  3657  1E13                     	;# 
  3658  1E14                     	;# 
  3659  1E15                     	;# 
  3660  1E16                     	;# 
  3661  1E17                     	;# 
  3662  1E18                     	;# 
  3663  1E19                     	;# 
  3664  1E1A                     	;# 
  3665  1E1B                     	;# 
  3666  1E1C                     	;# 
  3667  1E1D                     	;# 
  3668  1E1E                     	;# 
  3669  1E1F                     	;# 
  3670  1E20                     	;# 
  3671  1E21                     	;# 
  3672  1E22                     	;# 
  3673  1E23                     	;# 
  3674  1E24                     	;# 
  3675  1E25                     	;# 
  3676  1E26                     	;# 
  3677  1E27                     	;# 
  3678  1E28                     	;# 
  3679  1E29                     	;# 
  3680  1E2A                     	;# 
  3681  1E2B                     	;# 
  3682  1E2C                     	;# 
  3683  1E2D                     	;# 
  3684  1E2E                     	;# 
  3685  1E2F                     	;# 
  3686  1E30                     	;# 
  3687  1E31                     	;# 
  3688  1E32                     	;# 
  3689  1E33                     	;# 
  3690  1E34                     	;# 
  3691  1E35                     	;# 
  3692  1E36                     	;# 
  3693  1E37                     	;# 
  3694  1E8F                     	;# 
  3695  1E90                     	;# 
  3696  1E91                     	;# 
  3697  1E92                     	;# 
  3698  1E93                     	;# 
  3699  1E94                     	;# 
  3700  1E95                     	;# 
  3701  1E96                     	;# 
  3702  1E97                     	;# 
  3703  1E9C                     	;# 
  3704  1E9D                     	;# 
  3705  1E9E                     	;# 
  3706  1EA1                     	;# 
  3707  1EA2                     	;# 
  3708  1EA3                     	;# 
  3709  1EA4                     	;# 
  3710  1EA9                     	;# 
  3711  1EAA                     	;# 
  3712  1EB1                     	;# 
  3713  1EB2                     	;# 
  3714  1EB8                     	;# 
  3715  1EB9                     	;# 
  3716  1EBA                     	;# 
  3717  1EBB                     	;# 
  3718  1EBC                     	;# 
  3719  1EBD                     	;# 
  3720  1EBE                     	;# 
  3721  1EC3                     	;# 
  3722  1EC5                     	;# 
  3723  1EC6                     	;# 
  3724  1EC7                     	;# 
  3725  1EC8                     	;# 
  3726  1EC9                     	;# 
  3727  1ECA                     	;# 
  3728  1ECB                     	;# 
  3729  1ECB                     	;# 
  3730  1ECB                     	;# 
  3731  1ECC                     	;# 
  3732  1ECC                     	;# 
  3733  1ECC                     	;# 
  3734  1F10                     	;# 
  3735  1F11                     	;# 
  3736  1F12                     	;# 
  3737  1F14                     	;# 
  3738  1F15                     	;# 
  3739  1F1C                     	;# 
  3740  1F1D                     	;# 
  3741  1F1E                     	;# 
  3742  1F1F                     	;# 
  3743  1F20                     	;# 
  3744  1F21                     	;# 
  3745  1F22                     	;# 
  3746  1F23                     	;# 
  3747  1F24                     	;# 
  3748  1F25                     	;# 
  3749  1F26                     	;# 
  3750  1F27                     	;# 
  3751  1F38                     	;# 
  3752  1F39                     	;# 
  3753  1F3A                     	;# 
  3754  1F3B                     	;# 
  3755  1F3C                     	;# 
  3756  1F3D                     	;# 
  3757  1F3E                     	;# 
  3758  1F3F                     	;# 
  3759  1F43                     	;# 
  3760  1F44                     	;# 
  3761  1F45                     	;# 
  3762  1F46                     	;# 
  3763  1F47                     	;# 
  3764  1F48                     	;# 
  3765  1F49                     	;# 
  3766  1F4A                     	;# 
  3767  1F4E                     	;# 
  3768  1F4F                     	;# 
  3769  1F50                     	;# 
  3770  1F51                     	;# 
  3771  1F52                     	;# 
  3772  1F53                     	;# 
  3773  1F54                     	;# 
  3774  1F55                     	;# 
  3775  1FE4                     	;# 
  3776  1FE5                     	;# 
  3777  1FE6                     	;# 
  3778  1FE7                     	;# 
  3779  1FE8                     	;# 
  3780  1FE8                     	;# 
  3781  1FE9                     	;# 
  3782  1FEA                     	;# 
  3783  1FEB                     	;# 
  3784  1FED                     	;# 
  3785  1FEE                     	;# 
  3786  1FEF                     	;# 
  3787  0000                     	;# 
  3788  0001                     	;# 
  3789  0002                     	;# 
  3790  0003                     	;# 
  3791  0004                     	;# 
  3792  0005                     	;# 
  3793  0006                     	;# 
  3794  0007                     	;# 
  3795  0008                     	;# 
  3796  0009                     	;# 
  3797  000A                     	;# 
  3798  000B                     	;# 
  3799  000C                     	;# 
  3800  000D                     	;# 
  3801  000E                     	;# 
  3802  0012                     	;# 
  3803  0013                     	;# 
  3804  0014                     	;# 
  3805  0018                     	;# 
  3806  0019                     	;# 
  3807  001A                     	;# 
  3808  008C                     	;# 
  3809  008C                     	;# 
  3810  008D                     	;# 
  3811  008E                     	;# 
  3812  008E                     	;# 
  3813  008F                     	;# 
  3814  0090                     	;# 
  3815  0090                     	;# 
  3816  0091                     	;# 
  3817  0092                     	;# 
  3818  0092                     	;# 
  3819  0093                     	;# 
  3820  0094                     	;# 
  3821  0094                     	;# 
  3822  0095                     	;# 
  3823  0096                     	;# 
  3824  0096                     	;# 
  3825  0097                     	;# 
  3826  0098                     	;# 
  3827  0099                     	;# 
  3828  009A                     	;# 
  3829  009B                     	;# 
  3830  009B                     	;# 
  3831  009C                     	;# 
  3832  009D                     	;# 
  3833  009D                     	;# 
  3834  009E                     	;# 
  3835  009F                     	;# 
  3836  010C                     	;# 
  3837  010C                     	;# 
  3838  010D                     	;# 
  3839  010E                     	;# 
  3840  010F                     	;# 
  3841  010F                     	;# 
  3842  0110                     	;# 
  3843  0111                     	;# 
  3844  0112                     	;# 
  3845  0113                     	;# 
  3846  0114                     	;# 
  3847  0115                     	;# 
  3848  0116                     	;# 
  3849  0117                     	;# 
  3850  0118                     	;# 
  3851  0119                     	;# 
  3852  0119                     	;# 
  3853  0119                     	;# 
  3854  011A                     	;# 
  3855  011A                     	;# 
  3856  011A                     	;# 
  3857  011B                     	;# 
  3858  011B                     	;# 
  3859  011B                     	;# 
  3860  011B                     	;# 
  3861  011B                     	;# 
  3862  011C                     	;# 
  3863  011C                     	;# 
  3864  011C                     	;# 
  3865  011D                     	;# 
  3866  011D                     	;# 
  3867  011D                     	;# 
  3868  011E                     	;# 
  3869  011E                     	;# 
  3870  011E                     	;# 
  3871  011F                     	;# 
  3872  011F                     	;# 
  3873  011F                     	;# 
  3874  011F                     	;# 
  3875  011F                     	;# 
  3876  018C                     	;# 
  3877  018D                     	;# 
  3878  018E                     	;# 
  3879  018F                     	;# 
  3880  0190                     	;# 
  3881  0191                     	;# 
  3882  0192                     	;# 
  3883  0196                     	;# 
  3884  0197                     	;# 
  3885  0198                     	;# 
  3886  0199                     	;# 
  3887  019A                     	;# 
  3888  019B                     	;# 
  3889  019C                     	;# 
  3890  020C                     	;# 
  3891  020D                     	;# 
  3892  020E                     	;# 
  3893  020E                     	;# 
  3894  020F                     	;# 
  3895  020F                     	;# 
  3896  0210                     	;# 
  3897  0210                     	;# 
  3898  0211                     	;# 
  3899  0211                     	;# 
  3900  0212                     	;# 
  3901  0213                     	;# 
  3902  0214                     	;# 
  3903  0214                     	;# 
  3904  0215                     	;# 
  3905  0215                     	;# 
  3906  0216                     	;# 
  3907  0216                     	;# 
  3908  0217                     	;# 
  3909  0217                     	;# 
  3910  0218                     	;# 
  3911  0219                     	;# 
  3912  021A                     	;# 
  3913  021A                     	;# 
  3914  021B                     	;# 
  3915  021B                     	;# 
  3916  021C                     	;# 
  3917  021C                     	;# 
  3918  021D                     	;# 
  3919  021D                     	;# 
  3920  021E                     	;# 
  3921  021F                     	;# 
  3922  028C                     	;# 
  3923  028C                     	;# 
  3924  028D                     	;# 
  3925  028D                     	;# 
  3926  028E                     	;# 
  3927  028F                     	;# 
  3928  0290                     	;# 
  3929  0291                     	;# 
  3930  0292                     	;# 
  3931  0292                     	;# 
  3932  0293                     	;# 
  3933  0293                     	;# 
  3934  0294                     	;# 
  3935  0295                     	;# 
  3936  0296                     	;# 
  3937  0297                     	;# 
  3938  0298                     	;# 
  3939  0298                     	;# 
  3940  0299                     	;# 
  3941  0299                     	;# 
  3942  029A                     	;# 
  3943  029B                     	;# 
  3944  029C                     	;# 
  3945  029D                     	;# 
  3946  029F                     	;# 
  3947  030C                     	;# 
  3948  030C                     	;# 
  3949  030D                     	;# 
  3950  030E                     	;# 
  3951  030F                     	;# 
  3952  0310                     	;# 
  3953  0310                     	;# 
  3954  0311                     	;# 
  3955  0312                     	;# 
  3956  0313                     	;# 
  3957  0314                     	;# 
  3958  0314                     	;# 
  3959  0315                     	;# 
  3960  0316                     	;# 
  3961  0317                     	;# 
  3962  0318                     	;# 
  3963  0318                     	;# 
  3964  0319                     	;# 
  3965  031A                     	;# 
  3966  031B                     	;# 
  3967  038C                     	;# 
  3968  038C                     	;# 
  3969  038D                     	;# 
  3970  038E                     	;# 
  3971  0390                     	;# 
  3972  0390                     	;# 
  3973  0391                     	;# 
  3974  0392                     	;# 
  3975  048C                     	;# 
  3976  048C                     	;# 
  3977  048D                     	;# 
  3978  048E                     	;# 
  3979  048F                     	;# 
  3980  048F                     	;# 
  3981  0490                     	;# 
  3982  0491                     	;# 
  3983  0492                     	;# 
  3984  0492                     	;# 
  3985  0493                     	;# 
  3986  0494                     	;# 
  3987  0495                     	;# 
  3988  0495                     	;# 
  3989  0496                     	;# 
  3990  0497                     	;# 
  3991  0498                     	;# 
  3992  0499                     	;# 
  3993  049A                     	;# 
  3994  049B                     	;# 
  3995  049C                     	;# 
  3996  049D                     	;# 
  3997  058C                     	;# 
  3998  058C                     	;# 
  3999  058D                     	;# 
  4000  058E                     	;# 
  4001  058F                     	;# 
  4002  058F                     	;# 
  4003  0590                     	;# 
  4004  0591                     	;# 
  4005  0592                     	;# 
  4006  0593                     	;# 
  4007  059C                     	;# 
  4008  059C                     	;# 
  4009  059D                     	;# 
  4010  059D                     	;# 
  4011  059E                     	;# 
  4012  059F                     	;# 
  4013  060C                     	;# 
  4014  060C                     	;# 
  4015  060D                     	;# 
  4016  060D                     	;# 
  4017  060E                     	;# 
  4018  060F                     	;# 
  4019  0610                     	;# 
  4020  0611                     	;# 
  4021  0612                     	;# 
  4022  0613                     	;# 
  4023  0614                     	;# 
  4024  0616                     	;# 
  4025  0616                     	;# 
  4026  0617                     	;# 
  4027  0617                     	;# 
  4028  0618                     	;# 
  4029  0619                     	;# 
  4030  061A                     	;# 
  4031  061B                     	;# 
  4032  061C                     	;# 
  4033  061D                     	;# 
  4034  061E                     	;# 
  4035  070C                     	;# 
  4036  070D                     	;# 
  4037  070E                     	;# 
  4038  070F                     	;# 
  4039  0710                     	;# 
  4040  0711                     	;# 
  4041  0712                     	;# 
  4042  0713                     	;# 
  4043  0714                     	;# 
  4044  0716                     	;# 
  4045  0717                     	;# 
  4046  0718                     	;# 
  4047  0719                     	;# 
  4048  071A                     	;# 
  4049  071B                     	;# 
  4050  071C                     	;# 
  4051  071D                     	;# 
  4052  071E                     	;# 
  4053  0796                     	;# 
  4054  0797                     	;# 
  4055  0798                     	;# 
  4056  0799                     	;# 
  4057  079A                     	;# 
  4058  079B                     	;# 
  4059  079C                     	;# 
  4060  079D                     	;# 
  4061  080C                     	;# 
  4062  080D                     	;# 
  4063  080E                     	;# 
  4064  080F                     	;# 
  4065  0810                     	;# 
  4066  0811                     	;# 
  4067  0812                     	;# 
  4068  0813                     	;# 
  4069  0814                     	;# 
  4070  081A                     	;# 
  4071  081A                     	;# 
  4072  081B                     	;# 
  4073  081C                     	;# 
  4074  081C                     	;# 
  4075  081D                     	;# 
  4076  081E                     	;# 
  4077  081F                     	;# 
  4078  088C                     	;# 
  4079  088D                     	;# 
  4080  088E                     	;# 
  4081  088F                     	;# 
  4082  0890                     	;# 
  4083  0891                     	;# 
  4084  0892                     	;# 
  4085  0893                     	;# 
  4086  0895                     	;# 
  4087  0896                     	;# 
  4088  0897                     	;# 
  4089  0898                     	;# 
  4090  0899                     	;# 
  4091  089A                     	;# 
  4092  089B                     	;# 
  4093  090C                     	;# 
  4094  090E                     	;# 
  4095  090F                     	;# 
  4096  091F                     	;# 
  4097  098F                     	;# 
  4098  098F                     	;# 
  4099  0990                     	;# 
  4100  0991                     	;# 
  4101  0992                     	;# 
  4102  0993                     	;# 
  4103  0994                     	;# 
  4104  0995                     	;# 
  4105  0996                     	;# 
  4106  0997                     	;# 
  4107  1E0F                     	;# 
  4108  1E10                     	;# 
  4109  1E11                     	;# 
  4110  1E12                     	;# 
  4111  1E13                     	;# 
  4112  1E14                     	;# 
  4113  1E15                     	;# 
  4114  1E16                     	;# 
  4115  1E17                     	;# 
  4116  1E18                     	;# 
  4117  1E19                     	;# 
  4118  1E1A                     	;# 
  4119  1E1B                     	;# 
  4120  1E1C                     	;# 
  4121  1E1D                     	;# 
  4122  1E1E                     	;# 
  4123  1E1F                     	;# 
  4124  1E20                     	;# 
  4125  1E21                     	;# 
  4126  1E22                     	;# 
  4127  1E23                     	;# 
  4128  1E24                     	;# 
  4129  1E25                     	;# 
  4130  1E26                     	;# 
  4131  1E27                     	;# 
  4132  1E28                     	;# 
  4133  1E29                     	;# 
  4134  1E2A                     	;# 
  4135  1E2B                     	;# 
  4136  1E2C                     	;# 
  4137  1E2D                     	;# 
  4138  1E2E                     	;# 
  4139  1E2F                     	;# 
  4140  1E30                     	;# 
  4141  1E31                     	;# 
  4142  1E32                     	;# 
  4143  1E33                     	;# 
  4144  1E34                     	;# 
  4145  1E35                     	;# 
  4146  1E36                     	;# 
  4147  1E37                     	;# 
  4148  1E8F                     	;# 
  4149  1E90                     	;# 
  4150  1E91                     	;# 
  4151  1E92                     	;# 
  4152  1E93                     	;# 
  4153  1E94                     	;# 
  4154  1E95                     	;# 
  4155  1E96                     	;# 
  4156  1E97                     	;# 
  4157  1E9C                     	;# 
  4158  1E9D                     	;# 
  4159  1E9E                     	;# 
  4160  1EA1                     	;# 
  4161  1EA2                     	;# 
  4162  1EA3                     	;# 
  4163  1EA4                     	;# 
  4164  1EA9                     	;# 
  4165  1EAA                     	;# 
  4166  1EB1                     	;# 
  4167  1EB2                     	;# 
  4168  1EB8                     	;# 
  4169  1EB9                     	;# 
  4170  1EBA                     	;# 
  4171  1EBB                     	;# 
  4172  1EBC                     	;# 
  4173  1EBD                     	;# 
  4174  1EBE                     	;# 
  4175  1EC3                     	;# 
  4176  1EC5                     	;# 
  4177  1EC6                     	;# 
  4178  1EC7                     	;# 
  4179  1EC8                     	;# 
  4180  1EC9                     	;# 
  4181  1ECA                     	;# 
  4182  1ECB                     	;# 
  4183  1ECB                     	;# 
  4184  1ECB                     	;# 
  4185  1ECC                     	;# 
  4186  1ECC                     	;# 
  4187  1ECC                     	;# 
  4188  1F10                     	;# 
  4189  1F11                     	;# 
  4190  1F12                     	;# 
  4191  1F14                     	;# 
  4192  1F15                     	;# 
  4193  1F1C                     	;# 
  4194  1F1D                     	;# 
  4195  1F1E                     	;# 
  4196  1F1F                     	;# 
  4197  1F20                     	;# 
  4198  1F21                     	;# 
  4199  1F22                     	;# 
  4200  1F23                     	;# 
  4201  1F24                     	;# 
  4202  1F25                     	;# 
  4203  1F26                     	;# 
  4204  1F27                     	;# 
  4205  1F38                     	;# 
  4206  1F39                     	;# 
  4207  1F3A                     	;# 
  4208  1F3B                     	;# 
  4209  1F3C                     	;# 
  4210  1F3D                     	;# 
  4211  1F3E                     	;# 
  4212  1F3F                     	;# 
  4213  1F43                     	;# 
  4214  1F44                     	;# 
  4215  1F45                     	;# 
  4216  1F46                     	;# 
  4217  1F47                     	;# 
  4218  1F48                     	;# 
  4219  1F49                     	;# 
  4220  1F4A                     	;# 
  4221  1F4E                     	;# 
  4222  1F4F                     	;# 
  4223  1F50                     	;# 
  4224  1F51                     	;# 
  4225  1F52                     	;# 
  4226  1F53                     	;# 
  4227  1F54                     	;# 
  4228  1F55                     	;# 
  4229  1FE4                     	;# 
  4230  1FE5                     	;# 
  4231  1FE6                     	;# 
  4232  1FE7                     	;# 
  4233  1FE8                     	;# 
  4234  1FE8                     	;# 
  4235  1FE9                     	;# 
  4236  1FEA                     	;# 
  4237  1FEB                     	;# 
  4238  1FED                     	;# 
  4239  1FEE                     	;# 
  4240  1FEF                     	;# 
  4241  0000                     	;# 
  4242  0001                     	;# 
  4243  0002                     	;# 
  4244  0003                     	;# 
  4245  0004                     	;# 
  4246  0005                     	;# 
  4247  0006                     	;# 
  4248  0007                     	;# 
  4249  0008                     	;# 
  4250  0009                     	;# 
  4251  000A                     	;# 
  4252  000B                     	;# 
  4253  000C                     	;# 
  4254  000D                     	;# 
  4255  000E                     	;# 
  4256  0012                     	;# 
  4257  0013                     	;# 
  4258  0014                     	;# 
  4259  0018                     	;# 
  4260  0019                     	;# 
  4261  001A                     	;# 
  4262  008C                     	;# 
  4263  008C                     	;# 
  4264  008D                     	;# 
  4265  008E                     	;# 
  4266  008E                     	;# 
  4267  008F                     	;# 
  4268  0090                     	;# 
  4269  0090                     	;# 
  4270  0091                     	;# 
  4271  0092                     	;# 
  4272  0092                     	;# 
  4273  0093                     	;# 
  4274  0094                     	;# 
  4275  0094                     	;# 
  4276  0095                     	;# 
  4277  0096                     	;# 
  4278  0096                     	;# 
  4279  0097                     	;# 
  4280  0098                     	;# 
  4281  0099                     	;# 
  4282  009A                     	;# 
  4283  009B                     	;# 
  4284  009B                     	;# 
  4285  009C                     	;# 
  4286  009D                     	;# 
  4287  009D                     	;# 
  4288  009E                     	;# 
  4289  009F                     	;# 
  4290  010C                     	;# 
  4291  010C                     	;# 
  4292  010D                     	;# 
  4293  010E                     	;# 
  4294  010F                     	;# 
  4295  010F                     	;# 
  4296  0110                     	;# 
  4297  0111                     	;# 
  4298  0112                     	;# 
  4299  0113                     	;# 
  4300  0114                     	;# 
  4301  0115                     	;# 
  4302  0116                     	;# 
  4303  0117                     	;# 
  4304  0118                     	;# 
  4305  0119                     	;# 
  4306  0119                     	;# 
  4307  0119                     	;# 
  4308  011A                     	;# 
  4309  011A                     	;# 
  4310  011A                     	;# 
  4311  011B                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011C                     	;# 
  4317  011C                     	;# 
  4318  011C                     	;# 
  4319  011D                     	;# 
  4320  011D                     	;# 
  4321  011D                     	;# 
  4322  011E                     	;# 
  4323  011E                     	;# 
  4324  011E                     	;# 
  4325  011F                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  018C                     	;# 
  4331  018D                     	;# 
  4332  018E                     	;# 
  4333  018F                     	;# 
  4334  0190                     	;# 
  4335  0191                     	;# 
  4336  0192                     	;# 
  4337  0196                     	;# 
  4338  0197                     	;# 
  4339  0198                     	;# 
  4340  0199                     	;# 
  4341  019A                     	;# 
  4342  019B                     	;# 
  4343  019C                     	;# 
  4344  020C                     	;# 
  4345  020D                     	;# 
  4346  020E                     	;# 
  4347  020E                     	;# 
  4348  020F                     	;# 
  4349  020F                     	;# 
  4350  0210                     	;# 
  4351  0210                     	;# 
  4352  0211                     	;# 
  4353  0211                     	;# 
  4354  0212                     	;# 
  4355  0213                     	;# 
  4356  0214                     	;# 
  4357  0214                     	;# 
  4358  0215                     	;# 
  4359  0215                     	;# 
  4360  0216                     	;# 
  4361  0216                     	;# 
  4362  0217                     	;# 
  4363  0217                     	;# 
  4364  0218                     	;# 
  4365  0219                     	;# 
  4366  021A                     	;# 
  4367  021A                     	;# 
  4368  021B                     	;# 
  4369  021B                     	;# 
  4370  021C                     	;# 
  4371  021C                     	;# 
  4372  021D                     	;# 
  4373  021D                     	;# 
  4374  021E                     	;# 
  4375  021F                     	;# 
  4376  028C                     	;# 
  4377  028C                     	;# 
  4378  028D                     	;# 
  4379  028D                     	;# 
  4380  028E                     	;# 
  4381  028F                     	;# 
  4382  0290                     	;# 
  4383  0291                     	;# 
  4384  0292                     	;# 
  4385  0292                     	;# 
  4386  0293                     	;# 
  4387  0293                     	;# 
  4388  0294                     	;# 
  4389  0295                     	;# 
  4390  0296                     	;# 
  4391  0297                     	;# 
  4392  0298                     	;# 
  4393  0298                     	;# 
  4394  0299                     	;# 
  4395  0299                     	;# 
  4396  029A                     	;# 
  4397  029B                     	;# 
  4398  029C                     	;# 
  4399  029D                     	;# 
  4400  029F                     	;# 
  4401  030C                     	;# 
  4402  030C                     	;# 
  4403  030D                     	;# 
  4404  030E                     	;# 
  4405  030F                     	;# 
  4406  0310                     	;# 
  4407  0310                     	;# 
  4408  0311                     	;# 
  4409  0312                     	;# 
  4410  0313                     	;# 
  4411  0314                     	;# 
  4412  0314                     	;# 
  4413  0315                     	;# 
  4414  0316                     	;# 
  4415  0317                     	;# 
  4416  0318                     	;# 
  4417  0318                     	;# 
  4418  0319                     	;# 
  4419  031A                     	;# 
  4420  031B                     	;# 
  4421  038C                     	;# 
  4422  038C                     	;# 
  4423  038D                     	;# 
  4424  038E                     	;# 
  4425  0390                     	;# 
  4426  0390                     	;# 
  4427  0391                     	;# 
  4428  0392                     	;# 
  4429  048C                     	;# 
  4430  048C                     	;# 
  4431  048D                     	;# 
  4432  048E                     	;# 
  4433  048F                     	;# 
  4434  048F                     	;# 
  4435  0490                     	;# 
  4436  0491                     	;# 
  4437  0492                     	;# 
  4438  0492                     	;# 
  4439  0493                     	;# 
  4440  0494                     	;# 
  4441  0495                     	;# 
  4442  0495                     	;# 
  4443  0496                     	;# 
  4444  0497                     	;# 
  4445  0498                     	;# 
  4446  0499                     	;# 
  4447  049A                     	;# 
  4448  049B                     	;# 
  4449  049C                     	;# 
  4450  049D                     	;# 
  4451  058C                     	;# 
  4452  058C                     	;# 
  4453  058D                     	;# 
  4454  058E                     	;# 
  4455  058F                     	;# 
  4456  058F                     	;# 
  4457  0590                     	;# 
  4458  0591                     	;# 
  4459  0592                     	;# 
  4460  0593                     	;# 
  4461  059C                     	;# 
  4462  059C                     	;# 
  4463  059D                     	;# 
  4464  059D                     	;# 
  4465  059E                     	;# 
  4466  059F                     	;# 
  4467  060C                     	;# 
  4468  060C                     	;# 
  4469  060D                     	;# 
  4470  060D                     	;# 
  4471  060E                     	;# 
  4472  060F                     	;# 
  4473  0610                     	;# 
  4474  0611                     	;# 
  4475  0612                     	;# 
  4476  0613                     	;# 
  4477  0614                     	;# 
  4478  0616                     	;# 
  4479  0616                     	;# 
  4480  0617                     	;# 
  4481  0617                     	;# 
  4482  0618                     	;# 
  4483  0619                     	;# 
  4484  061A                     	;# 
  4485  061B                     	;# 
  4486  061C                     	;# 
  4487  061D                     	;# 
  4488  061E                     	;# 
  4489  070C                     	;# 
  4490  070D                     	;# 
  4491  070E                     	;# 
  4492  070F                     	;# 
  4493  0710                     	;# 
  4494  0711                     	;# 
  4495  0712                     	;# 
  4496  0713                     	;# 
  4497  0714                     	;# 
  4498  0716                     	;# 
  4499  0717                     	;# 
  4500  0718                     	;# 
  4501  0719                     	;# 
  4502  071A                     	;# 
  4503  071B                     	;# 
  4504  071C                     	;# 
  4505  071D                     	;# 
  4506  071E                     	;# 
  4507  0796                     	;# 
  4508  0797                     	;# 
  4509  0798                     	;# 
  4510  0799                     	;# 
  4511  079A                     	;# 
  4512  079B                     	;# 
  4513  079C                     	;# 
  4514  079D                     	;# 
  4515  080C                     	;# 
  4516  080D                     	;# 
  4517  080E                     	;# 
  4518  080F                     	;# 
  4519  0810                     	;# 
  4520  0811                     	;# 
  4521  0812                     	;# 
  4522  0813                     	;# 
  4523  0814                     	;# 
  4524  081A                     	;# 
  4525  081A                     	;# 
  4526  081B                     	;# 
  4527  081C                     	;# 
  4528  081C                     	;# 
  4529  081D                     	;# 
  4530  081E                     	;# 
  4531  081F                     	;# 
  4532  088C                     	;# 
  4533  088D                     	;# 
  4534  088E                     	;# 
  4535  088F                     	;# 
  4536  0890                     	;# 
  4537  0891                     	;# 
  4538  0892                     	;# 
  4539  0893                     	;# 
  4540  0895                     	;# 
  4541  0896                     	;# 
  4542  0897                     	;# 
  4543  0898                     	;# 
  4544  0899                     	;# 
  4545  089A                     	;# 
  4546  089B                     	;# 
  4547  090C                     	;# 
  4548  090E                     	;# 
  4549  090F                     	;# 
  4550  091F                     	;# 
  4551  098F                     	;# 
  4552  098F                     	;# 
  4553  0990                     	;# 
  4554  0991                     	;# 
  4555  0992                     	;# 
  4556  0993                     	;# 
  4557  0994                     	;# 
  4558  0995                     	;# 
  4559  0996                     	;# 
  4560  0997                     	;# 
  4561  1E0F                     	;# 
  4562  1E10                     	;# 
  4563  1E11                     	;# 
  4564  1E12                     	;# 
  4565  1E13                     	;# 
  4566  1E14                     	;# 
  4567  1E15                     	;# 
  4568  1E16                     	;# 
  4569  1E17                     	;# 
  4570  1E18                     	;# 
  4571  1E19                     	;# 
  4572  1E1A                     	;# 
  4573  1E1B                     	;# 
  4574  1E1C                     	;# 
  4575  1E1D                     	;# 
  4576  1E1E                     	;# 
  4577  1E1F                     	;# 
  4578  1E20                     	;# 
  4579  1E21                     	;# 
  4580  1E22                     	;# 
  4581  1E23                     	;# 
  4582  1E24                     	;# 
  4583  1E25                     	;# 
  4584  1E26                     	;# 
  4585  1E27                     	;# 
  4586  1E28                     	;# 
  4587  1E29                     	;# 
  4588  1E2A                     	;# 
  4589  1E2B                     	;# 
  4590  1E2C                     	;# 
  4591  1E2D                     	;# 
  4592  1E2E                     	;# 
  4593  1E2F                     	;# 
  4594  1E30                     	;# 
  4595  1E31                     	;# 
  4596  1E32                     	;# 
  4597  1E33                     	;# 
  4598  1E34                     	;# 
  4599  1E35                     	;# 
  4600  1E36                     	;# 
  4601  1E37                     	;# 
  4602  1E8F                     	;# 
  4603  1E90                     	;# 
  4604  1E91                     	;# 
  4605  1E92                     	;# 
  4606  1E93                     	;# 
  4607  1E94                     	;# 
  4608  1E95                     	;# 
  4609  1E96                     	;# 
  4610  1E97                     	;# 
  4611  1E9C                     	;# 
  4612  1E9D                     	;# 
  4613  1E9E                     	;# 
  4614  1EA1                     	;# 
  4615  1EA2                     	;# 
  4616  1EA3                     	;# 
  4617  1EA4                     	;# 
  4618  1EA9                     	;# 
  4619  1EAA                     	;# 
  4620  1EB1                     	;# 
  4621  1EB2                     	;# 
  4622  1EB8                     	;# 
  4623  1EB9                     	;# 
  4624  1EBA                     	;# 
  4625  1EBB                     	;# 
  4626  1EBC                     	;# 
  4627  1EBD                     	;# 
  4628  1EBE                     	;# 
  4629  1EC3                     	;# 
  4630  1EC5                     	;# 
  4631  1EC6                     	;# 
  4632  1EC7                     	;# 
  4633  1EC8                     	;# 
  4634  1EC9                     	;# 
  4635  1ECA                     	;# 
  4636  1ECB                     	;# 
  4637  1ECB                     	;# 
  4638  1ECB                     	;# 
  4639  1ECC                     	;# 
  4640  1ECC                     	;# 
  4641  1ECC                     	;# 
  4642  1F10                     	;# 
  4643  1F11                     	;# 
  4644  1F12                     	;# 
  4645  1F14                     	;# 
  4646  1F15                     	;# 
  4647  1F1C                     	;# 
  4648  1F1D                     	;# 
  4649  1F1E                     	;# 
  4650  1F1F                     	;# 
  4651  1F20                     	;# 
  4652  1F21                     	;# 
  4653  1F22                     	;# 
  4654  1F23                     	;# 
  4655  1F24                     	;# 
  4656  1F25                     	;# 
  4657  1F26                     	;# 
  4658  1F27                     	;# 
  4659  1F38                     	;# 
  4660  1F39                     	;# 
  4661  1F3A                     	;# 
  4662  1F3B                     	;# 
  4663  1F3C                     	;# 
  4664  1F3D                     	;# 
  4665  1F3E                     	;# 
  4666  1F3F                     	;# 
  4667  1F43                     	;# 
  4668  1F44                     	;# 
  4669  1F45                     	;# 
  4670  1F46                     	;# 
  4671  1F47                     	;# 
  4672  1F48                     	;# 
  4673  1F49                     	;# 
  4674  1F4A                     	;# 
  4675  1F4E                     	;# 
  4676  1F4F                     	;# 
  4677  1F50                     	;# 
  4678  1F51                     	;# 
  4679  1F52                     	;# 
  4680  1F53                     	;# 
  4681  1F54                     	;# 
  4682  1F55                     	;# 
  4683  1FE4                     	;# 
  4684  1FE5                     	;# 
  4685  1FE6                     	;# 
  4686  1FE7                     	;# 
  4687  1FE8                     	;# 
  4688  1FE8                     	;# 
  4689  1FE9                     	;# 
  4690  1FEA                     	;# 
  4691  1FEB                     	;# 
  4692  1FED                     	;# 
  4693  1FEE                     	;# 
  4694  1FEF                     	;# 
  4695  0000                     	;# 
  4696  0001                     	;# 
  4697  0002                     	;# 
  4698  0003                     	;# 
  4699  0004                     	;# 
  4700  0005                     	;# 
  4701  0006                     	;# 
  4702  0007                     	;# 
  4703  0008                     	;# 
  4704  0009                     	;# 
  4705  000A                     	;# 
  4706  000B                     	;# 
  4707  000C                     	;# 
  4708  000D                     	;# 
  4709  000E                     	;# 
  4710  0012                     	;# 
  4711  0013                     	;# 
  4712  0014                     	;# 
  4713  0018                     	;# 
  4714  0019                     	;# 
  4715  001A                     	;# 
  4716  008C                     	;# 
  4717  008C                     	;# 
  4718  008D                     	;# 
  4719  008E                     	;# 
  4720  008E                     	;# 
  4721  008F                     	;# 
  4722  0090                     	;# 
  4723  0090                     	;# 
  4724  0091                     	;# 
  4725  0092                     	;# 
  4726  0092                     	;# 
  4727  0093                     	;# 
  4728  0094                     	;# 
  4729  0094                     	;# 
  4730  0095                     	;# 
  4731  0096                     	;# 
  4732  0096                     	;# 
  4733  0097                     	;# 
  4734  0098                     	;# 
  4735  0099                     	;# 
  4736  009A                     	;# 
  4737  009B                     	;# 
  4738  009B                     	;# 
  4739  009C                     	;# 
  4740  009D                     	;# 
  4741  009D                     	;# 
  4742  009E                     	;# 
  4743  009F                     	;# 
  4744  010C                     	;# 
  4745  010C                     	;# 
  4746  010D                     	;# 
  4747  010E                     	;# 
  4748  010F                     	;# 
  4749  010F                     	;# 
  4750  0110                     	;# 
  4751  0111                     	;# 
  4752  0112                     	;# 
  4753  0113                     	;# 
  4754  0114                     	;# 
  4755  0115                     	;# 
  4756  0116                     	;# 
  4757  0117                     	;# 
  4758  0118                     	;# 
  4759  0119                     	;# 
  4760  0119                     	;# 
  4761  0119                     	;# 
  4762  011A                     	;# 
  4763  011A                     	;# 
  4764  011A                     	;# 
  4765  011B                     	;# 
  4766  011B                     	;# 
  4767  011B                     	;# 
  4768  011B                     	;# 
  4769  011B                     	;# 
  4770  011C                     	;# 
  4771  011C                     	;# 
  4772  011C                     	;# 
  4773  011D                     	;# 
  4774  011D                     	;# 
  4775  011D                     	;# 
  4776  011E                     	;# 
  4777  011E                     	;# 
  4778  011E                     	;# 
  4779  011F                     	;# 
  4780  011F                     	;# 
  4781  011F                     	;# 
  4782  011F                     	;# 
  4783  011F                     	;# 
  4784  018C                     	;# 
  4785  018D                     	;# 
  4786  018E                     	;# 
  4787  018F                     	;# 
  4788  0190                     	;# 
  4789  0191                     	;# 
  4790  0192                     	;# 
  4791  0196                     	;# 
  4792  0197                     	;# 
  4793  0198                     	;# 
  4794  0199                     	;# 
  4795  019A                     	;# 
  4796  019B                     	;# 
  4797  019C                     	;# 
  4798  020C                     	;# 
  4799  020D                     	;# 
  4800  020E                     	;# 
  4801  020E                     	;# 
  4802  020F                     	;# 
  4803  020F                     	;# 
  4804  0210                     	;# 
  4805  0210                     	;# 
  4806  0211                     	;# 
  4807  0211                     	;# 
  4808  0212                     	;# 
  4809  0213                     	;# 
  4810  0214                     	;# 
  4811  0214                     	;# 
  4812  0215                     	;# 
  4813  0215                     	;# 
  4814  0216                     	;# 
  4815  0216                     	;# 
  4816  0217                     	;# 
  4817  0217                     	;# 
  4818  0218                     	;# 
  4819  0219                     	;# 
  4820  021A                     	;# 
  4821  021A                     	;# 
  4822  021B                     	;# 
  4823  021B                     	;# 
  4824  021C                     	;# 
  4825  021C                     	;# 
  4826  021D                     	;# 
  4827  021D                     	;# 
  4828  021E                     	;# 
  4829  021F                     	;# 
  4830  028C                     	;# 
  4831  028C                     	;# 
  4832  028D                     	;# 
  4833  028D                     	;# 
  4834  028E                     	;# 
  4835  028F                     	;# 
  4836  0290                     	;# 
  4837  0291                     	;# 
  4838  0292                     	;# 
  4839  0292                     	;# 
  4840  0293                     	;# 
  4841  0293                     	;# 
  4842  0294                     	;# 
  4843  0295                     	;# 
  4844  0296                     	;# 
  4845  0297                     	;# 
  4846  0298                     	;# 
  4847  0298                     	;# 
  4848  0299                     	;# 
  4849  0299                     	;# 
  4850  029A                     	;# 
  4851  029B                     	;# 
  4852  029C                     	;# 
  4853  029D                     	;# 
  4854  029F                     	;# 
  4855  030C                     	;# 
  4856  030C                     	;# 
  4857  030D                     	;# 
  4858  030E                     	;# 
  4859  030F                     	;# 
  4860  0310                     	;# 
  4861  0310                     	;# 
  4862  0311                     	;# 
  4863  0312                     	;# 
  4864  0313                     	;# 
  4865  0314                     	;# 
  4866  0314                     	;# 
  4867  0315                     	;# 
  4868  0316                     	;# 
  4869  0317                     	;# 
  4870  0318                     	;# 
  4871  0318                     	;# 
  4872  0319                     	;# 
  4873  031A                     	;# 
  4874  031B                     	;# 
  4875  038C                     	;# 
  4876  038C                     	;# 
  4877  038D                     	;# 
  4878  038E                     	;# 
  4879  0390                     	;# 
  4880  0390                     	;# 
  4881  0391                     	;# 
  4882  0392                     	;# 
  4883  048C                     	;# 
  4884  048C                     	;# 
  4885  048D                     	;# 
  4886  048E                     	;# 
  4887  048F                     	;# 
  4888  048F                     	;# 
  4889  0490                     	;# 
  4890  0491                     	;# 
  4891  0492                     	;# 
  4892  0492                     	;# 
  4893  0493                     	;# 
  4894  0494                     	;# 
  4895  0495                     	;# 
  4896  0495                     	;# 
  4897  0496                     	;# 
  4898  0497                     	;# 
  4899  0498                     	;# 
  4900  0499                     	;# 
  4901  049A                     	;# 
  4902  049B                     	;# 
  4903  049C                     	;# 
  4904  049D                     	;# 
  4905  058C                     	;# 
  4906  058C                     	;# 
  4907  058D                     	;# 
  4908  058E                     	;# 
  4909  058F                     	;# 
  4910  058F                     	;# 
  4911  0590                     	;# 
  4912  0591                     	;# 
  4913  0592                     	;# 
  4914  0593                     	;# 
  4915  059C                     	;# 
  4916  059C                     	;# 
  4917  059D                     	;# 
  4918  059D                     	;# 
  4919  059E                     	;# 
  4920  059F                     	;# 
  4921  060C                     	;# 
  4922  060C                     	;# 
  4923  060D                     	;# 
  4924  060D                     	;# 
  4925  060E                     	;# 
  4926  060F                     	;# 
  4927  0610                     	;# 
  4928  0611                     	;# 
  4929  0612                     	;# 
  4930  0613                     	;# 
  4931  0614                     	;# 
  4932  0616                     	;# 
  4933  0616                     	;# 
  4934  0617                     	;# 
  4935  0617                     	;# 
  4936  0618                     	;# 
  4937  0619                     	;# 
  4938  061A                     	;# 
  4939  061B                     	;# 
  4940  061C                     	;# 
  4941  061D                     	;# 
  4942  061E                     	;# 
  4943  070C                     	;# 
  4944  070D                     	;# 
  4945  070E                     	;# 
  4946  070F                     	;# 
  4947  0710                     	;# 
  4948  0711                     	;# 
  4949  0712                     	;# 
  4950  0713                     	;# 
  4951  0714                     	;# 
  4952  0716                     	;# 
  4953  0717                     	;# 
  4954  0718                     	;# 
  4955  0719                     	;# 
  4956  071A                     	;# 
  4957  071B                     	;# 
  4958  071C                     	;# 
  4959  071D                     	;# 
  4960  071E                     	;# 
  4961  0796                     	;# 
  4962  0797                     	;# 
  4963  0798                     	;# 
  4964  0799                     	;# 
  4965  079A                     	;# 
  4966  079B                     	;# 
  4967  079C                     	;# 
  4968  079D                     	;# 
  4969  080C                     	;# 
  4970  080D                     	;# 
  4971  080E                     	;# 
  4972  080F                     	;# 
  4973  0810                     	;# 
  4974  0811                     	;# 
  4975  0812                     	;# 
  4976  0813                     	;# 
  4977  0814                     	;# 
  4978  081A                     	;# 
  4979  081A                     	;# 
  4980  081B                     	;# 
  4981  081C                     	;# 
  4982  081C                     	;# 
  4983  081D                     	;# 
  4984  081E                     	;# 
  4985  081F                     	;# 
  4986  088C                     	;# 
  4987  088D                     	;# 
  4988  088E                     	;# 
  4989  088F                     	;# 
  4990  0890                     	;# 
  4991  0891                     	;# 
  4992  0892                     	;# 
  4993  0893                     	;# 
  4994  0895                     	;# 
  4995  0896                     	;# 
  4996  0897                     	;# 
  4997  0898                     	;# 
  4998  0899                     	;# 
  4999  089A                     	;# 
  5000  089B                     	;# 
  5001  090C                     	;# 
  5002  090E                     	;# 
  5003  090F                     	;# 
  5004  091F                     	;# 
  5005  098F                     	;# 
  5006  098F                     	;# 
  5007  0990                     	;# 
  5008  0991                     	;# 
  5009  0992                     	;# 
  5010  0993                     	;# 
  5011  0994                     	;# 
  5012  0995                     	;# 
  5013  0996                     	;# 
  5014  0997                     	;# 
  5015  1E0F                     	;# 
  5016  1E10                     	;# 
  5017  1E11                     	;# 
  5018  1E12                     	;# 
  5019  1E13                     	;# 
  5020  1E14                     	;# 
  5021  1E15                     	;# 
  5022  1E16                     	;# 
  5023  1E17                     	;# 
  5024  1E18                     	;# 
  5025  1E19                     	;# 
  5026  1E1A                     	;# 
  5027  1E1B                     	;# 
  5028  1E1C                     	;# 
  5029  1E1D                     	;# 
  5030  1E1E                     	;# 
  5031  1E1F                     	;# 
  5032  1E20                     	;# 
  5033  1E21                     	;# 
  5034  1E22                     	;# 
  5035  1E23                     	;# 
  5036  1E24                     	;# 
  5037  1E25                     	;# 
  5038  1E26                     	;# 
  5039  1E27                     	;# 
  5040  1E28                     	;# 
  5041  1E29                     	;# 
  5042  1E2A                     	;# 
  5043  1E2B                     	;# 
  5044  1E2C                     	;# 
  5045  1E2D                     	;# 
  5046  1E2E                     	;# 
  5047  1E2F                     	;# 
  5048  1E30                     	;# 
  5049  1E31                     	;# 
  5050  1E32                     	;# 
  5051  1E33                     	;# 
  5052  1E34                     	;# 
  5053  1E35                     	;# 
  5054  1E36                     	;# 
  5055  1E37                     	;# 
  5056  1E8F                     	;# 
  5057  1E90                     	;# 
  5058  1E91                     	;# 
  5059  1E92                     	;# 
  5060  1E93                     	;# 
  5061  1E94                     	;# 
  5062  1E95                     	;# 
  5063  1E96                     	;# 
  5064  1E97                     	;# 
  5065  1E9C                     	;# 
  5066  1E9D                     	;# 
  5067  1E9E                     	;# 
  5068  1EA1                     	;# 
  5069  1EA2                     	;# 
  5070  1EA3                     	;# 
  5071  1EA4                     	;# 
  5072  1EA9                     	;# 
  5073  1EAA                     	;# 
  5074  1EB1                     	;# 
  5075  1EB2                     	;# 
  5076  1EB8                     	;# 
  5077  1EB9                     	;# 
  5078  1EBA                     	;# 
  5079  1EBB                     	;# 
  5080  1EBC                     	;# 
  5081  1EBD                     	;# 
  5082  1EBE                     	;# 
  5083  1EC3                     	;# 
  5084  1EC5                     	;# 
  5085  1EC6                     	;# 
  5086  1EC7                     	;# 
  5087  1EC8                     	;# 
  5088  1EC9                     	;# 
  5089  1ECA                     	;# 
  5090  1ECB                     	;# 
  5091  1ECB                     	;# 
  5092  1ECB                     	;# 
  5093  1ECC                     	;# 
  5094  1ECC                     	;# 
  5095  1ECC                     	;# 
  5096  1F10                     	;# 
  5097  1F11                     	;# 
  5098  1F12                     	;# 
  5099  1F14                     	;# 
  5100  1F15                     	;# 
  5101  1F1C                     	;# 
  5102  1F1D                     	;# 
  5103  1F1E                     	;# 
  5104  1F1F                     	;# 
  5105  1F20                     	;# 
  5106  1F21                     	;# 
  5107  1F22                     	;# 
  5108  1F23                     	;# 
  5109  1F24                     	;# 
  5110  1F25                     	;# 
  5111  1F26                     	;# 
  5112  1F27                     	;# 
  5113  1F38                     	;# 
  5114  1F39                     	;# 
  5115  1F3A                     	;# 
  5116  1F3B                     	;# 
  5117  1F3C                     	;# 
  5118  1F3D                     	;# 
  5119  1F3E                     	;# 
  5120  1F3F                     	;# 
  5121  1F43                     	;# 
  5122  1F44                     	;# 
  5123  1F45                     	;# 
  5124  1F46                     	;# 
  5125  1F47                     	;# 
  5126  1F48                     	;# 
  5127  1F49                     	;# 
  5128  1F4A                     	;# 
  5129  1F4E                     	;# 
  5130  1F4F                     	;# 
  5131  1F50                     	;# 
  5132  1F51                     	;# 
  5133  1F52                     	;# 
  5134  1F53                     	;# 
  5135  1F54                     	;# 
  5136  1F55                     	;# 
  5137  1FE4                     	;# 
  5138  1FE5                     	;# 
  5139  1FE6                     	;# 
  5140  1FE7                     	;# 
  5141  1FE8                     	;# 
  5142  1FE8                     	;# 
  5143  1FE9                     	;# 
  5144  1FEA                     	;# 
  5145  1FEB                     	;# 
  5146  1FED                     	;# 
  5147  1FEE                     	;# 
  5148  1FEF                     	;# 
  5149  0000                     	;# 
  5150  0001                     	;# 
  5151  0002                     	;# 
  5152  0003                     	;# 
  5153  0004                     	;# 
  5154  0005                     	;# 
  5155  0006                     	;# 
  5156  0007                     	;# 
  5157  0008                     	;# 
  5158  0009                     	;# 
  5159  000A                     	;# 
  5160  000B                     	;# 
  5161  000C                     	;# 
  5162  000D                     	;# 
  5163  000E                     	;# 
  5164  0012                     	;# 
  5165  0013                     	;# 
  5166  0014                     	;# 
  5167  0018                     	;# 
  5168  0019                     	;# 
  5169  001A                     	;# 
  5170  008C                     	;# 
  5171  008C                     	;# 
  5172  008D                     	;# 
  5173  008E                     	;# 
  5174  008E                     	;# 
  5175  008F                     	;# 
  5176  0090                     	;# 
  5177  0090                     	;# 
  5178  0091                     	;# 
  5179  0092                     	;# 
  5180  0092                     	;# 
  5181  0093                     	;# 
  5182  0094                     	;# 
  5183  0094                     	;# 
  5184  0095                     	;# 
  5185  0096                     	;# 
  5186  0096                     	;# 
  5187  0097                     	;# 
  5188  0098                     	;# 
  5189  0099                     	;# 
  5190  009A                     	;# 
  5191  009B                     	;# 
  5192  009B                     	;# 
  5193  009C                     	;# 
  5194  009D                     	;# 
  5195  009D                     	;# 
  5196  009E                     	;# 
  5197  009F                     	;# 
  5198  010C                     	;# 
  5199  010C                     	;# 
  5200  010D                     	;# 
  5201  010E                     	;# 
  5202  010F                     	;# 
  5203  010F                     	;# 
  5204  0110                     	;# 
  5205  0111                     	;# 
  5206  0112                     	;# 
  5207  0113                     	;# 
  5208  0114                     	;# 
  5209  0115                     	;# 
  5210  0116                     	;# 
  5211  0117                     	;# 
  5212  0118                     	;# 
  5213  0119                     	;# 
  5214  0119                     	;# 
  5215  0119                     	;# 
  5216  011A                     	;# 
  5217  011A                     	;# 
  5218  011A                     	;# 
  5219  011B                     	;# 
  5220  011B                     	;# 
  5221  011B                     	;# 
  5222  011B                     	;# 
  5223  011B                     	;# 
  5224  011C                     	;# 
  5225  011C                     	;# 
  5226  011C                     	;# 
  5227  011D                     	;# 
  5228  011D                     	;# 
  5229  011D                     	;# 
  5230  011E                     	;# 
  5231  011E                     	;# 
  5232  011E                     	;# 
  5233  011F                     	;# 
  5234  011F                     	;# 
  5235  011F                     	;# 
  5236  011F                     	;# 
  5237  011F                     	;# 
  5238  018C                     	;# 
  5239  018D                     	;# 
  5240  018E                     	;# 
  5241  018F                     	;# 
  5242  0190                     	;# 
  5243  0191                     	;# 
  5244  0192                     	;# 
  5245  0196                     	;# 
  5246  0197                     	;# 
  5247  0198                     	;# 
  5248  0199                     	;# 
  5249  019A                     	;# 
  5250  019B                     	;# 
  5251  019C                     	;# 
  5252  020C                     	;# 
  5253  020D                     	;# 
  5254  020E                     	;# 
  5255  020E                     	;# 
  5256  020F                     	;# 
  5257  020F                     	;# 
  5258  0210                     	;# 
  5259  0210                     	;# 
  5260  0211                     	;# 
  5261  0211                     	;# 
  5262  0212                     	;# 
  5263  0213                     	;# 
  5264  0214                     	;# 
  5265  0214                     	;# 
  5266  0215                     	;# 
  5267  0215                     	;# 
  5268  0216                     	;# 
  5269  0216                     	;# 
  5270  0217                     	;# 
  5271  0217                     	;# 
  5272  0218                     	;# 
  5273  0219                     	;# 
  5274  021A                     	;# 
  5275  021A                     	;# 
  5276  021B                     	;# 
  5277  021B                     	;# 
  5278  021C                     	;# 
  5279  021C                     	;# 
  5280  021D                     	;# 
  5281  021D                     	;# 
  5282  021E                     	;# 
  5283  021F                     	;# 
  5284  028C                     	;# 
  5285  028C                     	;# 
  5286  028D                     	;# 
  5287  028D                     	;# 
  5288  028E                     	;# 
  5289  028F                     	;# 
  5290  0290                     	;# 
  5291  0291                     	;# 
  5292  0292                     	;# 
  5293  0292                     	;# 
  5294  0293                     	;# 
  5295  0293                     	;# 
  5296  0294                     	;# 
  5297  0295                     	;# 
  5298  0296                     	;# 
  5299  0297                     	;# 
  5300  0298                     	;# 
  5301  0298                     	;# 
  5302  0299                     	;# 
  5303  0299                     	;# 
  5304  029A                     	;# 
  5305  029B                     	;# 
  5306  029C                     	;# 
  5307  029D                     	;# 
  5308  029F                     	;# 
  5309  030C                     	;# 
  5310  030C                     	;# 
  5311  030D                     	;# 
  5312  030E                     	;# 
  5313  030F                     	;# 
  5314  0310                     	;# 
  5315  0310                     	;# 
  5316  0311                     	;# 
  5317  0312                     	;# 
  5318  0313                     	;# 
  5319  0314                     	;# 
  5320  0314                     	;# 
  5321  0315                     	;# 
  5322  0316                     	;# 
  5323  0317                     	;# 
  5324  0318                     	;# 
  5325  0318                     	;# 
  5326  0319                     	;# 
  5327  031A                     	;# 
  5328  031B                     	;# 
  5329  038C                     	;# 
  5330  038C                     	;# 
  5331  038D                     	;# 
  5332  038E                     	;# 
  5333  0390                     	;# 
  5334  0390                     	;# 
  5335  0391                     	;# 
  5336  0392                     	;# 
  5337  048C                     	;# 
  5338  048C                     	;# 
  5339  048D                     	;# 
  5340  048E                     	;# 
  5341  048F                     	;# 
  5342  048F                     	;# 
  5343  0490                     	;# 
  5344  0491                     	;# 
  5345  0492                     	;# 
  5346  0492                     	;# 
  5347  0493                     	;# 
  5348  0494                     	;# 
  5349  0495                     	;# 
  5350  0495                     	;# 
  5351  0496                     	;# 
  5352  0497                     	;# 
  5353  0498                     	;# 
  5354  0499                     	;# 
  5355  049A                     	;# 
  5356  049B                     	;# 
  5357  049C                     	;# 
  5358  049D                     	;# 
  5359  058C                     	;# 
  5360  058C                     	;# 
  5361  058D                     	;# 
  5362  058E                     	;# 
  5363  058F                     	;# 
  5364  058F                     	;# 
  5365  0590                     	;# 
  5366  0591                     	;# 
  5367  0592                     	;# 
  5368  0593                     	;# 
  5369  059C                     	;# 
  5370  059C                     	;# 
  5371  059D                     	;# 
  5372  059D                     	;# 
  5373  059E                     	;# 
  5374  059F                     	;# 
  5375  060C                     	;# 
  5376  060C                     	;# 
  5377  060D                     	;# 
  5378  060D                     	;# 
  5379  060E                     	;# 
  5380  060F                     	;# 
  5381  0610                     	;# 
  5382  0611                     	;# 
  5383  0612                     	;# 
  5384  0613                     	;# 
  5385  0614                     	;# 
  5386  0616                     	;# 
  5387  0616                     	;# 
  5388  0617                     	;# 
  5389  0617                     	;# 
  5390  0618                     	;# 
  5391  0619                     	;# 
  5392  061A                     	;# 
  5393  061B                     	;# 
  5394  061C                     	;# 
  5395  061D                     	;# 
  5396  061E                     	;# 
  5397  070C                     	;# 
  5398  070D                     	;# 
  5399  070E                     	;# 
  5400  070F                     	;# 
  5401  0710                     	;# 
  5402  0711                     	;# 
  5403  0712                     	;# 
  5404  0713                     	;# 
  5405  0714                     	;# 
  5406  0716                     	;# 
  5407  0717                     	;# 
  5408  0718                     	;# 
  5409  0719                     	;# 
  5410  071A                     	;# 
  5411  071B                     	;# 
  5412  071C                     	;# 
  5413  071D                     	;# 
  5414  071E                     	;# 
  5415  0796                     	;# 
  5416  0797                     	;# 
  5417  0798                     	;# 
  5418  0799                     	;# 
  5419  079A                     	;# 
  5420  079B                     	;# 
  5421  079C                     	;# 
  5422  079D                     	;# 
  5423  080C                     	;# 
  5424  080D                     	;# 
  5425  080E                     	;# 
  5426  080F                     	;# 
  5427  0810                     	;# 
  5428  0811                     	;# 
  5429  0812                     	;# 
  5430  0813                     	;# 
  5431  0814                     	;# 
  5432  081A                     	;# 
  5433  081A                     	;# 
  5434  081B                     	;# 
  5435  081C                     	;# 
  5436  081C                     	;# 
  5437  081D                     	;# 
  5438  081E                     	;# 
  5439  081F                     	;# 
  5440  088C                     	;# 
  5441  088D                     	;# 
  5442  088E                     	;# 
  5443  088F                     	;# 
  5444  0890                     	;# 
  5445  0891                     	;# 
  5446  0892                     	;# 
  5447  0893                     	;# 
  5448  0895                     	;# 
  5449  0896                     	;# 
  5450  0897                     	;# 
  5451  0898                     	;# 
  5452  0899                     	;# 
  5453  089A                     	;# 
  5454  089B                     	;# 
  5455  090C                     	;# 
  5456  090E                     	;# 
  5457  090F                     	;# 
  5458  091F                     	;# 
  5459  098F                     	;# 
  5460  098F                     	;# 
  5461  0990                     	;# 
  5462  0991                     	;# 
  5463  0992                     	;# 
  5464  0993                     	;# 
  5465  0994                     	;# 
  5466  0995                     	;# 
  5467  0996                     	;# 
  5468  0997                     	;# 
  5469  1E0F                     	;# 
  5470  1E10                     	;# 
  5471  1E11                     	;# 
  5472  1E12                     	;# 
  5473  1E13                     	;# 
  5474  1E14                     	;# 
  5475  1E15                     	;# 
  5476  1E16                     	;# 
  5477  1E17                     	;# 
  5478  1E18                     	;# 
  5479  1E19                     	;# 
  5480  1E1A                     	;# 
  5481  1E1B                     	;# 
  5482  1E1C                     	;# 
  5483  1E1D                     	;# 
  5484  1E1E                     	;# 
  5485  1E1F                     	;# 
  5486  1E20                     	;# 
  5487  1E21                     	;# 
  5488  1E22                     	;# 
  5489  1E23                     	;# 
  5490  1E24                     	;# 
  5491  1E25                     	;# 
  5492  1E26                     	;# 
  5493  1E27                     	;# 
  5494  1E28                     	;# 
  5495  1E29                     	;# 
  5496  1E2A                     	;# 
  5497  1E2B                     	;# 
  5498  1E2C                     	;# 
  5499  1E2D                     	;# 
  5500  1E2E                     	;# 
  5501  1E2F                     	;# 
  5502  1E30                     	;# 
  5503  1E31                     	;# 
  5504  1E32                     	;# 
  5505  1E33                     	;# 
  5506  1E34                     	;# 
  5507  1E35                     	;# 
  5508  1E36                     	;# 
  5509  1E37                     	;# 
  5510  1E8F                     	;# 
  5511  1E90                     	;# 
  5512  1E91                     	;# 
  5513  1E92                     	;# 
  5514  1E93                     	;# 
  5515  1E94                     	;# 
  5516  1E95                     	;# 
  5517  1E96                     	;# 
  5518  1E97                     	;# 
  5519  1E9C                     	;# 
  5520  1E9D                     	;# 
  5521  1E9E                     	;# 
  5522  1EA1                     	;# 
  5523  1EA2                     	;# 
  5524  1EA3                     	;# 
  5525  1EA4                     	;# 
  5526  1EA9                     	;# 
  5527  1EAA                     	;# 
  5528  1EB1                     	;# 
  5529  1EB2                     	;# 
  5530  1EB8                     	;# 
  5531  1EB9                     	;# 
  5532  1EBA                     	;# 
  5533  1EBB                     	;# 
  5534  1EBC                     	;# 
  5535  1EBD                     	;# 
  5536  1EBE                     	;# 
  5537  1EC3                     	;# 
  5538  1EC5                     	;# 
  5539  1EC6                     	;# 
  5540  1EC7                     	;# 
  5541  1EC8                     	;# 
  5542  1EC9                     	;# 
  5543  1ECA                     	;# 
  5544  1ECB                     	;# 
  5545  1ECB                     	;# 
  5546  1ECB                     	;# 
  5547  1ECC                     	;# 
  5548  1ECC                     	;# 
  5549  1ECC                     	;# 
  5550  1F10                     	;# 
  5551  1F11                     	;# 
  5552  1F12                     	;# 
  5553  1F14                     	;# 
  5554  1F15                     	;# 
  5555  1F1C                     	;# 
  5556  1F1D                     	;# 
  5557  1F1E                     	;# 
  5558  1F1F                     	;# 
  5559  1F20                     	;# 
  5560  1F21                     	;# 
  5561  1F22                     	;# 
  5562  1F23                     	;# 
  5563  1F24                     	;# 
  5564  1F25                     	;# 
  5565  1F26                     	;# 
  5566  1F27                     	;# 
  5567  1F38                     	;# 
  5568  1F39                     	;# 
  5569  1F3A                     	;# 
  5570  1F3B                     	;# 
  5571  1F3C                     	;# 
  5572  1F3D                     	;# 
  5573  1F3E                     	;# 
  5574  1F3F                     	;# 
  5575  1F43                     	;# 
  5576  1F44                     	;# 
  5577  1F45                     	;# 
  5578  1F46                     	;# 
  5579  1F47                     	;# 
  5580  1F48                     	;# 
  5581  1F49                     	;# 
  5582  1F4A                     	;# 
  5583  1F4E                     	;# 
  5584  1F4F                     	;# 
  5585  1F50                     	;# 
  5586  1F51                     	;# 
  5587  1F52                     	;# 
  5588  1F53                     	;# 
  5589  1F54                     	;# 
  5590  1F55                     	;# 
  5591  1FE4                     	;# 
  5592  1FE5                     	;# 
  5593  1FE6                     	;# 
  5594  1FE7                     	;# 
  5595  1FE8                     	;# 
  5596  1FE8                     	;# 
  5597  1FE9                     	;# 
  5598  1FEA                     	;# 
  5599  1FEB                     	;# 
  5600  1FED                     	;# 
  5601  1FEE                     	;# 
  5602  1FEF                     	;# 
  5603  0000                     	;# 
  5604  0001                     	;# 
  5605  0002                     	;# 
  5606  0003                     	;# 
  5607  0004                     	;# 
  5608  0005                     	;# 
  5609  0006                     	;# 
  5610  0007                     	;# 
  5611  0008                     	;# 
  5612  0009                     	;# 
  5613  000A                     	;# 
  5614  000B                     	;# 
  5615  000C                     	;# 
  5616  000D                     	;# 
  5617  000E                     	;# 
  5618  0012                     	;# 
  5619  0013                     	;# 
  5620  0014                     	;# 
  5621  0018                     	;# 
  5622  0019                     	;# 
  5623  001A                     	;# 
  5624  008C                     	;# 
  5625  008C                     	;# 
  5626  008D                     	;# 
  5627  008E                     	;# 
  5628  008E                     	;# 
  5629  008F                     	;# 
  5630  0090                     	;# 
  5631  0090                     	;# 
  5632  0091                     	;# 
  5633  0092                     	;# 
  5634  0092                     	;# 
  5635  0093                     	;# 
  5636  0094                     	;# 
  5637  0094                     	;# 
  5638  0095                     	;# 
  5639  0096                     	;# 
  5640  0096                     	;# 
  5641  0097                     	;# 
  5642  0098                     	;# 
  5643  0099                     	;# 
  5644  009A                     	;# 
  5645  009B                     	;# 
  5646  009B                     	;# 
  5647  009C                     	;# 
  5648  009D                     	;# 
  5649  009D                     	;# 
  5650  009E                     	;# 
  5651  009F                     	;# 
  5652  010C                     	;# 
  5653  010C                     	;# 
  5654  010D                     	;# 
  5655  010E                     	;# 
  5656  010F                     	;# 
  5657  010F                     	;# 
  5658  0110                     	;# 
  5659  0111                     	;# 
  5660  0112                     	;# 
  5661  0113                     	;# 
  5662  0114                     	;# 
  5663  0115                     	;# 
  5664  0116                     	;# 
  5665  0117                     	;# 
  5666  0118                     	;# 
  5667  0119                     	;# 
  5668  0119                     	;# 
  5669  0119                     	;# 
  5670  011A                     	;# 
  5671  011A                     	;# 
  5672  011A                     	;# 
  5673  011B                     	;# 
  5674  011B                     	;# 
  5675  011B                     	;# 
  5676  011B                     	;# 
  5677  011B                     	;# 
  5678  011C                     	;# 
  5679  011C                     	;# 
  5680  011C                     	;# 
  5681  011D                     	;# 
  5682  011D                     	;# 
  5683  011D                     	;# 
  5684  011E                     	;# 
  5685  011E                     	;# 
  5686  011E                     	;# 
  5687  011F                     	;# 
  5688  011F                     	;# 
  5689  011F                     	;# 
  5690  011F                     	;# 
  5691  011F                     	;# 
  5692  018C                     	;# 
  5693  018D                     	;# 
  5694  018E                     	;# 
  5695  018F                     	;# 
  5696  0190                     	;# 
  5697  0191                     	;# 
  5698  0192                     	;# 
  5699  0196                     	;# 
  5700  0197                     	;# 
  5701  0198                     	;# 
  5702  0199                     	;# 
  5703  019A                     	;# 
  5704  019B                     	;# 
  5705  019C                     	;# 
  5706  020C                     	;# 
  5707  020D                     	;# 
  5708  020E                     	;# 
  5709  020E                     	;# 
  5710  020F                     	;# 
  5711  020F                     	;# 
  5712  0210                     	;# 
  5713  0210                     	;# 
  5714  0211                     	;# 
  5715  0211                     	;# 
  5716  0212                     	;# 
  5717  0213                     	;# 
  5718  0214                     	;# 
  5719  0214                     	;# 
  5720  0215                     	;# 
  5721  0215                     	;# 
  5722  0216                     	;# 
  5723  0216                     	;# 
  5724  0217                     	;# 
  5725  0217                     	;# 
  5726  0218                     	;# 
  5727  0219                     	;# 
  5728  021A                     	;# 
  5729  021A                     	;# 
  5730  021B                     	;# 
  5731  021B                     	;# 
  5732  021C                     	;# 
  5733  021C                     	;# 
  5734  021D                     	;# 
  5735  021D                     	;# 
  5736  021E                     	;# 
  5737  021F                     	;# 
  5738  028C                     	;# 
  5739  028C                     	;# 
  5740  028D                     	;# 
  5741  028D                     	;# 
  5742  028E                     	;# 
  5743  028F                     	;# 
  5744  0290                     	;# 
  5745  0291                     	;# 
  5746  0292                     	;# 
  5747  0292                     	;# 
  5748  0293                     	;# 
  5749  0293                     	;# 
  5750  0294                     	;# 
  5751  0295                     	;# 
  5752  0296                     	;# 
  5753  0297                     	;# 
  5754  0298                     	;# 
  5755  0298                     	;# 
  5756  0299                     	;# 
  5757  0299                     	;# 
  5758  029A                     	;# 
  5759  029B                     	;# 
  5760  029C                     	;# 
  5761  029D                     	;# 
  5762  029F                     	;# 
  5763  030C                     	;# 
  5764  030C                     	;# 
  5765  030D                     	;# 
  5766  030E                     	;# 
  5767  030F                     	;# 
  5768  0310                     	;# 
  5769  0310                     	;# 
  5770  0311                     	;# 
  5771  0312                     	;# 
  5772  0313                     	;# 
  5773  0314                     	;# 
  5774  0314                     	;# 
  5775  0315                     	;# 
  5776  0316                     	;# 
  5777  0317                     	;# 
  5778  0318                     	;# 
  5779  0318                     	;# 
  5780  0319                     	;# 
  5781  031A                     	;# 
  5782  031B                     	;# 
  5783  038C                     	;# 
  5784  038C                     	;# 
  5785  038D                     	;# 
  5786  038E                     	;# 
  5787  0390                     	;# 
  5788  0390                     	;# 
  5789  0391                     	;# 
  5790  0392                     	;# 
  5791  048C                     	;# 
  5792  048C                     	;# 
  5793  048D                     	;# 
  5794  048E                     	;# 
  5795  048F                     	;# 
  5796  048F                     	;# 
  5797  0490                     	;# 
  5798  0491                     	;# 
  5799  0492                     	;# 
  5800  0492                     	;# 
  5801  0493                     	;# 
  5802  0494                     	;# 
  5803  0495                     	;# 
  5804  0495                     	;# 
  5805  0496                     	;# 
  5806  0497                     	;# 
  5807  0498                     	;# 
  5808  0499                     	;# 
  5809  049A                     	;# 
  5810  049B                     	;# 
  5811  049C                     	;# 
  5812  049D                     	;# 
  5813  058C                     	;# 
  5814  058C                     	;# 
  5815  058D                     	;# 
  5816  058E                     	;# 
  5817  058F                     	;# 
  5818  058F                     	;# 
  5819  0590                     	;# 
  5820  0591                     	;# 
  5821  0592                     	;# 
  5822  0593                     	;# 
  5823  059C                     	;# 
  5824  059C                     	;# 
  5825  059D                     	;# 
  5826  059D                     	;# 
  5827  059E                     	;# 
  5828  059F                     	;# 
  5829  060C                     	;# 
  5830  060C                     	;# 
  5831  060D                     	;# 
  5832  060D                     	;# 
  5833  060E                     	;# 
  5834  060F                     	;# 
  5835  0610                     	;# 
  5836  0611                     	;# 
  5837  0612                     	;# 
  5838  0613                     	;# 
  5839  0614                     	;# 
  5840  0616                     	;# 
  5841  0616                     	;# 
  5842  0617                     	;# 
  5843  0617                     	;# 
  5844  0618                     	;# 
  5845  0619                     	;# 
  5846  061A                     	;# 
  5847  061B                     	;# 
  5848  061C                     	;# 
  5849  061D                     	;# 
  5850  061E                     	;# 
  5851  070C                     	;# 
  5852  070D                     	;# 
  5853  070E                     	;# 
  5854  070F                     	;# 
  5855  0710                     	;# 
  5856  0711                     	;# 
  5857  0712                     	;# 
  5858  0713                     	;# 
  5859  0714                     	;# 
  5860  0716                     	;# 
  5861  0717                     	;# 
  5862  0718                     	;# 
  5863  0719                     	;# 
  5864  071A                     	;# 
  5865  071B                     	;# 
  5866  071C                     	;# 
  5867  071D                     	;# 
  5868  071E                     	;# 
  5869  0796                     	;# 
  5870  0797                     	;# 
  5871  0798                     	;# 
  5872  0799                     	;# 
  5873  079A                     	;# 
  5874  079B                     	;# 
  5875  079C                     	;# 
  5876  079D                     	;# 
  5877  080C                     	;# 
  5878  080D                     	;# 
  5879  080E                     	;# 
  5880  080F                     	;# 
  5881  0810                     	;# 
  5882  0811                     	;# 
  5883  0812                     	;# 
  5884  0813                     	;# 
  5885  0814                     	;# 
  5886  081A                     	;# 
  5887  081A                     	;# 
  5888  081B                     	;# 
  5889  081C                     	;# 
  5890  081C                     	;# 
  5891  081D                     	;# 
  5892  081E                     	;# 
  5893  081F                     	;# 
  5894  088C                     	;# 
  5895  088D                     	;# 
  5896  088E                     	;# 
  5897  088F                     	;# 
  5898  0890                     	;# 
  5899  0891                     	;# 
  5900  0892                     	;# 
  5901  0893                     	;# 
  5902  0895                     	;# 
  5903  0896                     	;# 
  5904  0897                     	;# 
  5905  0898                     	;# 
  5906  0899                     	;# 
  5907  089A                     	;# 
  5908  089B                     	;# 
  5909  090C                     	;# 
  5910  090E                     	;# 
  5911  090F                     	;# 
  5912  091F                     	;# 
  5913  098F                     	;# 
  5914  098F                     	;# 
  5915  0990                     	;# 
  5916  0991                     	;# 
  5917  0992                     	;# 
  5918  0993                     	;# 
  5919  0994                     	;# 
  5920  0995                     	;# 
  5921  0996                     	;# 
  5922  0997                     	;# 
  5923  1E0F                     	;# 
  5924  1E10                     	;# 
  5925  1E11                     	;# 
  5926  1E12                     	;# 
  5927  1E13                     	;# 
  5928  1E14                     	;# 
  5929  1E15                     	;# 
  5930  1E16                     	;# 
  5931  1E17                     	;# 
  5932  1E18                     	;# 
  5933  1E19                     	;# 
  5934  1E1A                     	;# 
  5935  1E1B                     	;# 
  5936  1E1C                     	;# 
  5937  1E1D                     	;# 
  5938  1E1E                     	;# 
  5939  1E1F                     	;# 
  5940  1E20                     	;# 
  5941  1E21                     	;# 
  5942  1E22                     	;# 
  5943  1E23                     	;# 
  5944  1E24                     	;# 
  5945  1E25                     	;# 
  5946  1E26                     	;# 
  5947  1E27                     	;# 
  5948  1E28                     	;# 
  5949  1E29                     	;# 
  5950  1E2A                     	;# 
  5951  1E2B                     	;# 
  5952  1E2C                     	;# 
  5953  1E2D                     	;# 
  5954  1E2E                     	;# 
  5955  1E2F                     	;# 
  5956  1E30                     	;# 
  5957  1E31                     	;# 
  5958  1E32                     	;# 
  5959  1E33                     	;# 
  5960  1E34                     	;# 
  5961  1E35                     	;# 
  5962  1E36                     	;# 
  5963  1E37                     	;# 
  5964  1E8F                     	;# 
  5965  1E90                     	;# 
  5966  1E91                     	;# 
  5967  1E92                     	;# 
  5968  1E93                     	;# 
  5969  1E94                     	;# 
  5970  1E95                     	;# 
  5971  1E96                     	;# 
  5972  1E97                     	;# 
  5973  1E9C                     	;# 
  5974  1E9D                     	;# 
  5975  1E9E                     	;# 
  5976  1EA1                     	;# 
  5977  1EA2                     	;# 
  5978  1EA3                     	;# 
  5979  1EA4                     	;# 
  5980  1EA9                     	;# 
  5981  1EAA                     	;# 
  5982  1EB1                     	;# 
  5983  1EB2                     	;# 
  5984  1EB8                     	;# 
  5985  1EB9                     	;# 
  5986  1EBA                     	;# 
  5987  1EBB                     	;# 
  5988  1EBC                     	;# 
  5989  1EBD                     	;# 
  5990  1EBE                     	;# 
  5991  1EC3                     	;# 
  5992  1EC5                     	;# 
  5993  1EC6                     	;# 
  5994  1EC7                     	;# 
  5995  1EC8                     	;# 
  5996  1EC9                     	;# 
  5997  1ECA                     	;# 
  5998  1ECB                     	;# 
  5999  1ECB                     	;# 
  6000  1ECB                     	;# 
  6001  1ECC                     	;# 
  6002  1ECC                     	;# 
  6003  1ECC                     	;# 
  6004  1F10                     	;# 
  6005  1F11                     	;# 
  6006  1F12                     	;# 
  6007  1F14                     	;# 
  6008  1F15                     	;# 
  6009  1F1C                     	;# 
  6010  1F1D                     	;# 
  6011  1F1E                     	;# 
  6012  1F1F                     	;# 
  6013  1F20                     	;# 
  6014  1F21                     	;# 
  6015  1F22                     	;# 
  6016  1F23                     	;# 
  6017  1F24                     	;# 
  6018  1F25                     	;# 
  6019  1F26                     	;# 
  6020  1F27                     	;# 
  6021  1F38                     	;# 
  6022  1F39                     	;# 
  6023  1F3A                     	;# 
  6024  1F3B                     	;# 
  6025  1F3C                     	;# 
  6026  1F3D                     	;# 
  6027  1F3E                     	;# 
  6028  1F3F                     	;# 
  6029  1F43                     	;# 
  6030  1F44                     	;# 
  6031  1F45                     	;# 
  6032  1F46                     	;# 
  6033  1F47                     	;# 
  6034  1F48                     	;# 
  6035  1F49                     	;# 
  6036  1F4A                     	;# 
  6037  1F4E                     	;# 
  6038  1F4F                     	;# 
  6039  1F50                     	;# 
  6040  1F51                     	;# 
  6041  1F52                     	;# 
  6042  1F53                     	;# 
  6043  1F54                     	;# 
  6044  1F55                     	;# 
  6045  1FE4                     	;# 
  6046  1FE5                     	;# 
  6047  1FE6                     	;# 
  6048  1FE7                     	;# 
  6049  1FE8                     	;# 
  6050  1FE8                     	;# 
  6051  1FE9                     	;# 
  6052  1FEA                     	;# 
  6053  1FEB                     	;# 
  6054  1FED                     	;# 
  6055  1FEE                     	;# 
  6056  1FEF                     	;# 
  6057  0000                     	;# 
  6058  0001                     	;# 
  6059  0002                     	;# 
  6060  0003                     	;# 
  6061  0004                     	;# 
  6062  0005                     	;# 
  6063  0006                     	;# 
  6064  0007                     	;# 
  6065  0008                     	;# 
  6066  0009                     	;# 
  6067  000A                     	;# 
  6068  000B                     	;# 
  6069  000C                     	;# 
  6070  000D                     	;# 
  6071  000E                     	;# 
  6072  0012                     	;# 
  6073  0013                     	;# 
  6074  0014                     	;# 
  6075  0018                     	;# 
  6076  0019                     	;# 
  6077  001A                     	;# 
  6078  008C                     	;# 
  6079  008C                     	;# 
  6080  008D                     	;# 
  6081  008E                     	;# 
  6082  008E                     	;# 
  6083  008F                     	;# 
  6084  0090                     	;# 
  6085  0090                     	;# 
  6086  0091                     	;# 
  6087  0092                     	;# 
  6088  0092                     	;# 
  6089  0093                     	;# 
  6090  0094                     	;# 
  6091  0094                     	;# 
  6092  0095                     	;# 
  6093  0096                     	;# 
  6094  0096                     	;# 
  6095  0097                     	;# 
  6096  0098                     	;# 
  6097  0099                     	;# 
  6098  009A                     	;# 
  6099  009B                     	;# 
  6100  009B                     	;# 
  6101  009C                     	;# 
  6102  009D                     	;# 
  6103  009D                     	;# 
  6104  009E                     	;# 
  6105  009F                     	;# 
  6106  010C                     	;# 
  6107  010C                     	;# 
  6108  010D                     	;# 
  6109  010E                     	;# 
  6110  010F                     	;# 
  6111  010F                     	;# 
  6112  0110                     	;# 
  6113  0111                     	;# 
  6114  0112                     	;# 
  6115  0113                     	;# 
  6116  0114                     	;# 
  6117  0115                     	;# 
  6118  0116                     	;# 
  6119  0117                     	;# 
  6120  0118                     	;# 
  6121  0119                     	;# 
  6122  0119                     	;# 
  6123  0119                     	;# 
  6124  011A                     	;# 
  6125  011A                     	;# 
  6126  011A                     	;# 
  6127  011B                     	;# 
  6128  011B                     	;# 
  6129  011B                     	;# 
  6130  011B                     	;# 
  6131  011B                     	;# 
  6132  011C                     	;# 
  6133  011C                     	;# 
  6134  011C                     	;# 
  6135  011D                     	;# 
  6136  011D                     	;# 
  6137  011D                     	;# 
  6138  011E                     	;# 
  6139  011E                     	;# 
  6140  011E                     	;# 
  6141  011F                     	;# 
  6142  011F                     	;# 
  6143  011F                     	;# 
  6144  011F                     	;# 
  6145  011F                     	;# 
  6146  018C                     	;# 
  6147  018D                     	;# 
  6148  018E                     	;# 
  6149  018F                     	;# 
  6150  0190                     	;# 
  6151  0191                     	;# 
  6152  0192                     	;# 
  6153  0196                     	;# 
  6154  0197                     	;# 
  6155  0198                     	;# 
  6156  0199                     	;# 
  6157  019A                     	;# 
  6158  019B                     	;# 
  6159  019C                     	;# 
  6160  020C                     	;# 
  6161  020D                     	;# 
  6162  020E                     	;# 
  6163  020E                     	;# 
  6164  020F                     	;# 
  6165  020F                     	;# 
  6166  0210                     	;# 
  6167  0210                     	;# 
  6168  0211                     	;# 
  6169  0211                     	;# 
  6170  0212                     	;# 
  6171  0213                     	;# 
  6172  0214                     	;# 
  6173  0214                     	;# 
  6174  0215                     	;# 
  6175  0215                     	;# 
  6176  0216                     	;# 
  6177  0216                     	;# 
  6178  0217                     	;# 
  6179  0217                     	;# 
  6180  0218                     	;# 
  6181  0219                     	;# 
  6182  021A                     	;# 
  6183  021A                     	;# 
  6184  021B                     	;# 
  6185  021B                     	;# 
  6186  021C                     	;# 
  6187  021C                     	;# 
  6188  021D                     	;# 
  6189  021D                     	;# 
  6190  021E                     	;# 
  6191  021F                     	;# 
  6192  028C                     	;# 
  6193  028C                     	;# 
  6194  028D                     	;# 
  6195  028D                     	;# 
  6196  028E                     	;# 
  6197  028F                     	;# 
  6198  0290                     	;# 
  6199  0291                     	;# 
  6200  0292                     	;# 
  6201  0292                     	;# 
  6202  0293                     	;# 
  6203  0293                     	;# 
  6204  0294                     	;# 
  6205  0295                     	;# 
  6206  0296                     	;# 
  6207  0297                     	;# 
  6208  0298                     	;# 
  6209  0298                     	;# 
  6210  0299                     	;# 
  6211  0299                     	;# 
  6212  029A                     	;# 
  6213  029B                     	;# 
  6214  029C                     	;# 
  6215  029D                     	;# 
  6216  029F                     	;# 
  6217  030C                     	;# 
  6218  030C                     	;# 
  6219  030D                     	;# 
  6220  030E                     	;# 
  6221  030F                     	;# 
  6222  0310                     	;# 
  6223  0310                     	;# 
  6224  0311                     	;# 
  6225  0312                     	;# 
  6226  0313                     	;# 
  6227  0314                     	;# 
  6228  0314                     	;# 
  6229  0315                     	;# 
  6230  0316                     	;# 
  6231  0317                     	;# 
  6232  0318                     	;# 
  6233  0318                     	;# 
  6234  0319                     	;# 
  6235  031A                     	;# 
  6236  031B                     	;# 
  6237  038C                     	;# 
  6238  038C                     	;# 
  6239  038D                     	;# 
  6240  038E                     	;# 
  6241  0390                     	;# 
  6242  0390                     	;# 
  6243  0391                     	;# 
  6244  0392                     	;# 
  6245  048C                     	;# 
  6246  048C                     	;# 
  6247  048D                     	;# 
  6248  048E                     	;# 
  6249  048F                     	;# 
  6250  048F                     	;# 
  6251  0490                     	;# 
  6252  0491                     	;# 
  6253  0492                     	;# 
  6254  0492                     	;# 
  6255  0493                     	;# 
  6256  0494                     	;# 
  6257  0495                     	;# 
  6258  0495                     	;# 
  6259  0496                     	;# 
  6260  0497                     	;# 
  6261  0498                     	;# 
  6262  0499                     	;# 
  6263  049A                     	;# 
  6264  049B                     	;# 
  6265  049C                     	;# 
  6266  049D                     	;# 
  6267  058C                     	;# 
  6268  058C                     	;# 
  6269  058D                     	;# 
  6270  058E                     	;# 
  6271  058F                     	;# 
  6272  058F                     	;# 
  6273  0590                     	;# 
  6274  0591                     	;# 
  6275  0592                     	;# 
  6276  0593                     	;# 
  6277  059C                     	;# 
  6278  059C                     	;# 
  6279  059D                     	;# 
  6280  059D                     	;# 
  6281  059E                     	;# 
  6282  059F                     	;# 
  6283  060C                     	;# 
  6284  060C                     	;# 
  6285  060D                     	;# 
  6286  060D                     	;# 
  6287  060E                     	;# 
  6288  060F                     	;# 
  6289  0610                     	;# 
  6290  0611                     	;# 
  6291  0612                     	;# 
  6292  0613                     	;# 
  6293  0614                     	;# 
  6294  0616                     	;# 
  6295  0616                     	;# 
  6296  0617                     	;# 
  6297  0617                     	;# 
  6298  0618                     	;# 
  6299  0619                     	;# 
  6300  061A                     	;# 
  6301  061B                     	;# 
  6302  061C                     	;# 
  6303  061D                     	;# 
  6304  061E                     	;# 
  6305  070C                     	;# 
  6306  070D                     	;# 
  6307  070E                     	;# 
  6308  070F                     	;# 
  6309  0710                     	;# 
  6310  0711                     	;# 
  6311  0712                     	;# 
  6312  0713                     	;# 
  6313  0714                     	;# 
  6314  0716                     	;# 
  6315  0717                     	;# 
  6316  0718                     	;# 
  6317  0719                     	;# 
  6318  071A                     	;# 
  6319  071B                     	;# 
  6320  071C                     	;# 
  6321  071D                     	;# 
  6322  071E                     	;# 
  6323  0796                     	;# 
  6324  0797                     	;# 
  6325  0798                     	;# 
  6326  0799                     	;# 
  6327  079A                     	;# 
  6328  079B                     	;# 
  6329  079C                     	;# 
  6330  079D                     	;# 
  6331  080C                     	;# 
  6332  080D                     	;# 
  6333  080E                     	;# 
  6334  080F                     	;# 
  6335  0810                     	;# 
  6336  0811                     	;# 
  6337  0812                     	;# 
  6338  0813                     	;# 
  6339  0814                     	;# 
  6340  081A                     	;# 
  6341  081A                     	;# 
  6342  081B                     	;# 
  6343  081C                     	;# 
  6344  081C                     	;# 
  6345  081D                     	;# 
  6346  081E                     	;# 
  6347  081F                     	;# 
  6348  088C                     	;# 
  6349  088D                     	;# 
  6350  088E                     	;# 
  6351  088F                     	;# 
  6352  0890                     	;# 
  6353  0891                     	;# 
  6354  0892                     	;# 
  6355  0893                     	;# 
  6356  0895                     	;# 
  6357  0896                     	;# 
  6358  0897                     	;# 
  6359  0898                     	;# 
  6360  0899                     	;# 
  6361  089A                     	;# 
  6362  089B                     	;# 
  6363  090C                     	;# 
  6364  090E                     	;# 
  6365  090F                     	;# 
  6366  091F                     	;# 
  6367  098F                     	;# 
  6368  098F                     	;# 
  6369  0990                     	;# 
  6370  0991                     	;# 
  6371  0992                     	;# 
  6372  0993                     	;# 
  6373  0994                     	;# 
  6374  0995                     	;# 
  6375  0996                     	;# 
  6376  0997                     	;# 
  6377  1E0F                     	;# 
  6378  1E10                     	;# 
  6379  1E11                     	;# 
  6380  1E12                     	;# 
  6381  1E13                     	;# 
  6382  1E14                     	;# 
  6383  1E15                     	;# 
  6384  1E16                     	;# 
  6385  1E17                     	;# 
  6386  1E18                     	;# 
  6387  1E19                     	;# 
  6388  1E1A                     	;# 
  6389  1E1B                     	;# 
  6390  1E1C                     	;# 
  6391  1E1D                     	;# 
  6392  1E1E                     	;# 
  6393  1E1F                     	;# 
  6394  1E20                     	;# 
  6395  1E21                     	;# 
  6396  1E22                     	;# 
  6397  1E23                     	;# 
  6398  1E24                     	;# 
  6399  1E25                     	;# 
  6400  1E26                     	;# 
  6401  1E27                     	;# 
  6402  1E28                     	;# 
  6403  1E29                     	;# 
  6404  1E2A                     	;# 
  6405  1E2B                     	;# 
  6406  1E2C                     	;# 
  6407  1E2D                     	;# 
  6408  1E2E                     	;# 
  6409  1E2F                     	;# 
  6410  1E30                     	;# 
  6411  1E31                     	;# 
  6412  1E32                     	;# 
  6413  1E33                     	;# 
  6414  1E34                     	;# 
  6415  1E35                     	;# 
  6416  1E36                     	;# 
  6417  1E37                     	;# 
  6418  1E8F                     	;# 
  6419  1E90                     	;# 
  6420  1E91                     	;# 
  6421  1E92                     	;# 
  6422  1E93                     	;# 
  6423  1E94                     	;# 
  6424  1E95                     	;# 
  6425  1E96                     	;# 
  6426  1E97                     	;# 
  6427  1E9C                     	;# 
  6428  1E9D                     	;# 
  6429  1E9E                     	;# 
  6430  1EA1                     	;# 
  6431  1EA2                     	;# 
  6432  1EA3                     	;# 
  6433  1EA4                     	;# 
  6434  1EA9                     	;# 
  6435  1EAA                     	;# 
  6436  1EB1                     	;# 
  6437  1EB2                     	;# 
  6438  1EB8                     	;# 
  6439  1EB9                     	;# 
  6440  1EBA                     	;# 
  6441  1EBB                     	;# 
  6442  1EBC                     	;# 
  6443  1EBD                     	;# 
  6444  1EBE                     	;# 
  6445  1EC3                     	;# 
  6446  1EC5                     	;# 
  6447  1EC6                     	;# 
  6448  1EC7                     	;# 
  6449  1EC8                     	;# 
  6450  1EC9                     	;# 
  6451  1ECA                     	;# 
  6452  1ECB                     	;# 
  6453  1ECB                     	;# 
  6454  1ECB                     	;# 
  6455  1ECC                     	;# 
  6456  1ECC                     	;# 
  6457  1ECC                     	;# 
  6458  1F10                     	;# 
  6459  1F11                     	;# 
  6460  1F12                     	;# 
  6461  1F14                     	;# 
  6462  1F15                     	;# 
  6463  1F1C                     	;# 
  6464  1F1D                     	;# 
  6465  1F1E                     	;# 
  6466  1F1F                     	;# 
  6467  1F20                     	;# 
  6468  1F21                     	;# 
  6469  1F22                     	;# 
  6470  1F23                     	;# 
  6471  1F24                     	;# 
  6472  1F25                     	;# 
  6473  1F26                     	;# 
  6474  1F27                     	;# 
  6475  1F38                     	;# 
  6476  1F39                     	;# 
  6477  1F3A                     	;# 
  6478  1F3B                     	;# 
  6479  1F3C                     	;# 
  6480  1F3D                     	;# 
  6481  1F3E                     	;# 
  6482  1F3F                     	;# 
  6483  1F43                     	;# 
  6484  1F44                     	;# 
  6485  1F45                     	;# 
  6486  1F46                     	;# 
  6487  1F47                     	;# 
  6488  1F48                     	;# 
  6489  1F49                     	;# 
  6490  1F4A                     	;# 
  6491  1F4E                     	;# 
  6492  1F4F                     	;# 
  6493  1F50                     	;# 
  6494  1F51                     	;# 
  6495  1F52                     	;# 
  6496  1F53                     	;# 
  6497  1F54                     	;# 
  6498  1F55                     	;# 
  6499  1FE4                     	;# 
  6500  1FE5                     	;# 
  6501  1FE6                     	;# 
  6502  1FE7                     	;# 
  6503  1FE8                     	;# 
  6504  1FE8                     	;# 
  6505  1FE9                     	;# 
  6506  1FEA                     	;# 
  6507  1FEB                     	;# 
  6508  1FED                     	;# 
  6509  1FEE                     	;# 
  6510  1FEF                     	;_dmxData
  6511                           
  6512                           	psect	idataCOMMON
  6513  07FE                     __pidataCOMMON:	
  6514                           
  6515                           ;initializer for _address
  6516  07FE  3401               	retlw	1
  6517  07FF  3400               	retlw	0
  6518                           
  6519                           	psect	idataBANK2
  6520  1000                     __pidataBANK2:	
  6521                           
  6522                           ;initializer for _currentState
  6523  1000  3402               	retlw	2
  6524  1001  3400               	retlw	0
  6525                           
  6526                           ;initializer for _fadeAmmount
  6527  1002  3414               	retlw	20
  6528  1003  3400               	retlw	0
  6529                           
  6530                           ;initializer for _delay
  6531  1004  340A               	retlw	10
  6532  1005  3400               	retlw	0
  6533                           
  6534                           ;initializer for _threshold
  6535  1006  3490               	retlw	144
  6536  1007  3406               	retlw	6
  6537                           
  6538                           ;initializer for _cycleSpeed
  6539  1008  3414               	retlw	20
  6540  1009  3400               	retlw	0
  6541                           
  6542                           	psect	idataBANK3
  6543  1EE1                     __pidataBANK3:	
  6544                           
  6545                           ;initializer for _pulseColor
  6546  1EE1  3400               	retlw	0
  6547  1EE2  3400               	retlw	0
  6548  1EE3  3400               	retlw	0
  6549  1EE4  3400               	retlw	0
  6550  1EE5  3480               	retlw	128
  6551  1EE6  343F               	retlw	63
  6552  1EE7  3400               	retlw	0
  6553  1EE8  3400               	retlw	0
  6554  1EE9  3400               	retlw	0
  6555  1EEA  343F               	retlw	63
  6556                           
  6557                           ;initializer for _color
  6558  1EEB  3400               	retlw	0
  6559  1EEC  3400               	retlw	0
  6560  1EED  3400               	retlw	0
  6561  1EEE  3400               	retlw	0
  6562  1EEF  3480               	retlw	128
  6563  1EF0  343F               	retlw	63
  6564  1EF1  3400               	retlw	0
  6565  1EF2  3400               	retlw	0
  6566  1EF3  3400               	retlw	0
  6567  1EF4  343F               	retlw	63
  6568                           
  6569                           	psect	stringtext1
  6570  1800                     __pstringtext1:	
  6571  1800                     _charTable:	
  6572  1800  3400               	retlw	0
  6573  1801  3482               	retlw	130
  6574  1802  3421               	retlw	33
  6575  1803  3400               	retlw	0
  6576  1804  3400               	retlw	0
  6577  1805  3400               	retlw	0
  6578  1806  3400               	retlw	0
  6579  1807  3402               	retlw	2
  6580  1808  3439               	retlw	57
  6581  1809  340F               	retlw	15
  6582  180A  3400               	retlw	0
  6583  180B  3400               	retlw	0
  6584  180C  3400               	retlw	0
  6585  180D  3440               	retlw	64
  6586  180E  3480               	retlw	128
  6587  180F  3400               	retlw	0
  6588  1810  343F               	retlw	63
  6589  1811  3406               	retlw	6
  6590  1812  345B               	retlw	91
  6591  1813  344F               	retlw	79
  6592  1814  3466               	retlw	102
  6593  1815  346D               	retlw	109
  6594  1816  347D               	retlw	125
  6595  1817  3407               	retlw	7
  6596  1818  347F               	retlw	127
  6597  1819  346F               	retlw	111
  6598  181A  3400               	retlw	0
  6599  181B  3400               	retlw	0
  6600  181C  3400               	retlw	0
  6601  181D  3448               	retlw	72
  6602  181E  3400               	retlw	0
  6603  181F  3453               	retlw	83
  6604  1820  3400               	retlw	0
  6605  1821  3477               	retlw	119
  6606  1822  347C               	retlw	124
  6607  1823  3439               	retlw	57
  6608  1824  345E               	retlw	94
  6609  1825  3479               	retlw	121
  6610  1826  3471               	retlw	113
  6611  1827  346F               	retlw	111
  6612  1828  3476               	retlw	118
  6613  1829  3406               	retlw	6
  6614  182A  341E               	retlw	30
  6615  182B  3400               	retlw	0
  6616  182C  3438               	retlw	56
  6617  182D  3400               	retlw	0
  6618  182E  3454               	retlw	84
  6619  182F  343F               	retlw	63
  6620  1830  3473               	retlw	115
  6621  1831  3467               	retlw	103
  6622  1832  3450               	retlw	80
  6623  1833  346D               	retlw	109
  6624  1834  3478               	retlw	120
  6625  1835  343E               	retlw	62
  6626  1836  3400               	retlw	0
  6627  1837  3400               	retlw	0
  6628  1838  3400               	retlw	0
  6629  1839  346E               	retlw	110
  6630  183A  3400               	retlw	0
  6631  183B  3439               	retlw	57
  6632  183C  3400               	retlw	0
  6633  183D  340F               	retlw	15
  6634  183E  3400               	retlw	0
  6635  183F  3408               	retlw	8
  6636  1840  3463               	retlw	99
  6637  1841  345F               	retlw	95
  6638  1842  347C               	retlw	124
  6639  1843  3458               	retlw	88
  6640  1844  345E               	retlw	94
  6641  1845  347B               	retlw	123
  6642  1846  3471               	retlw	113
  6643  1847  346F               	retlw	111
  6644  1848  3474               	retlw	116
  6645  1849  3402               	retlw	2
  6646  184A  341E               	retlw	30
  6647  184B  3400               	retlw	0
  6648  184C  3406               	retlw	6
  6649  184D  3400               	retlw	0
  6650  184E  3454               	retlw	84
  6651  184F  345C               	retlw	92
  6652  1850  3473               	retlw	115
  6653  1851  3467               	retlw	103
  6654  1852  3450               	retlw	80
  6655  1853  346D               	retlw	109
  6656  1854  3478               	retlw	120
  6657  1855  341C               	retlw	28
  6658  1856  3400               	retlw	0
  6659  1857  3400               	retlw	0
  6660  1858  3400               	retlw	0
  6661  1859  346E               	retlw	110
  6662  185A  3400               	retlw	0
  6663  185B  3439               	retlw	57
  6664  185C  3430               	retlw	48
  6665  185D  340F               	retlw	15
  6666  185E  3400               	retlw	0
  6667  185F  3400               	retlw	0
  6668  1860                     __end_of_charTable:	
  6669                           
  6670                           	psect	nvBANK2
  6671  016A                     __pnvBANK2:	
  6672  016A                     _ADCC_ADTI_InterruptHandler:	
  6673  016A                     	ds	2
  6674  016C                     _TMR0_InterruptHandler:	
  6675  016C                     	ds	2
  6676  016E                     _eusart1TxBufferRemaining:	
  6677  016E                     	ds	1
  6678                           
  6679                           	psect	nvBANK3
  6680  01DE                     __pnvBANK3:	
  6681  01DE                     _EUSART1_ErrorHandler:	
  6682  01DE                     	ds	2
  6683  01E0                     _EUSART1_OverrunErrorHandler:	
  6684  01E0                     	ds	2
  6685  01E2                     _EUSART1_FramingErrorHandler:	
  6686  01E2                     	ds	2
  6687  01E4                     _EUSART1_RxDefaultInterruptHandler:	
  6688  01E4                     	ds	2
  6689  01E6                     _EUSART1_TxDefaultInterruptHandler:	
  6690  01E6                     	ds	2
  6691  000B                     _INTCONbits	set	11
  6692  0014                     _TRISC	set	20
  6693  0013                     _TRISB	set	19
  6694  0012                     _TRISA	set	18
  6695  001A                     _LATC	set	26
  6696  0019                     _LATB	set	25
  6697  0018                     _LATA	set	24
  6698  000C                     _PORTA	set	12
  6699  000E                     _PORTC	set	14
  6700  00A3                     _TRISC3	set	163
  6701  00A4                     _TRISC4	set	164
  6702  00A6                     _TRISC6	set	166
  6703  00A7                     _TRISC7	set	167
  6704  00CE                     _LATB6	set	206
  6705  009E                     _TRISB6	set	158
  6706  0090                     _ADERRL	set	144
  6707  0091                     _ADERRH	set	145
  6708  009B                     _ADPREVL	set	155
  6709  009C                     _ADPREVH	set	156
  6710  0094                     _ADFLTRL	set	148
  6711  0095                     _ADFLTRH	set	149
  6712  0096                     _ADACCL	set	150
  6713  0097                     _ADACCH	set	151
  6714  0099                     _ADCNT	set	153
  6715  009D                     _ADRESL	set	157
  6716  009E                     _ADRESH	set	158
  6717  009F                     _ADPCH	set	159
  6718  009A                     _ADRPT	set	154
  6719  0098                     _ADACCU	set	152
  6720  0093                     _ADSTPTH	set	147
  6721  0092                     _ADSTPTL	set	146
  6722  008F                     _ADUTHH	set	143
  6723  008E                     _ADUTHL	set	142
  6724  008D                     _ADLTHH	set	141
  6725  008C                     _ADLTHL	set	140
  6726  011A                     _TXREG	set	282
  6727  0112                     _ADCON1bits	set	274
  6728  0115                     _ADSTATbits	set	277
  6729  0113                     _ADCON2bits	set	275
  6730  0114                     _ADCON3bits	set	276
  6731  0111                     _ADCON0bits	set	273
  6732  0111                     _ADCON0	set	273
  6733  0118                     _ADCLK	set	280
  6734  0117                     _ADACT	set	279
  6735  0116                     _ADREF	set	278
  6736  0115                     _ADSTAT	set	277
  6737  0114                     _ADCON3	set	276
  6738  0113                     _ADCON2	set	275
  6739  0112                     _ADCON1	set	274
  6740  0110                     _ADPREH	set	272
  6741  010F                     _ADPREL	set	271
  6742  010E                     _ADCAP	set	270
  6743  010D                     _ADACQH	set	269
  6744  010C                     _ADACQL	set	268
  6745  0119                     _RC1REG	set	281
  6746  011D                     _RC1STAbits	set	285
  6747  011A                     _TX1REG	set	282
  6748  011E                     _TX1STAbits	set	286
  6749  011C                     _SP1BRGH	set	284
  6750  011B                     _SP1BRGL	set	283
  6751  011E                     _TX1STA	set	286
  6752  011D                     _RC1STA	set	285
  6753  011F                     _BAUD1CON	set	287
  6754  018C                     _SSP1BUF	set	396
  6755  0191                     _SSP1CON2bits	set	401
  6756  0190                     _SSP1CON1bits	set	400
  6757  018D                     _SSP1ADD	set	397
  6758  0192                     _SSP1CON3	set	402
  6759  0190                     _SSP1CON1	set	400
  6760  018F                     _SSP1STAT	set	399
  6761  028E                     _T2CONbits	set	654
  6762  0290                     _T2CLKCON	set	656
  6763  0318                     _CCPR4L	set	792
  6764  0319                     _CCPR4H	set	793
  6765  0314                     _CCPR3L	set	788
  6766  0315                     _CCPR3H	set	789
  6767  0310                     _CCPR2L	set	784
  6768  0311                     _CCPR2H	set	785
  6769  030C                     _CCPR1L	set	780
  6770  030D                     _CCPR1H	set	781
  6771  031A                     _CCP4CONbits	set	794
  6772  0316                     _CCP3CONbits	set	790
  6773  0312                     _CCP2CONbits	set	786
  6774  030E                     _CCP1CONbits	set	782
  6775  059E                     _T0CON0bits	set	1438
  6776  059E                     _T0CON0	set	1438
  6777  059C                     _TMR0L	set	1436
  6778  059D                     _TMR0H	set	1437
  6779  059F                     _T0CON1	set	1439
  6780  070D                     _PIR1bits	set	1805
  6781  0717                     _PIE1bits	set	1815
  6782  070F                     _PIR3bits	set	1807
  6783  070C                     _PIR0bits	set	1804
  6784  0716                     _PIE0bits	set	1814
  6785  0719                     _PIE3bits	set	1817
  6786  079D                     _PMD7	set	1949
  6787  079C                     _PMD6	set	1948
  6788  079B                     _PMD5	set	1947
  6789  079A                     _PMD4	set	1946
  6790  0799                     _PMD3	set	1945
  6791  0798                     _PMD2	set	1944
  6792  0797                     _PMD1	set	1943
  6793  0796                     _PMD0	set	1942
  6794  0892                     _OSCTUNE	set	2194
  6795  0893                     _OSCFRQ	set	2195
  6796  0891                     _OSCEN	set	2193
  6797  088F                     _OSCCON3	set	2191
  6798  088D                     _OSCCON1	set	2189
  6799  1ECB                     _RX1DTPPS	set	7883
  6800  1EC6                     _SSP1DATPPS	set	7878
  6801  1EC5                     _SSP1CLKPPS	set	7877
  6802  1F23                     _RC3PPS	set	7971
  6803  1F24                     _RC4PPS	set	7972
  6804  1F26                     _RC6PPS	set	7974
  6805  1F27                     _RC7PPS	set	7975
  6806  1F15                     _RA5PPS	set	7957
  6807  1F14                     _RA4PPS	set	7956
  6808  1F51                     _SLRCONC	set	8017
  6809  1F46                     _SLRCONB	set	8006
  6810  1F3B                     _SLRCONA	set	7995
  6811  1F50                     _ODCONC	set	8016
  6812  1F45                     _ODCONB	set	8005
  6813  1F3A                     _ODCONA	set	7994
  6814  1F4F                     _WPUC	set	8015
  6815  1F39                     _WPUA	set	7993
  6816  1F44                     _WPUB	set	8004
  6817  1F38                     _ANSELA	set	7992
  6818  1F43                     _ANSELB	set	8003
  6819  1F4E                     _ANSELC	set	8014
  6820                           
  6821                           ; #config settings
  6822  0000                     
  6823                           	psect	cinit
  6824  003B                     start_initialization:	
  6825  003B                     __initialization:		;BIGRAM
  6826                           
  6827                           ; Initialize objects allocated to COMMON
  6828  003B  3187  27FE  3180   	fcall	__pidataCOMMON	;fetch initializer
  6829  003E  00FA               	movwf	__pdataCOMMON& (0+127)
  6830  003F  3187  27FF  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  6831  0042  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
  6832                           
  6833                           ; Initialize objects allocated to BANK2
  6834  0043  3000               	movlw	low __pidataBANK2
  6835  0044  0084               	movwf	4
  6836  0045  3090               	movlw	(high __pidataBANK2)| (0+128)
  6837  0046  0085               	movwf	5
  6838  0047  3060               	movlw	low __pdataBANK2
  6839  0048  0086               	movwf	6
  6840  0049  3001               	movlw	high __pdataBANK2
  6841  004A  0087               	movwf	7
  6842  004B  3000               	movlw	0
  6843  004C  00FF               	movwf	btemp+1
  6844  004D  300A               	movlw	10
  6845  004E  319E  2692  3180   	fcall	init_ram
  6846                           
  6847                           ; Initialize objects allocated to BANK3
  6848  0051  30E1               	movlw	low __pidataBANK3
  6849  0052  0084               	movwf	4
  6850  0053  309E               	movlw	(high __pidataBANK3)| (0+128)
  6851  0054  0085               	movwf	5
  6852  0055  30CA               	movlw	low __pdataBANK3
  6853  0056  0086               	movwf	6
  6854  0057  3001               	movlw	high __pdataBANK3
  6855  0058  0087               	movwf	7
  6856  0059  3000               	movlw	0
  6857  005A  00FF               	movwf	btemp+1
  6858  005B  3014               	movlw	20
  6859  005C  319E  2692  3180   	fcall	init_ram
  6860                           
  6861                           ; Clear objects allocated to BIGRAM
  6862  005F  30EF               	movlw	low (0+9711)
  6863  0060  0084               	movwf	4
  6864  0061  3025               	movlw	high (0+9711)
  6865  0062  0085               	movwf	5
  6866  0063  3001               	movlw	1
  6867  0064  00FE               	movwf	btemp
  6868  0065  3002               	movlw	2
  6869  0066  00FF               	movwf	btemp+1
  6870  0067  319E  2686  3180   	fcall	clear_ram0
  6871                           
  6872                           ; Clear objects allocated to COMMON
  6873  006A  01F6               	clrf	__pbssCOMMON& (0+127)
  6874  006B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  6875  006C  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  6876  006D  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  6877                           
  6878                           ; Clear objects allocated to BANK1
  6879  006E  0141               	movlb	1	; select bank1
  6880  006F  01EB               	clrf	__pbssBANK1& (0+127)
  6881  0070  01EC               	clrf	(__pbssBANK1+1)& (0+127)
  6882  0071  01ED               	clrf	(__pbssBANK1+2)& (0+127)
  6883  0072  01EE               	clrf	(__pbssBANK1+3)& (0+127)
  6884  0073  01EF               	clrf	(__pbssBANK1+4)& (0+127)
  6885                           
  6886                           ; Clear objects allocated to BANK2
  6887  0074  3020               	movlw	low __pbssBANK2
  6888  0075  0084               	movwf	4
  6889  0076  3001               	movlw	high __pbssBANK2
  6890  0077  0085               	movwf	5
  6891  0078  3040               	movlw	64
  6892  0079  00FE               	movwf	btemp
  6893  007A  3000               	movlw	0
  6894  007B  00FF               	movwf	btemp+1
  6895  007C  319E  2686  3180   	fcall	clear_ram0
  6896                           
  6897                           ; Clear objects allocated to BANK3
  6898  007F  30A0               	movlw	low __pbssBANK3
  6899  0080  0084               	movwf	4
  6900  0081  3001               	movlw	high __pbssBANK3
  6901  0082  0085               	movwf	5
  6902  0083  302A               	movlw	42
  6903  0084  00FE               	movwf	btemp
  6904  0085  3000               	movlw	0
  6905  0086  00FF               	movwf	btemp+1
  6906  0087  319E  2686  3180   	fcall	clear_ram0
  6907                           
  6908                           ; Clear objects allocated to BANK4
  6909  008A  3020               	movlw	low __pbssBANK4
  6910  008B  0084               	movwf	4
  6911  008C  3002               	movlw	high __pbssBANK4
  6912  008D  0085               	movwf	5
  6913  008E  3020               	movlw	32
  6914  008F  00FE               	movwf	btemp
  6915  0090  3000               	movlw	0
  6916  0091  00FF               	movwf	btemp+1
  6917  0092  319E  2686         	fcall	clear_ram0
  6918  0094                     end_of_initialization:	
  6919                           ;End of C runtime variable initialization code
  6920                           
  6921  0094                     __end_of__initialization:	
  6922  0094  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6923  0095  0140               	movlb	0
  6924  0096  3192  2A4B         	ljmp	_main	;jump to C main() function
  6925                           
  6926                           	psect	bssCOMMON
  6927  0076                     __pbssCOMMON:	
  6928  0076                     _eusart1RxTail:	
  6929  0076                     	ds	1
  6930  0077                     _eusart1RxHead:	
  6931  0077                     	ds	1
  6932  0078                     I2C1_ISR@i2c_address:	
  6933  0078                     	ds	2
  6934                           
  6935                           	psect	dataCOMMON
  6936  007A                     __pdataCOMMON:	
  6937  007A                     _address:	
  6938  007A                     	ds	2
  6939                           
  6940                           	psect	bssBANK1
  6941  00EB                     __pbssBANK1:	
  6942  00EB                     _up:	
  6943  00EB                     	ds	1
  6944  00EC                     _p_i2c1_current:	
  6945  00EC                     	ds	1
  6946  00ED                     _p_i2c1_trb_current:	
  6947  00ED                     	ds	1
  6948  00EE                     _eusart1TxTail:	
  6949  00EE                     	ds	1
  6950  00EF                     _eusart1TxHead:	
  6951  00EF                     	ds	1
  6952                           
  6953                           	psect	bssBANK2
  6954  0120                     __pbssBANK2:	
  6955  0120                     _i2c1_object:	
  6956  0120                     	ds	5
  6957  0125                     _fadeTime:	
  6958  0125                     	ds	4
  6959  0129                     dispIncrement@lastTime:	
  6960  0129                     	ds	2
  6961  012B                     _lastActiveTime:	
  6962  012B                     	ds	2
  6963  012D                     controller@lastTime:	
  6964  012D                     	ds	2
  6965  012F                     _hueValPulse:	
  6966  012F                     	ds	2
  6967  0131                     _lastTimePulse:	
  6968  0131                     	ds	2
  6969  0133                     _hueValCycle:	
  6970  0133                     	ds	2
  6971  0135                     _lastTimeCycle:	
  6972  0135                     	ds	2
  6973  0137                     led@lastTime:	
  6974  0137                     	ds	2
  6975  0139                     dmx@lastTime:	
  6976  0139                     	ds	2
  6977  013B                     _dmxPointer:	
  6978  013B                     	ds	2
  6979  013D                     _thresholdCount:	
  6980  013D                     	ds	2
  6981  013F                     _lastRun:	
  6982  013F                     	ds	2
  6983  0141                     _bpm:	
  6984  0141                     	ds	2
  6985  0143                     _lastBeat:	
  6986  0143                     	ds	2
  6987  0145                     _lastTime:	
  6988  0145                     	ds	2
  6989  0147                     _count:	
  6990  0147                     	ds	2
  6991  0149                     _currentTime:	
  6992  0149                     	ds	2
  6993  014B                     _changeColor:	
  6994  014B                     	ds	1
  6995  014C                     _toggleCheck:	
  6996  014C                     	ds	1
  6997  014D                     _dmxOn:	
  6998  014D                     	ds	1
  6999  014E                     _offCheck:	
  7000  014E                     	ds	1
  7001  014F                     _lastDetected:	
  7002  014F                     	ds	1
  7003  0150                     _thresholdExceeded:	
  7004  0150                     	ds	1
  7005  0151                     _detected:	
  7006  0151                     	ds	1
  7007  0152                     _menu:	
  7008  0152                     	ds	1
  7009  0153                     _enter:	
  7010  0153                     	ds	1
  7011  0154                     _down:	
  7012  0154                     	ds	1
  7013  0155                     _isOn:	
  7014  0155                     	ds	1
  7015  0156                     I2C1_ISR@i2c_10bit_address_restart:	
  7016  0156                     	ds	1
  7017  0157                     I2C1_ISR@i2c_bytes_left:	
  7018  0157                     	ds	1
  7019  0158                     I2C1_ISR@pi2c_buf_ptr:	
  7020  0158                     	ds	1
  7021  0159                     _i2c1_trb_count:	
  7022  0159                     	ds	1
  7023  015A                     _i2c1_state:	
  7024  015A                     	ds	1
  7025  015B                     _eusart1RxLastError:	
  7026  015B                     	ds	1
  7027  015C                     _eusart1RxCount:	
  7028  015C                     	ds	1
  7029  015D                     _i2c1_tr_queue:	
  7030  015D                     	ds	3
  7031                           
  7032                           	psect	dataBANK2
  7033  0160                     __pdataBANK2:	
  7034  0160                     _currentState:	
  7035  0160                     	ds	2
  7036  0162                     _fadeAmmount:	
  7037  0162                     	ds	2
  7038  0164                     _delay:	
  7039  0164                     	ds	2
  7040  0166                     _threshold:	
  7041  0166                     	ds	2
  7042  0168                     _cycleSpeed:	
  7043  0168                     	ds	2
  7044                           
  7045                           	psect	bssBANK3
  7046  01A0                     __pbssBANK3:	
  7047  01A0                     cycleColors@F108:	
  7048  01A0                     	ds	10
  7049  01AA                     _eusart1RxStatusBuffer:	
  7050  01AA                     	ds	8
  7051  01B2                     _eusart1RxBuffer:	
  7052  01B2                     	ds	8
  7053  01BA                     _eusart1TxBuffer:	
  7054  01BA                     	ds	8
  7055  01C2                     I2C1_MasterRead@trBlock:	
  7056  01C2                     	ds	4
  7057  01C6                     I2C1_MasterWrite@trBlock:	
  7058  01C6                     	ds	4
  7059                           
  7060                           	psect	dataBANK3
  7061  01CA                     __pdataBANK3:	
  7062  01CA                     _pulseColor:	
  7063  01CA                     	ds	10
  7064  01D4                     _color:	
  7065  01D4                     	ds	10
  7066                           
  7067                           	psect	bssBANK4
  7068  0220                     __pbssBANK4:	
  7069  0220                     _buttons:	
  7070  0220                     	ds	32
  7071                           
  7072                           	psect	inittext
  7073  1E92                     init_ram:	
  7074  1E92  00FE               	movwf	126
  7075  1E93                     initloop:	
  7076  1E93  0012               	moviw fsr0++
  7077  1E94  001E               	movwi fsr1++
  7078  1E95  3001               	movlw	1
  7079  1E96  02FE               	subwf	126,f
  7080  1E97  3000               	movlw	0
  7081  1E98  3BFF               	subwfb	127,f
  7082  1E99  087F               	movf	127,w
  7083  1E9A  047E               	iorwf	126,w
  7084  1E9B  1903               	btfsc	3,2
  7085  1E9C  3400               	retlw	0
  7086  1E9D  2E93               	goto	initloop
  7087                           
  7088                           	psect	clrtext
  7089  1E86                     clear_ram0:	
  7090                           ;	Called with FSR0 containing the base address, and
  7091                           ;	btemp/btemp+1 has the size to clear
  7092                           
  7093  1E86  0064               	clrwdt	;clear the watchdog before getting into this loop
  7094  1E87                     clrloop0:	
  7095  1E87  0180               	clrf	0	;clear RAM location pointed to by FSR
  7096  1E88  3101               	addfsr 0,1
  7097  1E89  3001               	movlw	1
  7098  1E8A  02FE               	subwf	126,f
  7099  1E8B  3000               	movlw	0
  7100  1E8C  3BFF               	subwfb	127,f
  7101  1E8D  087F               	movf	127,w
  7102  1E8E  047E               	iorwf	126,w
  7103  1E8F  1903               	btfsc	3,2
  7104  1E90  3400               	retlw	0	;all done for this memory range, return
  7105  1E91  2E87               	goto	clrloop0	;have we reached the end yet?
  7106                           
  7107                           	psect	cstackBANK3
  7108  01E8                     __pcstackBANK3:	
  7109  01E8                     ??_main:	
  7110                           
  7111                           ; 1 bytes @ 0x0
  7112  01E8                     	ds	2
  7113                           
  7114                           	psect	cstackBANK1
  7115  00A0                     __pcstackBANK1:	
  7116  00A0                     _HueToRGB$2896:	
  7117                           
  7118                           ; 4 bytes @ 0x0
  7119  00A0                     	ds	4
  7120  00A4                     ?___fltol:	
  7121  00A4                     ___fltol@f1:	
  7122                           ; 4 bytes @ 0x4
  7123                           
  7124                           
  7125                           ; 4 bytes @ 0x4
  7126  00A4                     	ds	4
  7127  00A8                     ??___fltol:	
  7128                           
  7129                           ; 1 bytes @ 0x8
  7130  00A8                     	ds	5
  7131  00AD                     ___fltol@sign1:	
  7132                           
  7133                           ; 1 bytes @ 0xD
  7134  00AD                     	ds	1
  7135  00AE                     ___fltol@exp1:	
  7136                           
  7137                           ; 1 bytes @ 0xE
  7138  00AE                     	ds	1
  7139  00AF                     ?_LED_setHSL:	
  7140  00AF                     LED_setHSL@hsl:	
  7141                           ; 1 bytes @ 0xF
  7142                           
  7143                           
  7144                           ; 10 bytes @ 0xF
  7145  00AF                     	ds	10
  7146  00B9                     ??_LED_setHSL:	
  7147                           
  7148                           ; 1 bytes @ 0x19
  7149  00B9                     	ds	2
  7150  00BB                     _LED_setHSL$2897:	
  7151                           
  7152                           ; 4 bytes @ 0x1B
  7153  00BB                     	ds	4
  7154  00BF                     _LED_setHSL$2900:	
  7155                           
  7156                           ; 4 bytes @ 0x1F
  7157  00BF                     	ds	4
  7158  00C3                     _LED_setHSL$2898:	
  7159                           
  7160                           ; 4 bytes @ 0x23
  7161  00C3                     	ds	4
  7162  00C7                     _LED_setHSL$2899:	
  7163                           
  7164                           ; 4 bytes @ 0x27
  7165  00C7                     	ds	4
  7166  00CB                     LED_setHSL@v1:	
  7167                           
  7168                           ; 4 bytes @ 0x2B
  7169  00CB                     	ds	4
  7170  00CF                     LED_setHSL@hue:	
  7171                           
  7172                           ; 4 bytes @ 0x2F
  7173  00CF                     	ds	4
  7174  00D3                     LED_setHSL@v2:	
  7175                           
  7176                           ; 4 bytes @ 0x33
  7177  00D3                     	ds	4
  7178  00D7                     LED_setHSL@rgb:	
  7179                           
  7180                           ; 3 bytes @ 0x37
  7181  00D7                     	ds	3
  7182  00DA                     ??_fadeColor:	
  7183  00DA                     ??_cycleColors:	
  7184                           ; 1 bytes @ 0x3A
  7185                           
  7186                           
  7187                           ; 1 bytes @ 0x3A
  7188  00DA                     	ds	2
  7189  00DC                     fadeColor@time:	
  7190  00DC                     cycleColors@time:	
  7191                           ; 2 bytes @ 0x3C
  7192                           
  7193                           
  7194                           ; 2 bytes @ 0x3C
  7195  00DC                     	ds	2
  7196  00DE                     cycleColors@color:	
  7197                           
  7198                           ; 10 bytes @ 0x3E
  7199  00DE                     	ds	10
  7200  00E8                     cycleColors@adr:	
  7201                           
  7202                           ; 2 bytes @ 0x48
  7203  00E8                     	ds	2
  7204  00EA                     ??_MENU_task:	
  7205                           
  7206                           ; 1 bytes @ 0x4A
  7207  00EA                     	ds	1
  7208                           
  7209                           	psect	cstackCOMMON
  7210  0070                     __pcstackCOMMON:	
  7211  0070                     ?_EUSART1_Receive_ISR:	
  7212  0070                     ?_EUSART1_Transmit_ISR:	
  7213                           ; 1 bytes @ 0x0
  7214                           
  7215  0070                     ??_EUSART1_Transmit_ISR:	
  7216                           ; 1 bytes @ 0x0
  7217                           
  7218  0070                     ?_EUSART1_DefaultFramingErrorHandler:	
  7219                           ; 1 bytes @ 0x0
  7220                           
  7221  0070                     ??_EUSART1_DefaultFramingErrorHandler:	
  7222                           ; 1 bytes @ 0x0
  7223                           
  7224  0070                     ?_EUSART1_DefaultOverrunErrorHandler:	
  7225                           ; 1 bytes @ 0x0
  7226                           
  7227  0070                     ??_EUSART1_DefaultOverrunErrorHandler:	
  7228                           ; 1 bytes @ 0x0
  7229                           
  7230  0070                     ?_EUSART1_DefaultErrorHandler:	
  7231                           ; 1 bytes @ 0x0
  7232                           
  7233  0070                     ?_EUSART1_RxDataHandler:	
  7234                           ; 1 bytes @ 0x0
  7235                           
  7236  0070                     ??_EUSART1_RxDataHandler:	
  7237                           ; 1 bytes @ 0x0
  7238                           
  7239  0070                     ?_PMD_Initialize:	
  7240                           ; 1 bytes @ 0x0
  7241                           
  7242  0070                     ?_PIN_MANAGER_Initialize:	
  7243                           ; 1 bytes @ 0x0
  7244                           
  7245  0070                     ?_OSCILLATOR_Initialize:	
  7246                           ; 1 bytes @ 0x0
  7247                           
  7248  0070                     ?_I2C1_Initialize:	
  7249                           ; 1 bytes @ 0x0
  7250                           
  7251  0070                     ?_ADCC_Initialize:	
  7252                           ; 1 bytes @ 0x0
  7253                           
  7254  0070                     ?_TMR0_Initialize:	
  7255                           ; 1 bytes @ 0x0
  7256                           
  7257  0070                     ?_TMR0_ISR:	
  7258                           ; 1 bytes @ 0x0
  7259                           
  7260  0070                     ??_TMR0_ISR:	
  7261                           ; 1 bytes @ 0x0
  7262                           
  7263  0070                     ?_I2C1_BusCollisionISR:	
  7264                           ; 1 bytes @ 0x0
  7265                           
  7266  0070                     ??_I2C1_BusCollisionISR:	
  7267                           ; 1 bytes @ 0x0
  7268                           
  7269  0070                     ?_I2C1_ISR:	
  7270                           ; 1 bytes @ 0x0
  7271                           
  7272  0070                     ?_ADCC_ThresholdISR:	
  7273                           ; 1 bytes @ 0x0
  7274                           
  7275  0070                     ??_ADCC_ThresholdISR:	
  7276                           ; 1 bytes @ 0x0
  7277                           
  7278  0070                     ?_TMR0_DefaultInterruptHandler:	
  7279                           ; 1 bytes @ 0x0
  7280                           
  7281  0070                     ??_TMR0_DefaultInterruptHandler:	
  7282                           ; 1 bytes @ 0x0
  7283                           
  7284  0070                     ?_I2C1_Stop:	
  7285                           ; 1 bytes @ 0x0
  7286                           
  7287  0070                     ??_I2C1_Stop:	
  7288                           ; 1 bytes @ 0x0
  7289                           
  7290  0070                     ?_I2C1_FunctionComplete:	
  7291                           ; 1 bytes @ 0x0
  7292                           
  7293  0070                     ??_I2C1_FunctionComplete:	
  7294                           ; 1 bytes @ 0x0
  7295                           
  7296  0070                     ?_ADCC_DefaultInterruptHandler:	
  7297                           ; 1 bytes @ 0x0
  7298                           
  7299  0070                     ??_ADCC_DefaultInterruptHandler:	
  7300                           ; 1 bytes @ 0x0
  7301                           
  7302  0070                     ?_CLOCK_init:	
  7303                           ; 1 bytes @ 0x0
  7304                           
  7305  0070                     ?_DMX_ISR:	
  7306                           ; 1 bytes @ 0x0
  7307                           
  7308  0070                     ??_DMX_ISR:	
  7309                           ; 1 bytes @ 0x0
  7310                           
  7311  0070                     ?_TM1650_init:	
  7312                           ; 1 bytes @ 0x0
  7313                           
  7314  0070                     ?_BUTTONS_init:	
  7315                           ; 1 bytes @ 0x0
  7316                           
  7317  0070                     ?_initLED:	
  7318                           ; 1 bytes @ 0x0
  7319                           
  7320  0070                     ?_BEAT_init:	
  7321                           ; 1 bytes @ 0x0
  7322                           
  7323  0070                     ?_MENU_task:	
  7324                           ; 1 bytes @ 0x0
  7325                           
  7326  0070                     ?_DMX_task:	
  7327                           ; 1 bytes @ 0x0
  7328                           
  7329  0070                     ?_BUTTONS_task:	
  7330                           ; 1 bytes @ 0x0
  7331                           
  7332  0070                     ?_CLOCK_timerCallback:	
  7333                           ; 1 bytes @ 0x0
  7334                           
  7335  0070                     ??_CLOCK_timerCallback:	
  7336                           ; 1 bytes @ 0x0
  7337                           
  7338  0070                     ?_TM1650_enable:	
  7339                           ; 1 bytes @ 0x0
  7340                           
  7341  0070                     ?_adrControl_DMX:	
  7342                           ; 1 bytes @ 0x0
  7343                           
  7344  0070                     ?_EUSART1_Initialize:	
  7345                           ; 1 bytes @ 0x0
  7346                           
  7347  0070                     ?_SYSTEM_Initialize:	
  7348                           ; 1 bytes @ 0x0
  7349                           
  7350  0070                     ?_INTERRUPT_InterruptManager:	
  7351                           ; 1 bytes @ 0x0
  7352                           
  7353  0070                     ?_I2C1_WaitForLastPacketToComplete:	
  7354                           ; 1 bytes @ 0x0
  7355                           
  7356  0070                     ?_ADCC_StartConversion:	
  7357                           ; 1 bytes @ 0x0
  7358                           
  7359  0070                     ?_main:	
  7360                           ; 1 bytes @ 0x0
  7361                           
  7362  0070                     ?_TM1650_isEnabled:	
  7363                           ; 1 bytes @ 0x0
  7364                           
  7365  0070                     ?_adcThresholdHandler:	
  7366                           ; 1 bytes @ 0x0
  7367                           
  7368  0070                     ??_adcThresholdHandler:	
  7369                           ; 1 bytes @ 0x0
  7370                           
  7371  0070                     ?_BEAT_detected:	
  7372                           ; 1 bytes @ 0x0
  7373                           
  7374  0070                     ?_BEAT_task:	
  7375                           ; 1 bytes @ 0x0
  7376                           
  7377  0070                     ?_isDMXOn:	
  7378                           ; 1 bytes @ 0x0
  7379                           
  7380  0070                     ?_fadeColor:	
  7381                           ; 1 bytes @ 0x0
  7382                           
  7383  0070                     ?_LED_DMX:	
  7384                           ; 1 bytes @ 0x0
  7385                           
  7386  0070                     ?_LED_Beat:	
  7387                           ; 1 bytes @ 0x0
  7388                           
  7389  0070                     ?_menuButtons:	
  7390                           ; 1 bytes @ 0x0
  7391                           
  7392  0070                     ?_cycleColors:	
  7393                           ; 1 bytes @ 0x0
  7394                           
  7395  0070                     ?_pulseColors:	
  7396                           ; 1 bytes @ 0x0
  7397                           
  7398  0070                     ?_address_inc:	
  7399                           ; 1 bytes @ 0x0
  7400                           
  7401  0070                     ?_address_dec:	
  7402                           ; 1 bytes @ 0x0
  7403                           
  7404                           
  7405                           ; 1 bytes @ 0x0
  7406  0070                     	ds	1
  7407  0071                     ??_EUSART1_Receive_ISR:	
  7408  0071                     ??_EUSART1_DefaultErrorHandler:	
  7409                           ; 1 bytes @ 0x1
  7410                           
  7411  0071                     I2C1_Stop@completion_code:	
  7412                           ; 1 bytes @ 0x1
  7413                           
  7414                           
  7415                           ; 1 bytes @ 0x1
  7416  0071                     	ds	1
  7417  0072                     ??_I2C1_ISR:	
  7418                           
  7419                           ; 1 bytes @ 0x2
  7420  0072                     	ds	4
  7421  0076                     ??_INTERRUPT_InterruptManager:	
  7422                           
  7423                           	psect	cstackBANK0
  7424  0020                     __pcstackBANK0:	
  7425                           ; 1 bytes @ 0x6
  7426                           
  7427  0020                     ?___fleq:	
  7428  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7429                           ; 1 bit 
  7430                           
  7431  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7432                           ; 1 bytes @ 0x0
  7433                           
  7434  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7435                           ; 1 bytes @ 0x0
  7436                           
  7437  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7438                           ; 1 bytes @ 0x0
  7439                           
  7440  0020                     ?_EUSART1_SetErrorHandler:	
  7441                           ; 1 bytes @ 0x0
  7442                           
  7443  0020                     ??_PMD_Initialize:	
  7444                           ; 1 bytes @ 0x0
  7445                           
  7446  0020                     ??_PIN_MANAGER_Initialize:	
  7447                           ; 1 bytes @ 0x0
  7448                           
  7449  0020                     ??_OSCILLATOR_Initialize:	
  7450                           ; 1 bytes @ 0x0
  7451                           
  7452  0020                     ??_I2C1_Initialize:	
  7453                           ; 1 bytes @ 0x0
  7454                           
  7455  0020                     ?_TMR0_SetInterruptHandler:	
  7456                           ; 1 bytes @ 0x0
  7457                           
  7458  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7459                           ; 1 bytes @ 0x0
  7460                           
  7461  0020                     ?_I2C1_MasterTRBInsert:	
  7462                           ; 1 bytes @ 0x0
  7463                           
  7464  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7465                           ; 1 bytes @ 0x0
  7466                           
  7467  0020                     ??_initLED:	
  7468                           ; 1 bytes @ 0x0
  7469                           
  7470  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7471                           ; 1 bytes @ 0x0
  7472                           
  7473  0020                     ??_ADCC_StartConversion:	
  7474                           ; 1 bytes @ 0x0
  7475                           
  7476  0020                     ?_ADCC_SetUpperThreshold:	
  7477                           ; 1 bytes @ 0x0
  7478                           
  7479  0020                     ??_TM1650_isEnabled:	
  7480                           ; 1 bytes @ 0x0
  7481                           
  7482  0020                     ?_init:	
  7483                           ; 1 bytes @ 0x0
  7484                           
  7485  0020                     ??_BEAT_detected:	
  7486                           ; 1 bytes @ 0x0
  7487                           
  7488  0020                     ??_isDMXOn:	
  7489                           ; 1 bytes @ 0x0
  7490                           
  7491  0020                     ?_LED_setColor:	
  7492                           ; 1 bytes @ 0x0
  7493                           
  7494  0020                     ?__Umul8_16:	
  7495                           ; 1 bytes @ 0x0
  7496                           
  7497  0020                     ?_CLOCK_getTime:	
  7498                           ; 2 bytes @ 0x0
  7499                           
  7500  0020                     ?_BUTTONS_isClicked:	
  7501                           ; 2 bytes @ 0x0
  7502                           
  7503  0020                     ?___lwdiv:	
  7504                           ; 2 bytes @ 0x0
  7505                           
  7506  0020                     ?___lwmod:	
  7507                           ; 2 bytes @ 0x0
  7508                           
  7509  0020                     ?___xxtofl:	
  7510                           ; 2 bytes @ 0x0
  7511                           
  7512  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7513                           ; 4 bytes @ 0x0
  7514                           
  7515  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7516                           ; 1 bytes @ 0x0
  7517                           
  7518  0020                     ADCC_StartConversion@channel:	
  7519                           ; 1 bytes @ 0x0
  7520                           
  7521  0020                     LED_setColor@green:	
  7522                           ; 1 bytes @ 0x0
  7523                           
  7524  0020                     __Umul8_16@multiplicand:	
  7525                           ; 1 bytes @ 0x0
  7526                           
  7527  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7528                           ; 1 bytes @ 0x0
  7529                           
  7530  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7531                           ; 2 bytes @ 0x0
  7532                           
  7533  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7534                           ; 2 bytes @ 0x0
  7535                           
  7536  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7537                           ; 2 bytes @ 0x0
  7538                           
  7539  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7540                           ; 2 bytes @ 0x0
  7541                           
  7542  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7543                           ; 2 bytes @ 0x0
  7544                           
  7545  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7546                           ; 2 bytes @ 0x0
  7547                           
  7548  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7549                           ; 2 bytes @ 0x0
  7550                           
  7551  0020                     init@port:	
  7552                           ; 2 bytes @ 0x0
  7553                           
  7554  0020                     ___lwdiv@divisor:	
  7555                           ; 2 bytes @ 0x0
  7556                           
  7557  0020                     ___lwmod@divisor:	
  7558                           ; 2 bytes @ 0x0
  7559                           
  7560  0020                     ___fleq@ff1:	
  7561                           ; 2 bytes @ 0x0
  7562                           
  7563  0020                     ___xxtofl@val:	
  7564                           ; 4 bytes @ 0x0
  7565                           
  7566                           
  7567                           ; 4 bytes @ 0x0
  7568  0020                     	ds	1
  7569  0021                     I2C1_MasterTRBInsert@pflag:	
  7570  0021                     I2C1_MasterWriteTRBBuild@length:	
  7571                           ; 1 bytes @ 0x1
  7572                           
  7573  0021                     LED_setColor@white:	
  7574                           ; 1 bytes @ 0x1
  7575                           
  7576                           
  7577                           ; 1 bytes @ 0x1
  7578  0021                     	ds	1
  7579  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7580  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7581                           ; 1 bytes @ 0x2
  7582                           
  7583  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7584                           ; 1 bytes @ 0x2
  7585                           
  7586  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7587                           ; 1 bytes @ 0x2
  7588                           
  7589  0022                     ??_EUSART1_SetErrorHandler:	
  7590                           ; 1 bytes @ 0x2
  7591                           
  7592  0022                     ??_ADCC_Initialize:	
  7593                           ; 1 bytes @ 0x2
  7594                           
  7595  0022                     ??_TMR0_Initialize:	
  7596                           ; 1 bytes @ 0x2
  7597                           
  7598  0022                     ??_TMR0_SetInterruptHandler:	
  7599                           ; 1 bytes @ 0x2
  7600                           
  7601  0022                     ??_I2C1_MasterTRBInsert:	
  7602                           ; 1 bytes @ 0x2
  7603                           
  7604  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7605                           ; 1 bytes @ 0x2
  7606                           
  7607  0022                     ??_CLOCK_init:	
  7608                           ; 1 bytes @ 0x2
  7609                           
  7610  0022                     ??_BEAT_init:	
  7611                           ; 1 bytes @ 0x2
  7612                           
  7613  0022                     ??_DMX_task:	
  7614                           ; 1 bytes @ 0x2
  7615                           
  7616  0022                     ??_BUTTONS_task:	
  7617                           ; 1 bytes @ 0x2
  7618                           
  7619  0022                     ??__Umul8_16:	
  7620                           ; 1 bytes @ 0x2
  7621                           
  7622  0022                     ??_EUSART1_Initialize:	
  7623                           ; 1 bytes @ 0x2
  7624                           
  7625  0022                     ??_ADCC_SetUpperThreshold:	
  7626                           ; 1 bytes @ 0x2
  7627                           
  7628  0022                     ??_CLOCK_getTime:	
  7629                           ; 1 bytes @ 0x2
  7630                           
  7631  0022                     init@pin:	
  7632                           ; 1 bytes @ 0x2
  7633                           
  7634  0022                     LED_setColor@blue:	
  7635                           ; 1 bytes @ 0x2
  7636                           
  7637  0022                     I2C1_MasterWriteTRBBuild@address:	
  7638                           ; 1 bytes @ 0x2
  7639                           
  7640  0022                     ___lwdiv@dividend:	
  7641                           ; 2 bytes @ 0x2
  7642                           
  7643  0022                     ___lwmod@dividend:	
  7644                           ; 2 bytes @ 0x2
  7645                           
  7646                           
  7647                           ; 2 bytes @ 0x2
  7648  0022                     	ds	1
  7649  0023                     ??_SYSTEM_Initialize:	
  7650  0023                     ??_init:	
  7651                           ; 1 bytes @ 0x3
  7652                           
  7653  0023                     ??_BUTTONS_isClicked:	
  7654                           ; 1 bytes @ 0x3
  7655                           
  7656  0023                     ??_LED_setColor:	
  7657                           ; 1 bytes @ 0x3
  7658                           
  7659  0023                     I2C1_MasterTRBInsert@count:	
  7660                           ; 1 bytes @ 0x3
  7661                           
  7662  0023                     BUTTONS_isClicked@button:	
  7663                           ; 1 bytes @ 0x3
  7664                           
  7665                           
  7666                           ; 1 bytes @ 0x3
  7667  0023                     	ds	1
  7668  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7669  0024                     ??_menuButtons:	
  7670                           ; 1 bytes @ 0x4
  7671                           
  7672  0024                     ??___lwdiv:	
  7673                           ; 1 bytes @ 0x4
  7674                           
  7675  0024                     ??___lwmod:	
  7676                           ; 1 bytes @ 0x4
  7677                           
  7678  0024                     ??___xxtofl:	
  7679                           ; 1 bytes @ 0x4
  7680                           
  7681  0024                     init@btn:	
  7682                           ; 1 bytes @ 0x4
  7683                           
  7684  0024                     DMX_task@time:	
  7685                           ; 1 bytes @ 0x4
  7686                           
  7687  0024                     __Umul8_16@product:	
  7688                           ; 2 bytes @ 0x4
  7689                           
  7690  0024                     ___fleq@ff2:	
  7691                           ; 2 bytes @ 0x4
  7692                           
  7693                           
  7694                           ; 4 bytes @ 0x4
  7695  0024                     	ds	1
  7696  0025                     ??_BUTTONS_init:	
  7697  0025                     BUTTONS_task@i:	
  7698                           ; 1 bytes @ 0x5
  7699                           
  7700  0025                     ___lwdiv@counter:	
  7701                           ; 1 bytes @ 0x5
  7702                           
  7703  0025                     ___lwmod@counter:	
  7704                           ; 1 bytes @ 0x5
  7705                           
  7706                           
  7707                           ; 1 bytes @ 0x5
  7708  0025                     	ds	1
  7709  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7710  0026                     BUTTONS_task@time:	
  7711                           ; 1 bytes @ 0x6
  7712                           
  7713  0026                     ___lwdiv@quotient:	
  7714                           ; 2 bytes @ 0x6
  7715                           
  7716  0026                     __Umul8_16@word_mpld:	
  7717                           ; 2 bytes @ 0x6
  7718                           
  7719                           
  7720                           ; 2 bytes @ 0x6
  7721  0026                     	ds	1
  7722  0027                     ?_I2C1_MasterWrite:	
  7723  0027                     I2C1_MasterWrite@length:	
  7724                           ; 1 bytes @ 0x7
  7725                           
  7726  0027                     LED_setColor@lo1:	
  7727                           ; 1 bytes @ 0x7
  7728                           
  7729                           
  7730                           ; 2 bytes @ 0x7
  7731  0027                     	ds	1
  7732  0028                     ??_BEAT_task:	
  7733  0028                     ??___fleq:	
  7734                           ; 1 bytes @ 0x8
  7735                           
  7736  0028                     BUTTONS_task@btn:	
  7737                           ; 1 bytes @ 0x8
  7738                           
  7739  0028                     ___xxtofl@sign:	
  7740                           ; 1 bytes @ 0x8
  7741                           
  7742  0028                     __Umul8_16@multiplier:	
  7743                           ; 1 bytes @ 0x8
  7744                           
  7745  0028                     I2C1_MasterWrite@address:	
  7746                           ; 1 bytes @ 0x8
  7747                           
  7748                           
  7749                           ; 2 bytes @ 0x8
  7750  0028                     	ds	1
  7751  0029                     ?___fladd:	
  7752  0029                     ___xxtofl@exp:	
  7753                           ; 4 bytes @ 0x9
  7754                           
  7755  0029                     ___fladd@b:	
  7756                           ; 1 bytes @ 0x9
  7757                           
  7758                           
  7759                           ; 4 bytes @ 0x9
  7760  0029                     	ds	1
  7761  002A                     I2C1_MasterWrite@pflag:	
  7762  002A                     BEAT_task@offset:	
  7763                           ; 1 bytes @ 0xA
  7764                           
  7765  002A                     ___xxtofl@arg:	
  7766                           ; 2 bytes @ 0xA
  7767                           
  7768                           
  7769                           ; 4 bytes @ 0xA
  7770  002A                     	ds	1
  7771  002B                     ??_I2C1_MasterWrite:	
  7772  002B                     LED_setColor@lo2:	
  7773                           ; 1 bytes @ 0xB
  7774                           
  7775                           
  7776                           ; 2 bytes @ 0xB
  7777  002B                     	ds	2
  7778  002D                     I2C1_MasterWrite@pdata:	
  7779  002D                     ___fladd@a:	
  7780                           ; 1 bytes @ 0xD
  7781                           
  7782                           
  7783                           ; 4 bytes @ 0xD
  7784  002D                     	ds	1
  7785  002E                     ?_writeData:	
  7786  002E                     ?___fldiv:	
  7787                           ; 1 bytes @ 0xE
  7788                           
  7789  002E                     writeData@data:	
  7790                           ; 4 bytes @ 0xE
  7791                           
  7792  002E                     ___fldiv@a:	
  7793                           ; 1 bytes @ 0xE
  7794                           
  7795                           
  7796                           ; 4 bytes @ 0xE
  7797  002E                     	ds	1
  7798  002F                     ??_writeData:	
  7799  002F                     LED_setColor@lo3:	
  7800                           ; 1 bytes @ 0xF
  7801                           
  7802                           
  7803                           ; 2 bytes @ 0xF
  7804  002F                     	ds	2
  7805  0031                     ??___fladd:	
  7806                           
  7807                           ; 1 bytes @ 0x11
  7808  0031                     	ds	1
  7809  0032                     writeData@address:	
  7810  0032                     ___fldiv@b:	
  7811                           ; 1 bytes @ 0x12
  7812                           
  7813                           
  7814                           ; 4 bytes @ 0x12
  7815  0032                     	ds	1
  7816  0033                     writeData@status:	
  7817  0033                     LED_setColor@lo4:	
  7818                           ; 1 bytes @ 0x13
  7819                           
  7820                           
  7821                           ; 2 bytes @ 0x13
  7822  0033                     	ds	1
  7823  0034                     ??_TM1650_enable:	
  7824  0034                     ?_TM1650_setDigit:	
  7825                           ; 1 bytes @ 0x14
  7826                           
  7827  0034                     TM1650_setDigit@data:	
  7828                           ; 1 bytes @ 0x14
  7829                           
  7830  0034                     TM1650_enable@enable:	
  7831                           ; 1 bytes @ 0x14
  7832                           
  7833                           
  7834                           ; 1 bytes @ 0x14
  7835  0034                     	ds	1
  7836  0035                     ??_TM1650_init:	
  7837  0035                     LED_setColor@red:	
  7838                           ; 1 bytes @ 0x15
  7839                           
  7840  0035                     TM1650_setDigit@dp:	
  7841                           ; 1 bytes @ 0x15
  7842                           
  7843                           
  7844                           ; 2 bytes @ 0x15
  7845  0035                     	ds	1
  7846  0036                     ??_LED_DMX:	
  7847  0036                     ??___fldiv:	
  7848                           ; 1 bytes @ 0x16
  7849                           
  7850                           
  7851                           ; 1 bytes @ 0x16
  7852  0036                     	ds	1
  7853  0037                     ??_TM1650_setDigit:	
  7854                           
  7855                           ; 1 bytes @ 0x17
  7856  0037                     	ds	2
  7857  0039                     ___fladd@signs:	
  7858                           
  7859                           ; 1 bytes @ 0x19
  7860  0039                     	ds	1
  7861  003A                     TM1650_setDigit@digit:	
  7862  003A                     ___fladd@aexp:	
  7863                           ; 1 bytes @ 0x1A
  7864                           
  7865                           
  7866                           ; 1 bytes @ 0x1A
  7867  003A                     	ds	1
  7868  003B                     ?_TM1650_fastPrintNum:	
  7869  003B                     ___fladd@bexp:	
  7870                           ; 1 bytes @ 0x1B
  7871                           
  7872  003B                     TM1650_fastPrintNum@num:	
  7873                           ; 1 bytes @ 0x1B
  7874                           
  7875  003B                     ___fldiv@rem:	
  7876                           ; 2 bytes @ 0x1B
  7877                           
  7878                           
  7879                           ; 4 bytes @ 0x1B
  7880  003B                     	ds	1
  7881  003C                     ___fladd@grs:	
  7882                           
  7883                           ; 1 bytes @ 0x1C
  7884  003C                     	ds	1
  7885  003D                     ??_TM1650_fastPrintNum:	
  7886  003D                     ?___flmul:	
  7887                           ; 1 bytes @ 0x1D
  7888                           
  7889  003D                     ___flmul@b:	
  7890                           ; 4 bytes @ 0x1D
  7891                           
  7892                           
  7893                           ; 4 bytes @ 0x1D
  7894  003D                     	ds	1
  7895  003E                     TM1650_fastPrintNum@numWrite:	
  7896                           
  7897                           ; 2 bytes @ 0x1E
  7898  003E                     	ds	1
  7899  003F                     ___fldiv@sign:	
  7900                           
  7901                           ; 1 bytes @ 0x1F
  7902  003F                     	ds	1
  7903  0040                     TM1650_fastPrintNum@i:	
  7904  0040                     ___fldiv@new_exp:	
  7905                           ; 2 bytes @ 0x20
  7906                           
  7907                           
  7908                           ; 2 bytes @ 0x20
  7909  0040                     	ds	1
  7910  0041                     ___flmul@a:	
  7911                           
  7912                           ; 4 bytes @ 0x21
  7913  0041                     	ds	1
  7914  0042                     ??_adrControl_DMX:	
  7915  0042                     ??_address_inc:	
  7916                           ; 1 bytes @ 0x22
  7917                           
  7918  0042                     ??_address_dec:	
  7919                           ; 1 bytes @ 0x22
  7920                           
  7921  0042                     ?_increment:	
  7922                           ; 1 bytes @ 0x22
  7923                           
  7924  0042                     ?_decrement:	
  7925                           ; 1 bytes @ 0x22
  7926                           
  7927  0042                     increment@val:	
  7928                           ; 1 bytes @ 0x22
  7929                           
  7930  0042                     decrement@val:	
  7931                           ; 2 bytes @ 0x22
  7932                           
  7933  0042                     ___fldiv@grs:	
  7934                           ; 2 bytes @ 0x22
  7935                           
  7936                           
  7937                           ; 4 bytes @ 0x22
  7938  0042                     	ds	2
  7939  0044                     ??_increment:	
  7940  0044                     ??_decrement:	
  7941                           ; 1 bytes @ 0x24
  7942                           
  7943  0044                     adrControl_DMX@time:	
  7944                           ; 1 bytes @ 0x24
  7945                           
  7946                           
  7947                           ; 2 bytes @ 0x24
  7948  0044                     	ds	1
  7949  0045                     ??___flmul:	
  7950                           
  7951                           ; 1 bytes @ 0x25
  7952  0045                     	ds	1
  7953  0046                     ?_dispInc:	
  7954  0046                     ___fldiv@bexp:	
  7955                           ; 1 bytes @ 0x26
  7956                           
  7957  0046                     dispInc@val:	
  7958                           ; 1 bytes @ 0x26
  7959                           
  7960                           
  7961                           ; 2 bytes @ 0x26
  7962  0046                     	ds	1
  7963  0047                     ___fldiv@aexp:	
  7964                           
  7965                           ; 1 bytes @ 0x27
  7966  0047                     	ds	1
  7967  0048                     ??_dispInc:	
  7968                           
  7969                           ; 1 bytes @ 0x28
  7970  0048                     	ds	2
  7971  004A                     ___flmul@sign:	
  7972  004A                     dispInc@doo:	
  7973                           ; 1 bytes @ 0x2A
  7974                           
  7975                           
  7976                           ; 2 bytes @ 0x2A
  7977  004A                     	ds	1
  7978  004B                     ___flmul@aexp:	
  7979                           
  7980                           ; 1 bytes @ 0x2B
  7981  004B                     	ds	1
  7982  004C                     dispInc@foo:	
  7983  004C                     ___flmul@grs:	
  7984                           ; 2 bytes @ 0x2C
  7985                           
  7986                           
  7987                           ; 4 bytes @ 0x2C
  7988  004C                     	ds	2
  7989  004E                     dispInc@time:	
  7990                           
  7991                           ; 2 bytes @ 0x2E
  7992  004E                     	ds	2
  7993  0050                     ___flmul@bexp:	
  7994                           
  7995                           ; 1 bytes @ 0x30
  7996  0050                     	ds	1
  7997  0051                     ___flmul@prod:	
  7998                           
  7999                           ; 4 bytes @ 0x31
  8000  0051                     	ds	4
  8001  0055                     ___flmul@temp:	
  8002                           
  8003                           ; 2 bytes @ 0x35
  8004  0055                     	ds	2
  8005  0057                     ?___flge:	
  8006  0057                     ?___flsub:	
  8007                           ; 1 bit 
  8008                           
  8009  0057                     ___flge@ff1:	
  8010                           ; 4 bytes @ 0x37
  8011                           
  8012  0057                     ___flsub@a:	
  8013                           ; 4 bytes @ 0x37
  8014                           
  8015                           
  8016                           ; 4 bytes @ 0x37
  8017  0057                     	ds	4
  8018  005B                     ___flge@ff2:	
  8019  005B                     ___flsub@b:	
  8020                           ; 4 bytes @ 0x3B
  8021                           
  8022                           
  8023                           ; 4 bytes @ 0x3B
  8024  005B                     	ds	4
  8025  005F                     ??___flge:	
  8026  005F                     ??___flsub:	
  8027                           ; 1 bytes @ 0x3F
  8028                           
  8029                           
  8030                           ; 1 bytes @ 0x3F
  8031  005F                     	ds	4
  8032  0063                     ?_HueToRGB:	
  8033  0063                     HueToRGB@v1:	
  8034                           ; 4 bytes @ 0x43
  8035                           
  8036                           
  8037                           ; 4 bytes @ 0x43
  8038  0063                     	ds	4
  8039  0067                     HueToRGB@v2:	
  8040                           
  8041                           ; 4 bytes @ 0x47
  8042  0067                     	ds	4
  8043  006B                     HueToRGB@vH:	
  8044                           
  8045                           ; 4 bytes @ 0x4B
  8046  006B                     	ds	4
  8047  006F                     ??_HueToRGB:	
  8048  006F                     ??_LED_Beat:	
  8049                           ; 1 bytes @ 0x4F
  8050                           
  8051  006F                     ??_pulseColors:	
  8052                           ; 1 bytes @ 0x4F
  8053                           
  8054                           
  8055                           ; 1 bytes @ 0x4F
  8056  006F                     	ds	1
  8057                           
  8058                           	psect	maintext
  8059  124B                     __pmaintext:	
  8060 ;;
  8061 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8062 ;;
  8063 ;; *************** function _main *****************
  8064 ;; Defined at:
  8065 ;;		line 16 in file "main.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;		None
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : B3F/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8081 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8082 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8083 ;;Total ram usage:        2 bytes
  8084 ;; Hardware stack levels required when called:   14
  8085 ;; This function calls:
  8086 ;;		_BEAT_init
  8087 ;;		_BUTTONS_init
  8088 ;;		_BUTTONS_task
  8089 ;;		_CLOCK_init
  8090 ;;		_DMX_task
  8091 ;;		_EUSART1_SetRxInterruptHandler
  8092 ;;		_MENU_task
  8093 ;;		_SYSTEM_Initialize
  8094 ;;		_TM1650_init
  8095 ;;		_initLED
  8096 ;; This function is called by:
  8097 ;;		Startup code after reset
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           
  8102                           ;psect for function _main
  8103  124B                     _main:	
  8104                           
  8105                           ;main.c: 18:     SYSTEM_Initialize();
  8106                           
  8107                           ;incstack = 0
  8108                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8109  124B  319F  271F  3192   	fcall	_SYSTEM_Initialize
  8110                           
  8111                           ;main.c: 19:     CLOCK_init();
  8112  124E  3188  2000  3192   	fcall	_CLOCK_init
  8113                           
  8114                           ;main.c: 20:     TRISB6 = 0;
  8115  1251  0140               	movlb	0	; select bank0
  8116  1252  1313               	bcf	19,6	;volatile
  8117                           
  8118                           ;main.c: 21:     LATB6 = 0;
  8119  1253  1319               	bcf	25,6	;volatile
  8120                           
  8121                           ;main.c: 22:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  8122  1254  30CD               	movlw	low _DMX_ISR
  8123  1255  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8124  1256  3010               	movlw	high _DMX_ISR
  8125  1257  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8126  1258  319E  2661  3192   	fcall	_EUSART1_SetRxInterruptHandler
  8127                           
  8128                           ;main.c: 28:     (INTCONbits.GIE = 1);
  8129  125B  178B               	bsf	11,7	;volatile
  8130                           
  8131                           ;main.c: 31:     (INTCONbits.PEIE = 1);
  8132  125C  170B               	bsf	11,6	;volatile
  8133                           
  8134                           ;main.c: 38:      _delay((unsigned long)((500)*(32000000/4000.0)));
  8135  125D  3015               	movlw	21
  8136  125E  0143               	movlb	3	; select bank3
  8137  125F  00E9               	movwf	(??_main^(0+384)+1)
  8138  1260  304B               	movlw	75
  8139  1261  00E8               	movwf	??_main^(0+384)
  8140  1262  30BE               	movlw	190
  8141  1263                     u6707:	
  8142  1263  0B89               	decfsz	9,f
  8143  1264  2A63               	goto	u6707
  8144  1265  0BE8               	decfsz	??_main^(0+384),f
  8145  1266  2A63               	goto	u6707
  8146  1267  0BE9               	decfsz	(??_main^(0+384)+1),f
  8147  1268  2A63               	goto	u6707
  8148  1269  0000               	nop
  8149                           
  8150                           ;main.c: 39:     TM1650_init();
  8151  126A  319E  2601  3192   	fcall	_TM1650_init
  8152                           
  8153                           ;main.c: 40:     BUTTONS_init();
  8154  126D  3193  23F1  3192   	fcall	_BUTTONS_init
  8155                           
  8156                           ;main.c: 41:     initLED();
  8157  1270  3191  2117  3192   	fcall	_initLED
  8158                           
  8159                           ;main.c: 42:     BEAT_init();
  8160  1273  319F  2761  3192   	fcall	_BEAT_init
  8161  1276                     l6365:	
  8162                           
  8163                           ;main.c: 46:         MENU_task();
  8164  1276  3194  248E  3192   	fcall	_MENU_task
  8165                           
  8166                           ;main.c: 47:         DMX_task();
  8167  1279  3192  22B6  3192   	fcall	_DMX_task
  8168                           
  8169                           ;main.c: 48:         BUTTONS_task();
  8170  127C  318A  220B  3192   	fcall	_BUTTONS_task
  8171  127F  2A76               	goto	l6365
  8172  1280                     __end_of_main:	
  8173                           
  8174                           	psect	text1
  8175  1117                     __ptext1:	
  8176 ;; *************** function _initLED *****************
  8177 ;; Defined at:
  8178 ;;		line 13 in file "led.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;		None
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      void 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2, status,0
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8196 ;;Total ram usage:        0 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:    4
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		_main
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           
  8207                           ;psect for function _initLED
  8208  1117                     _initLED:	
  8209                           
  8210                           ;led.c: 16:     TRISC7 = 0;
  8211                           
  8212                           ;incstack = 0
  8213                           ; Regs used in _initLED: [wreg+status,2+status,0]
  8214  1117  0140               	movlb	0	; select bank0
  8215  1118  1394               	bcf	20,7	;volatile
  8216                           
  8217                           ;led.c: 17:     TRISC6 = 0;
  8218  1119  1314               	bcf	20,6	;volatile
  8219                           
  8220                           ;led.c: 18:     TRISC4 = 0;
  8221  111A  1214               	bcf	20,4	;volatile
  8222                           
  8223                           ;led.c: 19:     TRISC3 = 0;
  8224  111B  1194               	bcf	20,3	;volatile
  8225                           
  8226                           ;led.c: 21:     T2CLKCON = 0x01;
  8227  111C  3001               	movlw	1
  8228  111D  0145               	movlb	5	; select bank5
  8229  111E  0090               	movwf	16	;volatile
  8230                           
  8231                           ;led.c: 22:     T2CONbits.ON = 1;
  8232  111F  178E               	bsf	14,7	;volatile
  8233                           
  8234                           ;led.c: 24:     CCP1CONbits.CCP1EN = 1;
  8235  1120  0146               	movlb	6	; select bank6
  8236  1121  178E               	bsf	14,7	;volatile
  8237                           
  8238                           ;led.c: 25:     CCP1CONbits.MODE = 0b1100;
  8239  1122  080E               	movf	14,w	;volatile
  8240  1123  39F0               	andlw	-16
  8241  1124  380C               	iorlw	12
  8242  1125  008E               	movwf	14	;volatile
  8243                           
  8244                           ;led.c: 26:     CCP2CONbits.CCP2EN = 1;
  8245  1126  1792               	bsf	18,7	;volatile
  8246                           
  8247                           ;led.c: 27:     CCP2CONbits.MODE = 0b1100;
  8248  1127  0812               	movf	18,w	;volatile
  8249  1128  39F0               	andlw	-16
  8250  1129  380C               	iorlw	12
  8251  112A  0092               	movwf	18	;volatile
  8252                           
  8253                           ;led.c: 28:     CCP3CONbits.CCP3EN = 1;
  8254  112B  1796               	bsf	22,7	;volatile
  8255                           
  8256                           ;led.c: 29:     CCP3CONbits.MODE = 0b1100;
  8257  112C  0816               	movf	22,w	;volatile
  8258  112D  39F0               	andlw	-16
  8259  112E  380C               	iorlw	12
  8260  112F  0096               	movwf	22	;volatile
  8261                           
  8262                           ;led.c: 30:     CCP4CONbits.CCP4EN = 1;
  8263  1130  179A               	bsf	26,7	;volatile
  8264                           
  8265                           ;led.c: 31:     CCP4CONbits.MODE = 0b1100;
  8266  1131  081A               	movf	26,w	;volatile
  8267  1132  39F0               	andlw	-16
  8268  1133  380C               	iorlw	12
  8269  1134  009A               	movwf	26	;volatile
  8270                           
  8271                           ;led.c: 34:     RC7PPS = 0x09;
  8272  1135  3009               	movlw	9
  8273  1136  017E               	movlb	62	; select bank62
  8274  1137  00A7               	movwf	39	;volatile
  8275                           
  8276                           ;led.c: 35:     RC6PPS = 0x0A;
  8277  1138  300A               	movlw	10
  8278  1139  00A6               	movwf	38	;volatile
  8279                           
  8280                           ;led.c: 36:     RC4PPS = 0x0B;
  8281  113A  300B               	movlw	11
  8282  113B  00A4               	movwf	36	;volatile
  8283                           
  8284                           ;led.c: 37:     RC3PPS = 0x0C;
  8285  113C  300C               	movlw	12
  8286  113D  00A3               	movwf	35	;volatile
  8287  113E  0008               	return
  8288  113F                     __end_of_initLED:	
  8289                           
  8290                           	psect	text2
  8291  1E01                     __ptext2:	
  8292 ;; *************** function _TM1650_init *****************
  8293 ;; Defined at:
  8294 ;;		line 28 in file "tm1650.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:    9
  8315 ;; This function calls:
  8316 ;;		_TM1650_enable
  8317 ;; This function is called by:
  8318 ;;		_main
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           
  8323                           ;psect for function _TM1650_init
  8324  1E01                     _TM1650_init:	
  8325                           
  8326                           ;tm1650.c: 29:     TM1650_enable(1);
  8327                           
  8328                           ;incstack = 0
  8329                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8330  1E01  3001               	movlw	1
  8331  1E02  319E  26F5         	fcall	_TM1650_enable
  8332  1E04  0008               	return
  8333  1E05                     __end_of_TM1650_init:	
  8334                           
  8335                           	psect	text3
  8336  1F1F                     __ptext3:	
  8337 ;; *************** function _SYSTEM_Initialize *****************
  8338 ;; Defined at:
  8339 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;		None
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1    wreg      void 
  8346 ;; Registers used:
  8347 ;;		wreg, status,2, status,0, pclath, cstack
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8357 ;;Total ram usage:        0 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; Hardware stack levels required when called:    6
  8360 ;; This function calls:
  8361 ;;		_ADCC_Initialize
  8362 ;;		_EUSART1_Initialize
  8363 ;;		_I2C1_Initialize
  8364 ;;		_OSCILLATOR_Initialize
  8365 ;;		_PIN_MANAGER_Initialize
  8366 ;;		_PMD_Initialize
  8367 ;;		_TMR0_Initialize
  8368 ;; This function is called by:
  8369 ;;		_main
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           
  8374                           ;psect for function _SYSTEM_Initialize
  8375  1F1F                     _SYSTEM_Initialize:	
  8376                           
  8377                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8378                           
  8379                           ;incstack = 0
  8380                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8381  1F1F  319E  267C  319F   	fcall	_PMD_Initialize
  8382                           
  8383                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8384  1F22  3191  21E9  319F   	fcall	_PIN_MANAGER_Initialize
  8385                           
  8386                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8387  1F25  319E  2673  319F   	fcall	_OSCILLATOR_Initialize
  8388                           
  8389                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  8390  1F28  319F  27C7  319F   	fcall	_I2C1_Initialize
  8391                           
  8392                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  8393  1F2B  3190  20F1  319F   	fcall	_ADCC_Initialize
  8394                           
  8395                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  8396  1F2E  319E  26CD  319F   	fcall	_TMR0_Initialize
  8397                           
  8398                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  8399  1F31  3193  2362         	fcall	_EUSART1_Initialize
  8400  1F33  0008               	return
  8401  1F34                     __end_of_SYSTEM_Initialize:	
  8402                           
  8403                           	psect	text4
  8404  1ECD                     __ptext4:	
  8405 ;; *************** function _TMR0_Initialize *****************
  8406 ;; Defined at:
  8407 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;		None
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;		None
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  1    wreg      void 
  8414 ;; Registers used:
  8415 ;;		wreg, status,2, status,0, pclath, cstack
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8425 ;;Total ram usage:        0 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; Hardware stack levels required when called:    5
  8428 ;; This function calls:
  8429 ;;		_TMR0_SetInterruptHandler
  8430 ;; This function is called by:
  8431 ;;		_SYSTEM_Initialize
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           
  8436                           ;psect for function _TMR0_Initialize
  8437  1ECD                     _TMR0_Initialize:	
  8438                           
  8439                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  8440                           
  8441                           ;incstack = 0
  8442                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8443  1ECD  3045               	movlw	69
  8444  1ECE  014B               	movlb	11	; select bank11
  8445  1ECF  009F               	movwf	31	;volatile
  8446                           
  8447                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8448  1ED0  30F9               	movlw	249
  8449  1ED1  009D               	movwf	29	;volatile
  8450                           
  8451                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8452  1ED2  019C               	clrf	28	;volatile
  8453                           
  8454                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8455  1ED3  014E               	movlb	14	; select bank14
  8456  1ED4  128C               	bcf	12,5	;volatile
  8457                           
  8458                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8459  1ED5  1696               	bsf	22,5	;volatile
  8460                           
  8461                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8462  1ED6  3003               	movlw	low _TMR0_DefaultInterruptHandler
  8463  1ED7  0140               	movlb	0	; select bank0
  8464  1ED8  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8465  1ED9  3000               	movlw	high _TMR0_DefaultInterruptHandler
  8466  1EDA  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8467  1EDB  319E  2634         	fcall	_TMR0_SetInterruptHandler
  8468                           
  8469                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8470  1EDD  3080               	movlw	128
  8471  1EDE  014B               	movlb	11	; select bank11
  8472  1EDF  009E               	movwf	30	;volatile
  8473  1EE0  0008               	return
  8474  1EE1                     __end_of_TMR0_Initialize:	
  8475                           
  8476                           	psect	text5
  8477  1E7C                     __ptext5:	
  8478 ;; *************** function _PMD_Initialize *****************
  8479 ;; Defined at:
  8480 ;;		line 75 in file "mcc_generated_files/mcc.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;		None
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		status,2
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8498 ;;Total ram usage:        0 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    4
  8501 ;; This function calls:
  8502 ;;		Nothing
  8503 ;; This function is called by:
  8504 ;;		_SYSTEM_Initialize
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           
  8509                           ;psect for function _PMD_Initialize
  8510  1E7C                     _PMD_Initialize:	
  8511                           
  8512                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  8513                           
  8514                           ;incstack = 0
  8515                           ; Regs used in _PMD_Initialize: [status,2]
  8516  1E7C  014F               	movlb	15	; select bank15
  8517  1E7D  0196               	clrf	22	;volatile
  8518                           
  8519                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  8520  1E7E  0197               	clrf	23	;volatile
  8521                           
  8522                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  8523  1E7F  0198               	clrf	24	;volatile
  8524                           
  8525                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  8526  1E80  0199               	clrf	25	;volatile
  8527                           
  8528                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  8529  1E81  019A               	clrf	26	;volatile
  8530                           
  8531                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  8532  1E82  019B               	clrf	27	;volatile
  8533                           
  8534                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  8535  1E83  019C               	clrf	28	;volatile
  8536                           
  8537                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  8538  1E84  019D               	clrf	29	;volatile
  8539  1E85  0008               	return
  8540  1E86                     __end_of_PMD_Initialize:	
  8541                           
  8542                           	psect	text6
  8543  11E9                     __ptext6:	
  8544 ;; *************** function _PIN_MANAGER_Initialize *****************
  8545 ;; Defined at:
  8546 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;		None
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;		None
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  1    wreg      void 
  8553 ;; Registers used:
  8554 ;;		wreg, status,2
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8564 ;;Total ram usage:        0 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; Hardware stack levels required when called:    4
  8567 ;; This function calls:
  8568 ;;		Nothing
  8569 ;; This function is called by:
  8570 ;;		_SYSTEM_Initialize
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           
  8575                           ;psect for function _PIN_MANAGER_Initialize
  8576  11E9                     _PIN_MANAGER_Initialize:	
  8577                           
  8578                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8579                           
  8580                           ;incstack = 0
  8581                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8582  11E9  0140               	movlb	0	; select bank0
  8583  11EA  0198               	clrf	24	;volatile
  8584                           
  8585                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8586  11EB  0199               	clrf	25	;volatile
  8587                           
  8588                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8589  11EC  019A               	clrf	26	;volatile
  8590                           
  8591                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8592  11ED  303F               	movlw	63
  8593  11EE  0092               	movwf	18	;volatile
  8594                           
  8595                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  8596  11EF  30F0               	movlw	240
  8597  11F0  0093               	movwf	19	;volatile
  8598                           
  8599                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8600  11F1  30FF               	movlw	255
  8601  11F2  0094               	movwf	20	;volatile
  8602                           
  8603                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8604  11F3  30F8               	movlw	248
  8605  11F4  017E               	movlb	62	; select bank62
  8606  11F5  00CE               	movwf	78	;volatile
  8607                           
  8608                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8609  11F6  30E0               	movlw	224
  8610  11F7  00C3               	movwf	67	;volatile
  8611                           
  8612                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8613  11F8  3003               	movlw	3
  8614  11F9  00B8               	movwf	56	;volatile
  8615                           
  8616                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8617  11FA  01C4               	clrf	68	;volatile
  8618                           
  8619                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8620  11FB  3004               	movlw	4
  8621  11FC  00B9               	movwf	57	;volatile
  8622                           
  8623                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8624  11FD  3007               	movlw	7
  8625  11FE  00CF               	movwf	79	;volatile
  8626                           
  8627                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8628  11FF  01BA               	clrf	58	;volatile
  8629                           
  8630                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8631  1200  01C5               	clrf	69	;volatile
  8632                           
  8633                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8634  1201  01D0               	clrf	80	;volatile
  8635                           
  8636                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8637  1202  3037               	movlw	55
  8638  1203  00BB               	movwf	59	;volatile
  8639                           
  8640                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8641  1204  30F0               	movlw	240
  8642  1205  00C6               	movwf	70	;volatile
  8643                           
  8644                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8645  1206  30FF               	movlw	255
  8646  1207  00D1               	movwf	81	;volatile
  8647                           
  8648                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8649  1208  3005               	movlw	5
  8650  1209  017D               	movlb	61	; select bank61
  8651  120A  00C5               	movwf	69	;volatile
  8652                           
  8653                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8654  120B  3014               	movlw	20
  8655  120C  017E               	movlb	62	; select bank62
  8656  120D  0094               	movwf	20	;volatile
  8657                           
  8658                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  8659  120E  3013               	movlw	19
  8660  120F  0095               	movwf	21	;volatile
  8661                           
  8662                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  8663  1210  3004               	movlw	4
  8664  1211  017D               	movlb	61	; select bank61
  8665  1212  00C6               	movwf	70	;volatile
  8666                           
  8667                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  8668  1213  300C               	movlw	12
  8669  1214  00CB               	movwf	75	;volatile
  8670  1215  0008               	return
  8671  1216                     __end_of_PIN_MANAGER_Initialize:	
  8672                           
  8673                           	psect	text7
  8674  1E73                     __ptext7:	
  8675 ;; *************** function _OSCILLATOR_Initialize *****************
  8676 ;; Defined at:
  8677 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;		None
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;		None
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  1    wreg      void 
  8684 ;; Registers used:
  8685 ;;		wreg, status,2
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8695 ;;Total ram usage:        0 bytes
  8696 ;; Hardware stack levels used:    1
  8697 ;; Hardware stack levels required when called:    4
  8698 ;; This function calls:
  8699 ;;		Nothing
  8700 ;; This function is called by:
  8701 ;;		_SYSTEM_Initialize
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           
  8706                           ;psect for function _OSCILLATOR_Initialize
  8707  1E73                     _OSCILLATOR_Initialize:	
  8708                           
  8709                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8710                           
  8711                           ;incstack = 0
  8712                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8713  1E73  3060               	movlw	96
  8714  1E74  0151               	movlb	17	; select bank17
  8715  1E75  008D               	movwf	13	;volatile
  8716                           
  8717                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8718  1E76  018F               	clrf	15	;volatile
  8719                           
  8720                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8721  1E77  0191               	clrf	17	;volatile
  8722                           
  8723                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8724  1E78  3006               	movlw	6
  8725  1E79  0093               	movwf	19	;volatile
  8726                           
  8727                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  8728  1E7A  0192               	clrf	18	;volatile
  8729  1E7B  0008               	return
  8730  1E7C                     __end_of_OSCILLATOR_Initialize:	
  8731                           
  8732                           	psect	text8
  8733  1FC7                     __ptext8:	
  8734 ;; *************** function _I2C1_Initialize *****************
  8735 ;; Defined at:
  8736 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;		None
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      void 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8752 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8753 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8754 ;;Total ram usage:        1 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:    4
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_SYSTEM_Initialize
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           
  8765                           ;psect for function _I2C1_Initialize
  8766  1FC7                     _I2C1_Initialize:	
  8767                           
  8768                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8769                           
  8770                           ;incstack = 0
  8771                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8772  1FC7  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8773  1FC8  0140               	movlb	0	; select bank0
  8774  1FC9  00A0               	movwf	??_I2C1_Initialize
  8775  1FCA  0820               	movf	??_I2C1_Initialize,w
  8776  1FCB  0142               	movlb	2	; select bank2
  8777  1FCC  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
  8778                           
  8779                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8780  1FCD  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  8781  1FCE  0140               	movlb	0	; select bank0
  8782  1FCF  00A0               	movwf	??_I2C1_Initialize
  8783  1FD0  0820               	movf	??_I2C1_Initialize,w
  8784  1FD1  0142               	movlb	2	; select bank2
  8785  1FD2  00A0               	movwf	_i2c1_object^(0+256)
  8786                           
  8787                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8788  1FD3  14A2               	bsf	(_i2c1_object^(0+256)+2),1
  8789                           
  8790                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8791  1FD4  1022               	bcf	(_i2c1_object^(0+256)+2),0
  8792                           
  8793                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8794  1FD5  01A4               	clrf	(_i2c1_object^(0+256)+4)
  8795                           
  8796                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8797  1FD6  0143               	movlb	3	; select bank3
  8798  1FD7  018F               	clrf	15	;volatile
  8799                           
  8800                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8801  1FD8  3028               	movlw	40
  8802  1FD9  0090               	movwf	16	;volatile
  8803                           
  8804                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8805  1FDA  0192               	clrf	18	;volatile
  8806                           
  8807                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  8808  1FDB  3050               	movlw	80
  8809  1FDC  008D               	movwf	13	;volatile
  8810                           
  8811                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8812  1FDD  014E               	movlb	14	; select bank14
  8813  1FDE  100F               	bcf	15,0	;volatile
  8814                           
  8815                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8816  1FDF  108F               	bcf	15,1	;volatile
  8817                           
  8818                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8819  1FE0  1419               	bsf	25,0	;volatile
  8820                           
  8821                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8822  1FE1  1499               	bsf	25,1	;volatile
  8823  1FE2  0008               	return
  8824  1FE3                     __end_of_I2C1_Initialize:	
  8825                           
  8826                           	psect	text9
  8827  1362                     __ptext9:	
  8828 ;; *************** function _EUSART1_Initialize *****************
  8829 ;; Defined at:
  8830 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;		None
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;		None
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  1    wreg      void 
  8837 ;; Registers used:
  8838 ;;		wreg, status,2, status,0, pclath, cstack
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8847 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8848 ;;Total ram usage:        1 bytes
  8849 ;; Hardware stack levels used:    1
  8850 ;; Hardware stack levels required when called:    5
  8851 ;; This function calls:
  8852 ;;		_EUSART1_SetErrorHandler
  8853 ;;		_EUSART1_SetFramingErrorHandler
  8854 ;;		_EUSART1_SetOverrunErrorHandler
  8855 ;;		_EUSART1_SetRxInterruptHandler
  8856 ;;		_EUSART1_SetTxInterruptHandler
  8857 ;; This function is called by:
  8858 ;;		_SYSTEM_Initialize
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           
  8863                           ;psect for function _EUSART1_Initialize
  8864  1362                     _EUSART1_Initialize:	
  8865                           
  8866                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8867                           
  8868                           ;incstack = 0
  8869                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8870  1362  014E               	movlb	14	; select bank14
  8871  1363  1299               	bcf	25,5	;volatile
  8872                           
  8873                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8874  1364  3080               	movlw	low _EUSART1_Receive_ISR
  8875  1365  0140               	movlb	0	; select bank0
  8876  1366  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8877  1367  3012               	movlw	high _EUSART1_Receive_ISR
  8878  1368  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8879  1369  319E  2661  3193   	fcall	_EUSART1_SetRxInterruptHandler
  8880                           
  8881                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8882  136C  014E               	movlb	14	; select bank14
  8883  136D  1219               	bcf	25,4	;volatile
  8884                           
  8885                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8886  136E  3029               	movlw	low _EUSART1_Transmit_ISR
  8887  136F  0140               	movlb	0	; select bank0
  8888  1370  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8889  1371  3010               	movlw	high _EUSART1_Transmit_ISR
  8890  1372  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8891  1373  319E  266A  3193   	fcall	_EUSART1_SetTxInterruptHandler
  8892                           
  8893                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8894  1376  3008               	movlw	8
  8895  1377  0142               	movlb	2	; select bank2
  8896  1378  009F               	movwf	31	;volatile
  8897                           
  8898                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8899  1379  3090               	movlw	144
  8900  137A  009D               	movwf	29	;volatile
  8901                           
  8902                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8903  137B  3004               	movlw	4
  8904  137C  009E               	movwf	30	;volatile
  8905                           
  8906                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8907  137D  301F               	movlw	31
  8908  137E  009B               	movwf	27	;volatile
  8909                           
  8910                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8911  137F  019C               	clrf	28	;volatile
  8912                           
  8913                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8914  1380  3002               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8915  1381  0140               	movlb	0	; select bank0
  8916  1382  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8917  1383  3000               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8918  1384  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8919  1385  319E  264F  3193   	fcall	_EUSART1_SetFramingErrorHandler
  8920                           
  8921                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8922  1388  30FD               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8923  1389  0140               	movlb	0	; select bank0
  8924  138A  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8925  138B  301D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8926  138C  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8927  138D  319E  2658  3193   	fcall	_EUSART1_SetOverrunErrorHandler
  8928                           
  8929                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8930  1390  30ED               	movlw	low _EUSART1_DefaultErrorHandler
  8931  1391  0140               	movlb	0	; select bank0
  8932  1392  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8933  1393  301D               	movlw	high _EUSART1_DefaultErrorHandler
  8934  1394  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8935  1395  319E  2646         	fcall	_EUSART1_SetErrorHandler
  8936                           
  8937                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8938  1397  0142               	movlb	2	; select bank2
  8939  1398  01DB               	clrf	_eusart1RxLastError^(0+256)	;volatile
  8940                           
  8941                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8942  1399  0141               	movlb	1	; select bank1
  8943  139A  01EF               	clrf	_eusart1TxHead^(0+128)	;volatile
  8944                           
  8945                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8946  139B  01EE               	clrf	_eusart1TxTail^(0+128)	;volatile
  8947                           
  8948                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8949  139C  3008               	movlw	8
  8950  139D  0140               	movlb	0	; select bank0
  8951  139E  00A2               	movwf	??_EUSART1_Initialize
  8952  139F  0822               	movf	??_EUSART1_Initialize,w
  8953  13A0  0142               	movlb	2	; select bank2
  8954  13A1  00EE               	movwf	_eusart1TxBufferRemaining^(0+256)	;volatile
  8955                           
  8956                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8957  13A2  01F7               	clrf	_eusart1RxHead	;volatile
  8958                           
  8959                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8960  13A3  01F6               	clrf	_eusart1RxTail	;volatile
  8961                           
  8962                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8963  13A4  01DC               	clrf	_eusart1RxCount^(0+256)	;volatile
  8964                           
  8965                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8966  13A5  014E               	movlb	14	; select bank14
  8967  13A6  1699               	bsf	25,5	;volatile
  8968  13A7  0008               	return
  8969  13A8                     __end_of_EUSART1_Initialize:	
  8970                           
  8971                           	psect	text10
  8972  1E6A                     __ptext10:	
  8973 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8974 ;; Defined at:
  8975 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8978 ;;		 -> EUSART1_Transmit_ISR(1), 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8990 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8993 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8994 ;;Total ram usage:        2 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:    4
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_EUSART1_Initialize
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           
  9005                           ;psect for function _EUSART1_SetTxInterruptHandler
  9006  1E6A                     _EUSART1_SetTxInterruptHandler:	
  9007                           
  9008                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9009                           
  9010                           ;incstack = 0
  9011                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  9012  1E6A  0140               	movlb	0	; select bank0
  9013  1E6B  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  9014  1E6C  0143               	movlb	3	; select bank3
  9015  1E6D  00E7               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384)
  9016  1E6E  0140               	movlb	0	; select bank0
  9017  1E6F  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  9018  1E70  0143               	movlb	3	; select bank3
  9019  1E71  00E6               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+384)
  9020  1E72  0008               	return
  9021  1E73                     __end_of_EUSART1_SetTxInterruptHandler:	
  9022                           
  9023                           	psect	text11
  9024  1E61                     __ptext11:	
  9025 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9026 ;; Defined at:
  9027 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9030 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;		None
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      void 
  9035 ;; Registers used:
  9036 ;;		wreg
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9046 ;;Total ram usage:        2 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; Hardware stack levels required when called:    4
  9049 ;; This function calls:
  9050 ;;		Nothing
  9051 ;; This function is called by:
  9052 ;;		_EUSART1_Initialize
  9053 ;;		_main
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           
  9058                           ;psect for function _EUSART1_SetRxInterruptHandler
  9059  1E61                     _EUSART1_SetRxInterruptHandler:	
  9060                           
  9061                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9062                           
  9063                           ;incstack = 0
  9064                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  9065  1E61  0140               	movlb	0	; select bank0
  9066  1E62  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  9067  1E63  0143               	movlb	3	; select bank3
  9068  1E64  00E5               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384)
  9069  1E65  0140               	movlb	0	; select bank0
  9070  1E66  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  9071  1E67  0143               	movlb	3	; select bank3
  9072  1E68  00E4               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+384)
  9073  1E69  0008               	return
  9074  1E6A                     __end_of_EUSART1_SetRxInterruptHandler:	
  9075                           
  9076                           	psect	text12
  9077  1E58                     __ptext12:	
  9078 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9079 ;; Defined at:
  9080 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9083 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9099 ;;Total ram usage:        2 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:    4
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_EUSART1_Initialize
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           
  9110                           ;psect for function _EUSART1_SetOverrunErrorHandler
  9111  1E58                     _EUSART1_SetOverrunErrorHandler:	
  9112                           
  9113                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  9114                           
  9115                           ;incstack = 0
  9116                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  9117  1E58  0140               	movlb	0	; select bank0
  9118  1E59  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  9119  1E5A  0143               	movlb	3	; select bank3
  9120  1E5B  00E1               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
  9121  1E5C  0140               	movlb	0	; select bank0
  9122  1E5D  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  9123  1E5E  0143               	movlb	3	; select bank3
  9124  1E5F  00E0               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
  9125  1E60  0008               	return
  9126  1E61                     __end_of_EUSART1_SetOverrunErrorHandler:	
  9127                           
  9128                           	psect	text13
  9129  1E4F                     __ptext13:	
  9130 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9131 ;; Defined at:
  9132 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9135 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  1    wreg      void 
  9140 ;; Registers used:
  9141 ;;		wreg
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9150 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9151 ;;Total ram usage:        2 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; Hardware stack levels required when called:    4
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		_EUSART1_Initialize
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           
  9162                           ;psect for function _EUSART1_SetFramingErrorHandler
  9163  1E4F                     _EUSART1_SetFramingErrorHandler:	
  9164                           
  9165                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  9166                           
  9167                           ;incstack = 0
  9168                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9169  1E4F  0140               	movlb	0	; select bank0
  9170  1E50  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9171  1E51  0143               	movlb	3	; select bank3
  9172  1E52  00E3               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
  9173  1E53  0140               	movlb	0	; select bank0
  9174  1E54  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9175  1E55  0143               	movlb	3	; select bank3
  9176  1E56  00E2               	movwf	_EUSART1_FramingErrorHandler^(0+384)
  9177  1E57  0008               	return
  9178  1E58                     __end_of_EUSART1_SetFramingErrorHandler:	
  9179                           
  9180                           	psect	text14
  9181  1E46                     __ptext14:	
  9182 ;; *************** function _EUSART1_SetErrorHandler *****************
  9183 ;; Defined at:
  9184 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9187 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		wreg
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9202 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9203 ;;Total ram usage:        2 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; Hardware stack levels required when called:    4
  9206 ;; This function calls:
  9207 ;;		Nothing
  9208 ;; This function is called by:
  9209 ;;		_EUSART1_Initialize
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           
  9214                           ;psect for function _EUSART1_SetErrorHandler
  9215  1E46                     _EUSART1_SetErrorHandler:	
  9216                           
  9217                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  9218                           
  9219                           ;incstack = 0
  9220                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9221  1E46  0140               	movlb	0	; select bank0
  9222  1E47  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9223  1E48  0143               	movlb	3	; select bank3
  9224  1E49  00DF               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
  9225  1E4A  0140               	movlb	0	; select bank0
  9226  1E4B  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9227  1E4C  0143               	movlb	3	; select bank3
  9228  1E4D  00DE               	movwf	_EUSART1_ErrorHandler^(0+384)
  9229  1E4E  0008               	return
  9230  1E4F                     __end_of_EUSART1_SetErrorHandler:	
  9231                           
  9232                           	psect	text15
  9233  10F1                     __ptext15:	
  9234 ;; *************** function _ADCC_Initialize *****************
  9235 ;; Defined at:
  9236 ;;		line 64 in file "mcc_generated_files/adcc.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;		None
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		wreg, status,2, status,0, pclath, cstack
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9254 ;;Total ram usage:        0 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    5
  9257 ;; This function calls:
  9258 ;;		_ADCC_SetADTIInterruptHandler
  9259 ;; This function is called by:
  9260 ;;		_SYSTEM_Initialize
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           
  9265                           ;psect for function _ADCC_Initialize
  9266  10F1                     _ADCC_Initialize:	
  9267                           
  9268                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  9269                           
  9270                           ;incstack = 0
  9271                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9272  10F1  0141               	movlb	1	; select bank1
  9273  10F2  018C               	clrf	12	;volatile
  9274                           
  9275                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  9276  10F3  018D               	clrf	13	;volatile
  9277                           
  9278                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  9279  10F4  018E               	clrf	14	;volatile
  9280                           
  9281                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  9282  10F5  018F               	clrf	15	;volatile
  9283                           
  9284                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  9285  10F6  0192               	clrf	18	;volatile
  9286                           
  9287                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  9288  10F7  0193               	clrf	19	;volatile
  9289                           
  9290                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  9291  10F8  0198               	clrf	24	;volatile
  9292                           
  9293                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  9294  10F9  019A               	clrf	26	;volatile
  9295                           
  9296                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  9297  10FA  019F               	clrf	31	;volatile
  9298                           
  9299                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  9300  10FB  0142               	movlb	2	; select bank2
  9301  10FC  018C               	clrf	12	;volatile
  9302                           
  9303                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  9304  10FD  018D               	clrf	13	;volatile
  9305                           
  9306                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  9307  10FE  018E               	clrf	14	;volatile
  9308                           
  9309                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  9310  10FF  018F               	clrf	15	;volatile
  9311                           
  9312                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  9313  1100  0190               	clrf	16	;volatile
  9314                           
  9315                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  9316  1101  0192               	clrf	18	;volatile
  9317                           
  9318                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  9319  1102  3054               	movlw	84
  9320  1103  0093               	movwf	19	;volatile
  9321                           
  9322                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  9323  1104  3056               	movlw	86
  9324  1105  0094               	movwf	20	;volatile
  9325                           
  9326                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  9327  1106  0195               	clrf	21	;volatile
  9328                           
  9329                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  9330  1107  0196               	clrf	22	;volatile
  9331                           
  9332                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  9333  1108  0197               	clrf	23	;volatile
  9334                           
  9335                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  9336  1109  0198               	clrf	24	;volatile
  9337                           
  9338                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  9339  110A  30D4               	movlw	212
  9340  110B  0091               	movwf	17	;volatile
  9341                           
  9342                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  9343  110C  014E               	movlb	14	; select bank14
  9344  110D  108D               	bcf	13,1	;volatile
  9345                           
  9346                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  9347  110E  1497               	bsf	23,1	;volatile
  9348                           
  9349                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  9350  110F  30EC               	movlw	low _ADCC_DefaultInterruptHandler
  9351  1110  0140               	movlb	0	; select bank0
  9352  1111  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  9353  1112  301D               	movlw	high _ADCC_DefaultInterruptHandler
  9354  1113  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  9355  1114  319E  2610         	fcall	_ADCC_SetADTIInterruptHandler
  9356  1116  0008               	return
  9357  1117                     __end_of_ADCC_Initialize:	
  9358                           
  9359                           	psect	text16
  9360  148E                     __ptext16:	
  9361 ;; *************** function _MENU_task *****************
  9362 ;; Defined at:
  9363 ;;		line 74 in file "menu.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;		None
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  1    wreg      void 
  9370 ;; Registers used:
  9371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9379 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9380 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9381 ;;Total ram usage:        1 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:   13
  9384 ;; This function calls:
  9385 ;;		_BEAT_task
  9386 ;;		_LED_Beat
  9387 ;;		_LED_DMX
  9388 ;;		_TM1650_enable
  9389 ;;		_TM1650_setDigit
  9390 ;;		_adrControl_DMX
  9391 ;;		_cycleColors
  9392 ;;		_isDMXOn
  9393 ;;		_menuButtons
  9394 ;;		_pulseColors
  9395 ;; This function is called by:
  9396 ;;		_main
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           
  9401                           ;psect for function _MENU_task
  9402  148E                     _MENU_task:	
  9403                           
  9404                           ;menu.c: 75:     if(isDMXOn()) {
  9405                           
  9406                           ;incstack = 0
  9407                           ; Regs used in _MENU_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9408  148E  319D  25F6  3194   	fcall	_isDMXOn
  9409  1491  3A00               	xorlw	0
  9410  1492  1903               	skipnz
  9411  1493  2C9A               	goto	l6241
  9412                           
  9413                           ;menu.c: 76:         LED_DMX();
  9414  1494  3192  22ED  3194   	fcall	_LED_DMX
  9415                           
  9416                           ;menu.c: 77:         adrControl_DMX();
  9417  1497  3194  24F3         	fcall	_adrControl_DMX
  9418                           
  9419                           ;menu.c: 78:     } else {
  9420  1499  0008               	return
  9421  149A                     l6241:	
  9422                           
  9423                           ;menu.c: 79:         menuButtons();
  9424  149A  319F  2778  3194   	fcall	_menuButtons
  9425                           
  9426                           ;menu.c: 80:         if(currentState == 0) {
  9427  149D  0142               	movlb	2	; select bank2
  9428  149E  0860               	movf	_currentState^(0+256),w
  9429  149F  0461               	iorwf	(_currentState+1)^(0+256),w
  9430  14A0  1D03               	btfss	3,2
  9431  14A1  2CAC               	goto	l6251
  9432                           
  9433                           ;menu.c: 81:             TM1650_enable(0);
  9434  14A2  3000               	movlw	0
  9435  14A3  319E  26F5  3194   	fcall	_TM1650_enable
  9436                           
  9437                           ;menu.c: 82:             LED_Beat();
  9438  14A6  319E  26AB  3194   	fcall	_LED_Beat
  9439                           
  9440                           ;menu.c: 83:             BEAT_task();
  9441  14A9  3189  213A         	fcall	_BEAT_task
  9442                           
  9443                           ;menu.c: 84:         } else if(currentState == 1) {
  9444  14AB  0008               	return
  9445  14AC                     l6251:	
  9446  14AC  0360               	decf	_currentState^(0+256),w
  9447  14AD  0461               	iorwf	(_currentState+1)^(0+256),w
  9448  14AE  1D03               	btfss	3,2
  9449  14AF  2CEB               	goto	l6265
  9450                           
  9451                           ;menu.c: 85:             TM1650_enable(1);
  9452  14B0  3001               	movlw	1
  9453  14B1  319E  26F5  3194   	fcall	_TM1650_enable
  9454                           
  9455                           ;menu.c: 86:             TM1650_setDigit(0, 'P', 0);
  9456  14B4  3050               	movlw	80
  9457  14B5  0141               	movlb	1	; select bank1
  9458  14B6  00EA               	movwf	??_MENU_task^(0+128)
  9459  14B7  086A               	movf	??_MENU_task^(0+128),w
  9460  14B8  0140               	movlb	0	; select bank0
  9461  14B9  00B4               	movwf	TM1650_setDigit@data
  9462  14BA  3000               	movlw	0
  9463  14BB  00B5               	movwf	TM1650_setDigit@dp
  9464  14BC  00B6               	movwf	TM1650_setDigit@dp+1
  9465  14BD  3000               	movlw	0
  9466  14BE  319F  27AB  3194   	fcall	_TM1650_setDigit
  9467                           
  9468                           ;menu.c: 87:             TM1650_setDigit(1, 'L', 0);
  9469  14C1  304C               	movlw	76
  9470  14C2  0141               	movlb	1	; select bank1
  9471  14C3  00EA               	movwf	??_MENU_task^(0+128)
  9472  14C4  086A               	movf	??_MENU_task^(0+128),w
  9473  14C5  0140               	movlb	0	; select bank0
  9474  14C6  00B4               	movwf	TM1650_setDigit@data
  9475  14C7  3000               	movlw	0
  9476  14C8  00B5               	movwf	TM1650_setDigit@dp
  9477  14C9  00B6               	movwf	TM1650_setDigit@dp+1
  9478  14CA  3001               	movlw	1
  9479  14CB  319F  27AB  3194   	fcall	_TM1650_setDigit
  9480                           
  9481                           ;menu.c: 88:             TM1650_setDigit(2, 'S', 0);
  9482  14CE  3053               	movlw	83
  9483  14CF  0141               	movlb	1	; select bank1
  9484  14D0  00EA               	movwf	??_MENU_task^(0+128)
  9485  14D1  086A               	movf	??_MENU_task^(0+128),w
  9486  14D2  0140               	movlb	0	; select bank0
  9487  14D3  00B4               	movwf	TM1650_setDigit@data
  9488  14D4  3000               	movlw	0
  9489  14D5  00B5               	movwf	TM1650_setDigit@dp
  9490  14D6  00B6               	movwf	TM1650_setDigit@dp+1
  9491  14D7  3002               	movlw	2
  9492  14D8  319F  27AB  3194   	fcall	_TM1650_setDigit
  9493                           
  9494                           ;menu.c: 89:             TM1650_setDigit(3, 'E', 0);
  9495  14DB  3045               	movlw	69
  9496  14DC  0141               	movlb	1	; select bank1
  9497  14DD  00EA               	movwf	??_MENU_task^(0+128)
  9498  14DE  086A               	movf	??_MENU_task^(0+128),w
  9499  14DF  0140               	movlb	0	; select bank0
  9500  14E0  00B4               	movwf	TM1650_setDigit@data
  9501  14E1  3000               	movlw	0
  9502  14E2  00B5               	movwf	TM1650_setDigit@dp
  9503  14E3  00B6               	movwf	TM1650_setDigit@dp+1
  9504  14E4  3003               	movlw	3
  9505  14E5  319F  27AB  3194   	fcall	_TM1650_setDigit
  9506                           
  9507                           ;menu.c: 90:             pulseColors();
  9508  14E8  3188  206E         	fcall	_pulseColors
  9509                           
  9510                           ;menu.c: 91:         } else if (currentState == 2) {
  9511  14EA  0008               	return
  9512  14EB                     l6265:	
  9513  14EB  3002               	movlw	2
  9514  14EC  0660               	xorwf	_currentState^(0+256),w
  9515  14ED  0461               	iorwf	(_currentState+1)^(0+256),w
  9516  14EE  1D03               	btfss	3,2
  9517  14EF  0008               	return
  9518                           
  9519                           ;menu.c: 97:             cycleColors();
  9520  14F0  3196  2660         	fcall	_cycleColors
  9521  14F2  0008               	return
  9522  14F3                     __end_of_MENU_task:	
  9523                           
  9524                           	psect	text17
  9525  086E                     __ptext17:	
  9526 ;; *************** function _pulseColors *****************
  9527 ;; Defined at:
  9528 ;;		line 53 in file "menu.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;		None
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      void 
  9535 ;; Registers used:
  9536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9545 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9546 ;;Total ram usage:        1 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; Hardware stack levels required when called:    8
  9549 ;; This function calls:
  9550 ;;		_LED_setHSL
  9551 ;;		___fldiv
  9552 ;;		___fleq
  9553 ;;		___flge
  9554 ;;		___flsub
  9555 ;; This function is called by:
  9556 ;;		_MENU_task
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           
  9561                           ;psect for function _pulseColors
  9562  086E                     _pulseColors:	
  9563                           
  9564                           ;menu.c: 54:     if(fadeTime == -400/10) {
  9565                           
  9566                           ;incstack = 0
  9567                           ; Regs used in _pulseColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9568  086E  0142               	movlb	2	; select bank2
  9569  086F  0828               	movf	(_fadeTime+3)^(0+256),w
  9570  0870  0140               	movlb	0	; select bank0
  9571  0871  00A3               	movwf	___fleq@ff1+3
  9572  0872  0142               	movlb	2	; select bank2
  9573  0873  0827               	movf	(_fadeTime+2)^(0+256),w
  9574  0874  0140               	movlb	0	; select bank0
  9575  0875  00A2               	movwf	___fleq@ff1+2
  9576  0876  0142               	movlb	2	; select bank2
  9577  0877  0826               	movf	(_fadeTime+1)^(0+256),w
  9578  0878  0140               	movlb	0	; select bank0
  9579  0879  00A1               	movwf	___fleq@ff1+1
  9580  087A  0142               	movlb	2	; select bank2
  9581  087B  0825               	movf	_fadeTime^(0+256),w
  9582  087C  0140               	movlb	0	; select bank0
  9583  087D  00A0               	movwf	___fleq@ff1
  9584  087E  30C2               	movlw	194
  9585  087F  00A7               	movwf	___fleq@ff2+3
  9586  0880  3020               	movlw	32
  9587  0881  00A6               	movwf	___fleq@ff2+2
  9588  0882  3000               	movlw	0
  9589  0883  00A5               	movwf	___fleq@ff2+1
  9590  0884  3000               	movlw	0
  9591  0885  00A4               	movwf	___fleq@ff2
  9592  0886  3193  23A8  3188   	fcall	___fleq
  9593  0889  1C03               	btfss	3,0
  9594  088A  28B2               	goto	l6145
  9595                           
  9596                           ;menu.c: 56:         if(hueValPulse == 360) {
  9597  088B  3068               	movlw	104
  9598  088C  0142               	movlb	2	; select bank2
  9599  088D  062F               	xorwf	_hueValPulse^(0+256),w
  9600  088E  1D03               	skipz
  9601  088F  2896               	goto	l6143
  9602  0890  0330               	decf	(_hueValPulse+1)^(0+256),w
  9603  0891  1D03               	btfss	3,2
  9604  0892  2896               	goto	l6143
  9605                           
  9606                           ;menu.c: 57:             hueValPulse = 0;
  9607  0893  01AF               	clrf	_hueValPulse^(0+256)
  9608  0894  01B0               	clrf	(_hueValPulse+1)^(0+256)
  9609                           
  9610                           ;menu.c: 58:         } else {
  9611  0895  289A               	goto	l1068
  9612  0896                     l6143:	
  9613                           
  9614                           ;menu.c: 59:             hueValPulse += 36;
  9615  0896  3024               	movlw	36
  9616  0897  07AF               	addwf	_hueValPulse^(0+256),f
  9617  0898  3000               	movlw	0
  9618  0899  3DB0               	addwfc	(_hueValPulse+1)^(0+256),f
  9619  089A                     l1068:	
  9620                           ;menu.c: 60:         }
  9621                           
  9622                           
  9623                           ;menu.c: 61:         pulseColor.H = hueValPulse;
  9624  089A  0830               	movf	(_hueValPulse+1)^(0+256),w
  9625  089B  0143               	movlb	3	; select bank3
  9626  089C  00CB               	movwf	(_pulseColor+1)^(0+384)
  9627  089D  0142               	movlb	2	; select bank2
  9628  089E  082F               	movf	_hueValPulse^(0+256),w
  9629  089F  0143               	movlb	3	; select bank3
  9630  08A0  00CA               	movwf	_pulseColor^(0+384)
  9631                           
  9632                           ;menu.c: 62:         pulseColor.L = 1;
  9633  08A1  303F               	movlw	63
  9634  08A2  00D3               	movwf	((_pulseColor+3)^(0+384)+6)
  9635  08A3  3080               	movlw	128
  9636  08A4  00D2               	movwf	((_pulseColor+2)^(0+384)+6)
  9637  08A5  3000               	movlw	0
  9638  08A6  00D1               	movwf	((_pulseColor+1)^(0+384)+6)
  9639  08A7  3000               	movlw	0
  9640  08A8  00D0               	movwf	(_pulseColor^(0+384)+6)
  9641                           
  9642                           ;menu.c: 63:         fadeTime = 400/2;
  9643  08A9  3043               	movlw	67
  9644  08AA  0142               	movlb	2	; select bank2
  9645  08AB  00A8               	movwf	(_fadeTime+3)^(0+256)
  9646  08AC  3048               	movlw	72
  9647  08AD  00A7               	movwf	(_fadeTime+2)^(0+256)
  9648  08AE  3000               	movlw	0
  9649  08AF  00A6               	movwf	(_fadeTime+1)^(0+256)
  9650  08B0  3000               	movlw	0
  9651  08B1  2927               	goto	L1
  9652  08B2                     l6145:	
  9653                           ;menu.c: 64:     } else if(fadeTime > 0) {
  9654                           
  9655  08B2  3000               	movlw	0
  9656  08B3  0140               	movlb	0	; select bank0
  9657  08B4  00DA               	movwf	___flge@ff1+3
  9658  08B5  3000               	movlw	0
  9659  08B6  00D9               	movwf	___flge@ff1+2
  9660  08B7  3000               	movlw	0
  9661  08B8  00D8               	movwf	___flge@ff1+1
  9662  08B9  3000               	movlw	0
  9663  08BA  00D7               	movwf	___flge@ff1
  9664  08BB  0142               	movlb	2	; select bank2
  9665  08BC  0828               	movf	(_fadeTime+3)^(0+256),w
  9666  08BD  0140               	movlb	0	; select bank0
  9667  08BE  00DE               	movwf	___flge@ff2+3
  9668  08BF  0142               	movlb	2	; select bank2
  9669  08C0  0827               	movf	(_fadeTime+2)^(0+256),w
  9670  08C1  0140               	movlb	0	; select bank0
  9671  08C2  00DD               	movwf	___flge@ff2+2
  9672  08C3  0142               	movlb	2	; select bank2
  9673  08C4  0826               	movf	(_fadeTime+1)^(0+256),w
  9674  08C5  0140               	movlb	0	; select bank0
  9675  08C6  00DC               	movwf	___flge@ff2+1
  9676  08C7  0142               	movlb	2	; select bank2
  9677  08C8  0825               	movf	_fadeTime^(0+256),w
  9678  08C9  0140               	movlb	0	; select bank0
  9679  08CA  00DB               	movwf	___flge@ff2
  9680  08CB  3195  25E4  3188   	fcall	___flge
  9681  08CE  1803               	btfsc	3,0
  9682  08CF  28FC               	goto	l6149
  9683                           
  9684                           ;menu.c: 65:         pulseColor.L = fadeTime/(400);
  9685  08D0  3043               	movlw	67
  9686  08D1  0140               	movlb	0	; select bank0
  9687  08D2  00B1               	movwf	___fldiv@a+3
  9688  08D3  30C8               	movlw	200
  9689  08D4  00B0               	movwf	___fldiv@a+2
  9690  08D5  3000               	movlw	0
  9691  08D6  00AF               	movwf	___fldiv@a+1
  9692  08D7  3000               	movlw	0
  9693  08D8  00AE               	movwf	___fldiv@a
  9694  08D9  0142               	movlb	2	; select bank2
  9695  08DA  0828               	movf	(_fadeTime+3)^(0+256),w
  9696  08DB  0140               	movlb	0	; select bank0
  9697  08DC  00B5               	movwf	___fldiv@b+3
  9698  08DD  0142               	movlb	2	; select bank2
  9699  08DE  0827               	movf	(_fadeTime+2)^(0+256),w
  9700  08DF  0140               	movlb	0	; select bank0
  9701  08E0  00B4               	movwf	___fldiv@b+2
  9702  08E1  0142               	movlb	2	; select bank2
  9703  08E2  0826               	movf	(_fadeTime+1)^(0+256),w
  9704  08E3  0140               	movlb	0	; select bank0
  9705  08E4  00B3               	movwf	___fldiv@b+1
  9706  08E5  0142               	movlb	2	; select bank2
  9707  08E6  0825               	movf	_fadeTime^(0+256),w
  9708  08E7  0140               	movlb	0	; select bank0
  9709  08E8  00B2               	movwf	___fldiv@b
  9710  08E9  3186  2622  3188   	fcall	___fldiv
  9711  08EC  0140               	movlb	0	; select bank0
  9712  08ED  0831               	movf	?___fldiv+3,w
  9713  08EE  0143               	movlb	3	; select bank3
  9714  08EF  00D3               	movwf	((_pulseColor+3)^(0+384)+6)
  9715  08F0  0140               	movlb	0	; select bank0
  9716  08F1  0830               	movf	?___fldiv+2,w
  9717  08F2  0143               	movlb	3	; select bank3
  9718  08F3  00D2               	movwf	((_pulseColor+2)^(0+384)+6)
  9719  08F4  0140               	movlb	0	; select bank0
  9720  08F5  082F               	movf	?___fldiv+1,w
  9721  08F6  0143               	movlb	3	; select bank3
  9722  08F7  00D1               	movwf	((_pulseColor+1)^(0+384)+6)
  9723  08F8  0140               	movlb	0	; select bank0
  9724  08F9  082E               	movf	?___fldiv,w
  9725  08FA  0143               	movlb	3	; select bank3
  9726  08FB  00D0               	movwf	(_pulseColor^(0+384)+6)
  9727  08FC                     l6149:	
  9728                           ;menu.c: 67:     } else {
  9729                           
  9730                           ;menu.c: 66:         fadeTime -= 1;
  9731                           
  9732                           
  9733                           ;menu.c: 68:         fadeTime -= 1;
  9734  08FC  303F               	movlw	63
  9735  08FD  0140               	movlb	0	; select bank0
  9736  08FE  00DA               	movwf	___flsub@a+3
  9737  08FF  3080               	movlw	128
  9738  0900  00D9               	movwf	___flsub@a+2
  9739  0901  3000               	movlw	0
  9740  0902  00D8               	movwf	___flsub@a+1
  9741  0903  3000               	movlw	0
  9742  0904  00D7               	movwf	___flsub@a
  9743  0905  0142               	movlb	2	; select bank2
  9744  0906  0828               	movf	(_fadeTime+3)^(0+256),w
  9745  0907  0140               	movlb	0	; select bank0
  9746  0908  00DE               	movwf	___flsub@b+3
  9747  0909  0142               	movlb	2	; select bank2
  9748  090A  0827               	movf	(_fadeTime+2)^(0+256),w
  9749  090B  0140               	movlb	0	; select bank0
  9750  090C  00DD               	movwf	___flsub@b+2
  9751  090D  0142               	movlb	2	; select bank2
  9752  090E  0826               	movf	(_fadeTime+1)^(0+256),w
  9753  090F  0140               	movlb	0	; select bank0
  9754  0910  00DC               	movwf	___flsub@b+1
  9755  0911  0142               	movlb	2	; select bank2
  9756  0912  0825               	movf	_fadeTime^(0+256),w
  9757  0913  0140               	movlb	0	; select bank0
  9758  0914  00DB               	movwf	___flsub@b
  9759  0915  3190  200A  3188   	fcall	___flsub
  9760  0918  0140               	movlb	0	; select bank0
  9761  0919  085A               	movf	?___flsub+3,w
  9762  091A  0142               	movlb	2	; select bank2
  9763  091B  00A8               	movwf	(_fadeTime+3)^(0+256)
  9764  091C  0140               	movlb	0	; select bank0
  9765  091D  0859               	movf	?___flsub+2,w
  9766  091E  0142               	movlb	2	; select bank2
  9767  091F  00A7               	movwf	(_fadeTime+2)^(0+256)
  9768  0920  0140               	movlb	0	; select bank0
  9769  0921  0858               	movf	?___flsub+1,w
  9770  0922  0142               	movlb	2	; select bank2
  9771  0923  00A6               	movwf	(_fadeTime+1)^(0+256)
  9772  0924  0140               	movlb	0	; select bank0
  9773  0925  0857               	movf	?___flsub,w
  9774  0926  0142               	movlb	2	; select bank2
  9775  0927                     L1:	
  9776  0927  00A5               	movwf	_fadeTime^(0+256)
  9777                           
  9778                           ;menu.c: 71:     LED_setHSL(pulseColor);
  9779  0928  30CA               	movlw	low _pulseColor
  9780  0929  0086               	movwf	6
  9781  092A  3001               	movlw	high _pulseColor
  9782  092B  0087               	movwf	7
  9783  092C  30AF               	movlw	low LED_setHSL@hsl
  9784  092D  0084               	movwf	4
  9785  092E  3000               	movlw	high LED_setHSL@hsl
  9786  092F  0085               	movwf	5
  9787  0930  300A               	movlw	10
  9788  0931  0140               	movlb	0	; select bank0
  9789  0932  00EF               	movwf	??_pulseColors
  9790  0933                     u6430:	
  9791  0933  0016               	moviw fsr1++
  9792  0934  001A               	movwi fsr0++
  9793  0935  0BEF               	decfsz	??_pulseColors,f
  9794  0936  2933               	goto	u6430
  9795  0937  3180  2098         	fcall	_LED_setHSL
  9796  0939  0008               	return
  9797  093A                     __end_of_pulseColors:	
  9798                           
  9799                           	psect	text18
  9800  1F78                     __ptext18:	
  9801 ;; *************** function _menuButtons *****************
  9802 ;; Defined at:
  9803 ;;		line 18 in file "menu.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;		None
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;		None
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      void 
  9810 ;; Registers used:
  9811 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9812 ;; Tracked objects:
  9813 ;;		On entry : 0/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9821 ;;Total ram usage:        0 bytes
  9822 ;; Hardware stack levels used:    1
  9823 ;; Hardware stack levels required when called:    5
  9824 ;; This function calls:
  9825 ;;		_BUTTONS_isClicked
  9826 ;; This function is called by:
  9827 ;;		_MENU_task
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831                           
  9832                           ;psect for function _menuButtons
  9833  1F78                     _menuButtons:	
  9834                           
  9835                           ;menu.c: 19:     if (BUTTONS_isClicked(menu)) {
  9836                           
  9837                           ;incstack = 0
  9838                           ; Regs used in _menuButtons: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9839  1F78  0142               	movlb	2	; select bank2
  9840  1F79  0852               	movf	_menu^(0+256),w
  9841  1F7A  3190  2089  319F   	fcall	_BUTTONS_isClicked
  9842  1F7D  0140               	movlb	0	; select bank0
  9843  1F7E  0820               	movf	?_BUTTONS_isClicked,w
  9844  1F7F  0421               	iorwf	?_BUTTONS_isClicked+1,w
  9845  1F80  1903               	btfsc	3,2
  9846  1F81  0008               	return
  9847                           
  9848                           ;menu.c: 20:         if(currentState == 2) {
  9849  1F82  3002               	movlw	2
  9850  1F83  0142               	movlb	2	; select bank2
  9851  1F84  0660               	xorwf	_currentState^(0+256),w
  9852  1F85  0461               	iorwf	(_currentState+1)^(0+256),w
  9853  1F86  1D03               	btfss	3,2
  9854  1F87  2F8B               	goto	l6107
  9855                           
  9856                           ;menu.c: 21:             currentState = 0;
  9857  1F88  01E0               	clrf	_currentState^(0+256)
  9858  1F89  01E1               	clrf	(_currentState+1)^(0+256)
  9859                           
  9860                           ;menu.c: 22:         } else {
  9861  1F8A  0008               	return
  9862  1F8B                     l6107:	
  9863                           
  9864                           ;menu.c: 23:             currentState += 1;
  9865  1F8B  3001               	movlw	1
  9866  1F8C  07E0               	addwf	_currentState^(0+256),f
  9867  1F8D  3000               	movlw	0
  9868  1F8E  3DE1               	addwfc	(_currentState+1)^(0+256),f
  9869  1F8F  0008               	return
  9870  1F90                     __end_of_menuButtons:	
  9871                           
  9872                           	psect	text19
  9873  1DF6                     __ptext19:	
  9874 ;; *************** function _isDMXOn *****************
  9875 ;; Defined at:
  9876 ;;		line 60 in file "dmx.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;		None
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;		None
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      _Bool 
  9883 ;; Registers used:
  9884 ;;		wreg
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9894 ;;Total ram usage:        0 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:    4
  9897 ;; This function calls:
  9898 ;;		Nothing
  9899 ;; This function is called by:
  9900 ;;		_MENU_task
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           
  9905                           ;psect for function _isDMXOn
  9906  1DF6                     _isDMXOn:	
  9907                           
  9908                           ;dmx.c: 61:     return dmxOn;
  9909                           
  9910                           ;incstack = 0
  9911                           ; Regs used in _isDMXOn: [wreg]
  9912  1DF6  0142               	movlb	2	; select bank2
  9913  1DF7  084D               	movf	_dmxOn^(0+256),w
  9914  1DF8  0008               	return
  9915  1DF9                     __end_of_isDMXOn:	
  9916                           
  9917                           	psect	text20
  9918  1660                     __ptext20:	
  9919 ;; *************** function _cycleColors *****************
  9920 ;; Defined at:
  9921 ;;		line 31 in file "menu.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;		None
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;  color          10   62[BANK1 ] struct HSL
  9926 ;;  time            2   60[BANK1 ] unsigned short 
  9927 ;;  adr             2   72[BANK1 ] volatile int 
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      void 
  9930 ;; Registers used:
  9931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9938 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9939 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9940 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9941 ;;Total ram usage:       16 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:   12
  9944 ;; This function calls:
  9945 ;;		_CLOCK_getTime
  9946 ;;		_LED_setHSL
  9947 ;;		_dispInc
  9948 ;; This function is called by:
  9949 ;;		_MENU_task
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           
  9954                           ;psect for function _cycleColors
  9955  1660                     _cycleColors:	
  9956                           
  9957                           ;menu.c: 33:     time_t time = CLOCK_getTime();
  9958                           
  9959                           ;incstack = 0
  9960                           ; Regs used in _cycleColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9961  1660  319E  262B  3196   	fcall	_CLOCK_getTime
  9962  1663  0140               	movlb	0	; select bank0
  9963  1664  0821               	movf	?_CLOCK_getTime+1,w
  9964  1665  0141               	movlb	1	; select bank1
  9965  1666  00DD               	movwf	(cycleColors@time+1)^(0+128)
  9966  1667  0140               	movlb	0	; select bank0
  9967  1668  0820               	movf	?_CLOCK_getTime,w
  9968  1669  0141               	movlb	1	; select bank1
  9969  166A  00DC               	movwf	cycleColors@time^(0+128)
  9970                           
  9971                           ;menu.c: 35:     if (time - lastTimeCycle < cycleSpeed)
  9972  166B  0142               	movlb	2	; select bank2
  9973  166C  0835               	movf	_lastTimeCycle^(0+256),w
  9974  166D  0141               	movlb	1	; select bank1
  9975  166E  025C               	subwf	cycleColors@time^(0+128),w
  9976  166F  00DA               	movwf	??_cycleColors^(0+128)
  9977  1670  0142               	movlb	2	; select bank2
  9978  1671  0836               	movf	(_lastTimeCycle+1)^(0+256),w
  9979  1672  0141               	movlb	1	; select bank1
  9980  1673  3B5D               	subwfb	(cycleColors@time+1)^(0+128),w
  9981  1674  00DB               	movwf	(??_cycleColors+1)^(0+128)
  9982  1675  0142               	movlb	2	; select bank2
  9983  1676  0869               	movf	(_cycleSpeed+1)^(0+256),w
  9984  1677  0141               	movlb	1	; select bank1
  9985  1678  025B               	subwf	(??_cycleColors+1)^(0+128),w
  9986  1679  1D03               	skipz
  9987  167A  2E7F               	goto	u6365
  9988  167B  0142               	movlb	2	; select bank2
  9989  167C  0868               	movf	_cycleSpeed^(0+256),w
  9990  167D  0141               	movlb	1	; select bank1
  9991  167E  025A               	subwf	??_cycleColors^(0+128),w
  9992  167F                     u6365:	
  9993  167F  1C03               	btfss	3,0
  9994  1680  0008               	return
  9995                           
  9996                           ;menu.c: 37:     lastTimeCycle = time;
  9997  1681  085D               	movf	(cycleColors@time+1)^(0+128),w
  9998  1682  0142               	movlb	2	; select bank2
  9999  1683  00B6               	movwf	(_lastTimeCycle+1)^(0+256)
 10000  1684  0141               	movlb	1	; select bank1
 10001  1685  085C               	movf	cycleColors@time^(0+128),w
 10002  1686  0142               	movlb	2	; select bank2
 10003  1687  00B5               	movwf	_lastTimeCycle^(0+256)
 10004                           
 10005                           ;menu.c: 38:     volatile int adr = &cycleSpeed;
 10006  1688  3068               	movlw	low _cycleSpeed
 10007  1689  0141               	movlb	1	; select bank1
 10008  168A  00E8               	movwf	cycleColors@adr^(0+128)	;volatile
 10009  168B  3001               	movlw	high _cycleSpeed
 10010  168C  00E9               	movwf	(cycleColors@adr+1)^(0+128)	;volatile
 10011                           
 10012                           ;menu.c: 39:     dispInc(adr);
 10013  168D  0869               	movf	(cycleColors@adr+1)^(0+128),w	;volatile
 10014  168E  0140               	movlb	0	; select bank0
 10015  168F  00C7               	movwf	dispInc@val+1
 10016  1690  0141               	movlb	1	; select bank1
 10017  1691  0868               	movf	cycleColors@adr^(0+128),w	;volatile
 10018  1692  0140               	movlb	0	; select bank0
 10019  1693  00C6               	movwf	dispInc@val
 10020  1694  3196  26DE  3196   	fcall	_dispInc
 10021                           
 10022                           ;menu.c: 40:     if(hueValCycle == 360) {
 10023  1697  3068               	movlw	104
 10024  1698  0142               	movlb	2	; select bank2
 10025  1699  0633               	xorwf	_hueValCycle^(0+256),w
 10026  169A  1D03               	skipz
 10027  169B  2EA2               	goto	l6125
 10028  169C  0334               	decf	(_hueValCycle+1)^(0+256),w
 10029  169D  1D03               	btfss	3,2
 10030  169E  2EA2               	goto	l6125
 10031                           
 10032                           ;menu.c: 41:         hueValCycle = 0;
 10033  169F  01B3               	clrf	_hueValCycle^(0+256)
 10034  16A0  01B4               	clrf	(_hueValCycle+1)^(0+256)
 10035                           
 10036                           ;menu.c: 42:     } else {
 10037  16A1  2EA6               	goto	l6127
 10038  16A2                     l6125:	
 10039                           
 10040                           ;menu.c: 43:         hueValCycle += 1;
 10041  16A2  3001               	movlw	1
 10042  16A3  07B3               	addwf	_hueValCycle^(0+256),f
 10043  16A4  3000               	movlw	0
 10044  16A5  3DB4               	addwfc	(_hueValCycle+1)^(0+256),f
 10045  16A6                     l6127:	
 10046                           
 10047                           ;menu.c: 45:     struct HSL color = {hueValCycle, 1, .5};
 10048  16A6  30A0               	movlw	low cycleColors@F108
 10049  16A7  0086               	movwf	6
 10050  16A8  3001               	movlw	high cycleColors@F108
 10051  16A9  0087               	movwf	7
 10052  16AA  30DE               	movlw	low cycleColors@color
 10053  16AB  0084               	movwf	4
 10054  16AC  3000               	movlw	high cycleColors@color
 10055  16AD  0085               	movwf	5
 10056  16AE  300A               	movlw	10
 10057  16AF  0141               	movlb	1	; select bank1
 10058  16B0  00DA               	movwf	??_cycleColors^(0+128)
 10059  16B1                     u6380:	
 10060  16B1  0016               	moviw fsr1++
 10061  16B2  001A               	movwi fsr0++
 10062  16B3  0BDA               	decfsz	??_cycleColors^(0+128),f
 10063  16B4  2EB1               	goto	u6380
 10064  16B5  0142               	movlb	2	; select bank2
 10065  16B6  0834               	movf	(_hueValCycle+1)^(0+256),w
 10066  16B7  0141               	movlb	1	; select bank1
 10067  16B8  00DF               	movwf	(cycleColors@color+1)^(0+128)
 10068  16B9  0142               	movlb	2	; select bank2
 10069  16BA  0833               	movf	_hueValCycle^(0+256),w
 10070  16BB  0141               	movlb	1	; select bank1
 10071  16BC  00DE               	movwf	cycleColors@color^(0+128)
 10072  16BD  303F               	movlw	63
 10073  16BE  00E3               	movwf	((cycleColors@color+3)^(0+128)+2)
 10074  16BF  3080               	movlw	128
 10075  16C0  00E2               	movwf	((cycleColors@color+2)^(0+128)+2)
 10076  16C1  3000               	movlw	0
 10077  16C2  00E1               	movwf	((cycleColors@color+1)^(0+128)+2)
 10078  16C3  3000               	movlw	0
 10079  16C4  00E0               	movwf	(cycleColors@color^(0+128)+2)
 10080  16C5  303F               	movlw	63
 10081  16C6  00E7               	movwf	((cycleColors@color+3)^(0+128)+6)
 10082  16C7  3000               	movlw	0
 10083  16C8  00E6               	movwf	((cycleColors@color+2)^(0+128)+6)
 10084  16C9  3000               	movlw	0
 10085  16CA  00E5               	movwf	((cycleColors@color+1)^(0+128)+6)
 10086  16CB  3000               	movlw	0
 10087  16CC  00E4               	movwf	(cycleColors@color^(0+128)+6)
 10088                           
 10089                           ;menu.c: 46:     LED_setHSL(color);
 10090  16CD  30DE               	movlw	low cycleColors@color
 10091  16CE  0086               	movwf	6
 10092  16CF  3000               	movlw	high cycleColors@color
 10093  16D0  0087               	movwf	7
 10094  16D1  30AF               	movlw	low LED_setHSL@hsl
 10095  16D2  0084               	movwf	4
 10096  16D3  3000               	movlw	high LED_setHSL@hsl
 10097  16D4  0085               	movwf	5
 10098  16D5  300A               	movlw	10
 10099  16D6  00DA               	movwf	??_cycleColors^(0+128)
 10100  16D7                     u6390:	
 10101  16D7  0016               	moviw fsr1++
 10102  16D8  001A               	movwi fsr0++
 10103  16D9  0BDA               	decfsz	??_cycleColors^(0+128),f
 10104  16DA  2ED7               	goto	u6390
 10105  16DB  3180  2098         	fcall	_LED_setHSL
 10106  16DD  0008               	return
 10107  16DE                     __end_of_cycleColors:	
 10108                           
 10109                           	psect	text21
 10110  16DE                     __ptext21:	
 10111 ;; *************** function _dispInc *****************
 10112 ;; Defined at:
 10113 ;;		line 48 in file "dispIncrement.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  val             2   38[BANK0 ] PTR int 
 10116 ;;		 -> RAM(8192), 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  time            2   46[BANK0 ] unsigned short 
 10119 ;;  foo             2   44[BANK0 ] PTR volatile int 
 10120 ;;		 -> RAM(8192), 
 10121 ;;  doo             2   42[BANK0 ] volatile int 
 10122 ;; Return value:  Size  Location     Type
 10123 ;;                  1    wreg      void 
 10124 ;; Registers used:
 10125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10126 ;; Tracked objects:
 10127 ;;		On entry : 0/0
 10128 ;;		On exit  : 0/0
 10129 ;;		Unchanged: 0/0
 10130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10131 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10132 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10133 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10134 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10135 ;;Total ram usage:       10 bytes
 10136 ;; Hardware stack levels used:    1
 10137 ;; Hardware stack levels required when called:   11
 10138 ;; This function calls:
 10139 ;;		_BUTTONS_isClicked
 10140 ;;		_CLOCK_getTime
 10141 ;;		_TM1650_enable
 10142 ;;		_decrement
 10143 ;;		_increment
 10144 ;; This function is called by:
 10145 ;;		_cycleColors
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           
 10150                           ;psect for function _dispInc
 10151  16DE                     _dispInc:	
 10152                           
 10153                           ;dispIncrement.c: 49:      volatile int *foo = val;
 10154                           
 10155                           ;incstack = 0
 10156                           ; Regs used in _dispInc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10157  16DE  0140               	movlb	0	; select bank0
 10158  16DF  0847               	movf	dispInc@val+1,w
 10159  16E0  00CD               	movwf	dispInc@foo+1
 10160  16E1  0846               	movf	dispInc@val,w
 10161  16E2  00CC               	movwf	dispInc@foo
 10162                           
 10163                           ;dispIncrement.c: 50:      volatile int doo = *foo;
 10164  16E3  084C               	movf	dispInc@foo,w
 10165  16E4  0086               	movwf	6
 10166  16E5  084D               	movf	dispInc@foo+1,w
 10167  16E6  0087               	movwf	7
 10168  16E7  3F40               	moviw [0]fsr1
 10169  16E8  00CA               	movwf	dispInc@doo	;volatile
 10170  16E9  3F41               	moviw [1]fsr1
 10171  16EA  00CB               	movwf	dispInc@doo+1	;volatile
 10172                           
 10173                           ;dispIncrement.c: 51:     time_t time = CLOCK_getTime();
 10174  16EB  319E  262B  3196   	fcall	_CLOCK_getTime
 10175  16EE  0140               	movlb	0	; select bank0
 10176  16EF  0821               	movf	?_CLOCK_getTime+1,w
 10177  16F0  00CF               	movwf	dispInc@time+1
 10178  16F1  0820               	movf	?_CLOCK_getTime,w
 10179  16F2  00CE               	movwf	dispInc@time
 10180                           
 10181                           ;dispIncrement.c: 53:     if (time - lastTime < 35)
 10182  16F3  0142               	movlb	2	; select bank2
 10183  16F4  0829               	movf	dispIncrement@lastTime^(0+256),w
 10184  16F5  0140               	movlb	0	; select bank0
 10185  16F6  024E               	subwf	dispInc@time,w
 10186  16F7  00C8               	movwf	??_dispInc
 10187  16F8  0142               	movlb	2	; select bank2
 10188  16F9  082A               	movf	(dispIncrement@lastTime+1)^(0+256),w
 10189  16FA  0140               	movlb	0	; select bank0
 10190  16FB  3B4F               	subwfb	dispInc@time+1,w
 10191  16FC  00C9               	movwf	??_dispInc+1
 10192  16FD  3000               	movlw	0
 10193  16FE  0249               	subwf	??_dispInc+1,w
 10194  16FF  3023               	movlw	35
 10195  1700  1903               	skipnz
 10196  1701  0248               	subwf	??_dispInc,w
 10197  1702  1C03               	btfss	3,0
 10198  1703  0008               	return
 10199                           
 10200                           ;dispIncrement.c: 55:     lastTime = time;
 10201  1704  084F               	movf	dispInc@time+1,w
 10202  1705  0142               	movlb	2	; select bank2
 10203  1706  00AA               	movwf	(dispIncrement@lastTime+1)^(0+256)
 10204  1707  0140               	movlb	0	; select bank0
 10205  1708  084E               	movf	dispInc@time,w
 10206  1709  0142               	movlb	2	; select bank2
 10207  170A  00A9               	movwf	dispIncrement@lastTime^(0+256)
 10208                           
 10209                           ;dispIncrement.c: 57:     if (BUTTONS_isClicked(up)) {
 10210  170B  0141               	movlb	1	; select bank1
 10211  170C  086B               	movf	_up^(0+128),w
 10212  170D  3190  2089  3196   	fcall	_BUTTONS_isClicked
 10213  1710  0140               	movlb	0	; select bank0
 10214  1711  0820               	movf	?_BUTTONS_isClicked,w
 10215  1712  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10216  1713  1903               	btfsc	3,2
 10217  1714  2F28               	goto	l5863
 10218                           
 10219                           ;dispIncrement.c: 58:         increment(foo);
 10220  1715  084D               	movf	dispInc@foo+1,w
 10221  1716  00C3               	movwf	increment@val+1
 10222  1717  084C               	movf	dispInc@foo,w
 10223  1718  00C2               	movwf	increment@val
 10224  1719  3191  213F  3196   	fcall	_increment
 10225                           
 10226                           ;dispIncrement.c: 59:         lastActiveTime = time;
 10227  171C  0140               	movlb	0	; select bank0
 10228  171D  084F               	movf	dispInc@time+1,w
 10229  171E  0142               	movlb	2	; select bank2
 10230  171F  00AC               	movwf	(_lastActiveTime+1)^(0+256)
 10231  1720  0140               	movlb	0	; select bank0
 10232  1721  084E               	movf	dispInc@time,w
 10233  1722  0142               	movlb	2	; select bank2
 10234  1723  00AB               	movwf	_lastActiveTime^(0+256)
 10235                           
 10236                           ;dispIncrement.c: 60:         TM1650_enable(1);
 10237  1724  3001               	movlw	1
 10238  1725  319E  26F5         	fcall	_TM1650_enable
 10239                           
 10240                           ;dispIncrement.c: 61:     } else if (BUTTONS_isClicked(down)) {
 10241  1727  0008               	return
 10242  1728                     l5863:	
 10243  1728  0142               	movlb	2	; select bank2
 10244  1729  0854               	movf	_down^(0+256),w
 10245  172A  3190  2089  3196   	fcall	_BUTTONS_isClicked
 10246  172D  0140               	movlb	0	; select bank0
 10247  172E  0820               	movf	?_BUTTONS_isClicked,w
 10248  172F  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10249  1730  1903               	btfsc	3,2
 10250  1731  2F45               	goto	l5871
 10251                           
 10252                           ;dispIncrement.c: 62:         decrement(val);
 10253  1732  0847               	movf	dispInc@val+1,w
 10254  1733  00C3               	movwf	decrement@val+1
 10255  1734  0846               	movf	dispInc@val,w
 10256  1735  00C2               	movwf	decrement@val
 10257  1736  3191  2192  3196   	fcall	_decrement
 10258                           
 10259                           ;dispIncrement.c: 63:         lastActiveTime = time;
 10260  1739  0140               	movlb	0	; select bank0
 10261  173A  084F               	movf	dispInc@time+1,w
 10262  173B  0142               	movlb	2	; select bank2
 10263  173C  00AC               	movwf	(_lastActiveTime+1)^(0+256)
 10264  173D  0140               	movlb	0	; select bank0
 10265  173E  084E               	movf	dispInc@time,w
 10266  173F  0142               	movlb	2	; select bank2
 10267  1740  00AB               	movwf	_lastActiveTime^(0+256)
 10268                           
 10269                           ;dispIncrement.c: 64:         TM1650_enable(1);
 10270  1741  3001               	movlw	1
 10271  1742  319E  26F5         	fcall	_TM1650_enable
 10272                           
 10273                           ;dispIncrement.c: 65:     } else {
 10274  1744  0008               	return
 10275  1745                     l5871:	
 10276                           
 10277                           ;dispIncrement.c: 66:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
 10278  1745  319E  262B  3196   	fcall	_CLOCK_getTime
 10279  1748  0142               	movlb	2	; select bank2
 10280  1749  082B               	movf	_lastActiveTime^(0+256),w
 10281  174A  0140               	movlb	0	; select bank0
 10282  174B  0220               	subwf	?_CLOCK_getTime,w
 10283  174C  00C8               	movwf	??_dispInc
 10284  174D  0142               	movlb	2	; select bank2
 10285  174E  082C               	movf	(_lastActiveTime+1)^(0+256),w
 10286  174F  0140               	movlb	0	; select bank0
 10287  1750  3B21               	subwfb	?_CLOCK_getTime+1,w
 10288  1751  00C9               	movwf	??_dispInc+1
 10289  1752  3013               	movlw	19
 10290  1753  0249               	subwf	??_dispInc+1,w
 10291  1754  3088               	movlw	136
 10292  1755  1903               	skipnz
 10293  1756  0248               	subwf	??_dispInc,w
 10294  1757  1C03               	skipc
 10295  1758  0008               	return
 10296                           
 10297                           ;dispIncrement.c: 67:             TM1650_enable(0);
 10298  1759  3000               	movlw	0
 10299  175A  319E  26F5  3196   	fcall	_TM1650_enable
 10300                           
 10301                           ;dispIncrement.c: 68:             lastActiveTime = CLOCK_getTime() - 5001;
 10302  175D  319E  262B         	fcall	_CLOCK_getTime
 10303  175F  0140               	movlb	0	; select bank0
 10304  1760  0820               	movf	?_CLOCK_getTime,w
 10305  1761  3E77               	addlw	119
 10306  1762  0142               	movlb	2	; select bank2
 10307  1763  00AB               	movwf	_lastActiveTime^(0+256)
 10308  1764  30EC               	movlw	236
 10309  1765  0140               	movlb	0	; select bank0
 10310  1766  3D21               	addwfc	?_CLOCK_getTime+1,w
 10311  1767  0142               	movlb	2	; select bank2
 10312  1768  00AC               	movwf	(_lastActiveTime+1)^(0+256)
 10313  1769  0008               	return
 10314  176A                     __end_of_dispInc:	
 10315                           
 10316                           	psect	text22
 10317  113F                     __ptext22:	
 10318 ;; *************** function _increment *****************
 10319 ;; Defined at:
 10320 ;;		line 17 in file "dispIncrement.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  val             2   34[BANK0 ] PTR int 
 10323 ;;		 -> RAM(8192), 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;		None
 10326 ;; Return value:  Size  Location     Type
 10327 ;;                  1    wreg      void 
 10328 ;; Registers used:
 10329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10335 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10338 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10339 ;;Total ram usage:        4 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:   10
 10342 ;; This function calls:
 10343 ;;		_TM1650_fastPrintNum
 10344 ;; This function is called by:
 10345 ;;		_dispInc
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           
 10350                           ;psect for function _increment
 10351  113F                     _increment:	
 10352                           
 10353                           ;dispIncrement.c: 17: void increment(int *val);dispIncrement.c: 18: {;dispIncrement.c: 1
      +                          9:     if(*val == 512) {
 10354                           
 10355                           ;incstack = 0
 10356                           ; Regs used in _increment: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10357  113F  0140               	movlb	0	; select bank0
 10358  1140  0842               	movf	increment@val,w
 10359  1141  0086               	movwf	6
 10360  1142  0843               	movf	increment@val+1,w
 10361  1143  0087               	movwf	7
 10362  1144  0016               	moviw fsr1++
 10363  1145  00C4               	movwf	??_increment
 10364  1146  0016               	moviw fsr1++
 10365  1147  3A02               	xorlw	2
 10366  1148  04C4               	iorwf	??_increment,f
 10367  1149  1D03               	btfss	3,2
 10368  114A  2954               	goto	l5775
 10369                           
 10370                           ;dispIncrement.c: 20:         *val = 1;
 10371  114B  0842               	movf	increment@val,w
 10372  114C  0086               	movwf	6
 10373  114D  0843               	movf	increment@val+1,w
 10374  114E  0087               	movwf	7
 10375  114F  3001               	movlw	1
 10376  1150  3FC0               	movwi [0]fsr1
 10377  1151  3000               	movlw	0
 10378  1152  3FC1               	movwi [1]fsr1
 10379                           
 10380                           ;dispIncrement.c: 21:     } else {
 10381  1153  295D               	goto	l5777
 10382  1154                     l5775:	
 10383                           
 10384                           ;dispIncrement.c: 22:         (*val)++;
 10385  1154  0842               	movf	increment@val,w
 10386  1155  0086               	movwf	6
 10387  1156  0843               	movf	increment@val+1,w
 10388  1157  0087               	movwf	7
 10389  1158  3001               	movlw	1
 10390  1159  0781               	addwf	1,f
 10391  115A  3141               	addfsr 1,1
 10392  115B  1803               	skipnc
 10393  115C  0A81               	incf	1,f
 10394  115D                     l5777:	
 10395                           
 10396                           ;dispIncrement.c: 25:     TM1650_fastPrintNum(*val);
 10397  115D  0842               	movf	increment@val,w
 10398  115E  0086               	movwf	6
 10399  115F  0843               	movf	increment@val+1,w
 10400  1160  0087               	movwf	7
 10401  1161  3F40               	moviw [0]fsr1
 10402  1162  00BB               	movwf	TM1650_fastPrintNum@num
 10403  1163  3F41               	moviw [1]fsr1
 10404  1164  00BC               	movwf	TM1650_fastPrintNum@num+1
 10405  1165  3195  256A         	fcall	_TM1650_fastPrintNum
 10406  1167  0008               	return
 10407  1168                     __end_of_increment:	
 10408                           
 10409                           	psect	text23
 10410  1192                     __ptext23:	
 10411 ;; *************** function _decrement *****************
 10412 ;; Defined at:
 10413 ;;		line 31 in file "dispIncrement.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;  val             2   34[BANK0 ] PTR int 
 10416 ;;		 -> RAM(8192), 
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;		None
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      void 
 10421 ;; Registers used:
 10422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10430 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10431 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10432 ;;Total ram usage:        4 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:   10
 10435 ;; This function calls:
 10436 ;;		_TM1650_fastPrintNum
 10437 ;; This function is called by:
 10438 ;;		_dispInc
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _decrement
 10444  1192                     _decrement:	
 10445                           
 10446                           ;dispIncrement.c: 31: void decrement(int *val);dispIncrement.c: 32: {;dispIncrement.c: 3
      +                          3:     if(*val == 1) {
 10447                           
 10448                           ;incstack = 0
 10449                           ; Regs used in _decrement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10450  1192  0140               	movlb	0	; select bank0
 10451  1193  0842               	movf	decrement@val,w
 10452  1194  0086               	movwf	6
 10453  1195  0843               	movf	decrement@val+1,w
 10454  1196  0087               	movwf	7
 10455  1197  0016               	moviw fsr1++
 10456  1198  3A01               	xorlw	1
 10457  1199  00C4               	movwf	??_decrement
 10458  119A  0016               	moviw fsr1++
 10459  119B  04C4               	iorwf	??_decrement,f
 10460  119C  1D03               	btfss	3,2
 10461  119D  29A7               	goto	l5783
 10462                           
 10463                           ;dispIncrement.c: 34:         *val = 512;
 10464  119E  0842               	movf	decrement@val,w
 10465  119F  0086               	movwf	6
 10466  11A0  0843               	movf	decrement@val+1,w
 10467  11A1  0087               	movwf	7
 10468  11A2  3000               	movlw	0
 10469  11A3  3FC0               	movwi [0]fsr1
 10470  11A4  3002               	movlw	2
 10471  11A5  3FC1               	movwi [1]fsr1
 10472                           
 10473                           ;dispIncrement.c: 35:     } else {
 10474  11A6  29B1               	goto	l5785
 10475  11A7                     l5783:	
 10476                           
 10477                           ;dispIncrement.c: 36:         (*val)--;
 10478  11A7  0842               	movf	decrement@val,w
 10479  11A8  0086               	movwf	6
 10480  11A9  0843               	movf	decrement@val+1,w
 10481  11AA  0087               	movwf	7
 10482  11AB  30FF               	movlw	255
 10483  11AC  0781               	addwf	1,f
 10484  11AD  3141               	addfsr 1,1
 10485  11AE  30FF               	movlw	255
 10486  11AF  3D81               	addwfc	1,f
 10487  11B0  317F               	addfsr 1,-1
 10488  11B1                     l5785:	
 10489                           
 10490                           ;dispIncrement.c: 40:     TM1650_fastPrintNum(*val);
 10491  11B1  0842               	movf	decrement@val,w
 10492  11B2  0086               	movwf	6
 10493  11B3  0843               	movf	decrement@val+1,w
 10494  11B4  0087               	movwf	7
 10495  11B5  3F40               	moviw [0]fsr1
 10496  11B6  00BB               	movwf	TM1650_fastPrintNum@num
 10497  11B7  3F41               	moviw [1]fsr1
 10498  11B8  00BC               	movwf	TM1650_fastPrintNum@num+1
 10499  11B9  3195  256A         	fcall	_TM1650_fastPrintNum
 10500  11BB  0008               	return
 10501  11BC                     __end_of_decrement:	
 10502                           
 10503                           	psect	text24
 10504  14F3                     __ptext24:	
 10505 ;; *************** function _adrControl_DMX *****************
 10506 ;; Defined at:
 10507 ;;		line 51 in file "controller.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;		None
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;  time            2   36[BANK0 ] unsigned short 
 10512 ;; Return value:  Size  Location     Type
 10513 ;;                  1    wreg      void 
 10514 ;; Registers used:
 10515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10516 ;; Tracked objects:
 10517 ;;		On entry : 0/0
 10518 ;;		On exit  : 0/0
 10519 ;;		Unchanged: 0/0
 10520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10523 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10524 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10525 ;;Total ram usage:        4 bytes
 10526 ;; Hardware stack levels used:    1
 10527 ;; Hardware stack levels required when called:   11
 10528 ;; This function calls:
 10529 ;;		_BUTTONS_isClicked
 10530 ;;		_CLOCK_getTime
 10531 ;;		_TM1650_enable
 10532 ;;		_address_dec
 10533 ;;		_address_inc
 10534 ;; This function is called by:
 10535 ;;		_MENU_task
 10536 ;; This function uses a non-reentrant model
 10537 ;;
 10538                           
 10539                           
 10540                           ;psect for function _adrControl_DMX
 10541  14F3                     _adrControl_DMX:	
 10542                           
 10543                           ;controller.c: 52:     time_t time = CLOCK_getTime();
 10544                           
 10545                           ;incstack = 0
 10546                           ; Regs used in _adrControl_DMX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10547  14F3  319E  262B  3194   	fcall	_CLOCK_getTime
 10548  14F6  0140               	movlb	0	; select bank0
 10549  14F7  0821               	movf	?_CLOCK_getTime+1,w
 10550  14F8  00C5               	movwf	adrControl_DMX@time+1
 10551  14F9  0820               	movf	?_CLOCK_getTime,w
 10552  14FA  00C4               	movwf	adrControl_DMX@time
 10553                           
 10554                           ;controller.c: 54:     if (time - lastTime < 35)
 10555  14FB  0142               	movlb	2	; select bank2
 10556  14FC  082D               	movf	controller@lastTime^(0+256),w
 10557  14FD  0140               	movlb	0	; select bank0
 10558  14FE  0244               	subwf	adrControl_DMX@time,w
 10559  14FF  00C2               	movwf	??_adrControl_DMX
 10560  1500  0142               	movlb	2	; select bank2
 10561  1501  082E               	movf	(controller@lastTime+1)^(0+256),w
 10562  1502  0140               	movlb	0	; select bank0
 10563  1503  3B45               	subwfb	adrControl_DMX@time+1,w
 10564  1504  00C3               	movwf	??_adrControl_DMX+1
 10565  1505  3000               	movlw	0
 10566  1506  0243               	subwf	??_adrControl_DMX+1,w
 10567  1507  3023               	movlw	35
 10568  1508  1903               	skipnz
 10569  1509  0242               	subwf	??_adrControl_DMX,w
 10570  150A  1C03               	btfss	3,0
 10571  150B  0008               	return
 10572                           
 10573                           ;controller.c: 56:     lastTime = time;
 10574  150C  0845               	movf	adrControl_DMX@time+1,w
 10575  150D  0142               	movlb	2	; select bank2
 10576  150E  00AE               	movwf	(controller@lastTime+1)^(0+256)
 10577  150F  0140               	movlb	0	; select bank0
 10578  1510  0844               	movf	adrControl_DMX@time,w
 10579  1511  0142               	movlb	2	; select bank2
 10580  1512  00AD               	movwf	controller@lastTime^(0+256)
 10581                           
 10582                           ;controller.c: 58:     if (BUTTONS_isClicked(up)) {
 10583  1513  0141               	movlb	1	; select bank1
 10584  1514  086B               	movf	_up^(0+128),w
 10585  1515  3190  2089  3194   	fcall	_BUTTONS_isClicked
 10586  1518  0140               	movlb	0	; select bank0
 10587  1519  0820               	movf	?_BUTTONS_isClicked,w
 10588  151A  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10589  151B  1903               	btfsc	3,2
 10590  151C  2D2C               	goto	l6169
 10591                           
 10592                           ;controller.c: 59:         address_inc();
 10593  151D  319F  2734  3194   	fcall	_address_inc
 10594                           
 10595                           ;controller.c: 60:         lastActiveTime = time;
 10596  1520  0140               	movlb	0	; select bank0
 10597  1521  0845               	movf	adrControl_DMX@time+1,w
 10598  1522  0142               	movlb	2	; select bank2
 10599  1523  00AC               	movwf	(_lastActiveTime+1)^(0+256)
 10600  1524  0140               	movlb	0	; select bank0
 10601  1525  0844               	movf	adrControl_DMX@time,w
 10602  1526  0142               	movlb	2	; select bank2
 10603  1527  00AB               	movwf	_lastActiveTime^(0+256)
 10604                           
 10605                           ;controller.c: 61:         TM1650_enable(1);
 10606  1528  3001               	movlw	1
 10607  1529  319E  26F5         	fcall	_TM1650_enable
 10608                           
 10609                           ;controller.c: 62:     } else if (BUTTONS_isClicked(down)) {
 10610  152B  0008               	return
 10611  152C                     l6169:	
 10612  152C  0142               	movlb	2	; select bank2
 10613  152D  0854               	movf	_down^(0+256),w
 10614  152E  3190  2089  3194   	fcall	_BUTTONS_isClicked
 10615  1531  0140               	movlb	0	; select bank0
 10616  1532  0820               	movf	?_BUTTONS_isClicked,w
 10617  1533  0421               	iorwf	?_BUTTONS_isClicked+1,w
 10618  1534  1903               	btfsc	3,2
 10619  1535  2D45               	goto	l6177
 10620                           
 10621                           ;controller.c: 63:         address_dec();
 10622  1536  319F  270A  3194   	fcall	_address_dec
 10623                           
 10624                           ;controller.c: 64:         lastActiveTime = time;
 10625  1539  0140               	movlb	0	; select bank0
 10626  153A  0845               	movf	adrControl_DMX@time+1,w
 10627  153B  0142               	movlb	2	; select bank2
 10628  153C  00AC               	movwf	(_lastActiveTime+1)^(0+256)
 10629  153D  0140               	movlb	0	; select bank0
 10630  153E  0844               	movf	adrControl_DMX@time,w
 10631  153F  0142               	movlb	2	; select bank2
 10632  1540  00AB               	movwf	_lastActiveTime^(0+256)
 10633                           
 10634                           ;controller.c: 65:         TM1650_enable(1);
 10635  1541  3001               	movlw	1
 10636  1542  319E  26F5         	fcall	_TM1650_enable
 10637                           
 10638                           ;controller.c: 66:     } else {
 10639  1544  0008               	return
 10640  1545                     l6177:	
 10641                           
 10642                           ;controller.c: 67:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
 10643  1545  319E  262B  3194   	fcall	_CLOCK_getTime
 10644  1548  0142               	movlb	2	; select bank2
 10645  1549  082B               	movf	_lastActiveTime^(0+256),w
 10646  154A  0140               	movlb	0	; select bank0
 10647  154B  0220               	subwf	?_CLOCK_getTime,w
 10648  154C  00C2               	movwf	??_adrControl_DMX
 10649  154D  0142               	movlb	2	; select bank2
 10650  154E  082C               	movf	(_lastActiveTime+1)^(0+256),w
 10651  154F  0140               	movlb	0	; select bank0
 10652  1550  3B21               	subwfb	?_CLOCK_getTime+1,w
 10653  1551  00C3               	movwf	??_adrControl_DMX+1
 10654  1552  3013               	movlw	19
 10655  1553  0243               	subwf	??_adrControl_DMX+1,w
 10656  1554  3088               	movlw	136
 10657  1555  1903               	skipnz
 10658  1556  0242               	subwf	??_adrControl_DMX,w
 10659  1557  1C03               	skipc
 10660  1558  0008               	return
 10661                           
 10662                           ;controller.c: 68:             TM1650_enable(0);
 10663  1559  3000               	movlw	0
 10664  155A  319E  26F5  3194   	fcall	_TM1650_enable
 10665                           
 10666                           ;controller.c: 69:             lastActiveTime = CLOCK_getTime() - 5001;
 10667  155D  319E  262B         	fcall	_CLOCK_getTime
 10668  155F  0140               	movlb	0	; select bank0
 10669  1560  0820               	movf	?_CLOCK_getTime,w
 10670  1561  3E77               	addlw	119
 10671  1562  0142               	movlb	2	; select bank2
 10672  1563  00AB               	movwf	_lastActiveTime^(0+256)
 10673  1564  30EC               	movlw	236
 10674  1565  0140               	movlb	0	; select bank0
 10675  1566  3D21               	addwfc	?_CLOCK_getTime+1,w
 10676  1567  0142               	movlb	2	; select bank2
 10677  1568  00AC               	movwf	(_lastActiveTime+1)^(0+256)
 10678  1569  0008               	return
 10679  156A                     __end_of_adrControl_DMX:	
 10680                           
 10681                           	psect	text25
 10682  1F34                     __ptext25:	
 10683 ;; *************** function _address_inc *****************
 10684 ;; Defined at:
 10685 ;;		line 19 in file "controller.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;		None
 10688 ;; Auto vars:     Size  Location     Type
 10689 ;;		None
 10690 ;; Return value:  Size  Location     Type
 10691 ;;                  1    wreg      void 
 10692 ;; Registers used:
 10693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10694 ;; Tracked objects:
 10695 ;;		On entry : 0/0
 10696 ;;		On exit  : 0/0
 10697 ;;		Unchanged: 0/0
 10698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10703 ;;Total ram usage:        0 bytes
 10704 ;; Hardware stack levels used:    1
 10705 ;; Hardware stack levels required when called:   10
 10706 ;; This function calls:
 10707 ;;		_TM1650_fastPrintNum
 10708 ;; This function is called by:
 10709 ;;		_adrControl_DMX
 10710 ;; This function uses a non-reentrant model
 10711 ;;
 10712                           
 10713                           
 10714                           ;psect for function _address_inc
 10715  1F34                     _address_inc:	
 10716                           
 10717                           ;controller.c: 21:     if(address == 512) {
 10718                           
 10719                           ;incstack = 0
 10720                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10721  1F34  3002               	movlw	2
 10722  1F35  067B               	xorwf	_address+1,w
 10723  1F36  047A               	iorwf	_address,w
 10724  1F37  1D03               	btfss	3,2
 10725  1F38  2F3E               	goto	l5881
 10726                           
 10727                           ;controller.c: 22:         address = 1;
 10728  1F39  3001               	movlw	1
 10729  1F3A  00FA               	movwf	_address
 10730  1F3B  3000               	movlw	0
 10731  1F3C  00FB               	movwf	_address+1
 10732                           
 10733                           ;controller.c: 23:     } else {
 10734  1F3D  2F42               	goto	l5883
 10735  1F3E                     l5881:	
 10736                           
 10737                           ;controller.c: 24:         address++;
 10738  1F3E  3001               	movlw	1
 10739  1F3F  07FA               	addwf	_address,f
 10740  1F40  3000               	movlw	0
 10741  1F41  3DFB               	addwfc	_address+1,f
 10742  1F42                     l5883:	
 10743                           
 10744                           ;controller.c: 28:     TM1650_fastPrintNum(address);
 10745  1F42  087B               	movf	_address+1,w
 10746  1F43  0140               	movlb	0	; select bank0
 10747  1F44  00BC               	movwf	TM1650_fastPrintNum@num+1
 10748  1F45  087A               	movf	_address,w
 10749  1F46  00BB               	movwf	TM1650_fastPrintNum@num
 10750  1F47  3195  256A         	fcall	_TM1650_fastPrintNum
 10751  1F49  0008               	return
 10752  1F4A                     __end_of_address_inc:	
 10753                           
 10754                           	psect	text26
 10755  1F0A                     __ptext26:	
 10756 ;; *************** function _address_dec *****************
 10757 ;; Defined at:
 10758 ;;		line 34 in file "controller.c"
 10759 ;; Parameters:    Size  Location     Type
 10760 ;;		None
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;		None
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      void 
 10765 ;; Registers used:
 10766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10776 ;;Total ram usage:        0 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; Hardware stack levels required when called:   10
 10779 ;; This function calls:
 10780 ;;		_TM1650_fastPrintNum
 10781 ;; This function is called by:
 10782 ;;		_adrControl_DMX
 10783 ;; This function uses a non-reentrant model
 10784 ;;
 10785                           
 10786                           
 10787                           ;psect for function _address_dec
 10788  1F0A                     _address_dec:	
 10789                           
 10790                           ;controller.c: 36:     if(address == 1) {
 10791                           
 10792                           ;incstack = 0
 10793                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10794  1F0A  037A               	decf	_address,w
 10795  1F0B  047B               	iorwf	_address+1,w
 10796  1F0C  1D03               	btfss	3,2
 10797  1F0D  2F13               	goto	l5889
 10798                           
 10799                           ;controller.c: 37:         address = 512;
 10800  1F0E  3000               	movlw	0
 10801  1F0F  00FA               	movwf	_address
 10802  1F10  3002               	movlw	2
 10803  1F11  00FB               	movwf	_address+1
 10804                           
 10805                           ;controller.c: 38:     } else {
 10806  1F12  2F17               	goto	l5891
 10807  1F13                     l5889:	
 10808                           
 10809                           ;controller.c: 39:         address--;
 10810  1F13  3001               	movlw	1
 10811  1F14  02FA               	subwf	_address,f
 10812  1F15  3000               	movlw	0
 10813  1F16  3BFB               	subwfb	_address+1,f
 10814  1F17                     l5891:	
 10815                           
 10816                           ;controller.c: 43:     TM1650_fastPrintNum(address);
 10817  1F17  087B               	movf	_address+1,w
 10818  1F18  0140               	movlb	0	; select bank0
 10819  1F19  00BC               	movwf	TM1650_fastPrintNum@num+1
 10820  1F1A  087A               	movf	_address,w
 10821  1F1B  00BB               	movwf	TM1650_fastPrintNum@num
 10822  1F1C  3195  256A         	fcall	_TM1650_fastPrintNum
 10823  1F1E  0008               	return
 10824  1F1F                     __end_of_address_dec:	
 10825                           
 10826                           	psect	text27
 10827  156A                     __ptext27:	
 10828 ;; *************** function _TM1650_fastPrintNum *****************
 10829 ;; Defined at:
 10830 ;;		line 36 in file "tm1650.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  num             2   27[BANK0 ] unsigned short 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;  numWrite        2   30[BANK0 ] int 
 10835 ;;  i               2   32[BANK0 ] int 
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  1    wreg      void 
 10838 ;; Registers used:
 10839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10845 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10846 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10847 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10848 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10849 ;;Total ram usage:        7 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; Hardware stack levels required when called:    9
 10852 ;; This function calls:
 10853 ;;		_TM1650_setDigit
 10854 ;;		___lwdiv
 10855 ;;		___lwmod
 10856 ;; This function is called by:
 10857 ;;		_address_inc
 10858 ;;		_address_dec
 10859 ;;		_increment
 10860 ;;		_decrement
 10861 ;;		_adrControl_init
 10862 ;; This function uses a non-reentrant model
 10863 ;;
 10864                           
 10865                           
 10866                           ;psect for function _TM1650_fastPrintNum
 10867  156A                     _TM1650_fastPrintNum:	
 10868                           
 10869                           ;tm1650.c: 37:     if(num > 9999) {
 10870                           
 10871                           ;incstack = 0
 10872                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10873  156A  3027               	movlw	39
 10874  156B  0140               	movlb	0	; select bank0
 10875  156C  023C               	subwf	TM1650_fastPrintNum@num+1,w
 10876  156D  3010               	movlw	16
 10877  156E  1903               	skipnz
 10878  156F  023B               	subwf	TM1650_fastPrintNum@num,w
 10879  1570  1C03               	skipc
 10880  1571  2DA1               	goto	l5603
 10881                           
 10882                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
 10883  1572  3045               	movlw	69
 10884  1573  00BD               	movwf	??_TM1650_fastPrintNum
 10885  1574  083D               	movf	??_TM1650_fastPrintNum,w
 10886  1575  00B4               	movwf	TM1650_setDigit@data
 10887  1576  3000               	movlw	0
 10888  1577  00B5               	movwf	TM1650_setDigit@dp
 10889  1578  00B6               	movwf	TM1650_setDigit@dp+1
 10890  1579  3000               	movlw	0
 10891  157A  319F  27AB  3195   	fcall	_TM1650_setDigit
 10892                           
 10893                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
 10894  157D  3045               	movlw	69
 10895  157E  0140               	movlb	0	; select bank0
 10896  157F  00BD               	movwf	??_TM1650_fastPrintNum
 10897  1580  083D               	movf	??_TM1650_fastPrintNum,w
 10898  1581  00B4               	movwf	TM1650_setDigit@data
 10899  1582  3000               	movlw	0
 10900  1583  00B5               	movwf	TM1650_setDigit@dp
 10901  1584  00B6               	movwf	TM1650_setDigit@dp+1
 10902  1585  3001               	movlw	1
 10903  1586  319F  27AB  3195   	fcall	_TM1650_setDigit
 10904                           
 10905                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
 10906  1589  3045               	movlw	69
 10907  158A  0140               	movlb	0	; select bank0
 10908  158B  00BD               	movwf	??_TM1650_fastPrintNum
 10909  158C  083D               	movf	??_TM1650_fastPrintNum,w
 10910  158D  00B4               	movwf	TM1650_setDigit@data
 10911  158E  3000               	movlw	0
 10912  158F  00B5               	movwf	TM1650_setDigit@dp
 10913  1590  00B6               	movwf	TM1650_setDigit@dp+1
 10914  1591  3002               	movlw	2
 10915  1592  319F  27AB  3195   	fcall	_TM1650_setDigit
 10916                           
 10917                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
 10918  1595  3045               	movlw	69
 10919  1596  0140               	movlb	0	; select bank0
 10920  1597  00BD               	movwf	??_TM1650_fastPrintNum
 10921  1598  083D               	movf	??_TM1650_fastPrintNum,w
 10922  1599  00B4               	movwf	TM1650_setDigit@data
 10923  159A  3000               	movlw	0
 10924  159B  00B5               	movwf	TM1650_setDigit@dp
 10925  159C  00B6               	movwf	TM1650_setDigit@dp+1
 10926  159D  3003               	movlw	3
 10927  159E  319F  27AB         	fcall	_TM1650_setDigit
 10928                           
 10929                           ;tm1650.c: 42:     } else {
 10930  15A0  0008               	return
 10931  15A1                     l5603:	
 10932                           
 10933                           ;tm1650.c: 43:         int i=0;
 10934  15A1  01C0               	clrf	TM1650_fastPrintNum@i
 10935  15A2  01C1               	clrf	TM1650_fastPrintNum@i+1
 10936                           
 10937                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
 10938  15A3  01C0               	clrf	TM1650_fastPrintNum@i
 10939  15A4  01C1               	clrf	TM1650_fastPrintNum@i+1
 10940  15A5                     l5609:	
 10941                           
 10942                           ;tm1650.c: 45:             int numWrite = num %10;
 10943  15A5  300A               	movlw	10
 10944  15A6  0140               	movlb	0	; select bank0
 10945  15A7  00A0               	movwf	___lwmod@divisor
 10946  15A8  3000               	movlw	0
 10947  15A9  00A1               	movwf	___lwmod@divisor+1
 10948  15AA  083C               	movf	TM1650_fastPrintNum@num+1,w
 10949  15AB  00A3               	movwf	___lwmod@dividend+1
 10950  15AC  083B               	movf	TM1650_fastPrintNum@num,w
 10951  15AD  00A2               	movwf	___lwmod@dividend
 10952  15AE  3191  21BC  3195   	fcall	___lwmod
 10953  15B1  0140               	movlb	0	; select bank0
 10954  15B2  0821               	movf	?___lwmod+1,w
 10955  15B3  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
 10956  15B4  0820               	movf	?___lwmod,w
 10957  15B5  00BE               	movwf	TM1650_fastPrintNum@numWrite
 10958                           
 10959                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
 10960  15B6  083E               	movf	TM1650_fastPrintNum@numWrite,w
 10961  15B7  3E30               	addlw	48
 10962  15B8  00BD               	movwf	??_TM1650_fastPrintNum
 10963  15B9  083D               	movf	??_TM1650_fastPrintNum,w
 10964  15BA  00B4               	movwf	TM1650_setDigit@data
 10965  15BB  3000               	movlw	0
 10966  15BC  00B5               	movwf	TM1650_setDigit@dp
 10967  15BD  00B6               	movwf	TM1650_setDigit@dp+1
 10968  15BE  0840               	movf	TM1650_fastPrintNum@i,w
 10969  15BF  3C03               	sublw	3
 10970  15C0  319F  27AB  3195   	fcall	_TM1650_setDigit
 10971                           
 10972                           ;tm1650.c: 47:             num = num/10;
 10973  15C3  300A               	movlw	10
 10974  15C4  0140               	movlb	0	; select bank0
 10975  15C5  00A0               	movwf	___lwdiv@divisor
 10976  15C6  3000               	movlw	0
 10977  15C7  00A1               	movwf	___lwdiv@divisor+1
 10978  15C8  083C               	movf	TM1650_fastPrintNum@num+1,w
 10979  15C9  00A3               	movwf	___lwdiv@dividend+1
 10980  15CA  083B               	movf	TM1650_fastPrintNum@num,w
 10981  15CB  00A2               	movwf	___lwdiv@dividend
 10982  15CC  3192  2216  3195   	fcall	___lwdiv
 10983  15CF  0140               	movlb	0	; select bank0
 10984  15D0  0821               	movf	?___lwdiv+1,w
 10985  15D1  00BC               	movwf	TM1650_fastPrintNum@num+1
 10986  15D2  0820               	movf	?___lwdiv,w
 10987  15D3  00BB               	movwf	TM1650_fastPrintNum@num
 10988                           
 10989                           ;tm1650.c: 48:         }
 10990  15D4  3001               	movlw	1
 10991  15D5  07C0               	addwf	TM1650_fastPrintNum@i,f
 10992  15D6  3000               	movlw	0
 10993  15D7  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
 10994  15D8  0841               	movf	TM1650_fastPrintNum@i+1,w
 10995  15D9  3A80               	xorlw	128
 10996  15DA  00BD               	movwf	??_TM1650_fastPrintNum
 10997  15DB  3080               	movlw	128
 10998  15DC  023D               	subwf	??_TM1650_fastPrintNum,w
 10999  15DD  1D03               	skipz
 11000  15DE  2DE1               	goto	u5905
 11001  15DF  3004               	movlw	4
 11002  15E0  0240               	subwf	TM1650_fastPrintNum@i,w
 11003  15E1                     u5905:	
 11004  15E1  1803               	btfsc	3,0
 11005  15E2  0008               	return
 11006  15E3  2DA5               	goto	l5609
 11007  15E4                     __end_of_TM1650_fastPrintNum:	
 11008                           
 11009                           	psect	text28
 11010  11BC                     __ptext28:	
 11011 ;; *************** function ___lwmod *****************
 11012 ;; Defined at:
 11013 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;  divisor         2    0[BANK0 ] unsigned int 
 11016 ;;  dividend        2    2[BANK0 ] unsigned int 
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;  counter         1    5[BANK0 ] unsigned char 
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  2    0[BANK0 ] unsigned int 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2, status,0
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11028 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11029 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11030 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11031 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11032 ;;Total ram usage:        6 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    4
 11035 ;; This function calls:
 11036 ;;		Nothing
 11037 ;; This function is called by:
 11038 ;;		_TM1650_fastPrintNum
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           
 11043                           ;psect for function ___lwmod
 11044  11BC                     ___lwmod:	
 11045                           
 11046                           ;incstack = 0
 11047                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11048  11BC  0140               	movlb	0	; select bank0
 11049  11BD  0820               	movf	___lwmod@divisor,w
 11050  11BE  0421               	iorwf	___lwmod@divisor+1,w
 11051  11BF  1903               	btfsc	3,2
 11052  11C0  29E4               	goto	l5449
 11053  11C1  01A5               	clrf	___lwmod@counter
 11054  11C2  0AA5               	incf	___lwmod@counter,f
 11055  11C3                     l5439:	
 11056  11C3  1BA1               	btfsc	___lwmod@divisor+1,7
 11057  11C4  29CF               	goto	l5441
 11058  11C5  3001               	movlw	1
 11059  11C6                     u5585:	
 11060  11C6  35A0               	lslf	___lwmod@divisor,f
 11061  11C7  0DA1               	rlf	___lwmod@divisor+1,f
 11062  11C8  0B89               	decfsz	9,f
 11063  11C9  29C6               	goto	u5585
 11064  11CA  3001               	movlw	1
 11065  11CB  00A4               	movwf	??___lwmod
 11066  11CC  0824               	movf	??___lwmod,w
 11067  11CD  07A5               	addwf	___lwmod@counter,f
 11068  11CE  29C3               	goto	l5439
 11069  11CF                     l5441:	
 11070  11CF  0821               	movf	___lwmod@divisor+1,w
 11071  11D0  0223               	subwf	___lwmod@dividend+1,w
 11072  11D1  1D03               	skipz
 11073  11D2  29D5               	goto	u5605
 11074  11D3  0820               	movf	___lwmod@divisor,w
 11075  11D4  0222               	subwf	___lwmod@dividend,w
 11076  11D5                     u5605:	
 11077  11D5  1C03               	skipc
 11078  11D6  29DB               	goto	l5445
 11079  11D7  0820               	movf	___lwmod@divisor,w
 11080  11D8  02A2               	subwf	___lwmod@dividend,f
 11081  11D9  0821               	movf	___lwmod@divisor+1,w
 11082  11DA  3BA3               	subwfb	___lwmod@dividend+1,f
 11083  11DB                     l5445:	
 11084  11DB  3001               	movlw	1
 11085  11DC                     u5615:	
 11086  11DC  36A1               	lsrf	___lwmod@divisor+1,f
 11087  11DD  0CA0               	rrf	___lwmod@divisor,f
 11088  11DE  0B89               	decfsz	9,f
 11089  11DF  29DC               	goto	u5615
 11090  11E0  3001               	movlw	1
 11091  11E1  02A5               	subwf	___lwmod@counter,f
 11092  11E2  1D03               	btfss	3,2
 11093  11E3  29CF               	goto	l5441
 11094  11E4                     l5449:	
 11095  11E4  0823               	movf	___lwmod@dividend+1,w
 11096  11E5  00A1               	movwf	?___lwmod+1
 11097  11E6  0822               	movf	___lwmod@dividend,w
 11098  11E7  00A0               	movwf	?___lwmod
 11099  11E8  0008               	return
 11100  11E9                     __end_of___lwmod:	
 11101                           
 11102                           	psect	text29
 11103  1FAB                     __ptext29:	
 11104 ;; *************** function _TM1650_setDigit *****************
 11105 ;; Defined at:
 11106 ;;		line 24 in file "tm1650.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;  digit           1    wreg     unsigned char 
 11109 ;;  data            1   20[BANK0 ] unsigned char 
 11110 ;;  dp              2   21[BANK0 ] int 
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;  digit           1   26[BANK0 ] unsigned char 
 11113 ;; Return value:  Size  Location     Type
 11114 ;;                  1    wreg      void 
 11115 ;; Registers used:
 11116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11117 ;; Tracked objects:
 11118 ;;		On entry : 0/0
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11122 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11124 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11125 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11126 ;;Total ram usage:        7 bytes
 11127 ;; Hardware stack levels used:    1
 11128 ;; Hardware stack levels required when called:    8
 11129 ;; This function calls:
 11130 ;;		_writeData
 11131 ;; This function is called by:
 11132 ;;		_TM1650_fastPrintNum
 11133 ;;		_MENU_task
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           
 11138                           ;psect for function _TM1650_setDigit
 11139  1FAB                     _TM1650_setDigit:	
 11140                           
 11141                           ;incstack = 0
 11142                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11143                           ;TM1650_setDigit@digit stored from wreg
 11144  1FAB  0140               	movlb	0	; select bank0
 11145  1FAC  00BA               	movwf	TM1650_setDigit@digit
 11146                           
 11147                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
 11148  1FAD  0834               	movf	TM1650_setDigit@data,w
 11149  1FAE  3EE0               	addlw	low ((_charTable+65504)| (0+32768))
 11150  1FAF  0084               	movwf	4
 11151  1FB0  3097               	movlw	high ((_charTable+65504)| (0+32768))
 11152  1FB1  1803               	skipnc
 11153  1FB2  3E01               	addlw	1
 11154  1FB3  0085               	movwf	5
 11155  1FB4  0800               	movf	0,w	;code access
 11156  1FB5  00B7               	movwf	??_TM1650_setDigit
 11157  1FB6  0835               	movf	TM1650_setDigit@dp,w
 11158  1FB7  00B8               	movwf	??_TM1650_setDigit+1
 11159  1FB8  3006               	movlw	6
 11160  1FB9                     u5495:	
 11161  1FB9  35B8               	lslf	??_TM1650_setDigit+1,f
 11162  1FBA  3EFF               	addlw	-1
 11163  1FBB  1D03               	skipz
 11164  1FBC  2FB9               	goto	u5495
 11165  1FBD  3538               	lslf	??_TM1650_setDigit+1,w
 11166  1FBE  0437               	iorwf	??_TM1650_setDigit,w
 11167  1FBF  00B9               	movwf	??_TM1650_setDigit+2
 11168  1FC0  0839               	movf	??_TM1650_setDigit+2,w
 11169  1FC1  00AE               	movwf	writeData@data
 11170  1FC2  083A               	movf	TM1650_setDigit@digit,w
 11171  1FC3  3E34               	addlw	52
 11172  1FC4  319F  27E3         	fcall	_writeData
 11173  1FC6  0008               	return
 11174  1FC7                     __end_of_TM1650_setDigit:	
 11175                           
 11176                           	psect	text30
 11177  1EF5                     __ptext30:	
 11178 ;; *************** function _TM1650_enable *****************
 11179 ;; Defined at:
 11180 ;;		line 56 in file "tm1650.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;  enable          1    wreg     _Bool 
 11183 ;; Auto vars:     Size  Location     Type
 11184 ;;  enable          1   20[BANK0 ] _Bool 
 11185 ;; Return value:  Size  Location     Type
 11186 ;;                  1    wreg      void 
 11187 ;; Registers used:
 11188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11189 ;; Tracked objects:
 11190 ;;		On entry : 0/0
 11191 ;;		On exit  : 0/0
 11192 ;;		Unchanged: 0/0
 11193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11195 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11197 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11198 ;;Total ram usage:        1 bytes
 11199 ;; Hardware stack levels used:    1
 11200 ;; Hardware stack levels required when called:    8
 11201 ;; This function calls:
 11202 ;;		_writeData
 11203 ;; This function is called by:
 11204 ;;		_TM1650_init
 11205 ;;		_MENU_task
 11206 ;;		_adrControl_DMX
 11207 ;;		_dispInc
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           
 11212                           ;psect for function _TM1650_enable
 11213  1EF5                     _TM1650_enable:	
 11214                           
 11215                           ;incstack = 0
 11216                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11217                           ;TM1650_enable@enable stored from wreg
 11218  1EF5  0140               	movlb	0	; select bank0
 11219  1EF6  00B4               	movwf	TM1650_enable@enable
 11220                           
 11221                           ;tm1650.c: 57:     if(enable) {
 11222  1EF7  0834               	movf	TM1650_enable@enable,w
 11223  1EF8  1903               	btfsc	3,2
 11224  1EF9  2F03               	goto	l5717
 11225                           
 11226                           ;tm1650.c: 58:         writeData(0x24, 1);
 11227  1EFA  01AE               	clrf	writeData@data
 11228  1EFB  0AAE               	incf	writeData@data,f
 11229  1EFC  3024               	movlw	36
 11230  1EFD  319F  27E3         	fcall	_writeData
 11231                           
 11232                           ;tm1650.c: 59:         isOn = 1;
 11233  1EFF  0142               	movlb	2	; select bank2
 11234  1F00  01D5               	clrf	_isOn^(0+256)
 11235  1F01  0AD5               	incf	_isOn^(0+256),f
 11236                           
 11237                           ;tm1650.c: 60:     } else {
 11238  1F02  0008               	return
 11239  1F03                     l5717:	
 11240                           
 11241                           ;tm1650.c: 61:         writeData(0x24, 0);
 11242  1F03  01AE               	clrf	writeData@data
 11243  1F04  3024               	movlw	36
 11244  1F05  319F  27E3         	fcall	_writeData
 11245                           
 11246                           ;tm1650.c: 62:         isOn = 0;
 11247  1F07  0142               	movlb	2	; select bank2
 11248  1F08  01D5               	clrf	_isOn^(0+256)
 11249  1F09  0008               	return
 11250  1F0A                     __end_of_TM1650_enable:	
 11251                           
 11252                           	psect	text31
 11253  1FE3                     __ptext31:	
 11254 ;; *************** function _writeData *****************
 11255 ;; Defined at:
 11256 ;;		line 18 in file "tm1650.c"
 11257 ;; Parameters:    Size  Location     Type
 11258 ;;  address         1    wreg     unsigned char 
 11259 ;;  data            1   14[BANK0 ] unsigned char 
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;  address         1   18[BANK0 ] unsigned char 
 11262 ;;  status          1   19[BANK0 ] volatile enum E10866
 11263 ;; Return value:  Size  Location     Type
 11264 ;;                  1    wreg      void 
 11265 ;; Registers used:
 11266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11267 ;; Tracked objects:
 11268 ;;		On entry : 0/0
 11269 ;;		On exit  : 0/0
 11270 ;;		Unchanged: 0/0
 11271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11272 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11274 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11275 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11276 ;;Total ram usage:        6 bytes
 11277 ;; Hardware stack levels used:    1
 11278 ;; Hardware stack levels required when called:    7
 11279 ;; This function calls:
 11280 ;;		_I2C1_MasterWrite
 11281 ;; This function is called by:
 11282 ;;		_TM1650_setDigit
 11283 ;;		_TM1650_enable
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           
 11288                           ;psect for function _writeData
 11289  1FE3                     _writeData:	
 11290                           
 11291                           ;incstack = 0
 11292                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11293                           ;writeData@address stored from wreg
 11294  1FE3  0140               	movlb	0	; select bank0
 11295  1FE4  00B2               	movwf	writeData@address
 11296                           
 11297                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 11298  1FE5  3002               	movlw	2
 11299  1FE6  00AF               	movwf	??_writeData
 11300  1FE7  082F               	movf	??_writeData,w
 11301  1FE8  00B3               	movwf	writeData@status	;volatile
 11302                           
 11303                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
 11304  1FE9  01A7               	clrf	I2C1_MasterWrite@length
 11305  1FEA  0AA7               	incf	I2C1_MasterWrite@length,f
 11306  1FEB  0832               	movf	writeData@address,w
 11307  1FEC  00AF               	movwf	??_writeData
 11308  1FED  01B0               	clrf	??_writeData+1
 11309  1FEE  082F               	movf	??_writeData,w
 11310  1FEF  00A8               	movwf	I2C1_MasterWrite@address
 11311  1FF0  0830               	movf	??_writeData+1,w
 11312  1FF1  00A9               	movwf	I2C1_MasterWrite@address+1
 11313  1FF2  3033               	movlw	(low (writeData@status| 0))& (0+255)
 11314  1FF3  00B1               	movwf	??_writeData+2
 11315  1FF4  0831               	movf	??_writeData+2,w
 11316  1FF5  00AA               	movwf	I2C1_MasterWrite@pflag
 11317  1FF6  302E               	movlw	(low (writeData@data| 0))& (0+255)
 11318  1FF7  3191  2168  319F   	fcall	_I2C1_MasterWrite
 11319  1FFA                     l5387:	
 11320                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
 11321                           
 11322  1FFA  3002               	movlw	2
 11323  1FFB  0140               	movlb	0	; select bank0
 11324  1FFC  0633               	xorwf	writeData@status,w	;volatile
 11325  1FFD  1D03               	btfss	3,2
 11326  1FFE  0008               	return
 11327  1FFF  2FFA               	goto	l5387
 11328  2000                     __end_of_writeData:	
 11329                           
 11330                           	psect	text32
 11331  1168                     __ptext32:	
 11332 ;; *************** function _I2C1_MasterWrite *****************
 11333 ;; Defined at:
 11334 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;  pdata           1    wreg     PTR unsigned char 
 11337 ;;		 -> writeData@data(1), 
 11338 ;;  length          1    7[BANK0 ] unsigned char 
 11339 ;;  address         2    8[BANK0 ] unsigned short 
 11340 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 11341 ;;		 -> writeData@status(1), 
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 11344 ;;		 -> writeData@data(1), 
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  1    wreg      void 
 11347 ;; Registers used:
 11348 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11354 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11356 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11357 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11358 ;;Total ram usage:        7 bytes
 11359 ;; Hardware stack levels used:    1
 11360 ;; Hardware stack levels required when called:    6
 11361 ;; This function calls:
 11362 ;;		_I2C1_MasterTRBInsert
 11363 ;;		_I2C1_MasterWriteTRBBuild
 11364 ;; This function is called by:
 11365 ;;		_writeData
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           
 11370                           ;psect for function _I2C1_MasterWrite
 11371  1168                     _I2C1_MasterWrite:	
 11372                           
 11373                           ;incstack = 0
 11374                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11375                           ;I2C1_MasterWrite@pdata stored from wreg
 11376  1168  0140               	movlb	0	; select bank0
 11377  1169  00AD               	movwf	I2C1_MasterWrite@pdata
 11378                           
 11379                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 11380  116A  0142               	movlb	2	; select bank2
 11381  116B  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 11382  116C  298B               	goto	l5381
 11383                           
 11384                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 11385  116D  0140               	movlb	0	; select bank0
 11386  116E  082D               	movf	I2C1_MasterWrite@pdata,w
 11387  116F  00AB               	movwf	??_I2C1_MasterWrite
 11388  1170  082B               	movf	??_I2C1_MasterWrite,w
 11389  1171  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 11390  1172  0827               	movf	I2C1_MasterWrite@length,w
 11391  1173  00AC               	movwf	??_I2C1_MasterWrite+1
 11392  1174  082C               	movf	??_I2C1_MasterWrite+1,w
 11393  1175  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 11394  1176  0829               	movf	I2C1_MasterWrite@address+1,w
 11395  1177  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 11396  1178  0828               	movf	I2C1_MasterWrite@address,w
 11397  1179  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 11398  117A  30C6               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 11399  117B  3190  20AA  3191   	fcall	_I2C1_MasterWriteTRBBuild
 11400                           
 11401                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 11402  117E  30C6               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 11403  117F  0140               	movlb	0	; select bank0
 11404  1180  00AB               	movwf	??_I2C1_MasterWrite
 11405  1181  082B               	movf	??_I2C1_MasterWrite,w
 11406  1182  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 11407  1183  082A               	movf	I2C1_MasterWrite@pflag,w
 11408  1184  00AC               	movwf	??_I2C1_MasterWrite+1
 11409  1185  082C               	movf	??_I2C1_MasterWrite+1,w
 11410  1186  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 11411  1187  3001               	movlw	1
 11412  1188  3187  279C         	fcall	_I2C1_MasterTRBInsert
 11413                           
 11414                           ;mcc_generated_files/i2c1.c: 613:     }
 11415  118A  0008               	return
 11416  118B                     l5381:	
 11417                           
 11418                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11419  118B  0140               	movlb	0	; select bank0
 11420  118C  082A               	movf	I2C1_MasterWrite@pflag,w
 11421  118D  0086               	movwf	6
 11422  118E  0187               	clrf	7
 11423  118F  0181               	clrf	1
 11424  1190  0A81               	incf	1,f
 11425  1191  0008               	return
 11426  1192                     __end_of_I2C1_MasterWrite:	
 11427                           
 11428                           	psect	text33
 11429  10AA                     __ptext33:	
 11430 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 11431 ;; Defined at:
 11432 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;  ptrb            1    wreg     PTR struct .
 11435 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11436 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 11437 ;;		 -> writeData@data(1), 
 11438 ;;  length          1    1[BANK0 ] unsigned char 
 11439 ;;  address         2    2[BANK0 ] unsigned short 
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;  ptrb            1    6[BANK0 ] PTR struct .
 11442 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  1    wreg      void 
 11445 ;; Registers used:
 11446 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11452 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11455 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11456 ;;Total ram usage:        7 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:    4
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_I2C1_MasterWrite
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           
 11467                           ;psect for function _I2C1_MasterWriteTRBBuild
 11468  10AA                     _I2C1_MasterWriteTRBBuild:	
 11469                           
 11470                           ;incstack = 0
 11471                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 11472                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 11473  10AA  0140               	movlb	0	; select bank0
 11474  10AB  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 11475                           
 11476                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 11477  10AC  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 11478  10AD  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 11479  10AE  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 11480  10AF  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11481  10B0  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 11482  10B1  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 11483  10B2  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11484  10B3  0086               	movwf	6
 11485  10B4  3001               	movlw	1	; select bank2/3
 11486  10B5  0087               	movwf	7
 11487  10B6  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11488  10B7  3FC0               	movwi [0]fsr1
 11489  10B8  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 11490  10B9  3FC1               	movwi [1]fsr1
 11491                           
 11492                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 11493  10BA  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 11494  10BB  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11495  10BC  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11496  10BD  3E02               	addlw	2
 11497  10BE  0086               	movwf	6
 11498  10BF  3001               	movlw	1	; select bank2/3
 11499  10C0  0087               	movwf	7
 11500  10C1  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11501  10C2  0081               	movwf	1
 11502                           
 11503                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 11504  10C3  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 11505  10C4  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 11506  10C5  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 11507  10C6  3E03               	addlw	3
 11508  10C7  0086               	movwf	6
 11509  10C8  3001               	movlw	1	; select bank2/3
 11510  10C9  0087               	movwf	7
 11511  10CA  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 11512  10CB  0081               	movwf	1
 11513  10CC  0008               	return
 11514  10CD                     __end_of_I2C1_MasterWriteTRBBuild:	
 11515                           
 11516                           	psect	text34
 11517  079C                     __ptext34:	
 11518 ;; *************** function _I2C1_MasterTRBInsert *****************
 11519 ;; Defined at:
 11520 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 11521 ;; Parameters:    Size  Location     Type
 11522 ;;  count           1    wreg     unsigned char 
 11523 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 11524 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 11525 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 11526 ;;		 -> writeData@status(1), 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  count           1    3[BANK0 ] unsigned char 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  1    wreg      void 
 11531 ;; Registers used:
 11532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11540 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11541 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11542 ;;Total ram usage:        4 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; Hardware stack levels required when called:    5
 11545 ;; This function calls:
 11546 ;;		_I2C1_WaitForLastPacketToComplete
 11547 ;; This function is called by:
 11548 ;;		_I2C1_MasterWrite
 11549 ;;		_I2C1_MasterRead
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553                           
 11554                           ;psect for function _I2C1_MasterTRBInsert
 11555  079C                     _I2C1_MasterTRBInsert:	
 11556                           
 11557                           ;incstack = 0
 11558                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11559                           ;I2C1_MasterTRBInsert@count stored from wreg
 11560  079C  0140               	movlb	0	; select bank0
 11561  079D  00A3               	movwf	I2C1_MasterTRBInsert@count
 11562                           
 11563                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 11564  079E  0142               	movlb	2	; select bank2
 11565  079F  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 11566  07A0  2FDE               	goto	l5369
 11567                           
 11568                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 11569  07A1  3002               	movlw	2
 11570  07A2  0140               	movlb	0	; select bank0
 11571  07A3  00A2               	movwf	??_I2C1_MasterTRBInsert
 11572  07A4  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11573  07A5  0086               	movwf	6
 11574  07A6  0187               	clrf	7
 11575  07A7  0822               	movf	??_I2C1_MasterTRBInsert,w
 11576  07A8  0081               	movwf	1
 11577                           
 11578                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 11579  07A9  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 11580  07AA  00A2               	movwf	??_I2C1_MasterTRBInsert
 11581  07AB  0142               	movlb	2	; select bank2
 11582  07AC  0A20               	incf	_i2c1_object^(0+256),w
 11583  07AD  0086               	movwf	6
 11584  07AE  3001               	movlw	1	; select bank2/3
 11585  07AF  0087               	movwf	7
 11586  07B0  0140               	movlb	0	; select bank0
 11587  07B1  0822               	movf	??_I2C1_MasterTRBInsert,w
 11588  07B2  0081               	movwf	1
 11589                           
 11590                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 11591  07B3  0823               	movf	I2C1_MasterTRBInsert@count,w
 11592  07B4  00A2               	movwf	??_I2C1_MasterTRBInsert
 11593  07B5  0142               	movlb	2	; select bank2
 11594  07B6  0820               	movf	_i2c1_object^(0+256),w
 11595  07B7  0086               	movwf	6
 11596  07B8  3001               	movlw	1	; select bank2/3
 11597  07B9  0087               	movwf	7
 11598  07BA  0140               	movlb	0	; select bank0
 11599  07BB  0822               	movf	??_I2C1_MasterTRBInsert,w
 11600  07BC  0081               	movwf	1
 11601                           
 11602                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 11603  07BD  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11604  07BE  00A2               	movwf	??_I2C1_MasterTRBInsert
 11605  07BF  0142               	movlb	2	; select bank2
 11606  07C0  0820               	movf	_i2c1_object^(0+256),w
 11607  07C1  3E02               	addlw	2
 11608  07C2  0086               	movwf	6
 11609  07C3  3001               	movlw	1	; select bank2/3
 11610  07C4  0087               	movwf	7
 11611  07C5  0140               	movlb	0	; select bank0
 11612  07C6  0822               	movf	??_I2C1_MasterTRBInsert,w
 11613  07C7  0081               	movwf	1
 11614                           
 11615                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 11616  07C8  3003               	movlw	3
 11617  07C9  00A2               	movwf	??_I2C1_MasterTRBInsert
 11618  07CA  0822               	movf	??_I2C1_MasterTRBInsert,w
 11619  07CB  0142               	movlb	2	; select bank2
 11620  07CC  07A0               	addwf	_i2c1_object^(0+256),f
 11621                           
 11622                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 11623  07CD  0820               	movf	_i2c1_object^(0+256),w
 11624  07CE  3A60               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 11625  07CF  1D03               	skipz
 11626  07D0  2FD7               	goto	l5365
 11627                           
 11628                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 11629  07D1  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 11630  07D2  0140               	movlb	0	; select bank0
 11631  07D3  00A2               	movwf	??_I2C1_MasterTRBInsert
 11632  07D4  0822               	movf	??_I2C1_MasterTRBInsert,w
 11633  07D5  0142               	movlb	2	; select bank2
 11634  07D6  00A0               	movwf	_i2c1_object^(0+256)
 11635  07D7                     l5365:	
 11636                           
 11637                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 11638  07D7  10A2               	bcf	(_i2c1_object^(0+256)+2),1
 11639                           
 11640                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 11641  07D8  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 11642  07D9  0620               	xorwf	_i2c1_object^(0+256),w
 11643  07DA  1D03               	skipz
 11644  07DB  2FE4               	goto	l5371
 11645                           
 11646                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 11647  07DC  1422               	bsf	(_i2c1_object^(0+256)+2),0
 11648  07DD  2FE4               	goto	l5371
 11649  07DE                     l5369:	
 11650                           
 11651                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 11652  07DE  0140               	movlb	0	; select bank0
 11653  07DF  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11654  07E0  0086               	movwf	6
 11655  07E1  0187               	clrf	7
 11656  07E2  0181               	clrf	1
 11657  07E3  0A81               	incf	1,f
 11658  07E4                     l5371:	
 11659                           
 11660                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 11661  07E4  0140               	movlb	0	; select bank0
 11662  07E5  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 11663  07E6  0086               	movwf	6
 11664  07E7  0187               	clrf	7
 11665  07E8  3002               	movlw	2
 11666  07E9  0601               	xorwf	1,w
 11667  07EA  1D03               	btfss	3,2
 11668  07EB  0008               	return
 11669                           
 11670                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 11671  07EC  319E  2605         	fcall	_I2C1_WaitForLastPacketToComplete
 11672                           
 11673                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 11674  07EE  014E               	movlb	14	; select bank14
 11675  07EF  140F               	bsf	15,0	;volatile
 11676  07F0  0008               	return
 11677  07F1                     __end_of_I2C1_MasterTRBInsert:	
 11678                           
 11679                           	psect	text35
 11680  1E05                     __ptext35:	
 11681 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 11682 ;; Defined at:
 11683 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;		None
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      void 
 11690 ;; Registers used:
 11691 ;;		wreg, status,2, status,0
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11701 ;;Total ram usage:        0 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    4
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		_I2C1_MasterTRBInsert
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           
 11712                           ;psect for function _I2C1_WaitForLastPacketToComplete
 11713  1E05                     _I2C1_WaitForLastPacketToComplete:	
 11714  1E05                     l5351:	
 11715                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11716                           
 11717                           ;incstack = 0
 11718                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 11719                           
 11720                           
 11721                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 11722  1E05  0142               	movlb	2	; select bank2
 11723  1E06  085A               	movf	_i2c1_state^(0+256),w
 11724  1E07  1903               	btfsc	3,2
 11725  1E08  0008               	return
 11726  1E09  2E05               	goto	l5351
 11727  1E0A                     __end_of_I2C1_WaitForLastPacketToComplete:	
 11728                           
 11729                           	psect	text36
 11730  1089                     __ptext36:	
 11731 ;; *************** function _BUTTONS_isClicked *****************
 11732 ;; Defined at:
 11733 ;;		line 74 in file "buttons.c"
 11734 ;; Parameters:    Size  Location     Type
 11735 ;;  button          1    wreg     PTR struct .
 11736 ;;		 -> buttons(32), NULL(0), 
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;  button          1    3[BANK0 ] PTR struct .
 11739 ;;		 -> buttons(32), NULL(0), 
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  2    0[BANK0 ] int 
 11742 ;; Registers used:
 11743 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11744 ;; Tracked objects:
 11745 ;;		On entry : 0/0
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11749 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11752 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11753 ;;Total ram usage:        4 bytes
 11754 ;; Hardware stack levels used:    1
 11755 ;; Hardware stack levels required when called:    4
 11756 ;; This function calls:
 11757 ;;		Nothing
 11758 ;; This function is called by:
 11759 ;;		_menuButtons
 11760 ;;		_adrControl_DMX
 11761 ;;		_dispInc
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           
 11766                           ;psect for function _BUTTONS_isClicked
 11767  1089                     _BUTTONS_isClicked:	
 11768                           
 11769                           ;incstack = 0
 11770                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
 11771                           ;BUTTONS_isClicked@button stored from wreg
 11772  1089  0140               	movlb	0	; select bank0
 11773  108A  00A3               	movwf	BUTTONS_isClicked@button
 11774                           
 11775                           ;buttons.c: 75:     if (button->event == EVENT_PRESSED) {
 11776  108B  0823               	movf	BUTTONS_isClicked@button,w
 11777  108C  3E05               	addlw	5
 11778  108D  0086               	movwf	6
 11779  108E  3002               	movlw	2	; select bank4/5
 11780  108F  0087               	movwf	7
 11781  1090  0301               	decf	1,w
 11782  1091  1D03               	btfss	3,2
 11783  1092  289E               	goto	l5731
 11784                           
 11785                           ;buttons.c: 76:         button->event = EVENT_IDLE;
 11786  1093  0823               	movf	BUTTONS_isClicked@button,w
 11787  1094  3E05               	addlw	5
 11788  1095  0086               	movwf	6
 11789  1096  3002               	movlw	2	; select bank4/5
 11790  1097  0087               	movwf	7
 11791  1098  0181               	clrf	1
 11792  1099                     l5725:	
 11793                           
 11794                           ;buttons.c: 77:         return 1;
 11795  1099  3001               	movlw	1
 11796  109A  00A0               	movwf	?_BUTTONS_isClicked
 11797  109B  3000               	movlw	0
 11798  109C  00A1               	movwf	?_BUTTONS_isClicked+1
 11799  109D  0008               	return
 11800  109E                     l5731:	
 11801  109E  0823               	movf	BUTTONS_isClicked@button,w
 11802  109F  3E05               	addlw	5
 11803  10A0  0086               	movwf	6
 11804  10A1  3002               	movlw	2	; select bank4/5
 11805  10A2  0087               	movwf	7
 11806  10A3  3002               	movlw	2
 11807  10A4  0601               	xorwf	1,w
 11808  10A5  1903               	btfsc	3,2
 11809  10A6  2899               	goto	l5725
 11810                           
 11811                           ;buttons.c: 81:     return 0;
 11812  10A7  01A0               	clrf	?_BUTTONS_isClicked
 11813  10A8  01A1               	clrf	?_BUTTONS_isClicked+1
 11814  10A9  0008               	return
 11815  10AA                     __end_of_BUTTONS_isClicked:	
 11816                           
 11817                           	psect	text37
 11818  12ED                     __ptext37:	
 11819 ;; *************** function _LED_DMX *****************
 11820 ;; Defined at:
 11821 ;;		line 139 in file "led.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;		None
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;		None
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1    wreg      void 
 11828 ;; Registers used:
 11829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11837 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11838 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11839 ;;Total ram usage:       11 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:    5
 11842 ;; This function calls:
 11843 ;;		_LED_setColor
 11844 ;; This function is called by:
 11845 ;;		_MENU_task
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849                           
 11850                           ;psect for function _LED_DMX
 11851  12ED                     _LED_DMX:	
 11852                           
 11853                           ;led.c: 140:     LED_setColor(dmxData[address+1], dmxData[address+2], dmxData[address+3]
      +                          , dmxData[address+4]);
 11854                           
 11855                           ;incstack = 0
 11856                           ; Regs used in _LED_DMX: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11857  12ED  30F1               	movlw	241
 11858  12EE  0140               	movlb	0	; select bank0
 11859  12EF  00B6               	movwf	??_LED_DMX
 11860  12F0  3025               	movlw	37
 11861  12F1  00B7               	movwf	??_LED_DMX+1
 11862  12F2  087A               	movf	_address,w
 11863  12F3  0736               	addwf	??_LED_DMX,w
 11864  12F4  0086               	movwf	6
 11865  12F5  087B               	movf	_address+1,w
 11866  12F6  3D37               	addwfc	??_LED_DMX+1,w
 11867  12F7  0087               	movwf	7
 11868  12F8  0801               	movf	1,w
 11869  12F9  00B8               	movwf	??_LED_DMX+2
 11870  12FA  0838               	movf	??_LED_DMX+2,w
 11871  12FB  00A0               	movwf	LED_setColor@green
 11872  12FC  30F2               	movlw	242
 11873  12FD  00B9               	movwf	??_LED_DMX+3
 11874  12FE  3025               	movlw	37
 11875  12FF  00BA               	movwf	??_LED_DMX+4
 11876  1300  087A               	movf	_address,w
 11877  1301  0739               	addwf	??_LED_DMX+3,w
 11878  1302  0086               	movwf	6
 11879  1303  087B               	movf	_address+1,w
 11880  1304  3D3A               	addwfc	??_LED_DMX+4,w
 11881  1305  0087               	movwf	7
 11882  1306  0801               	movf	1,w
 11883  1307  00BB               	movwf	??_LED_DMX+5
 11884  1308  083B               	movf	??_LED_DMX+5,w
 11885  1309  00A1               	movwf	LED_setColor@white
 11886  130A  30F3               	movlw	243
 11887  130B  00BC               	movwf	??_LED_DMX+6
 11888  130C  3025               	movlw	37
 11889  130D  00BD               	movwf	??_LED_DMX+7
 11890  130E  087A               	movf	_address,w
 11891  130F  073C               	addwf	??_LED_DMX+6,w
 11892  1310  0086               	movwf	6
 11893  1311  087B               	movf	_address+1,w
 11894  1312  3D3D               	addwfc	??_LED_DMX+7,w
 11895  1313  0087               	movwf	7
 11896  1314  0801               	movf	1,w
 11897  1315  00BE               	movwf	??_LED_DMX+8
 11898  1316  083E               	movf	??_LED_DMX+8,w
 11899  1317  00A2               	movwf	LED_setColor@blue
 11900  1318  30F0               	movlw	240
 11901  1319  00BF               	movwf	??_LED_DMX+9
 11902  131A  3025               	movlw	37
 11903  131B  00C0               	movwf	??_LED_DMX+10
 11904  131C  087A               	movf	_address,w
 11905  131D  073F               	addwf	??_LED_DMX+9,w
 11906  131E  0086               	movwf	6
 11907  131F  087B               	movf	_address+1,w
 11908  1320  3D40               	addwfc	??_LED_DMX+10,w
 11909  1321  0087               	movwf	7
 11910  1322  0801               	movf	1,w
 11911  1323  3193  2326         	fcall	_LED_setColor
 11912  1325  0008               	return
 11913  1326                     __end_of_LED_DMX:	
 11914                           
 11915                           	psect	text38
 11916  1EAB                     __ptext38:	
 11917 ;; *************** function _LED_Beat *****************
 11918 ;; Defined at:
 11919 ;;		line 143 in file "led.c"
 11920 ;; Parameters:    Size  Location     Type
 11921 ;;		None
 11922 ;; Auto vars:     Size  Location     Type
 11923 ;;		None
 11924 ;; Return value:  Size  Location     Type
 11925 ;;                  1    wreg      void 
 11926 ;; Registers used:
 11927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11928 ;; Tracked objects:
 11929 ;;		On entry : 0/0
 11930 ;;		On exit  : 0/0
 11931 ;;		Unchanged: 0/0
 11932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11937 ;;Total ram usage:        0 bytes
 11938 ;; Hardware stack levels used:    1
 11939 ;; Hardware stack levels required when called:    9
 11940 ;; This function calls:
 11941 ;;		_BEAT_detected
 11942 ;;		_fadeColor
 11943 ;; This function is called by:
 11944 ;;		_MENU_task
 11945 ;; This function uses a non-reentrant model
 11946 ;;
 11947                           
 11948                           
 11949                           ;psect for function _LED_Beat
 11950  1EAB                     _LED_Beat:	
 11951                           
 11952                           ;led.c: 144:     if(BEAT_detected()) {
 11953                           
 11954                           ;incstack = 0
 11955                           ; Regs used in _LED_Beat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11956  1EAB  319E  263D  319E   	fcall	_BEAT_detected
 11957  1EAE  3A00               	xorlw	0
 11958  1EAF  1903               	skipnz
 11959  1EB0  2EB4               	goto	l6097
 11960                           
 11961                           ;led.c: 145:         changeColor = 1;
 11962  1EB1  0142               	movlb	2	; select bank2
 11963  1EB2  01CB               	clrf	_changeColor^(0+256)
 11964  1EB3  0ACB               	incf	_changeColor^(0+256),f
 11965  1EB4                     l6097:	
 11966                           
 11967                           ;led.c: 147:     if(changeColor) {
 11968  1EB4  0142               	movlb	2	; select bank2
 11969  1EB5  084B               	movf	_changeColor^(0+256),w
 11970  1EB6  1903               	btfsc	3,2
 11971  1EB7  0008               	return
 11972                           
 11973                           ;led.c: 148:         fadeColor();
 11974  1EB8  3194  243C         	fcall	_fadeColor
 11975  1EBA  0008               	return
 11976  1EBB                     __end_of_LED_Beat:	
 11977                           
 11978                           	psect	text39
 11979  143C                     __ptext39:	
 11980 ;; *************** function _fadeColor *****************
 11981 ;; Defined at:
 11982 ;;		line 115 in file "led.c"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;		None
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;  time            2   60[BANK1 ] unsigned short 
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      void 
 11989 ;; Registers used:
 11990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11991 ;; Tracked objects:
 11992 ;;		On entry : 0/0
 11993 ;;		On exit  : 0/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11997 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11998 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11999 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12000 ;;Total ram usage:        4 bytes
 12001 ;; Hardware stack levels used:    1
 12002 ;; Hardware stack levels required when called:    8
 12003 ;; This function calls:
 12004 ;;		_CLOCK_getTime
 12005 ;;		_LED_setHSL
 12006 ;; This function is called by:
 12007 ;;		_LED_Beat
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011                           
 12012                           ;psect for function _fadeColor
 12013  143C                     _fadeColor:	
 12014                           
 12015                           ;led.c: 116:     time_t time = CLOCK_getTime();
 12016                           
 12017                           ;incstack = 0
 12018                           ; Regs used in _fadeColor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12019  143C  319E  262B  3194   	fcall	_CLOCK_getTime
 12020  143F  0140               	movlb	0	; select bank0
 12021  1440  0821               	movf	?_CLOCK_getTime+1,w
 12022  1441  0141               	movlb	1	; select bank1
 12023  1442  00DD               	movwf	(fadeColor@time+1)^(0+128)
 12024  1443  0140               	movlb	0	; select bank0
 12025  1444  0820               	movf	?_CLOCK_getTime,w
 12026  1445  0141               	movlb	1	; select bank1
 12027  1446  00DC               	movwf	fadeColor@time^(0+128)
 12028                           
 12029                           ;led.c: 118:     if (time - lastTime < 10)
 12030  1447  0142               	movlb	2	; select bank2
 12031  1448  0837               	movf	led@lastTime^(0+256),w
 12032  1449  0141               	movlb	1	; select bank1
 12033  144A  025C               	subwf	fadeColor@time^(0+128),w
 12034  144B  00DA               	movwf	??_fadeColor^(0+128)
 12035  144C  0142               	movlb	2	; select bank2
 12036  144D  0838               	movf	(led@lastTime+1)^(0+256),w
 12037  144E  0141               	movlb	1	; select bank1
 12038  144F  3B5D               	subwfb	(fadeColor@time+1)^(0+128),w
 12039  1450  00DB               	movwf	(??_fadeColor+1)^(0+128)
 12040  1451  3000               	movlw	0
 12041  1452  025B               	subwf	(??_fadeColor+1)^(0+128),w
 12042  1453  300A               	movlw	10
 12043  1454  1903               	skipnz
 12044  1455  025A               	subwf	??_fadeColor^(0+128),w
 12045  1456  1C03               	btfss	3,0
 12046  1457  0008               	return
 12047                           
 12048                           ;led.c: 121:     lastTime = time;
 12049  1458  085D               	movf	(fadeColor@time+1)^(0+128),w
 12050  1459  0142               	movlb	2	; select bank2
 12051  145A  00B8               	movwf	(led@lastTime+1)^(0+256)
 12052  145B  0141               	movlb	1	; select bank1
 12053  145C  085C               	movf	fadeColor@time^(0+128),w
 12054  145D  0142               	movlb	2	; select bank2
 12055  145E  00B7               	movwf	led@lastTime^(0+256)
 12056                           
 12057                           ;led.c: 123:     if(color.H == 360) {
 12058  145F  3068               	movlw	104
 12059  1460  0143               	movlb	3	; select bank3
 12060  1461  0654               	xorwf	_color^(0+384),w
 12061  1462  1D03               	skipz
 12062  1463  2C6A               	goto	l5833
 12063  1464  0355               	decf	(_color+1)^(0+384),w
 12064  1465  1D03               	btfss	3,2
 12065  1466  2C6A               	goto	l5833
 12066                           
 12067                           ;led.c: 124:         color.H = 0;
 12068  1467  01D4               	clrf	_color^(0+384)
 12069  1468  01D5               	clrf	(_color+1)^(0+384)
 12070                           
 12071                           ;led.c: 125:     } else {
 12072  1469  2C6E               	goto	l1000
 12073  146A                     l5833:	
 12074                           
 12075                           ;led.c: 126:         color.H += 1;
 12076  146A  3001               	movlw	1
 12077  146B  07D4               	addwf	_color^(0+384),f
 12078  146C  3000               	movlw	0
 12079  146D  3DD5               	addwfc	(_color+1)^(0+384),f
 12080  146E                     l1000:	
 12081                           ;led.c: 127:     }
 12082                           
 12083                           
 12084                           ;led.c: 128:     fadeAmmount -= 1;
 12085  146E  30FF               	movlw	255
 12086  146F  0142               	movlb	2	; select bank2
 12087  1470  07E2               	addwf	_fadeAmmount^(0+256),f
 12088  1471  30FF               	movlw	255
 12089  1472  3DE3               	addwfc	(_fadeAmmount+1)^(0+256),f
 12090                           
 12091                           ;led.c: 129:     if(fadeAmmount == 0) {
 12092  1473  0862               	movf	_fadeAmmount^(0+256),w
 12093  1474  0463               	iorwf	(_fadeAmmount+1)^(0+256),w
 12094  1475  1D03               	btfss	3,2
 12095  1476  2C7C               	goto	l5841
 12096                           
 12097                           ;led.c: 130:         fadeAmmount = 20;
 12098  1477  3014               	movlw	20
 12099  1478  00E2               	movwf	_fadeAmmount^(0+256)
 12100  1479  3000               	movlw	0
 12101  147A  00E3               	movwf	(_fadeAmmount^(0+256)+1)
 12102                           
 12103                           ;led.c: 131:         changeColor = 0;
 12104  147B  01CB               	clrf	_changeColor^(0+256)
 12105  147C                     l5841:	
 12106                           
 12107                           ;led.c: 133:     LED_setHSL(color);
 12108  147C  30D4               	movlw	low _color
 12109  147D  0086               	movwf	6
 12110  147E  3001               	movlw	high _color
 12111  147F  0087               	movwf	7
 12112  1480  30AF               	movlw	low LED_setHSL@hsl
 12113  1481  0084               	movwf	4
 12114  1482  3000               	movlw	high LED_setHSL@hsl
 12115  1483  0085               	movwf	5
 12116  1484  300A               	movlw	10
 12117  1485  0141               	movlb	1	; select bank1
 12118  1486  00DA               	movwf	??_fadeColor^(0+128)
 12119  1487                     u6170:	
 12120  1487  0016               	moviw fsr1++
 12121  1488  001A               	movwi fsr0++
 12122  1489  0BDA               	decfsz	??_fadeColor^(0+128),f
 12123  148A  2C87               	goto	u6170
 12124  148B  3180  2098         	fcall	_LED_setHSL
 12125  148D  0008               	return
 12126  148E                     __end_of_fadeColor:	
 12127                           
 12128                           	psect	text40
 12129  0098                     __ptext40:	
 12130 ;; *************** function _LED_setHSL *****************
 12131 ;; Defined at:
 12132 ;;		line 86 in file "led.c"
 12133 ;; Parameters:    Size  Location     Type
 12134 ;;  hsl            10   15[BANK1 ] struct HSL
 12135 ;; Auto vars:     Size  Location     Type
 12136 ;;  v2              4   51[BANK1 ] float 
 12137 ;;  hue             4   47[BANK1 ] float 
 12138 ;;  v1              4   43[BANK1 ] float 
 12139 ;;  rgb             3   55[BANK1 ] struct RGB
 12140 ;; Return value:  Size  Location     Type
 12141 ;;                  1    wreg      void 
 12142 ;; Registers used:
 12143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12144 ;; Tracked objects:
 12145 ;;		On entry : 0/0
 12146 ;;		On exit  : 0/0
 12147 ;;		Unchanged: 0/0
 12148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12149 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12150 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12151 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12152 ;;      Totals:         0       0      43       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12153 ;;Total ram usage:       43 bytes
 12154 ;; Hardware stack levels used:    1
 12155 ;; Hardware stack levels required when called:    7
 12156 ;; This function calls:
 12157 ;;		_HueToRGB
 12158 ;;		_LED_setColor
 12159 ;;		___fladd
 12160 ;;		___fldiv
 12161 ;;		___fleq
 12162 ;;		___flge
 12163 ;;		___flmul
 12164 ;;		___flsub
 12165 ;;		___fltol
 12166 ;;		___xxtofl
 12167 ;; This function is called by:
 12168 ;;		_fadeColor
 12169 ;;		_cycleColors
 12170 ;;		_pulseColors
 12171 ;; This function uses a non-reentrant model
 12172 ;;
 12173                           
 12174                           
 12175                           ;psect for function _LED_setHSL
 12176  0098                     _LED_setHSL:	
 12177                           
 12178                           ;led.c: 87:  struct RGB rgb;;led.c: 89:  if (hsl.S == 0)
 12179                           
 12180                           ;incstack = 0
 12181                           ; Regs used in _LED_setHSL: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12182  0098  3002               	movlw	2
 12183  0099  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12184  009A  0086               	movwf	6
 12185  009B  0187               	clrf	7
 12186  009C  3F40               	moviw [0]fsr1
 12187  009D  0140               	movlb	0	; select bank0
 12188  009E  00A0               	movwf	___fleq@ff1
 12189  009F  3F41               	moviw [1]fsr1
 12190  00A0  00A1               	movwf	___fleq@ff1+1
 12191  00A1  3F42               	moviw [2]fsr1
 12192  00A2  00A2               	movwf	___fleq@ff1+2
 12193  00A3  3F43               	moviw [3]fsr1
 12194  00A4  00A3               	movwf	___fleq@ff1+3
 12195  00A5  3000               	movlw	0
 12196  00A6  00A7               	movwf	___fleq@ff2+3
 12197  00A7  3000               	movlw	0
 12198  00A8  00A6               	movwf	___fleq@ff2+2
 12199  00A9  3000               	movlw	0
 12200  00AA  00A5               	movwf	___fleq@ff2+1
 12201  00AB  3000               	movlw	0
 12202  00AC  00A4               	movwf	___fleq@ff2
 12203  00AD  3193  23A8  3180   	fcall	___fleq
 12204  00B0  1C03               	btfss	3,0
 12205  00B1  28F0               	goto	l5745
 12206                           
 12207                           ;led.c: 90:  {;led.c: 91:   rgb.R = rgb.G = rgb.B = (unsigned char)(hsl.L * 255);
 12208  00B2  3001               	movlw	1
 12209  00B3  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 12210  00B4  0086               	movwf	6
 12211  00B5  0187               	clrf	7
 12212  00B6  3002               	movlw	2
 12213  00B7  3ED7               	addlw	(low (LED_setHSL@rgb| 0))& (0+255)
 12214  00B8  0084               	movwf	4
 12215  00B9  0185               	clrf	5
 12216  00BA  0141               	movlb	1	; select bank1
 12217  00BB  0838               	movf	((LED_setHSL@hsl+3)^(0+128)+6),w
 12218  00BC  0140               	movlb	0	; select bank0
 12219  00BD  00C4               	movwf	___flmul@a+3
 12220  00BE  0141               	movlb	1	; select bank1
 12221  00BF  0837               	movf	((LED_setHSL@hsl+2)^(0+128)+6),w
 12222  00C0  0140               	movlb	0	; select bank0
 12223  00C1  00C3               	movwf	___flmul@a+2
 12224  00C2  0141               	movlb	1	; select bank1
 12225  00C3  0836               	movf	((LED_setHSL@hsl+1)^(0+128)+6),w
 12226  00C4  0140               	movlb	0	; select bank0
 12227  00C5  00C2               	movwf	___flmul@a+1
 12228  00C6  0141               	movlb	1	; select bank1
 12229  00C7  0835               	movf	(LED_setHSL@hsl^(0+128)+6),w
 12230  00C8  0140               	movlb	0	; select bank0
 12231  00C9  00C1               	movwf	___flmul@a
 12232  00CA  3043               	movlw	67
 12233  00CB  00C0               	movwf	___flmul@b+3
 12234  00CC  307F               	movlw	127
 12235  00CD  00BF               	movwf	___flmul@b+2
 12236  00CE  3000               	movlw	0
 12237  00CF  00BE               	movwf	___flmul@b+1
 12238  00D0  3000               	movlw	0
 12239  00D1  00BD               	movwf	___flmul@b
 12240  00D2  3183  23F6  3180   	fcall	___flmul
 12241  00D5  0140               	movlb	0	; select bank0
 12242  00D6  0840               	movf	?___flmul+3,w
 12243  00D7  0141               	movlb	1	; select bank1
 12244  00D8  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12245  00D9  0140               	movlb	0	; select bank0
 12246  00DA  083F               	movf	?___flmul+2,w
 12247  00DB  0141               	movlb	1	; select bank1
 12248  00DC  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12249  00DD  0140               	movlb	0	; select bank0
 12250  00DE  083E               	movf	?___flmul+1,w
 12251  00DF  0141               	movlb	1	; select bank1
 12252  00E0  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12253  00E1  0140               	movlb	0	; select bank0
 12254  00E2  083D               	movf	?___flmul,w
 12255  00E3  0141               	movlb	1	; select bank1
 12256  00E4  00A4               	movwf	___fltol@f1^(0+128)
 12257  00E5  3188  2008  3180   	fcall	___fltol
 12258  00E8  0141               	movlb	1	; select bank1
 12259  00E9  0824               	movf	?___fltol^(0+128),w
 12260  00EA  3F80               	movwi [0]fsr0
 12261  00EB  3FC0               	movwi [0]fsr1
 12262  00EC  00B9               	movwf	??_LED_setHSL^(0+128)
 12263  00ED  0839               	movf	??_LED_setHSL^(0+128),w
 12264  00EE  00D7               	movwf	LED_setHSL@rgb^(0+128)
 12265                           
 12266                           ;led.c: 92:  }
 12267  00EF  2BE5               	goto	l5769
 12268  00F0                     l5745:	
 12269                           
 12270                           ;led.c: 94:  {;led.c: 95:   float v1, v2;;led.c: 96:   float hue = (float)hsl.H / 360;
 12271  00F0  3043               	movlw	67
 12272  00F1  0140               	movlb	0	; select bank0
 12273  00F2  00B1               	movwf	___fldiv@a+3
 12274  00F3  30B4               	movlw	180
 12275  00F4  00B0               	movwf	___fldiv@a+2
 12276  00F5  3000               	movlw	0
 12277  00F6  00AF               	movwf	___fldiv@a+1
 12278  00F7  3000               	movlw	0
 12279  00F8  00AE               	movwf	___fldiv@a
 12280  00F9  0141               	movlb	1	; select bank1
 12281  00FA  082F               	movf	LED_setHSL@hsl^(0+128),w
 12282  00FB  0140               	movlb	0	; select bank0
 12283  00FC  00A0               	movwf	___xxtofl@val
 12284  00FD  0141               	movlb	1	; select bank1
 12285  00FE  0830               	movf	(LED_setHSL@hsl+1)^(0+128),w
 12286  00FF  0140               	movlb	0	; select bank0
 12287  0100  00A1               	movwf	___xxtofl@val+1
 12288  0101  0D89               	rlf	9,f
 12289  0102  3B89               	subwfb	9,f
 12290  0103  0989               	comf	9,f
 12291  0104  00A2               	movwf	___xxtofl@val+2
 12292  0105  00A3               	movwf	___xxtofl@val+3
 12293  0106  3001               	movlw	1
 12294  0107  3197  276A  3180   	fcall	___xxtofl
 12295  010A  0140               	movlb	0	; select bank0
 12296  010B  0823               	movf	?___xxtofl+3,w
 12297  010C  00B5               	movwf	___fldiv@b+3
 12298  010D  0822               	movf	?___xxtofl+2,w
 12299  010E  00B4               	movwf	___fldiv@b+2
 12300  010F  0821               	movf	?___xxtofl+1,w
 12301  0110  00B3               	movwf	___fldiv@b+1
 12302  0111  0820               	movf	?___xxtofl,w
 12303  0112  00B2               	movwf	___fldiv@b
 12304  0113  3186  2622  3180   	fcall	___fldiv
 12305  0116  0140               	movlb	0	; select bank0
 12306  0117  0831               	movf	?___fldiv+3,w
 12307  0118  0141               	movlb	1	; select bank1
 12308  0119  00D2               	movwf	(LED_setHSL@hue+3)^(0+128)
 12309  011A  0140               	movlb	0	; select bank0
 12310  011B  0830               	movf	?___fldiv+2,w
 12311  011C  0141               	movlb	1	; select bank1
 12312  011D  00D1               	movwf	(LED_setHSL@hue+2)^(0+128)
 12313  011E  0140               	movlb	0	; select bank0
 12314  011F  082F               	movf	?___fldiv+1,w
 12315  0120  0141               	movlb	1	; select bank1
 12316  0121  00D0               	movwf	(LED_setHSL@hue+1)^(0+128)
 12317  0122  0140               	movlb	0	; select bank0
 12318  0123  082E               	movf	?___fldiv,w
 12319  0124  0141               	movlb	1	; select bank1
 12320  0125  00CF               	movwf	LED_setHSL@hue^(0+128)
 12321                           
 12322                           ;led.c: 98:   v2 = (hsl.L < 0.5) ? (hsl.L * (1 + hsl.S)) : ((hsl.L + hsl.S) - (hsl.L * h
      +                          sl.S));
 12323  0126  3006               	movlw	6
 12324  0127  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12325  0128  0086               	movwf	6
 12326  0129  0187               	clrf	7
 12327  012A  3F40               	moviw [0]fsr1
 12328  012B  0140               	movlb	0	; select bank0
 12329  012C  00D7               	movwf	___flge@ff1
 12330  012D  3F41               	moviw [1]fsr1
 12331  012E  00D8               	movwf	___flge@ff1+1
 12332  012F  3F42               	moviw [2]fsr1
 12333  0130  00D9               	movwf	___flge@ff1+2
 12334  0131  3F43               	moviw [3]fsr1
 12335  0132  00DA               	movwf	___flge@ff1+3
 12336  0133  303F               	movlw	63
 12337  0134  00DE               	movwf	___flge@ff2+3
 12338  0135  3000               	movlw	0
 12339  0136  00DD               	movwf	___flge@ff2+2
 12340  0137  3000               	movlw	0
 12341  0138  00DC               	movwf	___flge@ff2+1
 12342  0139  3000               	movlw	0
 12343  013A  00DB               	movwf	___flge@ff2
 12344  013B  3195  25E4  3180   	fcall	___flge
 12345  013E  1C03               	btfss	3,0
 12346  013F  29B3               	goto	l5751
 12347  0140  3002               	movlw	2
 12348  0141  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12349  0142  0086               	movwf	6
 12350  0143  0187               	clrf	7
 12351  0144  3F40               	moviw [0]fsr1
 12352  0145  0140               	movlb	0	; select bank0
 12353  0146  00A9               	movwf	___fladd@b
 12354  0147  3F41               	moviw [1]fsr1
 12355  0148  00AA               	movwf	___fladd@b+1
 12356  0149  3F42               	moviw [2]fsr1
 12357  014A  00AB               	movwf	___fladd@b+2
 12358  014B  3F43               	moviw [3]fsr1
 12359  014C  00AC               	movwf	___fladd@b+3
 12360  014D  3006               	movlw	6
 12361  014E  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12362  014F  0086               	movwf	6
 12363  0150  0187               	clrf	7
 12364  0151  3F40               	moviw [0]fsr1
 12365  0152  00AD               	movwf	___fladd@a
 12366  0153  3F41               	moviw [1]fsr1
 12367  0154  00AE               	movwf	___fladd@a+1
 12368  0155  3F42               	moviw [2]fsr1
 12369  0156  00AF               	movwf	___fladd@a+2
 12370  0157  3F43               	moviw [3]fsr1
 12371  0158  00B0               	movwf	___fladd@a+3
 12372  0159  318C  243A  3180   	fcall	___fladd
 12373  015C  0140               	movlb	0	; select bank0
 12374  015D  082C               	movf	?___fladd+3,w
 12375  015E  0141               	movlb	1	; select bank1
 12376  015F  00BE               	movwf	(_LED_setHSL$2897+3)^(0+128)
 12377  0160  0140               	movlb	0	; select bank0
 12378  0161  082B               	movf	?___fladd+2,w
 12379  0162  0141               	movlb	1	; select bank1
 12380  0163  00BD               	movwf	(_LED_setHSL$2897+2)^(0+128)
 12381  0164  0140               	movlb	0	; select bank0
 12382  0165  082A               	movf	?___fladd+1,w
 12383  0166  0141               	movlb	1	; select bank1
 12384  0167  00BC               	movwf	(_LED_setHSL$2897+1)^(0+128)
 12385  0168  0140               	movlb	0	; select bank0
 12386  0169  0829               	movf	?___fladd,w
 12387  016A  0141               	movlb	1	; select bank1
 12388  016B  00BB               	movwf	_LED_setHSL$2897^(0+128)
 12389  016C  3002               	movlw	2
 12390  016D  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12391  016E  0086               	movwf	6
 12392  016F  0187               	clrf	7
 12393  0170  3F40               	moviw [0]fsr1
 12394  0171  0140               	movlb	0	; select bank0
 12395  0172  00BD               	movwf	___flmul@b
 12396  0173  3F41               	moviw [1]fsr1
 12397  0174  00BE               	movwf	___flmul@b+1
 12398  0175  3F42               	moviw [2]fsr1
 12399  0176  00BF               	movwf	___flmul@b+2
 12400  0177  3F43               	moviw [3]fsr1
 12401  0178  00C0               	movwf	___flmul@b+3
 12402  0179  3006               	movlw	6
 12403  017A  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12404  017B  0086               	movwf	6
 12405  017C  0187               	clrf	7
 12406  017D  3F40               	moviw [0]fsr1
 12407  017E  00C1               	movwf	___flmul@a
 12408  017F  3F41               	moviw [1]fsr1
 12409  0180  00C2               	movwf	___flmul@a+1
 12410  0181  3F42               	moviw [2]fsr1
 12411  0182  00C3               	movwf	___flmul@a+2
 12412  0183  3F43               	moviw [3]fsr1
 12413  0184  00C4               	movwf	___flmul@a+3
 12414  0185  3183  23F6  3180   	fcall	___flmul
 12415  0188  0140               	movlb	0	; select bank0
 12416  0189  0840               	movf	?___flmul+3,w
 12417  018A  00DA               	movwf	___flsub@a+3
 12418  018B  083F               	movf	?___flmul+2,w
 12419  018C  00D9               	movwf	___flsub@a+2
 12420  018D  083E               	movf	?___flmul+1,w
 12421  018E  00D8               	movwf	___flsub@a+1
 12422  018F  083D               	movf	?___flmul,w
 12423  0190  00D7               	movwf	___flsub@a
 12424  0191  0141               	movlb	1	; select bank1
 12425  0192  083E               	movf	(_LED_setHSL$2897+3)^(0+128),w
 12426  0193  0140               	movlb	0	; select bank0
 12427  0194  00DE               	movwf	___flsub@b+3
 12428  0195  0141               	movlb	1	; select bank1
 12429  0196  083D               	movf	(_LED_setHSL$2897+2)^(0+128),w
 12430  0197  0140               	movlb	0	; select bank0
 12431  0198  00DD               	movwf	___flsub@b+2
 12432  0199  0141               	movlb	1	; select bank1
 12433  019A  083C               	movf	(_LED_setHSL$2897+1)^(0+128),w
 12434  019B  0140               	movlb	0	; select bank0
 12435  019C  00DC               	movwf	___flsub@b+1
 12436  019D  0141               	movlb	1	; select bank1
 12437  019E  083B               	movf	_LED_setHSL$2897^(0+128),w
 12438  019F  0140               	movlb	0	; select bank0
 12439  01A0  00DB               	movwf	___flsub@b
 12440  01A1  3190  200A  3180   	fcall	___flsub
 12441  01A4  0140               	movlb	0	; select bank0
 12442  01A5  085A               	movf	?___flsub+3,w
 12443  01A6  0141               	movlb	1	; select bank1
 12444  01A7  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12445  01A8  0140               	movlb	0	; select bank0
 12446  01A9  0859               	movf	?___flsub+2,w
 12447  01AA  0141               	movlb	1	; select bank1
 12448  01AB  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12449  01AC  0140               	movlb	0	; select bank0
 12450  01AD  0858               	movf	?___flsub+1,w
 12451  01AE  0141               	movlb	1	; select bank1
 12452  01AF  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12453  01B0  0140               	movlb	0	; select bank0
 12454  01B1  0857               	movf	?___flsub,w
 12455  01B2  29F1               	goto	L2
 12456  01B3                     l5751:	
 12457  01B3  3006               	movlw	6
 12458  01B4  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12459  01B5  0086               	movwf	6
 12460  01B6  0187               	clrf	7
 12461  01B7  3F40               	moviw [0]fsr1
 12462  01B8  0140               	movlb	0	; select bank0
 12463  01B9  00BD               	movwf	___flmul@b
 12464  01BA  3F41               	moviw [1]fsr1
 12465  01BB  00BE               	movwf	___flmul@b+1
 12466  01BC  3F42               	moviw [2]fsr1
 12467  01BD  00BF               	movwf	___flmul@b+2
 12468  01BE  3F43               	moviw [3]fsr1
 12469  01BF  00C0               	movwf	___flmul@b+3
 12470  01C0  303F               	movlw	63
 12471  01C1  00AC               	movwf	___fladd@b+3
 12472  01C2  3080               	movlw	128
 12473  01C3  00AB               	movwf	___fladd@b+2
 12474  01C4  3000               	movlw	0
 12475  01C5  00AA               	movwf	___fladd@b+1
 12476  01C6  3000               	movlw	0
 12477  01C7  00A9               	movwf	___fladd@b
 12478  01C8  3002               	movlw	2
 12479  01C9  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12480  01CA  0086               	movwf	6
 12481  01CB  0187               	clrf	7
 12482  01CC  3F40               	moviw [0]fsr1
 12483  01CD  00AD               	movwf	___fladd@a
 12484  01CE  3F41               	moviw [1]fsr1
 12485  01CF  00AE               	movwf	___fladd@a+1
 12486  01D0  3F42               	moviw [2]fsr1
 12487  01D1  00AF               	movwf	___fladd@a+2
 12488  01D2  3F43               	moviw [3]fsr1
 12489  01D3  00B0               	movwf	___fladd@a+3
 12490  01D4  318C  243A  3180   	fcall	___fladd
 12491  01D7  0140               	movlb	0	; select bank0
 12492  01D8  082C               	movf	?___fladd+3,w
 12493  01D9  00C4               	movwf	___flmul@a+3
 12494  01DA  082B               	movf	?___fladd+2,w
 12495  01DB  00C3               	movwf	___flmul@a+2
 12496  01DC  082A               	movf	?___fladd+1,w
 12497  01DD  00C2               	movwf	___flmul@a+1
 12498  01DE  0829               	movf	?___fladd,w
 12499  01DF  00C1               	movwf	___flmul@a
 12500  01E0  3183  23F6  3180   	fcall	___flmul
 12501  01E3  0140               	movlb	0	; select bank0
 12502  01E4  0840               	movf	?___flmul+3,w
 12503  01E5  0141               	movlb	1	; select bank1
 12504  01E6  00D6               	movwf	(LED_setHSL@v2+3)^(0+128)
 12505  01E7  0140               	movlb	0	; select bank0
 12506  01E8  083F               	movf	?___flmul+2,w
 12507  01E9  0141               	movlb	1	; select bank1
 12508  01EA  00D5               	movwf	(LED_setHSL@v2+2)^(0+128)
 12509  01EB  0140               	movlb	0	; select bank0
 12510  01EC  083E               	movf	?___flmul+1,w
 12511  01ED  0141               	movlb	1	; select bank1
 12512  01EE  00D4               	movwf	(LED_setHSL@v2+1)^(0+128)
 12513  01EF  0140               	movlb	0	; select bank0
 12514  01F0  083D               	movf	?___flmul,w
 12515  01F1                     L2:	
 12516  01F1  0141               	movlb	1	; select bank1
 12517  01F2  00D3               	movwf	LED_setHSL@v2^(0+128)
 12518                           
 12519                           ;led.c: 99:   v1 = 2 * hsl.L - v2;
 12520  01F3  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12521  01F4  0140               	movlb	0	; select bank0
 12522  01F5  00DA               	movwf	___flsub@a+3
 12523  01F6  0141               	movlb	1	; select bank1
 12524  01F7  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12525  01F8  0140               	movlb	0	; select bank0
 12526  01F9  00D9               	movwf	___flsub@a+2
 12527  01FA  0141               	movlb	1	; select bank1
 12528  01FB  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12529  01FC  0140               	movlb	0	; select bank0
 12530  01FD  00D8               	movwf	___flsub@a+1
 12531  01FE  0141               	movlb	1	; select bank1
 12532  01FF  0853               	movf	LED_setHSL@v2^(0+128),w
 12533  0200  0140               	movlb	0	; select bank0
 12534  0201  00D7               	movwf	___flsub@a
 12535  0202  3040               	movlw	64
 12536  0203  00C0               	movwf	___flmul@b+3
 12537  0204  3000               	movlw	0
 12538  0205  00BF               	movwf	___flmul@b+2
 12539  0206  3000               	movlw	0
 12540  0207  00BE               	movwf	___flmul@b+1
 12541  0208  3000               	movlw	0
 12542  0209  00BD               	movwf	___flmul@b
 12543  020A  3006               	movlw	6
 12544  020B  3EAF               	addlw	(low (LED_setHSL@hsl| 0))& (0+255)
 12545  020C  0086               	movwf	6
 12546  020D  0187               	clrf	7
 12547  020E  3F40               	moviw [0]fsr1
 12548  020F  00C1               	movwf	___flmul@a
 12549  0210  3F41               	moviw [1]fsr1
 12550  0211  00C2               	movwf	___flmul@a+1
 12551  0212  3F42               	moviw [2]fsr1
 12552  0213  00C3               	movwf	___flmul@a+2
 12553  0214  3F43               	moviw [3]fsr1
 12554  0215  00C4               	movwf	___flmul@a+3
 12555  0216  3183  23F6  3180   	fcall	___flmul
 12556  0219  0140               	movlb	0	; select bank0
 12557  021A  0840               	movf	?___flmul+3,w
 12558  021B  00DE               	movwf	___flsub@b+3
 12559  021C  083F               	movf	?___flmul+2,w
 12560  021D  00DD               	movwf	___flsub@b+2
 12561  021E  083E               	movf	?___flmul+1,w
 12562  021F  00DC               	movwf	___flsub@b+1
 12563  0220  083D               	movf	?___flmul,w
 12564  0221  00DB               	movwf	___flsub@b
 12565  0222  3190  200A  3180   	fcall	___flsub
 12566  0225  0140               	movlb	0	; select bank0
 12567  0226  085A               	movf	?___flsub+3,w
 12568  0227  0141               	movlb	1	; select bank1
 12569  0228  00CE               	movwf	(LED_setHSL@v1+3)^(0+128)
 12570  0229  0140               	movlb	0	; select bank0
 12571  022A  0859               	movf	?___flsub+2,w
 12572  022B  0141               	movlb	1	; select bank1
 12573  022C  00CD               	movwf	(LED_setHSL@v1+2)^(0+128)
 12574  022D  0140               	movlb	0	; select bank0
 12575  022E  0858               	movf	?___flsub+1,w
 12576  022F  0141               	movlb	1	; select bank1
 12577  0230  00CC               	movwf	(LED_setHSL@v1+1)^(0+128)
 12578  0231  0140               	movlb	0	; select bank0
 12579  0232  0857               	movf	?___flsub,w
 12580  0233  0141               	movlb	1	; select bank1
 12581  0234  00CB               	movwf	LED_setHSL@v1^(0+128)
 12582                           
 12583                           ;led.c: 101:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12584  0235  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12585  0236  0140               	movlb	0	; select bank0
 12586  0237  00B0               	movwf	___fladd@a+3
 12587  0238  0141               	movlb	1	; select bank1
 12588  0239  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12589  023A  0140               	movlb	0	; select bank0
 12590  023B  00AF               	movwf	___fladd@a+2
 12591  023C  0141               	movlb	1	; select bank1
 12592  023D  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12593  023E  0140               	movlb	0	; select bank0
 12594  023F  00AE               	movwf	___fladd@a+1
 12595  0240  0141               	movlb	1	; select bank1
 12596  0241  084F               	movf	LED_setHSL@hue^(0+128),w
 12597  0242  0140               	movlb	0	; select bank0
 12598  0243  00AD               	movwf	___fladd@a
 12599  0244  303E               	movlw	62
 12600  0245  00AC               	movwf	___fladd@b+3
 12601  0246  30AA               	movlw	170
 12602  0247  00AB               	movwf	___fladd@b+2
 12603  0248  30AA               	movlw	170
 12604  0249  00AA               	movwf	___fladd@b+1
 12605  024A  30AB               	movlw	171
 12606  024B  00A9               	movwf	___fladd@b
 12607  024C  318C  243A  3180   	fcall	___fladd
 12608  024F  0140               	movlb	0	; select bank0
 12609  0250  082C               	movf	?___fladd+3,w
 12610  0251  0141               	movlb	1	; select bank1
 12611  0252  00C6               	movwf	(_LED_setHSL$2898+3)^(0+128)
 12612  0253  0140               	movlb	0	; select bank0
 12613  0254  082B               	movf	?___fladd+2,w
 12614  0255  0141               	movlb	1	; select bank1
 12615  0256  00C5               	movwf	(_LED_setHSL$2898+2)^(0+128)
 12616  0257  0140               	movlb	0	; select bank0
 12617  0258  082A               	movf	?___fladd+1,w
 12618  0259  0141               	movlb	1	; select bank1
 12619  025A  00C4               	movwf	(_LED_setHSL$2898+1)^(0+128)
 12620  025B  0140               	movlb	0	; select bank0
 12621  025C  0829               	movf	?___fladd,w
 12622  025D  0141               	movlb	1	; select bank1
 12623  025E  00C3               	movwf	_LED_setHSL$2898^(0+128)
 12624                           
 12625                           ;led.c: 101:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12626  025F  0846               	movf	(_LED_setHSL$2898+3)^(0+128),w
 12627  0260  0140               	movlb	0	; select bank0
 12628  0261  00EE               	movwf	HueToRGB@vH+3
 12629  0262  0141               	movlb	1	; select bank1
 12630  0263  0845               	movf	(_LED_setHSL$2898+2)^(0+128),w
 12631  0264  0140               	movlb	0	; select bank0
 12632  0265  00ED               	movwf	HueToRGB@vH+2
 12633  0266  0141               	movlb	1	; select bank1
 12634  0267  0844               	movf	(_LED_setHSL$2898+1)^(0+128),w
 12635  0268  0140               	movlb	0	; select bank0
 12636  0269  00EC               	movwf	HueToRGB@vH+1
 12637  026A  0141               	movlb	1	; select bank1
 12638  026B  0843               	movf	_LED_setHSL$2898^(0+128),w
 12639  026C  0140               	movlb	0	; select bank0
 12640  026D  00EB               	movwf	HueToRGB@vH
 12641  026E  0141               	movlb	1	; select bank1
 12642  026F  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12643  0270  0140               	movlb	0	; select bank0
 12644  0271  00EA               	movwf	HueToRGB@v2+3
 12645  0272  0141               	movlb	1	; select bank1
 12646  0273  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12647  0274  0140               	movlb	0	; select bank0
 12648  0275  00E9               	movwf	HueToRGB@v2+2
 12649  0276  0141               	movlb	1	; select bank1
 12650  0277  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12651  0278  0140               	movlb	0	; select bank0
 12652  0279  00E8               	movwf	HueToRGB@v2+1
 12653  027A  0141               	movlb	1	; select bank1
 12654  027B  0853               	movf	LED_setHSL@v2^(0+128),w
 12655  027C  0140               	movlb	0	; select bank0
 12656  027D  00E7               	movwf	HueToRGB@v2
 12657  027E  0141               	movlb	1	; select bank1
 12658  027F  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12659  0280  0140               	movlb	0	; select bank0
 12660  0281  00E6               	movwf	HueToRGB@v1+3
 12661  0282  0141               	movlb	1	; select bank1
 12662  0283  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12663  0284  0140               	movlb	0	; select bank0
 12664  0285  00E5               	movwf	HueToRGB@v1+2
 12665  0286  0141               	movlb	1	; select bank1
 12666  0287  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12667  0288  0140               	movlb	0	; select bank0
 12668  0289  00E4               	movwf	HueToRGB@v1+1
 12669  028A  0141               	movlb	1	; select bank1
 12670  028B  084B               	movf	LED_setHSL@v1^(0+128),w
 12671  028C  0140               	movlb	0	; select bank0
 12672  028D  00E3               	movwf	HueToRGB@v1
 12673  028E  318E  261C  3180   	fcall	_HueToRGB
 12674  0291  0140               	movlb	0	; select bank0
 12675  0292  0866               	movf	?_HueToRGB+3,w
 12676  0293  0141               	movlb	1	; select bank1
 12677  0294  00CA               	movwf	(_LED_setHSL$2899+3)^(0+128)
 12678  0295  0140               	movlb	0	; select bank0
 12679  0296  0865               	movf	?_HueToRGB+2,w
 12680  0297  0141               	movlb	1	; select bank1
 12681  0298  00C9               	movwf	(_LED_setHSL$2899+2)^(0+128)
 12682  0299  0140               	movlb	0	; select bank0
 12683  029A  0864               	movf	?_HueToRGB+1,w
 12684  029B  0141               	movlb	1	; select bank1
 12685  029C  00C8               	movwf	(_LED_setHSL$2899+1)^(0+128)
 12686  029D  0140               	movlb	0	; select bank0
 12687  029E  0863               	movf	?_HueToRGB,w
 12688  029F  0141               	movlb	1	; select bank1
 12689  02A0  00C7               	movwf	_LED_setHSL$2899^(0+128)
 12690                           
 12691                           ;led.c: 101:   rgb.R = (unsigned char)(255 * HueToRGB(v1, v2, hue + (1.0f / 3)));
 12692  02A1  084A               	movf	(_LED_setHSL$2899+3)^(0+128),w
 12693  02A2  0140               	movlb	0	; select bank0
 12694  02A3  00C4               	movwf	___flmul@a+3
 12695  02A4  0141               	movlb	1	; select bank1
 12696  02A5  0849               	movf	(_LED_setHSL$2899+2)^(0+128),w
 12697  02A6  0140               	movlb	0	; select bank0
 12698  02A7  00C3               	movwf	___flmul@a+2
 12699  02A8  0141               	movlb	1	; select bank1
 12700  02A9  0848               	movf	(_LED_setHSL$2899+1)^(0+128),w
 12701  02AA  0140               	movlb	0	; select bank0
 12702  02AB  00C2               	movwf	___flmul@a+1
 12703  02AC  0141               	movlb	1	; select bank1
 12704  02AD  0847               	movf	_LED_setHSL$2899^(0+128),w
 12705  02AE  0140               	movlb	0	; select bank0
 12706  02AF  00C1               	movwf	___flmul@a
 12707  02B0  3043               	movlw	67
 12708  02B1  00C0               	movwf	___flmul@b+3
 12709  02B2  307F               	movlw	127
 12710  02B3  00BF               	movwf	___flmul@b+2
 12711  02B4  3000               	movlw	0
 12712  02B5  00BE               	movwf	___flmul@b+1
 12713  02B6  3000               	movlw	0
 12714  02B7  00BD               	movwf	___flmul@b
 12715  02B8  3183  23F6  3180   	fcall	___flmul
 12716  02BB  0140               	movlb	0	; select bank0
 12717  02BC  0840               	movf	?___flmul+3,w
 12718  02BD  0141               	movlb	1	; select bank1
 12719  02BE  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12720  02BF  0140               	movlb	0	; select bank0
 12721  02C0  083F               	movf	?___flmul+2,w
 12722  02C1  0141               	movlb	1	; select bank1
 12723  02C2  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12724  02C3  0140               	movlb	0	; select bank0
 12725  02C4  083E               	movf	?___flmul+1,w
 12726  02C5  0141               	movlb	1	; select bank1
 12727  02C6  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12728  02C7  0140               	movlb	0	; select bank0
 12729  02C8  083D               	movf	?___flmul,w
 12730  02C9  0141               	movlb	1	; select bank1
 12731  02CA  00A4               	movwf	___fltol@f1^(0+128)
 12732  02CB  3188  2008  3180   	fcall	___fltol
 12733  02CE  0141               	movlb	1	; select bank1
 12734  02CF  0824               	movf	?___fltol^(0+128),w
 12735  02D0  00B9               	movwf	??_LED_setHSL^(0+128)
 12736  02D1  0839               	movf	??_LED_setHSL^(0+128),w
 12737  02D2  00D7               	movwf	LED_setHSL@rgb^(0+128)
 12738                           
 12739                           ;led.c: 102:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12740  02D3  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12741  02D4  0140               	movlb	0	; select bank0
 12742  02D5  00EE               	movwf	HueToRGB@vH+3
 12743  02D6  0141               	movlb	1	; select bank1
 12744  02D7  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12745  02D8  0140               	movlb	0	; select bank0
 12746  02D9  00ED               	movwf	HueToRGB@vH+2
 12747  02DA  0141               	movlb	1	; select bank1
 12748  02DB  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12749  02DC  0140               	movlb	0	; select bank0
 12750  02DD  00EC               	movwf	HueToRGB@vH+1
 12751  02DE  0141               	movlb	1	; select bank1
 12752  02DF  084F               	movf	LED_setHSL@hue^(0+128),w
 12753  02E0  0140               	movlb	0	; select bank0
 12754  02E1  00EB               	movwf	HueToRGB@vH
 12755  02E2  0141               	movlb	1	; select bank1
 12756  02E3  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12757  02E4  0140               	movlb	0	; select bank0
 12758  02E5  00EA               	movwf	HueToRGB@v2+3
 12759  02E6  0141               	movlb	1	; select bank1
 12760  02E7  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12761  02E8  0140               	movlb	0	; select bank0
 12762  02E9  00E9               	movwf	HueToRGB@v2+2
 12763  02EA  0141               	movlb	1	; select bank1
 12764  02EB  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12765  02EC  0140               	movlb	0	; select bank0
 12766  02ED  00E8               	movwf	HueToRGB@v2+1
 12767  02EE  0141               	movlb	1	; select bank1
 12768  02EF  0853               	movf	LED_setHSL@v2^(0+128),w
 12769  02F0  0140               	movlb	0	; select bank0
 12770  02F1  00E7               	movwf	HueToRGB@v2
 12771  02F2  0141               	movlb	1	; select bank1
 12772  02F3  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12773  02F4  0140               	movlb	0	; select bank0
 12774  02F5  00E6               	movwf	HueToRGB@v1+3
 12775  02F6  0141               	movlb	1	; select bank1
 12776  02F7  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12777  02F8  0140               	movlb	0	; select bank0
 12778  02F9  00E5               	movwf	HueToRGB@v1+2
 12779  02FA  0141               	movlb	1	; select bank1
 12780  02FB  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12781  02FC  0140               	movlb	0	; select bank0
 12782  02FD  00E4               	movwf	HueToRGB@v1+1
 12783  02FE  0141               	movlb	1	; select bank1
 12784  02FF  084B               	movf	LED_setHSL@v1^(0+128),w
 12785  0300  0140               	movlb	0	; select bank0
 12786  0301  00E3               	movwf	HueToRGB@v1
 12787  0302  318E  261C  3180   	fcall	_HueToRGB
 12788  0305  0140               	movlb	0	; select bank0
 12789  0306  0866               	movf	?_HueToRGB+3,w
 12790  0307  0141               	movlb	1	; select bank1
 12791  0308  00C2               	movwf	(_LED_setHSL$2900+3)^(0+128)
 12792  0309  0140               	movlb	0	; select bank0
 12793  030A  0865               	movf	?_HueToRGB+2,w
 12794  030B  0141               	movlb	1	; select bank1
 12795  030C  00C1               	movwf	(_LED_setHSL$2900+2)^(0+128)
 12796  030D  0140               	movlb	0	; select bank0
 12797  030E  0864               	movf	?_HueToRGB+1,w
 12798  030F  0141               	movlb	1	; select bank1
 12799  0310  00C0               	movwf	(_LED_setHSL$2900+1)^(0+128)
 12800  0311  0140               	movlb	0	; select bank0
 12801  0312  0863               	movf	?_HueToRGB,w
 12802  0313  0141               	movlb	1	; select bank1
 12803  0314  00BF               	movwf	_LED_setHSL$2900^(0+128)
 12804                           
 12805                           ;led.c: 102:   rgb.G = (unsigned char)(255 * HueToRGB(v1, v2, hue));
 12806  0315  0842               	movf	(_LED_setHSL$2900+3)^(0+128),w
 12807  0316  0140               	movlb	0	; select bank0
 12808  0317  00C4               	movwf	___flmul@a+3
 12809  0318  0141               	movlb	1	; select bank1
 12810  0319  0841               	movf	(_LED_setHSL$2900+2)^(0+128),w
 12811  031A  0140               	movlb	0	; select bank0
 12812  031B  00C3               	movwf	___flmul@a+2
 12813  031C  0141               	movlb	1	; select bank1
 12814  031D  0840               	movf	(_LED_setHSL$2900+1)^(0+128),w
 12815  031E  0140               	movlb	0	; select bank0
 12816  031F  00C2               	movwf	___flmul@a+1
 12817  0320  0141               	movlb	1	; select bank1
 12818  0321  083F               	movf	_LED_setHSL$2900^(0+128),w
 12819  0322  0140               	movlb	0	; select bank0
 12820  0323  00C1               	movwf	___flmul@a
 12821  0324  3043               	movlw	67
 12822  0325  00C0               	movwf	___flmul@b+3
 12823  0326  307F               	movlw	127
 12824  0327  00BF               	movwf	___flmul@b+2
 12825  0328  3000               	movlw	0
 12826  0329  00BE               	movwf	___flmul@b+1
 12827  032A  3000               	movlw	0
 12828  032B  00BD               	movwf	___flmul@b
 12829  032C  3183  23F6  3180   	fcall	___flmul
 12830  032F  0140               	movlb	0	; select bank0
 12831  0330  0840               	movf	?___flmul+3,w
 12832  0331  0141               	movlb	1	; select bank1
 12833  0332  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12834  0333  0140               	movlb	0	; select bank0
 12835  0334  083F               	movf	?___flmul+2,w
 12836  0335  0141               	movlb	1	; select bank1
 12837  0336  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12838  0337  0140               	movlb	0	; select bank0
 12839  0338  083E               	movf	?___flmul+1,w
 12840  0339  0141               	movlb	1	; select bank1
 12841  033A  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12842  033B  0140               	movlb	0	; select bank0
 12843  033C  083D               	movf	?___flmul,w
 12844  033D  0141               	movlb	1	; select bank1
 12845  033E  00A4               	movwf	___fltol@f1^(0+128)
 12846  033F  3188  2008  3180   	fcall	___fltol
 12847  0342  0141               	movlb	1	; select bank1
 12848  0343  0824               	movf	?___fltol^(0+128),w
 12849  0344  00B9               	movwf	??_LED_setHSL^(0+128)
 12850  0345  0839               	movf	??_LED_setHSL^(0+128),w
 12851  0346  00D8               	movwf	(LED_setHSL@rgb^(0+128)+1)
 12852                           
 12853                           ;led.c: 103:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12854  0347  0852               	movf	(LED_setHSL@hue+3)^(0+128),w
 12855  0348  0140               	movlb	0	; select bank0
 12856  0349  00B0               	movwf	___fladd@a+3
 12857  034A  0141               	movlb	1	; select bank1
 12858  034B  0851               	movf	(LED_setHSL@hue+2)^(0+128),w
 12859  034C  0140               	movlb	0	; select bank0
 12860  034D  00AF               	movwf	___fladd@a+2
 12861  034E  0141               	movlb	1	; select bank1
 12862  034F  0850               	movf	(LED_setHSL@hue+1)^(0+128),w
 12863  0350  0140               	movlb	0	; select bank0
 12864  0351  00AE               	movwf	___fladd@a+1
 12865  0352  0141               	movlb	1	; select bank1
 12866  0353  084F               	movf	LED_setHSL@hue^(0+128),w
 12867  0354  0140               	movlb	0	; select bank0
 12868  0355  00AD               	movwf	___fladd@a
 12869  0356  30BE               	movlw	190
 12870  0357  00AC               	movwf	___fladd@b+3
 12871  0358  30AA               	movlw	170
 12872  0359  00AB               	movwf	___fladd@b+2
 12873  035A  30AA               	movlw	170
 12874  035B  00AA               	movwf	___fladd@b+1
 12875  035C  30AB               	movlw	171
 12876  035D  00A9               	movwf	___fladd@b
 12877  035E  318C  243A  3180   	fcall	___fladd
 12878  0361  0140               	movlb	0	; select bank0
 12879  0362  082C               	movf	?___fladd+3,w
 12880  0363  0141               	movlb	1	; select bank1
 12881  0364  00C6               	movwf	(_LED_setHSL$2898+3)^(0+128)
 12882  0365  0140               	movlb	0	; select bank0
 12883  0366  082B               	movf	?___fladd+2,w
 12884  0367  0141               	movlb	1	; select bank1
 12885  0368  00C5               	movwf	(_LED_setHSL$2898+2)^(0+128)
 12886  0369  0140               	movlb	0	; select bank0
 12887  036A  082A               	movf	?___fladd+1,w
 12888  036B  0141               	movlb	1	; select bank1
 12889  036C  00C4               	movwf	(_LED_setHSL$2898+1)^(0+128)
 12890  036D  0140               	movlb	0	; select bank0
 12891  036E  0829               	movf	?___fladd,w
 12892  036F  0141               	movlb	1	; select bank1
 12893  0370  00C3               	movwf	_LED_setHSL$2898^(0+128)
 12894                           
 12895                           ;led.c: 103:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12896  0371  0846               	movf	(_LED_setHSL$2898+3)^(0+128),w
 12897  0372  0140               	movlb	0	; select bank0
 12898  0373  00EE               	movwf	HueToRGB@vH+3
 12899  0374  0141               	movlb	1	; select bank1
 12900  0375  0845               	movf	(_LED_setHSL$2898+2)^(0+128),w
 12901  0376  0140               	movlb	0	; select bank0
 12902  0377  00ED               	movwf	HueToRGB@vH+2
 12903  0378  0141               	movlb	1	; select bank1
 12904  0379  0844               	movf	(_LED_setHSL$2898+1)^(0+128),w
 12905  037A  0140               	movlb	0	; select bank0
 12906  037B  00EC               	movwf	HueToRGB@vH+1
 12907  037C  0141               	movlb	1	; select bank1
 12908  037D  0843               	movf	_LED_setHSL$2898^(0+128),w
 12909  037E  0140               	movlb	0	; select bank0
 12910  037F  00EB               	movwf	HueToRGB@vH
 12911  0380  0141               	movlb	1	; select bank1
 12912  0381  0856               	movf	(LED_setHSL@v2+3)^(0+128),w
 12913  0382  0140               	movlb	0	; select bank0
 12914  0383  00EA               	movwf	HueToRGB@v2+3
 12915  0384  0141               	movlb	1	; select bank1
 12916  0385  0855               	movf	(LED_setHSL@v2+2)^(0+128),w
 12917  0386  0140               	movlb	0	; select bank0
 12918  0387  00E9               	movwf	HueToRGB@v2+2
 12919  0388  0141               	movlb	1	; select bank1
 12920  0389  0854               	movf	(LED_setHSL@v2+1)^(0+128),w
 12921  038A  0140               	movlb	0	; select bank0
 12922  038B  00E8               	movwf	HueToRGB@v2+1
 12923  038C  0141               	movlb	1	; select bank1
 12924  038D  0853               	movf	LED_setHSL@v2^(0+128),w
 12925  038E  0140               	movlb	0	; select bank0
 12926  038F  00E7               	movwf	HueToRGB@v2
 12927  0390  0141               	movlb	1	; select bank1
 12928  0391  084E               	movf	(LED_setHSL@v1+3)^(0+128),w
 12929  0392  0140               	movlb	0	; select bank0
 12930  0393  00E6               	movwf	HueToRGB@v1+3
 12931  0394  0141               	movlb	1	; select bank1
 12932  0395  084D               	movf	(LED_setHSL@v1+2)^(0+128),w
 12933  0396  0140               	movlb	0	; select bank0
 12934  0397  00E5               	movwf	HueToRGB@v1+2
 12935  0398  0141               	movlb	1	; select bank1
 12936  0399  084C               	movf	(LED_setHSL@v1+1)^(0+128),w
 12937  039A  0140               	movlb	0	; select bank0
 12938  039B  00E4               	movwf	HueToRGB@v1+1
 12939  039C  0141               	movlb	1	; select bank1
 12940  039D  084B               	movf	LED_setHSL@v1^(0+128),w
 12941  039E  0140               	movlb	0	; select bank0
 12942  039F  00E3               	movwf	HueToRGB@v1
 12943  03A0  318E  261C  3180   	fcall	_HueToRGB
 12944  03A3  0140               	movlb	0	; select bank0
 12945  03A4  0866               	movf	?_HueToRGB+3,w
 12946  03A5  0141               	movlb	1	; select bank1
 12947  03A6  00CA               	movwf	(_LED_setHSL$2899+3)^(0+128)
 12948  03A7  0140               	movlb	0	; select bank0
 12949  03A8  0865               	movf	?_HueToRGB+2,w
 12950  03A9  0141               	movlb	1	; select bank1
 12951  03AA  00C9               	movwf	(_LED_setHSL$2899+2)^(0+128)
 12952  03AB  0140               	movlb	0	; select bank0
 12953  03AC  0864               	movf	?_HueToRGB+1,w
 12954  03AD  0141               	movlb	1	; select bank1
 12955  03AE  00C8               	movwf	(_LED_setHSL$2899+1)^(0+128)
 12956  03AF  0140               	movlb	0	; select bank0
 12957  03B0  0863               	movf	?_HueToRGB,w
 12958  03B1  0141               	movlb	1	; select bank1
 12959  03B2  00C7               	movwf	_LED_setHSL$2899^(0+128)
 12960                           
 12961                           ;led.c: 103:   rgb.B = (unsigned char)(255 * HueToRGB(v1, v2, hue - (1.0f / 3)));
 12962  03B3  084A               	movf	(_LED_setHSL$2899+3)^(0+128),w
 12963  03B4  0140               	movlb	0	; select bank0
 12964  03B5  00C4               	movwf	___flmul@a+3
 12965  03B6  0141               	movlb	1	; select bank1
 12966  03B7  0849               	movf	(_LED_setHSL$2899+2)^(0+128),w
 12967  03B8  0140               	movlb	0	; select bank0
 12968  03B9  00C3               	movwf	___flmul@a+2
 12969  03BA  0141               	movlb	1	; select bank1
 12970  03BB  0848               	movf	(_LED_setHSL$2899+1)^(0+128),w
 12971  03BC  0140               	movlb	0	; select bank0
 12972  03BD  00C2               	movwf	___flmul@a+1
 12973  03BE  0141               	movlb	1	; select bank1
 12974  03BF  0847               	movf	_LED_setHSL$2899^(0+128),w
 12975  03C0  0140               	movlb	0	; select bank0
 12976  03C1  00C1               	movwf	___flmul@a
 12977  03C2  3043               	movlw	67
 12978  03C3  00C0               	movwf	___flmul@b+3
 12979  03C4  307F               	movlw	127
 12980  03C5  00BF               	movwf	___flmul@b+2
 12981  03C6  3000               	movlw	0
 12982  03C7  00BE               	movwf	___flmul@b+1
 12983  03C8  3000               	movlw	0
 12984  03C9  00BD               	movwf	___flmul@b
 12985  03CA  3183  23F6  3180   	fcall	___flmul
 12986  03CD  0140               	movlb	0	; select bank0
 12987  03CE  0840               	movf	?___flmul+3,w
 12988  03CF  0141               	movlb	1	; select bank1
 12989  03D0  00A7               	movwf	(___fltol@f1+3)^(0+128)
 12990  03D1  0140               	movlb	0	; select bank0
 12991  03D2  083F               	movf	?___flmul+2,w
 12992  03D3  0141               	movlb	1	; select bank1
 12993  03D4  00A6               	movwf	(___fltol@f1+2)^(0+128)
 12994  03D5  0140               	movlb	0	; select bank0
 12995  03D6  083E               	movf	?___flmul+1,w
 12996  03D7  0141               	movlb	1	; select bank1
 12997  03D8  00A5               	movwf	(___fltol@f1+1)^(0+128)
 12998  03D9  0140               	movlb	0	; select bank0
 12999  03DA  083D               	movf	?___flmul,w
 13000  03DB  0141               	movlb	1	; select bank1
 13001  03DC  00A4               	movwf	___fltol@f1^(0+128)
 13002  03DD  3188  2008  3180   	fcall	___fltol
 13003  03E0  0141               	movlb	1	; select bank1
 13004  03E1  0824               	movf	?___fltol^(0+128),w
 13005  03E2  00B9               	movwf	??_LED_setHSL^(0+128)
 13006  03E3  0839               	movf	??_LED_setHSL^(0+128),w
 13007  03E4  00D9               	movwf	(LED_setHSL@rgb^(0+128)+2)
 13008  03E5                     l5769:	
 13009                           
 13010                           ;led.c: 106:  LED_setColor(rgb.R, rgb.G, rgb.B, 0);
 13011  03E5  0858               	movf	(LED_setHSL@rgb^(0+128)+1),w
 13012  03E6  00B9               	movwf	??_LED_setHSL^(0+128)
 13013  03E7  0839               	movf	??_LED_setHSL^(0+128),w
 13014  03E8  0140               	movlb	0	; select bank0
 13015  03E9  00A0               	movwf	LED_setColor@green
 13016  03EA  0141               	movlb	1	; select bank1
 13017  03EB  0859               	movf	(LED_setHSL@rgb^(0+128)+2),w
 13018  03EC  00BA               	movwf	(??_LED_setHSL+1)^(0+128)
 13019  03ED  083A               	movf	(??_LED_setHSL+1)^(0+128),w
 13020  03EE  0140               	movlb	0	; select bank0
 13021  03EF  00A1               	movwf	LED_setColor@white
 13022  03F0  01A2               	clrf	LED_setColor@blue
 13023  03F1  0141               	movlb	1	; select bank1
 13024  03F2  0857               	movf	LED_setHSL@rgb^(0+128),w
 13025  03F3  3193  2326         	fcall	_LED_setColor
 13026  03F5  0008               	return
 13027  03F6                     __end_of_LED_setHSL:	
 13028                           
 13029                           	psect	text41
 13030  176A                     __ptext41:	
 13031 ;; *************** function ___xxtofl *****************
 13032 ;; Defined at:
 13033 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;  sign            1    wreg     unsigned char 
 13036 ;;  val             4    0[BANK0 ] long 
 13037 ;; Auto vars:     Size  Location     Type
 13038 ;;  sign            1    8[BANK0 ] unsigned char 
 13039 ;;  arg             4   10[BANK0 ] unsigned long 
 13040 ;;  exp             1    9[BANK0 ] unsigned char 
 13041 ;; Return value:  Size  Location     Type
 13042 ;;                  4    0[BANK0 ] unsigned char 
 13043 ;; Registers used:
 13044 ;;		wreg, status,2, status,0
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13050 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13051 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13052 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13053 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13054 ;;Total ram usage:       14 bytes
 13055 ;; Hardware stack levels used:    1
 13056 ;; Hardware stack levels required when called:    4
 13057 ;; This function calls:
 13058 ;;		Nothing
 13059 ;; This function is called by:
 13060 ;;		_LED_setHSL
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064                           
 13065                           ;psect for function ___xxtofl
 13066  176A                     ___xxtofl:	
 13067                           
 13068                           ;incstack = 0
 13069                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 13070                           ;___xxtofl@sign stored from wreg
 13071  176A  0140               	movlb	0	; select bank0
 13072  176B  00A8               	movwf	___xxtofl@sign
 13073  176C  0828               	movf	___xxtofl@sign,w
 13074  176D  1D03               	btfss	3,2
 13075  176E  1FA3               	btfss	___xxtofl@val+3,7
 13076  176F  2F80               	goto	l4375
 13077  1770  0920               	comf	___xxtofl@val,w
 13078  1771  00AA               	movwf	___xxtofl@arg
 13079  1772  0921               	comf	___xxtofl@val+1,w
 13080  1773  00AB               	movwf	___xxtofl@arg+1
 13081  1774  0922               	comf	___xxtofl@val+2,w
 13082  1775  00AC               	movwf	___xxtofl@arg+2
 13083  1776  0923               	comf	___xxtofl@val+3,w
 13084  1777  00AD               	movwf	___xxtofl@arg+3
 13085  1778  0AAA               	incf	___xxtofl@arg,f
 13086  1779  1903               	skipnz
 13087  177A  0AAB               	incf	___xxtofl@arg+1,f
 13088  177B  1903               	skipnz
 13089  177C  0AAC               	incf	___xxtofl@arg+2,f
 13090  177D  1903               	skipnz
 13091  177E  0AAD               	incf	___xxtofl@arg+3,f
 13092  177F  2F88               	goto	l1744
 13093  1780                     l4375:	
 13094  1780  0823               	movf	___xxtofl@val+3,w
 13095  1781  00AD               	movwf	___xxtofl@arg+3
 13096  1782  0822               	movf	___xxtofl@val+2,w
 13097  1783  00AC               	movwf	___xxtofl@arg+2
 13098  1784  0821               	movf	___xxtofl@val+1,w
 13099  1785  00AB               	movwf	___xxtofl@arg+1
 13100  1786  0820               	movf	___xxtofl@val,w
 13101  1787  00AA               	movwf	___xxtofl@arg
 13102  1788                     l1744:	
 13103  1788  0823               	movf	___xxtofl@val+3,w
 13104  1789  0422               	iorwf	___xxtofl@val+2,w
 13105  178A  0421               	iorwf	___xxtofl@val+1,w
 13106  178B  0420               	iorwf	___xxtofl@val,w
 13107  178C  1D03               	skipz
 13108  178D  2F97               	goto	l4381
 13109  178E  3000               	movlw	0
 13110  178F  00A3               	movwf	?___xxtofl+3
 13111  1790  3000               	movlw	0
 13112  1791  00A2               	movwf	?___xxtofl+2
 13113  1792  3000               	movlw	0
 13114  1793  00A1               	movwf	?___xxtofl+1
 13115  1794  3000               	movlw	0
 13116  1795  00A0               	movwf	?___xxtofl
 13117  1796  0008               	return
 13118  1797                     l4381:	
 13119  1797  3096               	movlw	150
 13120  1798  00A4               	movwf	??___xxtofl
 13121  1799  0824               	movf	??___xxtofl,w
 13122  179A  00A9               	movwf	___xxtofl@exp
 13123  179B                     l4385:	
 13124  179B  30FE               	movlw	254
 13125  179C  052D               	andwf	___xxtofl@arg+3,w
 13126  179D  1903               	btfsc	3,2
 13127  179E  2FBE               	goto	l1750
 13128  179F  3001               	movlw	1
 13129  17A0  00A4               	movwf	??___xxtofl
 13130  17A1  0824               	movf	??___xxtofl,w
 13131  17A2  07A9               	addwf	___xxtofl@exp,f
 13132  17A3  3001               	movlw	1
 13133  17A4                     u4205:	
 13134  17A4  36AD               	lsrf	___xxtofl@arg+3,f
 13135  17A5  0CAC               	rrf	___xxtofl@arg+2,f
 13136  17A6  0CAB               	rrf	___xxtofl@arg+1,f
 13137  17A7  0CAA               	rrf	___xxtofl@arg,f
 13138  17A8  0B89               	decfsz	9,f
 13139  17A9  2FA4               	goto	u4205
 13140  17AA  2F9B               	goto	l4385
 13141  17AB                     l4387:	
 13142  17AB  3001               	movlw	1
 13143  17AC  00A4               	movwf	??___xxtofl
 13144  17AD  0824               	movf	??___xxtofl,w
 13145  17AE  07A9               	addwf	___xxtofl@exp,f
 13146  17AF  3001               	movlw	1
 13147  17B0  07AA               	addwf	___xxtofl@arg,f
 13148  17B1  3000               	movlw	0
 13149  17B2  3DAB               	addwfc	___xxtofl@arg+1,f
 13150  17B3  3000               	movlw	0
 13151  17B4  3DAC               	addwfc	___xxtofl@arg+2,f
 13152  17B5  3000               	movlw	0
 13153  17B6  3DAD               	addwfc	___xxtofl@arg+3,f
 13154  17B7  3001               	movlw	1
 13155  17B8                     u4225:	
 13156  17B8  36AD               	lsrf	___xxtofl@arg+3,f
 13157  17B9  0CAC               	rrf	___xxtofl@arg+2,f
 13158  17BA  0CAB               	rrf	___xxtofl@arg+1,f
 13159  17BB  0CAA               	rrf	___xxtofl@arg,f
 13160  17BC  0B89               	decfsz	9,f
 13161  17BD  2FB8               	goto	u4225
 13162  17BE                     l1750:	
 13163  17BE  30FF               	movlw	255
 13164  17BF  052D               	andwf	___xxtofl@arg+3,w
 13165  17C0  1903               	btfsc	3,2
 13166  17C1  2FD0               	goto	l4395
 13167  17C2  2FAB               	goto	l4387
 13168  17C3                     l4397:	
 13169  17C3  3002               	movlw	2
 13170  17C4  0229               	subwf	___xxtofl@exp,w
 13171  17C5  1C03               	btfss	3,0
 13172  17C6  2FD2               	goto	l1757
 13173  17C7  3001               	movlw	1
 13174  17C8  02A9               	subwf	___xxtofl@exp,f
 13175  17C9  3001               	movlw	1
 13176  17CA                     u4245:	
 13177  17CA  35AA               	lslf	___xxtofl@arg,f
 13178  17CB  0DAB               	rlf	___xxtofl@arg+1,f
 13179  17CC  0DAC               	rlf	___xxtofl@arg+2,f
 13180  17CD  0DAD               	rlf	___xxtofl@arg+3,f
 13181  17CE  0B89               	decfsz	9,f
 13182  17CF  2FCA               	goto	u4245
 13183  17D0                     l4395:	
 13184  17D0  1FAC               	btfss	___xxtofl@arg+2,7
 13185  17D1  2FC3               	goto	l4397
 13186  17D2                     l1757:	
 13187  17D2  1829               	btfsc	___xxtofl@exp,0
 13188  17D3  2FDC               	goto	l1758
 13189  17D4  30FF               	movlw	255
 13190  17D5  05AA               	andwf	___xxtofl@arg,f
 13191  17D6  30FF               	movlw	255
 13192  17D7  05AB               	andwf	___xxtofl@arg+1,f
 13193  17D8  307F               	movlw	127
 13194  17D9  05AC               	andwf	___xxtofl@arg+2,f
 13195  17DA  30FF               	movlw	255
 13196  17DB  05AD               	andwf	___xxtofl@arg+3,f
 13197  17DC                     l1758:	
 13198  17DC  1003               	clrc
 13199  17DD  0CA9               	rrf	___xxtofl@exp,f
 13200  17DE  0829               	movf	___xxtofl@exp,w
 13201  17DF  00A4               	movwf	??___xxtofl
 13202  17E0  01A5               	clrf	??___xxtofl+1
 13203  17E1  01A6               	clrf	??___xxtofl+2
 13204  17E2  01A7               	clrf	??___xxtofl+3
 13205  17E3  3018               	movlw	24
 13206  17E4                     u4285:	
 13207  17E4  35A4               	lslf	??___xxtofl,f
 13208  17E5  0DA5               	rlf	??___xxtofl+1,f
 13209  17E6  0DA6               	rlf	??___xxtofl+2,f
 13210  17E7  0DA7               	rlf	??___xxtofl+3,f
 13211  17E8  0B89               	decfsz	9,f
 13212  17E9  2FE4               	goto	u4285
 13213  17EA  0824               	movf	??___xxtofl,w
 13214  17EB  04AA               	iorwf	___xxtofl@arg,f
 13215  17EC  0825               	movf	??___xxtofl+1,w
 13216  17ED  04AB               	iorwf	___xxtofl@arg+1,f
 13217  17EE  0826               	movf	??___xxtofl+2,w
 13218  17EF  04AC               	iorwf	___xxtofl@arg+2,f
 13219  17F0  0827               	movf	??___xxtofl+3,w
 13220  17F1  04AD               	iorwf	___xxtofl@arg+3,f
 13221  17F2  0828               	movf	___xxtofl@sign,w
 13222  17F3  1D03               	btfss	3,2
 13223  17F4  1FA3               	btfss	___xxtofl@val+3,7
 13224  17F5  2FF7               	goto	l4409
 13225  17F6  17AD               	bsf	___xxtofl@arg+3,7
 13226  17F7                     l4409:	
 13227  17F7  082D               	movf	___xxtofl@arg+3,w
 13228  17F8  00A3               	movwf	?___xxtofl+3
 13229  17F9  082C               	movf	___xxtofl@arg+2,w
 13230  17FA  00A2               	movwf	?___xxtofl+2
 13231  17FB  082B               	movf	___xxtofl@arg+1,w
 13232  17FC  00A1               	movwf	?___xxtofl+1
 13233  17FD  082A               	movf	___xxtofl@arg,w
 13234  17FE  00A0               	movwf	?___xxtofl
 13235  17FF  0008               	return
 13236  1800                     __end_of___xxtofl:	
 13237                           
 13238                           	psect	text42
 13239  0808                     __ptext42:	
 13240 ;; *************** function ___fltol *****************
 13241 ;; Defined at:
 13242 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 13243 ;; Parameters:    Size  Location     Type
 13244 ;;  f1              4    4[BANK1 ] unsigned char 
 13245 ;; Auto vars:     Size  Location     Type
 13246 ;;  exp1            1   14[BANK1 ] unsigned char 
 13247 ;;  sign1           1   13[BANK1 ] unsigned char 
 13248 ;; Return value:  Size  Location     Type
 13249 ;;                  4    4[BANK1 ] long 
 13250 ;; Registers used:
 13251 ;;		wreg, status,2, status,0
 13252 ;; Tracked objects:
 13253 ;;		On entry : 0/0
 13254 ;;		On exit  : 0/0
 13255 ;;		Unchanged: 0/0
 13256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13257 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13258 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13259 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13260 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13261 ;;Total ram usage:       11 bytes
 13262 ;; Hardware stack levels used:    1
 13263 ;; Hardware stack levels required when called:    4
 13264 ;; This function calls:
 13265 ;;		Nothing
 13266 ;; This function is called by:
 13267 ;;		_LED_setHSL
 13268 ;; This function uses a non-reentrant model
 13269 ;;
 13270                           
 13271                           
 13272                           ;psect for function ___fltol
 13273  0808                     ___fltol:	
 13274                           
 13275                           ;incstack = 0
 13276                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 13277  0808  1003               	clrc
 13278  0809  0141               	movlb	1	; select bank1
 13279  080A  0D26               	rlf	(___fltol@f1+2)^(0+128),w
 13280  080B  0D27               	rlf	(___fltol@f1+3)^(0+128),w
 13281  080C  00A8               	movwf	??___fltol^(0+128)
 13282  080D  0828               	movf	??___fltol^(0+128),w
 13283  080E  00AE               	movwf	___fltol@exp1^(0+128)
 13284  080F  082E               	movf	___fltol@exp1^(0+128),w
 13285  0810  1D03               	btfss	3,2
 13286  0811  281B               	goto	l5677
 13287  0812                     l5673:	
 13288  0812  3000               	movlw	0
 13289  0813  00A7               	movwf	(?___fltol+3)^(0+128)
 13290  0814  3000               	movlw	0
 13291  0815  00A6               	movwf	(?___fltol+2)^(0+128)
 13292  0816  3000               	movlw	0
 13293  0817  00A5               	movwf	(?___fltol+1)^(0+128)
 13294  0818  3000               	movlw	0
 13295  0819  00A4               	movwf	?___fltol^(0+128)
 13296  081A  0008               	return
 13297  081B                     l5677:	
 13298  081B  0824               	movf	___fltol@f1^(0+128),w
 13299  081C  00A8               	movwf	??___fltol^(0+128)
 13300  081D  0825               	movf	(___fltol@f1+1)^(0+128),w
 13301  081E  00A9               	movwf	(??___fltol^(0+128)+1)
 13302  081F  0826               	movf	(___fltol@f1+2)^(0+128),w
 13303  0820  00AA               	movwf	(??___fltol^(0+128)+2)
 13304  0821  0827               	movf	(___fltol@f1+3)^(0+128),w
 13305  0822  00AB               	movwf	(??___fltol^(0+128)+3)
 13306  0823  301F               	movlw	31
 13307  0824                     u5975:	
 13308  0824  36AB               	lsrf	(??___fltol^(0+128)+3),f
 13309  0825  0CAA               	rrf	(??___fltol^(0+128)+2),f
 13310  0826  0CA9               	rrf	(??___fltol^(0+128)+1),f
 13311  0827  0CA8               	rrf	??___fltol^(0+128),f
 13312  0828  0B89               	decfsz	9,f
 13313  0829  2824               	goto	u5975
 13314  082A  0828               	movf	??___fltol^(0+128),w
 13315  082B  00AC               	movwf	(??___fltol+4)^(0+128)
 13316  082C  082C               	movf	(??___fltol+4)^(0+128),w
 13317  082D  00AD               	movwf	___fltol@sign1^(0+128)
 13318  082E  17A6               	bsf	(___fltol@f1^(0+128)+2),7
 13319  082F  30FF               	movlw	255
 13320  0830  05A4               	andwf	___fltol@f1^(0+128),f
 13321  0831  30FF               	movlw	255
 13322  0832  05A5               	andwf	(___fltol@f1+1)^(0+128),f
 13323  0833  30FF               	movlw	255
 13324  0834  05A6               	andwf	(___fltol@f1+2)^(0+128),f
 13325  0835  3000               	movlw	0
 13326  0836  05A7               	andwf	(___fltol@f1+3)^(0+128),f
 13327  0837  3096               	movlw	150
 13328  0838  02AE               	subwf	___fltol@exp1^(0+128),f
 13329  0839  1FAE               	btfss	___fltol@exp1^(0+128),7
 13330  083A  284E               	goto	l5695
 13331  083B  082E               	movf	___fltol@exp1^(0+128),w
 13332  083C  3A80               	xorlw	128
 13333  083D  3E97               	addlw	151
 13334  083E  1C03               	btfss	3,0
 13335  083F  2812               	goto	l5673
 13336  0840                     l5693:	
 13337  0840  3001               	movlw	1
 13338  0841                     u6005:	
 13339  0841  36A7               	lsrf	(___fltol@f1+3)^(0+128),f
 13340  0842  0CA6               	rrf	(___fltol@f1+2)^(0+128),f
 13341  0843  0CA5               	rrf	(___fltol@f1+1)^(0+128),f
 13342  0844  0CA4               	rrf	___fltol@f1^(0+128),f
 13343  0845  0B89               	decfsz	9,f
 13344  0846  2841               	goto	u6005
 13345  0847  3001               	movlw	1
 13346  0848  00A8               	movwf	??___fltol^(0+128)
 13347  0849  0828               	movf	??___fltol^(0+128),w
 13348  084A  07AE               	addwf	___fltol@exp1^(0+128),f
 13349  084B  1903               	btfsc	3,2
 13350  084C  285F               	goto	l5703
 13351  084D  2840               	goto	l5693
 13352  084E                     l5695:	
 13353  084E  3020               	movlw	32
 13354  084F  022E               	subwf	___fltol@exp1^(0+128),w
 13355  0850  1803               	btfsc	3,0
 13356  0851  2812               	goto	l5673
 13357  0852                     l1510:	
 13358  0852  082E               	movf	___fltol@exp1^(0+128),w
 13359  0853  1903               	btfsc	3,2
 13360  0854  285F               	goto	l5703
 13361  0855  3001               	movlw	1
 13362  0856                     u6035:	
 13363  0856  35A4               	lslf	___fltol@f1^(0+128),f
 13364  0857  0DA5               	rlf	(___fltol@f1+1)^(0+128),f
 13365  0858  0DA6               	rlf	(___fltol@f1+2)^(0+128),f
 13366  0859  0DA7               	rlf	(___fltol@f1+3)^(0+128),f
 13367  085A  0B89               	decfsz	9,f
 13368  085B  2856               	goto	u6035
 13369  085C  3001               	movlw	1
 13370  085D  02AE               	subwf	___fltol@exp1^(0+128),f
 13371  085E  2852               	goto	l1510
 13372  085F                     l5703:	
 13373  085F  082D               	movf	___fltol@sign1^(0+128),w
 13374  0860  1903               	btfsc	3,2
 13375  0861  0008               	return
 13376  0862  09A4               	comf	___fltol@f1^(0+128),f
 13377  0863  09A5               	comf	(___fltol@f1+1)^(0+128),f
 13378  0864  09A6               	comf	(___fltol@f1+2)^(0+128),f
 13379  0865  09A7               	comf	(___fltol@f1+3)^(0+128),f
 13380  0866  0AA4               	incf	___fltol@f1^(0+128),f
 13381  0867  1903               	skipnz
 13382  0868  0AA5               	incf	(___fltol@f1+1)^(0+128),f
 13383  0869  1903               	skipnz
 13384  086A  0AA6               	incf	(___fltol@f1+2)^(0+128),f
 13385  086B  1903               	skipnz
 13386  086C  0AA7               	incf	(___fltol@f1+3)^(0+128),f
 13387  086D  0008               	return
 13388  086E                     __end_of___fltol:	
 13389                           
 13390                           	psect	text43
 13391  13A8                     __ptext43:	
 13392 ;; *************** function ___fleq *****************
 13393 ;; Defined at:
 13394 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  ff1             4    0[BANK0 ] long 
 13397 ;;  ff2             4    4[BANK0 ] long 
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;		None
 13400 ;; Return value:  Size  Location     Type
 13401 ;;		None               void
 13402 ;; Registers used:
 13403 ;;		wreg, status,2, status,0
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13409 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13411 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13412 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13413 ;;Total ram usage:       12 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:    4
 13416 ;; This function calls:
 13417 ;;		Nothing
 13418 ;; This function is called by:
 13419 ;;		_LED_setHSL
 13420 ;;		_pulseColors
 13421 ;; This function uses a non-reentrant model
 13422 ;;
 13423                           
 13424                           
 13425                           ;psect for function ___fleq
 13426  13A8                     ___fleq:	
 13427                           
 13428                           ;incstack = 0
 13429                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13430  13A8  3000               	movlw	0
 13431  13A9  0140               	movlb	0	; select bank0
 13432  13AA  0520               	andwf	___fleq@ff1,w
 13433  13AB  00A8               	movwf	??___fleq
 13434  13AC  3000               	movlw	0
 13435  13AD  0521               	andwf	___fleq@ff1+1,w
 13436  13AE  00A9               	movwf	??___fleq+1
 13437  13AF  3080               	movlw	128
 13438  13B0  0522               	andwf	___fleq@ff1+2,w
 13439  13B1  00AA               	movwf	??___fleq+2
 13440  13B2  307F               	movlw	127
 13441  13B3  0523               	andwf	___fleq@ff1+3,w
 13442  13B4  00AB               	movwf	??___fleq+3
 13443  13B5  082B               	movf	??___fleq+3,w
 13444  13B6  042A               	iorwf	??___fleq+2,w
 13445  13B7  0429               	iorwf	??___fleq+1,w
 13446  13B8  0428               	iorwf	??___fleq,w
 13447  13B9  1D03               	skipz
 13448  13BA  2BC3               	goto	l1478
 13449  13BB  3000               	movlw	0
 13450  13BC  00A3               	movwf	___fleq@ff1+3
 13451  13BD  3000               	movlw	0
 13452  13BE  00A2               	movwf	___fleq@ff1+2
 13453  13BF  3000               	movlw	0
 13454  13C0  00A1               	movwf	___fleq@ff1+1
 13455  13C1  3000               	movlw	0
 13456  13C2  00A0               	movwf	___fleq@ff1
 13457  13C3                     l1478:	
 13458  13C3  3000               	movlw	0
 13459  13C4  0524               	andwf	___fleq@ff2,w
 13460  13C5  00A8               	movwf	??___fleq
 13461  13C6  3000               	movlw	0
 13462  13C7  0525               	andwf	___fleq@ff2+1,w
 13463  13C8  00A9               	movwf	??___fleq+1
 13464  13C9  3080               	movlw	128
 13465  13CA  0526               	andwf	___fleq@ff2+2,w
 13466  13CB  00AA               	movwf	??___fleq+2
 13467  13CC  307F               	movlw	127
 13468  13CD  0527               	andwf	___fleq@ff2+3,w
 13469  13CE  00AB               	movwf	??___fleq+3
 13470  13CF  082B               	movf	??___fleq+3,w
 13471  13D0  042A               	iorwf	??___fleq+2,w
 13472  13D1  0429               	iorwf	??___fleq+1,w
 13473  13D2  0428               	iorwf	??___fleq,w
 13474  13D3  1D03               	skipz
 13475  13D4  2BDD               	goto	l1479
 13476  13D5  3000               	movlw	0
 13477  13D6  00A7               	movwf	___fleq@ff2+3
 13478  13D7  3000               	movlw	0
 13479  13D8  00A6               	movwf	___fleq@ff2+2
 13480  13D9  3000               	movlw	0
 13481  13DA  00A5               	movwf	___fleq@ff2+1
 13482  13DB  3000               	movlw	0
 13483  13DC  00A4               	movwf	___fleq@ff2
 13484  13DD                     l1479:	
 13485  13DD  0827               	movf	___fleq@ff2+3,w
 13486  13DE  0623               	xorwf	___fleq@ff1+3,w
 13487  13DF  1D03               	skipz
 13488  13E0  2BEB               	goto	u3775
 13489  13E1  0826               	movf	___fleq@ff2+2,w
 13490  13E2  0622               	xorwf	___fleq@ff1+2,w
 13491  13E3  1D03               	skipz
 13492  13E4  2BEB               	goto	u3775
 13493  13E5  0825               	movf	___fleq@ff2+1,w
 13494  13E6  0621               	xorwf	___fleq@ff1+1,w
 13495  13E7  1D03               	skipz
 13496  13E8  2BEB               	goto	u3775
 13497  13E9  0824               	movf	___fleq@ff2,w
 13498  13EA  0620               	xorwf	___fleq@ff1,w
 13499  13EB                     u3775:	
 13500  13EB  1903               	skipnz
 13501  13EC  2BEF               	goto	l4189
 13502  13ED  1003               	clrc
 13503  13EE  0008               	return
 13504  13EF                     l4189:	
 13505  13EF  1403               	setc
 13506  13F0  0008               	return
 13507  13F1                     __end_of___fleq:	
 13508                           
 13509                           	psect	text44
 13510  0622                     __ptext44:	
 13511 ;; *************** function ___fldiv *****************
 13512 ;; Defined at:
 13513 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;  a               4   14[BANK0 ] long 
 13516 ;;  b               4   18[BANK0 ] long 
 13517 ;; Auto vars:     Size  Location     Type
 13518 ;;  grs             4   34[BANK0 ] unsigned long 
 13519 ;;  rem             4   27[BANK0 ] unsigned long 
 13520 ;;  new_exp         2   32[BANK0 ] int 
 13521 ;;  aexp            1   39[BANK0 ] unsigned char 
 13522 ;;  bexp            1   38[BANK0 ] unsigned char 
 13523 ;;  sign            1   31[BANK0 ] unsigned char 
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  4   14[BANK0 ] unsigned char 
 13526 ;; Registers used:
 13527 ;;		wreg, status,2, status,0
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13533 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13534 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13535 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13536 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13537 ;;Total ram usage:       26 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; Hardware stack levels required when called:    4
 13540 ;; This function calls:
 13541 ;;		Nothing
 13542 ;; This function is called by:
 13543 ;;		_LED_setHSL
 13544 ;;		_pulseColors
 13545 ;; This function uses a non-reentrant model
 13546 ;;
 13547                           
 13548                           
 13549                           ;psect for function ___fldiv
 13550  0622                     ___fldiv:	
 13551                           
 13552                           ;incstack = 0
 13553                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 13554  0622  0140               	movlb	0	; select bank0
 13555  0623  0835               	movf	___fldiv@b+3,w
 13556  0624  3980               	andlw	128
 13557  0625  00B6               	movwf	??___fldiv
 13558  0626  0836               	movf	??___fldiv,w
 13559  0627  00BF               	movwf	___fldiv@sign
 13560  0628  3535               	lslf	___fldiv@b+3,w
 13561  0629  00B6               	movwf	??___fldiv
 13562  062A  0836               	movf	??___fldiv,w
 13563  062B  00C6               	movwf	___fldiv@bexp
 13564  062C  1BB4               	btfsc	___fldiv@b+2,7
 13565  062D  1446               	bsf	___fldiv@bexp,0
 13566  062E  0846               	movf	___fldiv@bexp,w
 13567  062F  1903               	btfsc	3,2
 13568  0630  2E3F               	goto	l4247
 13569  0631  0A46               	incf	___fldiv@bexp,w
 13570  0632  1D03               	btfss	3,2
 13571  0633  2E3C               	goto	l4243
 13572  0634  3000               	movlw	0
 13573  0635  00B5               	movwf	___fldiv@b+3
 13574  0636  3000               	movlw	0
 13575  0637  00B4               	movwf	___fldiv@b+2
 13576  0638  3000               	movlw	0
 13577  0639  00B3               	movwf	___fldiv@b+1
 13578  063A  3000               	movlw	0
 13579  063B  00B2               	movwf	___fldiv@b
 13580  063C                     l4243:	
 13581  063C  17B4               	bsf	___fldiv@b+2,7
 13582  063D  01B5               	clrf	___fldiv@b+3
 13583  063E  2E47               	goto	l4249
 13584  063F                     l4247:	
 13585  063F  3000               	movlw	0
 13586  0640  00B5               	movwf	___fldiv@b+3
 13587  0641  3000               	movlw	0
 13588  0642  00B4               	movwf	___fldiv@b+2
 13589  0643  3000               	movlw	0
 13590  0644  00B3               	movwf	___fldiv@b+1
 13591  0645  3000               	movlw	0
 13592  0646  00B2               	movwf	___fldiv@b
 13593  0647                     l4249:	
 13594  0647  0831               	movf	___fldiv@a+3,w
 13595  0648  3980               	andlw	128
 13596  0649  00B6               	movwf	??___fldiv
 13597  064A  0836               	movf	??___fldiv,w
 13598  064B  06BF               	xorwf	___fldiv@sign,f
 13599  064C  3531               	lslf	___fldiv@a+3,w
 13600  064D  00B6               	movwf	??___fldiv
 13601  064E  0836               	movf	??___fldiv,w
 13602  064F  00C7               	movwf	___fldiv@aexp
 13603  0650  1BB0               	btfsc	___fldiv@a+2,7
 13604  0651  1447               	bsf	___fldiv@aexp,0
 13605  0652  0847               	movf	___fldiv@aexp,w
 13606  0653  1903               	btfsc	3,2
 13607  0654  2E63               	goto	l4267
 13608  0655  0A47               	incf	___fldiv@aexp,w
 13609  0656  1D03               	btfss	3,2
 13610  0657  2E60               	goto	l4263
 13611  0658  3000               	movlw	0
 13612  0659  00B1               	movwf	___fldiv@a+3
 13613  065A  3000               	movlw	0
 13614  065B  00B0               	movwf	___fldiv@a+2
 13615  065C  3000               	movlw	0
 13616  065D  00AF               	movwf	___fldiv@a+1
 13617  065E  3000               	movlw	0
 13618  065F  00AE               	movwf	___fldiv@a
 13619  0660                     l4263:	
 13620  0660  17B0               	bsf	___fldiv@a+2,7
 13621  0661  01B1               	clrf	___fldiv@a+3
 13622  0662  2E6B               	goto	l1666
 13623  0663                     l4267:	
 13624  0663  3000               	movlw	0
 13625  0664  00B1               	movwf	___fldiv@a+3
 13626  0665  3000               	movlw	0
 13627  0666  00B0               	movwf	___fldiv@a+2
 13628  0667  3000               	movlw	0
 13629  0668  00AF               	movwf	___fldiv@a+1
 13630  0669  3000               	movlw	0
 13631  066A  00AE               	movwf	___fldiv@a
 13632  066B                     l1666:	
 13633  066B  0831               	movf	___fldiv@a+3,w
 13634  066C  0430               	iorwf	___fldiv@a+2,w
 13635  066D  042F               	iorwf	___fldiv@a+1,w
 13636  066E  042E               	iorwf	___fldiv@a,w
 13637  066F  1D03               	skipz
 13638  0670  2E8A               	goto	l4277
 13639  0671  3000               	movlw	0
 13640  0672  00B5               	movwf	___fldiv@b+3
 13641  0673  3000               	movlw	0
 13642  0674  00B4               	movwf	___fldiv@b+2
 13643  0675  3000               	movlw	0
 13644  0676  00B3               	movwf	___fldiv@b+1
 13645  0677  3000               	movlw	0
 13646  0678  00B2               	movwf	___fldiv@b
 13647  0679  3080               	movlw	128
 13648  067A  04B4               	iorwf	___fldiv@b+2,f
 13649  067B  307F               	movlw	127
 13650  067C  04B5               	iorwf	___fldiv@b+3,f
 13651  067D                     L3:	
 13652  067D  083F               	movf	___fldiv@sign,w
 13653  067E  00B6               	movwf	??___fldiv
 13654  067F  0836               	movf	??___fldiv,w
 13655  0680  04B5               	iorwf	___fldiv@b+3,f
 13656  0681  0835               	movf	___fldiv@b+3,w
 13657  0682  00B1               	movwf	?___fldiv+3
 13658  0683  0834               	movf	___fldiv@b+2,w
 13659  0684  00B0               	movwf	?___fldiv+2
 13660  0685  0833               	movf	___fldiv@b+1,w
 13661  0686  00AF               	movwf	?___fldiv+1
 13662  0687  0832               	movf	___fldiv@b,w
 13663  0688  00AE               	movwf	?___fldiv
 13664  0689  0008               	return
 13665  068A                     l4277:	
 13666  068A  0846               	movf	___fldiv@bexp,w
 13667  068B  1D03               	btfss	3,2
 13668  068C  2E96               	goto	l4283
 13669  068D  3000               	movlw	0
 13670  068E  00B1               	movwf	?___fldiv+3
 13671  068F  3000               	movlw	0
 13672  0690  00B0               	movwf	?___fldiv+2
 13673  0691  3000               	movlw	0
 13674  0692  00AF               	movwf	?___fldiv+1
 13675  0693  3000               	movlw	0
 13676  0694  00AE               	movwf	?___fldiv
 13677  0695  0008               	return
 13678  0696                     l4283:	
 13679  0696  0846               	movf	___fldiv@bexp,w
 13680  0697  00B6               	movwf	??___fldiv
 13681  0698  01B7               	clrf	??___fldiv+1
 13682  0699  0837               	movf	??___fldiv+1,w
 13683  069A  00B9               	movwf	??___fldiv+3
 13684  069B  0847               	movf	___fldiv@aexp,w
 13685  069C  0236               	subwf	??___fldiv,w
 13686  069D  00B8               	movwf	??___fldiv+2
 13687  069E  1C03               	skipc
 13688  069F  03B9               	decf	??___fldiv+3,f
 13689  06A0  0838               	movf	??___fldiv+2,w
 13690  06A1  3E7F               	addlw	127
 13691  06A2  00C0               	movwf	___fldiv@new_exp
 13692  06A3  3000               	movlw	0
 13693  06A4  3D39               	addwfc	??___fldiv+3,w
 13694  06A5  00C1               	movwf	___fldiv@new_exp+1
 13695  06A6  0835               	movf	___fldiv@b+3,w
 13696  06A7  00BE               	movwf	___fldiv@rem+3
 13697  06A8  0834               	movf	___fldiv@b+2,w
 13698  06A9  00BD               	movwf	___fldiv@rem+2
 13699  06AA  0833               	movf	___fldiv@b+1,w
 13700  06AB  00BC               	movwf	___fldiv@rem+1
 13701  06AC  0832               	movf	___fldiv@b,w
 13702  06AD  00BB               	movwf	___fldiv@rem
 13703  06AE  3000               	movlw	0
 13704  06AF  00B5               	movwf	___fldiv@b+3
 13705  06B0  3000               	movlw	0
 13706  06B1  00B4               	movwf	___fldiv@b+2
 13707  06B2  3000               	movlw	0
 13708  06B3  00B3               	movwf	___fldiv@b+1
 13709  06B4  3000               	movlw	0
 13710  06B5  00B2               	movwf	___fldiv@b
 13711  06B6  3000               	movlw	0
 13712  06B7  00C5               	movwf	___fldiv@grs+3
 13713  06B8  3000               	movlw	0
 13714  06B9  00C4               	movwf	___fldiv@grs+2
 13715  06BA  3000               	movlw	0
 13716  06BB  00C3               	movwf	___fldiv@grs+1
 13717  06BC  3000               	movlw	0
 13718  06BD  00C2               	movwf	___fldiv@grs
 13719  06BE  01C7               	clrf	___fldiv@aexp
 13720  06BF                     l4311:	
 13721  06BF  301A               	movlw	26
 13722  06C0  0247               	subwf	___fldiv@aexp,w
 13723  06C1  1803               	btfsc	3,0
 13724  06C2  2EFB               	goto	l4313
 13725  06C3  0847               	movf	___fldiv@aexp,w
 13726  06C4  1903               	btfsc	3,2
 13727  06C5  2EDD               	goto	l4303
 13728  06C6  3001               	movlw	1
 13729  06C7                     u3975:	
 13730  06C7  35BB               	lslf	___fldiv@rem,f
 13731  06C8  0DBC               	rlf	___fldiv@rem+1,f
 13732  06C9  0DBD               	rlf	___fldiv@rem+2,f
 13733  06CA  0DBE               	rlf	___fldiv@rem+3,f
 13734  06CB  0B89               	decfsz	9,f
 13735  06CC  2EC7               	goto	u3975
 13736  06CD  3001               	movlw	1
 13737  06CE                     u3985:	
 13738  06CE  35B2               	lslf	___fldiv@b,f
 13739  06CF  0DB3               	rlf	___fldiv@b+1,f
 13740  06D0  0DB4               	rlf	___fldiv@b+2,f
 13741  06D1  0DB5               	rlf	___fldiv@b+3,f
 13742  06D2  0B89               	decfsz	9,f
 13743  06D3  2ECE               	goto	u3985
 13744  06D4  1BC5               	btfsc	___fldiv@grs+3,7
 13745  06D5  1432               	bsf	___fldiv@b,0
 13746  06D6  3001               	movlw	1
 13747  06D7                     u4005:	
 13748  06D7  35C2               	lslf	___fldiv@grs,f
 13749  06D8  0DC3               	rlf	___fldiv@grs+1,f
 13750  06D9  0DC4               	rlf	___fldiv@grs+2,f
 13751  06DA  0DC5               	rlf	___fldiv@grs+3,f
 13752  06DB  0B89               	decfsz	9,f
 13753  06DC  2ED7               	goto	u4005
 13754  06DD                     l4303:	
 13755  06DD  0831               	movf	___fldiv@a+3,w
 13756  06DE  023E               	subwf	___fldiv@rem+3,w
 13757  06DF  1D03               	skipz
 13758  06E0  2EEB               	goto	u4015
 13759  06E1  0830               	movf	___fldiv@a+2,w
 13760  06E2  023D               	subwf	___fldiv@rem+2,w
 13761  06E3  1D03               	skipz
 13762  06E4  2EEB               	goto	u4015
 13763  06E5  082F               	movf	___fldiv@a+1,w
 13764  06E6  023C               	subwf	___fldiv@rem+1,w
 13765  06E7  1D03               	skipz
 13766  06E8  2EEB               	goto	u4015
 13767  06E9  082E               	movf	___fldiv@a,w
 13768  06EA  023B               	subwf	___fldiv@rem,w
 13769  06EB                     u4015:	
 13770  06EB  1C03               	skipc
 13771  06EC  2EF6               	goto	l4309
 13772  06ED  1745               	bsf	___fldiv@grs+3,6
 13773  06EE  082E               	movf	___fldiv@a,w
 13774  06EF  02BB               	subwf	___fldiv@rem,f
 13775  06F0  082F               	movf	___fldiv@a+1,w
 13776  06F1  3BBC               	subwfb	___fldiv@rem+1,f
 13777  06F2  0830               	movf	___fldiv@a+2,w
 13778  06F3  3BBD               	subwfb	___fldiv@rem+2,f
 13779  06F4  0831               	movf	___fldiv@a+3,w
 13780  06F5  3BBE               	subwfb	___fldiv@rem+3,f
 13781  06F6                     l4309:	
 13782  06F6  3001               	movlw	1
 13783  06F7  00B6               	movwf	??___fldiv
 13784  06F8  0836               	movf	??___fldiv,w
 13785  06F9  07C7               	addwf	___fldiv@aexp,f
 13786  06FA  2EBF               	goto	l4311
 13787  06FB                     l4313:	
 13788  06FB  083E               	movf	___fldiv@rem+3,w
 13789  06FC  043D               	iorwf	___fldiv@rem+2,w
 13790  06FD  043C               	iorwf	___fldiv@rem+1,w
 13791  06FE  043B               	iorwf	___fldiv@rem,w
 13792  06FF  1D03               	btfss	3,2
 13793  0700  1442               	bsf	___fldiv@grs,0
 13794  0701                     l4327:	
 13795  0701  1BB4               	btfsc	___fldiv@b+2,7
 13796  0702  2F18               	goto	l4329
 13797  0703  3001               	movlw	1
 13798  0704                     u4045:	
 13799  0704  35B2               	lslf	___fldiv@b,f
 13800  0705  0DB3               	rlf	___fldiv@b+1,f
 13801  0706  0DB4               	rlf	___fldiv@b+2,f
 13802  0707  0DB5               	rlf	___fldiv@b+3,f
 13803  0708  0B89               	decfsz	9,f
 13804  0709  2F04               	goto	u4045
 13805  070A  1BC5               	btfsc	___fldiv@grs+3,7
 13806  070B  1432               	bsf	___fldiv@b,0
 13807  070C  3001               	movlw	1
 13808  070D                     u4065:	
 13809  070D  35C2               	lslf	___fldiv@grs,f
 13810  070E  0DC3               	rlf	___fldiv@grs+1,f
 13811  070F  0DC4               	rlf	___fldiv@grs+2,f
 13812  0710  0DC5               	rlf	___fldiv@grs+3,f
 13813  0711  0B89               	decfsz	9,f
 13814  0712  2F0D               	goto	u4065
 13815  0713  30FF               	movlw	255
 13816  0714  07C0               	addwf	___fldiv@new_exp,f
 13817  0715  30FF               	movlw	255
 13818  0716  3DC1               	addwfc	___fldiv@new_exp+1,f
 13819  0717  2F01               	goto	l4327
 13820  0718                     l4329:	
 13821  0718  01C7               	clrf	___fldiv@aexp
 13822  0719  1FC5               	btfss	___fldiv@grs+3,7
 13823  071A  2F31               	goto	l4339
 13824  071B  30FF               	movlw	255
 13825  071C  0542               	andwf	___fldiv@grs,w
 13826  071D  00B6               	movwf	??___fldiv
 13827  071E  30FF               	movlw	255
 13828  071F  0543               	andwf	___fldiv@grs+1,w
 13829  0720  00B7               	movwf	??___fldiv+1
 13830  0721  30FF               	movlw	255
 13831  0722  0544               	andwf	___fldiv@grs+2,w
 13832  0723  00B8               	movwf	??___fldiv+2
 13833  0724  307F               	movlw	127
 13834  0725  0545               	andwf	___fldiv@grs+3,w
 13835  0726  00B9               	movwf	??___fldiv+3
 13836  0727  0839               	movf	??___fldiv+3,w
 13837  0728  0438               	iorwf	??___fldiv+2,w
 13838  0729  0437               	iorwf	??___fldiv+1,w
 13839  072A  0436               	iorwf	??___fldiv,w
 13840  072B  1903               	skipnz
 13841  072C  1832               	btfsc	___fldiv@b,0
 13842  072D  2F2F               	goto	l4335
 13843  072E  2F31               	goto	l4339
 13844  072F                     l4335:	
 13845  072F  01C7               	clrf	___fldiv@aexp
 13846  0730  0AC7               	incf	___fldiv@aexp,f
 13847  0731                     l4339:	
 13848  0731  0847               	movf	___fldiv@aexp,w
 13849  0732  1903               	btfsc	3,2
 13850  0733  2F5A               	goto	l4349
 13851  0734  3001               	movlw	1
 13852  0735  07B2               	addwf	___fldiv@b,f
 13853  0736  3000               	movlw	0
 13854  0737  3DB3               	addwfc	___fldiv@b+1,f
 13855  0738  3000               	movlw	0
 13856  0739  3DB4               	addwfc	___fldiv@b+2,f
 13857  073A  3000               	movlw	0
 13858  073B  3DB5               	addwfc	___fldiv@b+3,f
 13859  073C  1C35               	btfss	___fldiv@b+3,0
 13860  073D  2F5A               	goto	l4349
 13861  073E  0832               	movf	___fldiv@b,w
 13862  073F  00B6               	movwf	??___fldiv
 13863  0740  0833               	movf	___fldiv@b+1,w
 13864  0741  00B7               	movwf	??___fldiv+1
 13865  0742  0834               	movf	___fldiv@b+2,w
 13866  0743  00B8               	movwf	??___fldiv+2
 13867  0744  0835               	movf	___fldiv@b+3,w
 13868  0745  00B9               	movwf	??___fldiv+3
 13869  0746  3001               	movlw	1
 13870  0747  00BA               	movwf	??___fldiv+4
 13871  0748                     u4135:	
 13872  0748  37B9               	asrf	??___fldiv+3,f
 13873  0749  0CB8               	rrf	??___fldiv+2,f
 13874  074A  0CB7               	rrf	??___fldiv+1,f
 13875  074B  0CB6               	rrf	??___fldiv,f
 13876  074C  0BBA               	decfsz	??___fldiv+4,f
 13877  074D  2F48               	goto	u4135
 13878  074E  0839               	movf	??___fldiv+3,w
 13879  074F  00B5               	movwf	___fldiv@b+3
 13880  0750  0838               	movf	??___fldiv+2,w
 13881  0751  00B4               	movwf	___fldiv@b+2
 13882  0752  0837               	movf	??___fldiv+1,w
 13883  0753  00B3               	movwf	___fldiv@b+1
 13884  0754  0836               	movf	??___fldiv,w
 13885  0755  00B2               	movwf	___fldiv@b
 13886  0756  3001               	movlw	1
 13887  0757  07C0               	addwf	___fldiv@new_exp,f
 13888  0758  3000               	movlw	0
 13889  0759  3DC1               	addwfc	___fldiv@new_exp+1,f
 13890  075A                     l4349:	
 13891  075A  0841               	movf	___fldiv@new_exp+1,w
 13892  075B  3A80               	xorlw	128
 13893  075C  00B6               	movwf	??___fldiv
 13894  075D  3080               	movlw	128
 13895  075E  0236               	subwf	??___fldiv,w
 13896  075F  1D03               	skipz
 13897  0760  2F63               	goto	u4145
 13898  0761  30FF               	movlw	255
 13899  0762  0240               	subwf	___fldiv@new_exp,w
 13900  0763                     u4145:	
 13901  0763  1C03               	skipc
 13902  0764  2F72               	goto	l1687
 13903  0765  30FF               	movlw	255
 13904  0766  0140               	movlb	0	; select bank0
 13905  0767  00C0               	movwf	___fldiv@new_exp
 13906  0768  3000               	movlw	0
 13907  0769  00C1               	movwf	___fldiv@new_exp+1
 13908  076A  3000               	movlw	0
 13909  076B  00B5               	movwf	___fldiv@b+3
 13910  076C  3000               	movlw	0
 13911  076D  00B4               	movwf	___fldiv@b+2
 13912  076E  3000               	movlw	0
 13913  076F  00B3               	movwf	___fldiv@b+1
 13914  0770  3000               	movlw	0
 13915  0771  00B2               	movwf	___fldiv@b
 13916  0772                     l1687:	
 13917  0772  0140               	movlb	0	; select bank0
 13918  0773  0841               	movf	___fldiv@new_exp+1,w
 13919  0774  3A80               	xorlw	128
 13920  0775  00B6               	movwf	??___fldiv
 13921  0776  3080               	movlw	128
 13922  0777  0236               	subwf	??___fldiv,w
 13923  0778  1D03               	skipz
 13924  0779  2F7C               	goto	u4155
 13925  077A  3001               	movlw	1
 13926  077B  0240               	subwf	___fldiv@new_exp,w
 13927  077C                     u4155:	
 13928  077C  1803               	skipnc
 13929  077D  2F8A               	goto	l1688
 13930  077E  0140               	movlb	0	; select bank0
 13931  077F  01C0               	clrf	___fldiv@new_exp
 13932  0780  01C1               	clrf	___fldiv@new_exp+1
 13933  0781  3000               	movlw	0
 13934  0782  00B5               	movwf	___fldiv@b+3
 13935  0783  3000               	movlw	0
 13936  0784  00B4               	movwf	___fldiv@b+2
 13937  0785  3000               	movlw	0
 13938  0786  00B3               	movwf	___fldiv@b+1
 13939  0787  3000               	movlw	0
 13940  0788  00B2               	movwf	___fldiv@b
 13941  0789  01BF               	clrf	___fldiv@sign
 13942  078A                     l1688:	
 13943  078A  0140               	movlb	0	; select bank0
 13944  078B  0840               	movf	___fldiv@new_exp,w
 13945  078C  00B6               	movwf	??___fldiv
 13946  078D  0836               	movf	??___fldiv,w
 13947  078E  00C6               	movwf	___fldiv@bexp
 13948  078F  1C46               	btfss	___fldiv@bexp,0
 13949  0790  2F93               	goto	l4363
 13950  0791  17B4               	bsf	___fldiv@b+2,7
 13951  0792  2F97               	goto	l1690
 13952  0793                     l4363:	
 13953  0793  307F               	movlw	127
 13954  0794  00B6               	movwf	??___fldiv
 13955  0795  0836               	movf	??___fldiv,w
 13956  0796  05B4               	andwf	___fldiv@b+2,f
 13957  0797                     l1690:	
 13958  0797  3646               	lsrf	___fldiv@bexp,w
 13959  0798  00B6               	movwf	??___fldiv
 13960  0799  0836               	movf	??___fldiv,w
 13961  079A  00B5               	movwf	___fldiv@b+3
 13962  079B  2E7D               	goto	L3
 13963  079C                     __end_of___fldiv:	
 13964                           
 13965                           	psect	text45
 13966  1326                     __ptext45:	
 13967 ;; *************** function _LED_setColor *****************
 13968 ;; Defined at:
 13969 ;;		line 59 in file "led.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  red             1    wreg     unsigned char 
 13972 ;;  green           1    0[BANK0 ] unsigned char 
 13973 ;;  white           1    1[BANK0 ] unsigned char 
 13974 ;;  blue            1    2[BANK0 ] unsigned char 
 13975 ;; Auto vars:     Size  Location     Type
 13976 ;;  red             1   21[BANK0 ] unsigned char 
 13977 ;;  lo4             2   19[BANK0 ] int 
 13978 ;;  hi4             2    0        int 
 13979 ;;  lo3             2   15[BANK0 ] int 
 13980 ;;  hi3             2    0        int 
 13981 ;;  lo2             2   11[BANK0 ] int 
 13982 ;;  hi2             2    0        int 
 13983 ;;  lo1             2    7[BANK0 ] int 
 13984 ;;  hi1             2    0        int 
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1    wreg      void 
 13987 ;; Registers used:
 13988 ;;		wreg, status,2
 13989 ;; Tracked objects:
 13990 ;;		On entry : 0/0
 13991 ;;		On exit  : 0/0
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13994 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13995 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13997 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13998 ;;Total ram usage:       22 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; Hardware stack levels required when called:    4
 14001 ;; This function calls:
 14002 ;;		Nothing
 14003 ;; This function is called by:
 14004 ;;		_LED_setHSL
 14005 ;;		_LED_DMX
 14006 ;; This function uses a non-reentrant model
 14007 ;;
 14008                           
 14009                           
 14010                           ;psect for function _LED_setColor
 14011  1326                     _LED_setColor:	
 14012                           
 14013                           ;incstack = 0
 14014                           ; Regs used in _LED_setColor: [wreg+status,2]
 14015                           ;LED_setColor@red stored from wreg
 14016  1326  0140               	movlb	0	; select bank0
 14017  1327  00B5               	movwf	LED_setColor@red
 14018                           
 14019                           ;led.c: 60:     red/=2;
 14020  1328  1003               	clrc
 14021  1329  0CB5               	rrf	LED_setColor@red,f
 14022                           
 14023                           ;led.c: 61:     green/=2;
 14024  132A  1003               	clrc
 14025  132B  0CA0               	rrf	LED_setColor@green,f
 14026                           
 14027                           ;led.c: 62:     blue/=2;
 14028  132C  1003               	clrc
 14029  132D  0CA2               	rrf	LED_setColor@blue,f
 14030                           
 14031                           ;led.c: 63:     white/=2;
 14032  132E  1003               	clrc
 14033  132F  0CA1               	rrf	LED_setColor@white,f
 14034                           
 14035                           ;led.c: 65:     int lo1 = red & 0x00FF;
 14036  1330  0835               	movf	LED_setColor@red,w
 14037  1331  00A3               	movwf	??_LED_setColor
 14038  1332  01A4               	clrf	??_LED_setColor+1
 14039  1333  0823               	movf	??_LED_setColor,w
 14040  1334  00A7               	movwf	LED_setColor@lo1
 14041  1335  0824               	movf	??_LED_setColor+1,w
 14042  1336  00A8               	movwf	LED_setColor@lo1+1
 14043                           
 14044                           ;led.c: 67:     int lo2 = green & 0x00FF;
 14045  1337  0820               	movf	LED_setColor@green,w
 14046  1338  00A3               	movwf	??_LED_setColor
 14047  1339  01A4               	clrf	??_LED_setColor+1
 14048  133A  0823               	movf	??_LED_setColor,w
 14049  133B  00AB               	movwf	LED_setColor@lo2
 14050  133C  0824               	movf	??_LED_setColor+1,w
 14051  133D  00AC               	movwf	LED_setColor@lo2+1
 14052                           
 14053                           ;led.c: 69:     int lo3 = blue & 0x00FF;
 14054  133E  0822               	movf	LED_setColor@blue,w
 14055  133F  00A3               	movwf	??_LED_setColor
 14056  1340  01A4               	clrf	??_LED_setColor+1
 14057  1341  0823               	movf	??_LED_setColor,w
 14058  1342  00AF               	movwf	LED_setColor@lo3
 14059  1343  0824               	movf	??_LED_setColor+1,w
 14060  1344  00B0               	movwf	LED_setColor@lo3+1
 14061                           
 14062                           ;led.c: 71:     int lo4 = white & 0x00FF;
 14063  1345  0821               	movf	LED_setColor@white,w
 14064  1346  00A3               	movwf	??_LED_setColor
 14065  1347  01A4               	clrf	??_LED_setColor+1
 14066  1348  0823               	movf	??_LED_setColor,w
 14067  1349  00B3               	movwf	LED_setColor@lo4
 14068  134A  0824               	movf	??_LED_setColor+1,w
 14069  134B  00B4               	movwf	LED_setColor@lo4+1
 14070                           
 14071                           ;led.c: 73:     CCPR1H = hi1;
 14072  134C  0146               	movlb	6	; select bank6
 14073  134D  018D               	clrf	13	;volatile
 14074                           
 14075                           ;led.c: 74:     CCPR1L = lo1;
 14076  134E  0140               	movlb	0	; select bank0
 14077  134F  0827               	movf	LED_setColor@lo1,w
 14078  1350  0146               	movlb	6	; select bank6
 14079  1351  008C               	movwf	12	;volatile
 14080                           
 14081                           ;led.c: 76:     CCPR2H = hi2;
 14082  1352  0191               	clrf	17	;volatile
 14083                           
 14084                           ;led.c: 77:     CCPR2L = lo2;
 14085  1353  0140               	movlb	0	; select bank0
 14086  1354  082B               	movf	LED_setColor@lo2,w
 14087  1355  0146               	movlb	6	; select bank6
 14088  1356  0090               	movwf	16	;volatile
 14089                           
 14090                           ;led.c: 79:     CCPR3H = hi3;
 14091  1357  0195               	clrf	21	;volatile
 14092                           
 14093                           ;led.c: 80:     CCPR3L = lo3;
 14094  1358  0140               	movlb	0	; select bank0
 14095  1359  082F               	movf	LED_setColor@lo3,w
 14096  135A  0146               	movlb	6	; select bank6
 14097  135B  0094               	movwf	20	;volatile
 14098                           
 14099                           ;led.c: 82:     CCPR4H = hi4;
 14100  135C  0199               	clrf	25	;volatile
 14101                           
 14102                           ;led.c: 83:     CCPR4L = lo4;
 14103  135D  0140               	movlb	0	; select bank0
 14104  135E  0833               	movf	LED_setColor@lo4,w
 14105  135F  0146               	movlb	6	; select bank6
 14106  1360  0098               	movwf	24	;volatile
 14107  1361  0008               	return
 14108  1362                     __end_of_LED_setColor:	
 14109                           
 14110                           	psect	text46
 14111  0E1C                     __ptext46:	
 14112 ;; *************** function _HueToRGB *****************
 14113 ;; Defined at:
 14114 ;;		line 40 in file "led.c"
 14115 ;; Parameters:    Size  Location     Type
 14116 ;;  v1              4   67[BANK0 ] float 
 14117 ;;  v2              4   71[BANK0 ] float 
 14118 ;;  vH              4   75[BANK0 ] float 
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;		None
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  4   67[BANK0 ] float 
 14123 ;; Registers used:
 14124 ;;		wreg, status,2, status,0, pclath, cstack
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14130 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14131 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14133 ;;      Totals:         0      12       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14134 ;;Total ram usage:       16 bytes
 14135 ;; Hardware stack levels used:    1
 14136 ;; Hardware stack levels required when called:    6
 14137 ;; This function calls:
 14138 ;;		___fladd
 14139 ;;		___flge
 14140 ;;		___flmul
 14141 ;;		___flsub
 14142 ;; This function is called by:
 14143 ;;		_LED_setHSL
 14144 ;; This function uses a non-reentrant model
 14145 ;;
 14146                           
 14147                           
 14148                           ;psect for function _HueToRGB
 14149  0E1C                     _HueToRGB:	
 14150                           
 14151                           ;led.c: 41:  if (vH < 0)
 14152                           
 14153                           ;incstack = 0
 14154                           ; Regs used in _HueToRGB: [wreg+status,2+status,0+pclath+cstack]
 14155  0E1C  0140               	movlb	0	; select bank0
 14156  0E1D  086E               	movf	HueToRGB@vH+3,w
 14157  0E1E  00DA               	movwf	___flge@ff1+3
 14158  0E1F  086D               	movf	HueToRGB@vH+2,w
 14159  0E20  00D9               	movwf	___flge@ff1+2
 14160  0E21  086C               	movf	HueToRGB@vH+1,w
 14161  0E22  00D8               	movwf	___flge@ff1+1
 14162  0E23  086B               	movf	HueToRGB@vH,w
 14163  0E24  00D7               	movwf	___flge@ff1
 14164  0E25  3000               	movlw	0
 14165  0E26  00DE               	movwf	___flge@ff2+3
 14166  0E27  3000               	movlw	0
 14167  0E28  00DD               	movwf	___flge@ff2+2
 14168  0E29  3000               	movlw	0
 14169  0E2A  00DC               	movwf	___flge@ff2+1
 14170  0E2B  3000               	movlw	0
 14171  0E2C  00DB               	movwf	___flge@ff2
 14172  0E2D  3195  25E4  318E   	fcall	___flge
 14173  0E30  1803               	btfsc	3,0
 14174  0E31  2E4F               	goto	l969
 14175                           
 14176                           ;led.c: 42:   vH += 1;
 14177  0E32  303F               	movlw	63
 14178  0E33  0140               	movlb	0	; select bank0
 14179  0E34  00AC               	movwf	___fladd@b+3
 14180  0E35  3080               	movlw	128
 14181  0E36  00AB               	movwf	___fladd@b+2
 14182  0E37  3000               	movlw	0
 14183  0E38  00AA               	movwf	___fladd@b+1
 14184  0E39  3000               	movlw	0
 14185  0E3A  00A9               	movwf	___fladd@b
 14186  0E3B  086E               	movf	HueToRGB@vH+3,w
 14187  0E3C  00B0               	movwf	___fladd@a+3
 14188  0E3D  086D               	movf	HueToRGB@vH+2,w
 14189  0E3E  00AF               	movwf	___fladd@a+2
 14190  0E3F  086C               	movf	HueToRGB@vH+1,w
 14191  0E40  00AE               	movwf	___fladd@a+1
 14192  0E41  086B               	movf	HueToRGB@vH,w
 14193  0E42  00AD               	movwf	___fladd@a
 14194  0E43  318C  243A  318E   	fcall	___fladd
 14195  0E46  0140               	movlb	0	; select bank0
 14196  0E47  082C               	movf	?___fladd+3,w
 14197  0E48  00EE               	movwf	HueToRGB@vH+3
 14198  0E49  082B               	movf	?___fladd+2,w
 14199  0E4A  00ED               	movwf	HueToRGB@vH+2
 14200  0E4B  082A               	movf	?___fladd+1,w
 14201  0E4C  00EC               	movwf	HueToRGB@vH+1
 14202  0E4D  0829               	movf	?___fladd,w
 14203  0E4E  00EB               	movwf	HueToRGB@vH
 14204  0E4F                     l969:	
 14205                           
 14206                           ;led.c: 44:  if (vH > 1)
 14207  0E4F  303F               	movlw	63
 14208  0E50  0140               	movlb	0	; select bank0
 14209  0E51  00DA               	movwf	___flge@ff1+3
 14210  0E52  3080               	movlw	128
 14211  0E53  00D9               	movwf	___flge@ff1+2
 14212  0E54  3000               	movlw	0
 14213  0E55  00D8               	movwf	___flge@ff1+1
 14214  0E56  3000               	movlw	0
 14215  0E57  00D7               	movwf	___flge@ff1
 14216  0E58  086E               	movf	HueToRGB@vH+3,w
 14217  0E59  00DE               	movwf	___flge@ff2+3
 14218  0E5A  086D               	movf	HueToRGB@vH+2,w
 14219  0E5B  00DD               	movwf	___flge@ff2+2
 14220  0E5C  086C               	movf	HueToRGB@vH+1,w
 14221  0E5D  00DC               	movwf	___flge@ff2+1
 14222  0E5E  086B               	movf	HueToRGB@vH,w
 14223  0E5F  00DB               	movwf	___flge@ff2
 14224  0E60  3195  25E4  318E   	fcall	___flge
 14225  0E63  1803               	btfsc	3,0
 14226  0E64  2E82               	goto	l970
 14227                           
 14228                           ;led.c: 45:   vH -= 1;
 14229  0E65  303F               	movlw	63
 14230  0E66  0140               	movlb	0	; select bank0
 14231  0E67  00DA               	movwf	___flsub@a+3
 14232  0E68  3080               	movlw	128
 14233  0E69  00D9               	movwf	___flsub@a+2
 14234  0E6A  3000               	movlw	0
 14235  0E6B  00D8               	movwf	___flsub@a+1
 14236  0E6C  3000               	movlw	0
 14237  0E6D  00D7               	movwf	___flsub@a
 14238  0E6E  086E               	movf	HueToRGB@vH+3,w
 14239  0E6F  00DE               	movwf	___flsub@b+3
 14240  0E70  086D               	movf	HueToRGB@vH+2,w
 14241  0E71  00DD               	movwf	___flsub@b+2
 14242  0E72  086C               	movf	HueToRGB@vH+1,w
 14243  0E73  00DC               	movwf	___flsub@b+1
 14244  0E74  086B               	movf	HueToRGB@vH,w
 14245  0E75  00DB               	movwf	___flsub@b
 14246  0E76  3190  200A  318E   	fcall	___flsub
 14247  0E79  0140               	movlb	0	; select bank0
 14248  0E7A  085A               	movf	?___flsub+3,w
 14249  0E7B  00EE               	movwf	HueToRGB@vH+3
 14250  0E7C  0859               	movf	?___flsub+2,w
 14251  0E7D  00ED               	movwf	HueToRGB@vH+2
 14252  0E7E  0858               	movf	?___flsub+1,w
 14253  0E7F  00EC               	movwf	HueToRGB@vH+1
 14254  0E80  0857               	movf	?___flsub,w
 14255  0E81  00EB               	movwf	HueToRGB@vH
 14256  0E82                     l970:	
 14257                           
 14258                           ;led.c: 47:  if ((6 * vH) < 1)
 14259  0E82  3040               	movlw	64
 14260  0E83  0140               	movlb	0	; select bank0
 14261  0E84  00C0               	movwf	___flmul@b+3
 14262  0E85  30C0               	movlw	192
 14263  0E86  00BF               	movwf	___flmul@b+2
 14264  0E87  3000               	movlw	0
 14265  0E88  00BE               	movwf	___flmul@b+1
 14266  0E89  3000               	movlw	0
 14267  0E8A  00BD               	movwf	___flmul@b
 14268  0E8B  086E               	movf	HueToRGB@vH+3,w
 14269  0E8C  00C4               	movwf	___flmul@a+3
 14270  0E8D  086D               	movf	HueToRGB@vH+2,w
 14271  0E8E  00C3               	movwf	___flmul@a+2
 14272  0E8F  086C               	movf	HueToRGB@vH+1,w
 14273  0E90  00C2               	movwf	___flmul@a+1
 14274  0E91  086B               	movf	HueToRGB@vH,w
 14275  0E92  00C1               	movwf	___flmul@a
 14276  0E93  3183  23F6  318E   	fcall	___flmul
 14277  0E96  0140               	movlb	0	; select bank0
 14278  0E97  0840               	movf	?___flmul+3,w
 14279  0E98  00DA               	movwf	___flge@ff1+3
 14280  0E99  083F               	movf	?___flmul+2,w
 14281  0E9A  00D9               	movwf	___flge@ff1+2
 14282  0E9B  083E               	movf	?___flmul+1,w
 14283  0E9C  00D8               	movwf	___flge@ff1+1
 14284  0E9D  083D               	movf	?___flmul,w
 14285  0E9E  00D7               	movwf	___flge@ff1
 14286  0E9F  303F               	movlw	63
 14287  0EA0  00DE               	movwf	___flge@ff2+3
 14288  0EA1  3080               	movlw	128
 14289  0EA2  00DD               	movwf	___flge@ff2+2
 14290  0EA3  3000               	movlw	0
 14291  0EA4  00DC               	movwf	___flge@ff2+1
 14292  0EA5  3000               	movlw	0
 14293  0EA6  00DB               	movwf	___flge@ff2
 14294  0EA7  3195  25E4  318E   	fcall	___flge
 14295  0EAA  1803               	btfsc	3,0
 14296  0EAB  2F1D               	goto	l5629
 14297                           
 14298                           ;led.c: 48:   return (v1 + (v2 - v1) * 6 * vH);
 14299  0EAC  3040               	movlw	64
 14300  0EAD  0140               	movlb	0	; select bank0
 14301  0EAE  00C0               	movwf	___flmul@b+3
 14302  0EAF  30C0               	movlw	192
 14303  0EB0  00BF               	movwf	___flmul@b+2
 14304  0EB1  3000               	movlw	0
 14305  0EB2  00BE               	movwf	___flmul@b+1
 14306  0EB3  3000               	movlw	0
 14307  0EB4  00BD               	movwf	___flmul@b
 14308  0EB5  0866               	movf	HueToRGB@v1+3,w
 14309  0EB6  00DA               	movwf	___flsub@a+3
 14310  0EB7  0865               	movf	HueToRGB@v1+2,w
 14311  0EB8  00D9               	movwf	___flsub@a+2
 14312  0EB9  0864               	movf	HueToRGB@v1+1,w
 14313  0EBA  00D8               	movwf	___flsub@a+1
 14314  0EBB  0863               	movf	HueToRGB@v1,w
 14315  0EBC  00D7               	movwf	___flsub@a
 14316  0EBD  086A               	movf	HueToRGB@v2+3,w
 14317  0EBE  00DE               	movwf	___flsub@b+3
 14318  0EBF  0869               	movf	HueToRGB@v2+2,w
 14319  0EC0  00DD               	movwf	___flsub@b+2
 14320  0EC1  0868               	movf	HueToRGB@v2+1,w
 14321  0EC2  00DC               	movwf	___flsub@b+1
 14322  0EC3  0867               	movf	HueToRGB@v2,w
 14323  0EC4  00DB               	movwf	___flsub@b
 14324  0EC5  3190  200A  318E   	fcall	___flsub
 14325  0EC8  0140               	movlb	0	; select bank0
 14326  0EC9  085A               	movf	?___flsub+3,w
 14327  0ECA  00C4               	movwf	___flmul@a+3
 14328  0ECB  0859               	movf	?___flsub+2,w
 14329  0ECC  00C3               	movwf	___flmul@a+2
 14330  0ECD  0858               	movf	?___flsub+1,w
 14331  0ECE  00C2               	movwf	___flmul@a+1
 14332  0ECF  0857               	movf	?___flsub,w
 14333  0ED0  00C1               	movwf	___flmul@a
 14334  0ED1  3183  23F6  318E   	fcall	___flmul
 14335  0ED4  0140               	movlb	0	; select bank0
 14336  0ED5  0840               	movf	?___flmul+3,w
 14337  0ED6  0141               	movlb	1	; select bank1
 14338  0ED7  00A3               	movwf	(_HueToRGB$2896+3)^(0+128)
 14339  0ED8  0140               	movlb	0	; select bank0
 14340  0ED9  083F               	movf	?___flmul+2,w
 14341  0EDA  0141               	movlb	1	; select bank1
 14342  0EDB  00A2               	movwf	(_HueToRGB$2896+2)^(0+128)
 14343  0EDC  0140               	movlb	0	; select bank0
 14344  0EDD  083E               	movf	?___flmul+1,w
 14345  0EDE  0141               	movlb	1	; select bank1
 14346  0EDF  00A1               	movwf	(_HueToRGB$2896+1)^(0+128)
 14347  0EE0  0140               	movlb	0	; select bank0
 14348  0EE1  083D               	movf	?___flmul,w
 14349  0EE2  0141               	movlb	1	; select bank1
 14350  0EE3  00A0               	movwf	_HueToRGB$2896^(0+128)
 14351                           
 14352                           ;led.c: 48:   return (v1 + (v2 - v1) * 6 * vH);
 14353  0EE4  0140               	movlb	0	; select bank0
 14354  0EE5  0866               	movf	HueToRGB@v1+3,w
 14355  0EE6  00AC               	movwf	___fladd@b+3
 14356  0EE7  0865               	movf	HueToRGB@v1+2,w
 14357  0EE8  00AB               	movwf	___fladd@b+2
 14358  0EE9  0864               	movf	HueToRGB@v1+1,w
 14359  0EEA  00AA               	movwf	___fladd@b+1
 14360  0EEB  0863               	movf	HueToRGB@v1,w
 14361  0EEC  00A9               	movwf	___fladd@b
 14362  0EED  086E               	movf	HueToRGB@vH+3,w
 14363  0EEE  00C0               	movwf	___flmul@b+3
 14364  0EEF  086D               	movf	HueToRGB@vH+2,w
 14365  0EF0  00BF               	movwf	___flmul@b+2
 14366  0EF1  086C               	movf	HueToRGB@vH+1,w
 14367  0EF2  00BE               	movwf	___flmul@b+1
 14368  0EF3  086B               	movf	HueToRGB@vH,w
 14369  0EF4  00BD               	movwf	___flmul@b
 14370  0EF5  0141               	movlb	1	; select bank1
 14371  0EF6  0823               	movf	(_HueToRGB$2896+3)^(0+128),w
 14372  0EF7  0140               	movlb	0	; select bank0
 14373  0EF8  00C4               	movwf	___flmul@a+3
 14374  0EF9  0141               	movlb	1	; select bank1
 14375  0EFA  0822               	movf	(_HueToRGB$2896+2)^(0+128),w
 14376  0EFB  0140               	movlb	0	; select bank0
 14377  0EFC  00C3               	movwf	___flmul@a+2
 14378  0EFD  0141               	movlb	1	; select bank1
 14379  0EFE  0821               	movf	(_HueToRGB$2896+1)^(0+128),w
 14380  0EFF  0140               	movlb	0	; select bank0
 14381  0F00  00C2               	movwf	___flmul@a+1
 14382  0F01  0141               	movlb	1	; select bank1
 14383  0F02  0820               	movf	_HueToRGB$2896^(0+128),w
 14384  0F03  0140               	movlb	0	; select bank0
 14385  0F04  00C1               	movwf	___flmul@a
 14386  0F05  3183  23F6  318E   	fcall	___flmul
 14387  0F08  0140               	movlb	0	; select bank0
 14388  0F09  0840               	movf	?___flmul+3,w
 14389  0F0A  00B0               	movwf	___fladd@a+3
 14390  0F0B  083F               	movf	?___flmul+2,w
 14391  0F0C  00AF               	movwf	___fladd@a+2
 14392  0F0D  083E               	movf	?___flmul+1,w
 14393  0F0E  00AE               	movwf	___fladd@a+1
 14394  0F0F  083D               	movf	?___flmul,w
 14395  0F10  00AD               	movwf	___fladd@a
 14396  0F11  318C  243A         	fcall	___fladd
 14397  0F13  0140               	movlb	0	; select bank0
 14398  0F14  082C               	movf	?___fladd+3,w
 14399  0F15  00E6               	movwf	?_HueToRGB+3
 14400  0F16  082B               	movf	?___fladd+2,w
 14401  0F17  00E5               	movwf	?_HueToRGB+2
 14402  0F18  082A               	movf	?___fladd+1,w
 14403  0F19  00E4               	movwf	?_HueToRGB+1
 14404  0F1A  0829               	movf	?___fladd,w
 14405  0F1B  00E3               	movwf	?_HueToRGB
 14406  0F1C  0008               	return
 14407  0F1D                     l5629:	
 14408                           
 14409                           ;led.c: 50:  if ((2 * vH) < 1)
 14410  0F1D  3040               	movlw	64
 14411  0F1E  0140               	movlb	0	; select bank0
 14412  0F1F  00C0               	movwf	___flmul@b+3
 14413  0F20  3000               	movlw	0
 14414  0F21  00BF               	movwf	___flmul@b+2
 14415  0F22  3000               	movlw	0
 14416  0F23  00BE               	movwf	___flmul@b+1
 14417  0F24  3000               	movlw	0
 14418  0F25  00BD               	movwf	___flmul@b
 14419  0F26  086E               	movf	HueToRGB@vH+3,w
 14420  0F27  00C4               	movwf	___flmul@a+3
 14421  0F28  086D               	movf	HueToRGB@vH+2,w
 14422  0F29  00C3               	movwf	___flmul@a+2
 14423  0F2A  086C               	movf	HueToRGB@vH+1,w
 14424  0F2B  00C2               	movwf	___flmul@a+1
 14425  0F2C  086B               	movf	HueToRGB@vH,w
 14426  0F2D  00C1               	movwf	___flmul@a
 14427  0F2E  3183  23F6  318E   	fcall	___flmul
 14428  0F31  0140               	movlb	0	; select bank0
 14429  0F32  0840               	movf	?___flmul+3,w
 14430  0F33  00DA               	movwf	___flge@ff1+3
 14431  0F34  083F               	movf	?___flmul+2,w
 14432  0F35  00D9               	movwf	___flge@ff1+2
 14433  0F36  083E               	movf	?___flmul+1,w
 14434  0F37  00D8               	movwf	___flge@ff1+1
 14435  0F38  083D               	movf	?___flmul,w
 14436  0F39  00D7               	movwf	___flge@ff1
 14437  0F3A  303F               	movlw	63
 14438  0F3B  00DE               	movwf	___flge@ff2+3
 14439  0F3C  3080               	movlw	128
 14440  0F3D  00DD               	movwf	___flge@ff2+2
 14441  0F3E  3000               	movlw	0
 14442  0F3F  00DC               	movwf	___flge@ff2+1
 14443  0F40  3000               	movlw	0
 14444  0F41  00DB               	movwf	___flge@ff2
 14445  0F42  3195  25E4  318E   	fcall	___flge
 14446  0F45  1803               	btfsc	3,0
 14447  0F46  2F51               	goto	l5635
 14448                           
 14449                           ;led.c: 51:   return v2;
 14450  0F47  0140               	movlb	0	; select bank0
 14451  0F48  086A               	movf	HueToRGB@v2+3,w
 14452  0F49  00E6               	movwf	?_HueToRGB+3
 14453  0F4A  0869               	movf	HueToRGB@v2+2,w
 14454  0F4B  00E5               	movwf	?_HueToRGB+2
 14455  0F4C  0868               	movf	HueToRGB@v2+1,w
 14456  0F4D  00E4               	movwf	?_HueToRGB+1
 14457  0F4E  0867               	movf	HueToRGB@v2,w
 14458  0F4F  00E3               	movwf	?_HueToRGB
 14459  0F50  0008               	return
 14460  0F51                     l5635:	
 14461                           
 14462                           ;led.c: 53:  if ((3 * vH) < 2)
 14463  0F51  3040               	movlw	64
 14464  0F52  0140               	movlb	0	; select bank0
 14465  0F53  00C0               	movwf	___flmul@b+3
 14466  0F54  3040               	movlw	64
 14467  0F55  00BF               	movwf	___flmul@b+2
 14468  0F56  3000               	movlw	0
 14469  0F57  00BE               	movwf	___flmul@b+1
 14470  0F58  3000               	movlw	0
 14471  0F59  00BD               	movwf	___flmul@b
 14472  0F5A  086E               	movf	HueToRGB@vH+3,w
 14473  0F5B  00C4               	movwf	___flmul@a+3
 14474  0F5C  086D               	movf	HueToRGB@vH+2,w
 14475  0F5D  00C3               	movwf	___flmul@a+2
 14476  0F5E  086C               	movf	HueToRGB@vH+1,w
 14477  0F5F  00C2               	movwf	___flmul@a+1
 14478  0F60  086B               	movf	HueToRGB@vH,w
 14479  0F61  00C1               	movwf	___flmul@a
 14480  0F62  3183  23F6  318E   	fcall	___flmul
 14481  0F65  0140               	movlb	0	; select bank0
 14482  0F66  0840               	movf	?___flmul+3,w
 14483  0F67  00DA               	movwf	___flge@ff1+3
 14484  0F68  083F               	movf	?___flmul+2,w
 14485  0F69  00D9               	movwf	___flge@ff1+2
 14486  0F6A  083E               	movf	?___flmul+1,w
 14487  0F6B  00D8               	movwf	___flge@ff1+1
 14488  0F6C  083D               	movf	?___flmul,w
 14489  0F6D  00D7               	movwf	___flge@ff1
 14490  0F6E  3040               	movlw	64
 14491  0F6F  00DE               	movwf	___flge@ff2+3
 14492  0F70  3000               	movlw	0
 14493  0F71  00DD               	movwf	___flge@ff2+2
 14494  0F72  3000               	movlw	0
 14495  0F73  00DC               	movwf	___flge@ff2+1
 14496  0F74  3000               	movlw	0
 14497  0F75  00DB               	movwf	___flge@ff2
 14498  0F76  3195  25E4  318E   	fcall	___flge
 14499  0F79  1803               	btfsc	3,0
 14500  0F7A  0008               	return
 14501                           
 14502                           ;led.c: 54:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14503  0F7B  0140               	movlb	0	; select bank0
 14504  0F7C  086E               	movf	HueToRGB@vH+3,w
 14505  0F7D  00DA               	movwf	___flsub@a+3
 14506  0F7E  086D               	movf	HueToRGB@vH+2,w
 14507  0F7F  00D9               	movwf	___flsub@a+2
 14508  0F80  086C               	movf	HueToRGB@vH+1,w
 14509  0F81  00D8               	movwf	___flsub@a+1
 14510  0F82  086B               	movf	HueToRGB@vH,w
 14511  0F83  00D7               	movwf	___flsub@a
 14512  0F84  303F               	movlw	63
 14513  0F85  00DE               	movwf	___flsub@b+3
 14514  0F86  302A               	movlw	42
 14515  0F87  00DD               	movwf	___flsub@b+2
 14516  0F88  30AA               	movlw	170
 14517  0F89  00DC               	movwf	___flsub@b+1
 14518  0F8A  30AB               	movlw	171
 14519  0F8B  00DB               	movwf	___flsub@b
 14520  0F8C  3190  200A  318E   	fcall	___flsub
 14521  0F8F  0140               	movlb	0	; select bank0
 14522  0F90  085A               	movf	?___flsub+3,w
 14523  0F91  00C0               	movwf	___flmul@b+3
 14524  0F92  0859               	movf	?___flsub+2,w
 14525  0F93  00BF               	movwf	___flmul@b+2
 14526  0F94  0858               	movf	?___flsub+1,w
 14527  0F95  00BE               	movwf	___flmul@b+1
 14528  0F96  0857               	movf	?___flsub,w
 14529  0F97  00BD               	movwf	___flmul@b
 14530  0F98  0866               	movf	HueToRGB@v1+3,w
 14531  0F99  00DA               	movwf	___flsub@a+3
 14532  0F9A  0865               	movf	HueToRGB@v1+2,w
 14533  0F9B  00D9               	movwf	___flsub@a+2
 14534  0F9C  0864               	movf	HueToRGB@v1+1,w
 14535  0F9D  00D8               	movwf	___flsub@a+1
 14536  0F9E  0863               	movf	HueToRGB@v1,w
 14537  0F9F  00D7               	movwf	___flsub@a
 14538  0FA0  086A               	movf	HueToRGB@v2+3,w
 14539  0FA1  00DE               	movwf	___flsub@b+3
 14540  0FA2  0869               	movf	HueToRGB@v2+2,w
 14541  0FA3  00DD               	movwf	___flsub@b+2
 14542  0FA4  0868               	movf	HueToRGB@v2+1,w
 14543  0FA5  00DC               	movwf	___flsub@b+1
 14544  0FA6  0867               	movf	HueToRGB@v2,w
 14545  0FA7  00DB               	movwf	___flsub@b
 14546  0FA8  3190  200A  318E   	fcall	___flsub
 14547  0FAB  0140               	movlb	0	; select bank0
 14548  0FAC  085A               	movf	?___flsub+3,w
 14549  0FAD  00C4               	movwf	___flmul@a+3
 14550  0FAE  0859               	movf	?___flsub+2,w
 14551  0FAF  00C3               	movwf	___flmul@a+2
 14552  0FB0  0858               	movf	?___flsub+1,w
 14553  0FB1  00C2               	movwf	___flmul@a+1
 14554  0FB2  0857               	movf	?___flsub,w
 14555  0FB3  00C1               	movwf	___flmul@a
 14556  0FB4  3183  23F6  318E   	fcall	___flmul
 14557  0FB7  0140               	movlb	0	; select bank0
 14558  0FB8  0840               	movf	?___flmul+3,w
 14559  0FB9  0141               	movlb	1	; select bank1
 14560  0FBA  00A3               	movwf	(_HueToRGB$2896+3)^(0+128)
 14561  0FBB  0140               	movlb	0	; select bank0
 14562  0FBC  083F               	movf	?___flmul+2,w
 14563  0FBD  0141               	movlb	1	; select bank1
 14564  0FBE  00A2               	movwf	(_HueToRGB$2896+2)^(0+128)
 14565  0FBF  0140               	movlb	0	; select bank0
 14566  0FC0  083E               	movf	?___flmul+1,w
 14567  0FC1  0141               	movlb	1	; select bank1
 14568  0FC2  00A1               	movwf	(_HueToRGB$2896+1)^(0+128)
 14569  0FC3  0140               	movlb	0	; select bank0
 14570  0FC4  083D               	movf	?___flmul,w
 14571  0FC5  0141               	movlb	1	; select bank1
 14572  0FC6  00A0               	movwf	_HueToRGB$2896^(0+128)
 14573                           
 14574                           ;led.c: 54:   return (v1 + (v2 - v1) * ((2.0f / 3) - vH) * 6);
 14575  0FC7  0140               	movlb	0	; select bank0
 14576  0FC8  0866               	movf	HueToRGB@v1+3,w
 14577  0FC9  00AC               	movwf	___fladd@b+3
 14578  0FCA  0865               	movf	HueToRGB@v1+2,w
 14579  0FCB  00AB               	movwf	___fladd@b+2
 14580  0FCC  0864               	movf	HueToRGB@v1+1,w
 14581  0FCD  00AA               	movwf	___fladd@b+1
 14582  0FCE  0863               	movf	HueToRGB@v1,w
 14583  0FCF  00A9               	movwf	___fladd@b
 14584  0FD0  3040               	movlw	64
 14585  0FD1  00C0               	movwf	___flmul@b+3
 14586  0FD2  30C0               	movlw	192
 14587  0FD3  00BF               	movwf	___flmul@b+2
 14588  0FD4  3000               	movlw	0
 14589  0FD5  00BE               	movwf	___flmul@b+1
 14590  0FD6  3000               	movlw	0
 14591  0FD7  00BD               	movwf	___flmul@b
 14592  0FD8  0141               	movlb	1	; select bank1
 14593  0FD9  0823               	movf	(_HueToRGB$2896+3)^(0+128),w
 14594  0FDA  0140               	movlb	0	; select bank0
 14595  0FDB  00C4               	movwf	___flmul@a+3
 14596  0FDC  0141               	movlb	1	; select bank1
 14597  0FDD  0822               	movf	(_HueToRGB$2896+2)^(0+128),w
 14598  0FDE  0140               	movlb	0	; select bank0
 14599  0FDF  00C3               	movwf	___flmul@a+2
 14600  0FE0  0141               	movlb	1	; select bank1
 14601  0FE1  0821               	movf	(_HueToRGB$2896+1)^(0+128),w
 14602  0FE2  0140               	movlb	0	; select bank0
 14603  0FE3  00C2               	movwf	___flmul@a+1
 14604  0FE4  0141               	movlb	1	; select bank1
 14605  0FE5  0820               	movf	_HueToRGB$2896^(0+128),w
 14606  0FE6  0140               	movlb	0	; select bank0
 14607  0FE7  00C1               	movwf	___flmul@a
 14608  0FE8  3183  23F6  318E   	fcall	___flmul
 14609  0FEB  0140               	movlb	0	; select bank0
 14610  0FEC  0840               	movf	?___flmul+3,w
 14611  0FED  00B0               	movwf	___fladd@a+3
 14612  0FEE  083F               	movf	?___flmul+2,w
 14613  0FEF  00AF               	movwf	___fladd@a+2
 14614  0FF0  083E               	movf	?___flmul+1,w
 14615  0FF1  00AE               	movwf	___fladd@a+1
 14616  0FF2  083D               	movf	?___flmul,w
 14617  0FF3  00AD               	movwf	___fladd@a
 14618  0FF4  318C  243A         	fcall	___fladd
 14619  0FF6  0140               	movlb	0	; select bank0
 14620  0FF7  082C               	movf	?___fladd+3,w
 14621  0FF8  00E6               	movwf	?_HueToRGB+3
 14622  0FF9  082B               	movf	?___fladd+2,w
 14623  0FFA  00E5               	movwf	?_HueToRGB+2
 14624  0FFB  082A               	movf	?___fladd+1,w
 14625  0FFC  00E4               	movwf	?_HueToRGB+1
 14626  0FFD  0829               	movf	?___fladd,w
 14627  0FFE  00E3               	movwf	?_HueToRGB
 14628  0FFF  0008               	return
 14629  1000                     __end_of_HueToRGB:	
 14630                           ;led.c: 56:  return v1;
 14631                           
 14632                           
 14633                           	psect	text47
 14634  100A                     __ptext47:	
 14635 ;; *************** function ___flsub *****************
 14636 ;; Defined at:
 14637 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14638 ;; Parameters:    Size  Location     Type
 14639 ;;  a               4   55[BANK0 ] float 
 14640 ;;  b               4   59[BANK0 ] float 
 14641 ;; Auto vars:     Size  Location     Type
 14642 ;;		None
 14643 ;; Return value:  Size  Location     Type
 14644 ;;                  4   55[BANK0 ] float 
 14645 ;; Registers used:
 14646 ;;		wreg, status,2, status,0, pclath, cstack
 14647 ;; Tracked objects:
 14648 ;;		On entry : 0/0
 14649 ;;		On exit  : 0/0
 14650 ;;		Unchanged: 0/0
 14651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14652 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14655 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14656 ;;Total ram usage:        8 bytes
 14657 ;; Hardware stack levels used:    1
 14658 ;; Hardware stack levels required when called:    5
 14659 ;; This function calls:
 14660 ;;		___fladd
 14661 ;; This function is called by:
 14662 ;;		_HueToRGB
 14663 ;;		_LED_setHSL
 14664 ;;		_pulseColors
 14665 ;; This function uses a non-reentrant model
 14666 ;;
 14667                           
 14668                           
 14669                           ;psect for function ___flsub
 14670  100A                     ___flsub:	
 14671                           
 14672                           ;incstack = 0
 14673                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 14674  100A  3080               	movlw	128
 14675  100B  0140               	movlb	0	; select bank0
 14676  100C  06DA               	xorwf	___flsub@a+3,f
 14677  100D  085E               	movf	___flsub@b+3,w
 14678  100E  00AC               	movwf	___fladd@b+3
 14679  100F  085D               	movf	___flsub@b+2,w
 14680  1010  00AB               	movwf	___fladd@b+2
 14681  1011  085C               	movf	___flsub@b+1,w
 14682  1012  00AA               	movwf	___fladd@b+1
 14683  1013  085B               	movf	___flsub@b,w
 14684  1014  00A9               	movwf	___fladd@b
 14685  1015  085A               	movf	___flsub@a+3,w
 14686  1016  00B0               	movwf	___fladd@a+3
 14687  1017  0859               	movf	___flsub@a+2,w
 14688  1018  00AF               	movwf	___fladd@a+2
 14689  1019  0858               	movf	___flsub@a+1,w
 14690  101A  00AE               	movwf	___fladd@a+1
 14691  101B  0857               	movf	___flsub@a,w
 14692  101C  00AD               	movwf	___fladd@a
 14693  101D  318C  243A         	fcall	___fladd
 14694  101F  0140               	movlb	0	; select bank0
 14695  1020  082C               	movf	?___fladd+3,w
 14696  1021  00DA               	movwf	?___flsub+3
 14697  1022  082B               	movf	?___fladd+2,w
 14698  1023  00D9               	movwf	?___flsub+2
 14699  1024  082A               	movf	?___fladd+1,w
 14700  1025  00D8               	movwf	?___flsub+1
 14701  1026  0829               	movf	?___fladd,w
 14702  1027  00D7               	movwf	?___flsub
 14703  1028  0008               	return
 14704  1029                     __end_of___flsub:	
 14705                           
 14706                           	psect	text48
 14707  0C3A                     __ptext48:	
 14708 ;; *************** function ___fladd *****************
 14709 ;; Defined at:
 14710 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 14711 ;; Parameters:    Size  Location     Type
 14712 ;;  b               4    9[BANK0 ] float 
 14713 ;;  a               4   13[BANK0 ] float 
 14714 ;; Auto vars:     Size  Location     Type
 14715 ;;  grs             1   28[BANK0 ] unsigned char 
 14716 ;;  bexp            1   27[BANK0 ] unsigned char 
 14717 ;;  aexp            1   26[BANK0 ] unsigned char 
 14718 ;;  signs           1   25[BANK0 ] unsigned char 
 14719 ;; Return value:  Size  Location     Type
 14720 ;;                  4    9[BANK0 ] unsigned char 
 14721 ;; Registers used:
 14722 ;;		wreg, status,2, status,0
 14723 ;; Tracked objects:
 14724 ;;		On entry : 0/0
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14728 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14729 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14730 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14731 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14732 ;;Total ram usage:       20 bytes
 14733 ;; Hardware stack levels used:    1
 14734 ;; Hardware stack levels required when called:    4
 14735 ;; This function calls:
 14736 ;;		Nothing
 14737 ;; This function is called by:
 14738 ;;		_HueToRGB
 14739 ;;		_LED_setHSL
 14740 ;;		___flsub
 14741 ;; This function uses a non-reentrant model
 14742 ;;
 14743                           
 14744                           
 14745                           ;psect for function ___fladd
 14746  0C3A                     ___fladd:	
 14747                           
 14748                           ;incstack = 0
 14749                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 14750  0C3A  0140               	movlb	0	; select bank0
 14751  0C3B  082C               	movf	___fladd@b+3,w
 14752  0C3C  3980               	andlw	128
 14753  0C3D  00B1               	movwf	??___fladd
 14754  0C3E  0831               	movf	??___fladd,w
 14755  0C3F  00B9               	movwf	___fladd@signs
 14756  0C40  352C               	lslf	___fladd@b+3,w
 14757  0C41  00B1               	movwf	??___fladd
 14758  0C42  0831               	movf	??___fladd,w
 14759  0C43  00BB               	movwf	___fladd@bexp
 14760  0C44  1BAB               	btfsc	___fladd@b+2,7
 14761  0C45  143B               	bsf	___fladd@bexp,0
 14762  0C46  083B               	movf	___fladd@bexp,w
 14763  0C47  1903               	btfsc	3,2
 14764  0C48  2C57               	goto	l3703
 14765  0C49  0A3B               	incf	___fladd@bexp,w
 14766  0C4A  1D03               	btfss	3,2
 14767  0C4B  2C54               	goto	l3699
 14768  0C4C  3000               	movlw	0
 14769  0C4D  00AC               	movwf	___fladd@b+3
 14770  0C4E  3000               	movlw	0
 14771  0C4F  00AB               	movwf	___fladd@b+2
 14772  0C50  3000               	movlw	0
 14773  0C51  00AA               	movwf	___fladd@b+1
 14774  0C52  3000               	movlw	0
 14775  0C53  00A9               	movwf	___fladd@b
 14776  0C54                     l3699:	
 14777  0C54  17AB               	bsf	___fladd@b+2,7
 14778  0C55  01AC               	clrf	___fladd@b+3
 14779  0C56  2C5F               	goto	l3705
 14780  0C57                     l3703:	
 14781  0C57  3000               	movlw	0
 14782  0C58  00AC               	movwf	___fladd@b+3
 14783  0C59  3000               	movlw	0
 14784  0C5A  00AB               	movwf	___fladd@b+2
 14785  0C5B  3000               	movlw	0
 14786  0C5C  00AA               	movwf	___fladd@b+1
 14787  0C5D  3000               	movlw	0
 14788  0C5E  00A9               	movwf	___fladd@b
 14789  0C5F                     l3705:	
 14790  0C5F  0830               	movf	___fladd@a+3,w
 14791  0C60  3980               	andlw	128
 14792  0C61  00B1               	movwf	??___fladd
 14793  0C62  0831               	movf	??___fladd,w
 14794  0C63  00BA               	movwf	___fladd@aexp
 14795  0C64  083A               	movf	___fladd@aexp,w
 14796  0C65  0639               	xorwf	___fladd@signs,w
 14797  0C66  1D03               	btfss	3,2
 14798  0C67  1739               	bsf	___fladd@signs,6
 14799  0C68  3530               	lslf	___fladd@a+3,w
 14800  0C69  00B1               	movwf	??___fladd
 14801  0C6A  0831               	movf	??___fladd,w
 14802  0C6B  00BA               	movwf	___fladd@aexp
 14803  0C6C  1BAF               	btfsc	___fladd@a+2,7
 14804  0C6D  143A               	bsf	___fladd@aexp,0
 14805  0C6E  083A               	movf	___fladd@aexp,w
 14806  0C6F  1903               	btfsc	3,2
 14807  0C70  2C7F               	goto	l3727
 14808  0C71  0A3A               	incf	___fladd@aexp,w
 14809  0C72  1D03               	btfss	3,2
 14810  0C73  2C7C               	goto	l3723
 14811  0C74  3000               	movlw	0
 14812  0C75  00B0               	movwf	___fladd@a+3
 14813  0C76  3000               	movlw	0
 14814  0C77  00AF               	movwf	___fladd@a+2
 14815  0C78  3000               	movlw	0
 14816  0C79  00AE               	movwf	___fladd@a+1
 14817  0C7A  3000               	movlw	0
 14818  0C7B  00AD               	movwf	___fladd@a
 14819  0C7C                     l3723:	
 14820  0C7C  17AF               	bsf	___fladd@a+2,7
 14821  0C7D  01B0               	clrf	___fladd@a+3
 14822  0C7E  2C87               	goto	l1610
 14823  0C7F                     l3727:	
 14824  0C7F  3000               	movlw	0
 14825  0C80  00B0               	movwf	___fladd@a+3
 14826  0C81  3000               	movlw	0
 14827  0C82  00AF               	movwf	___fladd@a+2
 14828  0C83  3000               	movlw	0
 14829  0C84  00AE               	movwf	___fladd@a+1
 14830  0C85  3000               	movlw	0
 14831  0C86  00AD               	movwf	___fladd@a
 14832  0C87                     l1610:	
 14833  0C87  083B               	movf	___fladd@bexp,w
 14834  0C88  023A               	subwf	___fladd@aexp,w
 14835  0C89  1803               	skipnc
 14836  0C8A  2CCD               	goto	l3763
 14837  0C8B  1F39               	btfss	___fladd@signs,6
 14838  0C8C  2C91               	goto	l3733
 14839  0C8D  3080               	movlw	128
 14840  0C8E  00B1               	movwf	??___fladd
 14841  0C8F  0831               	movf	??___fladd,w
 14842  0C90  06B9               	xorwf	___fladd@signs,f
 14843  0C91                     l3733:	
 14844  0C91  083B               	movf	___fladd@bexp,w
 14845  0C92  00B1               	movwf	??___fladd
 14846  0C93  0831               	movf	??___fladd,w
 14847  0C94  00BC               	movwf	___fladd@grs
 14848  0C95  083A               	movf	___fladd@aexp,w
 14849  0C96  00B1               	movwf	??___fladd
 14850  0C97  0831               	movf	??___fladd,w
 14851  0C98  00BB               	movwf	___fladd@bexp
 14852  0C99  083C               	movf	___fladd@grs,w
 14853  0C9A  00B1               	movwf	??___fladd
 14854  0C9B  0831               	movf	??___fladd,w
 14855  0C9C  00BA               	movwf	___fladd@aexp
 14856  0C9D  0829               	movf	___fladd@b,w
 14857  0C9E  00B1               	movwf	??___fladd
 14858  0C9F  0831               	movf	??___fladd,w
 14859  0CA0  00BC               	movwf	___fladd@grs
 14860  0CA1  082D               	movf	___fladd@a,w
 14861  0CA2  00B1               	movwf	??___fladd
 14862  0CA3  0831               	movf	??___fladd,w
 14863  0CA4  00A9               	movwf	___fladd@b
 14864  0CA5  083C               	movf	___fladd@grs,w
 14865  0CA6  00B1               	movwf	??___fladd
 14866  0CA7  0831               	movf	??___fladd,w
 14867  0CA8  00AD               	movwf	___fladd@a
 14868  0CA9  082A               	movf	___fladd@b+1,w
 14869  0CAA  00B1               	movwf	??___fladd
 14870  0CAB  0831               	movf	??___fladd,w
 14871  0CAC  00BC               	movwf	___fladd@grs
 14872  0CAD  082E               	movf	___fladd@a+1,w
 14873  0CAE  00B1               	movwf	??___fladd
 14874  0CAF  0831               	movf	??___fladd,w
 14875  0CB0  00AA               	movwf	___fladd@b+1
 14876  0CB1  083C               	movf	___fladd@grs,w
 14877  0CB2  00B1               	movwf	??___fladd
 14878  0CB3  0831               	movf	??___fladd,w
 14879  0CB4  00AE               	movwf	___fladd@a+1
 14880  0CB5  082B               	movf	___fladd@b+2,w
 14881  0CB6  00B1               	movwf	??___fladd
 14882  0CB7  0831               	movf	??___fladd,w
 14883  0CB8  00BC               	movwf	___fladd@grs
 14884  0CB9  082F               	movf	___fladd@a+2,w
 14885  0CBA  00B1               	movwf	??___fladd
 14886  0CBB  0831               	movf	??___fladd,w
 14887  0CBC  00AB               	movwf	___fladd@b+2
 14888  0CBD  083C               	movf	___fladd@grs,w
 14889  0CBE  00B1               	movwf	??___fladd
 14890  0CBF  0831               	movf	??___fladd,w
 14891  0CC0  00AF               	movwf	___fladd@a+2
 14892  0CC1  082C               	movf	___fladd@b+3,w
 14893  0CC2  00B1               	movwf	??___fladd
 14894  0CC3  0831               	movf	??___fladd,w
 14895  0CC4  00BC               	movwf	___fladd@grs
 14896  0CC5  0830               	movf	___fladd@a+3,w
 14897  0CC6  00B1               	movwf	??___fladd
 14898  0CC7  0831               	movf	??___fladd,w
 14899  0CC8  00AC               	movwf	___fladd@b+3
 14900  0CC9  083C               	movf	___fladd@grs,w
 14901  0CCA  00B1               	movwf	??___fladd
 14902  0CCB  0831               	movf	??___fladd,w
 14903  0CCC  00B0               	movwf	___fladd@a+3
 14904  0CCD                     l3763:	
 14905  0CCD  01BC               	clrf	___fladd@grs
 14906  0CCE  083A               	movf	___fladd@aexp,w
 14907  0CCF  00B1               	movwf	??___fladd
 14908  0CD0  01B2               	clrf	??___fladd+1
 14909  0CD1  0832               	movf	??___fladd+1,w
 14910  0CD2  00B4               	movwf	??___fladd+3
 14911  0CD3  083B               	movf	___fladd@bexp,w
 14912  0CD4  0231               	subwf	??___fladd,w
 14913  0CD5  00B3               	movwf	??___fladd+2
 14914  0CD6  1C03               	skipc
 14915  0CD7  03B4               	decf	??___fladd+3,f
 14916  0CD8  0834               	movf	??___fladd+3,w
 14917  0CD9  3A80               	xorlw	128
 14918  0CDA  00B5               	movwf	??___fladd+4
 14919  0CDB  3080               	movlw	128
 14920  0CDC  0235               	subwf	??___fladd+4,w
 14921  0CDD  1D03               	skipz
 14922  0CDE  2CE1               	goto	u2865
 14923  0CDF  301A               	movlw	26
 14924  0CE0  0233               	subwf	??___fladd+2,w
 14925  0CE1                     u2865:	
 14926  0CE1  1C03               	skipc
 14927  0CE2  2D15               	goto	l3781
 14928  0CE3  0140               	movlb	0	; select bank0
 14929  0CE4  082C               	movf	___fladd@b+3,w
 14930  0CE5  042B               	iorwf	___fladd@b+2,w
 14931  0CE6  042A               	iorwf	___fladd@b+1,w
 14932  0CE7  0429               	iorwf	___fladd@b,w
 14933  0CE8  1903               	btfsc	3,2
 14934  0CE9  2CEC               	goto	u2870
 14935  0CEA  3001               	movlw	1
 14936  0CEB  2CED               	goto	u2880
 14937  0CEC                     u2870:	
 14938  0CEC  3000               	movlw	0
 14939  0CED                     u2880:	
 14940  0CED  00B1               	movwf	??___fladd
 14941  0CEE  0831               	movf	??___fladd,w
 14942  0CEF  00BC               	movwf	___fladd@grs
 14943  0CF0  3000               	movlw	0
 14944  0CF1  00AC               	movwf	___fladd@b+3
 14945  0CF2  3000               	movlw	0
 14946  0CF3  00AB               	movwf	___fladd@b+2
 14947  0CF4  3000               	movlw	0
 14948  0CF5  00AA               	movwf	___fladd@b+1
 14949  0CF6  3000               	movlw	0
 14950  0CF7  00A9               	movwf	___fladd@b
 14951  0CF8  083A               	movf	___fladd@aexp,w
 14952  0CF9  00B1               	movwf	??___fladd
 14953  0CFA  0831               	movf	??___fladd,w
 14954  0CFB  00BB               	movwf	___fladd@bexp
 14955  0CFC  2D1A               	goto	l1614
 14956  0CFD                     l1616:	
 14957  0CFD  1C3C               	btfss	___fladd@grs,0
 14958  0CFE  2D05               	goto	l3771
 14959  0CFF  363C               	lsrf	___fladd@grs,w
 14960  0D00  3801               	iorlw	1
 14961  0D01  00B1               	movwf	??___fladd
 14962  0D02  0831               	movf	??___fladd,w
 14963  0D03  00BC               	movwf	___fladd@grs
 14964  0D04  2D07               	goto	l3773
 14965  0D05                     l3771:	
 14966  0D05  1003               	clrc
 14967  0D06  0CBC               	rrf	___fladd@grs,f
 14968  0D07                     l3773:	
 14969  0D07  1829               	btfsc	___fladd@b,0
 14970  0D08  17BC               	bsf	___fladd@grs,7
 14971  0D09  3001               	movlw	1
 14972  0D0A  00B1               	movwf	??___fladd
 14973  0D0B                     u2915:	
 14974  0D0B  37AC               	asrf	___fladd@b+3,f
 14975  0D0C  0CAB               	rrf	___fladd@b+2,f
 14976  0D0D  0CAA               	rrf	___fladd@b+1,f
 14977  0D0E  0CA9               	rrf	___fladd@b,f
 14978  0D0F  0BB1               	decfsz	??___fladd& (0+127),f
 14979  0D10  2D0B               	goto	u2915
 14980  0D11  3001               	movlw	1
 14981  0D12  00B1               	movwf	??___fladd
 14982  0D13  0831               	movf	??___fladd,w
 14983  0D14  07BB               	addwf	___fladd@bexp,f
 14984  0D15                     l3781:	
 14985  0D15  0140               	movlb	0	; select bank0
 14986  0D16  083A               	movf	___fladd@aexp,w
 14987  0D17  023B               	subwf	___fladd@bexp,w
 14988  0D18  1C03               	skipc
 14989  0D19  2CFD               	goto	l1616
 14990  0D1A                     l1614:	
 14991  0D1A  1B39               	btfsc	___fladd@signs,6
 14992  0D1B  2D4B               	goto	l3807
 14993  0D1C  083B               	movf	___fladd@bexp,w
 14994  0D1D  1D03               	btfss	3,2
 14995  0D1E  2D28               	goto	l3789
 14996  0D1F  3000               	movlw	0
 14997  0D20  00AC               	movwf	?___fladd+3
 14998  0D21  3000               	movlw	0
 14999  0D22  00AB               	movwf	?___fladd+2
 15000  0D23  3000               	movlw	0
 15001  0D24  00AA               	movwf	?___fladd+1
 15002  0D25  3000               	movlw	0
 15003  0D26  00A9               	movwf	?___fladd
 15004  0D27  0008               	return
 15005  0D28                     l3789:	
 15006  0D28  082D               	movf	___fladd@a,w
 15007  0D29  07A9               	addwf	___fladd@b,f
 15008  0D2A  082E               	movf	___fladd@a+1,w
 15009  0D2B  3DAA               	addwfc	___fladd@b+1,f
 15010  0D2C  082F               	movf	___fladd@a+2,w
 15011  0D2D  3DAB               	addwfc	___fladd@b+2,f
 15012  0D2E  0830               	movf	___fladd@a+3,w
 15013  0D2F  3DAC               	addwfc	___fladd@b+3,f
 15014  0D30  1C2C               	btfss	___fladd@b+3,0
 15015  0D31  2DC5               	goto	l3841
 15016  0D32  1C3C               	btfss	___fladd@grs,0
 15017  0D33  2D3A               	goto	l3797
 15018  0D34  363C               	lsrf	___fladd@grs,w
 15019  0D35  3801               	iorlw	1
 15020  0D36  00B1               	movwf	??___fladd
 15021  0D37  0831               	movf	??___fladd,w
 15022  0D38  00BC               	movwf	___fladd@grs
 15023  0D39  2D3C               	goto	l3799
 15024  0D3A                     l3797:	
 15025  0D3A  1003               	clrc
 15026  0D3B  0CBC               	rrf	___fladd@grs,f
 15027  0D3C                     l3799:	
 15028  0D3C  1829               	btfsc	___fladd@b,0
 15029  0D3D  17BC               	bsf	___fladd@grs,7
 15030  0D3E  3001               	movlw	1
 15031  0D3F  00B1               	movwf	??___fladd
 15032  0D40                     u2985:	
 15033  0D40  37AC               	asrf	___fladd@b+3,f
 15034  0D41  0CAB               	rrf	___fladd@b+2,f
 15035  0D42  0CAA               	rrf	___fladd@b+1,f
 15036  0D43  0CA9               	rrf	___fladd@b,f
 15037  0D44  0BB1               	decfsz	??___fladd& (0+127),f
 15038  0D45  2D40               	goto	u2985
 15039  0D46  3001               	movlw	1
 15040  0D47  00B1               	movwf	??___fladd
 15041  0D48  0831               	movf	??___fladd,w
 15042  0D49  07BB               	addwf	___fladd@bexp,f
 15043  0D4A  2DC5               	goto	l3841
 15044  0D4B                     l3807:	
 15045  0D4B  082C               	movf	___fladd@b+3,w
 15046  0D4C  3A80               	xorlw	128
 15047  0D4D  00B1               	movwf	??___fladd
 15048  0D4E  0830               	movf	___fladd@a+3,w
 15049  0D4F  3A80               	xorlw	128
 15050  0D50  0231               	subwf	??___fladd,w
 15051  0D51  1D03               	skipz
 15052  0D52  2D5D               	goto	u2993
 15053  0D53  082F               	movf	___fladd@a+2,w
 15054  0D54  022B               	subwf	___fladd@b+2,w
 15055  0D55  1D03               	skipz
 15056  0D56  2D5D               	goto	u2993
 15057  0D57  082E               	movf	___fladd@a+1,w
 15058  0D58  022A               	subwf	___fladd@b+1,w
 15059  0D59  1D03               	skipz
 15060  0D5A  2D5D               	goto	u2993
 15061  0D5B  082D               	movf	___fladd@a,w
 15062  0D5C  0229               	subwf	___fladd@b,w
 15063  0D5D                     u2993:	
 15064  0D5D  1803               	skipnc
 15065  0D5E  2D95               	goto	l3817
 15066  0D5F  30FF               	movlw	255
 15067  0D60  00B1               	movwf	??___fladd
 15068  0D61  30FF               	movlw	255
 15069  0D62  00B2               	movwf	??___fladd+1
 15070  0D63  30FF               	movlw	255
 15071  0D64  00B3               	movwf	??___fladd+2
 15072  0D65  30FF               	movlw	255
 15073  0D66  00B4               	movwf	??___fladd+3
 15074  0D67  0829               	movf	___fladd@b,w
 15075  0D68  022D               	subwf	___fladd@a,w
 15076  0D69  00B5               	movwf	??___fladd+4
 15077  0D6A  082A               	movf	___fladd@b+1,w
 15078  0D6B  3B2E               	subwfb	___fladd@a+1,w
 15079  0D6C  00B6               	movwf	??___fladd+5
 15080  0D6D  082B               	movf	___fladd@b+2,w
 15081  0D6E  3B2F               	subwfb	___fladd@a+2,w
 15082  0D6F  00B7               	movwf	??___fladd+6
 15083  0D70  082C               	movf	___fladd@b+3,w
 15084  0D71  3B30               	subwfb	___fladd@a+3,w
 15085  0D72  00B8               	movwf	??___fladd+7
 15086  0D73  0835               	movf	??___fladd+4,w
 15087  0D74  07B1               	addwf	??___fladd,f
 15088  0D75  0836               	movf	??___fladd+5,w
 15089  0D76  3DB2               	addwfc	??___fladd+1,f
 15090  0D77  0837               	movf	??___fladd+6,w
 15091  0D78  3DB3               	addwfc	??___fladd+2,f
 15092  0D79  0838               	movf	??___fladd+7,w
 15093  0D7A  3DB4               	addwfc	??___fladd+3,f
 15094  0D7B  0834               	movf	??___fladd+3,w
 15095  0D7C  00AC               	movwf	___fladd@b+3
 15096  0D7D  0833               	movf	??___fladd+2,w
 15097  0D7E  00AB               	movwf	___fladd@b+2
 15098  0D7F  0832               	movf	??___fladd+1,w
 15099  0D80  00AA               	movwf	___fladd@b+1
 15100  0D81  0831               	movf	??___fladd,w
 15101  0D82  00A9               	movwf	___fladd@b
 15102  0D83  3080               	movlw	128
 15103  0D84  00B1               	movwf	??___fladd
 15104  0D85  0831               	movf	??___fladd,w
 15105  0D86  06B9               	xorwf	___fladd@signs,f
 15106  0D87  09BC               	comf	___fladd@grs,f
 15107  0D88  0ABC               	incf	___fladd@grs,f
 15108  0D89  083C               	movf	___fladd@grs,w
 15109  0D8A  1D03               	btfss	3,2
 15110  0D8B  2D9D               	goto	l1631
 15111  0D8C  3001               	movlw	1
 15112  0D8D  07A9               	addwf	___fladd@b,f
 15113  0D8E  3000               	movlw	0
 15114  0D8F  3DAA               	addwfc	___fladd@b+1,f
 15115  0D90  3000               	movlw	0
 15116  0D91  3DAB               	addwfc	___fladd@b+2,f
 15117  0D92  3000               	movlw	0
 15118  0D93  3DAC               	addwfc	___fladd@b+3,f
 15119  0D94  2D9D               	goto	l1631
 15120  0D95                     l3817:	
 15121  0D95  082D               	movf	___fladd@a,w
 15122  0D96  02A9               	subwf	___fladd@b,f
 15123  0D97  082E               	movf	___fladd@a+1,w
 15124  0D98  3BAA               	subwfb	___fladd@b+1,f
 15125  0D99  082F               	movf	___fladd@a+2,w
 15126  0D9A  3BAB               	subwfb	___fladd@b+2,f
 15127  0D9B  0830               	movf	___fladd@a+3,w
 15128  0D9C  3BAC               	subwfb	___fladd@b+3,f
 15129  0D9D                     l1631:	
 15130  0D9D  082C               	movf	___fladd@b+3,w
 15131  0D9E  042B               	iorwf	___fladd@b+2,w
 15132  0D9F  042A               	iorwf	___fladd@b+1,w
 15133  0DA0  0429               	iorwf	___fladd@b,w
 15134  0DA1  1D03               	skipz
 15135  0DA2  2DC3               	goto	l3839
 15136  0DA3  083C               	movf	___fladd@grs,w
 15137  0DA4  1D03               	btfss	3,2
 15138  0DA5  2DC3               	goto	l3839
 15139  0DA6  3000               	movlw	0
 15140  0DA7  00AC               	movwf	?___fladd+3
 15141  0DA8  3000               	movlw	0
 15142  0DA9  00AB               	movwf	?___fladd+2
 15143  0DAA  3000               	movlw	0
 15144  0DAB  00AA               	movwf	?___fladd+1
 15145  0DAC  3000               	movlw	0
 15146  0DAD  00A9               	movwf	?___fladd
 15147  0DAE  0008               	return
 15148  0DAF                     l3825:	
 15149  0DAF  3001               	movlw	1
 15150  0DB0                     u3035:	
 15151  0DB0  35A9               	lslf	___fladd@b,f
 15152  0DB1  0DAA               	rlf	___fladd@b+1,f
 15153  0DB2  0DAB               	rlf	___fladd@b+2,f
 15154  0DB3  0DAC               	rlf	___fladd@b+3,f
 15155  0DB4  0B89               	decfsz	9,f
 15156  0DB5  2DB0               	goto	u3035
 15157  0DB6  1BBC               	btfsc	___fladd@grs,7
 15158  0DB7  1429               	bsf	___fladd@b,0
 15159  0DB8  1C3C               	btfss	___fladd@grs,0
 15160  0DB9  2DBC               	goto	l3833
 15161  0DBA  1403               	setc
 15162  0DBB  2DBD               	goto	L4
 15163  0DBC                     l3833:	
 15164  0DBC  1003               	clrc
 15165  0DBD                     L4:	
 15166  0DBD  0DBC               	rlf	___fladd@grs,f
 15167  0DBE  083B               	movf	___fladd@bexp,w
 15168  0DBF  1903               	btfsc	3,2
 15169  0DC0  2DC3               	goto	l3839
 15170  0DC1  3001               	movlw	1
 15171  0DC2  02BB               	subwf	___fladd@bexp,f
 15172  0DC3                     l3839:	
 15173  0DC3  1FAB               	btfss	___fladd@b+2,7
 15174  0DC4  2DAF               	goto	l3825
 15175  0DC5                     l3841:	
 15176  0DC5  01BA               	clrf	___fladd@aexp
 15177  0DC6  1FBC               	btfss	___fladd@grs,7
 15178  0DC7  2DD0               	goto	l3851
 15179  0DC8  083C               	movf	___fladd@grs,w
 15180  0DC9  397F               	andlw	127
 15181  0DCA  1903               	btfsc	3,2
 15182  0DCB  1829               	btfsc	___fladd@b,0
 15183  0DCC  2DCE               	goto	l3847
 15184  0DCD  2DD0               	goto	l3851
 15185  0DCE                     l3847:	
 15186  0DCE  01BA               	clrf	___fladd@aexp
 15187  0DCF  0ABA               	incf	___fladd@aexp,f
 15188  0DD0                     l3851:	
 15189  0DD0  083A               	movf	___fladd@aexp,w
 15190  0DD1  1903               	btfsc	3,2
 15191  0DD2  2DFC               	goto	l1644
 15192  0DD3  3001               	movlw	1
 15193  0DD4  07A9               	addwf	___fladd@b,f
 15194  0DD5  3000               	movlw	0
 15195  0DD6  3DAA               	addwfc	___fladd@b+1,f
 15196  0DD7  3000               	movlw	0
 15197  0DD8  3DAB               	addwfc	___fladd@b+2,f
 15198  0DD9  3000               	movlw	0
 15199  0DDA  3DAC               	addwfc	___fladd@b+3,f
 15200  0DDB  1C2C               	btfss	___fladd@b+3,0
 15201  0DDC  2DFC               	goto	l1644
 15202  0DDD  0829               	movf	___fladd@b,w
 15203  0DDE  00B1               	movwf	??___fladd
 15204  0DDF  082A               	movf	___fladd@b+1,w
 15205  0DE0  00B2               	movwf	??___fladd+1
 15206  0DE1  082B               	movf	___fladd@b+2,w
 15207  0DE2  00B3               	movwf	??___fladd+2
 15208  0DE3  082C               	movf	___fladd@b+3,w
 15209  0DE4  00B4               	movwf	??___fladd+3
 15210  0DE5  3001               	movlw	1
 15211  0DE6  00B5               	movwf	??___fladd+4
 15212  0DE7                     u3135:	
 15213  0DE7  37B4               	asrf	??___fladd+3,f
 15214  0DE8  0CB3               	rrf	??___fladd+2,f
 15215  0DE9  0CB2               	rrf	??___fladd+1,f
 15216  0DEA  0CB1               	rrf	??___fladd,f
 15217  0DEB  0BB5               	decfsz	??___fladd+4,f
 15218  0DEC  2DE7               	goto	u3135
 15219  0DED  0834               	movf	??___fladd+3,w
 15220  0DEE  00AC               	movwf	___fladd@b+3
 15221  0DEF  0833               	movf	??___fladd+2,w
 15222  0DF0  00AB               	movwf	___fladd@b+2
 15223  0DF1  0832               	movf	??___fladd+1,w
 15224  0DF2  00AA               	movwf	___fladd@b+1
 15225  0DF3  0831               	movf	??___fladd,w
 15226  0DF4  00A9               	movwf	___fladd@b
 15227  0DF5  0A3B               	incf	___fladd@bexp,w
 15228  0DF6  1903               	btfsc	3,2
 15229  0DF7  2DFC               	goto	l1644
 15230  0DF8  3001               	movlw	1
 15231  0DF9  00B1               	movwf	??___fladd
 15232  0DFA  0831               	movf	??___fladd,w
 15233  0DFB  07BB               	addwf	___fladd@bexp,f
 15234  0DFC                     l1644:	
 15235  0DFC  0A3B               	incf	___fladd@bexp,w
 15236  0DFD  1D03               	btfss	3,2
 15237  0DFE  083B               	movf	___fladd@bexp,w
 15238  0DFF  1D03               	btfss	3,2
 15239  0E00  2E0C               	goto	l3869
 15240  0E01  3000               	movlw	0
 15241  0E02  00AC               	movwf	___fladd@b+3
 15242  0E03  3000               	movlw	0
 15243  0E04  00AB               	movwf	___fladd@b+2
 15244  0E05  3000               	movlw	0
 15245  0E06  00AA               	movwf	___fladd@b+1
 15246  0E07  3000               	movlw	0
 15247  0E08  00A9               	movwf	___fladd@b
 15248  0E09  083B               	movf	___fladd@bexp,w
 15249  0E0A  1903               	btfsc	3,2
 15250  0E0B  01B9               	clrf	___fladd@signs
 15251  0E0C                     l3869:	
 15252  0E0C  1C3B               	btfss	___fladd@bexp,0
 15253  0E0D  2E10               	goto	l3873
 15254  0E0E  17AB               	bsf	___fladd@b+2,7
 15255  0E0F  2E14               	goto	l1652
 15256  0E10                     l3873:	
 15257  0E10  307F               	movlw	127
 15258  0E11  00B1               	movwf	??___fladd
 15259  0E12  0831               	movf	??___fladd,w
 15260  0E13  05AB               	andwf	___fladd@b+2,f
 15261  0E14                     l1652:	
 15262  0E14  363B               	lsrf	___fladd@bexp,w
 15263  0E15  00B1               	movwf	??___fladd
 15264  0E16  0831               	movf	??___fladd,w
 15265  0E17  00AC               	movwf	___fladd@b+3
 15266  0E18  1FB9               	btfss	___fladd@signs,7
 15267  0E19  0008               	return
 15268  0E1A  17AC               	bsf	___fladd@b+3,7
 15269  0E1B  0008               	return
 15270  0E1C                     __end_of___fladd:	
 15271                           
 15272                           	psect	text49
 15273  03F6                     __ptext49:	
 15274 ;; *************** function ___flmul *****************
 15275 ;; Defined at:
 15276 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 15277 ;; Parameters:    Size  Location     Type
 15278 ;;  b               4   29[BANK0 ] unsigned char 
 15279 ;;  a               4   33[BANK0 ] unsigned char 
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;  prod            4   49[BANK0 ] struct .
 15282 ;;  grs             4   44[BANK0 ] unsigned long 
 15283 ;;  temp            2   53[BANK0 ] struct .
 15284 ;;  bexp            1   48[BANK0 ] unsigned char 
 15285 ;;  aexp            1   43[BANK0 ] unsigned char 
 15286 ;;  sign            1   42[BANK0 ] unsigned char 
 15287 ;; Return value:  Size  Location     Type
 15288 ;;                  4   29[BANK0 ] unsigned char 
 15289 ;; Registers used:
 15290 ;;		wreg, status,2, status,0, pclath, cstack
 15291 ;; Tracked objects:
 15292 ;;		On entry : 0/0
 15293 ;;		On exit  : 0/0
 15294 ;;		Unchanged: 0/0
 15295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15296 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15297 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15298 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15299 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15300 ;;Total ram usage:       26 bytes
 15301 ;; Hardware stack levels used:    1
 15302 ;; Hardware stack levels required when called:    5
 15303 ;; This function calls:
 15304 ;;		__Umul8_16
 15305 ;; This function is called by:
 15306 ;;		_HueToRGB
 15307 ;;		_LED_setHSL
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           
 15312                           ;psect for function ___flmul
 15313  03F6                     ___flmul:	
 15314                           
 15315                           ;incstack = 0
 15316                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15317  03F6  0140               	movlb	0	; select bank0
 15318  03F7  0840               	movf	___flmul@b+3,w
 15319  03F8  3980               	andlw	128
 15320  03F9  00C5               	movwf	??___flmul
 15321  03FA  0845               	movf	??___flmul,w
 15322  03FB  00CA               	movwf	___flmul@sign
 15323  03FC  3540               	lslf	___flmul@b+3,w
 15324  03FD  00C5               	movwf	??___flmul
 15325  03FE  0845               	movf	??___flmul,w
 15326  03FF  00D0               	movwf	___flmul@bexp
 15327  0400  1BBF               	btfsc	___flmul@b+2,7
 15328  0401  1450               	bsf	___flmul@bexp,0
 15329  0402  0850               	movf	___flmul@bexp,w
 15330  0403  1903               	btfsc	3,2
 15331  0404  2C12               	goto	l5475
 15332  0405  0A50               	incf	___flmul@bexp,w
 15333  0406  1D03               	btfss	3,2
 15334  0407  2C10               	goto	l5473
 15335  0408  3000               	movlw	0
 15336  0409  00C0               	movwf	___flmul@b+3
 15337  040A  3000               	movlw	0
 15338  040B  00BF               	movwf	___flmul@b+2
 15339  040C  3000               	movlw	0
 15340  040D  00BE               	movwf	___flmul@b+1
 15341  040E  3000               	movlw	0
 15342  040F  00BD               	movwf	___flmul@b
 15343  0410                     l5473:	
 15344  0410  17BF               	bsf	___flmul@b+2,7
 15345  0411  2C1A               	goto	l5477
 15346  0412                     l5475:	
 15347  0412  3000               	movlw	0
 15348  0413  00C0               	movwf	___flmul@b+3
 15349  0414  3000               	movlw	0
 15350  0415  00BF               	movwf	___flmul@b+2
 15351  0416  3000               	movlw	0
 15352  0417  00BE               	movwf	___flmul@b+1
 15353  0418  3000               	movlw	0
 15354  0419  00BD               	movwf	___flmul@b
 15355  041A                     l5477:	
 15356  041A  0844               	movf	___flmul@a+3,w
 15357  041B  3980               	andlw	128
 15358  041C  00C5               	movwf	??___flmul
 15359  041D  0845               	movf	??___flmul,w
 15360  041E  06CA               	xorwf	___flmul@sign,f
 15361  041F  3544               	lslf	___flmul@a+3,w
 15362  0420  00C5               	movwf	??___flmul
 15363  0421  0845               	movf	??___flmul,w
 15364  0422  00CB               	movwf	___flmul@aexp
 15365  0423  1BC3               	btfsc	___flmul@a+2,7
 15366  0424  144B               	bsf	___flmul@aexp,0
 15367  0425  084B               	movf	___flmul@aexp,w
 15368  0426  1903               	btfsc	3,2
 15369  0427  2C35               	goto	l5493
 15370  0428  0A4B               	incf	___flmul@aexp,w
 15371  0429  1D03               	btfss	3,2
 15372  042A  2C33               	goto	l5491
 15373  042B  3000               	movlw	0
 15374  042C  00C4               	movwf	___flmul@a+3
 15375  042D  3000               	movlw	0
 15376  042E  00C3               	movwf	___flmul@a+2
 15377  042F  3000               	movlw	0
 15378  0430  00C2               	movwf	___flmul@a+1
 15379  0431  3000               	movlw	0
 15380  0432  00C1               	movwf	___flmul@a
 15381  0433                     l5491:	
 15382  0433  17C3               	bsf	___flmul@a+2,7
 15383  0434  2C3D               	goto	l5495
 15384  0435                     l5493:	
 15385  0435  3000               	movlw	0
 15386  0436  00C4               	movwf	___flmul@a+3
 15387  0437  3000               	movlw	0
 15388  0438  00C3               	movwf	___flmul@a+2
 15389  0439  3000               	movlw	0
 15390  043A  00C2               	movwf	___flmul@a+1
 15391  043B  3000               	movlw	0
 15392  043C  00C1               	movwf	___flmul@a
 15393  043D                     l5495:	
 15394  043D  084B               	movf	___flmul@aexp,w
 15395  043E  1D03               	btfss	3,2
 15396  043F  0850               	movf	___flmul@bexp,w
 15397  0440  1D03               	btfss	3,2
 15398  0441  2C4B               	goto	l5503
 15399  0442  3000               	movlw	0
 15400  0443  00C0               	movwf	?___flmul+3
 15401  0444  3000               	movlw	0
 15402  0445  00BF               	movwf	?___flmul+2
 15403  0446  3000               	movlw	0
 15404  0447  00BE               	movwf	?___flmul+1
 15405  0448  3000               	movlw	0
 15406  0449  00BD               	movwf	?___flmul
 15407  044A  0008               	return
 15408  044B                     l5503:	
 15409  044B  083D               	movf	___flmul@b,w
 15410  044C  00C5               	movwf	??___flmul
 15411  044D  0845               	movf	??___flmul,w
 15412  044E  00A0               	movwf	__Umul8_16@multiplicand
 15413  044F  0843               	movf	___flmul@a+2,w
 15414  0450  3190  2069  3183   	fcall	__Umul8_16
 15415  0453  0140               	movlb	0	; select bank0
 15416  0454  0821               	movf	?__Umul8_16+1,w
 15417  0455  00D6               	movwf	___flmul@temp+1
 15418  0456  0820               	movf	?__Umul8_16,w
 15419  0457  00D5               	movwf	___flmul@temp
 15420  0458  0855               	movf	___flmul@temp,w
 15421  0459  00C5               	movwf	??___flmul
 15422  045A  01C6               	clrf	??___flmul+1
 15423  045B  01C7               	clrf	??___flmul+2
 15424  045C  01C8               	clrf	??___flmul+3
 15425  045D  0848               	movf	??___flmul+3,w
 15426  045E  00CF               	movwf	___flmul@grs+3
 15427  045F  0847               	movf	??___flmul+2,w
 15428  0460  00CE               	movwf	___flmul@grs+2
 15429  0461  0846               	movf	??___flmul+1,w
 15430  0462  00CD               	movwf	___flmul@grs+1
 15431  0463  0845               	movf	??___flmul,w
 15432  0464  00CC               	movwf	___flmul@grs
 15433  0465  0856               	movf	___flmul@temp+1,w
 15434  0466  00C5               	movwf	??___flmul
 15435  0467  01C6               	clrf	??___flmul+1
 15436  0468  01C7               	clrf	??___flmul+2
 15437  0469  01C8               	clrf	??___flmul+3
 15438  046A  0848               	movf	??___flmul+3,w
 15439  046B  00D4               	movwf	___flmul@prod+3
 15440  046C  0847               	movf	??___flmul+2,w
 15441  046D  00D3               	movwf	___flmul@prod+2
 15442  046E  0846               	movf	??___flmul+1,w
 15443  046F  00D2               	movwf	___flmul@prod+1
 15444  0470  0845               	movf	??___flmul,w
 15445  0471  00D1               	movwf	___flmul@prod
 15446  0472  083E               	movf	___flmul@b+1,w
 15447  0473  00C5               	movwf	??___flmul
 15448  0474  0845               	movf	??___flmul,w
 15449  0475  00A0               	movwf	__Umul8_16@multiplicand
 15450  0476  0842               	movf	___flmul@a+1,w
 15451  0477  3190  2069  3183   	fcall	__Umul8_16
 15452  047A  0140               	movlb	0	; select bank0
 15453  047B  0821               	movf	?__Umul8_16+1,w
 15454  047C  00D6               	movwf	___flmul@temp+1
 15455  047D  0820               	movf	?__Umul8_16,w
 15456  047E  00D5               	movwf	___flmul@temp
 15457  047F  0855               	movf	___flmul@temp,w
 15458  0480  00C5               	movwf	??___flmul
 15459  0481  01C6               	clrf	??___flmul+1
 15460  0482  01C7               	clrf	??___flmul+2
 15461  0483  01C8               	clrf	??___flmul+3
 15462  0484  0845               	movf	??___flmul,w
 15463  0485  07CC               	addwf	___flmul@grs,f
 15464  0486  0846               	movf	??___flmul+1,w
 15465  0487  3DCD               	addwfc	___flmul@grs+1,f
 15466  0488  0847               	movf	??___flmul+2,w
 15467  0489  3DCE               	addwfc	___flmul@grs+2,f
 15468  048A  0848               	movf	??___flmul+3,w
 15469  048B  3DCF               	addwfc	___flmul@grs+3,f
 15470  048C  0856               	movf	___flmul@temp+1,w
 15471  048D  00C5               	movwf	??___flmul
 15472  048E  01C6               	clrf	??___flmul+1
 15473  048F  01C7               	clrf	??___flmul+2
 15474  0490  01C8               	clrf	??___flmul+3
 15475  0491  0845               	movf	??___flmul,w
 15476  0492  07D1               	addwf	___flmul@prod,f
 15477  0493  0846               	movf	??___flmul+1,w
 15478  0494  3DD2               	addwfc	___flmul@prod+1,f
 15479  0495  0847               	movf	??___flmul+2,w
 15480  0496  3DD3               	addwfc	___flmul@prod+2,f
 15481  0497  0848               	movf	??___flmul+3,w
 15482  0498  3DD4               	addwfc	___flmul@prod+3,f
 15483  0499  083F               	movf	___flmul@b+2,w
 15484  049A  00C5               	movwf	??___flmul
 15485  049B  0845               	movf	??___flmul,w
 15486  049C  00A0               	movwf	__Umul8_16@multiplicand
 15487  049D  0841               	movf	___flmul@a,w
 15488  049E  3190  2069  3183   	fcall	__Umul8_16
 15489  04A1  0140               	movlb	0	; select bank0
 15490  04A2  0821               	movf	?__Umul8_16+1,w
 15491  04A3  00D6               	movwf	___flmul@temp+1
 15492  04A4  0820               	movf	?__Umul8_16,w
 15493  04A5  00D5               	movwf	___flmul@temp
 15494  04A6  0855               	movf	___flmul@temp,w
 15495  04A7  00C5               	movwf	??___flmul
 15496  04A8  01C6               	clrf	??___flmul+1
 15497  04A9  01C7               	clrf	??___flmul+2
 15498  04AA  01C8               	clrf	??___flmul+3
 15499  04AB  0845               	movf	??___flmul,w
 15500  04AC  07CC               	addwf	___flmul@grs,f
 15501  04AD  0846               	movf	??___flmul+1,w
 15502  04AE  3DCD               	addwfc	___flmul@grs+1,f
 15503  04AF  0847               	movf	??___flmul+2,w
 15504  04B0  3DCE               	addwfc	___flmul@grs+2,f
 15505  04B1  0848               	movf	??___flmul+3,w
 15506  04B2  3DCF               	addwfc	___flmul@grs+3,f
 15507  04B3  0856               	movf	___flmul@temp+1,w
 15508  04B4  00C5               	movwf	??___flmul
 15509  04B5  01C6               	clrf	??___flmul+1
 15510  04B6  01C7               	clrf	??___flmul+2
 15511  04B7  01C8               	clrf	??___flmul+3
 15512  04B8  0845               	movf	??___flmul,w
 15513  04B9  07D1               	addwf	___flmul@prod,f
 15514  04BA  0846               	movf	??___flmul+1,w
 15515  04BB  3DD2               	addwfc	___flmul@prod+1,f
 15516  04BC  0847               	movf	??___flmul+2,w
 15517  04BD  3DD3               	addwfc	___flmul@prod+2,f
 15518  04BE  0848               	movf	??___flmul+3,w
 15519  04BF  3DD4               	addwfc	___flmul@prod+3,f
 15520  04C0  3008               	movlw	8
 15521  04C1                     u5715:	
 15522  04C1  35CC               	lslf	___flmul@grs,f
 15523  04C2  0DCD               	rlf	___flmul@grs+1,f
 15524  04C3  0DCE               	rlf	___flmul@grs+2,f
 15525  04C4  0DCF               	rlf	___flmul@grs+3,f
 15526  04C5  0B89               	decfsz	9,f
 15527  04C6  2CC1               	goto	u5715
 15528  04C7  083E               	movf	___flmul@b+1,w
 15529  04C8  00C5               	movwf	??___flmul
 15530  04C9  0845               	movf	??___flmul,w
 15531  04CA  00A0               	movwf	__Umul8_16@multiplicand
 15532  04CB  0841               	movf	___flmul@a,w
 15533  04CC  3190  2069  3183   	fcall	__Umul8_16
 15534  04CF  0140               	movlb	0	; select bank0
 15535  04D0  0821               	movf	?__Umul8_16+1,w
 15536  04D1  00D6               	movwf	___flmul@temp+1
 15537  04D2  0820               	movf	?__Umul8_16,w
 15538  04D3  00D5               	movwf	___flmul@temp
 15539  04D4  0855               	movf	___flmul@temp,w
 15540  04D5  07CC               	addwf	___flmul@grs,f
 15541  04D6  0856               	movf	___flmul@temp+1,w
 15542  04D7  3DCD               	addwfc	___flmul@grs+1,f
 15543  04D8  3000               	movlw	0
 15544  04D9  3DCE               	addwfc	___flmul@grs+2,f
 15545  04DA  3DCF               	addwfc	___flmul@grs+3,f
 15546  04DB  083D               	movf	___flmul@b,w
 15547  04DC  00C5               	movwf	??___flmul
 15548  04DD  0845               	movf	??___flmul,w
 15549  04DE  00A0               	movwf	__Umul8_16@multiplicand
 15550  04DF  0842               	movf	___flmul@a+1,w
 15551  04E0  3190  2069  3183   	fcall	__Umul8_16
 15552  04E3  0140               	movlb	0	; select bank0
 15553  04E4  0821               	movf	?__Umul8_16+1,w
 15554  04E5  00D6               	movwf	___flmul@temp+1
 15555  04E6  0820               	movf	?__Umul8_16,w
 15556  04E7  00D5               	movwf	___flmul@temp
 15557  04E8  0855               	movf	___flmul@temp,w
 15558  04E9  07CC               	addwf	___flmul@grs,f
 15559  04EA  0856               	movf	___flmul@temp+1,w
 15560  04EB  3DCD               	addwfc	___flmul@grs+1,f
 15561  04EC  3000               	movlw	0
 15562  04ED  3DCE               	addwfc	___flmul@grs+2,f
 15563  04EE  3DCF               	addwfc	___flmul@grs+3,f
 15564  04EF  3008               	movlw	8
 15565  04F0                     u5725:	
 15566  04F0  35CC               	lslf	___flmul@grs,f
 15567  04F1  0DCD               	rlf	___flmul@grs+1,f
 15568  04F2  0DCE               	rlf	___flmul@grs+2,f
 15569  04F3  0DCF               	rlf	___flmul@grs+3,f
 15570  04F4  0B89               	decfsz	9,f
 15571  04F5  2CF0               	goto	u5725
 15572  04F6  083D               	movf	___flmul@b,w
 15573  04F7  00C5               	movwf	??___flmul
 15574  04F8  0845               	movf	??___flmul,w
 15575  04F9  00A0               	movwf	__Umul8_16@multiplicand
 15576  04FA  0841               	movf	___flmul@a,w
 15577  04FB  3190  2069  3183   	fcall	__Umul8_16
 15578  04FE  0140               	movlb	0	; select bank0
 15579  04FF  0821               	movf	?__Umul8_16+1,w
 15580  0500  00D6               	movwf	___flmul@temp+1
 15581  0501  0820               	movf	?__Umul8_16,w
 15582  0502  00D5               	movwf	___flmul@temp
 15583  0503  0855               	movf	___flmul@temp,w
 15584  0504  07CC               	addwf	___flmul@grs,f
 15585  0505  0856               	movf	___flmul@temp+1,w
 15586  0506  3DCD               	addwfc	___flmul@grs+1,f
 15587  0507  3000               	movlw	0
 15588  0508  3DCE               	addwfc	___flmul@grs+2,f
 15589  0509  3DCF               	addwfc	___flmul@grs+3,f
 15590  050A  083E               	movf	___flmul@b+1,w
 15591  050B  00C5               	movwf	??___flmul
 15592  050C  0845               	movf	??___flmul,w
 15593  050D  00A0               	movwf	__Umul8_16@multiplicand
 15594  050E  0843               	movf	___flmul@a+2,w
 15595  050F  3190  2069  3183   	fcall	__Umul8_16
 15596  0512  0140               	movlb	0	; select bank0
 15597  0513  0821               	movf	?__Umul8_16+1,w
 15598  0514  00D6               	movwf	___flmul@temp+1
 15599  0515  0820               	movf	?__Umul8_16,w
 15600  0516  00D5               	movwf	___flmul@temp
 15601  0517  0855               	movf	___flmul@temp,w
 15602  0518  07D1               	addwf	___flmul@prod,f
 15603  0519  0856               	movf	___flmul@temp+1,w
 15604  051A  3DD2               	addwfc	___flmul@prod+1,f
 15605  051B  3000               	movlw	0
 15606  051C  3DD3               	addwfc	___flmul@prod+2,f
 15607  051D  3DD4               	addwfc	___flmul@prod+3,f
 15608  051E  083F               	movf	___flmul@b+2,w
 15609  051F  00C5               	movwf	??___flmul
 15610  0520  0845               	movf	??___flmul,w
 15611  0521  00A0               	movwf	__Umul8_16@multiplicand
 15612  0522  0842               	movf	___flmul@a+1,w
 15613  0523  3190  2069  3183   	fcall	__Umul8_16
 15614  0526  0140               	movlb	0	; select bank0
 15615  0527  0821               	movf	?__Umul8_16+1,w
 15616  0528  00D6               	movwf	___flmul@temp+1
 15617  0529  0820               	movf	?__Umul8_16,w
 15618  052A  00D5               	movwf	___flmul@temp
 15619  052B  0855               	movf	___flmul@temp,w
 15620  052C  07D1               	addwf	___flmul@prod,f
 15621  052D  0856               	movf	___flmul@temp+1,w
 15622  052E  3DD2               	addwfc	___flmul@prod+1,f
 15623  052F  3000               	movlw	0
 15624  0530  3DD3               	addwfc	___flmul@prod+2,f
 15625  0531  3DD4               	addwfc	___flmul@prod+3,f
 15626  0532  083F               	movf	___flmul@b+2,w
 15627  0533  00C5               	movwf	??___flmul
 15628  0534  0845               	movf	??___flmul,w
 15629  0535  00A0               	movwf	__Umul8_16@multiplicand
 15630  0536  0843               	movf	___flmul@a+2,w
 15631  0537  3190  2069  3183   	fcall	__Umul8_16
 15632  053A  0140               	movlb	0	; select bank0
 15633  053B  0821               	movf	?__Umul8_16+1,w
 15634  053C  00D6               	movwf	___flmul@temp+1
 15635  053D  0820               	movf	?__Umul8_16,w
 15636  053E  00D5               	movwf	___flmul@temp
 15637  053F  0855               	movf	___flmul@temp,w
 15638  0540  00C5               	movwf	??___flmul
 15639  0541  0856               	movf	___flmul@temp+1,w
 15640  0542  00C6               	movwf	??___flmul+1
 15641  0543  01C7               	clrf	??___flmul+2
 15642  0544  01C8               	clrf	??___flmul+3
 15643  0545  3008               	movlw	8
 15644  0546                     u5735:	
 15645  0546  35C5               	lslf	??___flmul,f
 15646  0547  0DC6               	rlf	??___flmul+1,f
 15647  0548  0DC7               	rlf	??___flmul+2,f
 15648  0549  0DC8               	rlf	??___flmul+3,f
 15649  054A  0B89               	decfsz	9,f
 15650  054B  2D46               	goto	u5735
 15651  054C  0845               	movf	??___flmul,w
 15652  054D  07D1               	addwf	___flmul@prod,f
 15653  054E  0846               	movf	??___flmul+1,w
 15654  054F  3DD2               	addwfc	___flmul@prod+1,f
 15655  0550  0847               	movf	??___flmul+2,w
 15656  0551  3DD3               	addwfc	___flmul@prod+2,f
 15657  0552  0848               	movf	??___flmul+3,w
 15658  0553  3DD4               	addwfc	___flmul@prod+3,f
 15659  0554  084C               	movf	___flmul@grs,w
 15660  0555  00C5               	movwf	??___flmul
 15661  0556  084D               	movf	___flmul@grs+1,w
 15662  0557  00C6               	movwf	??___flmul+1
 15663  0558  084E               	movf	___flmul@grs+2,w
 15664  0559  00C7               	movwf	??___flmul+2
 15665  055A  084F               	movf	___flmul@grs+3,w
 15666  055B  00C8               	movwf	??___flmul+3
 15667  055C  3018               	movlw	24
 15668  055D                     u5745:	
 15669  055D  36C8               	lsrf	??___flmul+3,f
 15670  055E  0CC7               	rrf	??___flmul+2,f
 15671  055F  0CC6               	rrf	??___flmul+1,f
 15672  0560  0CC5               	rrf	??___flmul,f
 15673  0561  0B89               	decfsz	9,f
 15674  0562  2D5D               	goto	u5745
 15675  0563  0845               	movf	??___flmul,w
 15676  0564  07D1               	addwf	___flmul@prod,f
 15677  0565  0846               	movf	??___flmul+1,w
 15678  0566  3DD2               	addwfc	___flmul@prod+1,f
 15679  0567  0847               	movf	??___flmul+2,w
 15680  0568  3DD3               	addwfc	___flmul@prod+2,f
 15681  0569  0848               	movf	??___flmul+3,w
 15682  056A  3DD4               	addwfc	___flmul@prod+3,f
 15683  056B  3008               	movlw	8
 15684  056C                     u5755:	
 15685  056C  35CC               	lslf	___flmul@grs,f
 15686  056D  0DCD               	rlf	___flmul@grs+1,f
 15687  056E  0DCE               	rlf	___flmul@grs+2,f
 15688  056F  0DCF               	rlf	___flmul@grs+3,f
 15689  0570  0B89               	decfsz	9,f
 15690  0571  2D6C               	goto	u5755
 15691  0572  0850               	movf	___flmul@bexp,w
 15692  0573  074B               	addwf	___flmul@aexp,w
 15693  0574  00C5               	movwf	??___flmul
 15694  0575  01C6               	clrf	??___flmul+1
 15695  0576  0DC6               	rlf	??___flmul+1,f
 15696  0577  0845               	movf	??___flmul,w
 15697  0578  3E82               	addlw	130
 15698  0579  00D5               	movwf	___flmul@temp
 15699  057A  30FF               	movlw	255
 15700  057B  3D46               	addwfc	??___flmul+1,w
 15701  057C  00D6               	movwf	___flmul@temp+1
 15702  057D                     l5555:	
 15703  057D  1BD3               	btfsc	___flmul@prod+2,7
 15704  057E  2D94               	goto	l5557
 15705  057F  3001               	movlw	1
 15706  0580                     u5765:	
 15707  0580  35D1               	lslf	___flmul@prod,f
 15708  0581  0DD2               	rlf	___flmul@prod+1,f
 15709  0582  0DD3               	rlf	___flmul@prod+2,f
 15710  0583  0DD4               	rlf	___flmul@prod+3,f
 15711  0584  0B89               	decfsz	9,f
 15712  0585  2D80               	goto	u5765
 15713  0586  1BCF               	btfsc	___flmul@grs+3,7
 15714  0587  1451               	bsf	___flmul@prod,0
 15715  0588  3001               	movlw	1
 15716  0589                     u5785:	
 15717  0589  35CC               	lslf	___flmul@grs,f
 15718  058A  0DCD               	rlf	___flmul@grs+1,f
 15719  058B  0DCE               	rlf	___flmul@grs+2,f
 15720  058C  0DCF               	rlf	___flmul@grs+3,f
 15721  058D  0B89               	decfsz	9,f
 15722  058E  2D89               	goto	u5785
 15723  058F  30FF               	movlw	255
 15724  0590  07D5               	addwf	___flmul@temp,f
 15725  0591  30FF               	movlw	255
 15726  0592  3DD6               	addwfc	___flmul@temp+1,f
 15727  0593  2D7D               	goto	l5555
 15728  0594                     l5557:	
 15729  0594  01CB               	clrf	___flmul@aexp
 15730  0595  1FCF               	btfss	___flmul@grs+3,7
 15731  0596  2DAD               	goto	l5567
 15732  0597  30FF               	movlw	255
 15733  0598  054C               	andwf	___flmul@grs,w
 15734  0599  00C5               	movwf	??___flmul
 15735  059A  30FF               	movlw	255
 15736  059B  054D               	andwf	___flmul@grs+1,w
 15737  059C  00C6               	movwf	??___flmul+1
 15738  059D  30FF               	movlw	255
 15739  059E  054E               	andwf	___flmul@grs+2,w
 15740  059F  00C7               	movwf	??___flmul+2
 15741  05A0  307F               	movlw	127
 15742  05A1  054F               	andwf	___flmul@grs+3,w
 15743  05A2  00C8               	movwf	??___flmul+3
 15744  05A3  0848               	movf	??___flmul+3,w
 15745  05A4  0447               	iorwf	??___flmul+2,w
 15746  05A5  0446               	iorwf	??___flmul+1,w
 15747  05A6  0445               	iorwf	??___flmul,w
 15748  05A7  1903               	skipnz
 15749  05A8  1851               	btfsc	___flmul@prod,0
 15750  05A9  2DAB               	goto	l5563
 15751  05AA  2DAD               	goto	l5567
 15752  05AB                     l5563:	
 15753  05AB  01CB               	clrf	___flmul@aexp
 15754  05AC  0ACB               	incf	___flmul@aexp,f
 15755  05AD                     l5567:	
 15756  05AD  084B               	movf	___flmul@aexp,w
 15757  05AE  1903               	btfsc	3,2
 15758  05AF  2DD6               	goto	l5577
 15759  05B0  3001               	movlw	1
 15760  05B1  07D1               	addwf	___flmul@prod,f
 15761  05B2  3000               	movlw	0
 15762  05B3  3DD2               	addwfc	___flmul@prod+1,f
 15763  05B4  3000               	movlw	0
 15764  05B5  3DD3               	addwfc	___flmul@prod+2,f
 15765  05B6  3000               	movlw	0
 15766  05B7  3DD4               	addwfc	___flmul@prod+3,f
 15767  05B8  1C54               	btfss	___flmul@prod+3,0
 15768  05B9  2DD6               	goto	l5577
 15769  05BA  0851               	movf	___flmul@prod,w
 15770  05BB  00C5               	movwf	??___flmul
 15771  05BC  0852               	movf	___flmul@prod+1,w
 15772  05BD  00C6               	movwf	??___flmul+1
 15773  05BE  0853               	movf	___flmul@prod+2,w
 15774  05BF  00C7               	movwf	??___flmul+2
 15775  05C0  0854               	movf	___flmul@prod+3,w
 15776  05C1  00C8               	movwf	??___flmul+3
 15777  05C2  3001               	movlw	1
 15778  05C3  00C9               	movwf	??___flmul+4
 15779  05C4                     u5855:	
 15780  05C4  37C8               	asrf	??___flmul+3,f
 15781  05C5  0CC7               	rrf	??___flmul+2,f
 15782  05C6  0CC6               	rrf	??___flmul+1,f
 15783  05C7  0CC5               	rrf	??___flmul,f
 15784  05C8  0BC9               	decfsz	??___flmul+4,f
 15785  05C9  2DC4               	goto	u5855
 15786  05CA  0848               	movf	??___flmul+3,w
 15787  05CB  00D4               	movwf	___flmul@prod+3
 15788  05CC  0847               	movf	??___flmul+2,w
 15789  05CD  00D3               	movwf	___flmul@prod+2
 15790  05CE  0846               	movf	??___flmul+1,w
 15791  05CF  00D2               	movwf	___flmul@prod+1
 15792  05D0  0845               	movf	??___flmul,w
 15793  05D1  00D1               	movwf	___flmul@prod
 15794  05D2  3001               	movlw	1
 15795  05D3  07D5               	addwf	___flmul@temp,f
 15796  05D4  3000               	movlw	0
 15797  05D5  3DD6               	addwfc	___flmul@temp+1,f
 15798  05D6                     l5577:	
 15799  05D6  0856               	movf	___flmul@temp+1,w
 15800  05D7  3A80               	xorlw	128
 15801  05D8  00C5               	movwf	??___flmul
 15802  05D9  3080               	movlw	128
 15803  05DA  0245               	subwf	??___flmul,w
 15804  05DB  1D03               	skipz
 15805  05DC  2DDF               	goto	u5865
 15806  05DD  30FF               	movlw	255
 15807  05DE  0255               	subwf	___flmul@temp,w
 15808  05DF                     u5865:	
 15809  05DF  1C03               	skipc
 15810  05E0  2DEB               	goto	l5581
 15811  05E1  307F               	movlw	127
 15812  05E2  0140               	movlb	0	; select bank0
 15813  05E3  00D4               	movwf	___flmul@prod+3
 15814  05E4  3080               	movlw	128
 15815  05E5  00D3               	movwf	___flmul@prod+2
 15816  05E6  3000               	movlw	0
 15817  05E7  00D2               	movwf	___flmul@prod+1
 15818  05E8  3000               	movlw	0
 15819  05E9  00D1               	movwf	___flmul@prod
 15820  05EA  2E15               	goto	l1718
 15821  05EB                     l5581:	
 15822  05EB  0140               	movlb	0	; select bank0
 15823  05EC  0856               	movf	___flmul@temp+1,w
 15824  05ED  3A80               	xorlw	128
 15825  05EE  00C5               	movwf	??___flmul
 15826  05EF  3080               	movlw	128
 15827  05F0  0245               	subwf	??___flmul,w
 15828  05F1  1D03               	skipz
 15829  05F2  2DF5               	goto	u5875
 15830  05F3  3001               	movlw	1
 15831  05F4  0255               	subwf	___flmul@temp,w
 15832  05F5                     u5875:	
 15833  05F5  1803               	skipnc
 15834  05F6  2E02               	goto	l5587
 15835  05F7  3000               	movlw	0
 15836  05F8  0140               	movlb	0	; select bank0
 15837  05F9  00D4               	movwf	___flmul@prod+3
 15838  05FA  3000               	movlw	0
 15839  05FB  00D3               	movwf	___flmul@prod+2
 15840  05FC  3000               	movlw	0
 15841  05FD  00D2               	movwf	___flmul@prod+1
 15842  05FE  3000               	movlw	0
 15843  05FF  00D1               	movwf	___flmul@prod
 15844  0600  01CA               	clrf	___flmul@sign
 15845  0601  2E15               	goto	l1718
 15846  0602                     l5587:	
 15847  0602  0140               	movlb	0	; select bank0
 15848  0603  0855               	movf	___flmul@temp,w
 15849  0604  00C5               	movwf	??___flmul
 15850  0605  0845               	movf	??___flmul,w
 15851  0606  00D0               	movwf	___flmul@bexp
 15852  0607  30FF               	movlw	255
 15853  0608  05D1               	andwf	___flmul@prod,f
 15854  0609  30FF               	movlw	255
 15855  060A  05D2               	andwf	___flmul@prod+1,f
 15856  060B  307F               	movlw	127
 15857  060C  05D3               	andwf	___flmul@prod+2,f
 15858  060D  3000               	movlw	0
 15859  060E  05D4               	andwf	___flmul@prod+3,f
 15860  060F  1850               	btfsc	___flmul@bexp,0
 15861  0610  17D3               	bsf	___flmul@prod+2,7
 15862  0611  3650               	lsrf	___flmul@bexp,w
 15863  0612  00C5               	movwf	??___flmul
 15864  0613  0845               	movf	??___flmul,w
 15865  0614  00D4               	movwf	___flmul@prod+3
 15866  0615                     l1718:	
 15867  0615  084A               	movf	___flmul@sign,w
 15868  0616  00C5               	movwf	??___flmul
 15869  0617  0845               	movf	??___flmul,w
 15870  0618  04D4               	iorwf	___flmul@prod+3,f
 15871  0619  0854               	movf	___flmul@prod+3,w
 15872  061A  00C0               	movwf	?___flmul+3
 15873  061B  0853               	movf	___flmul@prod+2,w
 15874  061C  00BF               	movwf	?___flmul+2
 15875  061D  0852               	movf	___flmul@prod+1,w
 15876  061E  00BE               	movwf	?___flmul+1
 15877  061F  0851               	movf	___flmul@prod,w
 15878  0620  00BD               	movwf	?___flmul
 15879  0621  0008               	return
 15880  0622                     __end_of___flmul:	
 15881                           
 15882                           	psect	text50
 15883  1069                     __ptext50:	
 15884 ;; *************** function __Umul8_16 *****************
 15885 ;; Defined at:
 15886 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 15887 ;; Parameters:    Size  Location     Type
 15888 ;;  multiplier      1    wreg     unsigned char 
 15889 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15890 ;; Auto vars:     Size  Location     Type
 15891 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15892 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15893 ;;  product         2    4[BANK0 ] unsigned int 
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  2    0[BANK0 ] unsigned int 
 15896 ;; Registers used:
 15897 ;;		wreg, status,2, status,0
 15898 ;; Tracked objects:
 15899 ;;		On entry : 0/0
 15900 ;;		On exit  : 0/0
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15904 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15905 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15906 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15907 ;;Total ram usage:        9 bytes
 15908 ;; Hardware stack levels used:    1
 15909 ;; Hardware stack levels required when called:    4
 15910 ;; This function calls:
 15911 ;;		Nothing
 15912 ;; This function is called by:
 15913 ;;		___flmul
 15914 ;; This function uses a non-reentrant model
 15915 ;;
 15916                           
 15917                           
 15918                           ;psect for function __Umul8_16
 15919  1069                     __Umul8_16:	
 15920                           
 15921                           ;incstack = 0
 15922                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15923                           ;__Umul8_16@multiplier stored from wreg
 15924  1069  0140               	movlb	0	; select bank0
 15925  106A  00A8               	movwf	__Umul8_16@multiplier
 15926  106B  01A4               	clrf	__Umul8_16@product
 15927  106C  01A5               	clrf	__Umul8_16@product+1
 15928  106D  0820               	movf	__Umul8_16@multiplicand,w
 15929  106E  00A2               	movwf	??__Umul8_16
 15930  106F  01A3               	clrf	??__Umul8_16+1
 15931  1070  0822               	movf	??__Umul8_16,w
 15932  1071  00A6               	movwf	__Umul8_16@word_mpld
 15933  1072  0823               	movf	??__Umul8_16+1,w
 15934  1073  00A7               	movwf	__Umul8_16@word_mpld+1
 15935  1074                     l5393:	
 15936  1074  1C28               	btfss	__Umul8_16@multiplier,0
 15937  1075  287A               	goto	l1763
 15938  1076  0826               	movf	__Umul8_16@word_mpld,w
 15939  1077  07A4               	addwf	__Umul8_16@product,f
 15940  1078  0827               	movf	__Umul8_16@word_mpld+1,w
 15941  1079  3DA5               	addwfc	__Umul8_16@product+1,f
 15942  107A                     l1763:	
 15943  107A  3001               	movlw	1
 15944  107B                     u5475:	
 15945  107B  35A6               	lslf	__Umul8_16@word_mpld,f
 15946  107C  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15947  107D  0B89               	decfsz	9,f
 15948  107E  287B               	goto	u5475
 15949  107F  1003               	clrc
 15950  1080  0CA8               	rrf	__Umul8_16@multiplier,f
 15951  1081  0828               	movf	__Umul8_16@multiplier,w
 15952  1082  1D03               	btfss	3,2
 15953  1083  2874               	goto	l5393
 15954  1084  0825               	movf	__Umul8_16@product+1,w
 15955  1085  00A1               	movwf	?__Umul8_16+1
 15956  1086  0824               	movf	__Umul8_16@product,w
 15957  1087  00A0               	movwf	?__Umul8_16
 15958  1088  0008               	return
 15959  1089                     __end_of__Umul8_16:	
 15960                           
 15961                           	psect	text51
 15962  15E4                     __ptext51:	
 15963 ;; *************** function ___flge *****************
 15964 ;; Defined at:
 15965 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;  ff1             4   55[BANK0 ] unsigned int 
 15968 ;;  ff2             4   59[BANK0 ] unsigned int 
 15969 ;; Auto vars:     Size  Location     Type
 15970 ;;		None
 15971 ;; Return value:  Size  Location     Type
 15972 ;;		None               void
 15973 ;; Registers used:
 15974 ;;		wreg, status,2, status,0
 15975 ;; Tracked objects:
 15976 ;;		On entry : 0/0
 15977 ;;		On exit  : 0/0
 15978 ;;		Unchanged: 0/0
 15979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15980 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15982 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15983 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15984 ;;Total ram usage:       12 bytes
 15985 ;; Hardware stack levels used:    1
 15986 ;; Hardware stack levels required when called:    4
 15987 ;; This function calls:
 15988 ;;		Nothing
 15989 ;; This function is called by:
 15990 ;;		_HueToRGB
 15991 ;;		_LED_setHSL
 15992 ;;		_pulseColors
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996                           
 15997                           ;psect for function ___flge
 15998  15E4                     ___flge:	
 15999                           
 16000                           ;incstack = 0
 16001                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16002  15E4  3000               	movlw	0
 16003  15E5  0140               	movlb	0	; select bank0
 16004  15E6  0557               	andwf	___flge@ff1,w
 16005  15E7  00DF               	movwf	??___flge
 16006  15E8  3000               	movlw	0
 16007  15E9  0558               	andwf	___flge@ff1+1,w
 16008  15EA  00E0               	movwf	??___flge+1
 16009  15EB  3080               	movlw	128
 16010  15EC  0559               	andwf	___flge@ff1+2,w
 16011  15ED  00E1               	movwf	??___flge+2
 16012  15EE  307F               	movlw	127
 16013  15EF  055A               	andwf	___flge@ff1+3,w
 16014  15F0  00E2               	movwf	??___flge+3
 16015  15F1  0862               	movf	??___flge+3,w
 16016  15F2  0461               	iorwf	??___flge+2,w
 16017  15F3  0460               	iorwf	??___flge+1,w
 16018  15F4  045F               	iorwf	??___flge,w
 16019  15F5  1D03               	skipz
 16020  15F6  2DFF               	goto	l1487
 16021  15F7  3000               	movlw	0
 16022  15F8  00DA               	movwf	___flge@ff1+3
 16023  15F9  3000               	movlw	0
 16024  15FA  00D9               	movwf	___flge@ff1+2
 16025  15FB  3000               	movlw	0
 16026  15FC  00D8               	movwf	___flge@ff1+1
 16027  15FD  3000               	movlw	0
 16028  15FE  00D7               	movwf	___flge@ff1
 16029  15FF                     l1487:	
 16030  15FF  3000               	movlw	0
 16031  1600  055B               	andwf	___flge@ff2,w
 16032  1601  00DF               	movwf	??___flge
 16033  1602  3000               	movlw	0
 16034  1603  055C               	andwf	___flge@ff2+1,w
 16035  1604  00E0               	movwf	??___flge+1
 16036  1605  3080               	movlw	128
 16037  1606  055D               	andwf	___flge@ff2+2,w
 16038  1607  00E1               	movwf	??___flge+2
 16039  1608  307F               	movlw	127
 16040  1609  055E               	andwf	___flge@ff2+3,w
 16041  160A  00E2               	movwf	??___flge+3
 16042  160B  0862               	movf	??___flge+3,w
 16043  160C  0461               	iorwf	??___flge+2,w
 16044  160D  0460               	iorwf	??___flge+1,w
 16045  160E  045F               	iorwf	??___flge,w
 16046  160F  1D03               	skipz
 16047  1610  2E19               	goto	l3901
 16048  1611  3000               	movlw	0
 16049  1612  00DE               	movwf	___flge@ff2+3
 16050  1613  3000               	movlw	0
 16051  1614  00DD               	movwf	___flge@ff2+2
 16052  1615  3000               	movlw	0
 16053  1616  00DC               	movwf	___flge@ff2+1
 16054  1617  3000               	movlw	0
 16055  1618  00DB               	movwf	___flge@ff2
 16056  1619                     l3901:	
 16057  1619  1FDA               	btfss	___flge@ff1+3,7
 16058  161A  2E33               	goto	l3905
 16059  161B  3000               	movlw	0
 16060  161C  00DF               	movwf	??___flge
 16061  161D  3000               	movlw	0
 16062  161E  00E0               	movwf	??___flge+1
 16063  161F  3000               	movlw	0
 16064  1620  00E1               	movwf	??___flge+2
 16065  1621  3080               	movlw	128
 16066  1622  00E2               	movwf	??___flge+3
 16067  1623  0857               	movf	___flge@ff1,w
 16068  1624  02DF               	subwf	??___flge,f
 16069  1625  0858               	movf	___flge@ff1+1,w
 16070  1626  3BE0               	subwfb	??___flge+1,f
 16071  1627  0859               	movf	___flge@ff1+2,w
 16072  1628  3BE1               	subwfb	??___flge+2,f
 16073  1629  085A               	movf	___flge@ff1+3,w
 16074  162A  3BE2               	subwfb	??___flge+3,f
 16075  162B  0862               	movf	??___flge+3,w
 16076  162C  00DA               	movwf	___flge@ff1+3
 16077  162D  0861               	movf	??___flge+2,w
 16078  162E  00D9               	movwf	___flge@ff1+2
 16079  162F  0860               	movf	??___flge+1,w
 16080  1630  00D8               	movwf	___flge@ff1+1
 16081  1631  085F               	movf	??___flge,w
 16082  1632  00D7               	movwf	___flge@ff1
 16083  1633                     l3905:	
 16084  1633  1FDE               	btfss	___flge@ff2+3,7
 16085  1634  2E4D               	goto	l1490
 16086  1635  3000               	movlw	0
 16087  1636  00DF               	movwf	??___flge
 16088  1637  3000               	movlw	0
 16089  1638  00E0               	movwf	??___flge+1
 16090  1639  3000               	movlw	0
 16091  163A  00E1               	movwf	??___flge+2
 16092  163B  3080               	movlw	128
 16093  163C  00E2               	movwf	??___flge+3
 16094  163D  085B               	movf	___flge@ff2,w
 16095  163E  02DF               	subwf	??___flge,f
 16096  163F  085C               	movf	___flge@ff2+1,w
 16097  1640  3BE0               	subwfb	??___flge+1,f
 16098  1641  085D               	movf	___flge@ff2+2,w
 16099  1642  3BE1               	subwfb	??___flge+2,f
 16100  1643  085E               	movf	___flge@ff2+3,w
 16101  1644  3BE2               	subwfb	??___flge+3,f
 16102  1645  0862               	movf	??___flge+3,w
 16103  1646  00DE               	movwf	___flge@ff2+3
 16104  1647  0861               	movf	??___flge+2,w
 16105  1648  00DD               	movwf	___flge@ff2+2
 16106  1649  0860               	movf	??___flge+1,w
 16107  164A  00DC               	movwf	___flge@ff2+1
 16108  164B  085F               	movf	??___flge,w
 16109  164C  00DB               	movwf	___flge@ff2
 16110  164D                     l1490:	
 16111  164D  3080               	movlw	128
 16112  164E  06DA               	xorwf	___flge@ff1+3,f
 16113  164F  3080               	movlw	128
 16114  1650  06DE               	xorwf	___flge@ff2+3,f
 16115  1651  085E               	movf	___flge@ff2+3,w
 16116  1652  025A               	subwf	___flge@ff1+3,w
 16117  1653  1D03               	skipz
 16118  1654  0008               	return
 16119  1655  085D               	movf	___flge@ff2+2,w
 16120  1656  0259               	subwf	___flge@ff1+2,w
 16121  1657  1D03               	skipz
 16122  1658  0008               	return
 16123  1659  085C               	movf	___flge@ff2+1,w
 16124  165A  0258               	subwf	___flge@ff1+1,w
 16125  165B  1D03               	skipz
 16126  165C  0008               	return
 16127  165D  085B               	movf	___flge@ff2,w
 16128  165E  0257               	subwf	___flge@ff1,w
 16129  165F  0008               	return
 16130  1660                     __end_of___flge:	
 16131                           
 16132                           	psect	text52
 16133  1E3D                     __ptext52:	
 16134 ;; *************** function _BEAT_detected *****************
 16135 ;; Defined at:
 16136 ;;		line 41 in file "beat.c"
 16137 ;; Parameters:    Size  Location     Type
 16138 ;;		None
 16139 ;; Auto vars:     Size  Location     Type
 16140 ;;		None
 16141 ;; Return value:  Size  Location     Type
 16142 ;;                  1    wreg      _Bool 
 16143 ;; Registers used:
 16144 ;;		wreg, status,2, status,0
 16145 ;; Tracked objects:
 16146 ;;		On entry : 0/0
 16147 ;;		On exit  : 0/0
 16148 ;;		Unchanged: 0/0
 16149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16154 ;;Total ram usage:        0 bytes
 16155 ;; Hardware stack levels used:    1
 16156 ;; Hardware stack levels required when called:    4
 16157 ;; This function calls:
 16158 ;;		Nothing
 16159 ;; This function is called by:
 16160 ;;		_LED_Beat
 16161 ;; This function uses a non-reentrant model
 16162 ;;
 16163                           
 16164                           
 16165                           ;psect for function _BEAT_detected
 16166  1E3D                     _BEAT_detected:	
 16167                           
 16168                           ;beat.c: 42:     if (detected) {
 16169                           
 16170                           ;incstack = 0
 16171                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
 16172  1E3D  0142               	movlb	2	; select bank2
 16173  1E3E  0851               	movf	_detected^(0+256),w
 16174  1E3F  1903               	btfsc	3,2
 16175  1E40  2E44               	goto	l5817
 16176                           
 16177                           ;beat.c: 43:         detected = 0;
 16178  1E41  01D1               	clrf	_detected^(0+256)
 16179                           
 16180                           ;beat.c: 44:         return 1;
 16181  1E42  3001               	movlw	1
 16182  1E43  0008               	return
 16183  1E44                     l5817:	
 16184                           
 16185                           ;beat.c: 46:     return 0;
 16186  1E44  3000               	movlw	0
 16187  1E45  0008               	return
 16188  1E46                     __end_of_BEAT_detected:	
 16189                           
 16190                           	psect	text53
 16191  093A                     __ptext53:	
 16192 ;; *************** function _BEAT_task *****************
 16193 ;; Defined at:
 16194 ;;		line 59 in file "beat.c"
 16195 ;; Parameters:    Size  Location     Type
 16196 ;;		None
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;  offset          2   10[BANK0 ] unsigned short 
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  1    wreg      void 
 16201 ;; Registers used:
 16202 ;;		wreg, status,2, status,0, pclath, cstack
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16209 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16210 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16211 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16212 ;;Total ram usage:        4 bytes
 16213 ;; Hardware stack levels used:    1
 16214 ;; Hardware stack levels required when called:    5
 16215 ;; This function calls:
 16216 ;;		_ADCC_SetUpperThreshold
 16217 ;;		_CLOCK_getTime
 16218 ;;		_TM1650_isEnabled
 16219 ;;		___lwdiv
 16220 ;; This function is called by:
 16221 ;;		_MENU_task
 16222 ;; This function uses a non-reentrant model
 16223 ;;
 16224                           
 16225                           
 16226                           ;psect for function _BEAT_task
 16227  093A                     _BEAT_task:	
 16228                           
 16229                           ;beat.c: 61:     if (TM1650_isEnabled())
 16230                           
 16231                           ;incstack = 0
 16232                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 16233  093A  319D  25F3  3189   	fcall	_TM1650_isEnabled
 16234  093D  3A00               	xorlw	0
 16235  093E  1D03               	btfss	3,2
 16236  093F  0008               	return
 16237                           
 16238                           ;beat.c: 64:     if (CLOCK_getTime() - lastRun < delay)
 16239  0940  319E  262B  3189   	fcall	_CLOCK_getTime
 16240  0943  0142               	movlb	2	; select bank2
 16241  0944  083F               	movf	_lastRun^(0+256),w
 16242  0945  0140               	movlb	0	; select bank0
 16243  0946  0220               	subwf	?_CLOCK_getTime,w
 16244  0947  00A8               	movwf	??_BEAT_task
 16245  0948  0142               	movlb	2	; select bank2
 16246  0949  0840               	movf	(_lastRun+1)^(0+256),w
 16247  094A  0140               	movlb	0	; select bank0
 16248  094B  3B21               	subwfb	?_CLOCK_getTime+1,w
 16249  094C  00A9               	movwf	??_BEAT_task+1
 16250  094D  0142               	movlb	2	; select bank2
 16251  094E  0865               	movf	(_delay+1)^(0+256),w
 16252  094F  0140               	movlb	0	; select bank0
 16253  0950  0229               	subwf	??_BEAT_task+1,w
 16254  0951  1D03               	skipz
 16255  0952  2957               	goto	u6255
 16256  0953  0142               	movlb	2	; select bank2
 16257  0954  0864               	movf	_delay^(0+256),w
 16258  0955  0140               	movlb	0	; select bank0
 16259  0956  0228               	subwf	??_BEAT_task,w
 16260  0957                     u6255:	
 16261  0957  1C03               	btfss	3,0
 16262  0958  0008               	return
 16263                           
 16264                           ;beat.c: 67:     lastRun = CLOCK_getTime();
 16265  0959  319E  262B  3189   	fcall	_CLOCK_getTime
 16266  095C  0140               	movlb	0	; select bank0
 16267  095D  0821               	movf	?_CLOCK_getTime+1,w
 16268  095E  0142               	movlb	2	; select bank2
 16269  095F  00C0               	movwf	(_lastRun+1)^(0+256)
 16270  0960  0140               	movlb	0	; select bank0
 16271  0961  0820               	movf	?_CLOCK_getTime,w
 16272  0962  0142               	movlb	2	; select bank2
 16273  0963  00BF               	movwf	_lastRun^(0+256)
 16274                           
 16275                           ;beat.c: 69:     if (thresholdExceeded == 1) {
 16276  0964  0350               	decf	_thresholdExceeded^(0+256),w
 16277  0965  1D03               	btfss	3,2
 16278  0966  296C               	goto	l6045
 16279                           
 16280                           ;beat.c: 73:         thresholdCount++;
 16281  0967  3001               	movlw	1
 16282  0968  07BD               	addwf	_thresholdCount^(0+256),f
 16283  0969  3000               	movlw	0
 16284  096A  3DBE               	addwfc	(_thresholdCount+1)^(0+256),f
 16285                           
 16286                           ;beat.c: 74:     } else {
 16287  096B  2972               	goto	l6049
 16288  096C                     l6045:	
 16289                           
 16290                           ;beat.c: 76:         thresholdCount = 0;
 16291  096C  01BD               	clrf	_thresholdCount^(0+256)
 16292  096D  01BE               	clrf	(_thresholdCount+1)^(0+256)
 16293                           
 16294                           ;beat.c: 77:         delay = 20;
 16295  096E  3014               	movlw	20
 16296  096F  00E4               	movwf	_delay^(0+256)
 16297  0970  3000               	movlw	0
 16298  0971  00E5               	movwf	(_delay^(0+256)+1)
 16299  0972                     l6049:	
 16300                           
 16301                           ;beat.c: 83:     if (thresholdExceeded == 1 && lastDetected == 0) {
 16302  0972  0350               	decf	_thresholdExceeded^(0+256),w
 16303  0973  1D03               	btfss	3,2
 16304  0974  29B7               	goto	l6067
 16305  0975  084F               	movf	_lastDetected^(0+256),w
 16306  0976  1D03               	btfss	3,2
 16307  0977  29B7               	goto	l6067
 16308                           
 16309                           ;beat.c: 85:         detected = 1;
 16310  0978  01D1               	clrf	_detected^(0+256)
 16311  0979  0AD1               	incf	_detected^(0+256),f
 16312                           
 16313                           ;beat.c: 88:         delay = 100;
 16314  097A  3064               	movlw	100
 16315  097B  00E4               	movwf	_delay^(0+256)
 16316  097C  3000               	movlw	0
 16317  097D  00E5               	movwf	(_delay^(0+256)+1)
 16318                           
 16319                           ;beat.c: 91:         time_t offset = CLOCK_getTime() - lastBeat;
 16320  097E  319E  262B  3189   	fcall	_CLOCK_getTime
 16321  0981  0142               	movlb	2	; select bank2
 16322  0982  0843               	movf	_lastBeat^(0+256),w
 16323  0983  0140               	movlb	0	; select bank0
 16324  0984  0220               	subwf	?_CLOCK_getTime,w
 16325  0985  00AA               	movwf	BEAT_task@offset
 16326  0986  0142               	movlb	2	; select bank2
 16327  0987  0844               	movf	(_lastBeat+1)^(0+256),w
 16328  0988  0140               	movlb	0	; select bank0
 16329  0989  3B21               	subwfb	?_CLOCK_getTime+1,w
 16330  098A  00AB               	movwf	BEAT_task@offset+1
 16331                           
 16332                           ;beat.c: 93:         lastBeat = CLOCK_getTime();
 16333  098B  319E  262B  3189   	fcall	_CLOCK_getTime
 16334  098E  0140               	movlb	0	; select bank0
 16335  098F  0821               	movf	?_CLOCK_getTime+1,w
 16336  0990  0142               	movlb	2	; select bank2
 16337  0991  00C4               	movwf	(_lastBeat+1)^(0+256)
 16338  0992  0140               	movlb	0	; select bank0
 16339  0993  0820               	movf	?_CLOCK_getTime,w
 16340  0994  0142               	movlb	2	; select bank2
 16341  0995  00C3               	movwf	_lastBeat^(0+256)
 16342                           
 16343                           ;beat.c: 95:         if (offset < 150)
 16344  0996  3000               	movlw	0
 16345  0997  0140               	movlb	0	; select bank0
 16346  0998  022B               	subwf	BEAT_task@offset+1,w
 16347  0999  3096               	movlw	150
 16348  099A  1903               	skipnz
 16349  099B  022A               	subwf	BEAT_task@offset,w
 16350  099C  1803               	skipnc
 16351  099D  29A4               	goto	l6065
 16352                           
 16353                           ;beat.c: 96:             bpm = 400;
 16354  099E  3090               	movlw	144
 16355  099F  0142               	movlb	2	; select bank2
 16356  09A0  00C1               	movwf	_bpm^(0+256)
 16357  09A1  3001               	movlw	1
 16358  09A2  00C2               	movwf	(_bpm^(0+256)+1)
 16359  09A3  29B7               	goto	l6067
 16360  09A4                     l6065:	
 16361                           
 16362                           ;beat.c: 98:             bpm = 60 * 1000 / offset;
 16363  09A4  082B               	movf	BEAT_task@offset+1,w
 16364  09A5  00A1               	movwf	___lwdiv@divisor+1
 16365  09A6  082A               	movf	BEAT_task@offset,w
 16366  09A7  00A0               	movwf	___lwdiv@divisor
 16367  09A8  3060               	movlw	96
 16368  09A9  00A2               	movwf	___lwdiv@dividend
 16369  09AA  30EA               	movlw	234
 16370  09AB  00A3               	movwf	___lwdiv@dividend+1
 16371  09AC  3192  2216  3189   	fcall	___lwdiv
 16372  09AF  0140               	movlb	0	; select bank0
 16373  09B0  0821               	movf	?___lwdiv+1,w
 16374  09B1  0142               	movlb	2	; select bank2
 16375  09B2  00C2               	movwf	(_bpm+1)^(0+256)
 16376  09B3  0140               	movlb	0	; select bank0
 16377  09B4  0820               	movf	?___lwdiv,w
 16378  09B5  0142               	movlb	2	; select bank2
 16379  09B6  00C1               	movwf	_bpm^(0+256)
 16380  09B7                     l6067:	
 16381                           
 16382                           ;beat.c: 104:     lastDetected = thresholdExceeded;
 16383  09B7  0850               	movf	_thresholdExceeded^(0+256),w
 16384  09B8  0140               	movlb	0	; select bank0
 16385  09B9  00A8               	movwf	??_BEAT_task
 16386  09BA  0828               	movf	??_BEAT_task,w
 16387  09BB  0142               	movlb	2	; select bank2
 16388  09BC  00CF               	movwf	_lastDetected^(0+256)
 16389                           
 16390                           ;beat.c: 105:     thresholdExceeded = 0;
 16391  09BD  01D0               	clrf	_thresholdExceeded^(0+256)
 16392                           
 16393                           ;beat.c: 107:     if (thresholdCount > 3) {
 16394  09BE  083E               	movf	(_thresholdCount+1)^(0+256),w
 16395  09BF  3A80               	xorlw	128
 16396  09C0  0140               	movlb	0	; select bank0
 16397  09C1  00A8               	movwf	??_BEAT_task
 16398  09C2  3080               	movlw	128
 16399  09C3  0228               	subwf	??_BEAT_task,w
 16400  09C4  1D03               	skipz
 16401  09C5  29C9               	goto	u6305
 16402  09C6  3004               	movlw	4
 16403  09C7  0142               	movlb	2	; select bank2
 16404  09C8  023D               	subwf	_thresholdCount^(0+256),w
 16405  09C9                     u6305:	
 16406  09C9  1C03               	skipc
 16407  09CA  29E8               	goto	l6081
 16408                           
 16409                           ;beat.c: 108:         threshold += 1;
 16410  09CB  3001               	movlw	1
 16411  09CC  0142               	movlb	2	; select bank2
 16412  09CD  07E6               	addwf	_threshold^(0+256),f
 16413  09CE  3000               	movlw	0
 16414  09CF  3DE7               	addwfc	(_threshold+1)^(0+256),f
 16415                           
 16416                           ;beat.c: 109:         ADCC_SetUpperThreshold(threshold);
 16417  09D0  0867               	movf	(_threshold+1)^(0+256),w
 16418  09D1  0140               	movlb	0	; select bank0
 16419  09D2  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16420  09D3  0142               	movlb	2	; select bank2
 16421  09D4  0866               	movf	_threshold^(0+256),w
 16422  09D5  0140               	movlb	0	; select bank0
 16423  09D6  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16424  09D7  319E  2619  3189   	fcall	_ADCC_SetUpperThreshold
 16425                           
 16426                           ;beat.c: 110:         thresholdCount = 0;
 16427  09DA  0142               	movlb	2	; select bank2
 16428  09DB  01BD               	clrf	_thresholdCount^(0+256)
 16429  09DC  01BE               	clrf	(_thresholdCount+1)^(0+256)
 16430                           
 16431                           ;beat.c: 113:         lastBeat = CLOCK_getTime();
 16432  09DD  319E  262B         	fcall	_CLOCK_getTime
 16433  09DF  0140               	movlb	0	; select bank0
 16434  09E0  0821               	movf	?_CLOCK_getTime+1,w
 16435  09E1  0142               	movlb	2	; select bank2
 16436  09E2  00C4               	movwf	(_lastBeat+1)^(0+256)
 16437  09E3  0140               	movlb	0	; select bank0
 16438  09E4  0820               	movf	?_CLOCK_getTime,w
 16439  09E5  0142               	movlb	2	; select bank2
 16440  09E6  00C3               	movwf	_lastBeat^(0+256)
 16441                           
 16442                           ;beat.c: 114:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 16443  09E7  0008               	return
 16444  09E8                     l6081:	
 16445  09E8  319E  262B  3189   	fcall	_CLOCK_getTime
 16446  09EB  0142               	movlb	2	; select bank2
 16447  09EC  0843               	movf	_lastBeat^(0+256),w
 16448  09ED  0140               	movlb	0	; select bank0
 16449  09EE  0220               	subwf	?_CLOCK_getTime,w
 16450  09EF  00A8               	movwf	??_BEAT_task
 16451  09F0  0142               	movlb	2	; select bank2
 16452  09F1  0844               	movf	(_lastBeat+1)^(0+256),w
 16453  09F2  0140               	movlb	0	; select bank0
 16454  09F3  3B21               	subwfb	?_CLOCK_getTime+1,w
 16455  09F4  00A9               	movwf	??_BEAT_task+1
 16456  09F5  3003               	movlw	3
 16457  09F6  0229               	subwf	??_BEAT_task+1,w
 16458  09F7  30E9               	movlw	233
 16459  09F8  1903               	skipnz
 16460  09F9  0228               	subwf	??_BEAT_task,w
 16461  09FA  1C03               	skipc
 16462  09FB  0008               	return
 16463                           
 16464                           ;beat.c: 115:         threshold -= 1;
 16465  09FC  3001               	movlw	1
 16466  09FD  0142               	movlb	2	; select bank2
 16467  09FE  02E6               	subwf	_threshold^(0+256),f
 16468  09FF  3000               	movlw	0
 16469  0A00  3BE7               	subwfb	(_threshold+1)^(0+256),f
 16470                           
 16471                           ;beat.c: 116:         ADCC_SetUpperThreshold(threshold);
 16472  0A01  0867               	movf	(_threshold+1)^(0+256),w
 16473  0A02  0140               	movlb	0	; select bank0
 16474  0A03  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 16475  0A04  0142               	movlb	2	; select bank2
 16476  0A05  0866               	movf	_threshold^(0+256),w
 16477  0A06  0140               	movlb	0	; select bank0
 16478  0A07  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 16479  0A08  319E  2619         	fcall	_ADCC_SetUpperThreshold
 16480  0A0A  0008               	return
 16481  0A0B                     __end_of_BEAT_task:	
 16482                           
 16483                           	psect	text54
 16484  1216                     __ptext54:	
 16485 ;; *************** function ___lwdiv *****************
 16486 ;; Defined at:
 16487 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 16488 ;; Parameters:    Size  Location     Type
 16489 ;;  divisor         2    0[BANK0 ] unsigned int 
 16490 ;;  dividend        2    2[BANK0 ] unsigned int 
 16491 ;; Auto vars:     Size  Location     Type
 16492 ;;  quotient        2    6[BANK0 ] unsigned int 
 16493 ;;  counter         1    5[BANK0 ] unsigned char 
 16494 ;; Return value:  Size  Location     Type
 16495 ;;                  2    0[BANK0 ] unsigned int 
 16496 ;; Registers used:
 16497 ;;		wreg, status,2, status,0
 16498 ;; Tracked objects:
 16499 ;;		On entry : 0/0
 16500 ;;		On exit  : 0/0
 16501 ;;		Unchanged: 0/0
 16502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16503 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16504 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16506 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16507 ;;Total ram usage:        8 bytes
 16508 ;; Hardware stack levels used:    1
 16509 ;; Hardware stack levels required when called:    4
 16510 ;; This function calls:
 16511 ;;		Nothing
 16512 ;; This function is called by:
 16513 ;;		_TM1650_fastPrintNum
 16514 ;;		_BEAT_task
 16515 ;; This function uses a non-reentrant model
 16516 ;;
 16517                           
 16518                           
 16519                           ;psect for function ___lwdiv
 16520  1216                     ___lwdiv:	
 16521                           
 16522                           ;incstack = 0
 16523                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16524  1216  0140               	movlb	0	; select bank0
 16525  1217  01A6               	clrf	___lwdiv@quotient
 16526  1218  01A7               	clrf	___lwdiv@quotient+1
 16527  1219  0820               	movf	___lwdiv@divisor,w
 16528  121A  0421               	iorwf	___lwdiv@divisor+1,w
 16529  121B  1903               	btfsc	3,2
 16530  121C  2A46               	goto	l5427
 16531  121D  01A5               	clrf	___lwdiv@counter
 16532  121E  0AA5               	incf	___lwdiv@counter,f
 16533  121F                     l5415:	
 16534  121F  1BA1               	btfsc	___lwdiv@divisor+1,7
 16535  1220  2A2B               	goto	l5417
 16536  1221  3001               	movlw	1
 16537  1222                     u5515:	
 16538  1222  35A0               	lslf	___lwdiv@divisor,f
 16539  1223  0DA1               	rlf	___lwdiv@divisor+1,f
 16540  1224  0B89               	decfsz	9,f
 16541  1225  2A22               	goto	u5515
 16542  1226  3001               	movlw	1
 16543  1227  00A4               	movwf	??___lwdiv
 16544  1228  0824               	movf	??___lwdiv,w
 16545  1229  07A5               	addwf	___lwdiv@counter,f
 16546  122A  2A1F               	goto	l5415
 16547  122B                     l5417:	
 16548  122B  3001               	movlw	1
 16549  122C                     u5535:	
 16550  122C  35A6               	lslf	___lwdiv@quotient,f
 16551  122D  0DA7               	rlf	___lwdiv@quotient+1,f
 16552  122E  0B89               	decfsz	9,f
 16553  122F  2A2C               	goto	u5535
 16554  1230  0821               	movf	___lwdiv@divisor+1,w
 16555  1231  0223               	subwf	___lwdiv@dividend+1,w
 16556  1232  1D03               	skipz
 16557  1233  2A36               	goto	u5545
 16558  1234  0820               	movf	___lwdiv@divisor,w
 16559  1235  0222               	subwf	___lwdiv@dividend,w
 16560  1236                     u5545:	
 16561  1236  1C03               	skipc
 16562  1237  2A3D               	goto	l5423
 16563  1238  0820               	movf	___lwdiv@divisor,w
 16564  1239  02A2               	subwf	___lwdiv@dividend,f
 16565  123A  0821               	movf	___lwdiv@divisor+1,w
 16566  123B  3BA3               	subwfb	___lwdiv@dividend+1,f
 16567  123C  1426               	bsf	___lwdiv@quotient,0
 16568  123D                     l5423:	
 16569  123D  3001               	movlw	1
 16570  123E                     u5555:	
 16571  123E  36A1               	lsrf	___lwdiv@divisor+1,f
 16572  123F  0CA0               	rrf	___lwdiv@divisor,f
 16573  1240  0B89               	decfsz	9,f
 16574  1241  2A3E               	goto	u5555
 16575  1242  3001               	movlw	1
 16576  1243  02A5               	subwf	___lwdiv@counter,f
 16577  1244  1D03               	btfss	3,2
 16578  1245  2A2B               	goto	l5417
 16579  1246                     l5427:	
 16580  1246  0827               	movf	___lwdiv@quotient+1,w
 16581  1247  00A1               	movwf	?___lwdiv+1
 16582  1248  0826               	movf	___lwdiv@quotient,w
 16583  1249  00A0               	movwf	?___lwdiv
 16584  124A  0008               	return
 16585  124B                     __end_of___lwdiv:	
 16586                           
 16587                           	psect	text55
 16588  1DF3                     __ptext55:	
 16589 ;; *************** function _TM1650_isEnabled *****************
 16590 ;; Defined at:
 16591 ;;		line 70 in file "tm1650.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;		None
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  1    wreg      _Bool 
 16598 ;; Registers used:
 16599 ;;		wreg
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16609 ;;Total ram usage:        0 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:    4
 16612 ;; This function calls:
 16613 ;;		Nothing
 16614 ;; This function is called by:
 16615 ;;		_BEAT_task
 16616 ;; This function uses a non-reentrant model
 16617 ;;
 16618                           
 16619                           
 16620                           ;psect for function _TM1650_isEnabled
 16621  1DF3                     _TM1650_isEnabled:	
 16622                           
 16623                           ;tm1650.c: 71:     return isOn;
 16624                           
 16625                           ;incstack = 0
 16626                           ; Regs used in _TM1650_isEnabled: [wreg]
 16627  1DF3  0142               	movlb	2	; select bank2
 16628  1DF4  0855               	movf	_isOn^(0+256),w
 16629  1DF5  0008               	return
 16630  1DF6                     __end_of_TM1650_isEnabled:	
 16631                           
 16632                           	psect	text56
 16633  12B6                     __ptext56:	
 16634 ;; *************** function _DMX_task *****************
 16635 ;; Defined at:
 16636 ;;		line 38 in file "dmx.c"
 16637 ;; Parameters:    Size  Location     Type
 16638 ;;		None
 16639 ;; Auto vars:     Size  Location     Type
 16640 ;;  time            2    4[BANK0 ] unsigned short 
 16641 ;; Return value:  Size  Location     Type
 16642 ;;                  1    wreg      void 
 16643 ;; Registers used:
 16644 ;;		wreg, status,2, status,0, pclath, cstack
 16645 ;; Tracked objects:
 16646 ;;		On entry : 0/0
 16647 ;;		On exit  : 0/0
 16648 ;;		Unchanged: 0/0
 16649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16651 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16652 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16653 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16654 ;;Total ram usage:        4 bytes
 16655 ;; Hardware stack levels used:    1
 16656 ;; Hardware stack levels required when called:    5
 16657 ;; This function calls:
 16658 ;;		_CLOCK_getTime
 16659 ;; This function is called by:
 16660 ;;		_main
 16661 ;; This function uses a non-reentrant model
 16662 ;;
 16663                           
 16664                           
 16665                           ;psect for function _DMX_task
 16666  12B6                     _DMX_task:	
 16667                           
 16668                           ;dmx.c: 39:     time_t time = CLOCK_getTime();
 16669                           
 16670                           ;incstack = 0
 16671                           ; Regs used in _DMX_task: [wreg+status,2+status,0+pclath+cstack]
 16672  12B6  319E  262B  3192   	fcall	_CLOCK_getTime
 16673  12B9  0140               	movlb	0	; select bank0
 16674  12BA  0821               	movf	?_CLOCK_getTime+1,w
 16675  12BB  00A5               	movwf	DMX_task@time+1
 16676  12BC  0820               	movf	?_CLOCK_getTime,w
 16677  12BD  00A4               	movwf	DMX_task@time
 16678                           
 16679                           ;dmx.c: 40:     if (time - lastTime < 1000)
 16680  12BE  0142               	movlb	2	; select bank2
 16681  12BF  0839               	movf	dmx@lastTime^(0+256),w
 16682  12C0  0140               	movlb	0	; select bank0
 16683  12C1  0224               	subwf	DMX_task@time,w
 16684  12C2  00A2               	movwf	??_DMX_task
 16685  12C3  0142               	movlb	2	; select bank2
 16686  12C4  083A               	movf	(dmx@lastTime+1)^(0+256),w
 16687  12C5  0140               	movlb	0	; select bank0
 16688  12C6  3B25               	subwfb	DMX_task@time+1,w
 16689  12C7  00A3               	movwf	??_DMX_task+1
 16690  12C8  3003               	movlw	3
 16691  12C9  0223               	subwf	??_DMX_task+1,w
 16692  12CA  30E8               	movlw	232
 16693  12CB  1903               	skipnz
 16694  12CC  0222               	subwf	??_DMX_task,w
 16695  12CD  1C03               	btfss	3,0
 16696  12CE  0008               	return
 16697                           
 16698                           ;dmx.c: 42:     lastTime = time;
 16699  12CF  0825               	movf	DMX_task@time+1,w
 16700  12D0  0142               	movlb	2	; select bank2
 16701  12D1  00BA               	movwf	(dmx@lastTime+1)^(0+256)
 16702  12D2  0140               	movlb	0	; select bank0
 16703  12D3  0824               	movf	DMX_task@time,w
 16704  12D4  0142               	movlb	2	; select bank2
 16705  12D5  00B9               	movwf	dmx@lastTime^(0+256)
 16706                           
 16707                           ;dmx.c: 44:     if(offCheck && !toggleCheck) {
 16708  12D6  084E               	movf	_offCheck^(0+256),w
 16709  12D7  1903               	btfsc	3,2
 16710  12D8  2AE0               	goto	l6287
 16711  12D9  084C               	movf	_toggleCheck^(0+256),w
 16712  12DA  1D03               	btfss	3,2
 16713  12DB  2AE0               	goto	l6287
 16714                           
 16715                           ;dmx.c: 46:         toggleCheck = 1;
 16716  12DC  01CC               	clrf	_toggleCheck^(0+256)
 16717  12DD  0ACC               	incf	_toggleCheck^(0+256),f
 16718                           
 16719                           ;dmx.c: 47:         offCheck = 0;
 16720  12DE  01CE               	clrf	_offCheck^(0+256)
 16721  12DF  0008               	return
 16722  12E0                     l6287:	
 16723                           
 16724                           ;dmx.c: 51:     if (offCheck && toggleCheck) {
 16725  12E0  084E               	movf	_offCheck^(0+256),w
 16726  12E1  1903               	btfsc	3,2
 16727  12E2  2AEB               	goto	l6295
 16728  12E3  084C               	movf	_toggleCheck^(0+256),w
 16729  12E4  1903               	btfsc	3,2
 16730  12E5  2AEB               	goto	l6295
 16731                           
 16732                           ;dmx.c: 52:         dmxOn = 1;
 16733  12E6  01CD               	clrf	_dmxOn^(0+256)
 16734  12E7  0ACD               	incf	_dmxOn^(0+256),f
 16735                           
 16736                           ;dmx.c: 53:         toggleCheck = 0;
 16737  12E8  01CC               	clrf	_toggleCheck^(0+256)
 16738                           
 16739                           ;dmx.c: 54:         offCheck = 0;
 16740  12E9  01CE               	clrf	_offCheck^(0+256)
 16741                           
 16742                           ;dmx.c: 55:     } else {
 16743  12EA  0008               	return
 16744  12EB                     l6295:	
 16745                           
 16746                           ;dmx.c: 56:         dmxOn = 0;
 16747  12EB  01CD               	clrf	_dmxOn^(0+256)
 16748  12EC  0008               	return
 16749  12ED                     __end_of_DMX_task:	
 16750                           
 16751                           	psect	text57
 16752  0800                     __ptext57:	
 16753 ;; *************** function _CLOCK_init *****************
 16754 ;; Defined at:
 16755 ;;		line 9 in file "clock.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1    wreg      void 
 16762 ;; Registers used:
 16763 ;;		wreg, status,2, status,0, pclath, cstack
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16773 ;;Total ram usage:        0 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; Hardware stack levels required when called:    5
 16776 ;; This function calls:
 16777 ;;		_TMR0_SetInterruptHandler
 16778 ;; This function is called by:
 16779 ;;		_main
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           
 16784                           ;psect for function _CLOCK_init
 16785  0800                     _CLOCK_init:	
 16786                           
 16787                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 16788                           
 16789                           ;incstack = 0
 16790                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 16791  0800  300A               	movlw	low _CLOCK_timerCallback
 16792  0801  0140               	movlb	0	; select bank0
 16793  0802  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16794  0803  301E               	movlw	high _CLOCK_timerCallback
 16795  0804  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16796  0805  319E  2634         	fcall	_TMR0_SetInterruptHandler
 16797  0807  0008               	return
 16798  0808                     __end_of_CLOCK_init:	
 16799                           
 16800                           	psect	text58
 16801  1E34                     __ptext58:	
 16802 ;; *************** function _TMR0_SetInterruptHandler *****************
 16803 ;; Defined at:
 16804 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16805 ;; Parameters:    Size  Location     Type
 16806 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16807 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 16808 ;; Auto vars:     Size  Location     Type
 16809 ;;		None
 16810 ;; Return value:  Size  Location     Type
 16811 ;;                  1    wreg      void 
 16812 ;; Registers used:
 16813 ;;		wreg
 16814 ;; Tracked objects:
 16815 ;;		On entry : 0/0
 16816 ;;		On exit  : 0/0
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16819 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16822 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16823 ;;Total ram usage:        2 bytes
 16824 ;; Hardware stack levels used:    1
 16825 ;; Hardware stack levels required when called:    4
 16826 ;; This function calls:
 16827 ;;		Nothing
 16828 ;; This function is called by:
 16829 ;;		_TMR0_Initialize
 16830 ;;		_CLOCK_init
 16831 ;; This function uses a non-reentrant model
 16832 ;;
 16833                           
 16834                           
 16835                           ;psect for function _TMR0_SetInterruptHandler
 16836  1E34                     _TMR0_SetInterruptHandler:	
 16837                           
 16838                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16839                           
 16840                           ;incstack = 0
 16841                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16842  1E34  0140               	movlb	0	; select bank0
 16843  1E35  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16844  1E36  0142               	movlb	2	; select bank2
 16845  1E37  00ED               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 16846  1E38  0140               	movlb	0	; select bank0
 16847  1E39  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16848  1E3A  0142               	movlb	2	; select bank2
 16849  1E3B  00EC               	movwf	_TMR0_InterruptHandler^(0+256)
 16850  1E3C  0008               	return
 16851  1E3D                     __end_of_TMR0_SetInterruptHandler:	
 16852                           
 16853                           	psect	text59
 16854  0A0B                     __ptext59:	
 16855 ;; *************** function _BUTTONS_task *****************
 16856 ;; Defined at:
 16857 ;;		line 37 in file "buttons.c"
 16858 ;; Parameters:    Size  Location     Type
 16859 ;;		None
 16860 ;; Auto vars:     Size  Location     Type
 16861 ;;  btn             1    8[BANK0 ] PTR struct .
 16862 ;;		 -> buttons(32), 
 16863 ;;  i               1    5[BANK0 ] unsigned char 
 16864 ;;  time            2    6[BANK0 ] unsigned short 
 16865 ;; Return value:  Size  Location     Type
 16866 ;;                  1    wreg      void 
 16867 ;; Registers used:
 16868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16869 ;; Tracked objects:
 16870 ;;		On entry : 0/0
 16871 ;;		On exit  : 0/0
 16872 ;;		Unchanged: 0/0
 16873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16875 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16876 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16877 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16878 ;;Total ram usage:        7 bytes
 16879 ;; Hardware stack levels used:    1
 16880 ;; Hardware stack levels required when called:    5
 16881 ;; This function calls:
 16882 ;;		_CLOCK_getTime
 16883 ;; This function is called by:
 16884 ;;		_main
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           
 16889                           ;psect for function _BUTTONS_task
 16890  0A0B                     _BUTTONS_task:	
 16891                           
 16892                           ;buttons.c: 38:     time_t time = CLOCK_getTime();
 16893                           
 16894                           ;incstack = 0
 16895                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16896  0A0B  319E  262B  318A   	fcall	_CLOCK_getTime
 16897  0A0E  0140               	movlb	0	; select bank0
 16898  0A0F  0821               	movf	?_CLOCK_getTime+1,w
 16899  0A10  00A7               	movwf	BUTTONS_task@time+1
 16900  0A11  0820               	movf	?_CLOCK_getTime,w
 16901  0A12  00A6               	movwf	BUTTONS_task@time
 16902                           
 16903                           ;buttons.c: 41:     if (time - lastTime < 50)
 16904  0A13  0142               	movlb	2	; select bank2
 16905  0A14  0845               	movf	_lastTime^(0+256),w
 16906  0A15  0140               	movlb	0	; select bank0
 16907  0A16  0226               	subwf	BUTTONS_task@time,w
 16908  0A17  00A2               	movwf	??_BUTTONS_task
 16909  0A18  0142               	movlb	2	; select bank2
 16910  0A19  0846               	movf	(_lastTime+1)^(0+256),w
 16911  0A1A  0140               	movlb	0	; select bank0
 16912  0A1B  3B27               	subwfb	BUTTONS_task@time+1,w
 16913  0A1C  00A3               	movwf	??_BUTTONS_task+1
 16914  0A1D  3000               	movlw	0
 16915  0A1E  0223               	subwf	??_BUTTONS_task+1,w
 16916  0A1F  3032               	movlw	50
 16917  0A20  1903               	skipnz
 16918  0A21  0222               	subwf	??_BUTTONS_task,w
 16919  0A22  1C03               	btfss	3,0
 16920  0A23  0008               	return
 16921                           
 16922                           ;buttons.c: 44:     lastTime = time;
 16923  0A24  0827               	movf	BUTTONS_task@time+1,w
 16924  0A25  0142               	movlb	2	; select bank2
 16925  0A26  00C6               	movwf	(_lastTime+1)^(0+256)
 16926  0A27  0140               	movlb	0	; select bank0
 16927  0A28  0826               	movf	BUTTONS_task@time,w
 16928  0A29  0142               	movlb	2	; select bank2
 16929  0A2A  00C5               	movwf	_lastTime^(0+256)
 16930                           
 16931                           ;buttons.c: 47:     for (uint8_t i = 0; i < 4; i++) {
 16932  0A2B  0140               	movlb	0	; select bank0
 16933  0A2C  01A5               	clrf	BUTTONS_task@i
 16934  0A2D                     l6311:	
 16935                           
 16936                           ;buttons.c: 48:         button_t* btn = buttons + i;
 16937  0A2D  0825               	movf	BUTTONS_task@i,w
 16938  0A2E  00A2               	movwf	??_BUTTONS_task
 16939  0A2F  3002               	movlw	2
 16940  0A30                     u6585:	
 16941  0A30  35A2               	lslf	??_BUTTONS_task,f
 16942  0A31  3EFF               	addlw	-1
 16943  0A32  1D03               	skipz
 16944  0A33  2A30               	goto	u6585
 16945  0A34  3522               	lslf	??_BUTTONS_task,w
 16946  0A35  3E20               	addlw	(low (_buttons| (0+512)))& (0+255)
 16947  0A36  00A3               	movwf	??_BUTTONS_task+1
 16948  0A37  0823               	movf	??_BUTTONS_task+1,w
 16949  0A38  00A8               	movwf	BUTTONS_task@btn
 16950                           
 16951                           ;buttons.c: 51:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 16952  0A39  0828               	movf	BUTTONS_task@btn,w
 16953  0A3A  0086               	movwf	6
 16954  0A3B  3002               	movlw	2	; select bank4/5
 16955  0A3C  0087               	movwf	7
 16956  0A3D  3F40               	moviw [0]fsr1
 16957  0A3E  00A2               	movwf	??_BUTTONS_task
 16958  0A3F  3F41               	moviw [1]fsr1
 16959  0A40  00A3               	movwf	??_BUTTONS_task+1
 16960  0A41  0822               	movf	??_BUTTONS_task,w
 16961  0A42  0086               	movwf	6
 16962  0A43  0823               	movf	??_BUTTONS_task+1,w
 16963  0A44  0087               	movwf	7
 16964  0A45  3001               	movlw	1
 16965  0A46  00A4               	movwf	??_BUTTONS_task+2
 16966  0A47  0828               	movf	BUTTONS_task@btn,w
 16967  0A48  3E02               	addlw	2
 16968  0A49  0084               	movwf	4
 16969  0A4A  3002               	movlw	2	; select bank4/5
 16970  0A4B  0085               	movwf	5
 16971  0A4C  0A00               	incf	0,w
 16972  0A4D  2A4F               	goto	u6594
 16973  0A4E                     u6595:	
 16974  0A4E  35A4               	lslf	??_BUTTONS_task+2,f
 16975  0A4F                     u6594:	
 16976  0A4F  0B89               	decfsz	9,f
 16977  0A50  2A4E               	goto	u6595
 16978  0A51  0824               	movf	??_BUTTONS_task+2,w
 16979  0A52  0501               	andwf	1,w
 16980  0A53  1D03               	btfss	3,2
 16981  0A54  2A5D               	goto	l6317
 16982                           
 16983                           ;buttons.c: 52:             btn->state = STATE_PRESSED;
 16984  0A55  0828               	movf	BUTTONS_task@btn,w
 16985  0A56  3E03               	addlw	3
 16986  0A57  0086               	movwf	6
 16987  0A58  3002               	movlw	2	; select bank4/5
 16988  0A59  0087               	movwf	7
 16989  0A5A  0181               	clrf	1
 16990  0A5B  0A81               	incf	1,f
 16991                           
 16992                           ;buttons.c: 53:         } else {
 16993  0A5C  2A63               	goto	l802
 16994  0A5D                     l6317:	
 16995                           
 16996                           ;buttons.c: 54:             btn->state = STATE_UNPRESSED;
 16997  0A5D  0828               	movf	BUTTONS_task@btn,w
 16998  0A5E  3E03               	addlw	3
 16999  0A5F  0086               	movwf	6
 17000  0A60  3002               	movlw	2	; select bank4/5
 17001  0A61  0087               	movwf	7
 17002  0A62  0181               	clrf	1
 17003  0A63                     l802:	
 17004                           ;buttons.c: 55:         }
 17005                           
 17006                           
 17007                           ;buttons.c: 57:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
 17008  0A63  0828               	movf	BUTTONS_task@btn,w
 17009  0A64  3E03               	addlw	3
 17010  0A65  0086               	movwf	6
 17011  0A66  3002               	movlw	2	; select bank4/5
 17012  0A67  0087               	movwf	7
 17013  0A68  0301               	decf	1,w
 17014  0A69  1D03               	btfss	3,2
 17015  0A6A  2A84               	goto	l6323
 17016  0A6B  0828               	movf	BUTTONS_task@btn,w
 17017  0A6C  3E04               	addlw	4
 17018  0A6D  0086               	movwf	6
 17019  0A6E  3002               	movlw	2	; select bank4/5
 17020  0A6F  0087               	movwf	7
 17021  0A70  0801               	movf	1,w
 17022  0A71  1D03               	btfss	3,2
 17023  0A72  2A84               	goto	l6323
 17024                           
 17025                           ;buttons.c: 59:             btn->event = EVENT_PRESSED;
 17026  0A73  0828               	movf	BUTTONS_task@btn,w
 17027  0A74  3E05               	addlw	5
 17028  0A75  0086               	movwf	6
 17029  0A76  3002               	movlw	2	; select bank4/5
 17030  0A77  0087               	movwf	7
 17031  0A78  0181               	clrf	1
 17032  0A79  0A81               	incf	1,f
 17033                           
 17034                           ;buttons.c: 60:             btn->pressTime = time;
 17035  0A7A  0828               	movf	BUTTONS_task@btn,w
 17036  0A7B  3E06               	addlw	6
 17037  0A7C  0086               	movwf	6
 17038  0A7D  3002               	movlw	2	; select bank4/5
 17039  0A7E  0087               	movwf	7
 17040  0A7F  0826               	movf	BUTTONS_task@time,w
 17041  0A80  3FC0               	movwi [0]fsr1
 17042  0A81  0827               	movf	BUTTONS_task@time+1,w
 17043  0A82  3FC1               	movwi [1]fsr1
 17044                           
 17045                           ;buttons.c: 61:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 17046  0A83  2AC6               	goto	l804
 17047  0A84                     l6323:	
 17048  0A84  0828               	movf	BUTTONS_task@btn,w
 17049  0A85  3E03               	addlw	3
 17050  0A86  0086               	movwf	6
 17051  0A87  3002               	movlw	2	; select bank4/5
 17052  0A88  0087               	movwf	7
 17053  0A89  0301               	decf	1,w
 17054  0A8A  1D03               	btfss	3,2
 17055  0A8B  2AB0               	goto	l6331
 17056  0A8C  0828               	movf	BUTTONS_task@btn,w
 17057  0A8D  3E04               	addlw	4
 17058  0A8E  0086               	movwf	6
 17059  0A8F  3002               	movlw	2	; select bank4/5
 17060  0A90  0087               	movwf	7
 17061  0A91  0301               	decf	1,w
 17062  0A92  1D03               	btfss	3,2
 17063  0A93  2AB0               	goto	l6331
 17064                           
 17065                           ;buttons.c: 63:             if(time - btn->pressTime > 500) {
 17066  0A94  0828               	movf	BUTTONS_task@btn,w
 17067  0A95  3E06               	addlw	6
 17068  0A96  0086               	movwf	6
 17069  0A97  3002               	movlw	2	; select bank4/5
 17070  0A98  0087               	movwf	7
 17071  0A99  3F40               	moviw [0]fsr1
 17072  0A9A  0226               	subwf	BUTTONS_task@time,w
 17073  0A9B  00A2               	movwf	??_BUTTONS_task
 17074  0A9C  3F41               	moviw [1]fsr1
 17075  0A9D  3B27               	subwfb	BUTTONS_task@time+1,w
 17076  0A9E  00A3               	movwf	??_BUTTONS_task+1
 17077  0A9F  3001               	movlw	1
 17078  0AA0  0223               	subwf	??_BUTTONS_task+1,w
 17079  0AA1  30F5               	movlw	245
 17080  0AA2  1903               	skipnz
 17081  0AA3  0222               	subwf	??_BUTTONS_task,w
 17082  0AA4  1C03               	skipc
 17083  0AA5  2AC6               	goto	l804
 17084                           
 17085                           ;buttons.c: 64:                 btn->event = EVENT_HELD;
 17086  0AA6  3002               	movlw	2
 17087  0AA7  00A2               	movwf	??_BUTTONS_task
 17088  0AA8  0828               	movf	BUTTONS_task@btn,w
 17089  0AA9  3E05               	addlw	5
 17090  0AAA  0086               	movwf	6
 17091  0AAB  3002               	movlw	2	; select bank4/5
 17092  0AAC  0087               	movwf	7
 17093  0AAD  0822               	movf	??_BUTTONS_task,w
 17094  0AAE  0081               	movwf	1
 17095  0AAF  2AC6               	goto	l804
 17096  0AB0                     l6331:	
 17097  0AB0  0828               	movf	BUTTONS_task@btn,w
 17098  0AB1  3E03               	addlw	3
 17099  0AB2  0086               	movwf	6
 17100  0AB3  3002               	movlw	2	; select bank4/5
 17101  0AB4  0087               	movwf	7
 17102  0AB5  0801               	movf	1,w
 17103  0AB6  1D03               	btfss	3,2
 17104  0AB7  2AC6               	goto	l804
 17105  0AB8  0828               	movf	BUTTONS_task@btn,w
 17106  0AB9  3E04               	addlw	4
 17107  0ABA  0086               	movwf	6
 17108  0ABB  3002               	movlw	2	; select bank4/5
 17109  0ABC  0087               	movwf	7
 17110  0ABD  0301               	decf	1,w
 17111  0ABE  1D03               	btfss	3,2
 17112  0ABF  2AC6               	goto	l804
 17113                           
 17114                           ;buttons.c: 67:             btn->event = EVENT_IDLE;
 17115  0AC0  0828               	movf	BUTTONS_task@btn,w
 17116  0AC1  3E05               	addlw	5
 17117  0AC2  0086               	movwf	6
 17118  0AC3  3002               	movlw	2	; select bank4/5
 17119  0AC4  0087               	movwf	7
 17120  0AC5  0181               	clrf	1
 17121  0AC6                     l804:	
 17122                           
 17123                           ;buttons.c: 70:         btn->lastState = btn->state;
 17124  0AC6  0828               	movf	BUTTONS_task@btn,w
 17125  0AC7  3E03               	addlw	3
 17126  0AC8  0086               	movwf	6
 17127  0AC9  3002               	movlw	2	; select bank4/5
 17128  0ACA  0087               	movwf	7
 17129  0ACB  0801               	movf	1,w
 17130  0ACC  00A2               	movwf	??_BUTTONS_task
 17131  0ACD  0828               	movf	BUTTONS_task@btn,w
 17132  0ACE  3E04               	addlw	4
 17133  0ACF  0086               	movwf	6
 17134  0AD0  3002               	movlw	2	; select bank4/5
 17135  0AD1  0087               	movwf	7
 17136  0AD2  0822               	movf	??_BUTTONS_task,w
 17137  0AD3  0081               	movwf	1
 17138                           
 17139                           ;buttons.c: 71:     }
 17140  0AD4  3001               	movlw	1
 17141  0AD5  00A2               	movwf	??_BUTTONS_task
 17142  0AD6  0822               	movf	??_BUTTONS_task,w
 17143  0AD7  07A5               	addwf	BUTTONS_task@i,f
 17144  0AD8  3004               	movlw	4
 17145  0AD9  0225               	subwf	BUTTONS_task@i,w
 17146  0ADA  1803               	btfsc	3,0
 17147  0ADB  0008               	return
 17148  0ADC  2A2D               	goto	l6311
 17149  0ADD                     __end_of_BUTTONS_task:	
 17150                           
 17151                           	psect	text60
 17152  1E2B                     __ptext60:	
 17153 ;; *************** function _CLOCK_getTime *****************
 17154 ;; Defined at:
 17155 ;;		line 17 in file "clock.c"
 17156 ;; Parameters:    Size  Location     Type
 17157 ;;		None
 17158 ;; Auto vars:     Size  Location     Type
 17159 ;;		None
 17160 ;; Return value:  Size  Location     Type
 17161 ;;                  2    0[BANK0 ] unsigned short 
 17162 ;; Registers used:
 17163 ;;		wreg
 17164 ;; Tracked objects:
 17165 ;;		On entry : 0/0
 17166 ;;		On exit  : 0/0
 17167 ;;		Unchanged: 0/0
 17168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17172 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17173 ;;Total ram usage:        2 bytes
 17174 ;; Hardware stack levels used:    1
 17175 ;; Hardware stack levels required when called:    4
 17176 ;; This function calls:
 17177 ;;		Nothing
 17178 ;; This function is called by:
 17179 ;;		_BUTTONS_task
 17180 ;;		_BEAT_task
 17181 ;;		_DMX_task
 17182 ;;		_fadeColor
 17183 ;;		_cycleColors
 17184 ;;		_adrControl_DMX
 17185 ;;		_dispInc
 17186 ;; This function uses a non-reentrant model
 17187 ;;
 17188                           
 17189                           
 17190                           ;psect for function _CLOCK_getTime
 17191  1E2B                     _CLOCK_getTime:	
 17192                           
 17193                           ;clock.c: 18:     return currentTime;
 17194                           
 17195                           ;incstack = 0
 17196                           ; Regs used in _CLOCK_getTime: [wreg]
 17197  1E2B  0142               	movlb	2	; select bank2
 17198  1E2C  084A               	movf	(_currentTime+1)^(0+256),w
 17199  1E2D  0140               	movlb	0	; select bank0
 17200  1E2E  00A1               	movwf	?_CLOCK_getTime+1
 17201  1E2F  0142               	movlb	2	; select bank2
 17202  1E30  0849               	movf	_currentTime^(0+256),w
 17203  1E31  0140               	movlb	0	; select bank0
 17204  1E32  00A0               	movwf	?_CLOCK_getTime
 17205  1E33  0008               	return
 17206  1E34                     __end_of_CLOCK_getTime:	
 17207                           
 17208                           	psect	text61
 17209  13F1                     __ptext61:	
 17210 ;; *************** function _BUTTONS_init *****************
 17211 ;; Defined at:
 17212 ;;		line 21 in file "buttons.c"
 17213 ;; Parameters:    Size  Location     Type
 17214 ;;		None
 17215 ;; Auto vars:     Size  Location     Type
 17216 ;;		None
 17217 ;; Return value:  Size  Location     Type
 17218 ;;                  1    wreg      void 
 17219 ;; Registers used:
 17220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17221 ;; Tracked objects:
 17222 ;;		On entry : 0/0
 17223 ;;		On exit  : 0/0
 17224 ;;		Unchanged: 0/0
 17225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17228 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17229 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17230 ;;Total ram usage:        1 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; Hardware stack levels required when called:    5
 17233 ;; This function calls:
 17234 ;;		_init
 17235 ;; This function is called by:
 17236 ;;		_main
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240                           
 17241                           ;psect for function _BUTTONS_init
 17242  13F1                     _BUTTONS_init:	
 17243                           
 17244                           ;buttons.c: 22:     menu = &buttons[0];
 17245                           
 17246                           ;incstack = 0
 17247                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17248  13F1  3020               	movlw	(low (_buttons| (0+512)))& (0+255)
 17249  13F2  0140               	movlb	0	; select bank0
 17250  13F3  00A5               	movwf	??_BUTTONS_init
 17251  13F4  0825               	movf	??_BUTTONS_init,w
 17252  13F5  0142               	movlb	2	; select bank2
 17253  13F6  00D2               	movwf	_menu^(0+256)
 17254                           
 17255                           ;buttons.c: 23:     up = &buttons[1];
 17256  13F7  3028               	movlw	(low ((_buttons| (0+512)+8)))& (0+255)
 17257  13F8  0140               	movlb	0	; select bank0
 17258  13F9  00A5               	movwf	??_BUTTONS_init
 17259  13FA  0825               	movf	??_BUTTONS_init,w
 17260  13FB  0141               	movlb	1	; select bank1
 17261  13FC  00EB               	movwf	_up^(0+128)
 17262                           
 17263                           ;buttons.c: 24:     down = &buttons[2];
 17264  13FD  3030               	movlw	(low ((_buttons| (0+512)+16)))& (0+255)
 17265  13FE  0140               	movlb	0	; select bank0
 17266  13FF  00A5               	movwf	??_BUTTONS_init
 17267  1400  0825               	movf	??_BUTTONS_init,w
 17268  1401  0142               	movlb	2	; select bank2
 17269  1402  00D4               	movwf	_down^(0+256)
 17270                           
 17271                           ;buttons.c: 25:     enter = &buttons[3];
 17272  1403  3038               	movlw	(low ((_buttons| (0+512)+24)))& (0+255)
 17273  1404  0140               	movlb	0	; select bank0
 17274  1405  00A5               	movwf	??_BUTTONS_init
 17275  1406  0825               	movf	??_BUTTONS_init,w
 17276  1407  0142               	movlb	2	; select bank2
 17277  1408  00D3               	movwf	_enter^(0+256)
 17278                           
 17279                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 17280  1409  300E               	movlw	14
 17281  140A  0140               	movlb	0	; select bank0
 17282  140B  00A0               	movwf	init@port
 17283  140C  3000               	movlw	0
 17284  140D  00A1               	movwf	init@port+1
 17285  140E  3002               	movlw	2
 17286  140F  00A5               	movwf	??_BUTTONS_init
 17287  1410  0825               	movf	??_BUTTONS_init,w
 17288  1411  00A2               	movwf	init@pin
 17289  1412  0142               	movlb	2	; select bank2
 17290  1413  0852               	movf	_menu^(0+256),w
 17291  1414  3190  2049  3193   	fcall	_init
 17292                           
 17293                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 17294  1417  300C               	movlw	12
 17295  1418  0140               	movlb	0	; select bank0
 17296  1419  00A0               	movwf	init@port
 17297  141A  3000               	movlw	0
 17298  141B  00A1               	movwf	init@port+1
 17299  141C  3002               	movlw	2
 17300  141D  00A5               	movwf	??_BUTTONS_init
 17301  141E  0825               	movf	??_BUTTONS_init,w
 17302  141F  00A2               	movwf	init@pin
 17303  1420  0142               	movlb	2	; select bank2
 17304  1421  0853               	movf	_enter^(0+256),w
 17305  1422  3190  2049  3193   	fcall	_init
 17306                           
 17307                           ;buttons.c: 29:     init(down, &PORTC, 0);
 17308  1425  300E               	movlw	14
 17309  1426  0140               	movlb	0	; select bank0
 17310  1427  00A0               	movwf	init@port
 17311  1428  3000               	movlw	0
 17312  1429  00A1               	movwf	init@port+1
 17313  142A  01A2               	clrf	init@pin
 17314  142B  0142               	movlb	2	; select bank2
 17315  142C  0854               	movf	_down^(0+256),w
 17316  142D  3190  2049  3193   	fcall	_init
 17317                           
 17318                           ;buttons.c: 30:     init(up, &PORTC, 1);
 17319  1430  300E               	movlw	14
 17320  1431  0140               	movlb	0	; select bank0
 17321  1432  00A0               	movwf	init@port
 17322  1433  3000               	movlw	0
 17323  1434  00A1               	movwf	init@port+1
 17324  1435  01A2               	clrf	init@pin
 17325  1436  0AA2               	incf	init@pin,f
 17326  1437  0141               	movlb	1	; select bank1
 17327  1438  086B               	movf	_up^(0+128),w
 17328  1439  3190  2049         	fcall	_init
 17329  143B  0008               	return
 17330  143C                     __end_of_BUTTONS_init:	
 17331                           
 17332                           	psect	text62
 17333  1049                     __ptext62:	
 17334 ;; *************** function _init *****************
 17335 ;; Defined at:
 17336 ;;		line 14 in file "buttons.c"
 17337 ;; Parameters:    Size  Location     Type
 17338 ;;  btn             1    wreg     PTR struct .
 17339 ;;		 -> buttons(32), NULL(0), 
 17340 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 17341 ;;		 -> PORTA(1), PORTC(1), 
 17342 ;;  pin             1    2[BANK0 ] unsigned char 
 17343 ;; Auto vars:     Size  Location     Type
 17344 ;;  btn             1    4[BANK0 ] PTR struct .
 17345 ;;		 -> buttons(32), NULL(0), 
 17346 ;; Return value:  Size  Location     Type
 17347 ;;                  1    wreg      void 
 17348 ;; Registers used:
 17349 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17350 ;; Tracked objects:
 17351 ;;		On entry : 0/0
 17352 ;;		On exit  : 0/0
 17353 ;;		Unchanged: 0/0
 17354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17355 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17358 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17359 ;;Total ram usage:        5 bytes
 17360 ;; Hardware stack levels used:    1
 17361 ;; Hardware stack levels required when called:    4
 17362 ;; This function calls:
 17363 ;;		Nothing
 17364 ;; This function is called by:
 17365 ;;		_BUTTONS_init
 17366 ;; This function uses a non-reentrant model
 17367 ;;
 17368                           
 17369                           
 17370                           ;psect for function _init
 17371  1049                     _init:	
 17372                           
 17373                           ;incstack = 0
 17374                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 17375                           ;init@btn stored from wreg
 17376  1049  0140               	movlb	0	; select bank0
 17377  104A  00A4               	movwf	init@btn
 17378                           
 17379                           ;buttons.c: 15:     btn->port = port;
 17380  104B  0824               	movf	init@btn,w
 17381  104C  0086               	movwf	6
 17382  104D  3002               	movlw	2	; select bank4/5
 17383  104E  0087               	movwf	7
 17384  104F  0820               	movf	init@port,w
 17385  1050  3FC0               	movwi [0]fsr1
 17386  1051  0821               	movf	init@port+1,w
 17387  1052  3FC1               	movwi [1]fsr1
 17388                           
 17389                           ;buttons.c: 16:     btn->pin = pin;
 17390  1053  0822               	movf	init@pin,w
 17391  1054  00A3               	movwf	??_init
 17392  1055  0824               	movf	init@btn,w
 17393  1056  3E02               	addlw	2
 17394  1057  0086               	movwf	6
 17395  1058  3002               	movlw	2	; select bank4/5
 17396  1059  0087               	movwf	7
 17397  105A  0823               	movf	??_init,w
 17398  105B  0081               	movwf	1
 17399                           
 17400                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 17401  105C  0824               	movf	init@btn,w
 17402  105D  3E03               	addlw	3
 17403  105E  0086               	movwf	6
 17404  105F  3002               	movlw	2	; select bank4/5
 17405  1060  0087               	movwf	7
 17406  1061  0181               	clrf	1
 17407                           
 17408                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 17409  1062  0824               	movf	init@btn,w
 17410  1063  3E05               	addlw	5
 17411  1064  0086               	movwf	6
 17412  1065  3002               	movlw	2	; select bank4/5
 17413  1066  0087               	movwf	7
 17414  1067  0181               	clrf	1
 17415  1068  0008               	return
 17416  1069                     __end_of_init:	
 17417                           
 17418                           	psect	text63
 17419  1F61                     __ptext63:	
 17420 ;; *************** function _BEAT_init *****************
 17421 ;; Defined at:
 17422 ;;		line 31 in file "beat.c"
 17423 ;; Parameters:    Size  Location     Type
 17424 ;;		None
 17425 ;; Auto vars:     Size  Location     Type
 17426 ;;		None
 17427 ;; Return value:  Size  Location     Type
 17428 ;;                  1    wreg      void 
 17429 ;; Registers used:
 17430 ;;		wreg, status,2, status,0, pclath, cstack
 17431 ;; Tracked objects:
 17432 ;;		On entry : 0/0
 17433 ;;		On exit  : 0/0
 17434 ;;		Unchanged: 0/0
 17435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17440 ;;Total ram usage:        0 bytes
 17441 ;; Hardware stack levels used:    1
 17442 ;; Hardware stack levels required when called:    5
 17443 ;; This function calls:
 17444 ;;		_ADCC_SetADTIInterruptHandler
 17445 ;;		_ADCC_SetUpperThreshold
 17446 ;;		_ADCC_StartConversion
 17447 ;; This function is called by:
 17448 ;;		_main
 17449 ;; This function uses a non-reentrant model
 17450 ;;
 17451                           
 17452                           
 17453                           ;psect for function _BEAT_init
 17454  1F61                     _BEAT_init:	
 17455                           
 17456                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 17457                           
 17458                           ;incstack = 0
 17459                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 17460  1F61  0142               	movlb	2	; select bank2
 17461  1F62  0867               	movf	(_threshold+1)^(0+256),w
 17462  1F63  0140               	movlb	0	; select bank0
 17463  1F64  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 17464  1F65  0142               	movlb	2	; select bank2
 17465  1F66  0866               	movf	_threshold^(0+256),w
 17466  1F67  0140               	movlb	0	; select bank0
 17467  1F68  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 17468  1F69  319E  2619  319F   	fcall	_ADCC_SetUpperThreshold
 17469                           
 17470                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 17471  1F6C  30F9               	movlw	low _adcThresholdHandler
 17472  1F6D  0140               	movlb	0	; select bank0
 17473  1F6E  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 17474  1F6F  301D               	movlw	high _adcThresholdHandler
 17475  1F70  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 17476  1F71  319E  2610  319F   	fcall	_ADCC_SetADTIInterruptHandler
 17477                           
 17478                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 17479  1F74  300F               	movlw	15
 17480  1F75  319E  2622         	fcall	_ADCC_StartConversion
 17481  1F77  0008               	return
 17482  1F78                     __end_of_BEAT_init:	
 17483                           
 17484                           	psect	text64
 17485  1E22                     __ptext64:	
 17486 ;; *************** function _ADCC_StartConversion *****************
 17487 ;; Defined at:
 17488 ;;		line 121 in file "mcc_generated_files/adcc.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;  channel         1    wreg     enum E10867
 17491 ;; Auto vars:     Size  Location     Type
 17492 ;;  channel         1    0[BANK0 ] enum E10867
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  1    wreg      void 
 17495 ;; Registers used:
 17496 ;;		wreg
 17497 ;; Tracked objects:
 17498 ;;		On entry : 0/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17505 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17506 ;;Total ram usage:        1 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; Hardware stack levels required when called:    4
 17509 ;; This function calls:
 17510 ;;		Nothing
 17511 ;; This function is called by:
 17512 ;;		_BEAT_init
 17513 ;; This function uses a non-reentrant model
 17514 ;;
 17515                           
 17516                           
 17517                           ;psect for function _ADCC_StartConversion
 17518  1E22                     _ADCC_StartConversion:	
 17519                           
 17520                           ;incstack = 0
 17521                           ; Regs used in _ADCC_StartConversion: [wreg]
 17522                           ;ADCC_StartConversion@channel stored from wreg
 17523  1E22  0140               	movlb	0	; select bank0
 17524  1E23  00A0               	movwf	ADCC_StartConversion@channel
 17525                           
 17526                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 17527  1E24  0820               	movf	ADCC_StartConversion@channel,w
 17528  1E25  0141               	movlb	1	; select bank1
 17529  1E26  009F               	movwf	31	;volatile
 17530                           
 17531                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 17532  1E27  0142               	movlb	2	; select bank2
 17533  1E28  1791               	bsf	17,7	;volatile
 17534                           
 17535                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 17536  1E29  1411               	bsf	17,0	;volatile
 17537  1E2A  0008               	return
 17538  1E2B                     __end_of_ADCC_StartConversion:	
 17539                           
 17540                           	psect	text65
 17541  1E19                     __ptext65:	
 17542 ;; *************** function _ADCC_SetUpperThreshold *****************
 17543 ;; Defined at:
 17544 ;;		line 251 in file "mcc_generated_files/adcc.c"
 17545 ;; Parameters:    Size  Location     Type
 17546 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 17547 ;; Auto vars:     Size  Location     Type
 17548 ;;		None
 17549 ;; Return value:  Size  Location     Type
 17550 ;;                  1    wreg      void 
 17551 ;; Registers used:
 17552 ;;		wreg, status,2
 17553 ;; Tracked objects:
 17554 ;;		On entry : 0/0
 17555 ;;		On exit  : 0/0
 17556 ;;		Unchanged: 0/0
 17557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17562 ;;Total ram usage:        2 bytes
 17563 ;; Hardware stack levels used:    1
 17564 ;; Hardware stack levels required when called:    4
 17565 ;; This function calls:
 17566 ;;		Nothing
 17567 ;; This function is called by:
 17568 ;;		_BEAT_init
 17569 ;;		_BEAT_task
 17570 ;; This function uses a non-reentrant model
 17571 ;;
 17572                           
 17573                           
 17574                           ;psect for function _ADCC_SetUpperThreshold
 17575  1E19                     _ADCC_SetUpperThreshold:	
 17576                           
 17577                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 17578                           
 17579                           ;incstack = 0
 17580                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 17581  1E19  0140               	movlb	0	; select bank0
 17582  1E1A  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 17583  1E1B  0141               	movlb	1	; select bank1
 17584  1E1C  008F               	movwf	15	;volatile
 17585                           
 17586                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 17587  1E1D  0140               	movlb	0	; select bank0
 17588  1E1E  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 17589  1E1F  0141               	movlb	1	; select bank1
 17590  1E20  008E               	movwf	14	;volatile
 17591  1E21  0008               	return
 17592  1E22                     __end_of_ADCC_SetUpperThreshold:	
 17593                           
 17594                           	psect	text66
 17595  1E10                     __ptext66:	
 17596 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 17597 ;; Defined at:
 17598 ;;		line 317 in file "mcc_generated_files/adcc.c"
 17599 ;; Parameters:    Size  Location     Type
 17600 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 17601 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;		None
 17604 ;; Return value:  Size  Location     Type
 17605 ;;                  1    wreg      void 
 17606 ;; Registers used:
 17607 ;;		wreg
 17608 ;; Tracked objects:
 17609 ;;		On entry : 0/0
 17610 ;;		On exit  : 0/0
 17611 ;;		Unchanged: 0/0
 17612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17616 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17617 ;;Total ram usage:        2 bytes
 17618 ;; Hardware stack levels used:    1
 17619 ;; Hardware stack levels required when called:    4
 17620 ;; This function calls:
 17621 ;;		Nothing
 17622 ;; This function is called by:
 17623 ;;		_ADCC_Initialize
 17624 ;;		_BEAT_init
 17625 ;; This function uses a non-reentrant model
 17626 ;;
 17627                           
 17628                           
 17629                           ;psect for function _ADCC_SetADTIInterruptHandler
 17630  1E10                     _ADCC_SetADTIInterruptHandler:	
 17631                           
 17632                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 17633                           
 17634                           ;incstack = 0
 17635                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 17636  1E10  0140               	movlb	0	; select bank0
 17637  1E11  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 17638  1E12  0142               	movlb	2	; select bank2
 17639  1E13  00EB               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256)
 17640  1E14  0140               	movlb	0	; select bank0
 17641  1E15  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 17642  1E16  0142               	movlb	2	; select bank2
 17643  1E17  00EA               	movwf	_ADCC_ADTI_InterruptHandler^(0+256)
 17644  1E18  0008               	return
 17645  1E19                     __end_of_ADCC_SetADTIInterruptHandler:	
 17646                           
 17647                           	psect	intentry
 17648  0004                     __pintentry:	
 17649 ;; *************** function _INTERRUPT_InterruptManager *****************
 17650 ;; Defined at:
 17651 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17652 ;; Parameters:    Size  Location     Type
 17653 ;;		None
 17654 ;; Auto vars:     Size  Location     Type
 17655 ;;		None
 17656 ;; Return value:  Size  Location     Type
 17657 ;;                  1    wreg      void 
 17658 ;; Registers used:
 17659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17660 ;; Tracked objects:
 17661 ;;		On entry : 0/0
 17662 ;;		On exit  : 0/0
 17663 ;;		Unchanged: 0/0
 17664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17669 ;;Total ram usage:        0 bytes
 17670 ;; Hardware stack levels used:    1
 17671 ;; Hardware stack levels required when called:    3
 17672 ;; This function calls:
 17673 ;;		Absolute function
 17674 ;;		_ADCC_ThresholdISR
 17675 ;;		_DMX_ISR
 17676 ;;		_EUSART1_Receive_ISR
 17677 ;;		_EUSART1_Transmit_ISR
 17678 ;;		_I2C1_BusCollisionISR
 17679 ;;		_I2C1_ISR
 17680 ;;		_TMR0_ISR
 17681 ;; This function is called by:
 17682 ;;		Interrupt level 1
 17683 ;; This function uses a non-reentrant model
 17684 ;;
 17685                           
 17686  0004                     _INTERRUPT_InterruptManager:	
 17687                           
 17688                           ;incstack = 0
 17689  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17690                           
 17691                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17692  0005  3180               	pagesel	$
 17693                           
 17694                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 17695  0006  014E               	movlb	14	; select bank14
 17696  0007  1A96               	btfsc	22,5	;volatile
 17697  0008  1E8C               	btfss	12,5	;volatile
 17698  0009  280E               	goto	i1l280
 17699                           
 17700                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17701  000A  3187  27F1  3180   	fcall	_TMR0_ISR
 17702                           
 17703                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17704  000D  2837               	goto	i1l294
 17705  000E                     i1l280:	
 17706                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 17707                           
 17708  000E  1F0B               	btfss	11,6	;volatile
 17709  000F  2837               	goto	i1l294
 17710                           
 17711                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17712  0010  1899               	btfsc	25,1	;volatile
 17713  0011  1C8F               	btfss	15,1	;volatile
 17714  0012  2817               	goto	i1l283
 17715                           
 17716                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 17717  0013  319D  25F0  3180   	fcall	_I2C1_BusCollisionISR
 17718                           
 17719                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17720  0016  2837               	goto	i1l294
 17721  0017                     i1l283:	
 17722                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17723                           
 17724  0017  1819               	btfsc	25,0	;volatile
 17725  0018  1C0F               	btfss	15,0	;volatile
 17726  0019  281E               	goto	i1l285
 17727                           
 17728                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 17729  001A  318A  22DD  3180   	fcall	_I2C1_ISR
 17730                           
 17731                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17732  001D  2837               	goto	i1l294
 17733  001E                     i1l285:	
 17734                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 17735                           
 17736  001E  1A19               	btfsc	25,4	;volatile
 17737  001F  1E0F               	btfss	15,4	;volatile
 17738  0020  2828               	goto	i1l287
 17739                           
 17740                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 17741  0021  0143               	movlb	3	; select bank3
 17742  0022  0867               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+384),w
 17743  0023  008A               	movwf	10
 17744  0024  0866               	movf	_EUSART1_TxDefaultInterruptHandler^(0+384),w
 17745  0025  000A               	callw
 17746  0026  3180               	pagesel	$
 17747                           
 17748                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17749  0027  2837               	goto	i1l294
 17750  0028                     i1l287:	
 17751                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 17752                           
 17753  0028  1A99               	btfsc	25,5	;volatile
 17754  0029  1E8F               	btfss	15,5	;volatile
 17755  002A  2832               	goto	i1l289
 17756                           
 17757                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 17758  002B  0143               	movlb	3	; select bank3
 17759  002C  0865               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+384),w
 17760  002D  008A               	movwf	10
 17761  002E  0864               	movf	_EUSART1_RxDefaultInterruptHandler^(0+384),w
 17762  002F  000A               	callw
 17763  0030  3180               	pagesel	$
 17764                           
 17765                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17766  0031  2837               	goto	i1l294
 17767  0032                     i1l289:	
 17768                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 17769                           
 17770  0032  1897               	btfsc	23,1	;volatile
 17771  0033  1C8D               	btfss	13,1	;volatile
 17772  0034  2837               	goto	i1l294
 17773                           
 17774                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 17775  0035  319E  269E         	fcall	_ADCC_ThresholdISR
 17776  0037                     i1l294:	
 17777                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17778                           
 17779  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17780  0038  0009               	retfie
 17781  0039                     __end_of_INTERRUPT_InterruptManager:	
 17782                           
 17783                           	psect	text68
 17784  07F1                     __ptext68:	
 17785 ;; *************** function _TMR0_ISR *****************
 17786 ;; Defined at:
 17787 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 17788 ;; Parameters:    Size  Location     Type
 17789 ;;		None
 17790 ;; Auto vars:     Size  Location     Type
 17791 ;;		None
 17792 ;; Return value:  Size  Location     Type
 17793 ;;                  1    wreg      void 
 17794 ;; Registers used:
 17795 ;;		wreg, status,2, status,0, pclath, cstack
 17796 ;; Tracked objects:
 17797 ;;		On entry : 0/0
 17798 ;;		On exit  : 0/0
 17799 ;;		Unchanged: 0/0
 17800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17805 ;;Total ram usage:        0 bytes
 17806 ;; Hardware stack levels used:    1
 17807 ;; Hardware stack levels required when called:    1
 17808 ;; This function calls:
 17809 ;;		Absolute function
 17810 ;;		_CLOCK_timerCallback
 17811 ;;		_TMR0_DefaultInterruptHandler
 17812 ;; This function is called by:
 17813 ;;		_INTERRUPT_InterruptManager
 17814 ;; This function uses a non-reentrant model
 17815 ;;
 17816                           
 17817                           
 17818                           ;psect for function _TMR0_ISR
 17819  07F1                     _TMR0_ISR:	
 17820                           
 17821                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 17822                           
 17823                           ;incstack = 0
 17824                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17825  07F1  014E               	movlb	14	; select bank14
 17826  07F2  128C               	bcf	12,5	;volatile
 17827                           
 17828                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 17829  07F3  0142               	movlb	2	; select bank2
 17830  07F4  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 17831  07F5  046D               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 17832  07F6  1903               	btfsc	3,2
 17833  07F7  0008               	return
 17834                           
 17835                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 17836  07F8  086D               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 17837  07F9  008A               	movwf	10
 17838  07FA  086C               	movf	_TMR0_InterruptHandler^(0+256),w
 17839  07FB  000A               	callw
 17840  07FC  3187               	pagesel	$
 17841  07FD  0008               	return
 17842  07FE                     __end_of_TMR0_ISR:	
 17843                           
 17844                           	psect	text69
 17845  1E0A                     __ptext69:	
 17846 ;; *************** function _CLOCK_timerCallback *****************
 17847 ;; Defined at:
 17848 ;;		line 21 in file "clock.c"
 17849 ;; Parameters:    Size  Location     Type
 17850 ;;		None
 17851 ;; Auto vars:     Size  Location     Type
 17852 ;;		None
 17853 ;; Return value:  Size  Location     Type
 17854 ;;                  1    wreg      void 
 17855 ;; Registers used:
 17856 ;;		wreg
 17857 ;; Tracked objects:
 17858 ;;		On entry : 0/0
 17859 ;;		On exit  : 0/0
 17860 ;;		Unchanged: 0/0
 17861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17866 ;;Total ram usage:        0 bytes
 17867 ;; Hardware stack levels used:    1
 17868 ;; This function calls:
 17869 ;;		Nothing
 17870 ;; This function is called by:
 17871 ;;		_CLOCK_init
 17872 ;;		_TMR0_ISR
 17873 ;; This function uses a non-reentrant model
 17874 ;;
 17875                           
 17876                           
 17877                           ;psect for function _CLOCK_timerCallback
 17878  1E0A                     _CLOCK_timerCallback:	
 17879                           
 17880                           ;clock.c: 22:     currentTime++;
 17881                           
 17882                           ;incstack = 0
 17883                           ; Regs used in _CLOCK_timerCallback: [wreg]
 17884  1E0A  3001               	movlw	1
 17885  1E0B  0142               	movlb	2	; select bank2
 17886  1E0C  07C9               	addwf	_currentTime^(0+256),f
 17887  1E0D  3000               	movlw	0
 17888  1E0E  3DCA               	addwfc	(_currentTime+1)^(0+256),f
 17889  1E0F  0008               	return
 17890  1E10                     __end_of_CLOCK_timerCallback:	
 17891                           
 17892                           	psect	text70
 17893  0003                     __ptext70:	
 17894 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17895 ;; Defined at:
 17896 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 17897 ;; Parameters:    Size  Location     Type
 17898 ;;		None
 17899 ;; Auto vars:     Size  Location     Type
 17900 ;;		None
 17901 ;; Return value:  Size  Location     Type
 17902 ;;                  1    wreg      void 
 17903 ;; Registers used:
 17904 ;;		None
 17905 ;; Tracked objects:
 17906 ;;		On entry : 0/0
 17907 ;;		On exit  : 0/0
 17908 ;;		Unchanged: 0/0
 17909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17914 ;;Total ram usage:        0 bytes
 17915 ;; Hardware stack levels used:    1
 17916 ;; This function calls:
 17917 ;;		Nothing
 17918 ;; This function is called by:
 17919 ;;		_TMR0_Initialize
 17920 ;;		_TMR0_ISR
 17921 ;; This function uses a non-reentrant model
 17922 ;;
 17923                           
 17924                           
 17925                           ;psect for function _TMR0_DefaultInterruptHandler
 17926  0003                     _TMR0_DefaultInterruptHandler:	
 17927                           
 17928                           ;incstack = 0
 17929                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17930  0003  0008               	return
 17931  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 17932                           
 17933                           	psect	text71
 17934  0ADD                     __ptext71:	
 17935 ;; *************** function _I2C1_ISR *****************
 17936 ;; Defined at:
 17937 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 17938 ;; Parameters:    Size  Location     Type
 17939 ;;		None
 17940 ;; Auto vars:     Size  Location     Type
 17941 ;;		None
 17942 ;; Return value:  Size  Location     Type
 17943 ;;                  1    wreg      void 
 17944 ;; Registers used:
 17945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17946 ;; Tracked objects:
 17947 ;;		On entry : 0/0
 17948 ;;		On exit  : 0/0
 17949 ;;		Unchanged: 0/0
 17950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17953 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17954 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17955 ;;Total ram usage:        4 bytes
 17956 ;; Hardware stack levels used:    1
 17957 ;; Hardware stack levels required when called:    1
 17958 ;; This function calls:
 17959 ;;		_I2C1_FunctionComplete
 17960 ;;		_I2C1_Stop
 17961 ;; This function is called by:
 17962 ;;		_INTERRUPT_InterruptManager
 17963 ;; This function uses a non-reentrant model
 17964 ;;
 17965                           
 17966                           
 17967                           ;psect for function _I2C1_ISR
 17968  0ADD                     _I2C1_ISR:	
 17969                           
 17970                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 17971                           
 17972                           ;incstack = 0
 17973                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17974  0ADD  014E               	movlb	14	; select bank14
 17975  0ADE  100F               	bcf	15,0	;volatile
 17976                           
 17977                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 17978  0ADF  0143               	movlb	3	; select bank3
 17979  0AE0  1F90               	btfss	16,7	;volatile
 17980  0AE1  2C0D               	goto	i1l5065
 17981                           
 17982                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 17983  0AE2  1390               	bcf	16,7	;volatile
 17984                           
 17985                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 17986  0AE3  0142               	movlb	2	; select bank2
 17987  0AE4  01DA               	clrf	_i2c1_state^(0+256)
 17988                           
 17989                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 17990  0AE5  0141               	movlb	1	; select bank1
 17991  0AE6  086C               	movf	_p_i2c1_current^(0+128),w
 17992  0AE7  3E02               	addlw	2
 17993  0AE8  0086               	movwf	6
 17994  0AE9  3001               	movlw	1	; select bank2/3
 17995  0AEA  0087               	movwf	7
 17996  0AEB  0801               	movf	1,w
 17997  0AEC  0086               	movwf	6
 17998  0AED  0187               	clrf	7
 17999  0AEE  0181               	clrf	1
 18000  0AEF  0A81               	incf	1,f
 18001                           
 18002                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 18003  0AF0  01EC               	clrf	_p_i2c1_current^(0+128)
 18004  0AF1  0008               	return
 18005  0AF2                     i1l402:	
 18006                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 18007                           
 18008                           
 18009                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 18010  0AF2  18A2               	btfsc	(_i2c1_object^(0+256)+2),1
 18011  0AF3  0008               	return
 18012                           
 18013                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 18014  0AF4  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18015  0AF5  00F2               	movwf	??_I2C1_ISR
 18016  0AF6  0872               	movf	??_I2C1_ISR,w
 18017  0AF7  0141               	movlb	1	; select bank1
 18018  0AF8  00EC               	movwf	_p_i2c1_current^(0+128)
 18019                           
 18020                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 18021  0AF9  0142               	movlb	2	; select bank2
 18022  0AFA  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18023  0AFB  0086               	movwf	6
 18024  0AFC  3001               	movlw	1	; select bank2/3
 18025  0AFD  0087               	movwf	7
 18026  0AFE  0801               	movf	1,w
 18027  0AFF  00F2               	movwf	??_I2C1_ISR
 18028  0B00  0872               	movf	??_I2C1_ISR,w
 18029  0B01  00D9               	movwf	_i2c1_trb_count^(0+256)
 18030                           
 18031                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 18032  0B02  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18033  0B03  0086               	movwf	6
 18034  0B04  3001               	movlw	1	; select bank2/3
 18035  0B05  0087               	movwf	7
 18036  0B06  3001               	movlw	1	; select bank2/3
 18037  0B07  3F41               	moviw [1]fsr1
 18038  0B08  0141               	movlb	1	; select bank1
 18039  0B09  00ED               	movwf	_p_i2c1_trb_current^(0+128)
 18040                           
 18041                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 18042  0B0A  3003               	movlw	3
 18043  0B0B  00F2               	movwf	??_I2C1_ISR
 18044  0B0C  0872               	movf	??_I2C1_ISR,w
 18045  0B0D  0142               	movlb	2	; select bank2
 18046  0B0E  07A1               	addwf	(low ((_i2c1_object| (0+256)+1)))^0,f
 18047                           
 18048                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 18049  0B0F  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18050  0B10  3A60               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 18051  0B11  1D03               	skipz
 18052  0B12  2B17               	goto	i1l4953
 18053                           
 18054                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 18055  0B13  305D               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 18056  0B14  00F2               	movwf	??_I2C1_ISR
 18057  0B15  0872               	movf	??_I2C1_ISR,w
 18058  0B16  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
 18059  0B17                     i1l4953:	
 18060                           
 18061                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 18062  0B17  1022               	bcf	(_i2c1_object^(0+256)+2),0
 18063                           
 18064                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 18065  0B18  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 18066  0B19  0620               	xorwf	_i2c1_object^(0+256),w
 18067  0B1A  1903               	btfsc	3,2
 18068                           
 18069                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 18070  0B1B  14A2               	bsf	(_i2c1_object^(0+256)+2),1
 18071                           
 18072                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 18073                           
 18074                           ;mcc_generated_files/i2c1.c: 290:                 }
 18075  0B1C  0143               	movlb	3	; select bank3
 18076  0B1D  1411               	bsf	17,0	;volatile
 18077  0B1E                     i1l4957:	
 18078                           
 18079                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 18080  0B1E  3002               	movlw	2
 18081  0B1F  00F2               	movwf	??_I2C1_ISR
 18082  0B20  0872               	movf	??_I2C1_ISR,w
 18083  0B21  0142               	movlb	2	; select bank2
 18084  0B22  00DA               	movwf	_i2c1_state^(0+256)
 18085  0B23  0008               	return
 18086  0B24                     i1l407:	
 18087                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 18088                           
 18089  0B24  2BB6               	goto	i1l428
 18090  0B25                     i1l408:	
 18091                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 18092                           
 18093                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 18094                           
 18095                           
 18096                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 18097  0B25  0143               	movlb	3	; select bank3
 18098  0B26  1F11               	btfss	17,6	;volatile
 18099  0B27  2B31               	goto	i1l4965
 18100                           
 18101                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 18102  0B28  3001               	movlw	1
 18103  0B29  00F2               	movwf	??_I2C1_ISR
 18104  0B2A  0872               	movf	??_I2C1_ISR,w
 18105  0B2B  0142               	movlb	2	; select bank2
 18106  0B2C  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18107                           
 18108                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18109  0B2D  3004               	movlw	4
 18110  0B2E  319F  2790         	fcall	_I2C1_Stop
 18111                           
 18112                           ;mcc_generated_files/i2c1.c: 319:             }
 18113  0B30  0008               	return
 18114  0B31                     i1l4965:	
 18115                           
 18116                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 18117  0B31  0879               	movf	I2C1_ISR@i2c_address+1,w
 18118  0B32  00F3               	movwf	??_I2C1_ISR+1
 18119  0B33  0878               	movf	I2C1_ISR@i2c_address,w
 18120  0B34  00F2               	movwf	??_I2C1_ISR
 18121  0B35  36F3               	lsrf	??_I2C1_ISR+1,f
 18122  0B36  0CF2               	rrf	??_I2C1_ISR,f
 18123  0B37  0872               	movf	??_I2C1_ISR,w
 18124  0B38  008C               	movwf	12	;volatile
 18125                           
 18126                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 18127  0B39  1C78               	btfss	I2C1_ISR@i2c_address,0
 18128  0B3A  2B41               	goto	i1l4971
 18129                           
 18130                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 18131  0B3B  300B               	movlw	11
 18132  0B3C  00F2               	movwf	??_I2C1_ISR
 18133  0B3D  0872               	movf	??_I2C1_ISR,w
 18134  0B3E  0142               	movlb	2	; select bank2
 18135  0B3F  00DA               	movwf	_i2c1_state^(0+256)
 18136                           
 18137                           ;mcc_generated_files/i2c1.c: 331:                 }
 18138  0B40  0008               	return
 18139  0B41                     i1l4971:	
 18140                           
 18141                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 18142  0B41  3003               	movlw	3
 18143  0B42  00F2               	movwf	??_I2C1_ISR
 18144  0B43  0872               	movf	??_I2C1_ISR,w
 18145  0B44  0142               	movlb	2	; select bank2
 18146  0B45  00DA               	movwf	_i2c1_state^(0+256)
 18147  0B46  0008               	return
 18148  0B47                     i1l413:	
 18149                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 18150                           
 18151                           
 18152                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 18153  0B47  0143               	movlb	3	; select bank3
 18154  0B48  1F11               	btfss	17,6	;volatile
 18155  0B49  2B53               	goto	i1l414
 18156                           
 18157                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 18158  0B4A  3001               	movlw	1
 18159  0B4B  00F2               	movwf	??_I2C1_ISR
 18160  0B4C  0872               	movf	??_I2C1_ISR,w
 18161  0B4D  0142               	movlb	2	; select bank2
 18162  0B4E  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18163                           
 18164                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18165  0B4F  3004               	movlw	4
 18166  0B50  319F  2790         	fcall	_I2C1_Stop
 18167                           
 18168                           ;mcc_generated_files/i2c1.c: 347:             }
 18169  0B52  0008               	return
 18170  0B53                     i1l414:	
 18171                           ;mcc_generated_files/i2c1.c: 348:             else
 18172                           
 18173                           
 18174                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 18175  0B53  1491               	bsf	17,1	;volatile
 18176                           
 18177                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 18178  0B54  0879               	movf	I2C1_ISR@i2c_address+1,w
 18179  0B55  00F3               	movwf	??_I2C1_ISR+1
 18180  0B56  0878               	movf	I2C1_ISR@i2c_address,w
 18181  0B57  00F2               	movwf	??_I2C1_ISR
 18182  0B58  0873               	movf	??_I2C1_ISR+1,w
 18183  0B59  00F2               	movwf	??_I2C1_ISR
 18184  0B5A  01F3               	clrf	??_I2C1_ISR+1
 18185  0B5B  3006               	movlw	6
 18186  0B5C  0572               	andwf	??_I2C1_ISR,w
 18187  0B5D  00F4               	movwf	??_I2C1_ISR+2
 18188  0B5E  3000               	movlw	0
 18189  0B5F  0573               	andwf	??_I2C1_ISR+1,w
 18190  0B60  00F5               	movwf	??_I2C1_ISR+3
 18191  0B61  30F0               	movlw	240
 18192  0B62  0474               	iorwf	??_I2C1_ISR+2,w
 18193  0B63  00F8               	movwf	I2C1_ISR@i2c_address
 18194  0B64  3000               	movlw	0
 18195  0B65  0475               	iorwf	??_I2C1_ISR+3,w
 18196  0B66  00F9               	movwf	I2C1_ISR@i2c_address+1
 18197                           
 18198                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 18199  0B67  1478               	bsf	I2C1_ISR@i2c_address,0
 18200                           
 18201                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 18202  0B68  0142               	movlb	2	; select bank2
 18203  0B69  01D6               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+256)
 18204  0B6A  0AD6               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+256),f
 18205  0B6B  2B1E               	goto	i1l4957
 18206  0B6C                     i1l4985:	
 18207                           
 18208                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 18209  0B6C  0356               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+256),w
 18210  0B6D  1903               	btfsc	3,2
 18211  0B6E  2B89               	goto	i1l5005
 18212                           
 18213                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 18214  0B6F  0141               	movlb	1	; select bank1
 18215  0B70  086D               	movf	_p_i2c1_trb_current^(0+128),w
 18216  0B71  0086               	movwf	6
 18217  0B72  3001               	movlw	1	; select bank2/3
 18218  0B73  0087               	movwf	7
 18219  0B74  3F40               	moviw [0]fsr1
 18220  0B75  00F8               	movwf	I2C1_ISR@i2c_address
 18221  0B76  3F41               	moviw [1]fsr1
 18222  0B77  00F9               	movwf	I2C1_ISR@i2c_address+1
 18223                           
 18224                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 18225  0B78  086D               	movf	_p_i2c1_trb_current^(0+128),w
 18226  0B79  0086               	movwf	6
 18227  0B7A  3001               	movlw	1	; select bank2/3
 18228  0B7B  0087               	movwf	7
 18229  0B7C  3001               	movlw	1	; select bank2/3
 18230  0B7D  3F43               	moviw [3]fsr1
 18231  0B7E  0142               	movlb	2	; select bank2
 18232  0B7F  00D8               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+256)
 18233                           
 18234                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 18235  0B80  0141               	movlb	1	; select bank1
 18236  0B81  086D               	movf	_p_i2c1_trb_current^(0+128),w
 18237  0B82  0086               	movwf	6
 18238  0B83  3001               	movlw	1	; select bank2/3
 18239  0B84  0087               	movwf	7
 18240  0B85  3001               	movlw	1	; select bank2/3
 18241  0B86  3F42               	moviw [2]fsr1
 18242  0B87  0142               	movlb	2	; select bank2
 18243  0B88  00D7               	movwf	I2C1_ISR@i2c_bytes_left^(0+256)
 18244  0B89                     i1l5005:	
 18245                           
 18246                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 18247  0B89  0878               	movf	I2C1_ISR@i2c_address,w
 18248  0B8A  0143               	movlb	3	; select bank3
 18249  0B8B  008C               	movwf	12	;volatile
 18250                           
 18251                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 18252  0B8C  1C78               	btfss	I2C1_ISR@i2c_address,0
 18253  0B8D  2B41               	goto	i1l4971
 18254                           
 18255                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 18256  0B8E  3005               	movlw	5
 18257  0B8F  00F2               	movwf	??_I2C1_ISR
 18258  0B90  0872               	movf	??_I2C1_ISR,w
 18259  0B91  0142               	movlb	2	; select bank2
 18260  0B92  00DA               	movwf	_i2c1_state^(0+256)
 18261                           
 18262                           ;mcc_generated_files/i2c1.c: 419:                 }
 18263  0B93  0008               	return
 18264  0B94                     i1l424:	
 18265                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 18266                           
 18267                           
 18268                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 18269  0B94  0143               	movlb	3	; select bank3
 18270  0B95  1F11               	btfss	17,6	;volatile
 18271  0B96  2BA2               	goto	i1l5019
 18272                           
 18273                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 18274  0B97  3001               	movlw	1
 18275  0B98  00F2               	movwf	??_I2C1_ISR
 18276  0B99  0872               	movf	??_I2C1_ISR,w
 18277  0B9A  0142               	movlb	2	; select bank2
 18278  0B9B  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18279                           
 18280                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 18281  0B9C  0143               	movlb	3	; select bank3
 18282  0B9D  1311               	bcf	17,6	;volatile
 18283                           
 18284                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 18285  0B9E  3005               	movlw	5
 18286  0B9F  319F  2790         	fcall	_I2C1_Stop
 18287                           
 18288                           ;mcc_generated_files/i2c1.c: 442:             }
 18289  0BA1  0008               	return
 18290  0BA2                     i1l5019:	
 18291                           
 18292                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 18293  0BA2  3001               	movlw	1
 18294  0BA3  0142               	movlb	2	; select bank2
 18295  0BA4  02D7               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 18296  0BA5  0A57               	incf	I2C1_ISR@i2c_bytes_left^(0+256),w
 18297  0BA6  1D03               	btfss	3,2
 18298  0BA7  2BB9               	goto	i1l5027
 18299                           
 18300                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 18301  0BA8  3004               	movlw	4
 18302  0BA9  00F2               	movwf	??_I2C1_ISR
 18303  0BAA  0872               	movf	??_I2C1_ISR,w
 18304  0BAB  0141               	movlb	1	; select bank1
 18305  0BAC  07ED               	addwf	_p_i2c1_trb_current^(0+128),f
 18306                           
 18307                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 18308  0BAD  3001               	movlw	1
 18309  0BAE  0142               	movlb	2	; select bank2
 18310  0BAF  02D9               	subwf	_i2c1_trb_count^(0+256),f
 18311  0BB0  1D03               	btfss	3,2
 18312  0BB1  2BB6               	goto	i1l428
 18313                           
 18314                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18315  0BB2  3000               	movlw	0
 18316  0BB3  319F  2790         	fcall	_I2C1_Stop
 18317                           
 18318                           ;mcc_generated_files/i2c1.c: 457:                     }
 18319  0BB5  0008               	return
 18320  0BB6                     i1l428:	
 18321                           ;mcc_generated_files/i2c1.c: 458:                     else
 18322                           
 18323                           
 18324                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 18325  0BB6  0143               	movlb	3	; select bank3
 18326  0BB7  1491               	bsf	17,1	;volatile
 18327  0BB8  2B1E               	goto	i1l4957
 18328  0BB9                     i1l5027:	
 18329                           
 18330                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 18331  0BB9  0858               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 18332  0BBA  0086               	movwf	6
 18333  0BBB  0187               	clrf	7
 18334  0BBC  0801               	movf	1,w
 18335  0BBD  0143               	movlb	3	; select bank3
 18336  0BBE  008C               	movwf	12	;volatile
 18337  0BBF  3001               	movlw	1
 18338  0BC0  00F2               	movwf	??_I2C1_ISR
 18339  0BC1  0872               	movf	??_I2C1_ISR,w
 18340  0BC2  0142               	movlb	2	; select bank2
 18341  0BC3  07D8               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 18342  0BC4  0008               	return
 18343  0BC5                     i1l431:	
 18344                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 18345                           
 18346                           
 18347                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 18348  0BC5  0143               	movlb	3	; select bank3
 18349  0BC6  1F11               	btfss	17,6	;volatile
 18350  0BC7  2BD3               	goto	i1l432
 18351                           
 18352                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 18353  0BC8  3001               	movlw	1
 18354  0BC9  00F2               	movwf	??_I2C1_ISR
 18355  0BCA  0872               	movf	??_I2C1_ISR,w
 18356  0BCB  0142               	movlb	2	; select bank2
 18357  0BCC  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18358                           
 18359                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 18360  0BCD  3004               	movlw	4
 18361  0BCE  319F  2790         	fcall	_I2C1_Stop
 18362                           
 18363                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 18364  0BD0  0143               	movlb	3	; select bank3
 18365  0BD1  1311               	bcf	17,6	;volatile
 18366                           
 18367                           ;mcc_generated_files/i2c1.c: 495:             }
 18368  0BD2  0008               	return
 18369  0BD3                     i1l432:	
 18370                           ;mcc_generated_files/i2c1.c: 496:             else
 18371                           
 18372                           
 18373                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 18374  0BD3  1591               	bsf	17,3	;volatile
 18375                           
 18376                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 18377  0BD4  3008               	movlw	8
 18378  0BD5  00F2               	movwf	??_I2C1_ISR
 18379  0BD6  0872               	movf	??_I2C1_ISR,w
 18380  0BD7  0142               	movlb	2	; select bank2
 18381  0BD8  00DA               	movwf	_i2c1_state^(0+256)
 18382  0BD9  0008               	return
 18383  0BDA                     i1l5039:	
 18384                           
 18385                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 18386  0BDA  3008               	movlw	8
 18387  0BDB  00F2               	movwf	??_I2C1_ISR
 18388  0BDC  0872               	movf	??_I2C1_ISR,w
 18389  0BDD  00DA               	movwf	_i2c1_state^(0+256)
 18390                           
 18391                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 18392  0BDE  0143               	movlb	3	; select bank3
 18393  0BDF  1591               	bsf	17,3	;volatile
 18394                           
 18395                           ;mcc_generated_files/i2c1.c: 513:             break;
 18396  0BE0  0008               	return
 18397  0BE1                     i1l5043:	
 18398                           
 18399                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 18400  0BE1  0143               	movlb	3	; select bank3
 18401  0BE2  080C               	movf	12,w	;volatile
 18402  0BE3  00F2               	movwf	??_I2C1_ISR
 18403  0BE4  0142               	movlb	2	; select bank2
 18404  0BE5  0858               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 18405  0BE6  0086               	movwf	6
 18406  0BE7  0187               	clrf	7
 18407  0BE8  0872               	movf	??_I2C1_ISR,w
 18408  0BE9  0081               	movwf	1
 18409  0BEA  3001               	movlw	1
 18410  0BEB  00F2               	movwf	??_I2C1_ISR
 18411  0BEC  0872               	movf	??_I2C1_ISR,w
 18412  0BED  07D8               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 18413                           
 18414                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 18415  0BEE  3001               	movlw	1
 18416  0BEF  02D7               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 18417  0BF0  1903               	btfsc	3,2
 18418  0BF1  2BFA               	goto	i1l436
 18419                           
 18420                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 18421  0BF2  0143               	movlb	3	; select bank3
 18422  0BF3  1291               	bcf	17,5	;volatile
 18423                           
 18424                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 18425  0BF4  3006               	movlw	6
 18426  0BF5  00F2               	movwf	??_I2C1_ISR
 18427  0BF6  0872               	movf	??_I2C1_ISR,w
 18428  0BF7  0142               	movlb	2	; select bank2
 18429  0BF8  00DA               	movwf	_i2c1_state^(0+256)
 18430                           
 18431                           ;mcc_generated_files/i2c1.c: 532:             }
 18432  0BF9  2BFE               	goto	i1l5055
 18433  0BFA                     i1l436:	
 18434                           ;mcc_generated_files/i2c1.c: 533:             else
 18435                           
 18436                           
 18437                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 18438  0BFA  0143               	movlb	3	; select bank3
 18439  0BFB  1691               	bsf	17,5	;volatile
 18440                           
 18441                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 18442  0BFC  319E  26BB         	fcall	_I2C1_FunctionComplete
 18443  0BFE                     i1l5055:	
 18444                           
 18445                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 18446  0BFE  0143               	movlb	3	; select bank3
 18447  0BFF  1611               	bsf	17,4	;volatile
 18448                           
 18449                           ;mcc_generated_files/i2c1.c: 545:             break;
 18450  0C00  0008               	return
 18451  0C01                     i1l5057:	
 18452                           
 18453                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 18454  0C01  3000               	movlw	0
 18455  0C02  319F  2790         	fcall	_I2C1_Stop
 18456                           
 18457                           ;mcc_generated_files/i2c1.c: 552:             break;
 18458  0C04  0008               	return
 18459  0C05                     i1l5059:	
 18460                           
 18461                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 18462  0C05  3001               	movlw	1
 18463  0C06  00F2               	movwf	??_I2C1_ISR
 18464  0C07  0872               	movf	??_I2C1_ISR,w
 18465  0C08  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 18466                           
 18467                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 18468  0C09  3006               	movlw	6
 18469  0C0A  319F  2790         	fcall	_I2C1_Stop
 18470                           
 18471                           ;mcc_generated_files/i2c1.c: 560:             break;
 18472  0C0C  0008               	return
 18473  0C0D                     i1l5065:	
 18474  0C0D  0142               	movlb	2	; select bank2
 18475  0C0E  085A               	movf	_i2c1_state^(0+256),w
 18476  0C0F  00F2               	movwf	??_I2C1_ISR
 18477  0C10  01F3               	clrf	??_I2C1_ISR+1
 18478                           
 18479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18480                           ; Switch size 1, requested type "simple"
 18481                           ; Number of cases is 1, Range of values is 0 to 0
 18482                           ; switch strategies available:
 18483                           ; Name         Instructions Cycles
 18484                           ; simple_byte            4     3 (average)
 18485                           ; direct_byte            8     6 (fixed)
 18486                           ; jumptable            260     6 (fixed)
 18487                           ;	Chosen strategy is simple_byte
 18488  0C11  0873               	movf	??_I2C1_ISR+1,w
 18489  0C12  3A00               	xorlw	0	; case 0
 18490  0C13  1903               	skipnz
 18491  0C14  2C16               	goto	i1l6403
 18492  0C15  2C05               	goto	i1l5059
 18493  0C16                     i1l6403:	
 18494                           
 18495                           ; Switch size 1, requested type "simple"
 18496                           ; Number of cases is 11, Range of values is 0 to 11
 18497                           ; switch strategies available:
 18498                           ; Name         Instructions Cycles
 18499                           ; direct_byte           30     6 (fixed)
 18500                           ; simple_byte           34    18 (average)
 18501                           ; jumptable            260     6 (fixed)
 18502                           ;	Chosen strategy is simple_byte
 18503  0C16  0872               	movf	??_I2C1_ISR,w
 18504  0C17  3A00               	xorlw	0	; case 0
 18505  0C18  1903               	skipnz
 18506  0C19  2AF2               	goto	i1l402
 18507  0C1A  3A01               	xorlw	1	; case 1
 18508  0C1B  1903               	skipnz
 18509  0C1C  2B24               	goto	i1l407
 18510  0C1D  3A03               	xorlw	3	; case 2
 18511  0C1E  1903               	skipnz
 18512  0C1F  2B6C               	goto	i1l4985
 18513  0C20  3A01               	xorlw	1	; case 3
 18514  0C21  1903               	skipnz
 18515  0C22  2B94               	goto	i1l424
 18516  0C23  3A07               	xorlw	7	; case 4
 18517  0C24  1903               	skipnz
 18518  0C25  2C01               	goto	i1l5057
 18519  0C26  3A01               	xorlw	1	; case 5
 18520  0C27  1903               	skipnz
 18521  0C28  2BC5               	goto	i1l431
 18522  0C29  3A03               	xorlw	3	; case 6
 18523  0C2A  1903               	skipnz
 18524  0C2B  2BDA               	goto	i1l5039
 18525  0C2C  3A01               	xorlw	1	; case 7
 18526  0C2D  1903               	skipnz
 18527  0C2E  2C01               	goto	i1l5057
 18528  0C2F  3A0F               	xorlw	15	; case 8
 18529  0C30  1903               	skipnz
 18530  0C31  2BE1               	goto	i1l5043
 18531  0C32  3A02               	xorlw	2	; case 10
 18532  0C33  1903               	skipnz
 18533  0C34  2B25               	goto	i1l408
 18534  0C35  3A01               	xorlw	1	; case 11
 18535  0C36  1903               	skipnz
 18536  0C37  2B47               	goto	i1l413
 18537  0C38  2C05               	goto	i1l5059
 18538  0C39  0008               	return
 18539  0C3A                     __end_of_I2C1_ISR:	
 18540                           
 18541                           	psect	text72
 18542  1F90                     __ptext72:	
 18543 ;; *************** function _I2C1_Stop *****************
 18544 ;; Defined at:
 18545 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 18546 ;; Parameters:    Size  Location     Type
 18547 ;;  completion_c    1    wreg     enum E10866
 18548 ;; Auto vars:     Size  Location     Type
 18549 ;;  completion_c    1    1[COMMON] enum E10866
 18550 ;; Return value:  Size  Location     Type
 18551 ;;                  1    wreg      void 
 18552 ;; Registers used:
 18553 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18554 ;; Tracked objects:
 18555 ;;		On entry : 0/0
 18556 ;;		On exit  : 0/0
 18557 ;;		Unchanged: 0/0
 18558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18563 ;;Total ram usage:        2 bytes
 18564 ;; Hardware stack levels used:    1
 18565 ;; This function calls:
 18566 ;;		Nothing
 18567 ;; This function is called by:
 18568 ;;		_I2C1_ISR
 18569 ;; This function uses a non-reentrant model
 18570 ;;
 18571                           
 18572                           
 18573                           ;psect for function _I2C1_Stop
 18574  1F90                     _I2C1_Stop:	
 18575                           
 18576                           ;incstack = 0
 18577                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 18578                           ;I2C1_Stop@completion_code stored from wreg
 18579  1F90  00F1               	movwf	I2C1_Stop@completion_code
 18580                           
 18581                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 18582  1F91  0143               	movlb	3	; select bank3
 18583  1F92  1511               	bsf	17,2	;volatile
 18584                           
 18585                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 18586  1F93  0141               	movlb	1	; select bank1
 18587  1F94  086C               	movf	_p_i2c1_current^(0+128),w
 18588  1F95  3E02               	addlw	2
 18589  1F96  0086               	movwf	6
 18590  1F97  3001               	movlw	1	; select bank2/3
 18591  1F98  0087               	movwf	7
 18592  1F99  0801               	movf	1,w
 18593  1F9A  1903               	btfsc	3,2
 18594  1F9B  2FA8               	goto	i1l4699
 18595                           
 18596                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 18597  1F9C  0871               	movf	I2C1_Stop@completion_code,w
 18598  1F9D  00F0               	movwf	??_I2C1_Stop
 18599  1F9E  086C               	movf	_p_i2c1_current^(0+128),w
 18600  1F9F  3E02               	addlw	2
 18601  1FA0  0086               	movwf	6
 18602  1FA1  3001               	movlw	1	; select bank2/3
 18603  1FA2  0087               	movwf	7
 18604  1FA3  0801               	movf	1,w
 18605  1FA4  0086               	movwf	6
 18606  1FA5  0187               	clrf	7
 18607  1FA6  0870               	movf	??_I2C1_Stop,w
 18608  1FA7  0081               	movwf	1
 18609  1FA8                     i1l4699:	
 18610                           
 18611                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 18612  1FA8  0142               	movlb	2	; select bank2
 18613  1FA9  01DA               	clrf	_i2c1_state^(0+256)
 18614  1FAA  0008               	return
 18615  1FAB                     __end_of_I2C1_Stop:	
 18616                           
 18617                           	psect	text73
 18618  1EBB                     __ptext73:	
 18619 ;; *************** function _I2C1_FunctionComplete *****************
 18620 ;; Defined at:
 18621 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 18622 ;; Parameters:    Size  Location     Type
 18623 ;;		None
 18624 ;; Auto vars:     Size  Location     Type
 18625 ;;		None
 18626 ;; Return value:  Size  Location     Type
 18627 ;;                  1    wreg      void 
 18628 ;; Registers used:
 18629 ;;		wreg, status,2, status,0
 18630 ;; Tracked objects:
 18631 ;;		On entry : 0/0
 18632 ;;		On exit  : 0/0
 18633 ;;		Unchanged: 0/0
 18634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18639 ;;Total ram usage:        1 bytes
 18640 ;; Hardware stack levels used:    1
 18641 ;; This function calls:
 18642 ;;		Nothing
 18643 ;; This function is called by:
 18644 ;;		_I2C1_ISR
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           
 18648                           
 18649                           ;psect for function _I2C1_FunctionComplete
 18650  1EBB                     _I2C1_FunctionComplete:	
 18651                           
 18652                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 18653                           
 18654                           ;incstack = 0
 18655                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 18656  1EBB  3004               	movlw	4
 18657  1EBC  00F0               	movwf	??_I2C1_FunctionComplete
 18658  1EBD  0870               	movf	??_I2C1_FunctionComplete,w
 18659  1EBE  0141               	movlb	1	; select bank1
 18660  1EBF  07ED               	addwf	_p_i2c1_trb_current^(0+128),f
 18661                           
 18662                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 18663  1EC0  3001               	movlw	1
 18664  1EC1  0142               	movlb	2	; select bank2
 18665  1EC2  02D9               	subwf	_i2c1_trb_count^(0+256),f
 18666  1EC3  1D03               	btfss	3,2
 18667  1EC4  2ECA               	goto	i1l443
 18668                           
 18669                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 18670  1EC5  3004               	movlw	4
 18671  1EC6  00F0               	movwf	??_I2C1_FunctionComplete
 18672  1EC7  0870               	movf	??_I2C1_FunctionComplete,w
 18673  1EC8  00DA               	movwf	_i2c1_state^(0+256)
 18674                           
 18675                           ;mcc_generated_files/i2c1.c: 575:     }
 18676  1EC9  0008               	return
 18677  1ECA                     i1l443:	
 18678                           ;mcc_generated_files/i2c1.c: 576:     else
 18679                           
 18680                           
 18681                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 18682  1ECA  01DA               	clrf	_i2c1_state^(0+256)
 18683  1ECB  0ADA               	incf	_i2c1_state^(0+256),f
 18684  1ECC  0008               	return
 18685  1ECD                     __end_of_I2C1_FunctionComplete:	
 18686                           
 18687                           	psect	text74
 18688  1DF0                     __ptext74:	
 18689 ;; *************** function _I2C1_BusCollisionISR *****************
 18690 ;; Defined at:
 18691 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 18692 ;; Parameters:    Size  Location     Type
 18693 ;;		None
 18694 ;; Auto vars:     Size  Location     Type
 18695 ;;		None
 18696 ;; Return value:  Size  Location     Type
 18697 ;;                  1    wreg      void 
 18698 ;; Registers used:
 18699 ;;		None
 18700 ;; Tracked objects:
 18701 ;;		On entry : 0/0
 18702 ;;		On exit  : 0/0
 18703 ;;		Unchanged: 0/0
 18704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18709 ;;Total ram usage:        0 bytes
 18710 ;; Hardware stack levels used:    1
 18711 ;; This function calls:
 18712 ;;		Nothing
 18713 ;; This function is called by:
 18714 ;;		_INTERRUPT_InterruptManager
 18715 ;; This function uses a non-reentrant model
 18716 ;;
 18717                           
 18718                           
 18719                           ;psect for function _I2C1_BusCollisionISR
 18720  1DF0                     _I2C1_BusCollisionISR:	
 18721                           
 18722                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 18723                           
 18724                           ;incstack = 0
 18725                           ; Regs used in _I2C1_BusCollisionISR: []
 18726  1DF0  014E               	movlb	14	; select bank14
 18727  1DF1  108F               	bcf	15,1	;volatile
 18728  1DF2  0008               	return
 18729  1DF3                     __end_of_I2C1_BusCollisionISR:	
 18730                           
 18731                           	psect	text75
 18732  1029                     __ptext75:	
 18733 ;; *************** function _EUSART1_Transmit_ISR *****************
 18734 ;; Defined at:
 18735 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 18736 ;; Parameters:    Size  Location     Type
 18737 ;;		None
 18738 ;; Auto vars:     Size  Location     Type
 18739 ;;		None
 18740 ;; Return value:  Size  Location     Type
 18741 ;;                  1    wreg      void 
 18742 ;; Registers used:
 18743 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18744 ;; Tracked objects:
 18745 ;;		On entry : 0/0
 18746 ;;		On exit  : 0/0
 18747 ;;		Unchanged: 0/0
 18748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18753 ;;Total ram usage:        1 bytes
 18754 ;; Hardware stack levels used:    1
 18755 ;; This function calls:
 18756 ;;		Nothing
 18757 ;; This function is called by:
 18758 ;;		_EUSART1_Initialize
 18759 ;;		_INTERRUPT_InterruptManager
 18760 ;; This function uses a non-reentrant model
 18761 ;;
 18762                           
 18763                           
 18764                           ;psect for function _EUSART1_Transmit_ISR
 18765  1029                     _EUSART1_Transmit_ISR:	
 18766                           
 18767                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 18768                           
 18769                           ;incstack = 0
 18770                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18771  1029  3008               	movlw	8
 18772  102A  0142               	movlb	2	; select bank2
 18773  102B  026E               	subwf	_eusart1TxBufferRemaining^(0+256),w	;volatile
 18774  102C  1803               	skipnc
 18775  102D  2846               	goto	i1l106
 18776                           
 18777                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 18778  102E  0141               	movlb	1	; select bank1
 18779  102F  086E               	movf	_eusart1TxTail^(0+128),w
 18780  1030  3EBA               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
 18781  1031  0086               	movwf	6
 18782  1032  3001               	movlw	1	; select bank3/4
 18783  1033  0087               	movwf	7
 18784  1034  0801               	movf	1,w
 18785  1035  0142               	movlb	2	; select bank2
 18786  1036  009A               	movwf	26	;volatile
 18787  1037  3001               	movlw	1
 18788  1038  00F0               	movwf	??_EUSART1_Transmit_ISR
 18789  1039  0870               	movf	??_EUSART1_Transmit_ISR,w
 18790  103A  0141               	movlb	1	; select bank1
 18791  103B  07EE               	addwf	_eusart1TxTail^(0+128),f	;volatile
 18792                           
 18793                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 18794  103C  3008               	movlw	8
 18795  103D  026E               	subwf	_eusart1TxTail^(0+128),w	;volatile
 18796  103E  1803               	btfsc	3,0
 18797                           
 18798                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 18799  103F  01EE               	clrf	_eusart1TxTail^(0+128)	;volatile
 18800                           
 18801                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 18802  1040  3001               	movlw	1
 18803  1041  00F0               	movwf	??_EUSART1_Transmit_ISR
 18804  1042  0870               	movf	??_EUSART1_Transmit_ISR,w
 18805  1043  0142               	movlb	2	; select bank2
 18806  1044  07EE               	addwf	_eusart1TxBufferRemaining^(0+256),f	;volatile
 18807                           
 18808                           ;mcc_generated_files/eusart1.c: 206:     }
 18809  1045  0008               	return
 18810  1046                     i1l106:	
 18811                           ;mcc_generated_files/eusart1.c: 207:     else
 18812                           
 18813                           
 18814                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 18815  1046  014E               	movlb	14	; select bank14
 18816  1047  1219               	bcf	25,4	;volatile
 18817  1048  0008               	return
 18818  1049                     __end_of_EUSART1_Transmit_ISR:	
 18819                           
 18820                           	psect	text76
 18821  10CD                     __ptext76:	
 18822 ;; *************** function _DMX_ISR *****************
 18823 ;; Defined at:
 18824 ;;		line 13 in file "dmx.c"
 18825 ;; Parameters:    Size  Location     Type
 18826 ;;		None
 18827 ;; Auto vars:     Size  Location     Type
 18828 ;;		None
 18829 ;; Return value:  Size  Location     Type
 18830 ;;                  1    wreg      void 
 18831 ;; Registers used:
 18832 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18833 ;; Tracked objects:
 18834 ;;		On entry : 0/0
 18835 ;;		On exit  : 0/0
 18836 ;;		Unchanged: 0/0
 18837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18840 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18841 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18842 ;;Total ram usage:        4 bytes
 18843 ;; Hardware stack levels used:    1
 18844 ;; This function calls:
 18845 ;;		Nothing
 18846 ;; This function is called by:
 18847 ;;		_main
 18848 ;;		_INTERRUPT_InterruptManager
 18849 ;; This function uses a non-reentrant model
 18850 ;;
 18851                           
 18852                           
 18853                           ;psect for function _DMX_ISR
 18854  10CD                     _DMX_ISR:	
 18855                           
 18856                           ;dmx.c: 14:         LATB6 = 1;
 18857                           
 18858                           ;incstack = 0
 18859                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 18860  10CD  0140               	movlb	0	; select bank0
 18861  10CE  1719               	bsf	25,6	;volatile
 18862                           
 18863                           ;dmx.c: 15:         LATB6 = 0;
 18864  10CF  1319               	bcf	25,6	;volatile
 18865                           
 18866                           ;dmx.c: 16:     if (RC1STAbits.FERR) {
 18867  10D0  0142               	movlb	2	; select bank2
 18868  10D1  1D1D               	btfss	29,2	;volatile
 18869  10D2  28D8               	goto	i1l5207
 18870                           
 18871                           ;dmx.c: 18:         dmxPointer = 0;
 18872  10D3  01BB               	clrf	_dmxPointer^(0+256)
 18873  10D4  01BC               	clrf	(_dmxPointer+1)^(0+256)
 18874                           
 18875                           ;dmx.c: 19:         offCheck = 1;
 18876  10D5  01CE               	clrf	_offCheck^(0+256)
 18877  10D6  0ACE               	incf	_offCheck^(0+256),f
 18878                           
 18879                           ;dmx.c: 20:     } else {
 18880  10D7  28DC               	goto	i1l5209
 18881  10D8                     i1l5207:	
 18882                           
 18883                           ;dmx.c: 21:         dmxPointer++;
 18884  10D8  3001               	movlw	1
 18885  10D9  07BB               	addwf	_dmxPointer^(0+256),f
 18886  10DA  3000               	movlw	0
 18887  10DB  3DBC               	addwfc	(_dmxPointer+1)^(0+256),f
 18888  10DC                     i1l5209:	
 18889                           
 18890                           ;dmx.c: 23:     dmxData[dmxPointer] = RC1REG;
 18891  10DC  30EF               	movlw	239
 18892  10DD  00F0               	movwf	??_DMX_ISR
 18893  10DE  3025               	movlw	37
 18894  10DF  00F1               	movwf	??_DMX_ISR+1
 18895  10E0  083B               	movf	_dmxPointer^(0+256),w
 18896  10E1  0770               	addwf	??_DMX_ISR,w
 18897  10E2  00F2               	movwf	??_DMX_ISR+2
 18898  10E3  083C               	movf	(_dmxPointer+1)^(0+256),w
 18899  10E4  3D71               	addwfc	??_DMX_ISR+1,w
 18900  10E5  00F3               	movwf	??_DMX_ISR+3
 18901  10E6  0872               	movf	??_DMX_ISR+2,w
 18902  10E7  0086               	movwf	6
 18903  10E8  0873               	movf	??_DMX_ISR+3,w
 18904  10E9  0087               	movwf	7
 18905  10EA  0819               	movf	25,w	;volatile
 18906  10EB  0081               	movwf	1
 18907                           
 18908                           ;dmx.c: 25:     if (RC1STAbits.OERR) {
 18909  10EC  1C9D               	btfss	29,1	;volatile
 18910  10ED  0008               	return
 18911                           
 18912                           ;dmx.c: 26:         RC1STAbits.CREN = 0;
 18913  10EE  121D               	bcf	29,4	;volatile
 18914                           
 18915                           ;dmx.c: 27:         RC1STAbits.CREN = 1;
 18916  10EF  161D               	bsf	29,4	;volatile
 18917  10F0  0008               	return
 18918  10F1                     __end_of_DMX_ISR:	
 18919                           
 18920                           	psect	text77
 18921  1280                     __ptext77:	
 18922 ;; *************** function _EUSART1_Receive_ISR *****************
 18923 ;; Defined at:
 18924 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 18925 ;; Parameters:    Size  Location     Type
 18926 ;;		None
 18927 ;; Auto vars:     Size  Location     Type
 18928 ;;		None
 18929 ;; Return value:  Size  Location     Type
 18930 ;;                  1    wreg      void 
 18931 ;; Registers used:
 18932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18933 ;; Tracked objects:
 18934 ;;		On entry : 0/0
 18935 ;;		On exit  : 0/0
 18936 ;;		Unchanged: 0/0
 18937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18942 ;;Total ram usage:        0 bytes
 18943 ;; Hardware stack levels used:    1
 18944 ;; Hardware stack levels required when called:    2
 18945 ;; This function calls:
 18946 ;;		Absolute function
 18947 ;;		_EUSART1_DefaultErrorHandler
 18948 ;;		_EUSART1_DefaultFramingErrorHandler
 18949 ;;		_EUSART1_DefaultOverrunErrorHandler
 18950 ;;		_EUSART1_RxDataHandler
 18951 ;; This function is called by:
 18952 ;;		_EUSART1_Initialize
 18953 ;;		_INTERRUPT_InterruptManager
 18954 ;; This function uses a non-reentrant model
 18955 ;;
 18956                           
 18957                           
 18958                           ;psect for function _EUSART1_Receive_ISR
 18959  1280                     _EUSART1_Receive_ISR:	
 18960                           
 18961                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 18962                           
 18963                           ;incstack = 0
 18964                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18965  1280  0877               	movf	_eusart1RxHead,w	;volatile
 18966  1281  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18967  1282  0086               	movwf	6
 18968  1283  3001               	movlw	1	; select bank3/4
 18969  1284  0087               	movwf	7
 18970  1285  0181               	clrf	1
 18971                           
 18972                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 18973  1286  0142               	movlb	2	; select bank2
 18974  1287  1D1D               	btfss	29,2	;volatile
 18975  1288  2A95               	goto	i1l4895
 18976                           
 18977                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 18978  1289  0877               	movf	_eusart1RxHead,w	;volatile
 18979  128A  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 18980  128B  0086               	movwf	6
 18981  128C  3001               	movlw	1	; select bank3/4
 18982  128D  0087               	movwf	7
 18983  128E  1481               	bsf	1,1
 18984                           
 18985                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 18986  128F  0143               	movlb	3	; select bank3
 18987  1290  0863               	movf	(_EUSART1_FramingErrorHandler+1)^(0+384),w
 18988  1291  008A               	movwf	10
 18989  1292  0862               	movf	_EUSART1_FramingErrorHandler^(0+384),w
 18990  1293  000A               	callw
 18991  1294  3192               	pagesel	$
 18992  1295                     i1l4895:	
 18993                           
 18994                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 18995  1295  0142               	movlb	2	; select bank2
 18996  1296  1C9D               	btfss	29,1	;volatile
 18997  1297  2AA4               	goto	i1l4901
 18998                           
 18999                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 19000  1298  0877               	movf	_eusart1RxHead,w	;volatile
 19001  1299  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19002  129A  0086               	movwf	6
 19003  129B  3001               	movlw	1	; select bank3/4
 19004  129C  0087               	movwf	7
 19005  129D  1501               	bsf	1,2
 19006                           
 19007                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 19008  129E  0143               	movlb	3	; select bank3
 19009  129F  0861               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+384),w
 19010  12A0  008A               	movwf	10
 19011  12A1  0860               	movf	_EUSART1_OverrunErrorHandler^(0+384),w
 19012  12A2  000A               	callw
 19013  12A3  3192               	pagesel	$
 19014  12A4                     i1l4901:	
 19015                           
 19016                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 19017  12A4  0877               	movf	_eusart1RxHead,w	;volatile
 19018  12A5  3EAA               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 19019  12A6  0086               	movwf	6
 19020  12A7  3001               	movlw	1	; select bank3/4
 19021  12A8  0087               	movwf	7
 19022  12A9  0801               	movf	1,w
 19023  12AA  1903               	btfsc	3,2
 19024  12AB  2AB3               	goto	i1l4905
 19025                           
 19026                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 19027  12AC  0143               	movlb	3	; select bank3
 19028  12AD  085F               	movf	(_EUSART1_ErrorHandler+1)^(0+384),w
 19029  12AE  008A               	movwf	10
 19030  12AF  085E               	movf	_EUSART1_ErrorHandler^(0+384),w
 19031  12B0  000A               	callw
 19032  12B1  3192               	pagesel	$
 19033                           
 19034                           ;mcc_generated_files/eusart1.c: 230:     } else {
 19035  12B2  0008               	return
 19036  12B3                     i1l4905:	
 19037                           
 19038                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 19039  12B3  319F  274A         	fcall	_EUSART1_RxDataHandler
 19040  12B5  0008               	return
 19041  12B6                     __end_of_EUSART1_Receive_ISR:	
 19042                           
 19043                           	psect	text78
 19044  1DFD                     __ptext78:	
 19045 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 19046 ;; Defined at:
 19047 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 19048 ;; Parameters:    Size  Location     Type
 19049 ;;		None
 19050 ;; Auto vars:     Size  Location     Type
 19051 ;;		None
 19052 ;; Return value:  Size  Location     Type
 19053 ;;                  1    wreg      void 
 19054 ;; Registers used:
 19055 ;;		None
 19056 ;; Tracked objects:
 19057 ;;		On entry : 0/0
 19058 ;;		On exit  : 0/0
 19059 ;;		Unchanged: 0/0
 19060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19065 ;;Total ram usage:        0 bytes
 19066 ;; Hardware stack levels used:    1
 19067 ;; This function calls:
 19068 ;;		Nothing
 19069 ;; This function is called by:
 19070 ;;		_EUSART1_Initialize
 19071 ;;		_EUSART1_Receive_ISR
 19072 ;; This function uses a non-reentrant model
 19073 ;;
 19074                           
 19075                           
 19076                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 19077  1DFD                     _EUSART1_DefaultOverrunErrorHandler:	
 19078                           
 19079                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 19080                           
 19081                           ;incstack = 0
 19082                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 19083  1DFD  0142               	movlb	2	; select bank2
 19084  1DFE  121D               	bcf	29,4	;volatile
 19085                           
 19086                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 19087  1DFF  161D               	bsf	29,4	;volatile
 19088  1E00  0008               	return
 19089  1E01                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 19090                           
 19091                           	psect	text79
 19092  0002                     __ptext79:	
 19093 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 19094 ;; Defined at:
 19095 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 19096 ;; Parameters:    Size  Location     Type
 19097 ;;		None
 19098 ;; Auto vars:     Size  Location     Type
 19099 ;;		None
 19100 ;; Return value:  Size  Location     Type
 19101 ;;                  1    wreg      void 
 19102 ;; Registers used:
 19103 ;;		None
 19104 ;; Tracked objects:
 19105 ;;		On entry : 0/0
 19106 ;;		On exit  : 0/0
 19107 ;;		Unchanged: 0/0
 19108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19113 ;;Total ram usage:        0 bytes
 19114 ;; Hardware stack levels used:    1
 19115 ;; This function calls:
 19116 ;;		Nothing
 19117 ;; This function is called by:
 19118 ;;		_EUSART1_Initialize
 19119 ;;		_EUSART1_Receive_ISR
 19120 ;; This function uses a non-reentrant model
 19121 ;;
 19122                           
 19123                           
 19124                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 19125  0002                     _EUSART1_DefaultFramingErrorHandler:	
 19126                           
 19127                           ;incstack = 0
 19128                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 19129  0002  0008               	return
 19130  0003                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 19131                           
 19132                           	psect	text80
 19133  1DED                     __ptext80:	
 19134 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 19135 ;; Defined at:
 19136 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 19137 ;; Parameters:    Size  Location     Type
 19138 ;;		None
 19139 ;; Auto vars:     Size  Location     Type
 19140 ;;		None
 19141 ;; Return value:  Size  Location     Type
 19142 ;;                  1    wreg      void 
 19143 ;; Registers used:
 19144 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19145 ;; Tracked objects:
 19146 ;;		On entry : 0/0
 19147 ;;		On exit  : 0/0
 19148 ;;		Unchanged: 0/0
 19149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19154 ;;Total ram usage:        0 bytes
 19155 ;; Hardware stack levels used:    1
 19156 ;; Hardware stack levels required when called:    1
 19157 ;; This function calls:
 19158 ;;		_EUSART1_RxDataHandler
 19159 ;; This function is called by:
 19160 ;;		_EUSART1_Initialize
 19161 ;;		_EUSART1_Receive_ISR
 19162 ;; This function uses a non-reentrant model
 19163 ;;
 19164                           
 19165                           
 19166                           ;psect for function _EUSART1_DefaultErrorHandler
 19167  1DED                     _EUSART1_DefaultErrorHandler:	
 19168                           
 19169                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 19170                           
 19171                           ;incstack = 0
 19172                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19173  1DED  319F  274A         	fcall	_EUSART1_RxDataHandler
 19174  1DEF  0008               	return
 19175  1DF0                     __end_of_EUSART1_DefaultErrorHandler:	
 19176                           
 19177                           	psect	text81
 19178  1F4A                     __ptext81:	
 19179 ;; *************** function _EUSART1_RxDataHandler *****************
 19180 ;; Defined at:
 19181 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 19182 ;; Parameters:    Size  Location     Type
 19183 ;;		None
 19184 ;; Auto vars:     Size  Location     Type
 19185 ;;		None
 19186 ;; Return value:  Size  Location     Type
 19187 ;;                  1    wreg      void 
 19188 ;; Registers used:
 19189 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19190 ;; Tracked objects:
 19191 ;;		On entry : 0/0
 19192 ;;		On exit  : 0/0
 19193 ;;		Unchanged: 0/0
 19194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19199 ;;Total ram usage:        1 bytes
 19200 ;; Hardware stack levels used:    1
 19201 ;; This function calls:
 19202 ;;		Nothing
 19203 ;; This function is called by:
 19204 ;;		_EUSART1_Receive_ISR
 19205 ;;		_EUSART1_DefaultErrorHandler
 19206 ;; This function uses a non-reentrant model
 19207 ;;
 19208                           
 19209                           
 19210                           ;psect for function _EUSART1_RxDataHandler
 19211  1F4A                     _EUSART1_RxDataHandler:	
 19212                           
 19213                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 19214                           
 19215                           ;incstack = 0
 19216                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 19217  1F4A  0142               	movlb	2	; select bank2
 19218  1F4B  0819               	movf	25,w	;volatile
 19219  1F4C  00F0               	movwf	??_EUSART1_RxDataHandler
 19220  1F4D  0877               	movf	_eusart1RxHead,w
 19221  1F4E  3EB2               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 19222  1F4F  0086               	movwf	6
 19223  1F50  3001               	movlw	1	; select bank3/4
 19224  1F51  0087               	movwf	7
 19225  1F52  0870               	movf	??_EUSART1_RxDataHandler,w
 19226  1F53  0081               	movwf	1
 19227  1F54  3001               	movlw	1
 19228  1F55  00F0               	movwf	??_EUSART1_RxDataHandler
 19229  1F56  0870               	movf	??_EUSART1_RxDataHandler,w
 19230  1F57  07F7               	addwf	_eusart1RxHead,f	;volatile
 19231                           
 19232                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 19233  1F58  3008               	movlw	8
 19234  1F59  0277               	subwf	_eusart1RxHead,w	;volatile
 19235  1F5A  1803               	btfsc	3,0
 19236                           
 19237                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 19238  1F5B  01F7               	clrf	_eusart1RxHead	;volatile
 19239                           
 19240                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 19241  1F5C  3001               	movlw	1
 19242  1F5D  00F0               	movwf	??_EUSART1_RxDataHandler
 19243  1F5E  0870               	movf	??_EUSART1_RxDataHandler,w
 19244  1F5F  07DC               	addwf	_eusart1RxCount^(0+256),f	;volatile
 19245  1F60  0008               	return
 19246  1F61                     __end_of_EUSART1_RxDataHandler:	
 19247                           
 19248                           	psect	text82
 19249  1E9E                     __ptext82:	
 19250 ;; *************** function _ADCC_ThresholdISR *****************
 19251 ;; Defined at:
 19252 ;;		line 308 in file "mcc_generated_files/adcc.c"
 19253 ;; Parameters:    Size  Location     Type
 19254 ;;		None
 19255 ;; Auto vars:     Size  Location     Type
 19256 ;;		None
 19257 ;; Return value:  Size  Location     Type
 19258 ;;                  1    wreg      void 
 19259 ;; Registers used:
 19260 ;;		wreg, status,2, status,0, pclath, cstack
 19261 ;; Tracked objects:
 19262 ;;		On entry : 0/0
 19263 ;;		On exit  : 0/0
 19264 ;;		Unchanged: 0/0
 19265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19270 ;;Total ram usage:        0 bytes
 19271 ;; Hardware stack levels used:    1
 19272 ;; Hardware stack levels required when called:    1
 19273 ;; This function calls:
 19274 ;;		Absolute function
 19275 ;;		_ADCC_DefaultInterruptHandler
 19276 ;;		_adcThresholdHandler
 19277 ;; This function is called by:
 19278 ;;		_INTERRUPT_InterruptManager
 19279 ;; This function uses a non-reentrant model
 19280 ;;
 19281                           
 19282                           
 19283                           ;psect for function _ADCC_ThresholdISR
 19284  1E9E                     _ADCC_ThresholdISR:	
 19285                           
 19286                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 19287                           
 19288                           ;incstack = 0
 19289                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 19290  1E9E  014E               	movlb	14	; select bank14
 19291  1E9F  108D               	bcf	13,1	;volatile
 19292                           
 19293                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 19294  1EA0  0142               	movlb	2	; select bank2
 19295  1EA1  086A               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19296  1EA2  046B               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19297  1EA3  1903               	btfsc	3,2
 19298  1EA4  0008               	return
 19299                           
 19300                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 19301  1EA5  086B               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+256),w
 19302  1EA6  008A               	movwf	10
 19303  1EA7  086A               	movf	_ADCC_ADTI_InterruptHandler^(0+256),w
 19304  1EA8  000A               	callw
 19305  1EA9  319E               	pagesel	$
 19306  1EAA  0008               	return
 19307  1EAB                     __end_of_ADCC_ThresholdISR:	
 19308                           
 19309                           	psect	text83
 19310  1DEC                     __ptext83:	
 19311 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 19312 ;; Defined at:
 19313 ;;		line 320 in file "mcc_generated_files/adcc.c"
 19314 ;; Parameters:    Size  Location     Type
 19315 ;;		None
 19316 ;; Auto vars:     Size  Location     Type
 19317 ;;		None
 19318 ;; Return value:  Size  Location     Type
 19319 ;;                  1    wreg      void 
 19320 ;; Registers used:
 19321 ;;		None
 19322 ;; Tracked objects:
 19323 ;;		On entry : 0/0
 19324 ;;		On exit  : 0/0
 19325 ;;		Unchanged: 0/0
 19326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19331 ;;Total ram usage:        0 bytes
 19332 ;; Hardware stack levels used:    1
 19333 ;; This function calls:
 19334 ;;		Nothing
 19335 ;; This function is called by:
 19336 ;;		_ADCC_Initialize
 19337 ;;		_ADCC_ThresholdISR
 19338 ;; This function uses a non-reentrant model
 19339 ;;
 19340                           
 19341                           
 19342                           ;psect for function _ADCC_DefaultInterruptHandler
 19343  1DEC                     _ADCC_DefaultInterruptHandler:	
 19344                           
 19345                           ;incstack = 0
 19346                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 19347  1DEC  0008               	return
 19348  1DED                     __end_of_ADCC_DefaultInterruptHandler:	
 19349                           
 19350                           	psect	text84
 19351  1DF9                     __ptext84:	
 19352 ;; *************** function _adcThresholdHandler *****************
 19353 ;; Defined at:
 19354 ;;		line 27 in file "beat.c"
 19355 ;; Parameters:    Size  Location     Type
 19356 ;;		None
 19357 ;; Auto vars:     Size  Location     Type
 19358 ;;		None
 19359 ;; Return value:  Size  Location     Type
 19360 ;;                  1    wreg      void 
 19361 ;; Registers used:
 19362 ;;		None
 19363 ;; Tracked objects:
 19364 ;;		On entry : 0/0
 19365 ;;		On exit  : 0/0
 19366 ;;		Unchanged: 0/0
 19367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19372 ;;Total ram usage:        0 bytes
 19373 ;; Hardware stack levels used:    1
 19374 ;; This function calls:
 19375 ;;		Nothing
 19376 ;; This function is called by:
 19377 ;;		_BEAT_init
 19378 ;;		_ADCC_ThresholdISR
 19379 ;; This function uses a non-reentrant model
 19380 ;;
 19381                           
 19382                           
 19383                           ;psect for function _adcThresholdHandler
 19384  1DF9                     _adcThresholdHandler:	
 19385                           
 19386                           ;beat.c: 28:     thresholdExceeded = 1;
 19387                           
 19388                           ;incstack = 0
 19389                           ; Regs used in _adcThresholdHandler: []
 19390  1DF9  0142               	movlb	2	; select bank2
 19391  1DFA  01D0               	clrf	_thresholdExceeded^(0+256)
 19392  1DFB  0AD0               	incf	_thresholdExceeded^(0+256),f
 19393  1DFC  0008               	return
 19394  1DFD                     __end_of_adcThresholdHandler:	
 19395  007E                     btemp	set	126	;btemp
 19396  007E                     int$flags	set	126
 19397  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        32
    BSS         147
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     75      80
    BANK2            80      0      79
    BANK3            80      2      74
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    dispInc@val	PTR int  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    dispInc@foo	PTR volatile int  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    decrement@val	PTR int  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    increment@val	PTR int  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    S1461$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK4[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[4]), I2C1_MasterWrite@trBlock(BANK3[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _MENU_task->_pulseColors
    _menuButtons->_BUTTONS_isClicked
    _dispInc->_decrement
    _dispInc->_increment
    _increment->_TM1650_fastPrintNum
    _decrement->_TM1650_fastPrintNum
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _TM1650_enable->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _LED_DMX->_LED_setColor
    _LED_setHSL->_HueToRGB
    ___fltol->_HueToRGB
    ___fldiv->___xxtofl
    _HueToRGB->___flge
    ___flsub->___flmul
    ___fladd->__Umul8_16
    ___flmul->___fladd
    ___flge->___flmul
    _BEAT_task->___lwdiv
    _DMX_task->_CLOCK_getTime
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_MENU_task
    _MENU_task->_cycleColors
    _pulseColors->_LED_setHSL
    _cycleColors->_LED_setHSL
    _LED_Beat->_fadeColor
    _fadeColor->_LED_setHSL
    _LED_setHSL->___fltol
    ___fltol->_HueToRGB

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  157939
                                              0 BANK3      2     2      0
                          _BEAT_init
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                           _DMX_task
      _EUSART1_SetRxInterruptHandler
                          _MENU_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _MENU_task                                            1     1      0  151965
                                             74 BANK1      1     1      0
                          _BEAT_task
                           _LED_Beat
                            _LED_DMX
                      _TM1650_enable
                    _TM1650_setDigit
                     _adrControl_DMX
                        _cycleColors
                            _isDMXOn
                        _menuButtons
                        _pulseColors
 ---------------------------------------------------------------------------------
 (2) _pulseColors                                          1     1      0   44151
                                             79 BANK0      1     1      0
                         _LED_setHSL
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _menuButtons                                          0     0      0     273
                  _BUTTONS_isClicked
 ---------------------------------------------------------------------------------
 (2) _isDMXOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cycleColors                                         16    16      0   50363
                                             58 BANK1     16    16      0
                      _CLOCK_getTime
                         _LED_setHSL
                            _dispInc
 ---------------------------------------------------------------------------------
 (3) _dispInc                                             10     8      2   13772
                                             38 BANK0     10     8      2
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                          _decrement
                          _increment
 ---------------------------------------------------------------------------------
 (4) _increment                                            4     2      2    5581
                                             34 BANK0      4     2      2
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (4) _decrement                                            4     2      2    5581
                                             34 BANK0      4     2      2
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _adrControl_DMX                                       4     4      0   13124
                                             34 BANK0      4     4      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (3) _address_inc                                          0     0      0    5367
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _address_dec                                          0     0      0    5367
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (5) _TM1650_fastPrintNum                                  7     5      2    5367
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _TM1650_setDigit                                      7     4      3    3672
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BUTTONS_isClicked                                    4     1      3     273
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _LED_DMX                                             11    11      0     948
                                             22 BANK0     11    11      0
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_Beat                                             0     0      0   36446
                      _BEAT_detected
                          _fadeColor
 ---------------------------------------------------------------------------------
 (3) _fadeColor                                            4     4      0   36446
                                             58 BANK1      4     4      0
                      _CLOCK_getTime
                         _LED_setHSL
 ---------------------------------------------------------------------------------
 (3) _LED_setHSL                                          43    33     10   36381
                                             15 BANK1     43    33     10
                           _HueToRGB
                       _LED_setColor
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     697
                                              4 BANK1     11     7      4
                           _HueToRGB (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1425
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _LED_setColor                                        22    19      3     948
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (4) _HueToRGB                                            16     4     12   16255
                                             67 BANK0     12     0     12
                                              0 BANK1      4     4      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4705
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3200
                                              9 BANK0     20    12      8
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    5693
                                             29 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1246
                                             55 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_task                                             4     4      0      65
                                              2 BANK0      4     4      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (4) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (13) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (13) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _DMX_task
     _CLOCK_getTime
   _EUSART1_SetRxInterruptHandler
   _MENU_task
     _BEAT_task
       _ADCC_SetUpperThreshold
       _CLOCK_getTime
       _TM1650_isEnabled
       ___lwdiv
     _LED_Beat
       _BEAT_detected
       _fadeColor
         _CLOCK_getTime
         _LED_setHSL
           _HueToRGB
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           _LED_setColor
           ___fladd
             __Umul8_16 (ARG)
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___fltol
             _HueToRGB (ARG)
               ___fladd
                 __Umul8_16 (ARG)
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
               ___flmul
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
               ___flsub
                 ___fladd
                   __Umul8_16 (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___fladd (ARG)
                     __Umul8_16 (ARG)
             ___fladd (ARG)
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___xxtofl
     _LED_DMX
       _LED_setColor
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _TM1650_setDigit
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _adrControl_DMX
       _BUTTONS_isClicked
       _CLOCK_getTime
       _TM1650_enable
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       _address_dec
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
       _address_inc
         _TM1650_fastPrintNum
           _TM1650_setDigit
             _writeData
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                   _I2C1_WaitForLastPacketToComplete
                 _I2C1_MasterWriteTRBBuild
           ___lwdiv
           ___lwmod
     _cycleColors
       _CLOCK_getTime
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fleq
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
       _dispInc
         _BUTTONS_isClicked
         _CLOCK_getTime
         _TM1650_enable
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         _decrement
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
         _increment
           _TM1650_fastPrintNum
             _TM1650_setDigit
               _writeData
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                     _I2C1_WaitForLastPacketToComplete
                   _I2C1_MasterWriteTRBBuild
             ___lwdiv
             ___lwmod
     _isDMXOn
     _menuButtons
       _BUTTONS_isClicked
     _pulseColors
       _LED_setHSL
         _HueToRGB
           ___fladd
             __Umul8_16 (ARG)
           ___flge
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
           ___flmul
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
           ___flsub
             ___fladd
               __Umul8_16 (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
         _LED_setColor
         ___fladd
           __Umul8_16 (ARG)
         ___fldiv
           ___xxtofl (ARG)
         ___fleq
         ___flge
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___flmul
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
         ___flsub
           ___fladd
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___fltol
           _HueToRGB (ARG)
             ___fladd
               __Umul8_16 (ARG)
             ___flge
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
             ___flmul
               __Umul8_16
               ___fladd (ARG)
                 __Umul8_16 (ARG)
             ___flsub
               ___fladd
                 __Umul8_16 (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___fladd (ARG)
                   __Umul8_16 (ARG)
           ___fladd (ARG)
             __Umul8_16 (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fladd (ARG)
               __Umul8_16 (ARG)
         ___xxtofl
       ___fldiv
         ___xxtofl (ARG)
       ___fleq
       ___flge
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
       ___flsub
         ___fladd
           __Umul8_16 (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             __Umul8_16 (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     165       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4B      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      2      4A      12       92.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      20      14       40.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     165      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 23:15:47 2019

                                   _pulseColors 086E                        _eusart1TxBufferRemaining 016E  
                                  ___fldiv@aexp 0047                                    ___fldiv@bexp 0046  
                      ??_ADCC_SetUpperThreshold 0022                                    ___fldiv@sign 003F  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0070  
                                    HueToRGB@v1 0063                                      HueToRGB@v2 0067  
                                    HueToRGB@vH 006B                                              _up 00EB  
                            __size_of_BEAT_init 0017                              __size_of_BEAT_task 00D1  
                           __Umul8_16@word_mpld 0026                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 1DF9                                             l802 0A63  
                                           l804 0AC6                                             l970 0E82  
                                           l969 0E4F                                             _bpm 0141  
                       __size_of_PMD_Initialize 000A                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                    ?_cycleColors 0070  
                                  ___flmul@aexp 004B                                    ___flmul@bexp 0050  
                                   ?_LED_setHSL 00AF                                    ___flmul@sign 004A  
                                  ___flmul@temp 0055                                    ___flmul@prod 0051  
                                 __CFG_BBEN$OFF 0000                                 __end_of_LED_DMX 1326  
                               __end_of_DMX_ISR 10F1                                __end_of_I2C1_ISR 0C3A  
                                  ___fltol@exp1 00AE                                            l1000 146E  
                                          l1068 089A                                            l1510 0852  
                                          l1610 0C87                                            l1614 0D1A  
                                          l1631 0D9D                                            l1616 0CFD  
                                          l1490 164D                                            l1652 0E14  
                                          l1644 0DFC                                            l1718 0615  
                                          l1478 13C3                                            l1750 17BE  
                                          l1487 15FF                                            l4303 06DD  
                                          l4311 06BF                                            l1479 13DD  
                                          l1744 1788                                            l4313 06FB  
                                          l1690 0797                                            l1666 066B  
                                          l1763 107A                                            l4243 063C  
                                          l4309 06F6                                            l1757 17D2  
                                          l1758 17DC                            _ADCC_StartConversion 1E22  
                                          l3703 0C57                                            l1687 0772  
                                          l4335 072F                                            l4327 0701  
                                          l4263 0660                                            l4247 063F  
                                          l1688 078A                                            l3705 0C5F  
                                          l4329 0718                                            l4249 0647  
                                          l4409 17F7                                            l3723 0C7C  
                                          l4363 0793                                            l4339 0731  
                                          l4283 0696                                            l4267 0663  
                                          l6107 1F8B                                            l6045 096C  
                                          l3901 1619                                            l3733 0C91  
                                          l4349 075A                                            l4277 068A  
                                          l4189 13EF                                            l4381 1797  
                                          l6125 16A2                                            l6311 0A2D  
                                          l5423 123D                                            l5415 121F  
                                          l5503 044B                                            l3807 0D4B  
                                          l3727 0C7F                                            l4375 1780  
                                          l5351 1E05                                            l6127 16A6  
                                          l6143 0896                                            l5417 122B  
                                          l6081 09E8                                            l6065 09A4  
                                          l6049 0972                                            l3905 1633  
                                          l3833 0DBC                                            l3825 0DAF  
                                          l3817 0D95                                            l3841 0DC5  
                                          l4385 179B                                            l5441 11CF  
                                          l6145 08B2                                            l6241 149A  
                                          l6331 0AB0                                            l6323 0A84  
                                          l5427 1246                                            l6067 09B7  
                                          l3851 0DD0                                            l3771 0D05  
                                          l3763 0CCD                                            l4395 17D0  
                                          l4387 17AB                                            l5371 07E4  
                                          l5603 15A1                                            l6251 14AC  
                                          l6317 0A5D                                            l3773 0D07  
                                          l3781 0D15                                            l4397 17C3  
                                          l5365 07D7                                            l5381 118B  
                                          l5445 11DB                                            l6149 08FC  
                                          l3847 0DCE                                            l3839 0DC3  
                                          l5703 085F                                            l5439 11C3  
                                          l5393 1074                                            l5473 0410  
                                          l3873 0E10                                            l6097 1EB4  
                                          l5369 07DE                                            l5449 11E4  
                                          l5609 15A5                                            l6177 1545  
                                          l6169 152C                                            l6265 14EB  
                                          l5563 05AB                                            l5555 057D  
                                          l5491 0433                                            l5475 0412  
                                          l3699 0C54                                            l5635 0F51  
                                          l5731 109E                                            l5387 1FFA  
                                          l5581 05EB                                            l5557 0594  
                                          l5493 0435                                            l5477 041A  
                                          l3869 0E0C                                            l3797 0D3A  
                                          l3789 0D28                                            l5629 0F1D  
                                          l5725 1099                                            l5717 1F03  
                                          l6365 1276                                            l6295 12EB  
                                          l6287 12E0                                            l5567 05AD  
                                          l5495 043D                                            l3799 0D3C  
                                          l5751 01B3                                            l5817 1E44  
                                          l5577 05D6                                            l5673 0812  
                                          l5745 00F0                                            l5841 147C  
                                          l5833 146A                                            l5587 0602  
                                          l5693 0840                                            l5677 081B  
                                          l5695 084E                                            l5783 11A7  
                                          l5775 1154                                            l5871 1745  
                                          l5863 1728                                            l5769 03E5  
                                          l5881 1F3E                                            l5785 11B1  
                                          l5777 115D                                            l5891 1F17  
                                          l5883 1F42                                            l5889 1F13  
                                ?_TM1650_enable 0070                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u3035 0DB0                                            u4005 06D7  
                                          u3135 0DE7                                            u4015 06EB  
                                          u4045 0704                                            u4205 17A4  
                                          u4135 0748                                            u4145 0763  
                                          u4065 070D                                            u4225 17B8  
                                          u4155 077C                                            u6005 0841  
                                          u4245 17CA                                            u2915 0D0B  
                                          u6035 0856                                            _PMD0 0796  
                                          u4285 17E4                                            _PMD1 0797  
                                          u2870 0CEC                                            _PMD2 0798  
                                          _PMD3 0799                                            u2880 0CED  
                                          _PMD4 079A                                            u6305 09C9  
                                          u2865 0CE1                                            _PMD5 079B  
                                          u6170 1487                                            _PMD6 079C  
                                          u5515 1222                                            _PMD7 079D  
                                          u5605 11D5                                            u6430 0933  
                                          u5535 122C                                            u6255 0957  
                                          u3775 13EB                                            u5615 11DC  
                                          u5545 1236                                            u2993 0D5D  
                                          u2985 0D40                                            u5555 123E  
                                          u5475 107B                                            u5715 04C1  
                                          u6380 16B1                                            u5725 04F0  
                                          u6365 167F                                            u6390 16D7  
                                          u5735 0546                                            u3975 06C7  
                                          u5495 1FB9                                            u5745 055D  
                                          u3985 06CE                                            u5585 11C6  
                                          u5905 15E1                                            u5755 056C  
                                          u6707 1263                                            u5765 0580  
                                          u5855 05C4                                            u6585 0A30  
                                          u5865 05DF                                            u5785 0589  
                                          u6594 0A4F                                            u6595 0A4E  
                                          u5875 05F5                                            u5975 0824  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0070                                   ?_BUTTONS_task 0070  
                          ?_adcThresholdHandler 0070                                            _isOn 0155  
                                          _main 124B                                            _down 0154  
                                          _init 1049                                            _menu 0152  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                cycleColors@color 00DE  
                                          start 0039                                 ___fldiv@new_exp 0040  
                       __end_of_TM1650_setDigit 1FC7                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 0015                            __size_of_address_inc 0016  
                I2C1_MasterWriteTRBBuild@length 0021                              __size_of_MENU_task 0065  
                       __end_of_TMR0_Initialize 1EE1                                      _i2c1_state 015A  
                              __end_of_LED_Beat 1EBB                  ??_TMR0_DefaultInterruptHandler 0070  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 1E7C                        __end_of_TM1650_isEnabled 1DF6  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 01AA  
                                 ___fltol@sign1 00AD                                           _ADCAP 010E  
                                         _ADACT 0117                                 __end_of___fladd 0E1C  
                                         ?_main 0070                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                 __end_of___fldiv 079C  
                                         _ADREF 0116                               __end_of_I2C1_Stop 1FAB  
                                  ?_menuButtons 0070                                   __CFG_WDTE$OFF 0000  
                                         _ADRPT 009A                                 __end_of___flmul 0622  
                               __end_of___flsub 1029                                 __end_of___fltol 086E  
                              __end_of_DMX_task 12ED                                           _LATB6 00CE  
                               __end_of___lwdiv 124B                      _ADCC_ADTI_InterruptHandler 016A  
                                         i1l106 1046                                           i1l402 0AF2  
                                         i1l413 0B47                                           i1l414 0B53  
                                         i1l431 0BC5                                           i1l407 0B24  
                                         i1l432 0BD3                                           i1l424 0B94  
                                         i1l408 0B25                                           i1l280 000E  
                               __end_of___lwmod 11E9                                           i1l443 1ECA  
                                         i1l283 0017                                           i1l436 0BFA  
                                         i1l428 0BB6                                           i1l285 001E  
                                         i1l294 0037                                           i1l287 0028  
                                         i1l289 0032                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
                               __end_of_isDMXOn 1DF9                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         _TXREG 011A               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 1DF3                       ?_TMR0_SetInterruptHandler 0020  
                          _EUSART1_Transmit_ISR 1029                                 __end_of_dispInc 176A  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 07FE  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                 __end_of_initLED 113F  
                                         _delay 0164                                           _dmxOn 014D  
                                         _color 01D4                                           _count 0147  
                                         _enter 0153                           ?_ADCC_StartConversion 0070  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0070  
                             __end_of_BEAT_init 1F78                               __end_of_BEAT_task 0A0B  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0003     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0070             ?_EUSART1_DefaultFramingErrorHandler 0070  
            _EUSART1_DefaultFramingErrorHandler 0002                 I2C1_MasterWriteTRBBuild@address 0022  
                               __initialization 003B                            TM1650_setDigit@digit 003A  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                    __end_of_EUSART1_Initialize 13A8                                    __end_of_main 1280  
                                  __end_of_init 1069                             __size_of_LED_setHSL 035E  
                              __end_of_HueToRGB 1000                                   ?_LED_setColor 0020  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 1E34  
                   ?_INTERRUPT_InterruptManager 0070                                     _i2c1_object 0120  
                                        ??_main 01E8                                          ??_init 0023  
                                     ??_LED_DMX 0036                                       ??_DMX_ISR 0070  
                         ?_EUSART1_Transmit_ISR 0070                                 ??_TM1650_enable 0034  
                                        _ADACCH 0097                                          _ADACCL 0096  
                                        _ADACCU 0098                                          _ADACQH 010D  
                                        _ADACQL 010C                                          _ADCON0 0111  
                                        _ADCON1 0112                                          _ADCON2 0113  
                                        _ADCON3 0114                                          _ADERRH 0091  
                                        _ADERRL 0090                                          _ADLTHH 008D  
                                        _ADLTHL 008C                                          _ADRESH 009E  
                                        _ADRESL 009D                                          _ADPREH 0110  
                                        _ADPREL 010F                                          _CCPR1H 030D  
                                        _CCPR2H 0311                                          _CCPR1L 030C  
                                        _CCPR3H 0315                                          _CCPR2L 0310  
                                        _CCPR4H 0319                                          _CCPR3L 0314  
                                        _CCPR4L 0318                                          _ADSTAT 0115  
                                        _ADUTHH 008F                                          _ADUTHL 008E  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                             __end_of_MENU_task 14F3                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          _RC7PPS 1F27  
                                        i1l5005 0B89                                          i1l5043 0BE1  
                                        i1l5027 0BB9                                          i1l5019 0BA2  
                                        i1l5207 10D8                                          i1l5055 0BFE  
                                        i1l5039 0BDA                                          i1l5209 10DC  
                                        i1l5057 0C01                                          i1l5065 0C0D  
                                        i1l5059 0C05                                  __CFG_WDTCCS$SC 0000  
                                        i1l6403 0C16                                          i1l4901 12A4  
                                        i1l4905 12B3                                          i1l4953 0B17  
                                        i1l4699 1FA8                                          i1l4971 0B41  
                                        i1l4965 0B31                                          i1l4957 0B1E  
                                        i1l4895 1295                                          i1l4985 0B6C  
                                        _OSCFRQ 0893                                   _lastTimeCycle 0135  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                        _TRISC3 00A3                                          _TRISB6 009E  
                                        _TRISC4 00A4                                          _TRISC6 00A6  
                                        _TRISC7 00A7                                   _lastTimePulse 0131  
                              __end_of___xxtofl 1800                               ?_I2C1_MasterWrite 0027  
                                __CFG_PWRTS$OFF 0000                                ?_TM1650_setDigit 0034  
                            ??_I2C1_MasterWrite 002B                                  _p_i2c1_current 00EC  
                                        ___flge 15E4                                          ___fleq 13A8  
                                ??_LED_setColor 0023                     __end_of_TM1650_fastPrintNum 15E4  
                             _ADCC_ThresholdISR 1E9E                                       ??___fladd 0031  
                                     ??___fldiv 0036                                  __CFG_STVREN$ON 0000  
                                     ??___flmul 0045                                       ??___flsub 005F  
                                     ??___fltol 00A8                                       ??___lwdiv 0024  
                                     ??___lwmod 0024                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                       ??_isDMXOn 0020  
                              ?_TMR0_Initialize 0070                              ?_ADCC_ThresholdISR 0070  
                                     ?_I2C1_ISR 0070                          __size_of_BEAT_detected 0009  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                     ??_dispInc 0048                                  _lastActiveTime 012B  
                          __size_of_TM1650_init 0004                                       ??_initLED 0020  
                               _ADCC_Initialize 10F1                                  _PMD_Initialize 1E7C  
                                  ??_CLOCK_init 0022                                    __pdataCOMMON 007A  
                            __size_of__Umul8_16 0020                             ??_ADCC_ThresholdISR 0070  
                        ??_ADCC_StartConversion 0020            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                          __size_of_cycleColors 007E                          _ADCC_SetUpperThreshold 1E19  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                 _eusart1RxBuffer 01B2  
                               _eusart1TxBuffer 01BA                                      ___flge@ff1 0057  
                                    ___flge@ff2 005B                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 1F1F  
                                  ___xxtofl@val 0020                                      ___fleq@ff1 0020  
                                    ___fleq@ff2 0024                         __end_of__initialization 0094  
                                     ?_LED_Beat 0070                              ?_SYSTEM_Initialize 0070  
                                    ___fltol@f1 00A4                                       ?_DMX_task 0070  
                                _i2c1_trb_count 0159                  __size_of_EUSART1_RxDataHandler 0017  
                     __end_of_ADCC_ThresholdISR 1EAB                   __end_of_EUSART1_RxDataHandler 1F61  
                            __size_of_fadeColor 0052                           _I2C1_FunctionComplete 1EBB  
                          _I2C1_BusCollisionISR 1DF0                                  __pcstackCOMMON 0070  
                            __end_of_CLOCK_init 0808                                    ?_pulseColors 0070  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK2 1000  
                                  __pidataBANK3 1EE1                             ??_SYSTEM_Initialize 0023  
                                     ?_TMR0_ISR 0070                     TM1650_fastPrintNum@numWrite 003E  
                            __size_of_decrement 002A                                      ??_I2C1_ISR 0072  
                          __end_of_BUTTONS_init 143C                          __end_of_PMD_Initialize 1E86  
                          __end_of_BUTTONS_task 0ADD                          ??_EUSART1_Transmit_ISR 0070  
                          __size_of_menuButtons 0018                     __end_of_EUSART1_Receive_ISR 12B6  
                                  ??_LED_setHSL 00B9                               _thresholdExceeded 0150  
                   ADCC_StartConversion@channel 0020                               LED_setColor@green 0020  
                             LED_setColor@white 0021                       __end_of_SYSTEM_Initialize 1F34  
                                 _eusart1RxHead 0077                                   _eusart1TxHead 00EF  
                                 _eusart1RxTail 0076                                      __pbssBANK1 00EB  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                     ?_HueToRGB 0063                                      __pbssBANK4 0220  
                                 _eusart1TxTail 00EE               _EUSART1_TxDefaultInterruptHandler 01E6  
                       __size_of_adrControl_DMX 0077                 ??_EUSART1_SetRxInterruptHandler 0022  
                                 _BEAT_detected 1E3D                                      ??_LED_Beat 006F  
                            __size_of_increment 0029                                      ??_DMX_task 0022  
                             __end_of__Umul8_16 1089                           ?_I2C1_BusCollisionISR 0070  
               __end_of_EUSART1_SetErrorHandler 1E4F                                      __pmaintext 124B  
                                       ?___flge 0057                                         ?___fleq 0020  
              __end_of_TMR0_SetInterruptHandler 1E3D                                      ??_TMR0_ISR 0070  
                               __CFG_PPS1WAY$ON 0000                                    LED_setHSL@v1 00CB  
                                  LED_setHSL@v2 00D3                                writeData@address 0032  
                       __end_of_ADCC_Initialize 1117                              __end_of_LED_setHSL 03F6  
                                    __pintentry 0004                                 _I2C1_Initialize 1FC7  
                                       _ADFLTRH 0095                                         _ADFLTRL 0094  
                                       _ADPREVH 009C                                         _ADPREVL 009B  
                                 BUTTONS_task@i 0025            __end_of_ADCC_SetADTIInterruptHandler 1E19  
         __size_of_ADCC_SetADTIInterruptHandler 0009                    _ADCC_SetADTIInterruptHandler 1E10  
                                       _ADSTPTH 0093                                         _ADSTPTL 0092  
                                  increment@val 0042                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0070                               ?_TM1650_isEnabled 0070  
        __end_of_EUSART1_SetFramingErrorHandler 1E58         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 1E4F                                         _LED_DMX 12ED  
                                       _DMX_ISR 10CD                                       ?___xxtofl 0020  
                            ??_TM1650_isEnabled 0020                    ?_EUSART1_DefaultErrorHandler 0070  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                     _I2C1_Stop 1F90                               __end_of_fadeColor 148E  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                    _dmxPointer 013B                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 1362  
                             __end_of_charTable 1860                             _CLOCK_timerCallback 1E0A  
                                    ??_HueToRGB 006F                                  ?_BEAT_detected 0070  
                             __end_of_decrement 11BC                   I2C1_MasterTRBInsert@ptrb_list 0020  
                                    _cycleSpeed 0168                              __size_of_writeData 001D  
                                 ??_address_dec 0042                                   ??_address_inc 0042  
                               BUTTONS_task@btn 0028                          ?_I2C1_FunctionComplete 0070  
                                     _BEAT_init 1F61                   __size_of_I2C1_MasterTRBInsert 0055  
                                     _BEAT_task 093A                      __size_of_ADCC_ThresholdISR 000D  
                            _p_i2c1_trb_current 00ED                                 __size_of___flge 007C  
                               __size_of___fleq 0049                                         ___fladd 0C3A  
                                       ___fldiv 0622                            ?_CLOCK_timerCallback 0070  
                                       ___flmul 03F6                                         ___flsub 100A  
                                       ___fltol 0808                                         ___lwdiv 1216  
                                       ___lwmod 11BC                                         _address 007A  
                                       _isDMXOn 1DF6                                         _dmxData 25EF  
                                       __ptext1 1117                                         __ptext2 1E01  
                                       __ptext3 1F1F                                         __ptext4 1ECD  
                                       __ptext5 1E7C                                         __ptext6 11E9  
                                       __ptext7 1E73                                         __ptext8 1FC7  
                                       __ptext9 1362                                         _dispInc 16DE  
                             __end_of_increment 1168                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                         _initLED 1117  
                                       _lastRun 013F                                    DMX_task@time 0024  
                         _OSCILLATOR_Initialize 1E73                                       _T2CONbits 028E  
                                       _buttons 0220                                      ??___xxtofl 0024  
                            _EUSART1_Initialize 1362                        ??_PIN_MANAGER_Initialize 0020  
                               __CFG_WRTSAF$OFF 0000                                      ?_I2C1_Stop 0070  
                   __end_of_adcThresholdHandler 1DFD                   ??_EUSART1_DefaultErrorHandler 0071  
                    __size_of_SYSTEM_Initialize 0015                            I2C1_ISR@pi2c_buf_ptr 0158  
                                       clrloop0 1E87                            end_of_initialization 0094  
                           ?_EUSART1_Initialize 0070                                         init@btn 0024  
                                       init@pin 0022                                         init_ram 1E92  
                   _EUSART1_OverrunErrorHandler 01E0                                         initloop 1E93  
                                     _MENU_task 148E                          ??_I2C1_BusCollisionISR 0070  
                       __end_of_I2C1_Initialize 1FE3           __end_of_EUSART1_SetRxInterruptHandler 1E6A  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 1E61  
                                    ?_BEAT_init 0070                                      ?_BEAT_task 0070  
                         __size_of_BUTTONS_init 004B                           __size_of_BUTTONS_task 00D2  
                         ??_CLOCK_timerCallback 0070                             __end_of_address_dec 1F1F  
                           __end_of_address_inc 1F4A                                ?_ADCC_Initialize 0070  
                          ??_EUSART1_Initialize 0022                            __size_of_pulseColors 00CC  
                         __CFG_WDTCPS$WDTCPS_31 0000                        _TMR0_SetInterruptHandler 1E34  
                     __size_of_I2C1_MasterWrite 002A                                      dispInc@doo 004A  
                                    dispInc@foo 004C                                      dispInc@val 0046  
                             __size_of_I2C1_ISR 015D                               __end_of_writeData 2000  
                                   ___fladd@grs 003C                         ?_ADCC_SetUpperThreshold 0020  
                                 ___xxtofl@sign 0028                                      _pulseColor 01CA  
                                   ___fldiv@grs 0042                                     ___fldiv@rem 003B  
                               ??_BEAT_detected 0020                __size_of_EUSART1_SetErrorHandler 0009  
                              __CFG_FEXTOSC$OFF 0000                           __end_of_TM1650_enable 1F0A  
             I2C1_ISR@i2c_10bit_address_restart 0156                                  _adrControl_DMX 14F3  
                        __size_of_CLOCK_getTime 0009                                     ___flmul@grs 004C  
                               cycleColors@F108 01A0                                    _BUTTONS_init 13F1  
                                  _BUTTONS_task 0A0B                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                      ?_MENU_task 0070  
                                   _CCP3CONbits 0316                                     _CCP4CONbits 031A  
                             __size_of_LED_Beat 0010                         I2C1_MasterWrite@address 0028  
                               cycleColors@time 00DC            __size_of_EUSART1_DefaultErrorHandler 0003  
                             __size_of_DMX_task 0037                  ??_ADCC_DefaultInterruptHandler 0070  
                                __end_of___flge 1660                                  __end_of___fleq 13F1  
                                 ??_TM1650_init 0035                         I2C1_MasterWrite@trBlock 01C6  
                                 __pidataCOMMON 07FE                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0071                        __size_of_TM1650_setDigit 001C  
                        ?_OSCILLATOR_Initialize 0070                  __end_of_ADCC_SetUpperThreshold 1E22  
                  __size_of_TM1650_fastPrintNum 007A                           __size_of_LED_setColor 003C  
                                  _lastDetected 014F                                   ??_cycleColors 00DA  
                           start_initialization 003B                                     ??_I2C1_Stop 0070  
                      __size_of_TMR0_Initialize 0014                 __size_of_PIN_MANAGER_Initialize 002D  
                           TM1650_setDigit@data 0034                          __end_of_adrControl_DMX 156A  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020   EUSART1_SetTxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0023  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 1089  
                                   _fadeAmmount 0162                              ?_BUTTONS_isClicked 0020  
                             __size_of_HueToRGB 01E4                                     _address_dec 1F0A  
                                   _address_inc 1F34                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0070                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                                        ??___flge 005F  
                                      ??___fleq 0028                             ??_BUTTONS_isClicked 0023  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 1F4A  
                                  _LED_setColor 1326                  ?_EUSART1_SetRxInterruptHandler 0020  
                                     __Umul8_16 1069                                     __pdataBANK2 0160  
                                   __pdataBANK3 01CA                                   _CLOCK_getTime 1E2B  
                                 ??_menuButtons 0024                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 015C                                       ___fladd@a 002D  
                                     ___fladd@b 0029                                     _changeColor 014B  
                                      ?_LED_DMX 0070                                       ___fldiv@a 002E  
                                     ___fldiv@b 0032                                     __pbssBIGRAM 25EF  
                                      ?_DMX_ISR 0070                             __end_of_TM1650_init 1E05  
                                     ___flmul@a 0041                                       ___flmul@b 003D  
                                   __pbssCOMMON 0076                                       ___flsub@a 0057  
                                     ___flsub@b 005B               _EUSART1_RxDefaultInterruptHandler 01E4  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 0020  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00A0  
                                 __pcstackBANK3 01E8                                   _i2c1_tr_queue 015D  
                               ?_adrControl_DMX 0070                               __size_of___xxtofl 0096  
                     __end_of_BUTTONS_isClicked 10AA                             __end_of_cycleColors 16DE  
                                     _fadeColor 143C                 ??_EUSART1_SetTxInterruptHandler 0022  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0070                       __size_of_TM1650_isEnabled 0003  
                  __size_of_EUSART1_Receive_ISR 0036                                LED_setColor@blue 0022  
                                  _currentState 0160                                       _charTable 1800  
                                   ??_MENU_task 00EA                           _TMR0_InterruptHandler 016C  
                                     __pnvBANK2 016A                                       __pnvBANK3 01DE  
                                     _decrement 1192                                ___lwdiv@dividend 0022  
                        _PIN_MANAGER_Initialize 11E9                                        ?___fladd 0029  
                                      ?___fldiv 002E                                        ?___flmul 003D  
                                      ?___flsub 0057                                        ?___fltol 00A4  
                                    ?__Umul8_16 0020                                        ?___lwdiv 0020  
                                      ?___lwmod 0020                                  ?_CLOCK_getTime 0020  
                                      ?_isDMXOn 0070                                        _I2C1_ISR 0ADD  
                                 LED_setHSL@hue 00CF                                   LED_setHSL@hsl 00AF  
                                 LED_setHSL@rgb 00D7                    ??_INTERRUPT_InterruptManager 0076  
                               writeData@status 0033                                        ?_dispInc 0046  
                              _I2C1_MasterWrite 1168                                        _BAUD1CON 011F  
                                      ?_initLED 0070                    __end_of_I2C1_MasterTRBInsert 07F1  
    __end_of_EUSART1_DefaultOverrunErrorHandler 1E01     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0070             ?_EUSART1_DefaultOverrunErrorHandler 0070  
            _EUSART1_DefaultOverrunErrorHandler 1DFD                            _EUSART1_ErrorHandler 01DE  
                       _EUSART1_SetErrorHandler 1E46                                       _increment 113F  
                             ??_TM1650_setDigit 0037                             __end_of_menuButtons 1F90  
                              ___lwdiv@quotient 0026                                    decrement@val 0042  
                                      _T2CLKCON 0290                                      ?_fadeColor 0070  
      __end_of_I2C1_WaitForLastPacketToComplete 1E0A       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0070  
              _I2C1_WaitForLastPacketToComplete 1E05                          I2C1_MasterRead@trBlock 01C2  
                             ??_TMR0_Initialize 0022                                        _LED_Beat 1EAB  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0023  
                                     clear_ram0 1E86                                        _PIE0bits 0716  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                    ?_decrement 0042                                        _DMX_task 12B6  
           __size_of_INTERRUPT_InterruptManager 0035                      ??_TMR0_SetInterruptHandler 0022  
                                      _PIR0bits 070C                                        _PIR1bits 070D  
                                      _PIR3bits 070F                            TM1650_fastPrintNum@i 0040  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0070  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 07F1  
                                      _SSP1STAT 018F                                     _TM1650_init 1E01  
                                     _threshold 0166                           dispIncrement@lastTime 0129  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                              __size_of_LED_DMX 0039                                  cycleColors@adr 00E8  
                                   _cycleColors 1660                                __size_of_DMX_ISR 0024  
                                    ?_increment 0042                                       _writeData 1FE3  
                    __size_of_BUTTONS_isClicked 0021                                        _HueToRGB 0E1C  
                                   _hueValCycle 0133                    __size_of_adcThresholdHandler 0004  
                                   _hueValPulse 012F                     __end_of_CLOCK_timerCallback 1E10  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 156A  
                                    _ADSTATbits 0115                              controller@lastTime 012D  
         __end_of_EUSART1_SetTxInterruptHandler 1E73          __size_of_EUSART1_SetTxInterruptHandler 0009  
                 _EUSART1_SetTxInterruptHandler 1E6A                   __size_of_I2C1_BusCollisionISR 0003  
                                 ??_pulseColors 006F                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 0157                                 _LED_setHSL$2900 00BF  
                               _LED_setHSL$2897 00BB                                 _LED_setHSL$2898 00C3  
                               _LED_setHSL$2899 00C7                         ??_OSCILLATOR_Initialize 0020  
                                   ??__Umul8_16 0022                                __size_of___fladd 01E2  
                              __size_of___fldiv 017A                                __size_of___flmul 022C  
                              __size_of___flsub 001F                                __size_of___fltol 0066  
                   __size_of_EUSART1_Initialize 0046                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                                __size_of_isDMXOn 0003  
              __end_of_I2C1_MasterWriteTRBBuild 10CD                                     _menuButtons 1F78  
                          ?_TM1650_fastPrintNum 003B                       ??_EUSART1_SetErrorHandler 0022  
                              __size_of_dispInc 008C                                 BEAT_task@offset 002A  
                                      _fadeTime 0125                                 LED_setColor@lo1 0027  
                               LED_setColor@lo2 002B                             TM1650_enable@enable 0034  
                               LED_setColor@lo3 002F                                 LED_setColor@lo4 0033  
           __end_of_EUSART1_DefaultErrorHandler 1DF0                     _EUSART1_DefaultErrorHandler 1DED  
                               LED_setColor@red 0035                                     _currentTime 0149  
                                    _CLOCK_init 0800                                __size_of_initLED 0028  
                                      ___xxtofl 176A                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0078                                 ___lwdiv@counter 0025  
                                      _detected 0151                                      ?_writeData 002E  
                                      __ptext10 1E6A                                        __ptext11 1E61  
                                      __ptext20 1660                                        __ptext12 1E58  
                                      __ptext21 16DE                                        __ptext13 1E4F  
                                      __ptext30 1EF5                                        __ptext22 113F  
                                      __ptext14 1E46                                        __ptext31 1FE3  
                                      __ptext23 1192                                        __ptext15 10F1  
                                      __ptext40 0098                                        __ptext32 1168  
                                      __ptext24 14F3                                        __ptext16 148E  
                                      __ptext41 176A                                        __ptext33 10AA  
                                      __ptext25 1F34                                        __ptext17 086E  
                                      __ptext50 1069                                        __ptext42 0808  
                                      __ptext34 079C                                        __ptext26 1F0A  
                                      __ptext18 1F78                                        __ptext51 15E4  
                                      __ptext43 13A8                                        __ptext35 1E05  
                                      __ptext27 156A                                        __ptext19 1DF6  
                                      __ptext60 1E2B                                        __ptext52 1E3D  
                                      __ptext44 0622                                        __ptext36 1089  
                                      __ptext28 11BC                                        __ptext61 13F1  
                                      __ptext53 093A                                        __ptext45 1326  
                                      __ptext37 12ED                                        __ptext29 1FAB  
                                      __ptext70 0003                                        __ptext62 1049  
                                      __ptext54 1216                                        __ptext46 0E1C  
                                      __ptext38 1EAB                                        __ptext71 0ADD  
                                      __ptext63 1F61                                        __ptext55 1DF3  
                                      __ptext47 100A                                        __ptext39 143C  
                                      __ptext80 1DED                                        __ptext72 1F90  
                                      __ptext64 1E22                                        __ptext56 12B6  
                                      __ptext48 0C3A                                        __ptext81 1F4A  
                                      __ptext73 1EBB                                        __ptext65 1E19  
                                      __ptext57 0800                                        __ptext49 03F6  
                                      __ptext82 1E9E                                        __ptext74 1DF0  
                                      __ptext66 1E10                                        __ptext58 1E34  
                                      __ptext83 1DEC                                        __ptext75 1029  
                                      __ptext59 0A0B                                        __ptext84 1DF9  
                                      __ptext76 10CD                                        __ptext68 07F1  
                                      __ptext77 1280                                        __ptext69 1E0A  
                                      __ptext78 1DFD                                        __ptext79 0002  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _offCheck 014E                                     ??_fadeColor 00DA  
                         __end_of_BEAT_detected 1E46                                        _lastBeat 0143  
                                      _lastTime 0145                                _TM1650_isEnabled 1DF3  
                                 __size_of_main 0035                                   __size_of_init 0020  
                                  ?_address_dec 0070            __end_of_TMR0_DefaultInterruptHandler 0004  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 0003  
                                  ?_address_inc 0070                            __CFG_WDTCWS$WDTCWS_7 0000  
                                   ??_decrement 0044                            _I2C1_MasterTRBInsert 079C  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                  __end_of_ADCC_StartConversion 1E2B                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 0039                      _INTERRUPT_InterruptManager 0004  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 01E2  
                           _EUSART1_Receive_ISR 1280                             __end_of_pulseColors 093A  
                         ??_TM1650_fastPrintNum 003D                                ??_adrControl_DMX 0042  
                             TM1650_setDigit@dp 0035                                      _INTCONbits 000B  
                                      init@port 0020                                   _HueToRGB$2896 00A0  
                                   ??_increment 0044                                      _LED_setHSL 0098  
          __end_of_ADCC_DefaultInterruptHandler 1DED           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 1DEC                                        intlevel1 0000  
                                _thresholdCount 013D                            ?_EUSART1_Receive_ISR 0070  
                                 writeData@data 002E                                ___lwmod@dividend 0022  
                       ?_PIN_MANAGER_Initialize 0070                        __end_of_I2C1_MasterWrite 1192  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0012  
        __end_of_EUSART1_SetOverrunErrorHandler 1E61         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 1E58                   __end_of_I2C1_FunctionComplete 1ECD  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 1049  
                                   led@lastTime 0137                   ?_TMR0_DefaultInterruptHandler 0070  
                        TM1650_fastPrintNum@num 003B  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 1FAB  
                      __size_of_I2C1_Initialize 001C                              _eusart1RxLastError 015B  
                                 __pstringtext1 1800                          __Umul8_16@multiplicand 0020  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                               ___lwmod@divisor 0020                                     ?_CLOCK_init 0070  
                               _TMR0_Initialize 1ECD                                 ___lwmod@counter 0025  
                                   dmx@lastTime 0139                                   fadeColor@time 00DC  
                      _I2C1_MasterWriteTRBBuild 10AA                                     ??_writeData 002F  
                                    _TX1STAbits 011E                                   ___fladd@signs 0039  
                                   dispInc@time 004E                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0071                  __end_of_PIN_MANAGER_Initialize 1216  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 1EF5  
                                  ___fladd@aexp 003A                                    ___fladd@bexp 003B  
                            __size_of_I2C1_Stop 001B                   ?_ADCC_DefaultInterruptHandler 0070  
                                   _toggleCheck 014C                            __Umul8_16@multiplier 0028  
                       ??_EUSART1_RxDataHandler 0070                               __Umul8_16@product 0024  
                            adrControl_DMX@time 0044  
