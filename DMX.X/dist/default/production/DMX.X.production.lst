

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 13:34:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	dabs	1,0xCA0,32
    87                           	dabs	1,0xC20,80
    88                           	dabs	1,0xBA0,80
    89                           	dabs	1,0xB20,80
    90                           	dabs	1,0xAA0,80
    91                           	dabs	1,0xA20,80
    92                           	dabs	1,0x9A0,80
    93                           	dabs	1,0x96F,1
    94                           	dabs	1,0x25EF,0,_dmxData
    95                           	dabs	1,0x7E,2
    96  0000                     
    97                           ; Version 2.05
    98                           ; Generated 20/12/2018 GMT
    99                           ; 
   100                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC16F18446 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  008C                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0090                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0094                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0096                     	;# 
   169  0097                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  010F                     	;# 
   186  0110                     	;# 
   187  0111                     	;# 
   188  0112                     	;# 
   189  0113                     	;# 
   190  0114                     	;# 
   191  0115                     	;# 
   192  0116                     	;# 
   193  0117                     	;# 
   194  0118                     	;# 
   195  0119                     	;# 
   196  0119                     	;# 
   197  0119                     	;# 
   198  011A                     	;# 
   199  011A                     	;# 
   200  011A                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011B                     	;# 
   204  011B                     	;# 
   205  011B                     	;# 
   206  011C                     	;# 
   207  011C                     	;# 
   208  011C                     	;# 
   209  011D                     	;# 
   210  011D                     	;# 
   211  011D                     	;# 
   212  011E                     	;# 
   213  011E                     	;# 
   214  011E                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  011F                     	;# 
   218  011F                     	;# 
   219  011F                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  018E                     	;# 
   223  018F                     	;# 
   224  0190                     	;# 
   225  0191                     	;# 
   226  0192                     	;# 
   227  0196                     	;# 
   228  0197                     	;# 
   229  0198                     	;# 
   230  0199                     	;# 
   231  019A                     	;# 
   232  019B                     	;# 
   233  019C                     	;# 
   234  020C                     	;# 
   235  020D                     	;# 
   236  020E                     	;# 
   237  020E                     	;# 
   238  020F                     	;# 
   239  020F                     	;# 
   240  0210                     	;# 
   241  0210                     	;# 
   242  0211                     	;# 
   243  0211                     	;# 
   244  0212                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0216                     	;# 
   251  0216                     	;# 
   252  0217                     	;# 
   253  0217                     	;# 
   254  0218                     	;# 
   255  0219                     	;# 
   256  021A                     	;# 
   257  021A                     	;# 
   258  021B                     	;# 
   259  021B                     	;# 
   260  021C                     	;# 
   261  021C                     	;# 
   262  021D                     	;# 
   263  021D                     	;# 
   264  021E                     	;# 
   265  021F                     	;# 
   266  028C                     	;# 
   267  028C                     	;# 
   268  028D                     	;# 
   269  028D                     	;# 
   270  028E                     	;# 
   271  028F                     	;# 
   272  0290                     	;# 
   273  0291                     	;# 
   274  0292                     	;# 
   275  0292                     	;# 
   276  0293                     	;# 
   277  0293                     	;# 
   278  0294                     	;# 
   279  0295                     	;# 
   280  0296                     	;# 
   281  0297                     	;# 
   282  0298                     	;# 
   283  0298                     	;# 
   284  0299                     	;# 
   285  0299                     	;# 
   286  029A                     	;# 
   287  029B                     	;# 
   288  029C                     	;# 
   289  029D                     	;# 
   290  029F                     	;# 
   291  030C                     	;# 
   292  030C                     	;# 
   293  030D                     	;# 
   294  030E                     	;# 
   295  030F                     	;# 
   296  0310                     	;# 
   297  0310                     	;# 
   298  0311                     	;# 
   299  0312                     	;# 
   300  0313                     	;# 
   301  0314                     	;# 
   302  0314                     	;# 
   303  0315                     	;# 
   304  0316                     	;# 
   305  0317                     	;# 
   306  0318                     	;# 
   307  0318                     	;# 
   308  0319                     	;# 
   309  031A                     	;# 
   310  031B                     	;# 
   311  038C                     	;# 
   312  038C                     	;# 
   313  038D                     	;# 
   314  038E                     	;# 
   315  0390                     	;# 
   316  0390                     	;# 
   317  0391                     	;# 
   318  0392                     	;# 
   319  048C                     	;# 
   320  048C                     	;# 
   321  048D                     	;# 
   322  048E                     	;# 
   323  048F                     	;# 
   324  048F                     	;# 
   325  0490                     	;# 
   326  0491                     	;# 
   327  0492                     	;# 
   328  0492                     	;# 
   329  0493                     	;# 
   330  0494                     	;# 
   331  0495                     	;# 
   332  0495                     	;# 
   333  0496                     	;# 
   334  0497                     	;# 
   335  0498                     	;# 
   336  0499                     	;# 
   337  049A                     	;# 
   338  049B                     	;# 
   339  049C                     	;# 
   340  049D                     	;# 
   341  058C                     	;# 
   342  058C                     	;# 
   343  058D                     	;# 
   344  058E                     	;# 
   345  058F                     	;# 
   346  058F                     	;# 
   347  0590                     	;# 
   348  0591                     	;# 
   349  0592                     	;# 
   350  0593                     	;# 
   351  059C                     	;# 
   352  059C                     	;# 
   353  059D                     	;# 
   354  059D                     	;# 
   355  059E                     	;# 
   356  059F                     	;# 
   357  060C                     	;# 
   358  060C                     	;# 
   359  060D                     	;# 
   360  060D                     	;# 
   361  060E                     	;# 
   362  060F                     	;# 
   363  0610                     	;# 
   364  0611                     	;# 
   365  0612                     	;# 
   366  0613                     	;# 
   367  0614                     	;# 
   368  0616                     	;# 
   369  0616                     	;# 
   370  0617                     	;# 
   371  0617                     	;# 
   372  0618                     	;# 
   373  0619                     	;# 
   374  061A                     	;# 
   375  061B                     	;# 
   376  061C                     	;# 
   377  061D                     	;# 
   378  061E                     	;# 
   379  070C                     	;# 
   380  070D                     	;# 
   381  070E                     	;# 
   382  070F                     	;# 
   383  0710                     	;# 
   384  0711                     	;# 
   385  0712                     	;# 
   386  0713                     	;# 
   387  0714                     	;# 
   388  0716                     	;# 
   389  0717                     	;# 
   390  0718                     	;# 
   391  0719                     	;# 
   392  071A                     	;# 
   393  071B                     	;# 
   394  071C                     	;# 
   395  071D                     	;# 
   396  071E                     	;# 
   397  0796                     	;# 
   398  0797                     	;# 
   399  0798                     	;# 
   400  0799                     	;# 
   401  079A                     	;# 
   402  079B                     	;# 
   403  079C                     	;# 
   404  079D                     	;# 
   405  080C                     	;# 
   406  080D                     	;# 
   407  080E                     	;# 
   408  080F                     	;# 
   409  0810                     	;# 
   410  0811                     	;# 
   411  0812                     	;# 
   412  0813                     	;# 
   413  0814                     	;# 
   414  081A                     	;# 
   415  081A                     	;# 
   416  081B                     	;# 
   417  081C                     	;# 
   418  081C                     	;# 
   419  081D                     	;# 
   420  081E                     	;# 
   421  081F                     	;# 
   422  088C                     	;# 
   423  088D                     	;# 
   424  088E                     	;# 
   425  088F                     	;# 
   426  0890                     	;# 
   427  0891                     	;# 
   428  0892                     	;# 
   429  0893                     	;# 
   430  0895                     	;# 
   431  0896                     	;# 
   432  0897                     	;# 
   433  0898                     	;# 
   434  0899                     	;# 
   435  089A                     	;# 
   436  089B                     	;# 
   437  090C                     	;# 
   438  090E                     	;# 
   439  090F                     	;# 
   440  091F                     	;# 
   441  098F                     	;# 
   442  098F                     	;# 
   443  0990                     	;# 
   444  0991                     	;# 
   445  0992                     	;# 
   446  0993                     	;# 
   447  0994                     	;# 
   448  0995                     	;# 
   449  0996                     	;# 
   450  0997                     	;# 
   451  1E0F                     	;# 
   452  1E10                     	;# 
   453  1E11                     	;# 
   454  1E12                     	;# 
   455  1E13                     	;# 
   456  1E14                     	;# 
   457  1E15                     	;# 
   458  1E16                     	;# 
   459  1E17                     	;# 
   460  1E18                     	;# 
   461  1E19                     	;# 
   462  1E1A                     	;# 
   463  1E1B                     	;# 
   464  1E1C                     	;# 
   465  1E1D                     	;# 
   466  1E1E                     	;# 
   467  1E1F                     	;# 
   468  1E20                     	;# 
   469  1E21                     	;# 
   470  1E22                     	;# 
   471  1E23                     	;# 
   472  1E24                     	;# 
   473  1E25                     	;# 
   474  1E26                     	;# 
   475  1E27                     	;# 
   476  1E28                     	;# 
   477  1E29                     	;# 
   478  1E2A                     	;# 
   479  1E2B                     	;# 
   480  1E2C                     	;# 
   481  1E2D                     	;# 
   482  1E2E                     	;# 
   483  1E2F                     	;# 
   484  1E30                     	;# 
   485  1E31                     	;# 
   486  1E32                     	;# 
   487  1E33                     	;# 
   488  1E34                     	;# 
   489  1E35                     	;# 
   490  1E36                     	;# 
   491  1E37                     	;# 
   492  1E8F                     	;# 
   493  1E90                     	;# 
   494  1E91                     	;# 
   495  1E92                     	;# 
   496  1E93                     	;# 
   497  1E94                     	;# 
   498  1E95                     	;# 
   499  1E96                     	;# 
   500  1E97                     	;# 
   501  1E9C                     	;# 
   502  1E9D                     	;# 
   503  1E9E                     	;# 
   504  1EA1                     	;# 
   505  1EA2                     	;# 
   506  1EA3                     	;# 
   507  1EA4                     	;# 
   508  1EA9                     	;# 
   509  1EAA                     	;# 
   510  1EB1                     	;# 
   511  1EB2                     	;# 
   512  1EB8                     	;# 
   513  1EB9                     	;# 
   514  1EBA                     	;# 
   515  1EBB                     	;# 
   516  1EBC                     	;# 
   517  1EBD                     	;# 
   518  1EBE                     	;# 
   519  1EC3                     	;# 
   520  1EC5                     	;# 
   521  1EC6                     	;# 
   522  1EC7                     	;# 
   523  1EC8                     	;# 
   524  1EC9                     	;# 
   525  1ECA                     	;# 
   526  1ECB                     	;# 
   527  1ECB                     	;# 
   528  1ECB                     	;# 
   529  1ECC                     	;# 
   530  1ECC                     	;# 
   531  1ECC                     	;# 
   532  1F10                     	;# 
   533  1F11                     	;# 
   534  1F12                     	;# 
   535  1F14                     	;# 
   536  1F15                     	;# 
   537  1F1C                     	;# 
   538  1F1D                     	;# 
   539  1F1E                     	;# 
   540  1F1F                     	;# 
   541  1F20                     	;# 
   542  1F21                     	;# 
   543  1F22                     	;# 
   544  1F23                     	;# 
   545  1F24                     	;# 
   546  1F25                     	;# 
   547  1F26                     	;# 
   548  1F27                     	;# 
   549  1F38                     	;# 
   550  1F39                     	;# 
   551  1F3A                     	;# 
   552  1F3B                     	;# 
   553  1F3C                     	;# 
   554  1F3D                     	;# 
   555  1F3E                     	;# 
   556  1F3F                     	;# 
   557  1F43                     	;# 
   558  1F44                     	;# 
   559  1F45                     	;# 
   560  1F46                     	;# 
   561  1F47                     	;# 
   562  1F48                     	;# 
   563  1F49                     	;# 
   564  1F4A                     	;# 
   565  1F4E                     	;# 
   566  1F4F                     	;# 
   567  1F50                     	;# 
   568  1F51                     	;# 
   569  1F52                     	;# 
   570  1F53                     	;# 
   571  1F54                     	;# 
   572  1F55                     	;# 
   573  1FE4                     	;# 
   574  1FE5                     	;# 
   575  1FE6                     	;# 
   576  1FE7                     	;# 
   577  1FE8                     	;# 
   578  1FE8                     	;# 
   579  1FE9                     	;# 
   580  1FEA                     	;# 
   581  1FEB                     	;# 
   582  1FED                     	;# 
   583  1FEE                     	;# 
   584  1FEF                     	;# 
   585  0000                     	;# 
   586  0001                     	;# 
   587  0002                     	;# 
   588  0003                     	;# 
   589  0004                     	;# 
   590  0005                     	;# 
   591  0006                     	;# 
   592  0007                     	;# 
   593  0008                     	;# 
   594  0009                     	;# 
   595  000A                     	;# 
   596  000B                     	;# 
   597  000C                     	;# 
   598  000D                     	;# 
   599  000E                     	;# 
   600  0012                     	;# 
   601  0013                     	;# 
   602  0014                     	;# 
   603  0018                     	;# 
   604  0019                     	;# 
   605  001A                     	;# 
   606  008C                     	;# 
   607  008C                     	;# 
   608  008D                     	;# 
   609  008E                     	;# 
   610  008E                     	;# 
   611  008F                     	;# 
   612  0090                     	;# 
   613  0090                     	;# 
   614  0091                     	;# 
   615  0092                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0094                     	;# 
   619  0094                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009B                     	;# 
   629  009C                     	;# 
   630  009D                     	;# 
   631  009D                     	;# 
   632  009E                     	;# 
   633  009F                     	;# 
   634  010C                     	;# 
   635  010C                     	;# 
   636  010D                     	;# 
   637  010E                     	;# 
   638  010F                     	;# 
   639  010F                     	;# 
   640  0110                     	;# 
   641  0111                     	;# 
   642  0112                     	;# 
   643  0113                     	;# 
   644  0114                     	;# 
   645  0115                     	;# 
   646  0116                     	;# 
   647  0117                     	;# 
   648  0118                     	;# 
   649  0119                     	;# 
   650  0119                     	;# 
   651  0119                     	;# 
   652  011A                     	;# 
   653  011A                     	;# 
   654  011A                     	;# 
   655  011B                     	;# 
   656  011B                     	;# 
   657  011B                     	;# 
   658  011B                     	;# 
   659  011B                     	;# 
   660  011C                     	;# 
   661  011C                     	;# 
   662  011C                     	;# 
   663  011D                     	;# 
   664  011D                     	;# 
   665  011D                     	;# 
   666  011E                     	;# 
   667  011E                     	;# 
   668  011E                     	;# 
   669  011F                     	;# 
   670  011F                     	;# 
   671  011F                     	;# 
   672  011F                     	;# 
   673  011F                     	;# 
   674  018C                     	;# 
   675  018D                     	;# 
   676  018E                     	;# 
   677  018F                     	;# 
   678  0190                     	;# 
   679  0191                     	;# 
   680  0192                     	;# 
   681  0196                     	;# 
   682  0197                     	;# 
   683  0198                     	;# 
   684  0199                     	;# 
   685  019A                     	;# 
   686  019B                     	;# 
   687  019C                     	;# 
   688  020C                     	;# 
   689  020D                     	;# 
   690  020E                     	;# 
   691  020E                     	;# 
   692  020F                     	;# 
   693  020F                     	;# 
   694  0210                     	;# 
   695  0210                     	;# 
   696  0211                     	;# 
   697  0211                     	;# 
   698  0212                     	;# 
   699  0213                     	;# 
   700  0214                     	;# 
   701  0214                     	;# 
   702  0215                     	;# 
   703  0215                     	;# 
   704  0216                     	;# 
   705  0216                     	;# 
   706  0217                     	;# 
   707  0217                     	;# 
   708  0218                     	;# 
   709  0219                     	;# 
   710  021A                     	;# 
   711  021A                     	;# 
   712  021B                     	;# 
   713  021B                     	;# 
   714  021C                     	;# 
   715  021C                     	;# 
   716  021D                     	;# 
   717  021D                     	;# 
   718  021E                     	;# 
   719  021F                     	;# 
   720  028C                     	;# 
   721  028C                     	;# 
   722  028D                     	;# 
   723  028D                     	;# 
   724  028E                     	;# 
   725  028F                     	;# 
   726  0290                     	;# 
   727  0291                     	;# 
   728  0292                     	;# 
   729  0292                     	;# 
   730  0293                     	;# 
   731  0293                     	;# 
   732  0294                     	;# 
   733  0295                     	;# 
   734  0296                     	;# 
   735  0297                     	;# 
   736  0298                     	;# 
   737  0298                     	;# 
   738  0299                     	;# 
   739  0299                     	;# 
   740  029A                     	;# 
   741  029B                     	;# 
   742  029C                     	;# 
   743  029D                     	;# 
   744  029F                     	;# 
   745  030C                     	;# 
   746  030C                     	;# 
   747  030D                     	;# 
   748  030E                     	;# 
   749  030F                     	;# 
   750  0310                     	;# 
   751  0310                     	;# 
   752  0311                     	;# 
   753  0312                     	;# 
   754  0313                     	;# 
   755  0314                     	;# 
   756  0314                     	;# 
   757  0315                     	;# 
   758  0316                     	;# 
   759  0317                     	;# 
   760  0318                     	;# 
   761  0318                     	;# 
   762  0319                     	;# 
   763  031A                     	;# 
   764  031B                     	;# 
   765  038C                     	;# 
   766  038C                     	;# 
   767  038D                     	;# 
   768  038E                     	;# 
   769  0390                     	;# 
   770  0390                     	;# 
   771  0391                     	;# 
   772  0392                     	;# 
   773  048C                     	;# 
   774  048C                     	;# 
   775  048D                     	;# 
   776  048E                     	;# 
   777  048F                     	;# 
   778  048F                     	;# 
   779  0490                     	;# 
   780  0491                     	;# 
   781  0492                     	;# 
   782  0492                     	;# 
   783  0493                     	;# 
   784  0494                     	;# 
   785  0495                     	;# 
   786  0495                     	;# 
   787  0496                     	;# 
   788  0497                     	;# 
   789  0498                     	;# 
   790  0499                     	;# 
   791  049A                     	;# 
   792  049B                     	;# 
   793  049C                     	;# 
   794  049D                     	;# 
   795  058C                     	;# 
   796  058C                     	;# 
   797  058D                     	;# 
   798  058E                     	;# 
   799  058F                     	;# 
   800  058F                     	;# 
   801  0590                     	;# 
   802  0591                     	;# 
   803  0592                     	;# 
   804  0593                     	;# 
   805  059C                     	;# 
   806  059C                     	;# 
   807  059D                     	;# 
   808  059D                     	;# 
   809  059E                     	;# 
   810  059F                     	;# 
   811  060C                     	;# 
   812  060C                     	;# 
   813  060D                     	;# 
   814  060D                     	;# 
   815  060E                     	;# 
   816  060F                     	;# 
   817  0610                     	;# 
   818  0611                     	;# 
   819  0612                     	;# 
   820  0613                     	;# 
   821  0614                     	;# 
   822  0616                     	;# 
   823  0616                     	;# 
   824  0617                     	;# 
   825  0617                     	;# 
   826  0618                     	;# 
   827  0619                     	;# 
   828  061A                     	;# 
   829  061B                     	;# 
   830  061C                     	;# 
   831  061D                     	;# 
   832  061E                     	;# 
   833  070C                     	;# 
   834  070D                     	;# 
   835  070E                     	;# 
   836  070F                     	;# 
   837  0710                     	;# 
   838  0711                     	;# 
   839  0712                     	;# 
   840  0713                     	;# 
   841  0714                     	;# 
   842  0716                     	;# 
   843  0717                     	;# 
   844  0718                     	;# 
   845  0719                     	;# 
   846  071A                     	;# 
   847  071B                     	;# 
   848  071C                     	;# 
   849  071D                     	;# 
   850  071E                     	;# 
   851  0796                     	;# 
   852  0797                     	;# 
   853  0798                     	;# 
   854  0799                     	;# 
   855  079A                     	;# 
   856  079B                     	;# 
   857  079C                     	;# 
   858  079D                     	;# 
   859  080C                     	;# 
   860  080D                     	;# 
   861  080E                     	;# 
   862  080F                     	;# 
   863  0810                     	;# 
   864  0811                     	;# 
   865  0812                     	;# 
   866  0813                     	;# 
   867  0814                     	;# 
   868  081A                     	;# 
   869  081A                     	;# 
   870  081B                     	;# 
   871  081C                     	;# 
   872  081C                     	;# 
   873  081D                     	;# 
   874  081E                     	;# 
   875  081F                     	;# 
   876  088C                     	;# 
   877  088D                     	;# 
   878  088E                     	;# 
   879  088F                     	;# 
   880  0890                     	;# 
   881  0891                     	;# 
   882  0892                     	;# 
   883  0893                     	;# 
   884  0895                     	;# 
   885  0896                     	;# 
   886  0897                     	;# 
   887  0898                     	;# 
   888  0899                     	;# 
   889  089A                     	;# 
   890  089B                     	;# 
   891  090C                     	;# 
   892  090E                     	;# 
   893  090F                     	;# 
   894  091F                     	;# 
   895  098F                     	;# 
   896  098F                     	;# 
   897  0990                     	;# 
   898  0991                     	;# 
   899  0992                     	;# 
   900  0993                     	;# 
   901  0994                     	;# 
   902  0995                     	;# 
   903  0996                     	;# 
   904  0997                     	;# 
   905  1E0F                     	;# 
   906  1E10                     	;# 
   907  1E11                     	;# 
   908  1E12                     	;# 
   909  1E13                     	;# 
   910  1E14                     	;# 
   911  1E15                     	;# 
   912  1E16                     	;# 
   913  1E17                     	;# 
   914  1E18                     	;# 
   915  1E19                     	;# 
   916  1E1A                     	;# 
   917  1E1B                     	;# 
   918  1E1C                     	;# 
   919  1E1D                     	;# 
   920  1E1E                     	;# 
   921  1E1F                     	;# 
   922  1E20                     	;# 
   923  1E21                     	;# 
   924  1E22                     	;# 
   925  1E23                     	;# 
   926  1E24                     	;# 
   927  1E25                     	;# 
   928  1E26                     	;# 
   929  1E27                     	;# 
   930  1E28                     	;# 
   931  1E29                     	;# 
   932  1E2A                     	;# 
   933  1E2B                     	;# 
   934  1E2C                     	;# 
   935  1E2D                     	;# 
   936  1E2E                     	;# 
   937  1E2F                     	;# 
   938  1E30                     	;# 
   939  1E31                     	;# 
   940  1E32                     	;# 
   941  1E33                     	;# 
   942  1E34                     	;# 
   943  1E35                     	;# 
   944  1E36                     	;# 
   945  1E37                     	;# 
   946  1E8F                     	;# 
   947  1E90                     	;# 
   948  1E91                     	;# 
   949  1E92                     	;# 
   950  1E93                     	;# 
   951  1E94                     	;# 
   952  1E95                     	;# 
   953  1E96                     	;# 
   954  1E97                     	;# 
   955  1E9C                     	;# 
   956  1E9D                     	;# 
   957  1E9E                     	;# 
   958  1EA1                     	;# 
   959  1EA2                     	;# 
   960  1EA3                     	;# 
   961  1EA4                     	;# 
   962  1EA9                     	;# 
   963  1EAA                     	;# 
   964  1EB1                     	;# 
   965  1EB2                     	;# 
   966  1EB8                     	;# 
   967  1EB9                     	;# 
   968  1EBA                     	;# 
   969  1EBB                     	;# 
   970  1EBC                     	;# 
   971  1EBD                     	;# 
   972  1EBE                     	;# 
   973  1EC3                     	;# 
   974  1EC5                     	;# 
   975  1EC6                     	;# 
   976  1EC7                     	;# 
   977  1EC8                     	;# 
   978  1EC9                     	;# 
   979  1ECA                     	;# 
   980  1ECB                     	;# 
   981  1ECB                     	;# 
   982  1ECB                     	;# 
   983  1ECC                     	;# 
   984  1ECC                     	;# 
   985  1ECC                     	;# 
   986  1F10                     	;# 
   987  1F11                     	;# 
   988  1F12                     	;# 
   989  1F14                     	;# 
   990  1F15                     	;# 
   991  1F1C                     	;# 
   992  1F1D                     	;# 
   993  1F1E                     	;# 
   994  1F1F                     	;# 
   995  1F20                     	;# 
   996  1F21                     	;# 
   997  1F22                     	;# 
   998  1F23                     	;# 
   999  1F24                     	;# 
  1000  1F25                     	;# 
  1001  1F26                     	;# 
  1002  1F27                     	;# 
  1003  1F38                     	;# 
  1004  1F39                     	;# 
  1005  1F3A                     	;# 
  1006  1F3B                     	;# 
  1007  1F3C                     	;# 
  1008  1F3D                     	;# 
  1009  1F3E                     	;# 
  1010  1F3F                     	;# 
  1011  1F43                     	;# 
  1012  1F44                     	;# 
  1013  1F45                     	;# 
  1014  1F46                     	;# 
  1015  1F47                     	;# 
  1016  1F48                     	;# 
  1017  1F49                     	;# 
  1018  1F4A                     	;# 
  1019  1F4E                     	;# 
  1020  1F4F                     	;# 
  1021  1F50                     	;# 
  1022  1F51                     	;# 
  1023  1F52                     	;# 
  1024  1F53                     	;# 
  1025  1F54                     	;# 
  1026  1F55                     	;# 
  1027  1FE4                     	;# 
  1028  1FE5                     	;# 
  1029  1FE6                     	;# 
  1030  1FE7                     	;# 
  1031  1FE8                     	;# 
  1032  1FE8                     	;# 
  1033  1FE9                     	;# 
  1034  1FEA                     	;# 
  1035  1FEB                     	;# 
  1036  1FED                     	;# 
  1037  1FEE                     	;# 
  1038  1FEF                     	;# 
  1039  0000                     	;# 
  1040  0001                     	;# 
  1041  0002                     	;# 
  1042  0003                     	;# 
  1043  0004                     	;# 
  1044  0005                     	;# 
  1045  0006                     	;# 
  1046  0007                     	;# 
  1047  0008                     	;# 
  1048  0009                     	;# 
  1049  000A                     	;# 
  1050  000B                     	;# 
  1051  000C                     	;# 
  1052  000D                     	;# 
  1053  000E                     	;# 
  1054  0012                     	;# 
  1055  0013                     	;# 
  1056  0014                     	;# 
  1057  0018                     	;# 
  1058  0019                     	;# 
  1059  001A                     	;# 
  1060  008C                     	;# 
  1061  008C                     	;# 
  1062  008D                     	;# 
  1063  008E                     	;# 
  1064  008E                     	;# 
  1065  008F                     	;# 
  1066  0090                     	;# 
  1067  0090                     	;# 
  1068  0091                     	;# 
  1069  0092                     	;# 
  1070  0092                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0094                     	;# 
  1074  0095                     	;# 
  1075  0096                     	;# 
  1076  0096                     	;# 
  1077  0097                     	;# 
  1078  0098                     	;# 
  1079  0099                     	;# 
  1080  009A                     	;# 
  1081  009B                     	;# 
  1082  009B                     	;# 
  1083  009C                     	;# 
  1084  009D                     	;# 
  1085  009D                     	;# 
  1086  009E                     	;# 
  1087  009F                     	;# 
  1088  010C                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  010E                     	;# 
  1092  010F                     	;# 
  1093  010F                     	;# 
  1094  0110                     	;# 
  1095  0111                     	;# 
  1096  0112                     	;# 
  1097  0113                     	;# 
  1098  0114                     	;# 
  1099  0115                     	;# 
  1100  0116                     	;# 
  1101  0117                     	;# 
  1102  0118                     	;# 
  1103  0119                     	;# 
  1104  0119                     	;# 
  1105  0119                     	;# 
  1106  011A                     	;# 
  1107  011A                     	;# 
  1108  011A                     	;# 
  1109  011B                     	;# 
  1110  011B                     	;# 
  1111  011B                     	;# 
  1112  011B                     	;# 
  1113  011B                     	;# 
  1114  011C                     	;# 
  1115  011C                     	;# 
  1116  011C                     	;# 
  1117  011D                     	;# 
  1118  011D                     	;# 
  1119  011D                     	;# 
  1120  011E                     	;# 
  1121  011E                     	;# 
  1122  011E                     	;# 
  1123  011F                     	;# 
  1124  011F                     	;# 
  1125  011F                     	;# 
  1126  011F                     	;# 
  1127  011F                     	;# 
  1128  018C                     	;# 
  1129  018D                     	;# 
  1130  018E                     	;# 
  1131  018F                     	;# 
  1132  0190                     	;# 
  1133  0191                     	;# 
  1134  0192                     	;# 
  1135  0196                     	;# 
  1136  0197                     	;# 
  1137  0198                     	;# 
  1138  0199                     	;# 
  1139  019A                     	;# 
  1140  019B                     	;# 
  1141  019C                     	;# 
  1142  020C                     	;# 
  1143  020D                     	;# 
  1144  020E                     	;# 
  1145  020E                     	;# 
  1146  020F                     	;# 
  1147  020F                     	;# 
  1148  0210                     	;# 
  1149  0210                     	;# 
  1150  0211                     	;# 
  1151  0211                     	;# 
  1152  0212                     	;# 
  1153  0213                     	;# 
  1154  0214                     	;# 
  1155  0214                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0216                     	;# 
  1159  0216                     	;# 
  1160  0217                     	;# 
  1161  0217                     	;# 
  1162  0218                     	;# 
  1163  0219                     	;# 
  1164  021A                     	;# 
  1165  021A                     	;# 
  1166  021B                     	;# 
  1167  021B                     	;# 
  1168  021C                     	;# 
  1169  021C                     	;# 
  1170  021D                     	;# 
  1171  021D                     	;# 
  1172  021E                     	;# 
  1173  021F                     	;# 
  1174  028C                     	;# 
  1175  028C                     	;# 
  1176  028D                     	;# 
  1177  028D                     	;# 
  1178  028E                     	;# 
  1179  028F                     	;# 
  1180  0290                     	;# 
  1181  0291                     	;# 
  1182  0292                     	;# 
  1183  0292                     	;# 
  1184  0293                     	;# 
  1185  0293                     	;# 
  1186  0294                     	;# 
  1187  0295                     	;# 
  1188  0296                     	;# 
  1189  0297                     	;# 
  1190  0298                     	;# 
  1191  0298                     	;# 
  1192  0299                     	;# 
  1193  0299                     	;# 
  1194  029A                     	;# 
  1195  029B                     	;# 
  1196  029C                     	;# 
  1197  029D                     	;# 
  1198  029F                     	;# 
  1199  030C                     	;# 
  1200  030C                     	;# 
  1201  030D                     	;# 
  1202  030E                     	;# 
  1203  030F                     	;# 
  1204  0310                     	;# 
  1205  0310                     	;# 
  1206  0311                     	;# 
  1207  0312                     	;# 
  1208  0313                     	;# 
  1209  0314                     	;# 
  1210  0314                     	;# 
  1211  0315                     	;# 
  1212  0316                     	;# 
  1213  0317                     	;# 
  1214  0318                     	;# 
  1215  0318                     	;# 
  1216  0319                     	;# 
  1217  031A                     	;# 
  1218  031B                     	;# 
  1219  038C                     	;# 
  1220  038C                     	;# 
  1221  038D                     	;# 
  1222  038E                     	;# 
  1223  0390                     	;# 
  1224  0390                     	;# 
  1225  0391                     	;# 
  1226  0392                     	;# 
  1227  048C                     	;# 
  1228  048C                     	;# 
  1229  048D                     	;# 
  1230  048E                     	;# 
  1231  048F                     	;# 
  1232  048F                     	;# 
  1233  0490                     	;# 
  1234  0491                     	;# 
  1235  0492                     	;# 
  1236  0492                     	;# 
  1237  0493                     	;# 
  1238  0494                     	;# 
  1239  0495                     	;# 
  1240  0495                     	;# 
  1241  0496                     	;# 
  1242  0497                     	;# 
  1243  0498                     	;# 
  1244  0499                     	;# 
  1245  049A                     	;# 
  1246  049B                     	;# 
  1247  049C                     	;# 
  1248  049D                     	;# 
  1249  058C                     	;# 
  1250  058C                     	;# 
  1251  058D                     	;# 
  1252  058E                     	;# 
  1253  058F                     	;# 
  1254  058F                     	;# 
  1255  0590                     	;# 
  1256  0591                     	;# 
  1257  0592                     	;# 
  1258  0593                     	;# 
  1259  059C                     	;# 
  1260  059C                     	;# 
  1261  059D                     	;# 
  1262  059D                     	;# 
  1263  059E                     	;# 
  1264  059F                     	;# 
  1265  060C                     	;# 
  1266  060C                     	;# 
  1267  060D                     	;# 
  1268  060D                     	;# 
  1269  060E                     	;# 
  1270  060F                     	;# 
  1271  0610                     	;# 
  1272  0611                     	;# 
  1273  0612                     	;# 
  1274  0613                     	;# 
  1275  0614                     	;# 
  1276  0616                     	;# 
  1277  0616                     	;# 
  1278  0617                     	;# 
  1279  0617                     	;# 
  1280  0618                     	;# 
  1281  0619                     	;# 
  1282  061A                     	;# 
  1283  061B                     	;# 
  1284  061C                     	;# 
  1285  061D                     	;# 
  1286  061E                     	;# 
  1287  070C                     	;# 
  1288  070D                     	;# 
  1289  070E                     	;# 
  1290  070F                     	;# 
  1291  0710                     	;# 
  1292  0711                     	;# 
  1293  0712                     	;# 
  1294  0713                     	;# 
  1295  0714                     	;# 
  1296  0716                     	;# 
  1297  0717                     	;# 
  1298  0718                     	;# 
  1299  0719                     	;# 
  1300  071A                     	;# 
  1301  071B                     	;# 
  1302  071C                     	;# 
  1303  071D                     	;# 
  1304  071E                     	;# 
  1305  0796                     	;# 
  1306  0797                     	;# 
  1307  0798                     	;# 
  1308  0799                     	;# 
  1309  079A                     	;# 
  1310  079B                     	;# 
  1311  079C                     	;# 
  1312  079D                     	;# 
  1313  080C                     	;# 
  1314  080D                     	;# 
  1315  080E                     	;# 
  1316  080F                     	;# 
  1317  0810                     	;# 
  1318  0811                     	;# 
  1319  0812                     	;# 
  1320  0813                     	;# 
  1321  0814                     	;# 
  1322  081A                     	;# 
  1323  081A                     	;# 
  1324  081B                     	;# 
  1325  081C                     	;# 
  1326  081C                     	;# 
  1327  081D                     	;# 
  1328  081E                     	;# 
  1329  081F                     	;# 
  1330  088C                     	;# 
  1331  088D                     	;# 
  1332  088E                     	;# 
  1333  088F                     	;# 
  1334  0890                     	;# 
  1335  0891                     	;# 
  1336  0892                     	;# 
  1337  0893                     	;# 
  1338  0895                     	;# 
  1339  0896                     	;# 
  1340  0897                     	;# 
  1341  0898                     	;# 
  1342  0899                     	;# 
  1343  089A                     	;# 
  1344  089B                     	;# 
  1345  090C                     	;# 
  1346  090E                     	;# 
  1347  090F                     	;# 
  1348  091F                     	;# 
  1349  098F                     	;# 
  1350  098F                     	;# 
  1351  0990                     	;# 
  1352  0991                     	;# 
  1353  0992                     	;# 
  1354  0993                     	;# 
  1355  0994                     	;# 
  1356  0995                     	;# 
  1357  0996                     	;# 
  1358  0997                     	;# 
  1359  1E0F                     	;# 
  1360  1E10                     	;# 
  1361  1E11                     	;# 
  1362  1E12                     	;# 
  1363  1E13                     	;# 
  1364  1E14                     	;# 
  1365  1E15                     	;# 
  1366  1E16                     	;# 
  1367  1E17                     	;# 
  1368  1E18                     	;# 
  1369  1E19                     	;# 
  1370  1E1A                     	;# 
  1371  1E1B                     	;# 
  1372  1E1C                     	;# 
  1373  1E1D                     	;# 
  1374  1E1E                     	;# 
  1375  1E1F                     	;# 
  1376  1E20                     	;# 
  1377  1E21                     	;# 
  1378  1E22                     	;# 
  1379  1E23                     	;# 
  1380  1E24                     	;# 
  1381  1E25                     	;# 
  1382  1E26                     	;# 
  1383  1E27                     	;# 
  1384  1E28                     	;# 
  1385  1E29                     	;# 
  1386  1E2A                     	;# 
  1387  1E2B                     	;# 
  1388  1E2C                     	;# 
  1389  1E2D                     	;# 
  1390  1E2E                     	;# 
  1391  1E2F                     	;# 
  1392  1E30                     	;# 
  1393  1E31                     	;# 
  1394  1E32                     	;# 
  1395  1E33                     	;# 
  1396  1E34                     	;# 
  1397  1E35                     	;# 
  1398  1E36                     	;# 
  1399  1E37                     	;# 
  1400  1E8F                     	;# 
  1401  1E90                     	;# 
  1402  1E91                     	;# 
  1403  1E92                     	;# 
  1404  1E93                     	;# 
  1405  1E94                     	;# 
  1406  1E95                     	;# 
  1407  1E96                     	;# 
  1408  1E97                     	;# 
  1409  1E9C                     	;# 
  1410  1E9D                     	;# 
  1411  1E9E                     	;# 
  1412  1EA1                     	;# 
  1413  1EA2                     	;# 
  1414  1EA3                     	;# 
  1415  1EA4                     	;# 
  1416  1EA9                     	;# 
  1417  1EAA                     	;# 
  1418  1EB1                     	;# 
  1419  1EB2                     	;# 
  1420  1EB8                     	;# 
  1421  1EB9                     	;# 
  1422  1EBA                     	;# 
  1423  1EBB                     	;# 
  1424  1EBC                     	;# 
  1425  1EBD                     	;# 
  1426  1EBE                     	;# 
  1427  1EC3                     	;# 
  1428  1EC5                     	;# 
  1429  1EC6                     	;# 
  1430  1EC7                     	;# 
  1431  1EC8                     	;# 
  1432  1EC9                     	;# 
  1433  1ECA                     	;# 
  1434  1ECB                     	;# 
  1435  1ECB                     	;# 
  1436  1ECB                     	;# 
  1437  1ECC                     	;# 
  1438  1ECC                     	;# 
  1439  1ECC                     	;# 
  1440  1F10                     	;# 
  1441  1F11                     	;# 
  1442  1F12                     	;# 
  1443  1F14                     	;# 
  1444  1F15                     	;# 
  1445  1F1C                     	;# 
  1446  1F1D                     	;# 
  1447  1F1E                     	;# 
  1448  1F1F                     	;# 
  1449  1F20                     	;# 
  1450  1F21                     	;# 
  1451  1F22                     	;# 
  1452  1F23                     	;# 
  1453  1F24                     	;# 
  1454  1F25                     	;# 
  1455  1F26                     	;# 
  1456  1F27                     	;# 
  1457  1F38                     	;# 
  1458  1F39                     	;# 
  1459  1F3A                     	;# 
  1460  1F3B                     	;# 
  1461  1F3C                     	;# 
  1462  1F3D                     	;# 
  1463  1F3E                     	;# 
  1464  1F3F                     	;# 
  1465  1F43                     	;# 
  1466  1F44                     	;# 
  1467  1F45                     	;# 
  1468  1F46                     	;# 
  1469  1F47                     	;# 
  1470  1F48                     	;# 
  1471  1F49                     	;# 
  1472  1F4A                     	;# 
  1473  1F4E                     	;# 
  1474  1F4F                     	;# 
  1475  1F50                     	;# 
  1476  1F51                     	;# 
  1477  1F52                     	;# 
  1478  1F53                     	;# 
  1479  1F54                     	;# 
  1480  1F55                     	;# 
  1481  1FE4                     	;# 
  1482  1FE5                     	;# 
  1483  1FE6                     	;# 
  1484  1FE7                     	;# 
  1485  1FE8                     	;# 
  1486  1FE8                     	;# 
  1487  1FE9                     	;# 
  1488  1FEA                     	;# 
  1489  1FEB                     	;# 
  1490  1FED                     	;# 
  1491  1FEE                     	;# 
  1492  1FEF                     	;# 
  1493  0000                     	;# 
  1494  0001                     	;# 
  1495  0002                     	;# 
  1496  0003                     	;# 
  1497  0004                     	;# 
  1498  0005                     	;# 
  1499  0006                     	;# 
  1500  0007                     	;# 
  1501  0008                     	;# 
  1502  0009                     	;# 
  1503  000A                     	;# 
  1504  000B                     	;# 
  1505  000C                     	;# 
  1506  000D                     	;# 
  1507  000E                     	;# 
  1508  0012                     	;# 
  1509  0013                     	;# 
  1510  0014                     	;# 
  1511  0018                     	;# 
  1512  0019                     	;# 
  1513  001A                     	;# 
  1514  008C                     	;# 
  1515  008C                     	;# 
  1516  008D                     	;# 
  1517  008E                     	;# 
  1518  008E                     	;# 
  1519  008F                     	;# 
  1520  0090                     	;# 
  1521  0090                     	;# 
  1522  0091                     	;# 
  1523  0092                     	;# 
  1524  0092                     	;# 
  1525  0093                     	;# 
  1526  0094                     	;# 
  1527  0094                     	;# 
  1528  0095                     	;# 
  1529  0096                     	;# 
  1530  0096                     	;# 
  1531  0097                     	;# 
  1532  0098                     	;# 
  1533  0099                     	;# 
  1534  009A                     	;# 
  1535  009B                     	;# 
  1536  009B                     	;# 
  1537  009C                     	;# 
  1538  009D                     	;# 
  1539  009D                     	;# 
  1540  009E                     	;# 
  1541  009F                     	;# 
  1542  010C                     	;# 
  1543  010C                     	;# 
  1544  010D                     	;# 
  1545  010E                     	;# 
  1546  010F                     	;# 
  1547  010F                     	;# 
  1548  0110                     	;# 
  1549  0111                     	;# 
  1550  0112                     	;# 
  1551  0113                     	;# 
  1552  0114                     	;# 
  1553  0115                     	;# 
  1554  0116                     	;# 
  1555  0117                     	;# 
  1556  0118                     	;# 
  1557  0119                     	;# 
  1558  0119                     	;# 
  1559  0119                     	;# 
  1560  011A                     	;# 
  1561  011A                     	;# 
  1562  011A                     	;# 
  1563  011B                     	;# 
  1564  011B                     	;# 
  1565  011B                     	;# 
  1566  011B                     	;# 
  1567  011B                     	;# 
  1568  011C                     	;# 
  1569  011C                     	;# 
  1570  011C                     	;# 
  1571  011D                     	;# 
  1572  011D                     	;# 
  1573  011D                     	;# 
  1574  011E                     	;# 
  1575  011E                     	;# 
  1576  011E                     	;# 
  1577  011F                     	;# 
  1578  011F                     	;# 
  1579  011F                     	;# 
  1580  011F                     	;# 
  1581  011F                     	;# 
  1582  018C                     	;# 
  1583  018D                     	;# 
  1584  018E                     	;# 
  1585  018F                     	;# 
  1586  0190                     	;# 
  1587  0191                     	;# 
  1588  0192                     	;# 
  1589  0196                     	;# 
  1590  0197                     	;# 
  1591  0198                     	;# 
  1592  0199                     	;# 
  1593  019A                     	;# 
  1594  019B                     	;# 
  1595  019C                     	;# 
  1596  020C                     	;# 
  1597  020D                     	;# 
  1598  020E                     	;# 
  1599  020E                     	;# 
  1600  020F                     	;# 
  1601  020F                     	;# 
  1602  0210                     	;# 
  1603  0210                     	;# 
  1604  0211                     	;# 
  1605  0211                     	;# 
  1606  0212                     	;# 
  1607  0213                     	;# 
  1608  0214                     	;# 
  1609  0214                     	;# 
  1610  0215                     	;# 
  1611  0215                     	;# 
  1612  0216                     	;# 
  1613  0216                     	;# 
  1614  0217                     	;# 
  1615  0217                     	;# 
  1616  0218                     	;# 
  1617  0219                     	;# 
  1618  021A                     	;# 
  1619  021A                     	;# 
  1620  021B                     	;# 
  1621  021B                     	;# 
  1622  021C                     	;# 
  1623  021C                     	;# 
  1624  021D                     	;# 
  1625  021D                     	;# 
  1626  021E                     	;# 
  1627  021F                     	;# 
  1628  028C                     	;# 
  1629  028C                     	;# 
  1630  028D                     	;# 
  1631  028D                     	;# 
  1632  028E                     	;# 
  1633  028F                     	;# 
  1634  0290                     	;# 
  1635  0291                     	;# 
  1636  0292                     	;# 
  1637  0292                     	;# 
  1638  0293                     	;# 
  1639  0293                     	;# 
  1640  0294                     	;# 
  1641  0295                     	;# 
  1642  0296                     	;# 
  1643  0297                     	;# 
  1644  0298                     	;# 
  1645  0298                     	;# 
  1646  0299                     	;# 
  1647  0299                     	;# 
  1648  029A                     	;# 
  1649  029B                     	;# 
  1650  029C                     	;# 
  1651  029D                     	;# 
  1652  029F                     	;# 
  1653  030C                     	;# 
  1654  030C                     	;# 
  1655  030D                     	;# 
  1656  030E                     	;# 
  1657  030F                     	;# 
  1658  0310                     	;# 
  1659  0310                     	;# 
  1660  0311                     	;# 
  1661  0312                     	;# 
  1662  0313                     	;# 
  1663  0314                     	;# 
  1664  0314                     	;# 
  1665  0315                     	;# 
  1666  0316                     	;# 
  1667  0317                     	;# 
  1668  0318                     	;# 
  1669  0318                     	;# 
  1670  0319                     	;# 
  1671  031A                     	;# 
  1672  031B                     	;# 
  1673  038C                     	;# 
  1674  038C                     	;# 
  1675  038D                     	;# 
  1676  038E                     	;# 
  1677  0390                     	;# 
  1678  0390                     	;# 
  1679  0391                     	;# 
  1680  0392                     	;# 
  1681  048C                     	;# 
  1682  048C                     	;# 
  1683  048D                     	;# 
  1684  048E                     	;# 
  1685  048F                     	;# 
  1686  048F                     	;# 
  1687  0490                     	;# 
  1688  0491                     	;# 
  1689  0492                     	;# 
  1690  0492                     	;# 
  1691  0493                     	;# 
  1692  0494                     	;# 
  1693  0495                     	;# 
  1694  0495                     	;# 
  1695  0496                     	;# 
  1696  0497                     	;# 
  1697  0498                     	;# 
  1698  0499                     	;# 
  1699  049A                     	;# 
  1700  049B                     	;# 
  1701  049C                     	;# 
  1702  049D                     	;# 
  1703  058C                     	;# 
  1704  058C                     	;# 
  1705  058D                     	;# 
  1706  058E                     	;# 
  1707  058F                     	;# 
  1708  058F                     	;# 
  1709  0590                     	;# 
  1710  0591                     	;# 
  1711  0592                     	;# 
  1712  0593                     	;# 
  1713  059C                     	;# 
  1714  059C                     	;# 
  1715  059D                     	;# 
  1716  059D                     	;# 
  1717  059E                     	;# 
  1718  059F                     	;# 
  1719  060C                     	;# 
  1720  060C                     	;# 
  1721  060D                     	;# 
  1722  060D                     	;# 
  1723  060E                     	;# 
  1724  060F                     	;# 
  1725  0610                     	;# 
  1726  0611                     	;# 
  1727  0612                     	;# 
  1728  0613                     	;# 
  1729  0614                     	;# 
  1730  0616                     	;# 
  1731  0616                     	;# 
  1732  0617                     	;# 
  1733  0617                     	;# 
  1734  0618                     	;# 
  1735  0619                     	;# 
  1736  061A                     	;# 
  1737  061B                     	;# 
  1738  061C                     	;# 
  1739  061D                     	;# 
  1740  061E                     	;# 
  1741  070C                     	;# 
  1742  070D                     	;# 
  1743  070E                     	;# 
  1744  070F                     	;# 
  1745  0710                     	;# 
  1746  0711                     	;# 
  1747  0712                     	;# 
  1748  0713                     	;# 
  1749  0714                     	;# 
  1750  0716                     	;# 
  1751  0717                     	;# 
  1752  0718                     	;# 
  1753  0719                     	;# 
  1754  071A                     	;# 
  1755  071B                     	;# 
  1756  071C                     	;# 
  1757  071D                     	;# 
  1758  071E                     	;# 
  1759  0796                     	;# 
  1760  0797                     	;# 
  1761  0798                     	;# 
  1762  0799                     	;# 
  1763  079A                     	;# 
  1764  079B                     	;# 
  1765  079C                     	;# 
  1766  079D                     	;# 
  1767  080C                     	;# 
  1768  080D                     	;# 
  1769  080E                     	;# 
  1770  080F                     	;# 
  1771  0810                     	;# 
  1772  0811                     	;# 
  1773  0812                     	;# 
  1774  0813                     	;# 
  1775  0814                     	;# 
  1776  081A                     	;# 
  1777  081A                     	;# 
  1778  081B                     	;# 
  1779  081C                     	;# 
  1780  081C                     	;# 
  1781  081D                     	;# 
  1782  081E                     	;# 
  1783  081F                     	;# 
  1784  088C                     	;# 
  1785  088D                     	;# 
  1786  088E                     	;# 
  1787  088F                     	;# 
  1788  0890                     	;# 
  1789  0891                     	;# 
  1790  0892                     	;# 
  1791  0893                     	;# 
  1792  0895                     	;# 
  1793  0896                     	;# 
  1794  0897                     	;# 
  1795  0898                     	;# 
  1796  0899                     	;# 
  1797  089A                     	;# 
  1798  089B                     	;# 
  1799  090C                     	;# 
  1800  090E                     	;# 
  1801  090F                     	;# 
  1802  091F                     	;# 
  1803  098F                     	;# 
  1804  098F                     	;# 
  1805  0990                     	;# 
  1806  0991                     	;# 
  1807  0992                     	;# 
  1808  0993                     	;# 
  1809  0994                     	;# 
  1810  0995                     	;# 
  1811  0996                     	;# 
  1812  0997                     	;# 
  1813  1E0F                     	;# 
  1814  1E10                     	;# 
  1815  1E11                     	;# 
  1816  1E12                     	;# 
  1817  1E13                     	;# 
  1818  1E14                     	;# 
  1819  1E15                     	;# 
  1820  1E16                     	;# 
  1821  1E17                     	;# 
  1822  1E18                     	;# 
  1823  1E19                     	;# 
  1824  1E1A                     	;# 
  1825  1E1B                     	;# 
  1826  1E1C                     	;# 
  1827  1E1D                     	;# 
  1828  1E1E                     	;# 
  1829  1E1F                     	;# 
  1830  1E20                     	;# 
  1831  1E21                     	;# 
  1832  1E22                     	;# 
  1833  1E23                     	;# 
  1834  1E24                     	;# 
  1835  1E25                     	;# 
  1836  1E26                     	;# 
  1837  1E27                     	;# 
  1838  1E28                     	;# 
  1839  1E29                     	;# 
  1840  1E2A                     	;# 
  1841  1E2B                     	;# 
  1842  1E2C                     	;# 
  1843  1E2D                     	;# 
  1844  1E2E                     	;# 
  1845  1E2F                     	;# 
  1846  1E30                     	;# 
  1847  1E31                     	;# 
  1848  1E32                     	;# 
  1849  1E33                     	;# 
  1850  1E34                     	;# 
  1851  1E35                     	;# 
  1852  1E36                     	;# 
  1853  1E37                     	;# 
  1854  1E8F                     	;# 
  1855  1E90                     	;# 
  1856  1E91                     	;# 
  1857  1E92                     	;# 
  1858  1E93                     	;# 
  1859  1E94                     	;# 
  1860  1E95                     	;# 
  1861  1E96                     	;# 
  1862  1E97                     	;# 
  1863  1E9C                     	;# 
  1864  1E9D                     	;# 
  1865  1E9E                     	;# 
  1866  1EA1                     	;# 
  1867  1EA2                     	;# 
  1868  1EA3                     	;# 
  1869  1EA4                     	;# 
  1870  1EA9                     	;# 
  1871  1EAA                     	;# 
  1872  1EB1                     	;# 
  1873  1EB2                     	;# 
  1874  1EB8                     	;# 
  1875  1EB9                     	;# 
  1876  1EBA                     	;# 
  1877  1EBB                     	;# 
  1878  1EBC                     	;# 
  1879  1EBD                     	;# 
  1880  1EBE                     	;# 
  1881  1EC3                     	;# 
  1882  1EC5                     	;# 
  1883  1EC6                     	;# 
  1884  1EC7                     	;# 
  1885  1EC8                     	;# 
  1886  1EC9                     	;# 
  1887  1ECA                     	;# 
  1888  1ECB                     	;# 
  1889  1ECB                     	;# 
  1890  1ECB                     	;# 
  1891  1ECC                     	;# 
  1892  1ECC                     	;# 
  1893  1ECC                     	;# 
  1894  1F10                     	;# 
  1895  1F11                     	;# 
  1896  1F12                     	;# 
  1897  1F14                     	;# 
  1898  1F15                     	;# 
  1899  1F1C                     	;# 
  1900  1F1D                     	;# 
  1901  1F1E                     	;# 
  1902  1F1F                     	;# 
  1903  1F20                     	;# 
  1904  1F21                     	;# 
  1905  1F22                     	;# 
  1906  1F23                     	;# 
  1907  1F24                     	;# 
  1908  1F25                     	;# 
  1909  1F26                     	;# 
  1910  1F27                     	;# 
  1911  1F38                     	;# 
  1912  1F39                     	;# 
  1913  1F3A                     	;# 
  1914  1F3B                     	;# 
  1915  1F3C                     	;# 
  1916  1F3D                     	;# 
  1917  1F3E                     	;# 
  1918  1F3F                     	;# 
  1919  1F43                     	;# 
  1920  1F44                     	;# 
  1921  1F45                     	;# 
  1922  1F46                     	;# 
  1923  1F47                     	;# 
  1924  1F48                     	;# 
  1925  1F49                     	;# 
  1926  1F4A                     	;# 
  1927  1F4E                     	;# 
  1928  1F4F                     	;# 
  1929  1F50                     	;# 
  1930  1F51                     	;# 
  1931  1F52                     	;# 
  1932  1F53                     	;# 
  1933  1F54                     	;# 
  1934  1F55                     	;# 
  1935  1FE4                     	;# 
  1936  1FE5                     	;# 
  1937  1FE6                     	;# 
  1938  1FE7                     	;# 
  1939  1FE8                     	;# 
  1940  1FE8                     	;# 
  1941  1FE9                     	;# 
  1942  1FEA                     	;# 
  1943  1FEB                     	;# 
  1944  1FED                     	;# 
  1945  1FEE                     	;# 
  1946  1FEF                     	;# 
  1947  0000                     	;# 
  1948  0001                     	;# 
  1949  0002                     	;# 
  1950  0003                     	;# 
  1951  0004                     	;# 
  1952  0005                     	;# 
  1953  0006                     	;# 
  1954  0007                     	;# 
  1955  0008                     	;# 
  1956  0009                     	;# 
  1957  000A                     	;# 
  1958  000B                     	;# 
  1959  000C                     	;# 
  1960  000D                     	;# 
  1961  000E                     	;# 
  1962  0012                     	;# 
  1963  0013                     	;# 
  1964  0014                     	;# 
  1965  0018                     	;# 
  1966  0019                     	;# 
  1967  001A                     	;# 
  1968  008C                     	;# 
  1969  008C                     	;# 
  1970  008D                     	;# 
  1971  008E                     	;# 
  1972  008E                     	;# 
  1973  008F                     	;# 
  1974  0090                     	;# 
  1975  0090                     	;# 
  1976  0091                     	;# 
  1977  0092                     	;# 
  1978  0092                     	;# 
  1979  0093                     	;# 
  1980  0094                     	;# 
  1981  0094                     	;# 
  1982  0095                     	;# 
  1983  0096                     	;# 
  1984  0096                     	;# 
  1985  0097                     	;# 
  1986  0098                     	;# 
  1987  0099                     	;# 
  1988  009A                     	;# 
  1989  009B                     	;# 
  1990  009B                     	;# 
  1991  009C                     	;# 
  1992  009D                     	;# 
  1993  009D                     	;# 
  1994  009E                     	;# 
  1995  009F                     	;# 
  1996  010C                     	;# 
  1997  010C                     	;# 
  1998  010D                     	;# 
  1999  010E                     	;# 
  2000  010F                     	;# 
  2001  010F                     	;# 
  2002  0110                     	;# 
  2003  0111                     	;# 
  2004  0112                     	;# 
  2005  0113                     	;# 
  2006  0114                     	;# 
  2007  0115                     	;# 
  2008  0116                     	;# 
  2009  0117                     	;# 
  2010  0118                     	;# 
  2011  0119                     	;# 
  2012  0119                     	;# 
  2013  0119                     	;# 
  2014  011A                     	;# 
  2015  011A                     	;# 
  2016  011A                     	;# 
  2017  011B                     	;# 
  2018  011B                     	;# 
  2019  011B                     	;# 
  2020  011B                     	;# 
  2021  011B                     	;# 
  2022  011C                     	;# 
  2023  011C                     	;# 
  2024  011C                     	;# 
  2025  011D                     	;# 
  2026  011D                     	;# 
  2027  011D                     	;# 
  2028  011E                     	;# 
  2029  011E                     	;# 
  2030  011E                     	;# 
  2031  011F                     	;# 
  2032  011F                     	;# 
  2033  011F                     	;# 
  2034  011F                     	;# 
  2035  011F                     	;# 
  2036  018C                     	;# 
  2037  018D                     	;# 
  2038  018E                     	;# 
  2039  018F                     	;# 
  2040  0190                     	;# 
  2041  0191                     	;# 
  2042  0192                     	;# 
  2043  0196                     	;# 
  2044  0197                     	;# 
  2045  0198                     	;# 
  2046  0199                     	;# 
  2047  019A                     	;# 
  2048  019B                     	;# 
  2049  019C                     	;# 
  2050  020C                     	;# 
  2051  020D                     	;# 
  2052  020E                     	;# 
  2053  020E                     	;# 
  2054  020F                     	;# 
  2055  020F                     	;# 
  2056  0210                     	;# 
  2057  0210                     	;# 
  2058  0211                     	;# 
  2059  0211                     	;# 
  2060  0212                     	;# 
  2061  0213                     	;# 
  2062  0214                     	;# 
  2063  0214                     	;# 
  2064  0215                     	;# 
  2065  0215                     	;# 
  2066  0216                     	;# 
  2067  0216                     	;# 
  2068  0217                     	;# 
  2069  0217                     	;# 
  2070  0218                     	;# 
  2071  0219                     	;# 
  2072  021A                     	;# 
  2073  021A                     	;# 
  2074  021B                     	;# 
  2075  021B                     	;# 
  2076  021C                     	;# 
  2077  021C                     	;# 
  2078  021D                     	;# 
  2079  021D                     	;# 
  2080  021E                     	;# 
  2081  021F                     	;# 
  2082  028C                     	;# 
  2083  028C                     	;# 
  2084  028D                     	;# 
  2085  028D                     	;# 
  2086  028E                     	;# 
  2087  028F                     	;# 
  2088  0290                     	;# 
  2089  0291                     	;# 
  2090  0292                     	;# 
  2091  0292                     	;# 
  2092  0293                     	;# 
  2093  0293                     	;# 
  2094  0294                     	;# 
  2095  0295                     	;# 
  2096  0296                     	;# 
  2097  0297                     	;# 
  2098  0298                     	;# 
  2099  0298                     	;# 
  2100  0299                     	;# 
  2101  0299                     	;# 
  2102  029A                     	;# 
  2103  029B                     	;# 
  2104  029C                     	;# 
  2105  029D                     	;# 
  2106  029F                     	;# 
  2107  030C                     	;# 
  2108  030C                     	;# 
  2109  030D                     	;# 
  2110  030E                     	;# 
  2111  030F                     	;# 
  2112  0310                     	;# 
  2113  0310                     	;# 
  2114  0311                     	;# 
  2115  0312                     	;# 
  2116  0313                     	;# 
  2117  0314                     	;# 
  2118  0314                     	;# 
  2119  0315                     	;# 
  2120  0316                     	;# 
  2121  0317                     	;# 
  2122  0318                     	;# 
  2123  0318                     	;# 
  2124  0319                     	;# 
  2125  031A                     	;# 
  2126  031B                     	;# 
  2127  038C                     	;# 
  2128  038C                     	;# 
  2129  038D                     	;# 
  2130  038E                     	;# 
  2131  0390                     	;# 
  2132  0390                     	;# 
  2133  0391                     	;# 
  2134  0392                     	;# 
  2135  048C                     	;# 
  2136  048C                     	;# 
  2137  048D                     	;# 
  2138  048E                     	;# 
  2139  048F                     	;# 
  2140  048F                     	;# 
  2141  0490                     	;# 
  2142  0491                     	;# 
  2143  0492                     	;# 
  2144  0492                     	;# 
  2145  0493                     	;# 
  2146  0494                     	;# 
  2147  0495                     	;# 
  2148  0495                     	;# 
  2149  0496                     	;# 
  2150  0497                     	;# 
  2151  0498                     	;# 
  2152  0499                     	;# 
  2153  049A                     	;# 
  2154  049B                     	;# 
  2155  049C                     	;# 
  2156  049D                     	;# 
  2157  058C                     	;# 
  2158  058C                     	;# 
  2159  058D                     	;# 
  2160  058E                     	;# 
  2161  058F                     	;# 
  2162  058F                     	;# 
  2163  0590                     	;# 
  2164  0591                     	;# 
  2165  0592                     	;# 
  2166  0593                     	;# 
  2167  059C                     	;# 
  2168  059C                     	;# 
  2169  059D                     	;# 
  2170  059D                     	;# 
  2171  059E                     	;# 
  2172  059F                     	;# 
  2173  060C                     	;# 
  2174  060C                     	;# 
  2175  060D                     	;# 
  2176  060D                     	;# 
  2177  060E                     	;# 
  2178  060F                     	;# 
  2179  0610                     	;# 
  2180  0611                     	;# 
  2181  0612                     	;# 
  2182  0613                     	;# 
  2183  0614                     	;# 
  2184  0616                     	;# 
  2185  0616                     	;# 
  2186  0617                     	;# 
  2187  0617                     	;# 
  2188  0618                     	;# 
  2189  0619                     	;# 
  2190  061A                     	;# 
  2191  061B                     	;# 
  2192  061C                     	;# 
  2193  061D                     	;# 
  2194  061E                     	;# 
  2195  070C                     	;# 
  2196  070D                     	;# 
  2197  070E                     	;# 
  2198  070F                     	;# 
  2199  0710                     	;# 
  2200  0711                     	;# 
  2201  0712                     	;# 
  2202  0713                     	;# 
  2203  0714                     	;# 
  2204  0716                     	;# 
  2205  0717                     	;# 
  2206  0718                     	;# 
  2207  0719                     	;# 
  2208  071A                     	;# 
  2209  071B                     	;# 
  2210  071C                     	;# 
  2211  071D                     	;# 
  2212  071E                     	;# 
  2213  0796                     	;# 
  2214  0797                     	;# 
  2215  0798                     	;# 
  2216  0799                     	;# 
  2217  079A                     	;# 
  2218  079B                     	;# 
  2219  079C                     	;# 
  2220  079D                     	;# 
  2221  080C                     	;# 
  2222  080D                     	;# 
  2223  080E                     	;# 
  2224  080F                     	;# 
  2225  0810                     	;# 
  2226  0811                     	;# 
  2227  0812                     	;# 
  2228  0813                     	;# 
  2229  0814                     	;# 
  2230  081A                     	;# 
  2231  081A                     	;# 
  2232  081B                     	;# 
  2233  081C                     	;# 
  2234  081C                     	;# 
  2235  081D                     	;# 
  2236  081E                     	;# 
  2237  081F                     	;# 
  2238  088C                     	;# 
  2239  088D                     	;# 
  2240  088E                     	;# 
  2241  088F                     	;# 
  2242  0890                     	;# 
  2243  0891                     	;# 
  2244  0892                     	;# 
  2245  0893                     	;# 
  2246  0895                     	;# 
  2247  0896                     	;# 
  2248  0897                     	;# 
  2249  0898                     	;# 
  2250  0899                     	;# 
  2251  089A                     	;# 
  2252  089B                     	;# 
  2253  090C                     	;# 
  2254  090E                     	;# 
  2255  090F                     	;# 
  2256  091F                     	;# 
  2257  098F                     	;# 
  2258  098F                     	;# 
  2259  0990                     	;# 
  2260  0991                     	;# 
  2261  0992                     	;# 
  2262  0993                     	;# 
  2263  0994                     	;# 
  2264  0995                     	;# 
  2265  0996                     	;# 
  2266  0997                     	;# 
  2267  1E0F                     	;# 
  2268  1E10                     	;# 
  2269  1E11                     	;# 
  2270  1E12                     	;# 
  2271  1E13                     	;# 
  2272  1E14                     	;# 
  2273  1E15                     	;# 
  2274  1E16                     	;# 
  2275  1E17                     	;# 
  2276  1E18                     	;# 
  2277  1E19                     	;# 
  2278  1E1A                     	;# 
  2279  1E1B                     	;# 
  2280  1E1C                     	;# 
  2281  1E1D                     	;# 
  2282  1E1E                     	;# 
  2283  1E1F                     	;# 
  2284  1E20                     	;# 
  2285  1E21                     	;# 
  2286  1E22                     	;# 
  2287  1E23                     	;# 
  2288  1E24                     	;# 
  2289  1E25                     	;# 
  2290  1E26                     	;# 
  2291  1E27                     	;# 
  2292  1E28                     	;# 
  2293  1E29                     	;# 
  2294  1E2A                     	;# 
  2295  1E2B                     	;# 
  2296  1E2C                     	;# 
  2297  1E2D                     	;# 
  2298  1E2E                     	;# 
  2299  1E2F                     	;# 
  2300  1E30                     	;# 
  2301  1E31                     	;# 
  2302  1E32                     	;# 
  2303  1E33                     	;# 
  2304  1E34                     	;# 
  2305  1E35                     	;# 
  2306  1E36                     	;# 
  2307  1E37                     	;# 
  2308  1E8F                     	;# 
  2309  1E90                     	;# 
  2310  1E91                     	;# 
  2311  1E92                     	;# 
  2312  1E93                     	;# 
  2313  1E94                     	;# 
  2314  1E95                     	;# 
  2315  1E96                     	;# 
  2316  1E97                     	;# 
  2317  1E9C                     	;# 
  2318  1E9D                     	;# 
  2319  1E9E                     	;# 
  2320  1EA1                     	;# 
  2321  1EA2                     	;# 
  2322  1EA3                     	;# 
  2323  1EA4                     	;# 
  2324  1EA9                     	;# 
  2325  1EAA                     	;# 
  2326  1EB1                     	;# 
  2327  1EB2                     	;# 
  2328  1EB8                     	;# 
  2329  1EB9                     	;# 
  2330  1EBA                     	;# 
  2331  1EBB                     	;# 
  2332  1EBC                     	;# 
  2333  1EBD                     	;# 
  2334  1EBE                     	;# 
  2335  1EC3                     	;# 
  2336  1EC5                     	;# 
  2337  1EC6                     	;# 
  2338  1EC7                     	;# 
  2339  1EC8                     	;# 
  2340  1EC9                     	;# 
  2341  1ECA                     	;# 
  2342  1ECB                     	;# 
  2343  1ECB                     	;# 
  2344  1ECB                     	;# 
  2345  1ECC                     	;# 
  2346  1ECC                     	;# 
  2347  1ECC                     	;# 
  2348  1F10                     	;# 
  2349  1F11                     	;# 
  2350  1F12                     	;# 
  2351  1F14                     	;# 
  2352  1F15                     	;# 
  2353  1F1C                     	;# 
  2354  1F1D                     	;# 
  2355  1F1E                     	;# 
  2356  1F1F                     	;# 
  2357  1F20                     	;# 
  2358  1F21                     	;# 
  2359  1F22                     	;# 
  2360  1F23                     	;# 
  2361  1F24                     	;# 
  2362  1F25                     	;# 
  2363  1F26                     	;# 
  2364  1F27                     	;# 
  2365  1F38                     	;# 
  2366  1F39                     	;# 
  2367  1F3A                     	;# 
  2368  1F3B                     	;# 
  2369  1F3C                     	;# 
  2370  1F3D                     	;# 
  2371  1F3E                     	;# 
  2372  1F3F                     	;# 
  2373  1F43                     	;# 
  2374  1F44                     	;# 
  2375  1F45                     	;# 
  2376  1F46                     	;# 
  2377  1F47                     	;# 
  2378  1F48                     	;# 
  2379  1F49                     	;# 
  2380  1F4A                     	;# 
  2381  1F4E                     	;# 
  2382  1F4F                     	;# 
  2383  1F50                     	;# 
  2384  1F51                     	;# 
  2385  1F52                     	;# 
  2386  1F53                     	;# 
  2387  1F54                     	;# 
  2388  1F55                     	;# 
  2389  1FE4                     	;# 
  2390  1FE5                     	;# 
  2391  1FE6                     	;# 
  2392  1FE7                     	;# 
  2393  1FE8                     	;# 
  2394  1FE8                     	;# 
  2395  1FE9                     	;# 
  2396  1FEA                     	;# 
  2397  1FEB                     	;# 
  2398  1FED                     	;# 
  2399  1FEE                     	;# 
  2400  1FEF                     	;# 
  2401  0000                     	;# 
  2402  0001                     	;# 
  2403  0002                     	;# 
  2404  0003                     	;# 
  2405  0004                     	;# 
  2406  0005                     	;# 
  2407  0006                     	;# 
  2408  0007                     	;# 
  2409  0008                     	;# 
  2410  0009                     	;# 
  2411  000A                     	;# 
  2412  000B                     	;# 
  2413  000C                     	;# 
  2414  000D                     	;# 
  2415  000E                     	;# 
  2416  0012                     	;# 
  2417  0013                     	;# 
  2418  0014                     	;# 
  2419  0018                     	;# 
  2420  0019                     	;# 
  2421  001A                     	;# 
  2422  008C                     	;# 
  2423  008C                     	;# 
  2424  008D                     	;# 
  2425  008E                     	;# 
  2426  008E                     	;# 
  2427  008F                     	;# 
  2428  0090                     	;# 
  2429  0090                     	;# 
  2430  0091                     	;# 
  2431  0092                     	;# 
  2432  0092                     	;# 
  2433  0093                     	;# 
  2434  0094                     	;# 
  2435  0094                     	;# 
  2436  0095                     	;# 
  2437  0096                     	;# 
  2438  0096                     	;# 
  2439  0097                     	;# 
  2440  0098                     	;# 
  2441  0099                     	;# 
  2442  009A                     	;# 
  2443  009B                     	;# 
  2444  009B                     	;# 
  2445  009C                     	;# 
  2446  009D                     	;# 
  2447  009D                     	;# 
  2448  009E                     	;# 
  2449  009F                     	;# 
  2450  010C                     	;# 
  2451  010C                     	;# 
  2452  010D                     	;# 
  2453  010E                     	;# 
  2454  010F                     	;# 
  2455  010F                     	;# 
  2456  0110                     	;# 
  2457  0111                     	;# 
  2458  0112                     	;# 
  2459  0113                     	;# 
  2460  0114                     	;# 
  2461  0115                     	;# 
  2462  0116                     	;# 
  2463  0117                     	;# 
  2464  0118                     	;# 
  2465  0119                     	;# 
  2466  0119                     	;# 
  2467  0119                     	;# 
  2468  011A                     	;# 
  2469  011A                     	;# 
  2470  011A                     	;# 
  2471  011B                     	;# 
  2472  011B                     	;# 
  2473  011B                     	;# 
  2474  011B                     	;# 
  2475  011B                     	;# 
  2476  011C                     	;# 
  2477  011C                     	;# 
  2478  011C                     	;# 
  2479  011D                     	;# 
  2480  011D                     	;# 
  2481  011D                     	;# 
  2482  011E                     	;# 
  2483  011E                     	;# 
  2484  011E                     	;# 
  2485  011F                     	;# 
  2486  011F                     	;# 
  2487  011F                     	;# 
  2488  011F                     	;# 
  2489  011F                     	;# 
  2490  018C                     	;# 
  2491  018D                     	;# 
  2492  018E                     	;# 
  2493  018F                     	;# 
  2494  0190                     	;# 
  2495  0191                     	;# 
  2496  0192                     	;# 
  2497  0196                     	;# 
  2498  0197                     	;# 
  2499  0198                     	;# 
  2500  0199                     	;# 
  2501  019A                     	;# 
  2502  019B                     	;# 
  2503  019C                     	;# 
  2504  020C                     	;# 
  2505  020D                     	;# 
  2506  020E                     	;# 
  2507  020E                     	;# 
  2508  020F                     	;# 
  2509  020F                     	;# 
  2510  0210                     	;# 
  2511  0210                     	;# 
  2512  0211                     	;# 
  2513  0211                     	;# 
  2514  0212                     	;# 
  2515  0213                     	;# 
  2516  0214                     	;# 
  2517  0214                     	;# 
  2518  0215                     	;# 
  2519  0215                     	;# 
  2520  0216                     	;# 
  2521  0216                     	;# 
  2522  0217                     	;# 
  2523  0217                     	;# 
  2524  0218                     	;# 
  2525  0219                     	;# 
  2526  021A                     	;# 
  2527  021A                     	;# 
  2528  021B                     	;# 
  2529  021B                     	;# 
  2530  021C                     	;# 
  2531  021C                     	;# 
  2532  021D                     	;# 
  2533  021D                     	;# 
  2534  021E                     	;# 
  2535  021F                     	;# 
  2536  028C                     	;# 
  2537  028C                     	;# 
  2538  028D                     	;# 
  2539  028D                     	;# 
  2540  028E                     	;# 
  2541  028F                     	;# 
  2542  0290                     	;# 
  2543  0291                     	;# 
  2544  0292                     	;# 
  2545  0292                     	;# 
  2546  0293                     	;# 
  2547  0293                     	;# 
  2548  0294                     	;# 
  2549  0295                     	;# 
  2550  0296                     	;# 
  2551  0297                     	;# 
  2552  0298                     	;# 
  2553  0298                     	;# 
  2554  0299                     	;# 
  2555  0299                     	;# 
  2556  029A                     	;# 
  2557  029B                     	;# 
  2558  029C                     	;# 
  2559  029D                     	;# 
  2560  029F                     	;# 
  2561  030C                     	;# 
  2562  030C                     	;# 
  2563  030D                     	;# 
  2564  030E                     	;# 
  2565  030F                     	;# 
  2566  0310                     	;# 
  2567  0310                     	;# 
  2568  0311                     	;# 
  2569  0312                     	;# 
  2570  0313                     	;# 
  2571  0314                     	;# 
  2572  0314                     	;# 
  2573  0315                     	;# 
  2574  0316                     	;# 
  2575  0317                     	;# 
  2576  0318                     	;# 
  2577  0318                     	;# 
  2578  0319                     	;# 
  2579  031A                     	;# 
  2580  031B                     	;# 
  2581  038C                     	;# 
  2582  038C                     	;# 
  2583  038D                     	;# 
  2584  038E                     	;# 
  2585  0390                     	;# 
  2586  0390                     	;# 
  2587  0391                     	;# 
  2588  0392                     	;# 
  2589  048C                     	;# 
  2590  048C                     	;# 
  2591  048D                     	;# 
  2592  048E                     	;# 
  2593  048F                     	;# 
  2594  048F                     	;# 
  2595  0490                     	;# 
  2596  0491                     	;# 
  2597  0492                     	;# 
  2598  0492                     	;# 
  2599  0493                     	;# 
  2600  0494                     	;# 
  2601  0495                     	;# 
  2602  0495                     	;# 
  2603  0496                     	;# 
  2604  0497                     	;# 
  2605  0498                     	;# 
  2606  0499                     	;# 
  2607  049A                     	;# 
  2608  049B                     	;# 
  2609  049C                     	;# 
  2610  049D                     	;# 
  2611  058C                     	;# 
  2612  058C                     	;# 
  2613  058D                     	;# 
  2614  058E                     	;# 
  2615  058F                     	;# 
  2616  058F                     	;# 
  2617  0590                     	;# 
  2618  0591                     	;# 
  2619  0592                     	;# 
  2620  0593                     	;# 
  2621  059C                     	;# 
  2622  059C                     	;# 
  2623  059D                     	;# 
  2624  059D                     	;# 
  2625  059E                     	;# 
  2626  059F                     	;# 
  2627  060C                     	;# 
  2628  060C                     	;# 
  2629  060D                     	;# 
  2630  060D                     	;# 
  2631  060E                     	;# 
  2632  060F                     	;# 
  2633  0610                     	;# 
  2634  0611                     	;# 
  2635  0612                     	;# 
  2636  0613                     	;# 
  2637  0614                     	;# 
  2638  0616                     	;# 
  2639  0616                     	;# 
  2640  0617                     	;# 
  2641  0617                     	;# 
  2642  0618                     	;# 
  2643  0619                     	;# 
  2644  061A                     	;# 
  2645  061B                     	;# 
  2646  061C                     	;# 
  2647  061D                     	;# 
  2648  061E                     	;# 
  2649  070C                     	;# 
  2650  070D                     	;# 
  2651  070E                     	;# 
  2652  070F                     	;# 
  2653  0710                     	;# 
  2654  0711                     	;# 
  2655  0712                     	;# 
  2656  0713                     	;# 
  2657  0714                     	;# 
  2658  0716                     	;# 
  2659  0717                     	;# 
  2660  0718                     	;# 
  2661  0719                     	;# 
  2662  071A                     	;# 
  2663  071B                     	;# 
  2664  071C                     	;# 
  2665  071D                     	;# 
  2666  071E                     	;# 
  2667  0796                     	;# 
  2668  0797                     	;# 
  2669  0798                     	;# 
  2670  0799                     	;# 
  2671  079A                     	;# 
  2672  079B                     	;# 
  2673  079C                     	;# 
  2674  079D                     	;# 
  2675  080C                     	;# 
  2676  080D                     	;# 
  2677  080E                     	;# 
  2678  080F                     	;# 
  2679  0810                     	;# 
  2680  0811                     	;# 
  2681  0812                     	;# 
  2682  0813                     	;# 
  2683  0814                     	;# 
  2684  081A                     	;# 
  2685  081A                     	;# 
  2686  081B                     	;# 
  2687  081C                     	;# 
  2688  081C                     	;# 
  2689  081D                     	;# 
  2690  081E                     	;# 
  2691  081F                     	;# 
  2692  088C                     	;# 
  2693  088D                     	;# 
  2694  088E                     	;# 
  2695  088F                     	;# 
  2696  0890                     	;# 
  2697  0891                     	;# 
  2698  0892                     	;# 
  2699  0893                     	;# 
  2700  0895                     	;# 
  2701  0896                     	;# 
  2702  0897                     	;# 
  2703  0898                     	;# 
  2704  0899                     	;# 
  2705  089A                     	;# 
  2706  089B                     	;# 
  2707  090C                     	;# 
  2708  090E                     	;# 
  2709  090F                     	;# 
  2710  091F                     	;# 
  2711  098F                     	;# 
  2712  098F                     	;# 
  2713  0990                     	;# 
  2714  0991                     	;# 
  2715  0992                     	;# 
  2716  0993                     	;# 
  2717  0994                     	;# 
  2718  0995                     	;# 
  2719  0996                     	;# 
  2720  0997                     	;# 
  2721  1E0F                     	;# 
  2722  1E10                     	;# 
  2723  1E11                     	;# 
  2724  1E12                     	;# 
  2725  1E13                     	;# 
  2726  1E14                     	;# 
  2727  1E15                     	;# 
  2728  1E16                     	;# 
  2729  1E17                     	;# 
  2730  1E18                     	;# 
  2731  1E19                     	;# 
  2732  1E1A                     	;# 
  2733  1E1B                     	;# 
  2734  1E1C                     	;# 
  2735  1E1D                     	;# 
  2736  1E1E                     	;# 
  2737  1E1F                     	;# 
  2738  1E20                     	;# 
  2739  1E21                     	;# 
  2740  1E22                     	;# 
  2741  1E23                     	;# 
  2742  1E24                     	;# 
  2743  1E25                     	;# 
  2744  1E26                     	;# 
  2745  1E27                     	;# 
  2746  1E28                     	;# 
  2747  1E29                     	;# 
  2748  1E2A                     	;# 
  2749  1E2B                     	;# 
  2750  1E2C                     	;# 
  2751  1E2D                     	;# 
  2752  1E2E                     	;# 
  2753  1E2F                     	;# 
  2754  1E30                     	;# 
  2755  1E31                     	;# 
  2756  1E32                     	;# 
  2757  1E33                     	;# 
  2758  1E34                     	;# 
  2759  1E35                     	;# 
  2760  1E36                     	;# 
  2761  1E37                     	;# 
  2762  1E8F                     	;# 
  2763  1E90                     	;# 
  2764  1E91                     	;# 
  2765  1E92                     	;# 
  2766  1E93                     	;# 
  2767  1E94                     	;# 
  2768  1E95                     	;# 
  2769  1E96                     	;# 
  2770  1E97                     	;# 
  2771  1E9C                     	;# 
  2772  1E9D                     	;# 
  2773  1E9E                     	;# 
  2774  1EA1                     	;# 
  2775  1EA2                     	;# 
  2776  1EA3                     	;# 
  2777  1EA4                     	;# 
  2778  1EA9                     	;# 
  2779  1EAA                     	;# 
  2780  1EB1                     	;# 
  2781  1EB2                     	;# 
  2782  1EB8                     	;# 
  2783  1EB9                     	;# 
  2784  1EBA                     	;# 
  2785  1EBB                     	;# 
  2786  1EBC                     	;# 
  2787  1EBD                     	;# 
  2788  1EBE                     	;# 
  2789  1EC3                     	;# 
  2790  1EC5                     	;# 
  2791  1EC6                     	;# 
  2792  1EC7                     	;# 
  2793  1EC8                     	;# 
  2794  1EC9                     	;# 
  2795  1ECA                     	;# 
  2796  1ECB                     	;# 
  2797  1ECB                     	;# 
  2798  1ECB                     	;# 
  2799  1ECC                     	;# 
  2800  1ECC                     	;# 
  2801  1ECC                     	;# 
  2802  1F10                     	;# 
  2803  1F11                     	;# 
  2804  1F12                     	;# 
  2805  1F14                     	;# 
  2806  1F15                     	;# 
  2807  1F1C                     	;# 
  2808  1F1D                     	;# 
  2809  1F1E                     	;# 
  2810  1F1F                     	;# 
  2811  1F20                     	;# 
  2812  1F21                     	;# 
  2813  1F22                     	;# 
  2814  1F23                     	;# 
  2815  1F24                     	;# 
  2816  1F25                     	;# 
  2817  1F26                     	;# 
  2818  1F27                     	;# 
  2819  1F38                     	;# 
  2820  1F39                     	;# 
  2821  1F3A                     	;# 
  2822  1F3B                     	;# 
  2823  1F3C                     	;# 
  2824  1F3D                     	;# 
  2825  1F3E                     	;# 
  2826  1F3F                     	;# 
  2827  1F43                     	;# 
  2828  1F44                     	;# 
  2829  1F45                     	;# 
  2830  1F46                     	;# 
  2831  1F47                     	;# 
  2832  1F48                     	;# 
  2833  1F49                     	;# 
  2834  1F4A                     	;# 
  2835  1F4E                     	;# 
  2836  1F4F                     	;# 
  2837  1F50                     	;# 
  2838  1F51                     	;# 
  2839  1F52                     	;# 
  2840  1F53                     	;# 
  2841  1F54                     	;# 
  2842  1F55                     	;# 
  2843  1FE4                     	;# 
  2844  1FE5                     	;# 
  2845  1FE6                     	;# 
  2846  1FE7                     	;# 
  2847  1FE8                     	;# 
  2848  1FE8                     	;# 
  2849  1FE9                     	;# 
  2850  1FEA                     	;# 
  2851  1FEB                     	;# 
  2852  1FED                     	;# 
  2853  1FEE                     	;# 
  2854  1FEF                     	;# 
  2855  0000                     	;# 
  2856  0001                     	;# 
  2857  0002                     	;# 
  2858  0003                     	;# 
  2859  0004                     	;# 
  2860  0005                     	;# 
  2861  0006                     	;# 
  2862  0007                     	;# 
  2863  0008                     	;# 
  2864  0009                     	;# 
  2865  000A                     	;# 
  2866  000B                     	;# 
  2867  000C                     	;# 
  2868  000D                     	;# 
  2869  000E                     	;# 
  2870  0012                     	;# 
  2871  0013                     	;# 
  2872  0014                     	;# 
  2873  0018                     	;# 
  2874  0019                     	;# 
  2875  001A                     	;# 
  2876  008C                     	;# 
  2877  008C                     	;# 
  2878  008D                     	;# 
  2879  008E                     	;# 
  2880  008E                     	;# 
  2881  008F                     	;# 
  2882  0090                     	;# 
  2883  0090                     	;# 
  2884  0091                     	;# 
  2885  0092                     	;# 
  2886  0092                     	;# 
  2887  0093                     	;# 
  2888  0094                     	;# 
  2889  0094                     	;# 
  2890  0095                     	;# 
  2891  0096                     	;# 
  2892  0096                     	;# 
  2893  0097                     	;# 
  2894  0098                     	;# 
  2895  0099                     	;# 
  2896  009A                     	;# 
  2897  009B                     	;# 
  2898  009B                     	;# 
  2899  009C                     	;# 
  2900  009D                     	;# 
  2901  009D                     	;# 
  2902  009E                     	;# 
  2903  009F                     	;# 
  2904  010C                     	;# 
  2905  010C                     	;# 
  2906  010D                     	;# 
  2907  010E                     	;# 
  2908  010F                     	;# 
  2909  010F                     	;# 
  2910  0110                     	;# 
  2911  0111                     	;# 
  2912  0112                     	;# 
  2913  0113                     	;# 
  2914  0114                     	;# 
  2915  0115                     	;# 
  2916  0116                     	;# 
  2917  0117                     	;# 
  2918  0118                     	;# 
  2919  0119                     	;# 
  2920  0119                     	;# 
  2921  0119                     	;# 
  2922  011A                     	;# 
  2923  011A                     	;# 
  2924  011A                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011B                     	;# 
  2929  011B                     	;# 
  2930  011C                     	;# 
  2931  011C                     	;# 
  2932  011C                     	;# 
  2933  011D                     	;# 
  2934  011D                     	;# 
  2935  011D                     	;# 
  2936  011E                     	;# 
  2937  011E                     	;# 
  2938  011E                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  011F                     	;# 
  2943  011F                     	;# 
  2944  018C                     	;# 
  2945  018D                     	;# 
  2946  018E                     	;# 
  2947  018F                     	;# 
  2948  0190                     	;# 
  2949  0191                     	;# 
  2950  0192                     	;# 
  2951  0196                     	;# 
  2952  0197                     	;# 
  2953  0198                     	;# 
  2954  0199                     	;# 
  2955  019A                     	;# 
  2956  019B                     	;# 
  2957  019C                     	;# 
  2958  020C                     	;# 
  2959  020D                     	;# 
  2960  020E                     	;# 
  2961  020E                     	;# 
  2962  020F                     	;# 
  2963  020F                     	;# 
  2964  0210                     	;# 
  2965  0210                     	;# 
  2966  0211                     	;# 
  2967  0211                     	;# 
  2968  0212                     	;# 
  2969  0213                     	;# 
  2970  0214                     	;# 
  2971  0214                     	;# 
  2972  0215                     	;# 
  2973  0215                     	;# 
  2974  0216                     	;# 
  2975  0216                     	;# 
  2976  0217                     	;# 
  2977  0217                     	;# 
  2978  0218                     	;# 
  2979  0219                     	;# 
  2980  021A                     	;# 
  2981  021A                     	;# 
  2982  021B                     	;# 
  2983  021B                     	;# 
  2984  021C                     	;# 
  2985  021C                     	;# 
  2986  021D                     	;# 
  2987  021D                     	;# 
  2988  021E                     	;# 
  2989  021F                     	;# 
  2990  028C                     	;# 
  2991  028C                     	;# 
  2992  028D                     	;# 
  2993  028D                     	;# 
  2994  028E                     	;# 
  2995  028F                     	;# 
  2996  0290                     	;# 
  2997  0291                     	;# 
  2998  0292                     	;# 
  2999  0292                     	;# 
  3000  0293                     	;# 
  3001  0293                     	;# 
  3002  0294                     	;# 
  3003  0295                     	;# 
  3004  0296                     	;# 
  3005  0297                     	;# 
  3006  0298                     	;# 
  3007  0298                     	;# 
  3008  0299                     	;# 
  3009  0299                     	;# 
  3010  029A                     	;# 
  3011  029B                     	;# 
  3012  029C                     	;# 
  3013  029D                     	;# 
  3014  029F                     	;# 
  3015  030C                     	;# 
  3016  030C                     	;# 
  3017  030D                     	;# 
  3018  030E                     	;# 
  3019  030F                     	;# 
  3020  0310                     	;# 
  3021  0310                     	;# 
  3022  0311                     	;# 
  3023  0312                     	;# 
  3024  0313                     	;# 
  3025  0314                     	;# 
  3026  0314                     	;# 
  3027  0315                     	;# 
  3028  0316                     	;# 
  3029  0317                     	;# 
  3030  0318                     	;# 
  3031  0318                     	;# 
  3032  0319                     	;# 
  3033  031A                     	;# 
  3034  031B                     	;# 
  3035  038C                     	;# 
  3036  038C                     	;# 
  3037  038D                     	;# 
  3038  038E                     	;# 
  3039  0390                     	;# 
  3040  0390                     	;# 
  3041  0391                     	;# 
  3042  0392                     	;# 
  3043  048C                     	;# 
  3044  048C                     	;# 
  3045  048D                     	;# 
  3046  048E                     	;# 
  3047  048F                     	;# 
  3048  048F                     	;# 
  3049  0490                     	;# 
  3050  0491                     	;# 
  3051  0492                     	;# 
  3052  0492                     	;# 
  3053  0493                     	;# 
  3054  0494                     	;# 
  3055  0495                     	;# 
  3056  0495                     	;# 
  3057  0496                     	;# 
  3058  0497                     	;# 
  3059  0498                     	;# 
  3060  0499                     	;# 
  3061  049A                     	;# 
  3062  049B                     	;# 
  3063  049C                     	;# 
  3064  049D                     	;# 
  3065  058C                     	;# 
  3066  058C                     	;# 
  3067  058D                     	;# 
  3068  058E                     	;# 
  3069  058F                     	;# 
  3070  058F                     	;# 
  3071  0590                     	;# 
  3072  0591                     	;# 
  3073  0592                     	;# 
  3074  0593                     	;# 
  3075  059C                     	;# 
  3076  059C                     	;# 
  3077  059D                     	;# 
  3078  059D                     	;# 
  3079  059E                     	;# 
  3080  059F                     	;# 
  3081  060C                     	;# 
  3082  060C                     	;# 
  3083  060D                     	;# 
  3084  060D                     	;# 
  3085  060E                     	;# 
  3086  060F                     	;# 
  3087  0610                     	;# 
  3088  0611                     	;# 
  3089  0612                     	;# 
  3090  0613                     	;# 
  3091  0614                     	;# 
  3092  0616                     	;# 
  3093  0616                     	;# 
  3094  0617                     	;# 
  3095  0617                     	;# 
  3096  0618                     	;# 
  3097  0619                     	;# 
  3098  061A                     	;# 
  3099  061B                     	;# 
  3100  061C                     	;# 
  3101  061D                     	;# 
  3102  061E                     	;# 
  3103  070C                     	;# 
  3104  070D                     	;# 
  3105  070E                     	;# 
  3106  070F                     	;# 
  3107  0710                     	;# 
  3108  0711                     	;# 
  3109  0712                     	;# 
  3110  0713                     	;# 
  3111  0714                     	;# 
  3112  0716                     	;# 
  3113  0717                     	;# 
  3114  0718                     	;# 
  3115  0719                     	;# 
  3116  071A                     	;# 
  3117  071B                     	;# 
  3118  071C                     	;# 
  3119  071D                     	;# 
  3120  071E                     	;# 
  3121  0796                     	;# 
  3122  0797                     	;# 
  3123  0798                     	;# 
  3124  0799                     	;# 
  3125  079A                     	;# 
  3126  079B                     	;# 
  3127  079C                     	;# 
  3128  079D                     	;# 
  3129  080C                     	;# 
  3130  080D                     	;# 
  3131  080E                     	;# 
  3132  080F                     	;# 
  3133  0810                     	;# 
  3134  0811                     	;# 
  3135  0812                     	;# 
  3136  0813                     	;# 
  3137  0814                     	;# 
  3138  081A                     	;# 
  3139  081A                     	;# 
  3140  081B                     	;# 
  3141  081C                     	;# 
  3142  081C                     	;# 
  3143  081D                     	;# 
  3144  081E                     	;# 
  3145  081F                     	;# 
  3146  088C                     	;# 
  3147  088D                     	;# 
  3148  088E                     	;# 
  3149  088F                     	;# 
  3150  0890                     	;# 
  3151  0891                     	;# 
  3152  0892                     	;# 
  3153  0893                     	;# 
  3154  0895                     	;# 
  3155  0896                     	;# 
  3156  0897                     	;# 
  3157  0898                     	;# 
  3158  0899                     	;# 
  3159  089A                     	;# 
  3160  089B                     	;# 
  3161  090C                     	;# 
  3162  090E                     	;# 
  3163  090F                     	;# 
  3164  091F                     	;# 
  3165  098F                     	;# 
  3166  098F                     	;# 
  3167  0990                     	;# 
  3168  0991                     	;# 
  3169  0992                     	;# 
  3170  0993                     	;# 
  3171  0994                     	;# 
  3172  0995                     	;# 
  3173  0996                     	;# 
  3174  0997                     	;# 
  3175  1E0F                     	;# 
  3176  1E10                     	;# 
  3177  1E11                     	;# 
  3178  1E12                     	;# 
  3179  1E13                     	;# 
  3180  1E14                     	;# 
  3181  1E15                     	;# 
  3182  1E16                     	;# 
  3183  1E17                     	;# 
  3184  1E18                     	;# 
  3185  1E19                     	;# 
  3186  1E1A                     	;# 
  3187  1E1B                     	;# 
  3188  1E1C                     	;# 
  3189  1E1D                     	;# 
  3190  1E1E                     	;# 
  3191  1E1F                     	;# 
  3192  1E20                     	;# 
  3193  1E21                     	;# 
  3194  1E22                     	;# 
  3195  1E23                     	;# 
  3196  1E24                     	;# 
  3197  1E25                     	;# 
  3198  1E26                     	;# 
  3199  1E27                     	;# 
  3200  1E28                     	;# 
  3201  1E29                     	;# 
  3202  1E2A                     	;# 
  3203  1E2B                     	;# 
  3204  1E2C                     	;# 
  3205  1E2D                     	;# 
  3206  1E2E                     	;# 
  3207  1E2F                     	;# 
  3208  1E30                     	;# 
  3209  1E31                     	;# 
  3210  1E32                     	;# 
  3211  1E33                     	;# 
  3212  1E34                     	;# 
  3213  1E35                     	;# 
  3214  1E36                     	;# 
  3215  1E37                     	;# 
  3216  1E8F                     	;# 
  3217  1E90                     	;# 
  3218  1E91                     	;# 
  3219  1E92                     	;# 
  3220  1E93                     	;# 
  3221  1E94                     	;# 
  3222  1E95                     	;# 
  3223  1E96                     	;# 
  3224  1E97                     	;# 
  3225  1E9C                     	;# 
  3226  1E9D                     	;# 
  3227  1E9E                     	;# 
  3228  1EA1                     	;# 
  3229  1EA2                     	;# 
  3230  1EA3                     	;# 
  3231  1EA4                     	;# 
  3232  1EA9                     	;# 
  3233  1EAA                     	;# 
  3234  1EB1                     	;# 
  3235  1EB2                     	;# 
  3236  1EB8                     	;# 
  3237  1EB9                     	;# 
  3238  1EBA                     	;# 
  3239  1EBB                     	;# 
  3240  1EBC                     	;# 
  3241  1EBD                     	;# 
  3242  1EBE                     	;# 
  3243  1EC3                     	;# 
  3244  1EC5                     	;# 
  3245  1EC6                     	;# 
  3246  1EC7                     	;# 
  3247  1EC8                     	;# 
  3248  1EC9                     	;# 
  3249  1ECA                     	;# 
  3250  1ECB                     	;# 
  3251  1ECB                     	;# 
  3252  1ECB                     	;# 
  3253  1ECC                     	;# 
  3254  1ECC                     	;# 
  3255  1ECC                     	;# 
  3256  1F10                     	;# 
  3257  1F11                     	;# 
  3258  1F12                     	;# 
  3259  1F14                     	;# 
  3260  1F15                     	;# 
  3261  1F1C                     	;# 
  3262  1F1D                     	;# 
  3263  1F1E                     	;# 
  3264  1F1F                     	;# 
  3265  1F20                     	;# 
  3266  1F21                     	;# 
  3267  1F22                     	;# 
  3268  1F23                     	;# 
  3269  1F24                     	;# 
  3270  1F25                     	;# 
  3271  1F26                     	;# 
  3272  1F27                     	;# 
  3273  1F38                     	;# 
  3274  1F39                     	;# 
  3275  1F3A                     	;# 
  3276  1F3B                     	;# 
  3277  1F3C                     	;# 
  3278  1F3D                     	;# 
  3279  1F3E                     	;# 
  3280  1F3F                     	;# 
  3281  1F43                     	;# 
  3282  1F44                     	;# 
  3283  1F45                     	;# 
  3284  1F46                     	;# 
  3285  1F47                     	;# 
  3286  1F48                     	;# 
  3287  1F49                     	;# 
  3288  1F4A                     	;# 
  3289  1F4E                     	;# 
  3290  1F4F                     	;# 
  3291  1F50                     	;# 
  3292  1F51                     	;# 
  3293  1F52                     	;# 
  3294  1F53                     	;# 
  3295  1F54                     	;# 
  3296  1F55                     	;# 
  3297  1FE4                     	;# 
  3298  1FE5                     	;# 
  3299  1FE6                     	;# 
  3300  1FE7                     	;# 
  3301  1FE8                     	;# 
  3302  1FE8                     	;# 
  3303  1FE9                     	;# 
  3304  1FEA                     	;# 
  3305  1FEB                     	;# 
  3306  1FED                     	;# 
  3307  1FEE                     	;# 
  3308  1FEF                     	;# 
  3309  0000                     	;# 
  3310  0001                     	;# 
  3311  0002                     	;# 
  3312  0003                     	;# 
  3313  0004                     	;# 
  3314  0005                     	;# 
  3315  0006                     	;# 
  3316  0007                     	;# 
  3317  0008                     	;# 
  3318  0009                     	;# 
  3319  000A                     	;# 
  3320  000B                     	;# 
  3321  000C                     	;# 
  3322  000D                     	;# 
  3323  000E                     	;# 
  3324  0012                     	;# 
  3325  0013                     	;# 
  3326  0014                     	;# 
  3327  0018                     	;# 
  3328  0019                     	;# 
  3329  001A                     	;# 
  3330  008C                     	;# 
  3331  008C                     	;# 
  3332  008D                     	;# 
  3333  008E                     	;# 
  3334  008E                     	;# 
  3335  008F                     	;# 
  3336  0090                     	;# 
  3337  0090                     	;# 
  3338  0091                     	;# 
  3339  0092                     	;# 
  3340  0092                     	;# 
  3341  0093                     	;# 
  3342  0094                     	;# 
  3343  0094                     	;# 
  3344  0095                     	;# 
  3345  0096                     	;# 
  3346  0096                     	;# 
  3347  0097                     	;# 
  3348  0098                     	;# 
  3349  0099                     	;# 
  3350  009A                     	;# 
  3351  009B                     	;# 
  3352  009B                     	;# 
  3353  009C                     	;# 
  3354  009D                     	;# 
  3355  009D                     	;# 
  3356  009E                     	;# 
  3357  009F                     	;# 
  3358  010C                     	;# 
  3359  010C                     	;# 
  3360  010D                     	;# 
  3361  010E                     	;# 
  3362  010F                     	;# 
  3363  010F                     	;# 
  3364  0110                     	;# 
  3365  0111                     	;# 
  3366  0112                     	;# 
  3367  0113                     	;# 
  3368  0114                     	;# 
  3369  0115                     	;# 
  3370  0116                     	;# 
  3371  0117                     	;# 
  3372  0118                     	;# 
  3373  0119                     	;# 
  3374  0119                     	;# 
  3375  0119                     	;# 
  3376  011A                     	;# 
  3377  011A                     	;# 
  3378  011A                     	;# 
  3379  011B                     	;# 
  3380  011B                     	;# 
  3381  011B                     	;# 
  3382  011B                     	;# 
  3383  011B                     	;# 
  3384  011C                     	;# 
  3385  011C                     	;# 
  3386  011C                     	;# 
  3387  011D                     	;# 
  3388  011D                     	;# 
  3389  011D                     	;# 
  3390  011E                     	;# 
  3391  011E                     	;# 
  3392  011E                     	;# 
  3393  011F                     	;# 
  3394  011F                     	;# 
  3395  011F                     	;# 
  3396  011F                     	;# 
  3397  011F                     	;# 
  3398  018C                     	;# 
  3399  018D                     	;# 
  3400  018E                     	;# 
  3401  018F                     	;# 
  3402  0190                     	;# 
  3403  0191                     	;# 
  3404  0192                     	;# 
  3405  0196                     	;# 
  3406  0197                     	;# 
  3407  0198                     	;# 
  3408  0199                     	;# 
  3409  019A                     	;# 
  3410  019B                     	;# 
  3411  019C                     	;# 
  3412  020C                     	;# 
  3413  020D                     	;# 
  3414  020E                     	;# 
  3415  020E                     	;# 
  3416  020F                     	;# 
  3417  020F                     	;# 
  3418  0210                     	;# 
  3419  0210                     	;# 
  3420  0211                     	;# 
  3421  0211                     	;# 
  3422  0212                     	;# 
  3423  0213                     	;# 
  3424  0214                     	;# 
  3425  0214                     	;# 
  3426  0215                     	;# 
  3427  0215                     	;# 
  3428  0216                     	;# 
  3429  0216                     	;# 
  3430  0217                     	;# 
  3431  0217                     	;# 
  3432  0218                     	;# 
  3433  0219                     	;# 
  3434  021A                     	;# 
  3435  021A                     	;# 
  3436  021B                     	;# 
  3437  021B                     	;# 
  3438  021C                     	;# 
  3439  021C                     	;# 
  3440  021D                     	;# 
  3441  021D                     	;# 
  3442  021E                     	;# 
  3443  021F                     	;# 
  3444  028C                     	;# 
  3445  028C                     	;# 
  3446  028D                     	;# 
  3447  028D                     	;# 
  3448  028E                     	;# 
  3449  028F                     	;# 
  3450  0290                     	;# 
  3451  0291                     	;# 
  3452  0292                     	;# 
  3453  0292                     	;# 
  3454  0293                     	;# 
  3455  0293                     	;# 
  3456  0294                     	;# 
  3457  0295                     	;# 
  3458  0296                     	;# 
  3459  0297                     	;# 
  3460  0298                     	;# 
  3461  0298                     	;# 
  3462  0299                     	;# 
  3463  0299                     	;# 
  3464  029A                     	;# 
  3465  029B                     	;# 
  3466  029C                     	;# 
  3467  029D                     	;# 
  3468  029F                     	;# 
  3469  030C                     	;# 
  3470  030C                     	;# 
  3471  030D                     	;# 
  3472  030E                     	;# 
  3473  030F                     	;# 
  3474  0310                     	;# 
  3475  0310                     	;# 
  3476  0311                     	;# 
  3477  0312                     	;# 
  3478  0313                     	;# 
  3479  0314                     	;# 
  3480  0314                     	;# 
  3481  0315                     	;# 
  3482  0316                     	;# 
  3483  0317                     	;# 
  3484  0318                     	;# 
  3485  0318                     	;# 
  3486  0319                     	;# 
  3487  031A                     	;# 
  3488  031B                     	;# 
  3489  038C                     	;# 
  3490  038C                     	;# 
  3491  038D                     	;# 
  3492  038E                     	;# 
  3493  0390                     	;# 
  3494  0390                     	;# 
  3495  0391                     	;# 
  3496  0392                     	;# 
  3497  048C                     	;# 
  3498  048C                     	;# 
  3499  048D                     	;# 
  3500  048E                     	;# 
  3501  048F                     	;# 
  3502  048F                     	;# 
  3503  0490                     	;# 
  3504  0491                     	;# 
  3505  0492                     	;# 
  3506  0492                     	;# 
  3507  0493                     	;# 
  3508  0494                     	;# 
  3509  0495                     	;# 
  3510  0495                     	;# 
  3511  0496                     	;# 
  3512  0497                     	;# 
  3513  0498                     	;# 
  3514  0499                     	;# 
  3515  049A                     	;# 
  3516  049B                     	;# 
  3517  049C                     	;# 
  3518  049D                     	;# 
  3519  058C                     	;# 
  3520  058C                     	;# 
  3521  058D                     	;# 
  3522  058E                     	;# 
  3523  058F                     	;# 
  3524  058F                     	;# 
  3525  0590                     	;# 
  3526  0591                     	;# 
  3527  0592                     	;# 
  3528  0593                     	;# 
  3529  059C                     	;# 
  3530  059C                     	;# 
  3531  059D                     	;# 
  3532  059D                     	;# 
  3533  059E                     	;# 
  3534  059F                     	;# 
  3535  060C                     	;# 
  3536  060C                     	;# 
  3537  060D                     	;# 
  3538  060D                     	;# 
  3539  060E                     	;# 
  3540  060F                     	;# 
  3541  0610                     	;# 
  3542  0611                     	;# 
  3543  0612                     	;# 
  3544  0613                     	;# 
  3545  0614                     	;# 
  3546  0616                     	;# 
  3547  0616                     	;# 
  3548  0617                     	;# 
  3549  0617                     	;# 
  3550  0618                     	;# 
  3551  0619                     	;# 
  3552  061A                     	;# 
  3553  061B                     	;# 
  3554  061C                     	;# 
  3555  061D                     	;# 
  3556  061E                     	;# 
  3557  070C                     	;# 
  3558  070D                     	;# 
  3559  070E                     	;# 
  3560  070F                     	;# 
  3561  0710                     	;# 
  3562  0711                     	;# 
  3563  0712                     	;# 
  3564  0713                     	;# 
  3565  0714                     	;# 
  3566  0716                     	;# 
  3567  0717                     	;# 
  3568  0718                     	;# 
  3569  0719                     	;# 
  3570  071A                     	;# 
  3571  071B                     	;# 
  3572  071C                     	;# 
  3573  071D                     	;# 
  3574  071E                     	;# 
  3575  0796                     	;# 
  3576  0797                     	;# 
  3577  0798                     	;# 
  3578  0799                     	;# 
  3579  079A                     	;# 
  3580  079B                     	;# 
  3581  079C                     	;# 
  3582  079D                     	;# 
  3583  080C                     	;# 
  3584  080D                     	;# 
  3585  080E                     	;# 
  3586  080F                     	;# 
  3587  0810                     	;# 
  3588  0811                     	;# 
  3589  0812                     	;# 
  3590  0813                     	;# 
  3591  0814                     	;# 
  3592  081A                     	;# 
  3593  081A                     	;# 
  3594  081B                     	;# 
  3595  081C                     	;# 
  3596  081C                     	;# 
  3597  081D                     	;# 
  3598  081E                     	;# 
  3599  081F                     	;# 
  3600  088C                     	;# 
  3601  088D                     	;# 
  3602  088E                     	;# 
  3603  088F                     	;# 
  3604  0890                     	;# 
  3605  0891                     	;# 
  3606  0892                     	;# 
  3607  0893                     	;# 
  3608  0895                     	;# 
  3609  0896                     	;# 
  3610  0897                     	;# 
  3611  0898                     	;# 
  3612  0899                     	;# 
  3613  089A                     	;# 
  3614  089B                     	;# 
  3615  090C                     	;# 
  3616  090E                     	;# 
  3617  090F                     	;# 
  3618  091F                     	;# 
  3619  098F                     	;# 
  3620  098F                     	;# 
  3621  0990                     	;# 
  3622  0991                     	;# 
  3623  0992                     	;# 
  3624  0993                     	;# 
  3625  0994                     	;# 
  3626  0995                     	;# 
  3627  0996                     	;# 
  3628  0997                     	;# 
  3629  1E0F                     	;# 
  3630  1E10                     	;# 
  3631  1E11                     	;# 
  3632  1E12                     	;# 
  3633  1E13                     	;# 
  3634  1E14                     	;# 
  3635  1E15                     	;# 
  3636  1E16                     	;# 
  3637  1E17                     	;# 
  3638  1E18                     	;# 
  3639  1E19                     	;# 
  3640  1E1A                     	;# 
  3641  1E1B                     	;# 
  3642  1E1C                     	;# 
  3643  1E1D                     	;# 
  3644  1E1E                     	;# 
  3645  1E1F                     	;# 
  3646  1E20                     	;# 
  3647  1E21                     	;# 
  3648  1E22                     	;# 
  3649  1E23                     	;# 
  3650  1E24                     	;# 
  3651  1E25                     	;# 
  3652  1E26                     	;# 
  3653  1E27                     	;# 
  3654  1E28                     	;# 
  3655  1E29                     	;# 
  3656  1E2A                     	;# 
  3657  1E2B                     	;# 
  3658  1E2C                     	;# 
  3659  1E2D                     	;# 
  3660  1E2E                     	;# 
  3661  1E2F                     	;# 
  3662  1E30                     	;# 
  3663  1E31                     	;# 
  3664  1E32                     	;# 
  3665  1E33                     	;# 
  3666  1E34                     	;# 
  3667  1E35                     	;# 
  3668  1E36                     	;# 
  3669  1E37                     	;# 
  3670  1E8F                     	;# 
  3671  1E90                     	;# 
  3672  1E91                     	;# 
  3673  1E92                     	;# 
  3674  1E93                     	;# 
  3675  1E94                     	;# 
  3676  1E95                     	;# 
  3677  1E96                     	;# 
  3678  1E97                     	;# 
  3679  1E9C                     	;# 
  3680  1E9D                     	;# 
  3681  1E9E                     	;# 
  3682  1EA1                     	;# 
  3683  1EA2                     	;# 
  3684  1EA3                     	;# 
  3685  1EA4                     	;# 
  3686  1EA9                     	;# 
  3687  1EAA                     	;# 
  3688  1EB1                     	;# 
  3689  1EB2                     	;# 
  3690  1EB8                     	;# 
  3691  1EB9                     	;# 
  3692  1EBA                     	;# 
  3693  1EBB                     	;# 
  3694  1EBC                     	;# 
  3695  1EBD                     	;# 
  3696  1EBE                     	;# 
  3697  1EC3                     	;# 
  3698  1EC5                     	;# 
  3699  1EC6                     	;# 
  3700  1EC7                     	;# 
  3701  1EC8                     	;# 
  3702  1EC9                     	;# 
  3703  1ECA                     	;# 
  3704  1ECB                     	;# 
  3705  1ECB                     	;# 
  3706  1ECB                     	;# 
  3707  1ECC                     	;# 
  3708  1ECC                     	;# 
  3709  1ECC                     	;# 
  3710  1F10                     	;# 
  3711  1F11                     	;# 
  3712  1F12                     	;# 
  3713  1F14                     	;# 
  3714  1F15                     	;# 
  3715  1F1C                     	;# 
  3716  1F1D                     	;# 
  3717  1F1E                     	;# 
  3718  1F1F                     	;# 
  3719  1F20                     	;# 
  3720  1F21                     	;# 
  3721  1F22                     	;# 
  3722  1F23                     	;# 
  3723  1F24                     	;# 
  3724  1F25                     	;# 
  3725  1F26                     	;# 
  3726  1F27                     	;# 
  3727  1F38                     	;# 
  3728  1F39                     	;# 
  3729  1F3A                     	;# 
  3730  1F3B                     	;# 
  3731  1F3C                     	;# 
  3732  1F3D                     	;# 
  3733  1F3E                     	;# 
  3734  1F3F                     	;# 
  3735  1F43                     	;# 
  3736  1F44                     	;# 
  3737  1F45                     	;# 
  3738  1F46                     	;# 
  3739  1F47                     	;# 
  3740  1F48                     	;# 
  3741  1F49                     	;# 
  3742  1F4A                     	;# 
  3743  1F4E                     	;# 
  3744  1F4F                     	;# 
  3745  1F50                     	;# 
  3746  1F51                     	;# 
  3747  1F52                     	;# 
  3748  1F53                     	;# 
  3749  1F54                     	;# 
  3750  1F55                     	;# 
  3751  1FE4                     	;# 
  3752  1FE5                     	;# 
  3753  1FE6                     	;# 
  3754  1FE7                     	;# 
  3755  1FE8                     	;# 
  3756  1FE8                     	;# 
  3757  1FE9                     	;# 
  3758  1FEA                     	;# 
  3759  1FEB                     	;# 
  3760  1FED                     	;# 
  3761  1FEE                     	;# 
  3762  1FEF                     	;# 
  3763  0000                     	;# 
  3764  0001                     	;# 
  3765  0002                     	;# 
  3766  0003                     	;# 
  3767  0004                     	;# 
  3768  0005                     	;# 
  3769  0006                     	;# 
  3770  0007                     	;# 
  3771  0008                     	;# 
  3772  0009                     	;# 
  3773  000A                     	;# 
  3774  000B                     	;# 
  3775  000C                     	;# 
  3776  000D                     	;# 
  3777  000E                     	;# 
  3778  0012                     	;# 
  3779  0013                     	;# 
  3780  0014                     	;# 
  3781  0018                     	;# 
  3782  0019                     	;# 
  3783  001A                     	;# 
  3784  008C                     	;# 
  3785  008C                     	;# 
  3786  008D                     	;# 
  3787  008E                     	;# 
  3788  008E                     	;# 
  3789  008F                     	;# 
  3790  0090                     	;# 
  3791  0090                     	;# 
  3792  0091                     	;# 
  3793  0092                     	;# 
  3794  0092                     	;# 
  3795  0093                     	;# 
  3796  0094                     	;# 
  3797  0094                     	;# 
  3798  0095                     	;# 
  3799  0096                     	;# 
  3800  0096                     	;# 
  3801  0097                     	;# 
  3802  0098                     	;# 
  3803  0099                     	;# 
  3804  009A                     	;# 
  3805  009B                     	;# 
  3806  009B                     	;# 
  3807  009C                     	;# 
  3808  009D                     	;# 
  3809  009D                     	;# 
  3810  009E                     	;# 
  3811  009F                     	;# 
  3812  010C                     	;# 
  3813  010C                     	;# 
  3814  010D                     	;# 
  3815  010E                     	;# 
  3816  010F                     	;# 
  3817  010F                     	;# 
  3818  0110                     	;# 
  3819  0111                     	;# 
  3820  0112                     	;# 
  3821  0113                     	;# 
  3822  0114                     	;# 
  3823  0115                     	;# 
  3824  0116                     	;# 
  3825  0117                     	;# 
  3826  0118                     	;# 
  3827  0119                     	;# 
  3828  0119                     	;# 
  3829  0119                     	;# 
  3830  011A                     	;# 
  3831  011A                     	;# 
  3832  011A                     	;# 
  3833  011B                     	;# 
  3834  011B                     	;# 
  3835  011B                     	;# 
  3836  011B                     	;# 
  3837  011B                     	;# 
  3838  011C                     	;# 
  3839  011C                     	;# 
  3840  011C                     	;# 
  3841  011D                     	;# 
  3842  011D                     	;# 
  3843  011D                     	;# 
  3844  011E                     	;# 
  3845  011E                     	;# 
  3846  011E                     	;# 
  3847  011F                     	;# 
  3848  011F                     	;# 
  3849  011F                     	;# 
  3850  011F                     	;# 
  3851  011F                     	;# 
  3852  018C                     	;# 
  3853  018D                     	;# 
  3854  018E                     	;# 
  3855  018F                     	;# 
  3856  0190                     	;# 
  3857  0191                     	;# 
  3858  0192                     	;# 
  3859  0196                     	;# 
  3860  0197                     	;# 
  3861  0198                     	;# 
  3862  0199                     	;# 
  3863  019A                     	;# 
  3864  019B                     	;# 
  3865  019C                     	;# 
  3866  020C                     	;# 
  3867  020D                     	;# 
  3868  020E                     	;# 
  3869  020E                     	;# 
  3870  020F                     	;# 
  3871  020F                     	;# 
  3872  0210                     	;# 
  3873  0210                     	;# 
  3874  0211                     	;# 
  3875  0211                     	;# 
  3876  0212                     	;# 
  3877  0213                     	;# 
  3878  0214                     	;# 
  3879  0214                     	;# 
  3880  0215                     	;# 
  3881  0215                     	;# 
  3882  0216                     	;# 
  3883  0216                     	;# 
  3884  0217                     	;# 
  3885  0217                     	;# 
  3886  0218                     	;# 
  3887  0219                     	;# 
  3888  021A                     	;# 
  3889  021A                     	;# 
  3890  021B                     	;# 
  3891  021B                     	;# 
  3892  021C                     	;# 
  3893  021C                     	;# 
  3894  021D                     	;# 
  3895  021D                     	;# 
  3896  021E                     	;# 
  3897  021F                     	;# 
  3898  028C                     	;# 
  3899  028C                     	;# 
  3900  028D                     	;# 
  3901  028D                     	;# 
  3902  028E                     	;# 
  3903  028F                     	;# 
  3904  0290                     	;# 
  3905  0291                     	;# 
  3906  0292                     	;# 
  3907  0292                     	;# 
  3908  0293                     	;# 
  3909  0293                     	;# 
  3910  0294                     	;# 
  3911  0295                     	;# 
  3912  0296                     	;# 
  3913  0297                     	;# 
  3914  0298                     	;# 
  3915  0298                     	;# 
  3916  0299                     	;# 
  3917  0299                     	;# 
  3918  029A                     	;# 
  3919  029B                     	;# 
  3920  029C                     	;# 
  3921  029D                     	;# 
  3922  029F                     	;# 
  3923  030C                     	;# 
  3924  030C                     	;# 
  3925  030D                     	;# 
  3926  030E                     	;# 
  3927  030F                     	;# 
  3928  0310                     	;# 
  3929  0310                     	;# 
  3930  0311                     	;# 
  3931  0312                     	;# 
  3932  0313                     	;# 
  3933  0314                     	;# 
  3934  0314                     	;# 
  3935  0315                     	;# 
  3936  0316                     	;# 
  3937  0317                     	;# 
  3938  0318                     	;# 
  3939  0318                     	;# 
  3940  0319                     	;# 
  3941  031A                     	;# 
  3942  031B                     	;# 
  3943  038C                     	;# 
  3944  038C                     	;# 
  3945  038D                     	;# 
  3946  038E                     	;# 
  3947  0390                     	;# 
  3948  0390                     	;# 
  3949  0391                     	;# 
  3950  0392                     	;# 
  3951  048C                     	;# 
  3952  048C                     	;# 
  3953  048D                     	;# 
  3954  048E                     	;# 
  3955  048F                     	;# 
  3956  048F                     	;# 
  3957  0490                     	;# 
  3958  0491                     	;# 
  3959  0492                     	;# 
  3960  0492                     	;# 
  3961  0493                     	;# 
  3962  0494                     	;# 
  3963  0495                     	;# 
  3964  0495                     	;# 
  3965  0496                     	;# 
  3966  0497                     	;# 
  3967  0498                     	;# 
  3968  0499                     	;# 
  3969  049A                     	;# 
  3970  049B                     	;# 
  3971  049C                     	;# 
  3972  049D                     	;# 
  3973  058C                     	;# 
  3974  058C                     	;# 
  3975  058D                     	;# 
  3976  058E                     	;# 
  3977  058F                     	;# 
  3978  058F                     	;# 
  3979  0590                     	;# 
  3980  0591                     	;# 
  3981  0592                     	;# 
  3982  0593                     	;# 
  3983  059C                     	;# 
  3984  059C                     	;# 
  3985  059D                     	;# 
  3986  059D                     	;# 
  3987  059E                     	;# 
  3988  059F                     	;# 
  3989  060C                     	;# 
  3990  060C                     	;# 
  3991  060D                     	;# 
  3992  060D                     	;# 
  3993  060E                     	;# 
  3994  060F                     	;# 
  3995  0610                     	;# 
  3996  0611                     	;# 
  3997  0612                     	;# 
  3998  0613                     	;# 
  3999  0614                     	;# 
  4000  0616                     	;# 
  4001  0616                     	;# 
  4002  0617                     	;# 
  4003  0617                     	;# 
  4004  0618                     	;# 
  4005  0619                     	;# 
  4006  061A                     	;# 
  4007  061B                     	;# 
  4008  061C                     	;# 
  4009  061D                     	;# 
  4010  061E                     	;# 
  4011  070C                     	;# 
  4012  070D                     	;# 
  4013  070E                     	;# 
  4014  070F                     	;# 
  4015  0710                     	;# 
  4016  0711                     	;# 
  4017  0712                     	;# 
  4018  0713                     	;# 
  4019  0714                     	;# 
  4020  0716                     	;# 
  4021  0717                     	;# 
  4022  0718                     	;# 
  4023  0719                     	;# 
  4024  071A                     	;# 
  4025  071B                     	;# 
  4026  071C                     	;# 
  4027  071D                     	;# 
  4028  071E                     	;# 
  4029  0796                     	;# 
  4030  0797                     	;# 
  4031  0798                     	;# 
  4032  0799                     	;# 
  4033  079A                     	;# 
  4034  079B                     	;# 
  4035  079C                     	;# 
  4036  079D                     	;# 
  4037  080C                     	;# 
  4038  080D                     	;# 
  4039  080E                     	;# 
  4040  080F                     	;# 
  4041  0810                     	;# 
  4042  0811                     	;# 
  4043  0812                     	;# 
  4044  0813                     	;# 
  4045  0814                     	;# 
  4046  081A                     	;# 
  4047  081A                     	;# 
  4048  081B                     	;# 
  4049  081C                     	;# 
  4050  081C                     	;# 
  4051  081D                     	;# 
  4052  081E                     	;# 
  4053  081F                     	;# 
  4054  088C                     	;# 
  4055  088D                     	;# 
  4056  088E                     	;# 
  4057  088F                     	;# 
  4058  0890                     	;# 
  4059  0891                     	;# 
  4060  0892                     	;# 
  4061  0893                     	;# 
  4062  0895                     	;# 
  4063  0896                     	;# 
  4064  0897                     	;# 
  4065  0898                     	;# 
  4066  0899                     	;# 
  4067  089A                     	;# 
  4068  089B                     	;# 
  4069  090C                     	;# 
  4070  090E                     	;# 
  4071  090F                     	;# 
  4072  091F                     	;# 
  4073  098F                     	;# 
  4074  098F                     	;# 
  4075  0990                     	;# 
  4076  0991                     	;# 
  4077  0992                     	;# 
  4078  0993                     	;# 
  4079  0994                     	;# 
  4080  0995                     	;# 
  4081  0996                     	;# 
  4082  0997                     	;# 
  4083  1E0F                     	;# 
  4084  1E10                     	;# 
  4085  1E11                     	;# 
  4086  1E12                     	;# 
  4087  1E13                     	;# 
  4088  1E14                     	;# 
  4089  1E15                     	;# 
  4090  1E16                     	;# 
  4091  1E17                     	;# 
  4092  1E18                     	;# 
  4093  1E19                     	;# 
  4094  1E1A                     	;# 
  4095  1E1B                     	;# 
  4096  1E1C                     	;# 
  4097  1E1D                     	;# 
  4098  1E1E                     	;# 
  4099  1E1F                     	;# 
  4100  1E20                     	;# 
  4101  1E21                     	;# 
  4102  1E22                     	;# 
  4103  1E23                     	;# 
  4104  1E24                     	;# 
  4105  1E25                     	;# 
  4106  1E26                     	;# 
  4107  1E27                     	;# 
  4108  1E28                     	;# 
  4109  1E29                     	;# 
  4110  1E2A                     	;# 
  4111  1E2B                     	;# 
  4112  1E2C                     	;# 
  4113  1E2D                     	;# 
  4114  1E2E                     	;# 
  4115  1E2F                     	;# 
  4116  1E30                     	;# 
  4117  1E31                     	;# 
  4118  1E32                     	;# 
  4119  1E33                     	;# 
  4120  1E34                     	;# 
  4121  1E35                     	;# 
  4122  1E36                     	;# 
  4123  1E37                     	;# 
  4124  1E8F                     	;# 
  4125  1E90                     	;# 
  4126  1E91                     	;# 
  4127  1E92                     	;# 
  4128  1E93                     	;# 
  4129  1E94                     	;# 
  4130  1E95                     	;# 
  4131  1E96                     	;# 
  4132  1E97                     	;# 
  4133  1E9C                     	;# 
  4134  1E9D                     	;# 
  4135  1E9E                     	;# 
  4136  1EA1                     	;# 
  4137  1EA2                     	;# 
  4138  1EA3                     	;# 
  4139  1EA4                     	;# 
  4140  1EA9                     	;# 
  4141  1EAA                     	;# 
  4142  1EB1                     	;# 
  4143  1EB2                     	;# 
  4144  1EB8                     	;# 
  4145  1EB9                     	;# 
  4146  1EBA                     	;# 
  4147  1EBB                     	;# 
  4148  1EBC                     	;# 
  4149  1EBD                     	;# 
  4150  1EBE                     	;# 
  4151  1EC3                     	;# 
  4152  1EC5                     	;# 
  4153  1EC6                     	;# 
  4154  1EC7                     	;# 
  4155  1EC8                     	;# 
  4156  1EC9                     	;# 
  4157  1ECA                     	;# 
  4158  1ECB                     	;# 
  4159  1ECB                     	;# 
  4160  1ECB                     	;# 
  4161  1ECC                     	;# 
  4162  1ECC                     	;# 
  4163  1ECC                     	;# 
  4164  1F10                     	;# 
  4165  1F11                     	;# 
  4166  1F12                     	;# 
  4167  1F14                     	;# 
  4168  1F15                     	;# 
  4169  1F1C                     	;# 
  4170  1F1D                     	;# 
  4171  1F1E                     	;# 
  4172  1F1F                     	;# 
  4173  1F20                     	;# 
  4174  1F21                     	;# 
  4175  1F22                     	;# 
  4176  1F23                     	;# 
  4177  1F24                     	;# 
  4178  1F25                     	;# 
  4179  1F26                     	;# 
  4180  1F27                     	;# 
  4181  1F38                     	;# 
  4182  1F39                     	;# 
  4183  1F3A                     	;# 
  4184  1F3B                     	;# 
  4185  1F3C                     	;# 
  4186  1F3D                     	;# 
  4187  1F3E                     	;# 
  4188  1F3F                     	;# 
  4189  1F43                     	;# 
  4190  1F44                     	;# 
  4191  1F45                     	;# 
  4192  1F46                     	;# 
  4193  1F47                     	;# 
  4194  1F48                     	;# 
  4195  1F49                     	;# 
  4196  1F4A                     	;# 
  4197  1F4E                     	;# 
  4198  1F4F                     	;# 
  4199  1F50                     	;# 
  4200  1F51                     	;# 
  4201  1F52                     	;# 
  4202  1F53                     	;# 
  4203  1F54                     	;# 
  4204  1F55                     	;# 
  4205  1FE4                     	;# 
  4206  1FE5                     	;# 
  4207  1FE6                     	;# 
  4208  1FE7                     	;# 
  4209  1FE8                     	;# 
  4210  1FE8                     	;# 
  4211  1FE9                     	;# 
  4212  1FEA                     	;# 
  4213  1FEB                     	;# 
  4214  1FED                     	;# 
  4215  1FEE                     	;# 
  4216  1FEF                     	;# 
  4217  0000                     	;# 
  4218  0001                     	;# 
  4219  0002                     	;# 
  4220  0003                     	;# 
  4221  0004                     	;# 
  4222  0005                     	;# 
  4223  0006                     	;# 
  4224  0007                     	;# 
  4225  0008                     	;# 
  4226  0009                     	;# 
  4227  000A                     	;# 
  4228  000B                     	;# 
  4229  000C                     	;# 
  4230  000D                     	;# 
  4231  000E                     	;# 
  4232  0012                     	;# 
  4233  0013                     	;# 
  4234  0014                     	;# 
  4235  0018                     	;# 
  4236  0019                     	;# 
  4237  001A                     	;# 
  4238  008C                     	;# 
  4239  008C                     	;# 
  4240  008D                     	;# 
  4241  008E                     	;# 
  4242  008E                     	;# 
  4243  008F                     	;# 
  4244  0090                     	;# 
  4245  0090                     	;# 
  4246  0091                     	;# 
  4247  0092                     	;# 
  4248  0092                     	;# 
  4249  0093                     	;# 
  4250  0094                     	;# 
  4251  0094                     	;# 
  4252  0095                     	;# 
  4253  0096                     	;# 
  4254  0096                     	;# 
  4255  0097                     	;# 
  4256  0098                     	;# 
  4257  0099                     	;# 
  4258  009A                     	;# 
  4259  009B                     	;# 
  4260  009B                     	;# 
  4261  009C                     	;# 
  4262  009D                     	;# 
  4263  009D                     	;# 
  4264  009E                     	;# 
  4265  009F                     	;# 
  4266  010C                     	;# 
  4267  010C                     	;# 
  4268  010D                     	;# 
  4269  010E                     	;# 
  4270  010F                     	;# 
  4271  010F                     	;# 
  4272  0110                     	;# 
  4273  0111                     	;# 
  4274  0112                     	;# 
  4275  0113                     	;# 
  4276  0114                     	;# 
  4277  0115                     	;# 
  4278  0116                     	;# 
  4279  0117                     	;# 
  4280  0118                     	;# 
  4281  0119                     	;# 
  4282  0119                     	;# 
  4283  0119                     	;# 
  4284  011A                     	;# 
  4285  011A                     	;# 
  4286  011A                     	;# 
  4287  011B                     	;# 
  4288  011B                     	;# 
  4289  011B                     	;# 
  4290  011B                     	;# 
  4291  011B                     	;# 
  4292  011C                     	;# 
  4293  011C                     	;# 
  4294  011C                     	;# 
  4295  011D                     	;# 
  4296  011D                     	;# 
  4297  011D                     	;# 
  4298  011E                     	;# 
  4299  011E                     	;# 
  4300  011E                     	;# 
  4301  011F                     	;# 
  4302  011F                     	;# 
  4303  011F                     	;# 
  4304  011F                     	;# 
  4305  011F                     	;# 
  4306  018C                     	;# 
  4307  018D                     	;# 
  4308  018E                     	;# 
  4309  018F                     	;# 
  4310  0190                     	;# 
  4311  0191                     	;# 
  4312  0192                     	;# 
  4313  0196                     	;# 
  4314  0197                     	;# 
  4315  0198                     	;# 
  4316  0199                     	;# 
  4317  019A                     	;# 
  4318  019B                     	;# 
  4319  019C                     	;# 
  4320  020C                     	;# 
  4321  020D                     	;# 
  4322  020E                     	;# 
  4323  020E                     	;# 
  4324  020F                     	;# 
  4325  020F                     	;# 
  4326  0210                     	;# 
  4327  0210                     	;# 
  4328  0211                     	;# 
  4329  0211                     	;# 
  4330  0212                     	;# 
  4331  0213                     	;# 
  4332  0214                     	;# 
  4333  0214                     	;# 
  4334  0215                     	;# 
  4335  0215                     	;# 
  4336  0216                     	;# 
  4337  0216                     	;# 
  4338  0217                     	;# 
  4339  0217                     	;# 
  4340  0218                     	;# 
  4341  0219                     	;# 
  4342  021A                     	;# 
  4343  021A                     	;# 
  4344  021B                     	;# 
  4345  021B                     	;# 
  4346  021C                     	;# 
  4347  021C                     	;# 
  4348  021D                     	;# 
  4349  021D                     	;# 
  4350  021E                     	;# 
  4351  021F                     	;# 
  4352  028C                     	;# 
  4353  028C                     	;# 
  4354  028D                     	;# 
  4355  028D                     	;# 
  4356  028E                     	;# 
  4357  028F                     	;# 
  4358  0290                     	;# 
  4359  0291                     	;# 
  4360  0292                     	;# 
  4361  0292                     	;# 
  4362  0293                     	;# 
  4363  0293                     	;# 
  4364  0294                     	;# 
  4365  0295                     	;# 
  4366  0296                     	;# 
  4367  0297                     	;# 
  4368  0298                     	;# 
  4369  0298                     	;# 
  4370  0299                     	;# 
  4371  0299                     	;# 
  4372  029A                     	;# 
  4373  029B                     	;# 
  4374  029C                     	;# 
  4375  029D                     	;# 
  4376  029F                     	;# 
  4377  030C                     	;# 
  4378  030C                     	;# 
  4379  030D                     	;# 
  4380  030E                     	;# 
  4381  030F                     	;# 
  4382  0310                     	;# 
  4383  0310                     	;# 
  4384  0311                     	;# 
  4385  0312                     	;# 
  4386  0313                     	;# 
  4387  0314                     	;# 
  4388  0314                     	;# 
  4389  0315                     	;# 
  4390  0316                     	;# 
  4391  0317                     	;# 
  4392  0318                     	;# 
  4393  0318                     	;# 
  4394  0319                     	;# 
  4395  031A                     	;# 
  4396  031B                     	;# 
  4397  038C                     	;# 
  4398  038C                     	;# 
  4399  038D                     	;# 
  4400  038E                     	;# 
  4401  0390                     	;# 
  4402  0390                     	;# 
  4403  0391                     	;# 
  4404  0392                     	;# 
  4405  048C                     	;# 
  4406  048C                     	;# 
  4407  048D                     	;# 
  4408  048E                     	;# 
  4409  048F                     	;# 
  4410  048F                     	;# 
  4411  0490                     	;# 
  4412  0491                     	;# 
  4413  0492                     	;# 
  4414  0492                     	;# 
  4415  0493                     	;# 
  4416  0494                     	;# 
  4417  0495                     	;# 
  4418  0495                     	;# 
  4419  0496                     	;# 
  4420  0497                     	;# 
  4421  0498                     	;# 
  4422  0499                     	;# 
  4423  049A                     	;# 
  4424  049B                     	;# 
  4425  049C                     	;# 
  4426  049D                     	;# 
  4427  058C                     	;# 
  4428  058C                     	;# 
  4429  058D                     	;# 
  4430  058E                     	;# 
  4431  058F                     	;# 
  4432  058F                     	;# 
  4433  0590                     	;# 
  4434  0591                     	;# 
  4435  0592                     	;# 
  4436  0593                     	;# 
  4437  059C                     	;# 
  4438  059C                     	;# 
  4439  059D                     	;# 
  4440  059D                     	;# 
  4441  059E                     	;# 
  4442  059F                     	;# 
  4443  060C                     	;# 
  4444  060C                     	;# 
  4445  060D                     	;# 
  4446  060D                     	;# 
  4447  060E                     	;# 
  4448  060F                     	;# 
  4449  0610                     	;# 
  4450  0611                     	;# 
  4451  0612                     	;# 
  4452  0613                     	;# 
  4453  0614                     	;# 
  4454  0616                     	;# 
  4455  0616                     	;# 
  4456  0617                     	;# 
  4457  0617                     	;# 
  4458  0618                     	;# 
  4459  0619                     	;# 
  4460  061A                     	;# 
  4461  061B                     	;# 
  4462  061C                     	;# 
  4463  061D                     	;# 
  4464  061E                     	;# 
  4465  070C                     	;# 
  4466  070D                     	;# 
  4467  070E                     	;# 
  4468  070F                     	;# 
  4469  0710                     	;# 
  4470  0711                     	;# 
  4471  0712                     	;# 
  4472  0713                     	;# 
  4473  0714                     	;# 
  4474  0716                     	;# 
  4475  0717                     	;# 
  4476  0718                     	;# 
  4477  0719                     	;# 
  4478  071A                     	;# 
  4479  071B                     	;# 
  4480  071C                     	;# 
  4481  071D                     	;# 
  4482  071E                     	;# 
  4483  0796                     	;# 
  4484  0797                     	;# 
  4485  0798                     	;# 
  4486  0799                     	;# 
  4487  079A                     	;# 
  4488  079B                     	;# 
  4489  079C                     	;# 
  4490  079D                     	;# 
  4491  080C                     	;# 
  4492  080D                     	;# 
  4493  080E                     	;# 
  4494  080F                     	;# 
  4495  0810                     	;# 
  4496  0811                     	;# 
  4497  0812                     	;# 
  4498  0813                     	;# 
  4499  0814                     	;# 
  4500  081A                     	;# 
  4501  081A                     	;# 
  4502  081B                     	;# 
  4503  081C                     	;# 
  4504  081C                     	;# 
  4505  081D                     	;# 
  4506  081E                     	;# 
  4507  081F                     	;# 
  4508  088C                     	;# 
  4509  088D                     	;# 
  4510  088E                     	;# 
  4511  088F                     	;# 
  4512  0890                     	;# 
  4513  0891                     	;# 
  4514  0892                     	;# 
  4515  0893                     	;# 
  4516  0895                     	;# 
  4517  0896                     	;# 
  4518  0897                     	;# 
  4519  0898                     	;# 
  4520  0899                     	;# 
  4521  089A                     	;# 
  4522  089B                     	;# 
  4523  090C                     	;# 
  4524  090E                     	;# 
  4525  090F                     	;# 
  4526  091F                     	;# 
  4527  098F                     	;# 
  4528  098F                     	;# 
  4529  0990                     	;# 
  4530  0991                     	;# 
  4531  0992                     	;# 
  4532  0993                     	;# 
  4533  0994                     	;# 
  4534  0995                     	;# 
  4535  0996                     	;# 
  4536  0997                     	;# 
  4537  1E0F                     	;# 
  4538  1E10                     	;# 
  4539  1E11                     	;# 
  4540  1E12                     	;# 
  4541  1E13                     	;# 
  4542  1E14                     	;# 
  4543  1E15                     	;# 
  4544  1E16                     	;# 
  4545  1E17                     	;# 
  4546  1E18                     	;# 
  4547  1E19                     	;# 
  4548  1E1A                     	;# 
  4549  1E1B                     	;# 
  4550  1E1C                     	;# 
  4551  1E1D                     	;# 
  4552  1E1E                     	;# 
  4553  1E1F                     	;# 
  4554  1E20                     	;# 
  4555  1E21                     	;# 
  4556  1E22                     	;# 
  4557  1E23                     	;# 
  4558  1E24                     	;# 
  4559  1E25                     	;# 
  4560  1E26                     	;# 
  4561  1E27                     	;# 
  4562  1E28                     	;# 
  4563  1E29                     	;# 
  4564  1E2A                     	;# 
  4565  1E2B                     	;# 
  4566  1E2C                     	;# 
  4567  1E2D                     	;# 
  4568  1E2E                     	;# 
  4569  1E2F                     	;# 
  4570  1E30                     	;# 
  4571  1E31                     	;# 
  4572  1E32                     	;# 
  4573  1E33                     	;# 
  4574  1E34                     	;# 
  4575  1E35                     	;# 
  4576  1E36                     	;# 
  4577  1E37                     	;# 
  4578  1E8F                     	;# 
  4579  1E90                     	;# 
  4580  1E91                     	;# 
  4581  1E92                     	;# 
  4582  1E93                     	;# 
  4583  1E94                     	;# 
  4584  1E95                     	;# 
  4585  1E96                     	;# 
  4586  1E97                     	;# 
  4587  1E9C                     	;# 
  4588  1E9D                     	;# 
  4589  1E9E                     	;# 
  4590  1EA1                     	;# 
  4591  1EA2                     	;# 
  4592  1EA3                     	;# 
  4593  1EA4                     	;# 
  4594  1EA9                     	;# 
  4595  1EAA                     	;# 
  4596  1EB1                     	;# 
  4597  1EB2                     	;# 
  4598  1EB8                     	;# 
  4599  1EB9                     	;# 
  4600  1EBA                     	;# 
  4601  1EBB                     	;# 
  4602  1EBC                     	;# 
  4603  1EBD                     	;# 
  4604  1EBE                     	;# 
  4605  1EC3                     	;# 
  4606  1EC5                     	;# 
  4607  1EC6                     	;# 
  4608  1EC7                     	;# 
  4609  1EC8                     	;# 
  4610  1EC9                     	;# 
  4611  1ECA                     	;# 
  4612  1ECB                     	;# 
  4613  1ECB                     	;# 
  4614  1ECB                     	;# 
  4615  1ECC                     	;# 
  4616  1ECC                     	;# 
  4617  1ECC                     	;# 
  4618  1F10                     	;# 
  4619  1F11                     	;# 
  4620  1F12                     	;# 
  4621  1F14                     	;# 
  4622  1F15                     	;# 
  4623  1F1C                     	;# 
  4624  1F1D                     	;# 
  4625  1F1E                     	;# 
  4626  1F1F                     	;# 
  4627  1F20                     	;# 
  4628  1F21                     	;# 
  4629  1F22                     	;# 
  4630  1F23                     	;# 
  4631  1F24                     	;# 
  4632  1F25                     	;# 
  4633  1F26                     	;# 
  4634  1F27                     	;# 
  4635  1F38                     	;# 
  4636  1F39                     	;# 
  4637  1F3A                     	;# 
  4638  1F3B                     	;# 
  4639  1F3C                     	;# 
  4640  1F3D                     	;# 
  4641  1F3E                     	;# 
  4642  1F3F                     	;# 
  4643  1F43                     	;# 
  4644  1F44                     	;# 
  4645  1F45                     	;# 
  4646  1F46                     	;# 
  4647  1F47                     	;# 
  4648  1F48                     	;# 
  4649  1F49                     	;# 
  4650  1F4A                     	;# 
  4651  1F4E                     	;# 
  4652  1F4F                     	;# 
  4653  1F50                     	;# 
  4654  1F51                     	;# 
  4655  1F52                     	;# 
  4656  1F53                     	;# 
  4657  1F54                     	;# 
  4658  1F55                     	;# 
  4659  1FE4                     	;# 
  4660  1FE5                     	;# 
  4661  1FE6                     	;# 
  4662  1FE7                     	;# 
  4663  1FE8                     	;# 
  4664  1FE8                     	;# 
  4665  1FE9                     	;# 
  4666  1FEA                     	;# 
  4667  1FEB                     	;# 
  4668  1FED                     	;# 
  4669  1FEE                     	;# 
  4670  1FEF                     	;# 
  4671  0000                     	;# 
  4672  0001                     	;# 
  4673  0002                     	;# 
  4674  0003                     	;# 
  4675  0004                     	;# 
  4676  0005                     	;# 
  4677  0006                     	;# 
  4678  0007                     	;# 
  4679  0008                     	;# 
  4680  0009                     	;# 
  4681  000A                     	;# 
  4682  000B                     	;# 
  4683  000C                     	;# 
  4684  000D                     	;# 
  4685  000E                     	;# 
  4686  0012                     	;# 
  4687  0013                     	;# 
  4688  0014                     	;# 
  4689  0018                     	;# 
  4690  0019                     	;# 
  4691  001A                     	;# 
  4692  008C                     	;# 
  4693  008C                     	;# 
  4694  008D                     	;# 
  4695  008E                     	;# 
  4696  008E                     	;# 
  4697  008F                     	;# 
  4698  0090                     	;# 
  4699  0090                     	;# 
  4700  0091                     	;# 
  4701  0092                     	;# 
  4702  0092                     	;# 
  4703  0093                     	;# 
  4704  0094                     	;# 
  4705  0094                     	;# 
  4706  0095                     	;# 
  4707  0096                     	;# 
  4708  0096                     	;# 
  4709  0097                     	;# 
  4710  0098                     	;# 
  4711  0099                     	;# 
  4712  009A                     	;# 
  4713  009B                     	;# 
  4714  009B                     	;# 
  4715  009C                     	;# 
  4716  009D                     	;# 
  4717  009D                     	;# 
  4718  009E                     	;# 
  4719  009F                     	;# 
  4720  010C                     	;# 
  4721  010C                     	;# 
  4722  010D                     	;# 
  4723  010E                     	;# 
  4724  010F                     	;# 
  4725  010F                     	;# 
  4726  0110                     	;# 
  4727  0111                     	;# 
  4728  0112                     	;# 
  4729  0113                     	;# 
  4730  0114                     	;# 
  4731  0115                     	;# 
  4732  0116                     	;# 
  4733  0117                     	;# 
  4734  0118                     	;# 
  4735  0119                     	;# 
  4736  0119                     	;# 
  4737  0119                     	;# 
  4738  011A                     	;# 
  4739  011A                     	;# 
  4740  011A                     	;# 
  4741  011B                     	;# 
  4742  011B                     	;# 
  4743  011B                     	;# 
  4744  011B                     	;# 
  4745  011B                     	;# 
  4746  011C                     	;# 
  4747  011C                     	;# 
  4748  011C                     	;# 
  4749  011D                     	;# 
  4750  011D                     	;# 
  4751  011D                     	;# 
  4752  011E                     	;# 
  4753  011E                     	;# 
  4754  011E                     	;# 
  4755  011F                     	;# 
  4756  011F                     	;# 
  4757  011F                     	;# 
  4758  011F                     	;# 
  4759  011F                     	;# 
  4760  018C                     	;# 
  4761  018D                     	;# 
  4762  018E                     	;# 
  4763  018F                     	;# 
  4764  0190                     	;# 
  4765  0191                     	;# 
  4766  0192                     	;# 
  4767  0196                     	;# 
  4768  0197                     	;# 
  4769  0198                     	;# 
  4770  0199                     	;# 
  4771  019A                     	;# 
  4772  019B                     	;# 
  4773  019C                     	;# 
  4774  020C                     	;# 
  4775  020D                     	;# 
  4776  020E                     	;# 
  4777  020E                     	;# 
  4778  020F                     	;# 
  4779  020F                     	;# 
  4780  0210                     	;# 
  4781  0210                     	;# 
  4782  0211                     	;# 
  4783  0211                     	;# 
  4784  0212                     	;# 
  4785  0213                     	;# 
  4786  0214                     	;# 
  4787  0214                     	;# 
  4788  0215                     	;# 
  4789  0215                     	;# 
  4790  0216                     	;# 
  4791  0216                     	;# 
  4792  0217                     	;# 
  4793  0217                     	;# 
  4794  0218                     	;# 
  4795  0219                     	;# 
  4796  021A                     	;# 
  4797  021A                     	;# 
  4798  021B                     	;# 
  4799  021B                     	;# 
  4800  021C                     	;# 
  4801  021C                     	;# 
  4802  021D                     	;# 
  4803  021D                     	;# 
  4804  021E                     	;# 
  4805  021F                     	;# 
  4806  028C                     	;# 
  4807  028C                     	;# 
  4808  028D                     	;# 
  4809  028D                     	;# 
  4810  028E                     	;# 
  4811  028F                     	;# 
  4812  0290                     	;# 
  4813  0291                     	;# 
  4814  0292                     	;# 
  4815  0292                     	;# 
  4816  0293                     	;# 
  4817  0293                     	;# 
  4818  0294                     	;# 
  4819  0295                     	;# 
  4820  0296                     	;# 
  4821  0297                     	;# 
  4822  0298                     	;# 
  4823  0298                     	;# 
  4824  0299                     	;# 
  4825  0299                     	;# 
  4826  029A                     	;# 
  4827  029B                     	;# 
  4828  029C                     	;# 
  4829  029D                     	;# 
  4830  029F                     	;# 
  4831  030C                     	;# 
  4832  030C                     	;# 
  4833  030D                     	;# 
  4834  030E                     	;# 
  4835  030F                     	;# 
  4836  0310                     	;# 
  4837  0310                     	;# 
  4838  0311                     	;# 
  4839  0312                     	;# 
  4840  0313                     	;# 
  4841  0314                     	;# 
  4842  0314                     	;# 
  4843  0315                     	;# 
  4844  0316                     	;# 
  4845  0317                     	;# 
  4846  0318                     	;# 
  4847  0318                     	;# 
  4848  0319                     	;# 
  4849  031A                     	;# 
  4850  031B                     	;# 
  4851  038C                     	;# 
  4852  038C                     	;# 
  4853  038D                     	;# 
  4854  038E                     	;# 
  4855  0390                     	;# 
  4856  0390                     	;# 
  4857  0391                     	;# 
  4858  0392                     	;# 
  4859  048C                     	;# 
  4860  048C                     	;# 
  4861  048D                     	;# 
  4862  048E                     	;# 
  4863  048F                     	;# 
  4864  048F                     	;# 
  4865  0490                     	;# 
  4866  0491                     	;# 
  4867  0492                     	;# 
  4868  0492                     	;# 
  4869  0493                     	;# 
  4870  0494                     	;# 
  4871  0495                     	;# 
  4872  0495                     	;# 
  4873  0496                     	;# 
  4874  0497                     	;# 
  4875  0498                     	;# 
  4876  0499                     	;# 
  4877  049A                     	;# 
  4878  049B                     	;# 
  4879  049C                     	;# 
  4880  049D                     	;# 
  4881  058C                     	;# 
  4882  058C                     	;# 
  4883  058D                     	;# 
  4884  058E                     	;# 
  4885  058F                     	;# 
  4886  058F                     	;# 
  4887  0590                     	;# 
  4888  0591                     	;# 
  4889  0592                     	;# 
  4890  0593                     	;# 
  4891  059C                     	;# 
  4892  059C                     	;# 
  4893  059D                     	;# 
  4894  059D                     	;# 
  4895  059E                     	;# 
  4896  059F                     	;# 
  4897  060C                     	;# 
  4898  060C                     	;# 
  4899  060D                     	;# 
  4900  060D                     	;# 
  4901  060E                     	;# 
  4902  060F                     	;# 
  4903  0610                     	;# 
  4904  0611                     	;# 
  4905  0612                     	;# 
  4906  0613                     	;# 
  4907  0614                     	;# 
  4908  0616                     	;# 
  4909  0616                     	;# 
  4910  0617                     	;# 
  4911  0617                     	;# 
  4912  0618                     	;# 
  4913  0619                     	;# 
  4914  061A                     	;# 
  4915  061B                     	;# 
  4916  061C                     	;# 
  4917  061D                     	;# 
  4918  061E                     	;# 
  4919  070C                     	;# 
  4920  070D                     	;# 
  4921  070E                     	;# 
  4922  070F                     	;# 
  4923  0710                     	;# 
  4924  0711                     	;# 
  4925  0712                     	;# 
  4926  0713                     	;# 
  4927  0714                     	;# 
  4928  0716                     	;# 
  4929  0717                     	;# 
  4930  0718                     	;# 
  4931  0719                     	;# 
  4932  071A                     	;# 
  4933  071B                     	;# 
  4934  071C                     	;# 
  4935  071D                     	;# 
  4936  071E                     	;# 
  4937  0796                     	;# 
  4938  0797                     	;# 
  4939  0798                     	;# 
  4940  0799                     	;# 
  4941  079A                     	;# 
  4942  079B                     	;# 
  4943  079C                     	;# 
  4944  079D                     	;# 
  4945  080C                     	;# 
  4946  080D                     	;# 
  4947  080E                     	;# 
  4948  080F                     	;# 
  4949  0810                     	;# 
  4950  0811                     	;# 
  4951  0812                     	;# 
  4952  0813                     	;# 
  4953  0814                     	;# 
  4954  081A                     	;# 
  4955  081A                     	;# 
  4956  081B                     	;# 
  4957  081C                     	;# 
  4958  081C                     	;# 
  4959  081D                     	;# 
  4960  081E                     	;# 
  4961  081F                     	;# 
  4962  088C                     	;# 
  4963  088D                     	;# 
  4964  088E                     	;# 
  4965  088F                     	;# 
  4966  0890                     	;# 
  4967  0891                     	;# 
  4968  0892                     	;# 
  4969  0893                     	;# 
  4970  0895                     	;# 
  4971  0896                     	;# 
  4972  0897                     	;# 
  4973  0898                     	;# 
  4974  0899                     	;# 
  4975  089A                     	;# 
  4976  089B                     	;# 
  4977  090C                     	;# 
  4978  090E                     	;# 
  4979  090F                     	;# 
  4980  091F                     	;# 
  4981  098F                     	;# 
  4982  098F                     	;# 
  4983  0990                     	;# 
  4984  0991                     	;# 
  4985  0992                     	;# 
  4986  0993                     	;# 
  4987  0994                     	;# 
  4988  0995                     	;# 
  4989  0996                     	;# 
  4990  0997                     	;# 
  4991  1E0F                     	;# 
  4992  1E10                     	;# 
  4993  1E11                     	;# 
  4994  1E12                     	;# 
  4995  1E13                     	;# 
  4996  1E14                     	;# 
  4997  1E15                     	;# 
  4998  1E16                     	;# 
  4999  1E17                     	;# 
  5000  1E18                     	;# 
  5001  1E19                     	;# 
  5002  1E1A                     	;# 
  5003  1E1B                     	;# 
  5004  1E1C                     	;# 
  5005  1E1D                     	;# 
  5006  1E1E                     	;# 
  5007  1E1F                     	;# 
  5008  1E20                     	;# 
  5009  1E21                     	;# 
  5010  1E22                     	;# 
  5011  1E23                     	;# 
  5012  1E24                     	;# 
  5013  1E25                     	;# 
  5014  1E26                     	;# 
  5015  1E27                     	;# 
  5016  1E28                     	;# 
  5017  1E29                     	;# 
  5018  1E2A                     	;# 
  5019  1E2B                     	;# 
  5020  1E2C                     	;# 
  5021  1E2D                     	;# 
  5022  1E2E                     	;# 
  5023  1E2F                     	;# 
  5024  1E30                     	;# 
  5025  1E31                     	;# 
  5026  1E32                     	;# 
  5027  1E33                     	;# 
  5028  1E34                     	;# 
  5029  1E35                     	;# 
  5030  1E36                     	;# 
  5031  1E37                     	;# 
  5032  1E8F                     	;# 
  5033  1E90                     	;# 
  5034  1E91                     	;# 
  5035  1E92                     	;# 
  5036  1E93                     	;# 
  5037  1E94                     	;# 
  5038  1E95                     	;# 
  5039  1E96                     	;# 
  5040  1E97                     	;# 
  5041  1E9C                     	;# 
  5042  1E9D                     	;# 
  5043  1E9E                     	;# 
  5044  1EA1                     	;# 
  5045  1EA2                     	;# 
  5046  1EA3                     	;# 
  5047  1EA4                     	;# 
  5048  1EA9                     	;# 
  5049  1EAA                     	;# 
  5050  1EB1                     	;# 
  5051  1EB2                     	;# 
  5052  1EB8                     	;# 
  5053  1EB9                     	;# 
  5054  1EBA                     	;# 
  5055  1EBB                     	;# 
  5056  1EBC                     	;# 
  5057  1EBD                     	;# 
  5058  1EBE                     	;# 
  5059  1EC3                     	;# 
  5060  1EC5                     	;# 
  5061  1EC6                     	;# 
  5062  1EC7                     	;# 
  5063  1EC8                     	;# 
  5064  1EC9                     	;# 
  5065  1ECA                     	;# 
  5066  1ECB                     	;# 
  5067  1ECB                     	;# 
  5068  1ECB                     	;# 
  5069  1ECC                     	;# 
  5070  1ECC                     	;# 
  5071  1ECC                     	;# 
  5072  1F10                     	;# 
  5073  1F11                     	;# 
  5074  1F12                     	;# 
  5075  1F14                     	;# 
  5076  1F15                     	;# 
  5077  1F1C                     	;# 
  5078  1F1D                     	;# 
  5079  1F1E                     	;# 
  5080  1F1F                     	;# 
  5081  1F20                     	;# 
  5082  1F21                     	;# 
  5083  1F22                     	;# 
  5084  1F23                     	;# 
  5085  1F24                     	;# 
  5086  1F25                     	;# 
  5087  1F26                     	;# 
  5088  1F27                     	;# 
  5089  1F38                     	;# 
  5090  1F39                     	;# 
  5091  1F3A                     	;# 
  5092  1F3B                     	;# 
  5093  1F3C                     	;# 
  5094  1F3D                     	;# 
  5095  1F3E                     	;# 
  5096  1F3F                     	;# 
  5097  1F43                     	;# 
  5098  1F44                     	;# 
  5099  1F45                     	;# 
  5100  1F46                     	;# 
  5101  1F47                     	;# 
  5102  1F48                     	;# 
  5103  1F49                     	;# 
  5104  1F4A                     	;# 
  5105  1F4E                     	;# 
  5106  1F4F                     	;# 
  5107  1F50                     	;# 
  5108  1F51                     	;# 
  5109  1F52                     	;# 
  5110  1F53                     	;# 
  5111  1F54                     	;# 
  5112  1F55                     	;# 
  5113  1FE4                     	;# 
  5114  1FE5                     	;# 
  5115  1FE6                     	;# 
  5116  1FE7                     	;# 
  5117  1FE8                     	;# 
  5118  1FE8                     	;# 
  5119  1FE9                     	;# 
  5120  1FEA                     	;# 
  5121  1FEB                     	;# 
  5122  1FED                     	;# 
  5123  1FEE                     	;# 
  5124  1FEF                     	;# 
  5125  0000                     	;# 
  5126  0001                     	;# 
  5127  0002                     	;# 
  5128  0003                     	;# 
  5129  0004                     	;# 
  5130  0005                     	;# 
  5131  0006                     	;# 
  5132  0007                     	;# 
  5133  0008                     	;# 
  5134  0009                     	;# 
  5135  000A                     	;# 
  5136  000B                     	;# 
  5137  000C                     	;# 
  5138  000D                     	;# 
  5139  000E                     	;# 
  5140  0012                     	;# 
  5141  0013                     	;# 
  5142  0014                     	;# 
  5143  0018                     	;# 
  5144  0019                     	;# 
  5145  001A                     	;# 
  5146  008C                     	;# 
  5147  008C                     	;# 
  5148  008D                     	;# 
  5149  008E                     	;# 
  5150  008E                     	;# 
  5151  008F                     	;# 
  5152  0090                     	;# 
  5153  0090                     	;# 
  5154  0091                     	;# 
  5155  0092                     	;# 
  5156  0092                     	;# 
  5157  0093                     	;# 
  5158  0094                     	;# 
  5159  0094                     	;# 
  5160  0095                     	;# 
  5161  0096                     	;# 
  5162  0096                     	;# 
  5163  0097                     	;# 
  5164  0098                     	;# 
  5165  0099                     	;# 
  5166  009A                     	;# 
  5167  009B                     	;# 
  5168  009B                     	;# 
  5169  009C                     	;# 
  5170  009D                     	;# 
  5171  009D                     	;# 
  5172  009E                     	;# 
  5173  009F                     	;# 
  5174  010C                     	;# 
  5175  010C                     	;# 
  5176  010D                     	;# 
  5177  010E                     	;# 
  5178  010F                     	;# 
  5179  010F                     	;# 
  5180  0110                     	;# 
  5181  0111                     	;# 
  5182  0112                     	;# 
  5183  0113                     	;# 
  5184  0114                     	;# 
  5185  0115                     	;# 
  5186  0116                     	;# 
  5187  0117                     	;# 
  5188  0118                     	;# 
  5189  0119                     	;# 
  5190  0119                     	;# 
  5191  0119                     	;# 
  5192  011A                     	;# 
  5193  011A                     	;# 
  5194  011A                     	;# 
  5195  011B                     	;# 
  5196  011B                     	;# 
  5197  011B                     	;# 
  5198  011B                     	;# 
  5199  011B                     	;# 
  5200  011C                     	;# 
  5201  011C                     	;# 
  5202  011C                     	;# 
  5203  011D                     	;# 
  5204  011D                     	;# 
  5205  011D                     	;# 
  5206  011E                     	;# 
  5207  011E                     	;# 
  5208  011E                     	;# 
  5209  011F                     	;# 
  5210  011F                     	;# 
  5211  011F                     	;# 
  5212  011F                     	;# 
  5213  011F                     	;# 
  5214  018C                     	;# 
  5215  018D                     	;# 
  5216  018E                     	;# 
  5217  018F                     	;# 
  5218  0190                     	;# 
  5219  0191                     	;# 
  5220  0192                     	;# 
  5221  0196                     	;# 
  5222  0197                     	;# 
  5223  0198                     	;# 
  5224  0199                     	;# 
  5225  019A                     	;# 
  5226  019B                     	;# 
  5227  019C                     	;# 
  5228  020C                     	;# 
  5229  020D                     	;# 
  5230  020E                     	;# 
  5231  020E                     	;# 
  5232  020F                     	;# 
  5233  020F                     	;# 
  5234  0210                     	;# 
  5235  0210                     	;# 
  5236  0211                     	;# 
  5237  0211                     	;# 
  5238  0212                     	;# 
  5239  0213                     	;# 
  5240  0214                     	;# 
  5241  0214                     	;# 
  5242  0215                     	;# 
  5243  0215                     	;# 
  5244  0216                     	;# 
  5245  0216                     	;# 
  5246  0217                     	;# 
  5247  0217                     	;# 
  5248  0218                     	;# 
  5249  0219                     	;# 
  5250  021A                     	;# 
  5251  021A                     	;# 
  5252  021B                     	;# 
  5253  021B                     	;# 
  5254  021C                     	;# 
  5255  021C                     	;# 
  5256  021D                     	;# 
  5257  021D                     	;# 
  5258  021E                     	;# 
  5259  021F                     	;# 
  5260  028C                     	;# 
  5261  028C                     	;# 
  5262  028D                     	;# 
  5263  028D                     	;# 
  5264  028E                     	;# 
  5265  028F                     	;# 
  5266  0290                     	;# 
  5267  0291                     	;# 
  5268  0292                     	;# 
  5269  0292                     	;# 
  5270  0293                     	;# 
  5271  0293                     	;# 
  5272  0294                     	;# 
  5273  0295                     	;# 
  5274  0296                     	;# 
  5275  0297                     	;# 
  5276  0298                     	;# 
  5277  0298                     	;# 
  5278  0299                     	;# 
  5279  0299                     	;# 
  5280  029A                     	;# 
  5281  029B                     	;# 
  5282  029C                     	;# 
  5283  029D                     	;# 
  5284  029F                     	;# 
  5285  030C                     	;# 
  5286  030C                     	;# 
  5287  030D                     	;# 
  5288  030E                     	;# 
  5289  030F                     	;# 
  5290  0310                     	;# 
  5291  0310                     	;# 
  5292  0311                     	;# 
  5293  0312                     	;# 
  5294  0313                     	;# 
  5295  0314                     	;# 
  5296  0314                     	;# 
  5297  0315                     	;# 
  5298  0316                     	;# 
  5299  0317                     	;# 
  5300  0318                     	;# 
  5301  0318                     	;# 
  5302  0319                     	;# 
  5303  031A                     	;# 
  5304  031B                     	;# 
  5305  038C                     	;# 
  5306  038C                     	;# 
  5307  038D                     	;# 
  5308  038E                     	;# 
  5309  0390                     	;# 
  5310  0390                     	;# 
  5311  0391                     	;# 
  5312  0392                     	;# 
  5313  048C                     	;# 
  5314  048C                     	;# 
  5315  048D                     	;# 
  5316  048E                     	;# 
  5317  048F                     	;# 
  5318  048F                     	;# 
  5319  0490                     	;# 
  5320  0491                     	;# 
  5321  0492                     	;# 
  5322  0492                     	;# 
  5323  0493                     	;# 
  5324  0494                     	;# 
  5325  0495                     	;# 
  5326  0495                     	;# 
  5327  0496                     	;# 
  5328  0497                     	;# 
  5329  0498                     	;# 
  5330  0499                     	;# 
  5331  049A                     	;# 
  5332  049B                     	;# 
  5333  049C                     	;# 
  5334  049D                     	;# 
  5335  058C                     	;# 
  5336  058C                     	;# 
  5337  058D                     	;# 
  5338  058E                     	;# 
  5339  058F                     	;# 
  5340  058F                     	;# 
  5341  0590                     	;# 
  5342  0591                     	;# 
  5343  0592                     	;# 
  5344  0593                     	;# 
  5345  059C                     	;# 
  5346  059C                     	;# 
  5347  059D                     	;# 
  5348  059D                     	;# 
  5349  059E                     	;# 
  5350  059F                     	;# 
  5351  060C                     	;# 
  5352  060C                     	;# 
  5353  060D                     	;# 
  5354  060D                     	;# 
  5355  060E                     	;# 
  5356  060F                     	;# 
  5357  0610                     	;# 
  5358  0611                     	;# 
  5359  0612                     	;# 
  5360  0613                     	;# 
  5361  0614                     	;# 
  5362  0616                     	;# 
  5363  0616                     	;# 
  5364  0617                     	;# 
  5365  0617                     	;# 
  5366  0618                     	;# 
  5367  0619                     	;# 
  5368  061A                     	;# 
  5369  061B                     	;# 
  5370  061C                     	;# 
  5371  061D                     	;# 
  5372  061E                     	;# 
  5373  070C                     	;# 
  5374  070D                     	;# 
  5375  070E                     	;# 
  5376  070F                     	;# 
  5377  0710                     	;# 
  5378  0711                     	;# 
  5379  0712                     	;# 
  5380  0713                     	;# 
  5381  0714                     	;# 
  5382  0716                     	;# 
  5383  0717                     	;# 
  5384  0718                     	;# 
  5385  0719                     	;# 
  5386  071A                     	;# 
  5387  071B                     	;# 
  5388  071C                     	;# 
  5389  071D                     	;# 
  5390  071E                     	;# 
  5391  0796                     	;# 
  5392  0797                     	;# 
  5393  0798                     	;# 
  5394  0799                     	;# 
  5395  079A                     	;# 
  5396  079B                     	;# 
  5397  079C                     	;# 
  5398  079D                     	;# 
  5399  080C                     	;# 
  5400  080D                     	;# 
  5401  080E                     	;# 
  5402  080F                     	;# 
  5403  0810                     	;# 
  5404  0811                     	;# 
  5405  0812                     	;# 
  5406  0813                     	;# 
  5407  0814                     	;# 
  5408  081A                     	;# 
  5409  081A                     	;# 
  5410  081B                     	;# 
  5411  081C                     	;# 
  5412  081C                     	;# 
  5413  081D                     	;# 
  5414  081E                     	;# 
  5415  081F                     	;# 
  5416  088C                     	;# 
  5417  088D                     	;# 
  5418  088E                     	;# 
  5419  088F                     	;# 
  5420  0890                     	;# 
  5421  0891                     	;# 
  5422  0892                     	;# 
  5423  0893                     	;# 
  5424  0895                     	;# 
  5425  0896                     	;# 
  5426  0897                     	;# 
  5427  0898                     	;# 
  5428  0899                     	;# 
  5429  089A                     	;# 
  5430  089B                     	;# 
  5431  090C                     	;# 
  5432  090E                     	;# 
  5433  090F                     	;# 
  5434  091F                     	;# 
  5435  098F                     	;# 
  5436  098F                     	;# 
  5437  0990                     	;# 
  5438  0991                     	;# 
  5439  0992                     	;# 
  5440  0993                     	;# 
  5441  0994                     	;# 
  5442  0995                     	;# 
  5443  0996                     	;# 
  5444  0997                     	;# 
  5445  1E0F                     	;# 
  5446  1E10                     	;# 
  5447  1E11                     	;# 
  5448  1E12                     	;# 
  5449  1E13                     	;# 
  5450  1E14                     	;# 
  5451  1E15                     	;# 
  5452  1E16                     	;# 
  5453  1E17                     	;# 
  5454  1E18                     	;# 
  5455  1E19                     	;# 
  5456  1E1A                     	;# 
  5457  1E1B                     	;# 
  5458  1E1C                     	;# 
  5459  1E1D                     	;# 
  5460  1E1E                     	;# 
  5461  1E1F                     	;# 
  5462  1E20                     	;# 
  5463  1E21                     	;# 
  5464  1E22                     	;# 
  5465  1E23                     	;# 
  5466  1E24                     	;# 
  5467  1E25                     	;# 
  5468  1E26                     	;# 
  5469  1E27                     	;# 
  5470  1E28                     	;# 
  5471  1E29                     	;# 
  5472  1E2A                     	;# 
  5473  1E2B                     	;# 
  5474  1E2C                     	;# 
  5475  1E2D                     	;# 
  5476  1E2E                     	;# 
  5477  1E2F                     	;# 
  5478  1E30                     	;# 
  5479  1E31                     	;# 
  5480  1E32                     	;# 
  5481  1E33                     	;# 
  5482  1E34                     	;# 
  5483  1E35                     	;# 
  5484  1E36                     	;# 
  5485  1E37                     	;# 
  5486  1E8F                     	;# 
  5487  1E90                     	;# 
  5488  1E91                     	;# 
  5489  1E92                     	;# 
  5490  1E93                     	;# 
  5491  1E94                     	;# 
  5492  1E95                     	;# 
  5493  1E96                     	;# 
  5494  1E97                     	;# 
  5495  1E9C                     	;# 
  5496  1E9D                     	;# 
  5497  1E9E                     	;# 
  5498  1EA1                     	;# 
  5499  1EA2                     	;# 
  5500  1EA3                     	;# 
  5501  1EA4                     	;# 
  5502  1EA9                     	;# 
  5503  1EAA                     	;# 
  5504  1EB1                     	;# 
  5505  1EB2                     	;# 
  5506  1EB8                     	;# 
  5507  1EB9                     	;# 
  5508  1EBA                     	;# 
  5509  1EBB                     	;# 
  5510  1EBC                     	;# 
  5511  1EBD                     	;# 
  5512  1EBE                     	;# 
  5513  1EC3                     	;# 
  5514  1EC5                     	;# 
  5515  1EC6                     	;# 
  5516  1EC7                     	;# 
  5517  1EC8                     	;# 
  5518  1EC9                     	;# 
  5519  1ECA                     	;# 
  5520  1ECB                     	;# 
  5521  1ECB                     	;# 
  5522  1ECB                     	;# 
  5523  1ECC                     	;# 
  5524  1ECC                     	;# 
  5525  1ECC                     	;# 
  5526  1F10                     	;# 
  5527  1F11                     	;# 
  5528  1F12                     	;# 
  5529  1F14                     	;# 
  5530  1F15                     	;# 
  5531  1F1C                     	;# 
  5532  1F1D                     	;# 
  5533  1F1E                     	;# 
  5534  1F1F                     	;# 
  5535  1F20                     	;# 
  5536  1F21                     	;# 
  5537  1F22                     	;# 
  5538  1F23                     	;# 
  5539  1F24                     	;# 
  5540  1F25                     	;# 
  5541  1F26                     	;# 
  5542  1F27                     	;# 
  5543  1F38                     	;# 
  5544  1F39                     	;# 
  5545  1F3A                     	;# 
  5546  1F3B                     	;# 
  5547  1F3C                     	;# 
  5548  1F3D                     	;# 
  5549  1F3E                     	;# 
  5550  1F3F                     	;# 
  5551  1F43                     	;# 
  5552  1F44                     	;# 
  5553  1F45                     	;# 
  5554  1F46                     	;# 
  5555  1F47                     	;# 
  5556  1F48                     	;# 
  5557  1F49                     	;# 
  5558  1F4A                     	;# 
  5559  1F4E                     	;# 
  5560  1F4F                     	;# 
  5561  1F50                     	;# 
  5562  1F51                     	;# 
  5563  1F52                     	;# 
  5564  1F53                     	;# 
  5565  1F54                     	;# 
  5566  1F55                     	;# 
  5567  1FE4                     	;# 
  5568  1FE5                     	;# 
  5569  1FE6                     	;# 
  5570  1FE7                     	;# 
  5571  1FE8                     	;# 
  5572  1FE8                     	;# 
  5573  1FE9                     	;# 
  5574  1FEA                     	;# 
  5575  1FEB                     	;# 
  5576  1FED                     	;# 
  5577  1FEE                     	;# 
  5578  1FEF                     	;# 
  5579  0000                     	;# 
  5580  0001                     	;# 
  5581  0002                     	;# 
  5582  0003                     	;# 
  5583  0004                     	;# 
  5584  0005                     	;# 
  5585  0006                     	;# 
  5586  0007                     	;# 
  5587  0008                     	;# 
  5588  0009                     	;# 
  5589  000A                     	;# 
  5590  000B                     	;# 
  5591  000C                     	;# 
  5592  000D                     	;# 
  5593  000E                     	;# 
  5594  0012                     	;# 
  5595  0013                     	;# 
  5596  0014                     	;# 
  5597  0018                     	;# 
  5598  0019                     	;# 
  5599  001A                     	;# 
  5600  008C                     	;# 
  5601  008C                     	;# 
  5602  008D                     	;# 
  5603  008E                     	;# 
  5604  008E                     	;# 
  5605  008F                     	;# 
  5606  0090                     	;# 
  5607  0090                     	;# 
  5608  0091                     	;# 
  5609  0092                     	;# 
  5610  0092                     	;# 
  5611  0093                     	;# 
  5612  0094                     	;# 
  5613  0094                     	;# 
  5614  0095                     	;# 
  5615  0096                     	;# 
  5616  0096                     	;# 
  5617  0097                     	;# 
  5618  0098                     	;# 
  5619  0099                     	;# 
  5620  009A                     	;# 
  5621  009B                     	;# 
  5622  009B                     	;# 
  5623  009C                     	;# 
  5624  009D                     	;# 
  5625  009D                     	;# 
  5626  009E                     	;# 
  5627  009F                     	;# 
  5628  010C                     	;# 
  5629  010C                     	;# 
  5630  010D                     	;# 
  5631  010E                     	;# 
  5632  010F                     	;# 
  5633  010F                     	;# 
  5634  0110                     	;# 
  5635  0111                     	;# 
  5636  0112                     	;# 
  5637  0113                     	;# 
  5638  0114                     	;# 
  5639  0115                     	;# 
  5640  0116                     	;# 
  5641  0117                     	;# 
  5642  0118                     	;# 
  5643  0119                     	;# 
  5644  0119                     	;# 
  5645  0119                     	;# 
  5646  011A                     	;# 
  5647  011A                     	;# 
  5648  011A                     	;# 
  5649  011B                     	;# 
  5650  011B                     	;# 
  5651  011B                     	;# 
  5652  011B                     	;# 
  5653  011B                     	;# 
  5654  011C                     	;# 
  5655  011C                     	;# 
  5656  011C                     	;# 
  5657  011D                     	;# 
  5658  011D                     	;# 
  5659  011D                     	;# 
  5660  011E                     	;# 
  5661  011E                     	;# 
  5662  011E                     	;# 
  5663  011F                     	;# 
  5664  011F                     	;# 
  5665  011F                     	;# 
  5666  011F                     	;# 
  5667  011F                     	;# 
  5668  018C                     	;# 
  5669  018D                     	;# 
  5670  018E                     	;# 
  5671  018F                     	;# 
  5672  0190                     	;# 
  5673  0191                     	;# 
  5674  0192                     	;# 
  5675  0196                     	;# 
  5676  0197                     	;# 
  5677  0198                     	;# 
  5678  0199                     	;# 
  5679  019A                     	;# 
  5680  019B                     	;# 
  5681  019C                     	;# 
  5682  020C                     	;# 
  5683  020D                     	;# 
  5684  020E                     	;# 
  5685  020E                     	;# 
  5686  020F                     	;# 
  5687  020F                     	;# 
  5688  0210                     	;# 
  5689  0210                     	;# 
  5690  0211                     	;# 
  5691  0211                     	;# 
  5692  0212                     	;# 
  5693  0213                     	;# 
  5694  0214                     	;# 
  5695  0214                     	;# 
  5696  0215                     	;# 
  5697  0215                     	;# 
  5698  0216                     	;# 
  5699  0216                     	;# 
  5700  0217                     	;# 
  5701  0217                     	;# 
  5702  0218                     	;# 
  5703  0219                     	;# 
  5704  021A                     	;# 
  5705  021A                     	;# 
  5706  021B                     	;# 
  5707  021B                     	;# 
  5708  021C                     	;# 
  5709  021C                     	;# 
  5710  021D                     	;# 
  5711  021D                     	;# 
  5712  021E                     	;# 
  5713  021F                     	;# 
  5714  028C                     	;# 
  5715  028C                     	;# 
  5716  028D                     	;# 
  5717  028D                     	;# 
  5718  028E                     	;# 
  5719  028F                     	;# 
  5720  0290                     	;# 
  5721  0291                     	;# 
  5722  0292                     	;# 
  5723  0292                     	;# 
  5724  0293                     	;# 
  5725  0293                     	;# 
  5726  0294                     	;# 
  5727  0295                     	;# 
  5728  0296                     	;# 
  5729  0297                     	;# 
  5730  0298                     	;# 
  5731  0298                     	;# 
  5732  0299                     	;# 
  5733  0299                     	;# 
  5734  029A                     	;# 
  5735  029B                     	;# 
  5736  029C                     	;# 
  5737  029D                     	;# 
  5738  029F                     	;# 
  5739  030C                     	;# 
  5740  030C                     	;# 
  5741  030D                     	;# 
  5742  030E                     	;# 
  5743  030F                     	;# 
  5744  0310                     	;# 
  5745  0310                     	;# 
  5746  0311                     	;# 
  5747  0312                     	;# 
  5748  0313                     	;# 
  5749  0314                     	;# 
  5750  0314                     	;# 
  5751  0315                     	;# 
  5752  0316                     	;# 
  5753  0317                     	;# 
  5754  0318                     	;# 
  5755  0318                     	;# 
  5756  0319                     	;# 
  5757  031A                     	;# 
  5758  031B                     	;# 
  5759  038C                     	;# 
  5760  038C                     	;# 
  5761  038D                     	;# 
  5762  038E                     	;# 
  5763  0390                     	;# 
  5764  0390                     	;# 
  5765  0391                     	;# 
  5766  0392                     	;# 
  5767  048C                     	;# 
  5768  048C                     	;# 
  5769  048D                     	;# 
  5770  048E                     	;# 
  5771  048F                     	;# 
  5772  048F                     	;# 
  5773  0490                     	;# 
  5774  0491                     	;# 
  5775  0492                     	;# 
  5776  0492                     	;# 
  5777  0493                     	;# 
  5778  0494                     	;# 
  5779  0495                     	;# 
  5780  0495                     	;# 
  5781  0496                     	;# 
  5782  0497                     	;# 
  5783  0498                     	;# 
  5784  0499                     	;# 
  5785  049A                     	;# 
  5786  049B                     	;# 
  5787  049C                     	;# 
  5788  049D                     	;# 
  5789  058C                     	;# 
  5790  058C                     	;# 
  5791  058D                     	;# 
  5792  058E                     	;# 
  5793  058F                     	;# 
  5794  058F                     	;# 
  5795  0590                     	;# 
  5796  0591                     	;# 
  5797  0592                     	;# 
  5798  0593                     	;# 
  5799  059C                     	;# 
  5800  059C                     	;# 
  5801  059D                     	;# 
  5802  059D                     	;# 
  5803  059E                     	;# 
  5804  059F                     	;# 
  5805  060C                     	;# 
  5806  060C                     	;# 
  5807  060D                     	;# 
  5808  060D                     	;# 
  5809  060E                     	;# 
  5810  060F                     	;# 
  5811  0610                     	;# 
  5812  0611                     	;# 
  5813  0612                     	;# 
  5814  0613                     	;# 
  5815  0614                     	;# 
  5816  0616                     	;# 
  5817  0616                     	;# 
  5818  0617                     	;# 
  5819  0617                     	;# 
  5820  0618                     	;# 
  5821  0619                     	;# 
  5822  061A                     	;# 
  5823  061B                     	;# 
  5824  061C                     	;# 
  5825  061D                     	;# 
  5826  061E                     	;# 
  5827  070C                     	;# 
  5828  070D                     	;# 
  5829  070E                     	;# 
  5830  070F                     	;# 
  5831  0710                     	;# 
  5832  0711                     	;# 
  5833  0712                     	;# 
  5834  0713                     	;# 
  5835  0714                     	;# 
  5836  0716                     	;# 
  5837  0717                     	;# 
  5838  0718                     	;# 
  5839  0719                     	;# 
  5840  071A                     	;# 
  5841  071B                     	;# 
  5842  071C                     	;# 
  5843  071D                     	;# 
  5844  071E                     	;# 
  5845  0796                     	;# 
  5846  0797                     	;# 
  5847  0798                     	;# 
  5848  0799                     	;# 
  5849  079A                     	;# 
  5850  079B                     	;# 
  5851  079C                     	;# 
  5852  079D                     	;# 
  5853  080C                     	;# 
  5854  080D                     	;# 
  5855  080E                     	;# 
  5856  080F                     	;# 
  5857  0810                     	;# 
  5858  0811                     	;# 
  5859  0812                     	;# 
  5860  0813                     	;# 
  5861  0814                     	;# 
  5862  081A                     	;# 
  5863  081A                     	;# 
  5864  081B                     	;# 
  5865  081C                     	;# 
  5866  081C                     	;# 
  5867  081D                     	;# 
  5868  081E                     	;# 
  5869  081F                     	;# 
  5870  088C                     	;# 
  5871  088D                     	;# 
  5872  088E                     	;# 
  5873  088F                     	;# 
  5874  0890                     	;# 
  5875  0891                     	;# 
  5876  0892                     	;# 
  5877  0893                     	;# 
  5878  0895                     	;# 
  5879  0896                     	;# 
  5880  0897                     	;# 
  5881  0898                     	;# 
  5882  0899                     	;# 
  5883  089A                     	;# 
  5884  089B                     	;# 
  5885  090C                     	;# 
  5886  090E                     	;# 
  5887  090F                     	;# 
  5888  091F                     	;# 
  5889  098F                     	;# 
  5890  098F                     	;# 
  5891  0990                     	;# 
  5892  0991                     	;# 
  5893  0992                     	;# 
  5894  0993                     	;# 
  5895  0994                     	;# 
  5896  0995                     	;# 
  5897  0996                     	;# 
  5898  0997                     	;# 
  5899  1E0F                     	;# 
  5900  1E10                     	;# 
  5901  1E11                     	;# 
  5902  1E12                     	;# 
  5903  1E13                     	;# 
  5904  1E14                     	;# 
  5905  1E15                     	;# 
  5906  1E16                     	;# 
  5907  1E17                     	;# 
  5908  1E18                     	;# 
  5909  1E19                     	;# 
  5910  1E1A                     	;# 
  5911  1E1B                     	;# 
  5912  1E1C                     	;# 
  5913  1E1D                     	;# 
  5914  1E1E                     	;# 
  5915  1E1F                     	;# 
  5916  1E20                     	;# 
  5917  1E21                     	;# 
  5918  1E22                     	;# 
  5919  1E23                     	;# 
  5920  1E24                     	;# 
  5921  1E25                     	;# 
  5922  1E26                     	;# 
  5923  1E27                     	;# 
  5924  1E28                     	;# 
  5925  1E29                     	;# 
  5926  1E2A                     	;# 
  5927  1E2B                     	;# 
  5928  1E2C                     	;# 
  5929  1E2D                     	;# 
  5930  1E2E                     	;# 
  5931  1E2F                     	;# 
  5932  1E30                     	;# 
  5933  1E31                     	;# 
  5934  1E32                     	;# 
  5935  1E33                     	;# 
  5936  1E34                     	;# 
  5937  1E35                     	;# 
  5938  1E36                     	;# 
  5939  1E37                     	;# 
  5940  1E8F                     	;# 
  5941  1E90                     	;# 
  5942  1E91                     	;# 
  5943  1E92                     	;# 
  5944  1E93                     	;# 
  5945  1E94                     	;# 
  5946  1E95                     	;# 
  5947  1E96                     	;# 
  5948  1E97                     	;# 
  5949  1E9C                     	;# 
  5950  1E9D                     	;# 
  5951  1E9E                     	;# 
  5952  1EA1                     	;# 
  5953  1EA2                     	;# 
  5954  1EA3                     	;# 
  5955  1EA4                     	;# 
  5956  1EA9                     	;# 
  5957  1EAA                     	;# 
  5958  1EB1                     	;# 
  5959  1EB2                     	;# 
  5960  1EB8                     	;# 
  5961  1EB9                     	;# 
  5962  1EBA                     	;# 
  5963  1EBB                     	;# 
  5964  1EBC                     	;# 
  5965  1EBD                     	;# 
  5966  1EBE                     	;# 
  5967  1EC3                     	;# 
  5968  1EC5                     	;# 
  5969  1EC6                     	;# 
  5970  1EC7                     	;# 
  5971  1EC8                     	;# 
  5972  1EC9                     	;# 
  5973  1ECA                     	;# 
  5974  1ECB                     	;# 
  5975  1ECB                     	;# 
  5976  1ECB                     	;# 
  5977  1ECC                     	;# 
  5978  1ECC                     	;# 
  5979  1ECC                     	;# 
  5980  1F10                     	;# 
  5981  1F11                     	;# 
  5982  1F12                     	;# 
  5983  1F14                     	;# 
  5984  1F15                     	;# 
  5985  1F1C                     	;# 
  5986  1F1D                     	;# 
  5987  1F1E                     	;# 
  5988  1F1F                     	;# 
  5989  1F20                     	;# 
  5990  1F21                     	;# 
  5991  1F22                     	;# 
  5992  1F23                     	;# 
  5993  1F24                     	;# 
  5994  1F25                     	;# 
  5995  1F26                     	;# 
  5996  1F27                     	;# 
  5997  1F38                     	;# 
  5998  1F39                     	;# 
  5999  1F3A                     	;# 
  6000  1F3B                     	;# 
  6001  1F3C                     	;# 
  6002  1F3D                     	;# 
  6003  1F3E                     	;# 
  6004  1F3F                     	;# 
  6005  1F43                     	;# 
  6006  1F44                     	;# 
  6007  1F45                     	;# 
  6008  1F46                     	;# 
  6009  1F47                     	;# 
  6010  1F48                     	;# 
  6011  1F49                     	;# 
  6012  1F4A                     	;# 
  6013  1F4E                     	;# 
  6014  1F4F                     	;# 
  6015  1F50                     	;# 
  6016  1F51                     	;# 
  6017  1F52                     	;# 
  6018  1F53                     	;# 
  6019  1F54                     	;# 
  6020  1F55                     	;# 
  6021  1FE4                     	;# 
  6022  1FE5                     	;# 
  6023  1FE6                     	;# 
  6024  1FE7                     	;# 
  6025  1FE8                     	;# 
  6026  1FE8                     	;# 
  6027  1FE9                     	;# 
  6028  1FEA                     	;# 
  6029  1FEB                     	;# 
  6030  1FED                     	;# 
  6031  1FEE                     	;# 
  6032  1FEF                     	;# 
  6033  0000                     	;# 
  6034  0001                     	;# 
  6035  0002                     	;# 
  6036  0003                     	;# 
  6037  0004                     	;# 
  6038  0005                     	;# 
  6039  0006                     	;# 
  6040  0007                     	;# 
  6041  0008                     	;# 
  6042  0009                     	;# 
  6043  000A                     	;# 
  6044  000B                     	;# 
  6045  000C                     	;# 
  6046  000D                     	;# 
  6047  000E                     	;# 
  6048  0012                     	;# 
  6049  0013                     	;# 
  6050  0014                     	;# 
  6051  0018                     	;# 
  6052  0019                     	;# 
  6053  001A                     	;# 
  6054  008C                     	;# 
  6055  008C                     	;# 
  6056  008D                     	;# 
  6057  008E                     	;# 
  6058  008E                     	;# 
  6059  008F                     	;# 
  6060  0090                     	;# 
  6061  0090                     	;# 
  6062  0091                     	;# 
  6063  0092                     	;# 
  6064  0092                     	;# 
  6065  0093                     	;# 
  6066  0094                     	;# 
  6067  0094                     	;# 
  6068  0095                     	;# 
  6069  0096                     	;# 
  6070  0096                     	;# 
  6071  0097                     	;# 
  6072  0098                     	;# 
  6073  0099                     	;# 
  6074  009A                     	;# 
  6075  009B                     	;# 
  6076  009B                     	;# 
  6077  009C                     	;# 
  6078  009D                     	;# 
  6079  009D                     	;# 
  6080  009E                     	;# 
  6081  009F                     	;# 
  6082  010C                     	;# 
  6083  010C                     	;# 
  6084  010D                     	;# 
  6085  010E                     	;# 
  6086  010F                     	;# 
  6087  010F                     	;# 
  6088  0110                     	;# 
  6089  0111                     	;# 
  6090  0112                     	;# 
  6091  0113                     	;# 
  6092  0114                     	;# 
  6093  0115                     	;# 
  6094  0116                     	;# 
  6095  0117                     	;# 
  6096  0118                     	;# 
  6097  0119                     	;# 
  6098  0119                     	;# 
  6099  0119                     	;# 
  6100  011A                     	;# 
  6101  011A                     	;# 
  6102  011A                     	;# 
  6103  011B                     	;# 
  6104  011B                     	;# 
  6105  011B                     	;# 
  6106  011B                     	;# 
  6107  011B                     	;# 
  6108  011C                     	;# 
  6109  011C                     	;# 
  6110  011C                     	;# 
  6111  011D                     	;# 
  6112  011D                     	;# 
  6113  011D                     	;# 
  6114  011E                     	;# 
  6115  011E                     	;# 
  6116  011E                     	;# 
  6117  011F                     	;# 
  6118  011F                     	;# 
  6119  011F                     	;# 
  6120  011F                     	;# 
  6121  011F                     	;# 
  6122  018C                     	;# 
  6123  018D                     	;# 
  6124  018E                     	;# 
  6125  018F                     	;# 
  6126  0190                     	;# 
  6127  0191                     	;# 
  6128  0192                     	;# 
  6129  0196                     	;# 
  6130  0197                     	;# 
  6131  0198                     	;# 
  6132  0199                     	;# 
  6133  019A                     	;# 
  6134  019B                     	;# 
  6135  019C                     	;# 
  6136  020C                     	;# 
  6137  020D                     	;# 
  6138  020E                     	;# 
  6139  020E                     	;# 
  6140  020F                     	;# 
  6141  020F                     	;# 
  6142  0210                     	;# 
  6143  0210                     	;# 
  6144  0211                     	;# 
  6145  0211                     	;# 
  6146  0212                     	;# 
  6147  0213                     	;# 
  6148  0214                     	;# 
  6149  0214                     	;# 
  6150  0215                     	;# 
  6151  0215                     	;# 
  6152  0216                     	;# 
  6153  0216                     	;# 
  6154  0217                     	;# 
  6155  0217                     	;# 
  6156  0218                     	;# 
  6157  0219                     	;# 
  6158  021A                     	;# 
  6159  021A                     	;# 
  6160  021B                     	;# 
  6161  021B                     	;# 
  6162  021C                     	;# 
  6163  021C                     	;# 
  6164  021D                     	;# 
  6165  021D                     	;# 
  6166  021E                     	;# 
  6167  021F                     	;# 
  6168  028C                     	;# 
  6169  028C                     	;# 
  6170  028D                     	;# 
  6171  028D                     	;# 
  6172  028E                     	;# 
  6173  028F                     	;# 
  6174  0290                     	;# 
  6175  0291                     	;# 
  6176  0292                     	;# 
  6177  0292                     	;# 
  6178  0293                     	;# 
  6179  0293                     	;# 
  6180  0294                     	;# 
  6181  0295                     	;# 
  6182  0296                     	;# 
  6183  0297                     	;# 
  6184  0298                     	;# 
  6185  0298                     	;# 
  6186  0299                     	;# 
  6187  0299                     	;# 
  6188  029A                     	;# 
  6189  029B                     	;# 
  6190  029C                     	;# 
  6191  029D                     	;# 
  6192  029F                     	;# 
  6193  030C                     	;# 
  6194  030C                     	;# 
  6195  030D                     	;# 
  6196  030E                     	;# 
  6197  030F                     	;# 
  6198  0310                     	;# 
  6199  0310                     	;# 
  6200  0311                     	;# 
  6201  0312                     	;# 
  6202  0313                     	;# 
  6203  0314                     	;# 
  6204  0314                     	;# 
  6205  0315                     	;# 
  6206  0316                     	;# 
  6207  0317                     	;# 
  6208  0318                     	;# 
  6209  0318                     	;# 
  6210  0319                     	;# 
  6211  031A                     	;# 
  6212  031B                     	;# 
  6213  038C                     	;# 
  6214  038C                     	;# 
  6215  038D                     	;# 
  6216  038E                     	;# 
  6217  0390                     	;# 
  6218  0390                     	;# 
  6219  0391                     	;# 
  6220  0392                     	;# 
  6221  048C                     	;# 
  6222  048C                     	;# 
  6223  048D                     	;# 
  6224  048E                     	;# 
  6225  048F                     	;# 
  6226  048F                     	;# 
  6227  0490                     	;# 
  6228  0491                     	;# 
  6229  0492                     	;# 
  6230  0492                     	;# 
  6231  0493                     	;# 
  6232  0494                     	;# 
  6233  0495                     	;# 
  6234  0495                     	;# 
  6235  0496                     	;# 
  6236  0497                     	;# 
  6237  0498                     	;# 
  6238  0499                     	;# 
  6239  049A                     	;# 
  6240  049B                     	;# 
  6241  049C                     	;# 
  6242  049D                     	;# 
  6243  058C                     	;# 
  6244  058C                     	;# 
  6245  058D                     	;# 
  6246  058E                     	;# 
  6247  058F                     	;# 
  6248  058F                     	;# 
  6249  0590                     	;# 
  6250  0591                     	;# 
  6251  0592                     	;# 
  6252  0593                     	;# 
  6253  059C                     	;# 
  6254  059C                     	;# 
  6255  059D                     	;# 
  6256  059D                     	;# 
  6257  059E                     	;# 
  6258  059F                     	;# 
  6259  060C                     	;# 
  6260  060C                     	;# 
  6261  060D                     	;# 
  6262  060D                     	;# 
  6263  060E                     	;# 
  6264  060F                     	;# 
  6265  0610                     	;# 
  6266  0611                     	;# 
  6267  0612                     	;# 
  6268  0613                     	;# 
  6269  0614                     	;# 
  6270  0616                     	;# 
  6271  0616                     	;# 
  6272  0617                     	;# 
  6273  0617                     	;# 
  6274  0618                     	;# 
  6275  0619                     	;# 
  6276  061A                     	;# 
  6277  061B                     	;# 
  6278  061C                     	;# 
  6279  061D                     	;# 
  6280  061E                     	;# 
  6281  070C                     	;# 
  6282  070D                     	;# 
  6283  070E                     	;# 
  6284  070F                     	;# 
  6285  0710                     	;# 
  6286  0711                     	;# 
  6287  0712                     	;# 
  6288  0713                     	;# 
  6289  0714                     	;# 
  6290  0716                     	;# 
  6291  0717                     	;# 
  6292  0718                     	;# 
  6293  0719                     	;# 
  6294  071A                     	;# 
  6295  071B                     	;# 
  6296  071C                     	;# 
  6297  071D                     	;# 
  6298  071E                     	;# 
  6299  0796                     	;# 
  6300  0797                     	;# 
  6301  0798                     	;# 
  6302  0799                     	;# 
  6303  079A                     	;# 
  6304  079B                     	;# 
  6305  079C                     	;# 
  6306  079D                     	;# 
  6307  080C                     	;# 
  6308  080D                     	;# 
  6309  080E                     	;# 
  6310  080F                     	;# 
  6311  0810                     	;# 
  6312  0811                     	;# 
  6313  0812                     	;# 
  6314  0813                     	;# 
  6315  0814                     	;# 
  6316  081A                     	;# 
  6317  081A                     	;# 
  6318  081B                     	;# 
  6319  081C                     	;# 
  6320  081C                     	;# 
  6321  081D                     	;# 
  6322  081E                     	;# 
  6323  081F                     	;# 
  6324  088C                     	;# 
  6325  088D                     	;# 
  6326  088E                     	;# 
  6327  088F                     	;# 
  6328  0890                     	;# 
  6329  0891                     	;# 
  6330  0892                     	;# 
  6331  0893                     	;# 
  6332  0895                     	;# 
  6333  0896                     	;# 
  6334  0897                     	;# 
  6335  0898                     	;# 
  6336  0899                     	;# 
  6337  089A                     	;# 
  6338  089B                     	;# 
  6339  090C                     	;# 
  6340  090E                     	;# 
  6341  090F                     	;# 
  6342  091F                     	;# 
  6343  098F                     	;# 
  6344  098F                     	;# 
  6345  0990                     	;# 
  6346  0991                     	;# 
  6347  0992                     	;# 
  6348  0993                     	;# 
  6349  0994                     	;# 
  6350  0995                     	;# 
  6351  0996                     	;# 
  6352  0997                     	;# 
  6353  1E0F                     	;# 
  6354  1E10                     	;# 
  6355  1E11                     	;# 
  6356  1E12                     	;# 
  6357  1E13                     	;# 
  6358  1E14                     	;# 
  6359  1E15                     	;# 
  6360  1E16                     	;# 
  6361  1E17                     	;# 
  6362  1E18                     	;# 
  6363  1E19                     	;# 
  6364  1E1A                     	;# 
  6365  1E1B                     	;# 
  6366  1E1C                     	;# 
  6367  1E1D                     	;# 
  6368  1E1E                     	;# 
  6369  1E1F                     	;# 
  6370  1E20                     	;# 
  6371  1E21                     	;# 
  6372  1E22                     	;# 
  6373  1E23                     	;# 
  6374  1E24                     	;# 
  6375  1E25                     	;# 
  6376  1E26                     	;# 
  6377  1E27                     	;# 
  6378  1E28                     	;# 
  6379  1E29                     	;# 
  6380  1E2A                     	;# 
  6381  1E2B                     	;# 
  6382  1E2C                     	;# 
  6383  1E2D                     	;# 
  6384  1E2E                     	;# 
  6385  1E2F                     	;# 
  6386  1E30                     	;# 
  6387  1E31                     	;# 
  6388  1E32                     	;# 
  6389  1E33                     	;# 
  6390  1E34                     	;# 
  6391  1E35                     	;# 
  6392  1E36                     	;# 
  6393  1E37                     	;# 
  6394  1E8F                     	;# 
  6395  1E90                     	;# 
  6396  1E91                     	;# 
  6397  1E92                     	;# 
  6398  1E93                     	;# 
  6399  1E94                     	;# 
  6400  1E95                     	;# 
  6401  1E96                     	;# 
  6402  1E97                     	;# 
  6403  1E9C                     	;# 
  6404  1E9D                     	;# 
  6405  1E9E                     	;# 
  6406  1EA1                     	;# 
  6407  1EA2                     	;# 
  6408  1EA3                     	;# 
  6409  1EA4                     	;# 
  6410  1EA9                     	;# 
  6411  1EAA                     	;# 
  6412  1EB1                     	;# 
  6413  1EB2                     	;# 
  6414  1EB8                     	;# 
  6415  1EB9                     	;# 
  6416  1EBA                     	;# 
  6417  1EBB                     	;# 
  6418  1EBC                     	;# 
  6419  1EBD                     	;# 
  6420  1EBE                     	;# 
  6421  1EC3                     	;# 
  6422  1EC5                     	;# 
  6423  1EC6                     	;# 
  6424  1EC7                     	;# 
  6425  1EC8                     	;# 
  6426  1EC9                     	;# 
  6427  1ECA                     	;# 
  6428  1ECB                     	;# 
  6429  1ECB                     	;# 
  6430  1ECB                     	;# 
  6431  1ECC                     	;# 
  6432  1ECC                     	;# 
  6433  1ECC                     	;# 
  6434  1F10                     	;# 
  6435  1F11                     	;# 
  6436  1F12                     	;# 
  6437  1F14                     	;# 
  6438  1F15                     	;# 
  6439  1F1C                     	;# 
  6440  1F1D                     	;# 
  6441  1F1E                     	;# 
  6442  1F1F                     	;# 
  6443  1F20                     	;# 
  6444  1F21                     	;# 
  6445  1F22                     	;# 
  6446  1F23                     	;# 
  6447  1F24                     	;# 
  6448  1F25                     	;# 
  6449  1F26                     	;# 
  6450  1F27                     	;# 
  6451  1F38                     	;# 
  6452  1F39                     	;# 
  6453  1F3A                     	;# 
  6454  1F3B                     	;# 
  6455  1F3C                     	;# 
  6456  1F3D                     	;# 
  6457  1F3E                     	;# 
  6458  1F3F                     	;# 
  6459  1F43                     	;# 
  6460  1F44                     	;# 
  6461  1F45                     	;# 
  6462  1F46                     	;# 
  6463  1F47                     	;# 
  6464  1F48                     	;# 
  6465  1F49                     	;# 
  6466  1F4A                     	;# 
  6467  1F4E                     	;# 
  6468  1F4F                     	;# 
  6469  1F50                     	;# 
  6470  1F51                     	;# 
  6471  1F52                     	;# 
  6472  1F53                     	;# 
  6473  1F54                     	;# 
  6474  1F55                     	;# 
  6475  1FE4                     	;# 
  6476  1FE5                     	;# 
  6477  1FE6                     	;# 
  6478  1FE7                     	;# 
  6479  1FE8                     	;# 
  6480  1FE8                     	;# 
  6481  1FE9                     	;# 
  6482  1FEA                     	;# 
  6483  1FEB                     	;# 
  6484  1FED                     	;# 
  6485  1FEE                     	;# 
  6486  1FEF                     	;_dmxData
  6487                           
  6488                           	psect	idataBANK0
  6489  07FC                     __pidataBANK0:	
  6490                           
  6491                           ;initializer for _threshold
  6492  07FC  3490               	retlw	144
  6493  07FD  3406               	retlw	6
  6494                           
  6495                           ;initializer for _address
  6496  07FE  3401               	retlw	1
  6497  07FF  3400               	retlw	0
  6498                           
  6499                           	psect	idataBANK1
  6500  0002                     __pidataBANK1:	
  6501                           
  6502                           ;initializer for _delay
  6503  0002  340A               	retlw	10
  6504  0003  3400               	retlw	0
  6505                           
  6506                           	psect	stringtext1
  6507  04C4                     __pstringtext1:	
  6508  04C4                     _charTable:	
  6509  04C4  3400               	retlw	0
  6510  04C5  3482               	retlw	130
  6511  04C6  3421               	retlw	33
  6512  04C7  3400               	retlw	0
  6513  04C8  3400               	retlw	0
  6514  04C9  3400               	retlw	0
  6515  04CA  3400               	retlw	0
  6516  04CB  3402               	retlw	2
  6517  04CC  3439               	retlw	57
  6518  04CD  340F               	retlw	15
  6519  04CE  3400               	retlw	0
  6520  04CF  3400               	retlw	0
  6521  04D0  3400               	retlw	0
  6522  04D1  3440               	retlw	64
  6523  04D2  3480               	retlw	128
  6524  04D3  3400               	retlw	0
  6525  04D4  343F               	retlw	63
  6526  04D5  3406               	retlw	6
  6527  04D6  345B               	retlw	91
  6528  04D7  344F               	retlw	79
  6529  04D8  3466               	retlw	102
  6530  04D9  346D               	retlw	109
  6531  04DA  347D               	retlw	125
  6532  04DB  3407               	retlw	7
  6533  04DC  347F               	retlw	127
  6534  04DD  346F               	retlw	111
  6535  04DE  3400               	retlw	0
  6536  04DF  3400               	retlw	0
  6537  04E0  3400               	retlw	0
  6538  04E1  3448               	retlw	72
  6539  04E2  3400               	retlw	0
  6540  04E3  3453               	retlw	83
  6541  04E4  3400               	retlw	0
  6542  04E5  3477               	retlw	119
  6543  04E6  347C               	retlw	124
  6544  04E7  3439               	retlw	57
  6545  04E8  345E               	retlw	94
  6546  04E9  3479               	retlw	121
  6547  04EA  3471               	retlw	113
  6548  04EB  346F               	retlw	111
  6549  04EC  3476               	retlw	118
  6550  04ED  3406               	retlw	6
  6551  04EE  341E               	retlw	30
  6552  04EF  3400               	retlw	0
  6553  04F0  3438               	retlw	56
  6554  04F1  3400               	retlw	0
  6555  04F2  3454               	retlw	84
  6556  04F3  343F               	retlw	63
  6557  04F4  3473               	retlw	115
  6558  04F5  3467               	retlw	103
  6559  04F6  3450               	retlw	80
  6560  04F7  346D               	retlw	109
  6561  04F8  3478               	retlw	120
  6562  04F9  343E               	retlw	62
  6563  04FA  3400               	retlw	0
  6564  04FB  3400               	retlw	0
  6565  04FC  3400               	retlw	0
  6566  04FD  346E               	retlw	110
  6567  04FE  3400               	retlw	0
  6568  04FF  3439               	retlw	57
  6569  0500  3400               	retlw	0
  6570  0501  340F               	retlw	15
  6571  0502  3400               	retlw	0
  6572  0503  3408               	retlw	8
  6573  0504  3463               	retlw	99
  6574  0505  345F               	retlw	95
  6575  0506  347C               	retlw	124
  6576  0507  3458               	retlw	88
  6577  0508  345E               	retlw	94
  6578  0509  347B               	retlw	123
  6579  050A  3471               	retlw	113
  6580  050B  346F               	retlw	111
  6581  050C  3474               	retlw	116
  6582  050D  3402               	retlw	2
  6583  050E  341E               	retlw	30
  6584  050F  3400               	retlw	0
  6585  0510  3406               	retlw	6
  6586  0511  3400               	retlw	0
  6587  0512  3454               	retlw	84
  6588  0513  345C               	retlw	92
  6589  0514  3473               	retlw	115
  6590  0515  3467               	retlw	103
  6591  0516  3450               	retlw	80
  6592  0517  346D               	retlw	109
  6593  0518  3478               	retlw	120
  6594  0519  341C               	retlw	28
  6595  051A  3400               	retlw	0
  6596  051B  3400               	retlw	0
  6597  051C  3400               	retlw	0
  6598  051D  346E               	retlw	110
  6599  051E  3400               	retlw	0
  6600  051F  3439               	retlw	57
  6601  0520  3430               	retlw	48
  6602  0521  340F               	retlw	15
  6603  0522  3400               	retlw	0
  6604  0523  3400               	retlw	0
  6605  0524                     __end_of_charTable:	
  6606                           
  6607                           	psect	nvBANK0
  6608  006E                     __pnvBANK0:	
  6609  006E                     _eusart1TxBufferRemaining:	
  6610  006E                     	ds	1
  6611                           
  6612                           	psect	nvBANK1
  6613  00D0                     __pnvBANK1:	
  6614  00D0                     _ADCC_ADTI_InterruptHandler:	
  6615  00D0                     	ds	2
  6616  00D2                     _TMR0_InterruptHandler:	
  6617  00D2                     	ds	2
  6618  00D4                     _EUSART1_ErrorHandler:	
  6619  00D4                     	ds	2
  6620  00D6                     _EUSART1_OverrunErrorHandler:	
  6621  00D6                     	ds	2
  6622  00D8                     _EUSART1_FramingErrorHandler:	
  6623  00D8                     	ds	2
  6624  00DA                     _EUSART1_RxDefaultInterruptHandler:	
  6625  00DA                     	ds	2
  6626  00DC                     _EUSART1_TxDefaultInterruptHandler:	
  6627  00DC                     	ds	2
  6628  000B                     _INTCONbits	set	11
  6629  0014                     _TRISC	set	20
  6630  0013                     _TRISB	set	19
  6631  0012                     _TRISA	set	18
  6632  001A                     _LATC	set	26
  6633  0019                     _LATB	set	25
  6634  0018                     _LATA	set	24
  6635  000C                     _PORTA	set	12
  6636  000E                     _PORTC	set	14
  6637  00A3                     _TRISC3	set	163
  6638  00A4                     _TRISC4	set	164
  6639  00A6                     _TRISC6	set	166
  6640  00A7                     _TRISC7	set	167
  6641  00CE                     _LATB6	set	206
  6642  009E                     _TRISB6	set	158
  6643  0090                     _ADERRL	set	144
  6644  0091                     _ADERRH	set	145
  6645  009B                     _ADPREVL	set	155
  6646  009C                     _ADPREVH	set	156
  6647  0094                     _ADFLTRL	set	148
  6648  0095                     _ADFLTRH	set	149
  6649  0096                     _ADACCL	set	150
  6650  0097                     _ADACCH	set	151
  6651  0099                     _ADCNT	set	153
  6652  009D                     _ADRESL	set	157
  6653  009E                     _ADRESH	set	158
  6654  009F                     _ADPCH	set	159
  6655  009A                     _ADRPT	set	154
  6656  0098                     _ADACCU	set	152
  6657  0093                     _ADSTPTH	set	147
  6658  0092                     _ADSTPTL	set	146
  6659  008F                     _ADUTHH	set	143
  6660  008E                     _ADUTHL	set	142
  6661  008D                     _ADLTHH	set	141
  6662  008C                     _ADLTHL	set	140
  6663  011A                     _TXREG	set	282
  6664  0112                     _ADCON1bits	set	274
  6665  0115                     _ADSTATbits	set	277
  6666  0113                     _ADCON2bits	set	275
  6667  0114                     _ADCON3bits	set	276
  6668  0111                     _ADCON0bits	set	273
  6669  0111                     _ADCON0	set	273
  6670  0118                     _ADCLK	set	280
  6671  0117                     _ADACT	set	279
  6672  0116                     _ADREF	set	278
  6673  0115                     _ADSTAT	set	277
  6674  0114                     _ADCON3	set	276
  6675  0113                     _ADCON2	set	275
  6676  0112                     _ADCON1	set	274
  6677  0110                     _ADPREH	set	272
  6678  010F                     _ADPREL	set	271
  6679  010E                     _ADCAP	set	270
  6680  010D                     _ADACQH	set	269
  6681  010C                     _ADACQL	set	268
  6682  0119                     _RC1REG	set	281
  6683  011D                     _RC1STAbits	set	285
  6684  011A                     _TX1REG	set	282
  6685  011E                     _TX1STAbits	set	286
  6686  011C                     _SP1BRGH	set	284
  6687  011B                     _SP1BRGL	set	283
  6688  011E                     _TX1STA	set	286
  6689  011D                     _RC1STA	set	285
  6690  011F                     _BAUD1CON	set	287
  6691  018C                     _SSP1BUF	set	396
  6692  0191                     _SSP1CON2bits	set	401
  6693  0190                     _SSP1CON1bits	set	400
  6694  018D                     _SSP1ADD	set	397
  6695  0192                     _SSP1CON3	set	402
  6696  0190                     _SSP1CON1	set	400
  6697  018F                     _SSP1STAT	set	399
  6698  028E                     _T2CONbits	set	654
  6699  0290                     _T2CLKCON	set	656
  6700  0318                     _CCPR4L	set	792
  6701  0319                     _CCPR4H	set	793
  6702  0314                     _CCPR3L	set	788
  6703  0315                     _CCPR3H	set	789
  6704  0310                     _CCPR2L	set	784
  6705  0311                     _CCPR2H	set	785
  6706  030C                     _CCPR1L	set	780
  6707  030D                     _CCPR1H	set	781
  6708  031A                     _CCP4CONbits	set	794
  6709  0316                     _CCP3CONbits	set	790
  6710  0312                     _CCP2CONbits	set	786
  6711  030E                     _CCP1CONbits	set	782
  6712  059E                     _T0CON0bits	set	1438
  6713  059E                     _T0CON0	set	1438
  6714  059C                     _TMR0L	set	1436
  6715  059D                     _TMR0H	set	1437
  6716  059F                     _T0CON1	set	1439
  6717  070D                     _PIR1bits	set	1805
  6718  0717                     _PIE1bits	set	1815
  6719  070F                     _PIR3bits	set	1807
  6720  070C                     _PIR0bits	set	1804
  6721  0716                     _PIE0bits	set	1814
  6722  0719                     _PIE3bits	set	1817
  6723  079D                     _PMD7	set	1949
  6724  079C                     _PMD6	set	1948
  6725  079B                     _PMD5	set	1947
  6726  079A                     _PMD4	set	1946
  6727  0799                     _PMD3	set	1945
  6728  0798                     _PMD2	set	1944
  6729  0797                     _PMD1	set	1943
  6730  0796                     _PMD0	set	1942
  6731  0892                     _OSCTUNE	set	2194
  6732  0893                     _OSCFRQ	set	2195
  6733  0891                     _OSCEN	set	2193
  6734  088F                     _OSCCON3	set	2191
  6735  088D                     _OSCCON1	set	2189
  6736  1ECB                     _RX1DTPPS	set	7883
  6737  1EC6                     _SSP1DATPPS	set	7878
  6738  1EC5                     _SSP1CLKPPS	set	7877
  6739  1F23                     _RC3PPS	set	7971
  6740  1F24                     _RC4PPS	set	7972
  6741  1F26                     _RC6PPS	set	7974
  6742  1F27                     _RC7PPS	set	7975
  6743  1F15                     _RA5PPS	set	7957
  6744  1F14                     _RA4PPS	set	7956
  6745  1F51                     _SLRCONC	set	8017
  6746  1F46                     _SLRCONB	set	8006
  6747  1F3B                     _SLRCONA	set	7995
  6748  1F50                     _ODCONC	set	8016
  6749  1F45                     _ODCONB	set	8005
  6750  1F3A                     _ODCONA	set	7994
  6751  1F4F                     _WPUC	set	8015
  6752  1F39                     _WPUA	set	7993
  6753  1F44                     _WPUB	set	8004
  6754  1F38                     _ANSELA	set	7992
  6755  1F43                     _ANSELB	set	8003
  6756  1F4E                     _ANSELC	set	8014
  6757                           
  6758                           ; #config settings
  6759  0000                     
  6760                           	psect	cinit
  6761  003B                     start_initialization:	
  6762  003B                     __initialization:		;BIGRAM
  6763                           
  6764                           ; Initialize objects allocated to BANK0
  6765  003B  3187  27FC  3180   	fcall	__pidataBANK0	;fetch initializer
  6766  003E  00EA               	movwf	__pdataBANK0& (0+127)
  6767  003F  3187  27FD  3180   	fcall	__pidataBANK0+1	;fetch initializer
  6768  0042  00EB               	movwf	(__pdataBANK0+1)& (0+127)
  6769  0043  3187  27FE  3180   	fcall	__pidataBANK0+2	;fetch initializer
  6770  0046  00EC               	movwf	(__pdataBANK0+2)& (0+127)
  6771  0047  3187  27FF  3180   	fcall	__pidataBANK0+3	;fetch initializer
  6772  004A  00ED               	movwf	(__pdataBANK0+3)& (0+127)
  6773                           
  6774                           ; Initialize objects allocated to BANK1
  6775  004B  0141               	movlb	1	; select bank1
  6776  004C  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  6777  004F  00DE               	movwf	__pdataBANK1& (0+127)
  6778  0050  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  6779  0053  00DF               	movwf	(__pdataBANK1+1)& (0+127)
  6780                           
  6781                           ; Clear objects allocated to BIGRAM
  6782  0054  30EF               	movlw	low (0+9711)
  6783  0055  0084               	movwf	4
  6784  0056  3025               	movlw	high (0+9711)
  6785  0057  0085               	movwf	5
  6786  0058  3001               	movlw	1
  6787  0059  00FE               	movwf	btemp
  6788  005A  3002               	movlw	2
  6789  005B  00FF               	movwf	btemp+1
  6790  005C  318E  264D  3180   	fcall	clear_ram0
  6791                           
  6792                           ; Clear objects allocated to COMMON
  6793  005F  01F0               	clrf	__pbssCOMMON& (0+127)
  6794  0060  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  6795  0061  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  6796  0062  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  6797  0063  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  6798  0064  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  6799                           
  6800                           ; Clear objects allocated to BANK0
  6801  0065  3046               	movlw	low __pbssBANK0
  6802  0066  0084               	movwf	4
  6803  0067  3000               	movlw	high __pbssBANK0
  6804  0068  0085               	movwf	5
  6805  0069  3024               	movlw	36
  6806  006A  00FE               	movwf	btemp
  6807  006B  3000               	movlw	0
  6808  006C  00FF               	movwf	btemp+1
  6809  006D  318E  264D  3180   	fcall	clear_ram0
  6810                           
  6811                           ; Clear objects allocated to BANK1
  6812  0070  30A0               	movlw	low __pbssBANK1
  6813  0071  0084               	movwf	4
  6814  0072  3000               	movlw	high __pbssBANK1
  6815  0073  0085               	movwf	5
  6816  0074  3030               	movlw	48
  6817  0075  00FE               	movwf	btemp
  6818  0076  3000               	movlw	0
  6819  0077  00FF               	movwf	btemp+1
  6820  0078  318E  264D  3180   	fcall	clear_ram0
  6821                           
  6822                           ; Clear objects allocated to BANK2
  6823  007B  3020               	movlw	low __pbssBANK2
  6824  007C  0084               	movwf	4
  6825  007D  3001               	movlw	high __pbssBANK2
  6826  007E  0085               	movwf	5
  6827  007F  3020               	movlw	32
  6828  0080  00FE               	movwf	btemp
  6829  0081  3000               	movlw	0
  6830  0082  00FF               	movwf	btemp+1
  6831  0083  318E  264D         	fcall	clear_ram0
  6832  0085                     end_of_initialization:	
  6833                           ;End of C runtime variable initialization code
  6834                           
  6835  0085                     __end_of__initialization:	
  6836  0085  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6837  0086  0140               	movlb	0
  6838  0087  3185  2DEB         	ljmp	_main	;jump to C main() function
  6839                           
  6840                           	psect	bssCOMMON
  6841  0070                     __pbssCOMMON:	
  6842  0070                     _eusart1RxTail:	
  6843  0070                     	ds	1
  6844  0071                     _eusart1RxHead:	
  6845  0071                     	ds	1
  6846  0072                     _eusart1TxTail:	
  6847  0072                     	ds	1
  6848  0073                     _eusart1TxHead:	
  6849  0073                     	ds	1
  6850  0074                     I2C1_ISR@i2c_address:	
  6851  0074                     	ds	2
  6852                           
  6853                           	psect	bssBANK0
  6854  0046                     __pbssBANK0:	
  6855  0046                     _i2c1_object:	
  6856  0046                     	ds	5
  6857  004B                     _lastBeat:	
  6858  004B                     	ds	2
  6859  004D                     controller@lastTime:	
  6860  004D                     	ds	2
  6861  004F                     _lastTime:	
  6862  004F                     	ds	2
  6863  0051                     _currentTime:	
  6864  0051                     	ds	2
  6865  0053                     _toggleCheck:	
  6866  0053                     	ds	1
  6867  0054                     _dmxOn:	
  6868  0054                     	ds	1
  6869  0055                     _offCheck:	
  6870  0055                     	ds	1
  6871  0056                     _lastDetected:	
  6872  0056                     	ds	1
  6873  0057                     _thresholdExceeded:	
  6874  0057                     	ds	1
  6875  0058                     _detected:	
  6876  0058                     	ds	1
  6877  0059                     _menu:	
  6878  0059                     	ds	1
  6879  005A                     _enter:	
  6880  005A                     	ds	1
  6881  005B                     _down:	
  6882  005B                     	ds	1
  6883  005C                     _up:	
  6884  005C                     	ds	1
  6885  005D                     _isOn:	
  6886  005D                     	ds	1
  6887  005E                     I2C1_ISR@i2c_10bit_address_restart:	
  6888  005E                     	ds	1
  6889  005F                     I2C1_ISR@i2c_bytes_left:	
  6890  005F                     	ds	1
  6891  0060                     I2C1_ISR@pi2c_buf_ptr:	
  6892  0060                     	ds	1
  6893  0061                     _p_i2c1_current:	
  6894  0061                     	ds	1
  6895  0062                     _p_i2c1_trb_current:	
  6896  0062                     	ds	1
  6897  0063                     _i2c1_trb_count:	
  6898  0063                     	ds	1
  6899  0064                     _i2c1_state:	
  6900  0064                     	ds	1
  6901  0065                     _eusart1RxLastError:	
  6902  0065                     	ds	1
  6903  0066                     _eusart1RxCount:	
  6904  0066                     	ds	1
  6905  0067                     _i2c1_tr_queue:	
  6906  0067                     	ds	3
  6907                           
  6908                           	psect	dataBANK0
  6909  006A                     __pdataBANK0:	
  6910  006A                     _threshold:	
  6911  006A                     	ds	2
  6912  006C                     _address:	
  6913  006C                     	ds	2
  6914                           
  6915                           	psect	bssBANK1
  6916  00A0                     __pbssBANK1:	
  6917  00A0                     _eusart1RxStatusBuffer:	
  6918  00A0                     	ds	8
  6919  00A8                     _eusart1RxBuffer:	
  6920  00A8                     	ds	8
  6921  00B0                     _eusart1TxBuffer:	
  6922  00B0                     	ds	8
  6923  00B8                     led@lastTime:	
  6924  00B8                     	ds	2
  6925  00BA                     dmx@lastTime:	
  6926  00BA                     	ds	2
  6927  00BC                     _dmxPointer:	
  6928  00BC                     	ds	2
  6929  00BE                     _thresholdCount:	
  6930  00BE                     	ds	2
  6931  00C0                     _lastRun:	
  6932  00C0                     	ds	2
  6933  00C2                     _bpm:	
  6934  00C2                     	ds	2
  6935  00C4                     _lastActiveTime:	
  6936  00C4                     	ds	2
  6937  00C6                     _count:	
  6938  00C6                     	ds	2
  6939  00C8                     I2C1_MasterRead@trBlock:	
  6940  00C8                     	ds	4
  6941  00CC                     I2C1_MasterWrite@trBlock:	
  6942  00CC                     	ds	4
  6943                           
  6944                           	psect	dataBANK1
  6945  00DE                     __pdataBANK1:	
  6946  00DE                     _delay:	
  6947  00DE                     	ds	2
  6948                           
  6949                           	psect	bssBANK2
  6950  0120                     __pbssBANK2:	
  6951  0120                     _buttons:	
  6952  0120                     	ds	32
  6953                           
  6954                           	psect	clrtext
  6955  0E4D                     clear_ram0:	
  6956                           ;	Called with FSR0 containing the base address, and
  6957                           ;	btemp/btemp+1 has the size to clear
  6958                           
  6959  0E4D  0064               	clrwdt	;clear the watchdog before getting into this loop
  6960  0E4E                     clrloop0:	
  6961  0E4E  0180               	clrf	0	;clear RAM location pointed to by FSR
  6962  0E4F  3101               	addfsr 0,1
  6963  0E50  3001               	movlw	1
  6964  0E51  02FE               	subwf	126,f
  6965  0E52  3000               	movlw	0
  6966  0E53  3BFF               	subwfb	127,f
  6967  0E54  087F               	movf	127,w
  6968  0E55  047E               	iorwf	126,w
  6969  0E56  1903               	btfsc	3,2
  6970  0E57  3400               	retlw	0	;all done for this memory range, return
  6971  0E58  2E4E               	goto	clrloop0	;have we reached the end yet?
  6972                           
  6973                           	psect	cstackBANK1
  6974  00E0                     __pcstackBANK1:	
  6975  00E0                     ??_main:	
  6976                           
  6977                           ; 1 bytes @ 0x0
  6978  00E0                     	ds	2
  6979                           
  6980                           	psect	cstackCOMMON
  6981  0076                     __pcstackCOMMON:	
  6982  0076                     ?_EUSART1_Receive_ISR:	
  6983  0076                     ?_EUSART1_Transmit_ISR:	
  6984                           ; 1 bytes @ 0x0
  6985                           
  6986  0076                     ??_EUSART1_Transmit_ISR:	
  6987                           ; 1 bytes @ 0x0
  6988                           
  6989  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  6990                           ; 1 bytes @ 0x0
  6991                           
  6992  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  6993                           ; 1 bytes @ 0x0
  6994                           
  6995  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  6996                           ; 1 bytes @ 0x0
  6997                           
  6998  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  6999                           ; 1 bytes @ 0x0
  7000                           
  7001  0076                     ?_EUSART1_DefaultErrorHandler:	
  7002                           ; 1 bytes @ 0x0
  7003                           
  7004  0076                     ?_EUSART1_RxDataHandler:	
  7005                           ; 1 bytes @ 0x0
  7006                           
  7007  0076                     ??_EUSART1_RxDataHandler:	
  7008                           ; 1 bytes @ 0x0
  7009                           
  7010  0076                     ?_PMD_Initialize:	
  7011                           ; 1 bytes @ 0x0
  7012                           
  7013  0076                     ?_PIN_MANAGER_Initialize:	
  7014                           ; 1 bytes @ 0x0
  7015                           
  7016  0076                     ?_OSCILLATOR_Initialize:	
  7017                           ; 1 bytes @ 0x0
  7018                           
  7019  0076                     ?_I2C1_Initialize:	
  7020                           ; 1 bytes @ 0x0
  7021                           
  7022  0076                     ?_ADCC_Initialize:	
  7023                           ; 1 bytes @ 0x0
  7024                           
  7025  0076                     ?_TMR0_Initialize:	
  7026                           ; 1 bytes @ 0x0
  7027                           
  7028  0076                     ?_TMR0_ISR:	
  7029                           ; 1 bytes @ 0x0
  7030                           
  7031  0076                     ??_TMR0_ISR:	
  7032                           ; 1 bytes @ 0x0
  7033                           
  7034  0076                     ?_I2C1_BusCollisionISR:	
  7035                           ; 1 bytes @ 0x0
  7036                           
  7037  0076                     ??_I2C1_BusCollisionISR:	
  7038                           ; 1 bytes @ 0x0
  7039                           
  7040  0076                     ?_I2C1_ISR:	
  7041                           ; 1 bytes @ 0x0
  7042                           
  7043  0076                     ?_ADCC_ThresholdISR:	
  7044                           ; 1 bytes @ 0x0
  7045                           
  7046  0076                     ??_ADCC_ThresholdISR:	
  7047                           ; 1 bytes @ 0x0
  7048                           
  7049  0076                     ?_TMR0_DefaultInterruptHandler:	
  7050                           ; 1 bytes @ 0x0
  7051                           
  7052  0076                     ??_TMR0_DefaultInterruptHandler:	
  7053                           ; 1 bytes @ 0x0
  7054                           
  7055  0076                     ?_I2C1_Stop:	
  7056                           ; 1 bytes @ 0x0
  7057                           
  7058  0076                     ??_I2C1_Stop:	
  7059                           ; 1 bytes @ 0x0
  7060                           
  7061  0076                     ?_I2C1_FunctionComplete:	
  7062                           ; 1 bytes @ 0x0
  7063                           
  7064  0076                     ??_I2C1_FunctionComplete:	
  7065                           ; 1 bytes @ 0x0
  7066                           
  7067  0076                     ?_ADCC_DefaultInterruptHandler:	
  7068                           ; 1 bytes @ 0x0
  7069                           
  7070  0076                     ??_ADCC_DefaultInterruptHandler:	
  7071                           ; 1 bytes @ 0x0
  7072                           
  7073  0076                     ?_CLOCK_init:	
  7074                           ; 1 bytes @ 0x0
  7075                           
  7076  0076                     ?_DMX_ISR:	
  7077                           ; 1 bytes @ 0x0
  7078                           
  7079  0076                     ??_DMX_ISR:	
  7080                           ; 1 bytes @ 0x0
  7081                           
  7082  0076                     ?_TM1650_init:	
  7083                           ; 1 bytes @ 0x0
  7084                           
  7085  0076                     ?_BUTTONS_init:	
  7086                           ; 1 bytes @ 0x0
  7087                           
  7088  0076                     ?_CONTROLLER_init:	
  7089                           ; 1 bytes @ 0x0
  7090                           
  7091  0076                     ?_initLED:	
  7092                           ; 1 bytes @ 0x0
  7093                           
  7094  0076                     ?_BEAT_init:	
  7095                           ; 1 bytes @ 0x0
  7096                           
  7097  0076                     ?_BEAT_task:	
  7098                           ; 1 bytes @ 0x0
  7099                           
  7100  0076                     ?_LED_task:	
  7101                           ; 1 bytes @ 0x0
  7102                           
  7103  0076                     ?_BUTTONS_task:	
  7104                           ; 1 bytes @ 0x0
  7105                           
  7106  0076                     ?_CONTROLLER_task:	
  7107                           ; 1 bytes @ 0x0
  7108                           
  7109  0076                     ?_DMX_task:	
  7110                           ; 1 bytes @ 0x0
  7111                           
  7112  0076                     ?_CLOCK_timerCallback:	
  7113                           ; 1 bytes @ 0x0
  7114                           
  7115  0076                     ??_CLOCK_timerCallback:	
  7116                           ; 1 bytes @ 0x0
  7117                           
  7118  0076                     ?_TM1650_enable:	
  7119                           ; 1 bytes @ 0x0
  7120                           
  7121  0076                     ?_EUSART1_Initialize:	
  7122                           ; 1 bytes @ 0x0
  7123                           
  7124  0076                     ?_SYSTEM_Initialize:	
  7125                           ; 1 bytes @ 0x0
  7126                           
  7127  0076                     ?_INTERRUPT_InterruptManager:	
  7128                           ; 1 bytes @ 0x0
  7129                           
  7130  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  7131                           ; 1 bytes @ 0x0
  7132                           
  7133  0076                     ?_ADCC_StartConversion:	
  7134                           ; 1 bytes @ 0x0
  7135                           
  7136  0076                     ?_main:	
  7137                           ; 1 bytes @ 0x0
  7138                           
  7139  0076                     ?_TM1650_isEnabled:	
  7140                           ; 1 bytes @ 0x0
  7141                           
  7142  0076                     ?_address_inc:	
  7143                           ; 1 bytes @ 0x0
  7144                           
  7145  0076                     ?_address_dec:	
  7146                           ; 1 bytes @ 0x0
  7147                           
  7148  0076                     ?_adcThresholdHandler:	
  7149                           ; 1 bytes @ 0x0
  7150                           
  7151  0076                     ??_adcThresholdHandler:	
  7152                           ; 1 bytes @ 0x0
  7153                           
  7154  0076                     ?_BEAT_detected:	
  7155                           ; 1 bytes @ 0x0
  7156                           
  7157  0076                     ?_isDMXOn:	
  7158                           ; 1 bytes @ 0x0
  7159                           
  7160                           
  7161                           ; 1 bytes @ 0x0
  7162  0076                     	ds	1
  7163  0077                     ??_EUSART1_Receive_ISR:	
  7164  0077                     ??_EUSART1_DefaultErrorHandler:	
  7165                           ; 1 bytes @ 0x1
  7166                           
  7167  0077                     I2C1_Stop@completion_code:	
  7168                           ; 1 bytes @ 0x1
  7169                           
  7170                           
  7171                           ; 1 bytes @ 0x1
  7172  0077                     	ds	1
  7173  0078                     ??_I2C1_ISR:	
  7174                           
  7175                           ; 1 bytes @ 0x2
  7176  0078                     	ds	4
  7177  007C                     ??_INTERRUPT_InterruptManager:	
  7178                           
  7179                           	psect	cstackBANK0
  7180  0020                     __pcstackBANK0:	
  7181                           ; 1 bytes @ 0x6
  7182                           
  7183  0020                     ?_EUSART1_SetRxInterruptHandler:	
  7184  0020                     ?_EUSART1_SetTxInterruptHandler:	
  7185                           ; 1 bytes @ 0x0
  7186                           
  7187  0020                     ?_EUSART1_SetFramingErrorHandler:	
  7188                           ; 1 bytes @ 0x0
  7189                           
  7190  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  7191                           ; 1 bytes @ 0x0
  7192                           
  7193  0020                     ?_EUSART1_SetErrorHandler:	
  7194                           ; 1 bytes @ 0x0
  7195                           
  7196  0020                     ??_PMD_Initialize:	
  7197                           ; 1 bytes @ 0x0
  7198                           
  7199  0020                     ??_PIN_MANAGER_Initialize:	
  7200                           ; 1 bytes @ 0x0
  7201                           
  7202  0020                     ??_OSCILLATOR_Initialize:	
  7203                           ; 1 bytes @ 0x0
  7204                           
  7205  0020                     ??_I2C1_Initialize:	
  7206                           ; 1 bytes @ 0x0
  7207                           
  7208  0020                     ?_TMR0_SetInterruptHandler:	
  7209                           ; 1 bytes @ 0x0
  7210                           
  7211  0020                     ?_I2C1_MasterWriteTRBBuild:	
  7212                           ; 1 bytes @ 0x0
  7213                           
  7214  0020                     ?_I2C1_MasterTRBInsert:	
  7215                           ; 1 bytes @ 0x0
  7216                           
  7217  0020                     ?_ADCC_SetADTIInterruptHandler:	
  7218                           ; 1 bytes @ 0x0
  7219                           
  7220  0020                     ??_initLED:	
  7221                           ; 1 bytes @ 0x0
  7222                           
  7223  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  7224                           ; 1 bytes @ 0x0
  7225                           
  7226  0020                     ??_ADCC_StartConversion:	
  7227                           ; 1 bytes @ 0x0
  7228                           
  7229  0020                     ?_ADCC_SetUpperThreshold:	
  7230                           ; 1 bytes @ 0x0
  7231                           
  7232  0020                     ??_TM1650_isEnabled:	
  7233                           ; 1 bytes @ 0x0
  7234                           
  7235  0020                     ?_init:	
  7236                           ; 1 bytes @ 0x0
  7237                           
  7238  0020                     ??_BEAT_detected:	
  7239                           ; 1 bytes @ 0x0
  7240                           
  7241  0020                     ??_isDMXOn:	
  7242                           ; 1 bytes @ 0x0
  7243                           
  7244  0020                     ?_LED_setColor:	
  7245                           ; 1 bytes @ 0x0
  7246                           
  7247  0020                     ?_CLOCK_getTime:	
  7248                           ; 1 bytes @ 0x0
  7249                           
  7250  0020                     ?_BUTTONS_isClicked:	
  7251                           ; 2 bytes @ 0x0
  7252                           
  7253  0020                     ?___lwdiv:	
  7254                           ; 2 bytes @ 0x0
  7255                           
  7256  0020                     ?___lwmod:	
  7257                           ; 2 bytes @ 0x0
  7258                           
  7259  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  7260                           ; 2 bytes @ 0x0
  7261                           
  7262  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  7263                           ; 1 bytes @ 0x0
  7264                           
  7265  0020                     ADCC_StartConversion@channel:	
  7266                           ; 1 bytes @ 0x0
  7267                           
  7268  0020                     LED_setColor@green:	
  7269                           ; 1 bytes @ 0x0
  7270                           
  7271  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  7272                           ; 1 bytes @ 0x0
  7273                           
  7274  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  7275                           ; 2 bytes @ 0x0
  7276                           
  7277  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  7278                           ; 2 bytes @ 0x0
  7279                           
  7280  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  7281                           ; 2 bytes @ 0x0
  7282                           
  7283  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  7284                           ; 2 bytes @ 0x0
  7285                           
  7286  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7287                           ; 2 bytes @ 0x0
  7288                           
  7289  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  7290                           ; 2 bytes @ 0x0
  7291                           
  7292  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  7293                           ; 2 bytes @ 0x0
  7294                           
  7295  0020                     init@port:	
  7296                           ; 2 bytes @ 0x0
  7297                           
  7298  0020                     ___lwdiv@divisor:	
  7299                           ; 2 bytes @ 0x0
  7300                           
  7301  0020                     ___lwmod@divisor:	
  7302                           ; 2 bytes @ 0x0
  7303                           
  7304                           
  7305                           ; 2 bytes @ 0x0
  7306  0020                     	ds	1
  7307  0021                     I2C1_MasterTRBInsert@pflag:	
  7308  0021                     I2C1_MasterWriteTRBBuild@length:	
  7309                           ; 1 bytes @ 0x1
  7310                           
  7311  0021                     LED_setColor@white:	
  7312                           ; 1 bytes @ 0x1
  7313                           
  7314                           
  7315                           ; 1 bytes @ 0x1
  7316  0021                     	ds	1
  7317  0022                     ??_EUSART1_SetRxInterruptHandler:	
  7318  0022                     ??_EUSART1_SetTxInterruptHandler:	
  7319                           ; 1 bytes @ 0x2
  7320                           
  7321  0022                     ??_EUSART1_SetFramingErrorHandler:	
  7322                           ; 1 bytes @ 0x2
  7323                           
  7324  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  7325                           ; 1 bytes @ 0x2
  7326                           
  7327  0022                     ??_EUSART1_SetErrorHandler:	
  7328                           ; 1 bytes @ 0x2
  7329                           
  7330  0022                     ??_ADCC_Initialize:	
  7331                           ; 1 bytes @ 0x2
  7332                           
  7333  0022                     ??_TMR0_Initialize:	
  7334                           ; 1 bytes @ 0x2
  7335                           
  7336  0022                     ??_TMR0_SetInterruptHandler:	
  7337                           ; 1 bytes @ 0x2
  7338                           
  7339  0022                     ??_I2C1_MasterTRBInsert:	
  7340                           ; 1 bytes @ 0x2
  7341                           
  7342  0022                     ??_ADCC_SetADTIInterruptHandler:	
  7343                           ; 1 bytes @ 0x2
  7344                           
  7345  0022                     ??_CLOCK_init:	
  7346                           ; 1 bytes @ 0x2
  7347                           
  7348  0022                     ??_BEAT_init:	
  7349                           ; 1 bytes @ 0x2
  7350                           
  7351  0022                     ??_BUTTONS_task:	
  7352                           ; 1 bytes @ 0x2
  7353                           
  7354  0022                     ??_DMX_task:	
  7355                           ; 1 bytes @ 0x2
  7356                           
  7357  0022                     ??_EUSART1_Initialize:	
  7358                           ; 1 bytes @ 0x2
  7359                           
  7360  0022                     ??_ADCC_SetUpperThreshold:	
  7361                           ; 1 bytes @ 0x2
  7362                           
  7363  0022                     ??_CLOCK_getTime:	
  7364                           ; 1 bytes @ 0x2
  7365                           
  7366  0022                     init@pin:	
  7367                           ; 1 bytes @ 0x2
  7368                           
  7369  0022                     LED_setColor@blue:	
  7370                           ; 1 bytes @ 0x2
  7371                           
  7372  0022                     I2C1_MasterWriteTRBBuild@address:	
  7373                           ; 1 bytes @ 0x2
  7374                           
  7375  0022                     ___lwdiv@dividend:	
  7376                           ; 2 bytes @ 0x2
  7377                           
  7378  0022                     ___lwmod@dividend:	
  7379                           ; 2 bytes @ 0x2
  7380                           
  7381                           
  7382                           ; 2 bytes @ 0x2
  7383  0022                     	ds	1
  7384  0023                     ??_SYSTEM_Initialize:	
  7385  0023                     ??_init:	
  7386                           ; 1 bytes @ 0x3
  7387                           
  7388  0023                     ??_BUTTONS_isClicked:	
  7389                           ; 1 bytes @ 0x3
  7390                           
  7391  0023                     ??_LED_setColor:	
  7392                           ; 1 bytes @ 0x3
  7393                           
  7394  0023                     I2C1_MasterTRBInsert@count:	
  7395                           ; 1 bytes @ 0x3
  7396                           
  7397  0023                     BUTTONS_isClicked@button:	
  7398                           ; 1 bytes @ 0x3
  7399                           
  7400                           
  7401                           ; 1 bytes @ 0x3
  7402  0023                     	ds	1
  7403  0024                     ??_I2C1_MasterWriteTRBBuild:	
  7404  0024                     ??___lwdiv:	
  7405                           ; 1 bytes @ 0x4
  7406                           
  7407  0024                     ??___lwmod:	
  7408                           ; 1 bytes @ 0x4
  7409                           
  7410  0024                     init@btn:	
  7411                           ; 1 bytes @ 0x4
  7412                           
  7413  0024                     DMX_task@time:	
  7414                           ; 1 bytes @ 0x4
  7415                           
  7416                           
  7417                           ; 2 bytes @ 0x4
  7418  0024                     	ds	1
  7419  0025                     ??_BUTTONS_init:	
  7420  0025                     BUTTONS_task@i:	
  7421                           ; 1 bytes @ 0x5
  7422                           
  7423  0025                     ___lwdiv@counter:	
  7424                           ; 1 bytes @ 0x5
  7425                           
  7426  0025                     ___lwmod@counter:	
  7427                           ; 1 bytes @ 0x5
  7428                           
  7429                           
  7430                           ; 1 bytes @ 0x5
  7431  0025                     	ds	1
  7432  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  7433  0026                     BUTTONS_task@time:	
  7434                           ; 1 bytes @ 0x6
  7435                           
  7436  0026                     ___lwdiv@quotient:	
  7437                           ; 2 bytes @ 0x6
  7438                           
  7439                           
  7440                           ; 2 bytes @ 0x6
  7441  0026                     	ds	1
  7442  0027                     ?_I2C1_MasterWrite:	
  7443  0027                     I2C1_MasterWrite@length:	
  7444                           ; 1 bytes @ 0x7
  7445                           
  7446  0027                     LED_setColor@lo1:	
  7447                           ; 1 bytes @ 0x7
  7448                           
  7449                           
  7450                           ; 2 bytes @ 0x7
  7451  0027                     	ds	1
  7452  0028                     ??_BEAT_task:	
  7453  0028                     BUTTONS_task@btn:	
  7454                           ; 1 bytes @ 0x8
  7455                           
  7456  0028                     I2C1_MasterWrite@address:	
  7457                           ; 1 bytes @ 0x8
  7458                           
  7459                           
  7460                           ; 2 bytes @ 0x8
  7461  0028                     	ds	2
  7462  002A                     I2C1_MasterWrite@pflag:	
  7463  002A                     BEAT_task@offset:	
  7464                           ; 1 bytes @ 0xA
  7465                           
  7466                           
  7467                           ; 2 bytes @ 0xA
  7468  002A                     	ds	1
  7469  002B                     ??_I2C1_MasterWrite:	
  7470  002B                     LED_setColor@lo2:	
  7471                           ; 1 bytes @ 0xB
  7472                           
  7473                           
  7474                           ; 2 bytes @ 0xB
  7475  002B                     	ds	2
  7476  002D                     I2C1_MasterWrite@pdata:	
  7477                           
  7478                           ; 1 bytes @ 0xD
  7479  002D                     	ds	1
  7480  002E                     ?_writeData:	
  7481  002E                     writeData@data:	
  7482                           ; 1 bytes @ 0xE
  7483                           
  7484                           
  7485                           ; 1 bytes @ 0xE
  7486  002E                     	ds	1
  7487  002F                     ??_writeData:	
  7488  002F                     LED_setColor@lo3:	
  7489                           ; 1 bytes @ 0xF
  7490                           
  7491                           
  7492                           ; 2 bytes @ 0xF
  7493  002F                     	ds	3
  7494  0032                     writeData@address:	
  7495                           
  7496                           ; 1 bytes @ 0x12
  7497  0032                     	ds	1
  7498  0033                     writeData@status:	
  7499  0033                     LED_setColor@lo4:	
  7500                           ; 1 bytes @ 0x13
  7501                           
  7502                           
  7503                           ; 2 bytes @ 0x13
  7504  0033                     	ds	1
  7505  0034                     ??_TM1650_enable:	
  7506  0034                     ?_TM1650_setDigit:	
  7507                           ; 1 bytes @ 0x14
  7508                           
  7509  0034                     TM1650_setDigit@data:	
  7510                           ; 1 bytes @ 0x14
  7511                           
  7512  0034                     TM1650_enable@enable:	
  7513                           ; 1 bytes @ 0x14
  7514                           
  7515                           
  7516                           ; 1 bytes @ 0x14
  7517  0034                     	ds	1
  7518  0035                     ??_TM1650_init:	
  7519  0035                     LED_setColor@red:	
  7520                           ; 1 bytes @ 0x15
  7521                           
  7522  0035                     TM1650_setDigit@dp:	
  7523                           ; 1 bytes @ 0x15
  7524                           
  7525                           
  7526                           ; 2 bytes @ 0x15
  7527  0035                     	ds	1
  7528  0036                     ??_LED_task:	
  7529                           
  7530                           ; 1 bytes @ 0x16
  7531  0036                     	ds	1
  7532  0037                     ??_TM1650_setDigit:	
  7533                           
  7534                           ; 1 bytes @ 0x17
  7535  0037                     	ds	3
  7536  003A                     TM1650_setDigit@digit:	
  7537                           
  7538                           ; 1 bytes @ 0x1A
  7539  003A                     	ds	1
  7540  003B                     ?_TM1650_fastPrintNum:	
  7541  003B                     TM1650_fastPrintNum@num:	
  7542                           ; 1 bytes @ 0x1B
  7543                           
  7544                           
  7545                           ; 2 bytes @ 0x1B
  7546  003B                     	ds	2
  7547  003D                     ??_TM1650_fastPrintNum:	
  7548                           
  7549                           ; 1 bytes @ 0x1D
  7550  003D                     	ds	1
  7551  003E                     TM1650_fastPrintNum@numWrite:	
  7552                           
  7553                           ; 2 bytes @ 0x1E
  7554  003E                     	ds	2
  7555  0040                     TM1650_fastPrintNum@i:	
  7556                           
  7557                           ; 2 bytes @ 0x20
  7558  0040                     	ds	1
  7559  0041                     LED_task@time:	
  7560                           
  7561                           ; 2 bytes @ 0x21
  7562  0041                     	ds	1
  7563  0042                     ??_CONTROLLER_init:	
  7564  0042                     ??_CONTROLLER_task:	
  7565                           ; 1 bytes @ 0x22
  7566                           
  7567  0042                     ??_address_inc:	
  7568                           ; 1 bytes @ 0x22
  7569                           
  7570  0042                     ??_address_dec:	
  7571                           ; 1 bytes @ 0x22
  7572                           
  7573                           
  7574                           ; 1 bytes @ 0x22
  7575  0042                     	ds	2
  7576  0044                     CONTROLLER_task@time:	
  7577                           
  7578                           ; 2 bytes @ 0x24
  7579  0044                     	ds	2
  7580                           
  7581                           	psect	maintext
  7582  05EB                     __pmaintext:	
  7583 ;;
  7584 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7585 ;;
  7586 ;; *************** function _main *****************
  7587 ;; Defined at:
  7588 ;;		line 15 in file "main.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;		None
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;		None
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7597 ;; Tracked objects:
  7598 ;;		On entry : B3F/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7604 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7605 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7606 ;;Total ram usage:        2 bytes
  7607 ;; Hardware stack levels required when called:   12
  7608 ;; This function calls:
  7609 ;;		_BEAT_init
  7610 ;;		_BEAT_task
  7611 ;;		_BUTTONS_init
  7612 ;;		_BUTTONS_task
  7613 ;;		_CLOCK_init
  7614 ;;		_CONTROLLER_init
  7615 ;;		_CONTROLLER_task
  7616 ;;		_DMX_task
  7617 ;;		_EUSART1_SetRxInterruptHandler
  7618 ;;		_LED_task
  7619 ;;		_SYSTEM_Initialize
  7620 ;;		_TM1650_init
  7621 ;;		_initLED
  7622 ;; This function is called by:
  7623 ;;		Startup code after reset
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           
  7628                           ;psect for function _main
  7629  05EB                     _main:	
  7630                           
  7631                           ;main.c: 17:     SYSTEM_Initialize();
  7632                           
  7633                           ;incstack = 0
  7634                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7635  05EB  318E  26D6  3185   	fcall	_SYSTEM_Initialize
  7636                           
  7637                           ;main.c: 18:     CLOCK_init();
  7638  05EE  318D  25D0  3185   	fcall	_CLOCK_init
  7639                           
  7640                           ;main.c: 19:     TRISB6 = 0;
  7641  05F1  0140               	movlb	0	; select bank0
  7642  05F2  1313               	bcf	19,6	;volatile
  7643                           
  7644                           ;main.c: 20:     LATB6 = 0;
  7645  05F3  1319               	bcf	25,6	;volatile
  7646                           
  7647                           ;main.c: 21:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  7648  05F4  305E               	movlw	low _DMX_ISR
  7649  05F5  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  7650  05F6  3007               	movlw	high _DMX_ISR
  7651  05F7  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  7652  05F8  318E  2628  3185   	fcall	_EUSART1_SetRxInterruptHandler
  7653                           
  7654                           ;main.c: 27:     (INTCONbits.GIE = 1);
  7655  05FB  178B               	bsf	11,7	;volatile
  7656                           
  7657                           ;main.c: 30:     (INTCONbits.PEIE = 1);
  7658  05FC  170B               	bsf	11,6	;volatile
  7659                           
  7660                           ;main.c: 37:      _delay((unsigned long)((500)*(32000000/4000.0)));
  7661  05FD  3015               	movlw	21
  7662  05FE  0141               	movlb	1	; select bank1
  7663  05FF  00E1               	movwf	(??_main^(0+128)+1)
  7664  0600  304B               	movlw	75
  7665  0601  00E0               	movwf	??_main^(0+128)
  7666  0602  30BE               	movlw	190
  7667  0603                     u2777:	
  7668  0603  0B89               	decfsz	9,f
  7669  0604  2E03               	goto	u2777
  7670  0605  0BE0               	decfsz	??_main^(0+128),f
  7671  0606  2E03               	goto	u2777
  7672  0607  0BE1               	decfsz	(??_main^(0+128)+1),f
  7673  0608  2E03               	goto	u2777
  7674  0609  0000               	nop
  7675                           
  7676                           ;main.c: 38:     TM1650_init();
  7677  060A  318D  25BB  3185   	fcall	_TM1650_init
  7678                           
  7679                           ;main.c: 39:     BUTTONS_init();
  7680  060D  3185  25AC  3185   	fcall	_BUTTONS_init
  7681                           
  7682                           ;main.c: 40:     CONTROLLER_init();
  7683  0610  318D  25D8  3185   	fcall	_CONTROLLER_init
  7684                           
  7685                           ;main.c: 41:     initLED();
  7686  0613  3187  2787  3185   	fcall	_initLED
  7687                           
  7688                           ;main.c: 42:     BEAT_init();
  7689  0616  318E  2684  3185   	fcall	_BEAT_init
  7690  0619                     l4233:	
  7691                           
  7692                           ;main.c: 46:         BEAT_task();
  7693  0619  3182  229C  3185   	fcall	_BEAT_task
  7694                           
  7695                           ;main.c: 47:         LED_task();
  7696  061C  3183  235E  3185   	fcall	_LED_task
  7697                           
  7698                           ;main.c: 48:         BUTTONS_task();
  7699  061F  3181  21D2  3185   	fcall	_BUTTONS_task
  7700                           
  7701                           ;main.c: 49:         CONTROLLER_task();
  7702  0622  3184  2456  3185   	fcall	_CONTROLLER_task
  7703                           
  7704                           ;main.c: 50:         DMX_task();
  7705  0625  3186  2665  3185   	fcall	_DMX_task
  7706  0628  2E19               	goto	l4233
  7707  0629                     __end_of_main:	
  7708                           
  7709                           	psect	text1
  7710  0787                     __ptext1:	
  7711 ;; *************** function _initLED *****************
  7712 ;; Defined at:
  7713 ;;		line 11 in file "led.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;		None
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;		None
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  1    wreg      void 
  7720 ;; Registers used:
  7721 ;;		wreg, status,2, status,0
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7731 ;;Total ram usage:        0 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:    4
  7734 ;; This function calls:
  7735 ;;		Nothing
  7736 ;; This function is called by:
  7737 ;;		_main
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           
  7742                           ;psect for function _initLED
  7743  0787                     _initLED:	
  7744                           
  7745                           ;led.c: 14:     TRISC7 = 0;
  7746                           
  7747                           ;incstack = 0
  7748                           ; Regs used in _initLED: [wreg+status,2+status,0]
  7749  0787  0140               	movlb	0	; select bank0
  7750  0788  1394               	bcf	20,7	;volatile
  7751                           
  7752                           ;led.c: 15:     TRISC6 = 0;
  7753  0789  1314               	bcf	20,6	;volatile
  7754                           
  7755                           ;led.c: 16:     TRISC4 = 0;
  7756  078A  1214               	bcf	20,4	;volatile
  7757                           
  7758                           ;led.c: 17:     TRISC3 = 0;
  7759  078B  1194               	bcf	20,3	;volatile
  7760                           
  7761                           ;led.c: 19:     T2CLKCON = 0x01;
  7762  078C  3001               	movlw	1
  7763  078D  0145               	movlb	5	; select bank5
  7764  078E  0090               	movwf	16	;volatile
  7765                           
  7766                           ;led.c: 20:     T2CONbits.ON = 1;
  7767  078F  178E               	bsf	14,7	;volatile
  7768                           
  7769                           ;led.c: 22:     CCP1CONbits.CCP1EN = 1;
  7770  0790  0146               	movlb	6	; select bank6
  7771  0791  178E               	bsf	14,7	;volatile
  7772                           
  7773                           ;led.c: 23:     CCP1CONbits.MODE = 0b1100;
  7774  0792  080E               	movf	14,w	;volatile
  7775  0793  39F0               	andlw	-16
  7776  0794  380C               	iorlw	12
  7777  0795  008E               	movwf	14	;volatile
  7778                           
  7779                           ;led.c: 24:     CCP2CONbits.CCP2EN = 1;
  7780  0796  1792               	bsf	18,7	;volatile
  7781                           
  7782                           ;led.c: 25:     CCP2CONbits.MODE = 0b1100;
  7783  0797  0812               	movf	18,w	;volatile
  7784  0798  39F0               	andlw	-16
  7785  0799  380C               	iorlw	12
  7786  079A  0092               	movwf	18	;volatile
  7787                           
  7788                           ;led.c: 26:     CCP3CONbits.CCP3EN = 1;
  7789  079B  1796               	bsf	22,7	;volatile
  7790                           
  7791                           ;led.c: 27:     CCP3CONbits.MODE = 0b1100;
  7792  079C  0816               	movf	22,w	;volatile
  7793  079D  39F0               	andlw	-16
  7794  079E  380C               	iorlw	12
  7795  079F  0096               	movwf	22	;volatile
  7796                           
  7797                           ;led.c: 28:     CCP4CONbits.CCP4EN = 1;
  7798  07A0  179A               	bsf	26,7	;volatile
  7799                           
  7800                           ;led.c: 29:     CCP4CONbits.MODE = 0b1100;
  7801  07A1  081A               	movf	26,w	;volatile
  7802  07A2  39F0               	andlw	-16
  7803  07A3  380C               	iorlw	12
  7804  07A4  009A               	movwf	26	;volatile
  7805                           
  7806                           ;led.c: 32:     RC7PPS = 0x09;
  7807  07A5  3009               	movlw	9
  7808  07A6  017E               	movlb	62	; select bank62
  7809  07A7  00A7               	movwf	39	;volatile
  7810                           
  7811                           ;led.c: 33:     RC6PPS = 0x0A;
  7812  07A8  300A               	movlw	10
  7813  07A9  00A6               	movwf	38	;volatile
  7814                           
  7815                           ;led.c: 34:     RC4PPS = 0x0B;
  7816  07AA  300B               	movlw	11
  7817  07AB  00A4               	movwf	36	;volatile
  7818                           
  7819                           ;led.c: 35:     RC3PPS = 0x0C;
  7820  07AC  300C               	movlw	12
  7821  07AD  00A3               	movwf	35	;volatile
  7822  07AE  0008               	return
  7823  07AF                     __end_of_initLED:	
  7824                           
  7825                           	psect	text2
  7826  0DBB                     __ptext2:	
  7827 ;; *************** function _TM1650_init *****************
  7828 ;; Defined at:
  7829 ;;		line 28 in file "tm1650.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;		None
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      void 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7847 ;;Total ram usage:        0 bytes
  7848 ;; Hardware stack levels used:    1
  7849 ;; Hardware stack levels required when called:    9
  7850 ;; This function calls:
  7851 ;;		_TM1650_enable
  7852 ;; This function is called by:
  7853 ;;		_main
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           
  7858                           ;psect for function _TM1650_init
  7859  0DBB                     _TM1650_init:	
  7860                           
  7861                           ;tm1650.c: 29:     TM1650_enable(1);
  7862                           
  7863                           ;incstack = 0
  7864                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7865  0DBB  3001               	movlw	1
  7866  0DBC  318E  26AC         	fcall	_TM1650_enable
  7867  0DBE  0008               	return
  7868  0DBF                     __end_of_TM1650_init:	
  7869                           
  7870                           	psect	text3
  7871  0ED6                     __ptext3:	
  7872 ;; *************** function _SYSTEM_Initialize *****************
  7873 ;; Defined at:
  7874 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;		None
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;		None
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      void 
  7881 ;; Registers used:
  7882 ;;		wreg, status,2, status,0, pclath, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7892 ;;Total ram usage:        0 bytes
  7893 ;; Hardware stack levels used:    1
  7894 ;; Hardware stack levels required when called:    6
  7895 ;; This function calls:
  7896 ;;		_ADCC_Initialize
  7897 ;;		_EUSART1_Initialize
  7898 ;;		_I2C1_Initialize
  7899 ;;		_OSCILLATOR_Initialize
  7900 ;;		_PIN_MANAGER_Initialize
  7901 ;;		_PMD_Initialize
  7902 ;;		_TMR0_Initialize
  7903 ;; This function is called by:
  7904 ;;		_main
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           
  7909                           ;psect for function _SYSTEM_Initialize
  7910  0ED6                     _SYSTEM_Initialize:	
  7911                           
  7912                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7913                           
  7914                           ;incstack = 0
  7915                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7916  0ED6  318E  2643  318E   	fcall	_PMD_Initialize
  7917                           
  7918                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7919  0ED9  3187  2704  318E   	fcall	_PIN_MANAGER_Initialize
  7920                           
  7921                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7922  0EDC  318E  263A  318E   	fcall	_OSCILLATOR_Initialize
  7923                           
  7924                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  7925  0EDF  318F  2730  318E   	fcall	_I2C1_Initialize
  7926                           
  7927                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  7928  0EE2  3187  27D6  318E   	fcall	_ADCC_Initialize
  7929                           
  7930                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  7931  0EE5  318E  2698  318E   	fcall	_TMR0_Initialize
  7932                           
  7933                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  7934  0EE8  3185  2569         	fcall	_EUSART1_Initialize
  7935  0EEA  0008               	return
  7936  0EEB                     __end_of_SYSTEM_Initialize:	
  7937                           
  7938                           	psect	text4
  7939  0E98                     __ptext4:	
  7940 ;; *************** function _TMR0_Initialize *****************
  7941 ;; Defined at:
  7942 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;		None
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1    wreg      void 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2, status,0, pclath, cstack
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7960 ;;Total ram usage:        0 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; Hardware stack levels required when called:    5
  7963 ;; This function calls:
  7964 ;;		_TMR0_SetInterruptHandler
  7965 ;; This function is called by:
  7966 ;;		_SYSTEM_Initialize
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           
  7971                           ;psect for function _TMR0_Initialize
  7972  0E98                     _TMR0_Initialize:	
  7973                           
  7974                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  7975                           
  7976                           ;incstack = 0
  7977                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7978  0E98  3045               	movlw	69
  7979  0E99  014B               	movlb	11	; select bank11
  7980  0E9A  009F               	movwf	31	;volatile
  7981                           
  7982                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  7983  0E9B  30F9               	movlw	249
  7984  0E9C  009D               	movwf	29	;volatile
  7985                           
  7986                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  7987  0E9D  019C               	clrf	28	;volatile
  7988                           
  7989                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  7990  0E9E  014E               	movlb	14	; select bank14
  7991  0E9F  128C               	bcf	12,5	;volatile
  7992                           
  7993                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  7994  0EA0  1696               	bsf	22,5	;volatile
  7995                           
  7996                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7997  0EA1  30A6               	movlw	low _TMR0_DefaultInterruptHandler
  7998  0EA2  0140               	movlb	0	; select bank0
  7999  0EA3  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8000  0EA4  300D               	movlw	high _TMR0_DefaultInterruptHandler
  8001  0EA5  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8002  0EA6  318D  25FB         	fcall	_TMR0_SetInterruptHandler
  8003                           
  8004                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8005  0EA8  3080               	movlw	128
  8006  0EA9  014B               	movlb	11	; select bank11
  8007  0EAA  009E               	movwf	30	;volatile
  8008  0EAB  0008               	return
  8009  0EAC                     __end_of_TMR0_Initialize:	
  8010                           
  8011                           	psect	text5
  8012  0E43                     __ptext5:	
  8013 ;; *************** function _PMD_Initialize *****************
  8014 ;; Defined at:
  8015 ;;		line 75 in file "mcc_generated_files/mcc.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;		None
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;		None
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  1    wreg      void 
  8022 ;; Registers used:
  8023 ;;		status,2
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8033 ;;Total ram usage:        0 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:    4
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_SYSTEM_Initialize
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           
  8044                           ;psect for function _PMD_Initialize
  8045  0E43                     _PMD_Initialize:	
  8046                           
  8047                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  8048                           
  8049                           ;incstack = 0
  8050                           ; Regs used in _PMD_Initialize: [status,2]
  8051  0E43  014F               	movlb	15	; select bank15
  8052  0E44  0196               	clrf	22	;volatile
  8053                           
  8054                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  8055  0E45  0197               	clrf	23	;volatile
  8056                           
  8057                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  8058  0E46  0198               	clrf	24	;volatile
  8059                           
  8060                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  8061  0E47  0199               	clrf	25	;volatile
  8062                           
  8063                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  8064  0E48  019A               	clrf	26	;volatile
  8065                           
  8066                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  8067  0E49  019B               	clrf	27	;volatile
  8068                           
  8069                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  8070  0E4A  019C               	clrf	28	;volatile
  8071                           
  8072                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  8073  0E4B  019D               	clrf	29	;volatile
  8074  0E4C  0008               	return
  8075  0E4D                     __end_of_PMD_Initialize:	
  8076                           
  8077                           	psect	text6
  8078  0704                     __ptext6:	
  8079 ;; *************** function _PIN_MANAGER_Initialize *****************
  8080 ;; Defined at:
  8081 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:    4
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_SYSTEM_Initialize
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           
  8110                           ;psect for function _PIN_MANAGER_Initialize
  8111  0704                     _PIN_MANAGER_Initialize:	
  8112                           
  8113                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8114                           
  8115                           ;incstack = 0
  8116                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8117  0704  0140               	movlb	0	; select bank0
  8118  0705  0198               	clrf	24	;volatile
  8119                           
  8120                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8121  0706  0199               	clrf	25	;volatile
  8122                           
  8123                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8124  0707  019A               	clrf	26	;volatile
  8125                           
  8126                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8127  0708  303F               	movlw	63
  8128  0709  0092               	movwf	18	;volatile
  8129                           
  8130                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  8131  070A  30F0               	movlw	240
  8132  070B  0093               	movwf	19	;volatile
  8133                           
  8134                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8135  070C  30FF               	movlw	255
  8136  070D  0094               	movwf	20	;volatile
  8137                           
  8138                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  8139  070E  30F8               	movlw	248
  8140  070F  017E               	movlb	62	; select bank62
  8141  0710  00CE               	movwf	78	;volatile
  8142                           
  8143                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  8144  0711  30E0               	movlw	224
  8145  0712  00C3               	movwf	67	;volatile
  8146                           
  8147                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  8148  0713  3003               	movlw	3
  8149  0714  00B8               	movwf	56	;volatile
  8150                           
  8151                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8152  0715  01C4               	clrf	68	;volatile
  8153                           
  8154                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  8155  0716  3004               	movlw	4
  8156  0717  00B9               	movwf	57	;volatile
  8157                           
  8158                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  8159  0718  3007               	movlw	7
  8160  0719  00CF               	movwf	79	;volatile
  8161                           
  8162                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8163  071A  01BA               	clrf	58	;volatile
  8164                           
  8165                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8166  071B  01C5               	clrf	69	;volatile
  8167                           
  8168                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8169  071C  01D0               	clrf	80	;volatile
  8170                           
  8171                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8172  071D  3037               	movlw	55
  8173  071E  00BB               	movwf	59	;volatile
  8174                           
  8175                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8176  071F  30F0               	movlw	240
  8177  0720  00C6               	movwf	70	;volatile
  8178                           
  8179                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8180  0721  30FF               	movlw	255
  8181  0722  00D1               	movwf	81	;volatile
  8182                           
  8183                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  8184  0723  3005               	movlw	5
  8185  0724  017D               	movlb	61	; select bank61
  8186  0725  00C5               	movwf	69	;volatile
  8187                           
  8188                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  8189  0726  3014               	movlw	20
  8190  0727  017E               	movlb	62	; select bank62
  8191  0728  0094               	movwf	20	;volatile
  8192                           
  8193                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  8194  0729  3013               	movlw	19
  8195  072A  0095               	movwf	21	;volatile
  8196                           
  8197                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  8198  072B  3004               	movlw	4
  8199  072C  017D               	movlb	61	; select bank61
  8200  072D  00C6               	movwf	70	;volatile
  8201                           
  8202                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  8203  072E  300C               	movlw	12
  8204  072F  00CB               	movwf	75	;volatile
  8205  0730  0008               	return
  8206  0731                     __end_of_PIN_MANAGER_Initialize:	
  8207                           
  8208                           	psect	text7
  8209  0E3A                     __ptext7:	
  8210 ;; *************** function _OSCILLATOR_Initialize *****************
  8211 ;; Defined at:
  8212 ;;		line 61 in file "mcc_generated_files/mcc.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;		None
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  1    wreg      void 
  8219 ;; Registers used:
  8220 ;;		wreg, status,2
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8230 ;;Total ram usage:        0 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:    4
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		_SYSTEM_Initialize
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           
  8241                           ;psect for function _OSCILLATOR_Initialize
  8242  0E3A                     _OSCILLATOR_Initialize:	
  8243                           
  8244                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  8245                           
  8246                           ;incstack = 0
  8247                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8248  0E3A  3060               	movlw	96
  8249  0E3B  0151               	movlb	17	; select bank17
  8250  0E3C  008D               	movwf	13	;volatile
  8251                           
  8252                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  8253  0E3D  018F               	clrf	15	;volatile
  8254                           
  8255                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  8256  0E3E  0191               	clrf	17	;volatile
  8257                           
  8258                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  8259  0E3F  3006               	movlw	6
  8260  0E40  0093               	movwf	19	;volatile
  8261                           
  8262                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  8263  0E41  0192               	clrf	18	;volatile
  8264  0E42  0008               	return
  8265  0E43                     __end_of_OSCILLATOR_Initialize:	
  8266                           
  8267                           	psect	text8
  8268  0F30                     __ptext8:	
  8269 ;; *************** function _I2C1_Initialize *****************
  8270 ;; Defined at:
  8271 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;		None
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;		None
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      void 
  8278 ;; Registers used:
  8279 ;;		wreg, status,2
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8287 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8288 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8289 ;;Total ram usage:        1 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:    4
  8292 ;; This function calls:
  8293 ;;		Nothing
  8294 ;; This function is called by:
  8295 ;;		_SYSTEM_Initialize
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           
  8300                           ;psect for function _I2C1_Initialize
  8301  0F30                     _I2C1_Initialize:	
  8302                           
  8303                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  8304                           
  8305                           ;incstack = 0
  8306                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  8307  0F30  3067               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8308  0F31  0140               	movlb	0	; select bank0
  8309  0F32  00A0               	movwf	??_I2C1_Initialize
  8310  0F33  0820               	movf	??_I2C1_Initialize,w
  8311  0F34  00C7               	movwf	low ((_i2c1_object| 0+1))
  8312                           
  8313                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  8314  0F35  3067               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8315  0F36  00A0               	movwf	??_I2C1_Initialize
  8316  0F37  0820               	movf	??_I2C1_Initialize,w
  8317  0F38  00C6               	movwf	_i2c1_object
  8318                           
  8319                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  8320  0F39  14C8               	bsf	_i2c1_object+2,1
  8321                           
  8322                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  8323  0F3A  1048               	bcf	_i2c1_object+2,0
  8324                           
  8325                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  8326  0F3B  01CA               	clrf	_i2c1_object+4
  8327                           
  8328                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  8329  0F3C  0143               	movlb	3	; select bank3
  8330  0F3D  018F               	clrf	15	;volatile
  8331                           
  8332                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  8333  0F3E  3028               	movlw	40
  8334  0F3F  0090               	movwf	16	;volatile
  8335                           
  8336                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  8337  0F40  0192               	clrf	18	;volatile
  8338                           
  8339                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  8340  0F41  3050               	movlw	80
  8341  0F42  008D               	movwf	13	;volatile
  8342                           
  8343                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  8344  0F43  014E               	movlb	14	; select bank14
  8345  0F44  100F               	bcf	15,0	;volatile
  8346                           
  8347                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  8348  0F45  108F               	bcf	15,1	;volatile
  8349                           
  8350                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  8351  0F46  1419               	bsf	25,0	;volatile
  8352                           
  8353                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  8354  0F47  1499               	bsf	25,1	;volatile
  8355  0F48  0008               	return
  8356  0F49                     __end_of_I2C1_Initialize:	
  8357                           
  8358                           	psect	text9
  8359  0569                     __ptext9:	
  8360 ;; *************** function _EUSART1_Initialize *****************
  8361 ;; Defined at:
  8362 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;		None
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;		None
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  1    wreg      void 
  8369 ;; Registers used:
  8370 ;;		wreg, status,2, status,0, pclath, cstack
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8379 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8380 ;;Total ram usage:        1 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    5
  8383 ;; This function calls:
  8384 ;;		_EUSART1_SetErrorHandler
  8385 ;;		_EUSART1_SetFramingErrorHandler
  8386 ;;		_EUSART1_SetOverrunErrorHandler
  8387 ;;		_EUSART1_SetRxInterruptHandler
  8388 ;;		_EUSART1_SetTxInterruptHandler
  8389 ;; This function is called by:
  8390 ;;		_SYSTEM_Initialize
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           
  8395                           ;psect for function _EUSART1_Initialize
  8396  0569                     _EUSART1_Initialize:	
  8397                           
  8398                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  8399                           
  8400                           ;incstack = 0
  8401                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8402  0569  014E               	movlb	14	; select bank14
  8403  056A  1299               	bcf	25,5	;volatile
  8404                           
  8405                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  8406  056B  30D2               	movlw	low _EUSART1_Receive_ISR
  8407  056C  0140               	movlb	0	; select bank0
  8408  056D  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  8409  056E  3006               	movlw	high _EUSART1_Receive_ISR
  8410  056F  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  8411  0570  318E  2628  3185   	fcall	_EUSART1_SetRxInterruptHandler
  8412                           
  8413                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  8414  0573  014E               	movlb	14	; select bank14
  8415  0574  1219               	bcf	25,4	;volatile
  8416                           
  8417                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  8418  0575  3065               	movlw	low _EUSART1_Transmit_ISR
  8419  0576  0140               	movlb	0	; select bank0
  8420  0577  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  8421  0578  300F               	movlw	high _EUSART1_Transmit_ISR
  8422  0579  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  8423  057A  318E  2631  3185   	fcall	_EUSART1_SetTxInterruptHandler
  8424                           
  8425                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  8426  057D  3008               	movlw	8
  8427  057E  0142               	movlb	2	; select bank2
  8428  057F  009F               	movwf	31	;volatile
  8429                           
  8430                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  8431  0580  3090               	movlw	144
  8432  0581  009D               	movwf	29	;volatile
  8433                           
  8434                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  8435  0582  3004               	movlw	4
  8436  0583  009E               	movwf	30	;volatile
  8437                           
  8438                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  8439  0584  301F               	movlw	31
  8440  0585  009B               	movwf	27	;volatile
  8441                           
  8442                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  8443  0586  019C               	clrf	28	;volatile
  8444                           
  8445                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  8446  0587  30A5               	movlw	low _EUSART1_DefaultFramingErrorHandler
  8447  0588  0140               	movlb	0	; select bank0
  8448  0589  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8449  058A  300D               	movlw	high _EUSART1_DefaultFramingErrorHandler
  8450  058B  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8451  058C  318E  2616  3185   	fcall	_EUSART1_SetFramingErrorHandler
  8452                           
  8453                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  8454  058F  30B7               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  8455  0590  0140               	movlb	0	; select bank0
  8456  0591  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8457  0592  300D               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  8458  0593  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8459  0594  318E  261F  3185   	fcall	_EUSART1_SetOverrunErrorHandler
  8460                           
  8461                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  8462  0597  30A7               	movlw	low _EUSART1_DefaultErrorHandler
  8463  0598  0140               	movlb	0	; select bank0
  8464  0599  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8465  059A  300D               	movlw	high _EUSART1_DefaultErrorHandler
  8466  059B  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8467  059C  318E  260D         	fcall	_EUSART1_SetErrorHandler
  8468                           
  8469                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  8470  059E  0140               	movlb	0	; select bank0
  8471  059F  01E5               	clrf	_eusart1RxLastError	;volatile
  8472                           
  8473                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  8474  05A0  01F3               	clrf	_eusart1TxHead	;volatile
  8475                           
  8476                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  8477  05A1  01F2               	clrf	_eusart1TxTail	;volatile
  8478                           
  8479                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  8480  05A2  3008               	movlw	8
  8481  05A3  00A2               	movwf	??_EUSART1_Initialize
  8482  05A4  0822               	movf	??_EUSART1_Initialize,w
  8483  05A5  00EE               	movwf	_eusart1TxBufferRemaining	;volatile
  8484                           
  8485                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  8486  05A6  01F1               	clrf	_eusart1RxHead	;volatile
  8487                           
  8488                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  8489  05A7  01F0               	clrf	_eusart1RxTail	;volatile
  8490                           
  8491                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  8492  05A8  01E6               	clrf	_eusart1RxCount	;volatile
  8493                           
  8494                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  8495  05A9  014E               	movlb	14	; select bank14
  8496  05AA  1699               	bsf	25,5	;volatile
  8497  05AB  0008               	return
  8498  05AC                     __end_of_EUSART1_Initialize:	
  8499                           
  8500                           	psect	text10
  8501  0E31                     __ptext10:	
  8502 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  8503 ;; Defined at:
  8504 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8507 ;;		 -> EUSART1_Transmit_ISR(1), 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8519 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8522 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8523 ;;Total ram usage:        2 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:    4
  8526 ;; This function calls:
  8527 ;;		Nothing
  8528 ;; This function is called by:
  8529 ;;		_EUSART1_Initialize
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           
  8534                           ;psect for function _EUSART1_SetTxInterruptHandler
  8535  0E31                     _EUSART1_SetTxInterruptHandler:	
  8536                           
  8537                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8538                           
  8539                           ;incstack = 0
  8540                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  8541  0E31  0140               	movlb	0	; select bank0
  8542  0E32  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  8543  0E33  0141               	movlb	1	; select bank1
  8544  0E34  00DD               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128)
  8545  0E35  0140               	movlb	0	; select bank0
  8546  0E36  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  8547  0E37  0141               	movlb	1	; select bank1
  8548  0E38  00DC               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+128)
  8549  0E39  0008               	return
  8550  0E3A                     __end_of_EUSART1_SetTxInterruptHandler:	
  8551                           
  8552                           	psect	text11
  8553  0E28                     __ptext11:	
  8554 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  8555 ;; Defined at:
  8556 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8559 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;		None
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1    wreg      void 
  8564 ;; Registers used:
  8565 ;;		wreg
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8574 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8575 ;;Total ram usage:        2 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:    4
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_EUSART1_Initialize
  8582 ;;		_main
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           
  8587                           ;psect for function _EUSART1_SetRxInterruptHandler
  8588  0E28                     _EUSART1_SetRxInterruptHandler:	
  8589                           
  8590                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  8591                           
  8592                           ;incstack = 0
  8593                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  8594  0E28  0140               	movlb	0	; select bank0
  8595  0E29  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  8596  0E2A  0141               	movlb	1	; select bank1
  8597  0E2B  00DB               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
  8598  0E2C  0140               	movlb	0	; select bank0
  8599  0E2D  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  8600  0E2E  0141               	movlb	1	; select bank1
  8601  0E2F  00DA               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
  8602  0E30  0008               	return
  8603  0E31                     __end_of_EUSART1_SetRxInterruptHandler:	
  8604                           
  8605                           	psect	text12
  8606  0E1F                     __ptext12:	
  8607 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8608 ;; Defined at:
  8609 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8612 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;		None
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      void 
  8617 ;; Registers used:
  8618 ;;		wreg
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8624 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8627 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8628 ;;Total ram usage:        2 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:    4
  8631 ;; This function calls:
  8632 ;;		Nothing
  8633 ;; This function is called by:
  8634 ;;		_EUSART1_Initialize
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           
  8639                           ;psect for function _EUSART1_SetOverrunErrorHandler
  8640  0E1F                     _EUSART1_SetOverrunErrorHandler:	
  8641                           
  8642                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  8643                           
  8644                           ;incstack = 0
  8645                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  8646  0E1F  0140               	movlb	0	; select bank0
  8647  0E20  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  8648  0E21  0141               	movlb	1	; select bank1
  8649  0E22  00D7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  8650  0E23  0140               	movlb	0	; select bank0
  8651  0E24  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  8652  0E25  0141               	movlb	1	; select bank1
  8653  0E26  00D6               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  8654  0E27  0008               	return
  8655  0E28                     __end_of_EUSART1_SetOverrunErrorHandler:	
  8656                           
  8657                           	psect	text13
  8658  0E16                     __ptext13:	
  8659 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8660 ;; Defined at:
  8661 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8664 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;		None
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      void 
  8669 ;; Registers used:
  8670 ;;		wreg
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8679 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8680 ;;Total ram usage:        2 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    4
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_EUSART1_Initialize
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           
  8691                           ;psect for function _EUSART1_SetFramingErrorHandler
  8692  0E16                     _EUSART1_SetFramingErrorHandler:	
  8693                           
  8694                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  8695                           
  8696                           ;incstack = 0
  8697                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  8698  0E16  0140               	movlb	0	; select bank0
  8699  0E17  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  8700  0E18  0141               	movlb	1	; select bank1
  8701  0E19  00D9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  8702  0E1A  0140               	movlb	0	; select bank0
  8703  0E1B  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  8704  0E1C  0141               	movlb	1	; select bank1
  8705  0E1D  00D8               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  8706  0E1E  0008               	return
  8707  0E1F                     __end_of_EUSART1_SetFramingErrorHandler:	
  8708                           
  8709                           	psect	text14
  8710  0E0D                     __ptext14:	
  8711 ;; *************** function _EUSART1_SetErrorHandler *****************
  8712 ;; Defined at:
  8713 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8716 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8728 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8731 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8732 ;;Total ram usage:        2 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:    4
  8735 ;; This function calls:
  8736 ;;		Nothing
  8737 ;; This function is called by:
  8738 ;;		_EUSART1_Initialize
  8739 ;; This function uses a non-reentrant model
  8740 ;;
  8741                           
  8742                           
  8743                           ;psect for function _EUSART1_SetErrorHandler
  8744  0E0D                     _EUSART1_SetErrorHandler:	
  8745                           
  8746                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  8747                           
  8748                           ;incstack = 0
  8749                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  8750  0E0D  0140               	movlb	0	; select bank0
  8751  0E0E  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  8752  0E0F  0141               	movlb	1	; select bank1
  8753  0E10  00D5               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
  8754  0E11  0140               	movlb	0	; select bank0
  8755  0E12  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  8756  0E13  0141               	movlb	1	; select bank1
  8757  0E14  00D4               	movwf	_EUSART1_ErrorHandler^(0+128)
  8758  0E15  0008               	return
  8759  0E16                     __end_of_EUSART1_SetErrorHandler:	
  8760                           
  8761                           	psect	text15
  8762  07D6                     __ptext15:	
  8763 ;; *************** function _ADCC_Initialize *****************
  8764 ;; Defined at:
  8765 ;;		line 64 in file "mcc_generated_files/adcc.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;		None
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;		None
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg, status,2, status,0, pclath, cstack
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8783 ;;Total ram usage:        0 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; Hardware stack levels required when called:    5
  8786 ;; This function calls:
  8787 ;;		_ADCC_SetADTIInterruptHandler
  8788 ;; This function is called by:
  8789 ;;		_SYSTEM_Initialize
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           
  8794                           ;psect for function _ADCC_Initialize
  8795  07D6                     _ADCC_Initialize:	
  8796                           
  8797                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  8798                           
  8799                           ;incstack = 0
  8800                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8801  07D6  0141               	movlb	1	; select bank1
  8802  07D7  018C               	clrf	12	;volatile
  8803                           
  8804                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  8805  07D8  018D               	clrf	13	;volatile
  8806                           
  8807                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  8808  07D9  018E               	clrf	14	;volatile
  8809                           
  8810                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  8811  07DA  018F               	clrf	15	;volatile
  8812                           
  8813                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  8814  07DB  0192               	clrf	18	;volatile
  8815                           
  8816                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  8817  07DC  0193               	clrf	19	;volatile
  8818                           
  8819                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  8820  07DD  0198               	clrf	24	;volatile
  8821                           
  8822                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  8823  07DE  019A               	clrf	26	;volatile
  8824                           
  8825                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  8826  07DF  019F               	clrf	31	;volatile
  8827                           
  8828                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  8829  07E0  0142               	movlb	2	; select bank2
  8830  07E1  018C               	clrf	12	;volatile
  8831                           
  8832                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  8833  07E2  018D               	clrf	13	;volatile
  8834                           
  8835                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  8836  07E3  018E               	clrf	14	;volatile
  8837                           
  8838                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  8839  07E4  018F               	clrf	15	;volatile
  8840                           
  8841                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  8842  07E5  0190               	clrf	16	;volatile
  8843                           
  8844                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  8845  07E6  0192               	clrf	18	;volatile
  8846                           
  8847                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  8848  07E7  3054               	movlw	84
  8849  07E8  0093               	movwf	19	;volatile
  8850                           
  8851                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  8852  07E9  3056               	movlw	86
  8853  07EA  0094               	movwf	20	;volatile
  8854                           
  8855                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  8856  07EB  0195               	clrf	21	;volatile
  8857                           
  8858                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  8859  07EC  0196               	clrf	22	;volatile
  8860                           
  8861                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  8862  07ED  0197               	clrf	23	;volatile
  8863                           
  8864                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  8865  07EE  0198               	clrf	24	;volatile
  8866                           
  8867                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  8868  07EF  30D4               	movlw	212
  8869  07F0  0091               	movwf	17	;volatile
  8870                           
  8871                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  8872  07F1  014E               	movlb	14	; select bank14
  8873  07F2  108D               	bcf	13,1	;volatile
  8874                           
  8875                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  8876  07F3  1497               	bsf	23,1	;volatile
  8877                           
  8878                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  8879  07F4  30A4               	movlw	low _ADCC_DefaultInterruptHandler
  8880  07F5  0140               	movlb	0	; select bank0
  8881  07F6  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  8882  07F7  300D               	movlw	high _ADCC_DefaultInterruptHandler
  8883  07F8  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  8884  07F9  318D  25E0         	fcall	_ADCC_SetADTIInterruptHandler
  8885  07FB  0008               	return
  8886  07FC                     __end_of_ADCC_Initialize:	
  8887                           
  8888                           	psect	text16
  8889  035E                     __ptext16:	
  8890 ;; *************** function _LED_task *****************
  8891 ;; Defined at:
  8892 ;;		line 69 in file "led.c"
  8893 ;; Parameters:    Size  Location     Type
  8894 ;;		None
  8895 ;; Auto vars:     Size  Location     Type
  8896 ;;  time            2   33[BANK0 ] unsigned short 
  8897 ;; Return value:  Size  Location     Type
  8898 ;;                  1    wreg      void 
  8899 ;; Registers used:
  8900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8901 ;; Tracked objects:
  8902 ;;		On entry : 0/0
  8903 ;;		On exit  : 0/0
  8904 ;;		Unchanged: 0/0
  8905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8908 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8909 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8910 ;;Total ram usage:       13 bytes
  8911 ;; Hardware stack levels used:    1
  8912 ;; Hardware stack levels required when called:    5
  8913 ;; This function calls:
  8914 ;;		_BEAT_detected
  8915 ;;		_CLOCK_getTime
  8916 ;;		_LED_setColor
  8917 ;;		_isDMXOn
  8918 ;; This function is called by:
  8919 ;;		_main
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           
  8924                           ;psect for function _LED_task
  8925  035E                     _LED_task:	
  8926                           
  8927                           ;led.c: 70:     if(isDMXOn()) {
  8928                           
  8929                           ;incstack = 0
  8930                           ; Regs used in _LED_task: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8931  035E  318D  25B0  3183   	fcall	_isDMXOn
  8932  0361  3A00               	xorlw	0
  8933  0362  1903               	skipnz
  8934  0363  2B9D               	goto	l4091
  8935                           
  8936                           ;led.c: 71:         LED_setColor(dmxData[address+1], dmxData[address+2], dmxData[address
      +                          +3], dmxData[address+4]);
  8937  0364  30F1               	movlw	241
  8938  0365  0140               	movlb	0	; select bank0
  8939  0366  00B6               	movwf	??_LED_task
  8940  0367  3025               	movlw	37
  8941  0368  00B7               	movwf	??_LED_task+1
  8942  0369  086C               	movf	_address,w
  8943  036A  0736               	addwf	??_LED_task,w
  8944  036B  0086               	movwf	6
  8945  036C  086D               	movf	_address+1,w
  8946  036D  3D37               	addwfc	??_LED_task+1,w
  8947  036E  0087               	movwf	7
  8948  036F  0801               	movf	1,w
  8949  0370  00B8               	movwf	??_LED_task+2
  8950  0371  0838               	movf	??_LED_task+2,w
  8951  0372  00A0               	movwf	LED_setColor@green
  8952  0373  30F2               	movlw	242
  8953  0374  00B9               	movwf	??_LED_task+3
  8954  0375  3025               	movlw	37
  8955  0376  00BA               	movwf	??_LED_task+4
  8956  0377  086C               	movf	_address,w
  8957  0378  0739               	addwf	??_LED_task+3,w
  8958  0379  0086               	movwf	6
  8959  037A  086D               	movf	_address+1,w
  8960  037B  3D3A               	addwfc	??_LED_task+4,w
  8961  037C  0087               	movwf	7
  8962  037D  0801               	movf	1,w
  8963  037E  00BB               	movwf	??_LED_task+5
  8964  037F  083B               	movf	??_LED_task+5,w
  8965  0380  00A1               	movwf	LED_setColor@white
  8966  0381  30F3               	movlw	243
  8967  0382  00BC               	movwf	??_LED_task+6
  8968  0383  3025               	movlw	37
  8969  0384  00BD               	movwf	??_LED_task+7
  8970  0385  086C               	movf	_address,w
  8971  0386  073C               	addwf	??_LED_task+6,w
  8972  0387  0086               	movwf	6
  8973  0388  086D               	movf	_address+1,w
  8974  0389  3D3D               	addwfc	??_LED_task+7,w
  8975  038A  0087               	movwf	7
  8976  038B  0801               	movf	1,w
  8977  038C  00BE               	movwf	??_LED_task+8
  8978  038D  083E               	movf	??_LED_task+8,w
  8979  038E  00A2               	movwf	LED_setColor@blue
  8980  038F  30F0               	movlw	240
  8981  0390  00BF               	movwf	??_LED_task+9
  8982  0391  3025               	movlw	37
  8983  0392  00C0               	movwf	??_LED_task+10
  8984  0393  086C               	movf	_address,w
  8985  0394  073F               	addwf	??_LED_task+9,w
  8986  0395  0086               	movwf	6
  8987  0396  086D               	movf	_address+1,w
  8988  0397  3D40               	addwfc	??_LED_task+10,w
  8989  0398  0087               	movwf	7
  8990  0399  0801               	movf	1,w
  8991  039A  3186  2629         	fcall	_LED_setColor
  8992                           
  8993                           ;led.c: 72:     } else {
  8994  039C  0008               	return
  8995  039D                     l4091:	
  8996                           
  8997                           ;led.c: 73:         time_t time = CLOCK_getTime();
  8998  039D  318D  25CA  3183   	fcall	_CLOCK_getTime
  8999  03A0  0140               	movlb	0	; select bank0
  9000  03A1  0821               	movf	?_CLOCK_getTime+1,w
  9001  03A2  00C2               	movwf	LED_task@time+1
  9002  03A3  0820               	movf	?_CLOCK_getTime,w
  9003  03A4  00C1               	movwf	LED_task@time
  9004                           
  9005                           ;led.c: 75:         if (time - lastTime < 100)
  9006  03A5  0141               	movlb	1	; select bank1
  9007  03A6  0838               	movf	led@lastTime^(0+128),w
  9008  03A7  0140               	movlb	0	; select bank0
  9009  03A8  0241               	subwf	LED_task@time,w
  9010  03A9  00B6               	movwf	??_LED_task
  9011  03AA  0141               	movlb	1	; select bank1
  9012  03AB  0839               	movf	(led@lastTime+1)^(0+128),w
  9013  03AC  0140               	movlb	0	; select bank0
  9014  03AD  3B42               	subwfb	LED_task@time+1,w
  9015  03AE  00B7               	movwf	??_LED_task+1
  9016  03AF  3000               	movlw	0
  9017  03B0  0237               	subwf	??_LED_task+1,w
  9018  03B1  3064               	movlw	100
  9019  03B2  1903               	skipnz
  9020  03B3  0236               	subwf	??_LED_task,w
  9021  03B4  1C03               	btfss	3,0
  9022  03B5  0008               	return
  9023                           
  9024                           ;led.c: 78:         lastTime = time;
  9025  03B6  0842               	movf	LED_task@time+1,w
  9026  03B7  0141               	movlb	1	; select bank1
  9027  03B8  00B9               	movwf	(led@lastTime+1)^(0+128)
  9028  03B9  0140               	movlb	0	; select bank0
  9029  03BA  0841               	movf	LED_task@time,w
  9030  03BB  0141               	movlb	1	; select bank1
  9031  03BC  00B8               	movwf	led@lastTime^(0+128)
  9032                           
  9033                           ;led.c: 79:         if(BEAT_detected()) {
  9034  03BD  318E  2604  3183   	fcall	_BEAT_detected
  9035  03C0  3A00               	xorlw	0
  9036  03C1  1903               	skipnz
  9037  03C2  2BD4               	goto	l4103
  9038                           
  9039                           ;led.c: 80:             LED_setColor(255, 255, 255, 255);
  9040  03C3  30FF               	movlw	255
  9041  03C4  0140               	movlb	0	; select bank0
  9042  03C5  00B6               	movwf	??_LED_task
  9043  03C6  0836               	movf	??_LED_task,w
  9044  03C7  00A0               	movwf	LED_setColor@green
  9045  03C8  30FF               	movlw	255
  9046  03C9  00B7               	movwf	??_LED_task+1
  9047  03CA  0837               	movf	??_LED_task+1,w
  9048  03CB  00A1               	movwf	LED_setColor@white
  9049  03CC  30FF               	movlw	255
  9050  03CD  00B8               	movwf	??_LED_task+2
  9051  03CE  0838               	movf	??_LED_task+2,w
  9052  03CF  00A2               	movwf	LED_setColor@blue
  9053  03D0  30FF               	movlw	255
  9054  03D1  3186  2629         	fcall	_LED_setColor
  9055                           
  9056                           ;led.c: 81:         } else {
  9057  03D3  0008               	return
  9058  03D4                     l4103:	
  9059                           
  9060                           ;led.c: 82:             LED_setColor(0,0,0,0);
  9061  03D4  0140               	movlb	0	; select bank0
  9062  03D5  01A0               	clrf	LED_setColor@green
  9063  03D6  01A1               	clrf	LED_setColor@white
  9064  03D7  01A2               	clrf	LED_setColor@blue
  9065  03D8  3000               	movlw	0
  9066  03D9  3186  2629         	fcall	_LED_setColor
  9067  03DB  0008               	return
  9068  03DC                     __end_of_LED_task:	
  9069                           
  9070                           	psect	text17
  9071  0DB0                     __ptext17:	
  9072 ;; *************** function _isDMXOn *****************
  9073 ;; Defined at:
  9074 ;;		line 57 in file "dmx.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;		None
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      _Bool 
  9081 ;; Registers used:
  9082 ;;		wreg
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9092 ;;Total ram usage:        0 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    4
  9095 ;; This function calls:
  9096 ;;		Nothing
  9097 ;; This function is called by:
  9098 ;;		_LED_task
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           
  9103                           ;psect for function _isDMXOn
  9104  0DB0                     _isDMXOn:	
  9105                           
  9106                           ;dmx.c: 58:     return dmxOn;
  9107                           
  9108                           ;incstack = 0
  9109                           ; Regs used in _isDMXOn: [wreg]
  9110  0DB0  0140               	movlb	0	; select bank0
  9111  0DB1  0854               	movf	_dmxOn,w
  9112  0DB2  0008               	return
  9113  0DB3                     __end_of_isDMXOn:	
  9114                           
  9115                           	psect	text18
  9116  0629                     __ptext18:	
  9117 ;; *************** function _LED_setColor *****************
  9118 ;; Defined at:
  9119 ;;		line 39 in file "led.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  red             1    wreg     unsigned char 
  9122 ;;  green           1    0[BANK0 ] unsigned char 
  9123 ;;  white           1    1[BANK0 ] unsigned char 
  9124 ;;  blue            1    2[BANK0 ] unsigned char 
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;  red             1   21[BANK0 ] unsigned char 
  9127 ;;  lo4             2   19[BANK0 ] int 
  9128 ;;  hi4             2    0        int 
  9129 ;;  lo3             2   15[BANK0 ] int 
  9130 ;;  hi3             2    0        int 
  9131 ;;  lo2             2   11[BANK0 ] int 
  9132 ;;  hi2             2    0        int 
  9133 ;;  lo1             2    7[BANK0 ] int 
  9134 ;;  hi1             2    0        int 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, status,2
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9144 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9145 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9146 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9147 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9148 ;;Total ram usage:       22 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    4
  9151 ;; This function calls:
  9152 ;;		Nothing
  9153 ;; This function is called by:
  9154 ;;		_LED_task
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           
  9159                           ;psect for function _LED_setColor
  9160  0629                     _LED_setColor:	
  9161                           
  9162                           ;incstack = 0
  9163                           ; Regs used in _LED_setColor: [wreg+status,2]
  9164                           ;LED_setColor@red stored from wreg
  9165  0629  0140               	movlb	0	; select bank0
  9166  062A  00B5               	movwf	LED_setColor@red
  9167                           
  9168                           ;led.c: 40:     red/=2;
  9169  062B  1003               	clrc
  9170  062C  0CB5               	rrf	LED_setColor@red,f
  9171                           
  9172                           ;led.c: 41:     green/=2;
  9173  062D  1003               	clrc
  9174  062E  0CA0               	rrf	LED_setColor@green,f
  9175                           
  9176                           ;led.c: 42:     blue/=2;
  9177  062F  1003               	clrc
  9178  0630  0CA2               	rrf	LED_setColor@blue,f
  9179                           
  9180                           ;led.c: 43:     white/=2;
  9181  0631  1003               	clrc
  9182  0632  0CA1               	rrf	LED_setColor@white,f
  9183                           
  9184                           ;led.c: 45:     int lo1 = red & 0x00FF;
  9185  0633  0835               	movf	LED_setColor@red,w
  9186  0634  00A3               	movwf	??_LED_setColor
  9187  0635  01A4               	clrf	??_LED_setColor+1
  9188  0636  0823               	movf	??_LED_setColor,w
  9189  0637  00A7               	movwf	LED_setColor@lo1
  9190  0638  0824               	movf	??_LED_setColor+1,w
  9191  0639  00A8               	movwf	LED_setColor@lo1+1
  9192                           
  9193                           ;led.c: 47:     int lo2 = green & 0x00FF;
  9194  063A  0820               	movf	LED_setColor@green,w
  9195  063B  00A3               	movwf	??_LED_setColor
  9196  063C  01A4               	clrf	??_LED_setColor+1
  9197  063D  0823               	movf	??_LED_setColor,w
  9198  063E  00AB               	movwf	LED_setColor@lo2
  9199  063F  0824               	movf	??_LED_setColor+1,w
  9200  0640  00AC               	movwf	LED_setColor@lo2+1
  9201                           
  9202                           ;led.c: 49:     int lo3 = blue & 0x00FF;
  9203  0641  0822               	movf	LED_setColor@blue,w
  9204  0642  00A3               	movwf	??_LED_setColor
  9205  0643  01A4               	clrf	??_LED_setColor+1
  9206  0644  0823               	movf	??_LED_setColor,w
  9207  0645  00AF               	movwf	LED_setColor@lo3
  9208  0646  0824               	movf	??_LED_setColor+1,w
  9209  0647  00B0               	movwf	LED_setColor@lo3+1
  9210                           
  9211                           ;led.c: 51:     int lo4 = white & 0x00FF;
  9212  0648  0821               	movf	LED_setColor@white,w
  9213  0649  00A3               	movwf	??_LED_setColor
  9214  064A  01A4               	clrf	??_LED_setColor+1
  9215  064B  0823               	movf	??_LED_setColor,w
  9216  064C  00B3               	movwf	LED_setColor@lo4
  9217  064D  0824               	movf	??_LED_setColor+1,w
  9218  064E  00B4               	movwf	LED_setColor@lo4+1
  9219                           
  9220                           ;led.c: 53:     CCPR1H = hi1;
  9221  064F  0146               	movlb	6	; select bank6
  9222  0650  018D               	clrf	13	;volatile
  9223                           
  9224                           ;led.c: 54:     CCPR1L = lo1;
  9225  0651  0140               	movlb	0	; select bank0
  9226  0652  0827               	movf	LED_setColor@lo1,w
  9227  0653  0146               	movlb	6	; select bank6
  9228  0654  008C               	movwf	12	;volatile
  9229                           
  9230                           ;led.c: 56:     CCPR2H = hi2;
  9231  0655  0191               	clrf	17	;volatile
  9232                           
  9233                           ;led.c: 57:     CCPR2L = lo2;
  9234  0656  0140               	movlb	0	; select bank0
  9235  0657  082B               	movf	LED_setColor@lo2,w
  9236  0658  0146               	movlb	6	; select bank6
  9237  0659  0090               	movwf	16	;volatile
  9238                           
  9239                           ;led.c: 59:     CCPR3H = hi3;
  9240  065A  0195               	clrf	21	;volatile
  9241                           
  9242                           ;led.c: 60:     CCPR3L = lo3;
  9243  065B  0140               	movlb	0	; select bank0
  9244  065C  082F               	movf	LED_setColor@lo3,w
  9245  065D  0146               	movlb	6	; select bank6
  9246  065E  0094               	movwf	20	;volatile
  9247                           
  9248                           ;led.c: 62:     CCPR4H = hi4;
  9249  065F  0199               	clrf	25	;volatile
  9250                           
  9251                           ;led.c: 63:     CCPR4L = lo4;
  9252  0660  0140               	movlb	0	; select bank0
  9253  0661  0833               	movf	LED_setColor@lo4,w
  9254  0662  0146               	movlb	6	; select bank6
  9255  0663  0098               	movwf	24	;volatile
  9256  0664  0008               	return
  9257  0665                     __end_of_LED_setColor:	
  9258                           
  9259                           	psect	text19
  9260  0E04                     __ptext19:	
  9261 ;; *************** function _BEAT_detected *****************
  9262 ;; Defined at:
  9263 ;;		line 41 in file "beat.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;		None
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;		None
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      _Bool 
  9270 ;; Registers used:
  9271 ;;		wreg, status,2, status,0
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9281 ;;Total ram usage:        0 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    4
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		_LED_task
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           
  9292                           ;psect for function _BEAT_detected
  9293  0E04                     _BEAT_detected:	
  9294                           
  9295                           ;beat.c: 42:     if (detected) {
  9296                           
  9297                           ;incstack = 0
  9298                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
  9299  0E04  0140               	movlb	0	; select bank0
  9300  0E05  0858               	movf	_detected,w
  9301  0E06  1903               	btfsc	3,2
  9302  0E07  2E0B               	goto	l3939
  9303                           
  9304                           ;beat.c: 43:         detected = 0;
  9305  0E08  01D8               	clrf	_detected
  9306                           
  9307                           ;beat.c: 44:         return 1;
  9308  0E09  3001               	movlw	1
  9309  0E0A  0008               	return
  9310  0E0B                     l3939:	
  9311                           
  9312                           ;beat.c: 46:     return 0;
  9313  0E0B  3000               	movlw	0
  9314  0E0C  0008               	return
  9315  0E0D                     __end_of_BEAT_detected:	
  9316                           
  9317                           	psect	text20
  9318  0665                     __ptext20:	
  9319 ;; *************** function _DMX_task *****************
  9320 ;; Defined at:
  9321 ;;		line 35 in file "dmx.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;		None
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;  time            2    4[BANK0 ] unsigned short 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  1    wreg      void 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0, pclath, cstack
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9336 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9338 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9339 ;;Total ram usage:        4 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:    5
  9342 ;; This function calls:
  9343 ;;		_CLOCK_getTime
  9344 ;; This function is called by:
  9345 ;;		_main
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           
  9350                           ;psect for function _DMX_task
  9351  0665                     _DMX_task:	
  9352                           
  9353                           ;dmx.c: 36:     time_t time = CLOCK_getTime();
  9354                           
  9355                           ;incstack = 0
  9356                           ; Regs used in _DMX_task: [wreg+status,2+status,0+pclath+cstack]
  9357  0665  318D  25CA  3186   	fcall	_CLOCK_getTime
  9358  0668  0140               	movlb	0	; select bank0
  9359  0669  0821               	movf	?_CLOCK_getTime+1,w
  9360  066A  00A5               	movwf	DMX_task@time+1
  9361  066B  0820               	movf	?_CLOCK_getTime,w
  9362  066C  00A4               	movwf	DMX_task@time
  9363                           
  9364                           ;dmx.c: 37:     if (time - lastTime < 1000)
  9365  066D  0141               	movlb	1	; select bank1
  9366  066E  083A               	movf	dmx@lastTime^(0+128),w
  9367  066F  0140               	movlb	0	; select bank0
  9368  0670  0224               	subwf	DMX_task@time,w
  9369  0671  00A2               	movwf	??_DMX_task
  9370  0672  0141               	movlb	1	; select bank1
  9371  0673  083B               	movf	(dmx@lastTime+1)^(0+128),w
  9372  0674  0140               	movlb	0	; select bank0
  9373  0675  3B25               	subwfb	DMX_task@time+1,w
  9374  0676  00A3               	movwf	??_DMX_task+1
  9375  0677  3003               	movlw	3
  9376  0678  0223               	subwf	??_DMX_task+1,w
  9377  0679  30E8               	movlw	232
  9378  067A  1903               	skipnz
  9379  067B  0222               	subwf	??_DMX_task,w
  9380  067C  1C03               	btfss	3,0
  9381  067D  0008               	return
  9382                           
  9383                           ;dmx.c: 39:     lastTime = time;
  9384  067E  0825               	movf	DMX_task@time+1,w
  9385  067F  0141               	movlb	1	; select bank1
  9386  0680  00BB               	movwf	(dmx@lastTime+1)^(0+128)
  9387  0681  0140               	movlb	0	; select bank0
  9388  0682  0824               	movf	DMX_task@time,w
  9389  0683  0141               	movlb	1	; select bank1
  9390  0684  00BA               	movwf	dmx@lastTime^(0+128)
  9391                           
  9392                           ;dmx.c: 41:     if(offCheck && !toggleCheck) {
  9393  0685  0140               	movlb	0	; select bank0
  9394  0686  0855               	movf	_offCheck,w
  9395  0687  1903               	btfsc	3,2
  9396  0688  2E90               	goto	l4197
  9397  0689  0853               	movf	_toggleCheck,w
  9398  068A  1D03               	btfss	3,2
  9399  068B  2E90               	goto	l4197
  9400                           
  9401                           ;dmx.c: 43:         toggleCheck = 1;
  9402  068C  01D3               	clrf	_toggleCheck
  9403  068D  0AD3               	incf	_toggleCheck,f
  9404                           
  9405                           ;dmx.c: 44:         offCheck = 0;
  9406  068E  01D5               	clrf	_offCheck
  9407  068F  0008               	return
  9408  0690                     l4197:	
  9409                           
  9410                           ;dmx.c: 48:     if (offCheck && toggleCheck) {
  9411  0690  0855               	movf	_offCheck,w
  9412  0691  1903               	btfsc	3,2
  9413  0692  2E9B               	goto	l4205
  9414  0693  0853               	movf	_toggleCheck,w
  9415  0694  1903               	btfsc	3,2
  9416  0695  2E9B               	goto	l4205
  9417                           
  9418                           ;dmx.c: 49:         dmxOn = 1;
  9419  0696  01D4               	clrf	_dmxOn
  9420  0697  0AD4               	incf	_dmxOn,f
  9421                           
  9422                           ;dmx.c: 50:         toggleCheck = 0;
  9423  0698  01D3               	clrf	_toggleCheck
  9424                           
  9425                           ;dmx.c: 51:         offCheck = 0;
  9426  0699  01D5               	clrf	_offCheck
  9427                           
  9428                           ;dmx.c: 52:     } else {
  9429  069A  0008               	return
  9430  069B                     l4205:	
  9431                           
  9432                           ;dmx.c: 53:         dmxOn = 0;
  9433  069B  01D4               	clrf	_dmxOn
  9434  069C  0008               	return
  9435  069D                     __end_of_DMX_task:	
  9436                           
  9437                           	psect	text21
  9438  0456                     __ptext21:	
  9439 ;; *************** function _CONTROLLER_task *****************
  9440 ;; Defined at:
  9441 ;;		line 48 in file "controller.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;		None
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;  time            2   36[BANK0 ] unsigned short 
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  1    wreg      void 
  9448 ;; Registers used:
  9449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9456 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9457 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9458 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9459 ;;Total ram usage:        4 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; Hardware stack levels required when called:   11
  9462 ;; This function calls:
  9463 ;;		_BUTTONS_isClicked
  9464 ;;		_CLOCK_getTime
  9465 ;;		_TM1650_enable
  9466 ;;		_address_dec
  9467 ;;		_address_inc
  9468 ;; This function is called by:
  9469 ;;		_main
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           
  9474                           ;psect for function _CONTROLLER_task
  9475  0456                     _CONTROLLER_task:	
  9476                           
  9477                           ;controller.c: 49:     time_t time = CLOCK_getTime();
  9478                           
  9479                           ;incstack = 0
  9480                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9481  0456  318D  25CA  3184   	fcall	_CLOCK_getTime
  9482  0459  0140               	movlb	0	; select bank0
  9483  045A  0821               	movf	?_CLOCK_getTime+1,w
  9484  045B  00C5               	movwf	CONTROLLER_task@time+1
  9485  045C  0820               	movf	?_CLOCK_getTime,w
  9486  045D  00C4               	movwf	CONTROLLER_task@time
  9487                           
  9488                           ;controller.c: 51:     if (time - lastTime < 35)
  9489  045E  084D               	movf	controller@lastTime,w
  9490  045F  0244               	subwf	CONTROLLER_task@time,w
  9491  0460  00C2               	movwf	??_CONTROLLER_task
  9492  0461  084E               	movf	controller@lastTime+1,w
  9493  0462  3B45               	subwfb	CONTROLLER_task@time+1,w
  9494  0463  00C3               	movwf	??_CONTROLLER_task+1
  9495  0464  3000               	movlw	0
  9496  0465  0243               	subwf	??_CONTROLLER_task+1,w
  9497  0466  3023               	movlw	35
  9498  0467  1903               	skipnz
  9499  0468  0242               	subwf	??_CONTROLLER_task,w
  9500  0469  1C03               	btfss	3,0
  9501  046A  0008               	return
  9502                           
  9503                           ;controller.c: 53:     lastTime = time;
  9504  046B  0845               	movf	CONTROLLER_task@time+1,w
  9505  046C  00CE               	movwf	controller@lastTime+1
  9506  046D  0844               	movf	CONTROLLER_task@time,w
  9507  046E  00CD               	movwf	controller@lastTime
  9508                           
  9509                           ;controller.c: 55:     if (BUTTONS_isClicked(up)) {
  9510  046F  085C               	movf	_up,w
  9511  0470  318F  27DF  3184   	fcall	_BUTTONS_isClicked
  9512  0473  0140               	movlb	0	; select bank0
  9513  0474  0820               	movf	?_BUTTONS_isClicked,w
  9514  0475  0421               	iorwf	?_BUTTONS_isClicked+1,w
  9515  0476  1903               	btfsc	3,2
  9516  0477  2C87               	goto	l4165
  9517                           
  9518                           ;controller.c: 56:         address_inc();
  9519  0478  318E  26EB  3184   	fcall	_address_inc
  9520                           
  9521                           ;controller.c: 57:         lastActiveTime = time;
  9522  047B  0140               	movlb	0	; select bank0
  9523  047C  0845               	movf	CONTROLLER_task@time+1,w
  9524  047D  0141               	movlb	1	; select bank1
  9525  047E  00C5               	movwf	(_lastActiveTime+1)^(0+128)
  9526  047F  0140               	movlb	0	; select bank0
  9527  0480  0844               	movf	CONTROLLER_task@time,w
  9528  0481  0141               	movlb	1	; select bank1
  9529  0482  00C4               	movwf	_lastActiveTime^(0+128)
  9530                           
  9531                           ;controller.c: 58:         TM1650_enable(1);
  9532  0483  3001               	movlw	1
  9533  0484  318E  26AC         	fcall	_TM1650_enable
  9534                           
  9535                           ;controller.c: 59:     } else if (BUTTONS_isClicked(down)) {
  9536  0486  0008               	return
  9537  0487                     l4165:	
  9538  0487  085B               	movf	_down,w
  9539  0488  318F  27DF  3184   	fcall	_BUTTONS_isClicked
  9540  048B  0140               	movlb	0	; select bank0
  9541  048C  0820               	movf	?_BUTTONS_isClicked,w
  9542  048D  0421               	iorwf	?_BUTTONS_isClicked+1,w
  9543  048E  1903               	btfsc	3,2
  9544  048F  2C9F               	goto	l4173
  9545                           
  9546                           ;controller.c: 60:         address_dec();
  9547  0490  318E  26C1  3184   	fcall	_address_dec
  9548                           
  9549                           ;controller.c: 61:         lastActiveTime = time;
  9550  0493  0140               	movlb	0	; select bank0
  9551  0494  0845               	movf	CONTROLLER_task@time+1,w
  9552  0495  0141               	movlb	1	; select bank1
  9553  0496  00C5               	movwf	(_lastActiveTime+1)^(0+128)
  9554  0497  0140               	movlb	0	; select bank0
  9555  0498  0844               	movf	CONTROLLER_task@time,w
  9556  0499  0141               	movlb	1	; select bank1
  9557  049A  00C4               	movwf	_lastActiveTime^(0+128)
  9558                           
  9559                           ;controller.c: 62:         TM1650_enable(1);
  9560  049B  3001               	movlw	1
  9561  049C  318E  26AC         	fcall	_TM1650_enable
  9562                           
  9563                           ;controller.c: 63:     } else {
  9564  049E  0008               	return
  9565  049F                     l4173:	
  9566                           
  9567                           ;controller.c: 64:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
  9568  049F  318D  25CA  3184   	fcall	_CLOCK_getTime
  9569  04A2  0141               	movlb	1	; select bank1
  9570  04A3  0844               	movf	_lastActiveTime^(0+128),w
  9571  04A4  0140               	movlb	0	; select bank0
  9572  04A5  0220               	subwf	?_CLOCK_getTime,w
  9573  04A6  00C2               	movwf	??_CONTROLLER_task
  9574  04A7  0141               	movlb	1	; select bank1
  9575  04A8  0845               	movf	(_lastActiveTime+1)^(0+128),w
  9576  04A9  0140               	movlb	0	; select bank0
  9577  04AA  3B21               	subwfb	?_CLOCK_getTime+1,w
  9578  04AB  00C3               	movwf	??_CONTROLLER_task+1
  9579  04AC  3013               	movlw	19
  9580  04AD  0243               	subwf	??_CONTROLLER_task+1,w
  9581  04AE  3088               	movlw	136
  9582  04AF  1903               	skipnz
  9583  04B0  0242               	subwf	??_CONTROLLER_task,w
  9584  04B1  1C03               	skipc
  9585  04B2  0008               	return
  9586                           
  9587                           ;controller.c: 65:             TM1650_enable(0);
  9588  04B3  3000               	movlw	0
  9589  04B4  318E  26AC  3184   	fcall	_TM1650_enable
  9590                           
  9591                           ;controller.c: 66:             lastActiveTime = CLOCK_getTime() - 5001;
  9592  04B7  318D  25CA         	fcall	_CLOCK_getTime
  9593  04B9  0140               	movlb	0	; select bank0
  9594  04BA  0820               	movf	?_CLOCK_getTime,w
  9595  04BB  3E77               	addlw	119
  9596  04BC  0141               	movlb	1	; select bank1
  9597  04BD  00C4               	movwf	_lastActiveTime^(0+128)
  9598  04BE  30EC               	movlw	236
  9599  04BF  0140               	movlb	0	; select bank0
  9600  04C0  3D21               	addwfc	?_CLOCK_getTime+1,w
  9601  04C1  0141               	movlb	1	; select bank1
  9602  04C2  00C5               	movwf	(_lastActiveTime+1)^(0+128)
  9603  04C3  0008               	return
  9604  04C4                     __end_of_CONTROLLER_task:	
  9605                           
  9606                           	psect	text22
  9607  0EEB                     __ptext22:	
  9608 ;; *************** function _address_inc *****************
  9609 ;; Defined at:
  9610 ;;		line 19 in file "controller.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;		None
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;		None
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      void 
  9617 ;; Registers used:
  9618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9619 ;; Tracked objects:
  9620 ;;		On entry : 0/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9628 ;;Total ram usage:        0 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:   10
  9631 ;; This function calls:
  9632 ;;		_TM1650_fastPrintNum
  9633 ;; This function is called by:
  9634 ;;		_CONTROLLER_task
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637                           
  9638                           
  9639                           ;psect for function _address_inc
  9640  0EEB                     _address_inc:	
  9641                           
  9642                           ;controller.c: 21:     if(address == 512) {
  9643                           
  9644                           ;incstack = 0
  9645                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9646  0EEB  3002               	movlw	2
  9647  0EEC  0140               	movlb	0	; select bank0
  9648  0EED  066D               	xorwf	_address+1,w
  9649  0EEE  046C               	iorwf	_address,w
  9650  0EEF  1D03               	btfss	3,2
  9651  0EF0  2EF6               	goto	l3919
  9652                           
  9653                           ;controller.c: 22:         address = 1;
  9654  0EF1  3001               	movlw	1
  9655  0EF2  00EC               	movwf	_address
  9656  0EF3  3000               	movlw	0
  9657  0EF4  00ED               	movwf	_address+1
  9658                           
  9659                           ;controller.c: 23:     } else {
  9660  0EF5  2EFA               	goto	l3921
  9661  0EF6                     l3919:	
  9662                           
  9663                           ;controller.c: 24:         address++;
  9664  0EF6  3001               	movlw	1
  9665  0EF7  07EC               	addwf	_address,f
  9666  0EF8  3000               	movlw	0
  9667  0EF9  3DED               	addwfc	_address+1,f
  9668  0EFA                     l3921:	
  9669                           
  9670                           ;controller.c: 28:     TM1650_fastPrintNum(address);
  9671  0EFA  086D               	movf	_address+1,w
  9672  0EFB  00BC               	movwf	TM1650_fastPrintNum@num+1
  9673  0EFC  086C               	movf	_address,w
  9674  0EFD  00BB               	movwf	TM1650_fastPrintNum@num
  9675  0EFE  3183  23DC         	fcall	_TM1650_fastPrintNum
  9676  0F00  0008               	return
  9677  0F01                     __end_of_address_inc:	
  9678                           
  9679                           	psect	text23
  9680  0EC1                     __ptext23:	
  9681 ;; *************** function _address_dec *****************
  9682 ;; Defined at:
  9683 ;;		line 34 in file "controller.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;		None
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;		None
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1    wreg      void 
  9690 ;; Registers used:
  9691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9701 ;;Total ram usage:        0 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:   10
  9704 ;; This function calls:
  9705 ;;		_TM1650_fastPrintNum
  9706 ;; This function is called by:
  9707 ;;		_CONTROLLER_task
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           
  9712                           ;psect for function _address_dec
  9713  0EC1                     _address_dec:	
  9714                           
  9715                           ;controller.c: 36:     if(address == 1) {
  9716                           
  9717                           ;incstack = 0
  9718                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9719  0EC1  0140               	movlb	0	; select bank0
  9720  0EC2  036C               	decf	_address,w
  9721  0EC3  046D               	iorwf	_address+1,w
  9722  0EC4  1D03               	btfss	3,2
  9723  0EC5  2ECB               	goto	l3927
  9724                           
  9725                           ;controller.c: 37:         address = 512;
  9726  0EC6  3000               	movlw	0
  9727  0EC7  00EC               	movwf	_address
  9728  0EC8  3002               	movlw	2
  9729  0EC9  00ED               	movwf	_address+1
  9730                           
  9731                           ;controller.c: 38:     } else {
  9732  0ECA  2ECF               	goto	l3929
  9733  0ECB                     l3927:	
  9734                           
  9735                           ;controller.c: 39:         address--;
  9736  0ECB  3001               	movlw	1
  9737  0ECC  02EC               	subwf	_address,f
  9738  0ECD  3000               	movlw	0
  9739  0ECE  3BED               	subwfb	_address+1,f
  9740  0ECF                     l3929:	
  9741                           
  9742                           ;controller.c: 43:     TM1650_fastPrintNum(address);
  9743  0ECF  086D               	movf	_address+1,w
  9744  0ED0  00BC               	movwf	TM1650_fastPrintNum@num+1
  9745  0ED1  086C               	movf	_address,w
  9746  0ED2  00BB               	movwf	TM1650_fastPrintNum@num
  9747  0ED3  3183  23DC         	fcall	_TM1650_fastPrintNum
  9748  0ED5  0008               	return
  9749  0ED6                     __end_of_address_dec:	
  9750                           
  9751                           	psect	text24
  9752  0EAC                     __ptext24:	
  9753 ;; *************** function _TM1650_enable *****************
  9754 ;; Defined at:
  9755 ;;		line 56 in file "tm1650.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;  enable          1    wreg     _Bool 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  enable          1   20[BANK0 ] _Bool 
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      void 
  9762 ;; Registers used:
  9763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9772 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9773 ;;Total ram usage:        1 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; Hardware stack levels required when called:    8
  9776 ;; This function calls:
  9777 ;;		_writeData
  9778 ;; This function is called by:
  9779 ;;		_TM1650_init
  9780 ;;		_CONTROLLER_task
  9781 ;; This function uses a non-reentrant model
  9782 ;;
  9783                           
  9784                           
  9785                           ;psect for function _TM1650_enable
  9786  0EAC                     _TM1650_enable:	
  9787                           
  9788                           ;incstack = 0
  9789                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9790                           ;TM1650_enable@enable stored from wreg
  9791  0EAC  0140               	movlb	0	; select bank0
  9792  0EAD  00B4               	movwf	TM1650_enable@enable
  9793                           
  9794                           ;tm1650.c: 57:     if(enable) {
  9795  0EAE  0834               	movf	TM1650_enable@enable,w
  9796  0EAF  1903               	btfsc	3,2
  9797  0EB0  2EBA               	goto	l3879
  9798                           
  9799                           ;tm1650.c: 58:         writeData(0x24, 1);
  9800  0EB1  01AE               	clrf	writeData@data
  9801  0EB2  0AAE               	incf	writeData@data,f
  9802  0EB3  3024               	movlw	36
  9803  0EB4  318F  2782         	fcall	_writeData
  9804                           
  9805                           ;tm1650.c: 59:         isOn = 1;
  9806  0EB6  0140               	movlb	0	; select bank0
  9807  0EB7  01DD               	clrf	_isOn
  9808  0EB8  0ADD               	incf	_isOn,f
  9809                           
  9810                           ;tm1650.c: 60:     } else {
  9811  0EB9  0008               	return
  9812  0EBA                     l3879:	
  9813                           
  9814                           ;tm1650.c: 61:         writeData(0x24, 0);
  9815  0EBA  01AE               	clrf	writeData@data
  9816  0EBB  3024               	movlw	36
  9817  0EBC  318F  2782         	fcall	_writeData
  9818                           
  9819                           ;tm1650.c: 62:         isOn = 0;
  9820  0EBE  0140               	movlb	0	; select bank0
  9821  0EBF  01DD               	clrf	_isOn
  9822  0EC0  0008               	return
  9823  0EC1                     __end_of_TM1650_enable:	
  9824                           
  9825                           	psect	text25
  9826  0FDF                     __ptext25:	
  9827 ;; *************** function _BUTTONS_isClicked *****************
  9828 ;; Defined at:
  9829 ;;		line 71 in file "buttons.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  button          1    wreg     PTR struct .
  9832 ;;		 -> buttons(32), NULL(0), 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  button          1    3[BANK0 ] PTR struct .
  9835 ;;		 -> buttons(32), NULL(0), 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  2    0[BANK0 ] int 
  9838 ;; Registers used:
  9839 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9845 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9848 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9849 ;;Total ram usage:        4 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:    4
  9852 ;; This function calls:
  9853 ;;		Nothing
  9854 ;; This function is called by:
  9855 ;;		_CONTROLLER_task
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           
  9860                           ;psect for function _BUTTONS_isClicked
  9861  0FDF                     _BUTTONS_isClicked:	
  9862                           
  9863                           ;incstack = 0
  9864                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
  9865                           ;BUTTONS_isClicked@button stored from wreg
  9866  0FDF  0140               	movlb	0	; select bank0
  9867  0FE0  00A3               	movwf	BUTTONS_isClicked@button
  9868                           
  9869                           ;buttons.c: 72:     if (button->event == EVENT_PRESSED) {
  9870  0FE1  0823               	movf	BUTTONS_isClicked@button,w
  9871  0FE2  3E05               	addlw	5
  9872  0FE3  0086               	movwf	6
  9873  0FE4  3001               	movlw	1	; select bank2/3
  9874  0FE5  0087               	movwf	7
  9875  0FE6  0301               	decf	1,w
  9876  0FE7  1D03               	btfss	3,2
  9877  0FE8  2FF4               	goto	l3905
  9878                           
  9879                           ;buttons.c: 73:         button->event = EVENT_IDLE;
  9880  0FE9  0823               	movf	BUTTONS_isClicked@button,w
  9881  0FEA  3E05               	addlw	5
  9882  0FEB  0086               	movwf	6
  9883  0FEC  3001               	movlw	1	; select bank2/3
  9884  0FED  0087               	movwf	7
  9885  0FEE  0181               	clrf	1
  9886  0FEF                     l3899:	
  9887                           
  9888                           ;buttons.c: 74:         return 1;
  9889  0FEF  3001               	movlw	1
  9890  0FF0  00A0               	movwf	?_BUTTONS_isClicked
  9891  0FF1  3000               	movlw	0
  9892  0FF2  00A1               	movwf	?_BUTTONS_isClicked+1
  9893  0FF3  0008               	return
  9894  0FF4                     l3905:	
  9895  0FF4  0823               	movf	BUTTONS_isClicked@button,w
  9896  0FF5  3E05               	addlw	5
  9897  0FF6  0086               	movwf	6
  9898  0FF7  3001               	movlw	1	; select bank2/3
  9899  0FF8  0087               	movwf	7
  9900  0FF9  3002               	movlw	2
  9901  0FFA  0601               	xorwf	1,w
  9902  0FFB  1903               	btfsc	3,2
  9903  0FFC  2FEF               	goto	l3899
  9904                           
  9905                           ;buttons.c: 78:     return 0;
  9906  0FFD  01A0               	clrf	?_BUTTONS_isClicked
  9907  0FFE  01A1               	clrf	?_BUTTONS_isClicked+1
  9908  0FFF  0008               	return
  9909  1000                     __end_of_BUTTONS_isClicked:	
  9910                           
  9911                           	psect	text26
  9912  0DD8                     __ptext26:	
  9913 ;; *************** function _CONTROLLER_init *****************
  9914 ;; Defined at:
  9915 ;;		line 12 in file "controller.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;		None
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;		None
  9920 ;; Return value:  Size  Location     Type
  9921 ;;                  1    wreg      void 
  9922 ;; Registers used:
  9923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9924 ;; Tracked objects:
  9925 ;;		On entry : 0/0
  9926 ;;		On exit  : 0/0
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9933 ;;Total ram usage:        0 bytes
  9934 ;; Hardware stack levels used:    1
  9935 ;; Hardware stack levels required when called:   10
  9936 ;; This function calls:
  9937 ;;		_TM1650_fastPrintNum
  9938 ;; This function is called by:
  9939 ;;		_main
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function _CONTROLLER_init
  9945  0DD8                     _CONTROLLER_init:	
  9946                           
  9947                           ;controller.c: 13:     TM1650_fastPrintNum(address);
  9948                           
  9949                           ;incstack = 0
  9950                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9951  0DD8  0140               	movlb	0	; select bank0
  9952  0DD9  086D               	movf	_address+1,w
  9953  0DDA  00BC               	movwf	TM1650_fastPrintNum@num+1
  9954  0DDB  086C               	movf	_address,w
  9955  0DDC  00BB               	movwf	TM1650_fastPrintNum@num
  9956  0DDD  3183  23DC         	fcall	_TM1650_fastPrintNum
  9957  0DDF  0008               	return
  9958  0DE0                     __end_of_CONTROLLER_init:	
  9959                           
  9960                           	psect	text27
  9961  03DC                     __ptext27:	
  9962 ;; *************** function _TM1650_fastPrintNum *****************
  9963 ;; Defined at:
  9964 ;;		line 36 in file "tm1650.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  num             2   27[BANK0 ] unsigned short 
  9967 ;; Auto vars:     Size  Location     Type
  9968 ;;  numWrite        2   30[BANK0 ] int 
  9969 ;;  i               2   32[BANK0 ] int 
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  1    wreg      void 
  9972 ;; Registers used:
  9973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9980 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9982 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9983 ;;Total ram usage:        7 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    9
  9986 ;; This function calls:
  9987 ;;		_TM1650_setDigit
  9988 ;;		___lwdiv
  9989 ;;		___lwmod
  9990 ;; This function is called by:
  9991 ;;		_CONTROLLER_init
  9992 ;;		_address_inc
  9993 ;;		_address_dec
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           
  9998                           ;psect for function _TM1650_fastPrintNum
  9999  03DC                     _TM1650_fastPrintNum:	
 10000                           
 10001                           ;tm1650.c: 37:     if(num > 9999) {
 10002                           
 10003                           ;incstack = 0
 10004                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10005  03DC  3027               	movlw	39
 10006  03DD  0140               	movlb	0	; select bank0
 10007  03DE  023C               	subwf	TM1650_fastPrintNum@num+1,w
 10008  03DF  3010               	movlw	16
 10009  03E0  1903               	skipnz
 10010  03E1  023B               	subwf	TM1650_fastPrintNum@num,w
 10011  03E2  1C03               	skipc
 10012  03E3  2C13               	goto	l3719
 10013                           
 10014                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
 10015  03E4  3045               	movlw	69
 10016  03E5  00BD               	movwf	??_TM1650_fastPrintNum
 10017  03E6  083D               	movf	??_TM1650_fastPrintNum,w
 10018  03E7  00B4               	movwf	TM1650_setDigit@data
 10019  03E8  3000               	movlw	0
 10020  03E9  00B5               	movwf	TM1650_setDigit@dp
 10021  03EA  00B6               	movwf	TM1650_setDigit@dp+1
 10022  03EB  3000               	movlw	0
 10023  03EC  318F  2749  3183   	fcall	_TM1650_setDigit
 10024                           
 10025                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
 10026  03EF  3045               	movlw	69
 10027  03F0  0140               	movlb	0	; select bank0
 10028  03F1  00BD               	movwf	??_TM1650_fastPrintNum
 10029  03F2  083D               	movf	??_TM1650_fastPrintNum,w
 10030  03F3  00B4               	movwf	TM1650_setDigit@data
 10031  03F4  3000               	movlw	0
 10032  03F5  00B5               	movwf	TM1650_setDigit@dp
 10033  03F6  00B6               	movwf	TM1650_setDigit@dp+1
 10034  03F7  3001               	movlw	1
 10035  03F8  318F  2749  3183   	fcall	_TM1650_setDigit
 10036                           
 10037                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
 10038  03FB  3045               	movlw	69
 10039  03FC  0140               	movlb	0	; select bank0
 10040  03FD  00BD               	movwf	??_TM1650_fastPrintNum
 10041  03FE  083D               	movf	??_TM1650_fastPrintNum,w
 10042  03FF  00B4               	movwf	TM1650_setDigit@data
 10043  0400  3000               	movlw	0
 10044  0401  00B5               	movwf	TM1650_setDigit@dp
 10045  0402  00B6               	movwf	TM1650_setDigit@dp+1
 10046  0403  3002               	movlw	2
 10047  0404  318F  2749  3183   	fcall	_TM1650_setDigit
 10048                           
 10049                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
 10050  0407  3045               	movlw	69
 10051  0408  0140               	movlb	0	; select bank0
 10052  0409  00BD               	movwf	??_TM1650_fastPrintNum
 10053  040A  083D               	movf	??_TM1650_fastPrintNum,w
 10054  040B  00B4               	movwf	TM1650_setDigit@data
 10055  040C  3000               	movlw	0
 10056  040D  00B5               	movwf	TM1650_setDigit@dp
 10057  040E  00B6               	movwf	TM1650_setDigit@dp+1
 10058  040F  3003               	movlw	3
 10059  0410  318F  2749         	fcall	_TM1650_setDigit
 10060                           
 10061                           ;tm1650.c: 42:     } else {
 10062  0412  0008               	return
 10063  0413                     l3719:	
 10064                           
 10065                           ;tm1650.c: 43:         int i=0;
 10066  0413  01C0               	clrf	TM1650_fastPrintNum@i
 10067  0414  01C1               	clrf	TM1650_fastPrintNum@i+1
 10068                           
 10069                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
 10070  0415  01C0               	clrf	TM1650_fastPrintNum@i
 10071  0416  01C1               	clrf	TM1650_fastPrintNum@i+1
 10072  0417                     l3725:	
 10073                           
 10074                           ;tm1650.c: 45:             int numWrite = num %10;
 10075  0417  300A               	movlw	10
 10076  0418  0140               	movlb	0	; select bank0
 10077  0419  00A0               	movwf	___lwmod@divisor
 10078  041A  3000               	movlw	0
 10079  041B  00A1               	movwf	___lwmod@divisor+1
 10080  041C  083C               	movf	TM1650_fastPrintNum@num+1,w
 10081  041D  00A3               	movwf	___lwmod@dividend+1
 10082  041E  083B               	movf	TM1650_fastPrintNum@num,w
 10083  041F  00A2               	movwf	___lwmod@dividend
 10084  0420  3187  2731  3183   	fcall	___lwmod
 10085  0423  0140               	movlb	0	; select bank0
 10086  0424  0821               	movf	?___lwmod+1,w
 10087  0425  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
 10088  0426  0820               	movf	?___lwmod,w
 10089  0427  00BE               	movwf	TM1650_fastPrintNum@numWrite
 10090                           
 10091                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
 10092  0428  083E               	movf	TM1650_fastPrintNum@numWrite,w
 10093  0429  3E30               	addlw	48
 10094  042A  00BD               	movwf	??_TM1650_fastPrintNum
 10095  042B  083D               	movf	??_TM1650_fastPrintNum,w
 10096  042C  00B4               	movwf	TM1650_setDigit@data
 10097  042D  3000               	movlw	0
 10098  042E  00B5               	movwf	TM1650_setDigit@dp
 10099  042F  00B6               	movwf	TM1650_setDigit@dp+1
 10100  0430  0840               	movf	TM1650_fastPrintNum@i,w
 10101  0431  3C03               	sublw	3
 10102  0432  318F  2749  3183   	fcall	_TM1650_setDigit
 10103                           
 10104                           ;tm1650.c: 47:             num = num/10;
 10105  0435  300A               	movlw	10
 10106  0436  0140               	movlb	0	; select bank0
 10107  0437  00A0               	movwf	___lwdiv@divisor
 10108  0438  3000               	movlw	0
 10109  0439  00A1               	movwf	___lwdiv@divisor+1
 10110  043A  083C               	movf	TM1650_fastPrintNum@num+1,w
 10111  043B  00A3               	movwf	___lwdiv@dividend+1
 10112  043C  083B               	movf	TM1650_fastPrintNum@num,w
 10113  043D  00A2               	movwf	___lwdiv@dividend
 10114  043E  3186  269D  3183   	fcall	___lwdiv
 10115  0441  0140               	movlb	0	; select bank0
 10116  0442  0821               	movf	?___lwdiv+1,w
 10117  0443  00BC               	movwf	TM1650_fastPrintNum@num+1
 10118  0444  0820               	movf	?___lwdiv,w
 10119  0445  00BB               	movwf	TM1650_fastPrintNum@num
 10120                           
 10121                           ;tm1650.c: 48:         }
 10122  0446  3001               	movlw	1
 10123  0447  07C0               	addwf	TM1650_fastPrintNum@i,f
 10124  0448  3000               	movlw	0
 10125  0449  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
 10126  044A  0841               	movf	TM1650_fastPrintNum@i+1,w
 10127  044B  3A80               	xorlw	128
 10128  044C  00BD               	movwf	??_TM1650_fastPrintNum
 10129  044D  3080               	movlw	128
 10130  044E  023D               	subwf	??_TM1650_fastPrintNum,w
 10131  044F  1D03               	skipz
 10132  0450  2C53               	goto	u2375
 10133  0451  3004               	movlw	4
 10134  0452  0240               	subwf	TM1650_fastPrintNum@i,w
 10135  0453                     u2375:	
 10136  0453  1803               	btfsc	3,0
 10137  0454  0008               	return
 10138  0455  2C17               	goto	l3725
 10139  0456                     __end_of_TM1650_fastPrintNum:	
 10140                           
 10141                           	psect	text28
 10142  0731                     __ptext28:	
 10143 ;; *************** function ___lwmod *****************
 10144 ;; Defined at:
 10145 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;  divisor         2    0[BANK0 ] unsigned int 
 10148 ;;  dividend        2    2[BANK0 ] unsigned int 
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;  counter         1    5[BANK0 ] unsigned char 
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  2    0[BANK0 ] unsigned int 
 10153 ;; Registers used:
 10154 ;;		wreg, status,2, status,0
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10160 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10163 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10164 ;;Total ram usage:        6 bytes
 10165 ;; Hardware stack levels used:    1
 10166 ;; Hardware stack levels required when called:    4
 10167 ;; This function calls:
 10168 ;;		Nothing
 10169 ;; This function is called by:
 10170 ;;		_TM1650_fastPrintNum
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           
 10175                           ;psect for function ___lwmod
 10176  0731                     ___lwmod:	
 10177                           
 10178                           ;incstack = 0
 10179                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10180  0731  0140               	movlb	0	; select bank0
 10181  0732  0820               	movf	___lwmod@divisor,w
 10182  0733  0421               	iorwf	___lwmod@divisor+1,w
 10183  0734  1903               	btfsc	3,2
 10184  0735  2F59               	goto	l3697
 10185  0736  01A5               	clrf	___lwmod@counter
 10186  0737  0AA5               	incf	___lwmod@counter,f
 10187  0738                     l3687:	
 10188  0738  1BA1               	btfsc	___lwmod@divisor+1,7
 10189  0739  2F44               	goto	l3689
 10190  073A  3001               	movlw	1
 10191  073B                     u2315:	
 10192  073B  35A0               	lslf	___lwmod@divisor,f
 10193  073C  0DA1               	rlf	___lwmod@divisor+1,f
 10194  073D  0B89               	decfsz	9,f
 10195  073E  2F3B               	goto	u2315
 10196  073F  3001               	movlw	1
 10197  0740  00A4               	movwf	??___lwmod
 10198  0741  0824               	movf	??___lwmod,w
 10199  0742  07A5               	addwf	___lwmod@counter,f
 10200  0743  2F38               	goto	l3687
 10201  0744                     l3689:	
 10202  0744  0821               	movf	___lwmod@divisor+1,w
 10203  0745  0223               	subwf	___lwmod@dividend+1,w
 10204  0746  1D03               	skipz
 10205  0747  2F4A               	goto	u2335
 10206  0748  0820               	movf	___lwmod@divisor,w
 10207  0749  0222               	subwf	___lwmod@dividend,w
 10208  074A                     u2335:	
 10209  074A  1C03               	skipc
 10210  074B  2F50               	goto	l3693
 10211  074C  0820               	movf	___lwmod@divisor,w
 10212  074D  02A2               	subwf	___lwmod@dividend,f
 10213  074E  0821               	movf	___lwmod@divisor+1,w
 10214  074F  3BA3               	subwfb	___lwmod@dividend+1,f
 10215  0750                     l3693:	
 10216  0750  3001               	movlw	1
 10217  0751                     u2345:	
 10218  0751  36A1               	lsrf	___lwmod@divisor+1,f
 10219  0752  0CA0               	rrf	___lwmod@divisor,f
 10220  0753  0B89               	decfsz	9,f
 10221  0754  2F51               	goto	u2345
 10222  0755  3001               	movlw	1
 10223  0756  02A5               	subwf	___lwmod@counter,f
 10224  0757  1D03               	btfss	3,2
 10225  0758  2F44               	goto	l3689
 10226  0759                     l3697:	
 10227  0759  0823               	movf	___lwmod@dividend+1,w
 10228  075A  00A1               	movwf	?___lwmod+1
 10229  075B  0822               	movf	___lwmod@dividend,w
 10230  075C  00A0               	movwf	?___lwmod
 10231  075D  0008               	return
 10232  075E                     __end_of___lwmod:	
 10233                           
 10234                           	psect	text29
 10235  0F49                     __ptext29:	
 10236 ;; *************** function _TM1650_setDigit *****************
 10237 ;; Defined at:
 10238 ;;		line 24 in file "tm1650.c"
 10239 ;; Parameters:    Size  Location     Type
 10240 ;;  digit           1    wreg     unsigned char 
 10241 ;;  data            1   20[BANK0 ] unsigned char 
 10242 ;;  dp              2   21[BANK0 ] int 
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;  digit           1   26[BANK0 ] unsigned char 
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10254 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10256 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10257 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10258 ;;Total ram usage:        7 bytes
 10259 ;; Hardware stack levels used:    1
 10260 ;; Hardware stack levels required when called:    8
 10261 ;; This function calls:
 10262 ;;		_writeData
 10263 ;; This function is called by:
 10264 ;;		_TM1650_fastPrintNum
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           
 10269                           ;psect for function _TM1650_setDigit
 10270  0F49                     _TM1650_setDigit:	
 10271                           
 10272                           ;incstack = 0
 10273                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10274                           ;TM1650_setDigit@digit stored from wreg
 10275  0F49  0140               	movlb	0	; select bank0
 10276  0F4A  00BA               	movwf	TM1650_setDigit@digit
 10277                           
 10278                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
 10279  0F4B  0834               	movf	TM1650_setDigit@data,w
 10280  0F4C  3EA4               	addlw	low ((_charTable+65504)| (0+32768))
 10281  0F4D  0084               	movwf	4
 10282  0F4E  3084               	movlw	high ((_charTable+65504)| (0+32768))
 10283  0F4F  1803               	skipnc
 10284  0F50  3E01               	addlw	1
 10285  0F51  0085               	movwf	5
 10286  0F52  0800               	movf	0,w	;code access
 10287  0F53  00B7               	movwf	??_TM1650_setDigit
 10288  0F54  0835               	movf	TM1650_setDigit@dp,w
 10289  0F55  00B8               	movwf	??_TM1650_setDigit+1
 10290  0F56  3006               	movlw	6
 10291  0F57                     u2225:	
 10292  0F57  35B8               	lslf	??_TM1650_setDigit+1,f
 10293  0F58  3EFF               	addlw	-1
 10294  0F59  1D03               	skipz
 10295  0F5A  2F57               	goto	u2225
 10296  0F5B  3538               	lslf	??_TM1650_setDigit+1,w
 10297  0F5C  0437               	iorwf	??_TM1650_setDigit,w
 10298  0F5D  00B9               	movwf	??_TM1650_setDigit+2
 10299  0F5E  0839               	movf	??_TM1650_setDigit+2,w
 10300  0F5F  00AE               	movwf	writeData@data
 10301  0F60  083A               	movf	TM1650_setDigit@digit,w
 10302  0F61  3E34               	addlw	52
 10303  0F62  318F  2782         	fcall	_writeData
 10304  0F64  0008               	return
 10305  0F65                     __end_of_TM1650_setDigit:	
 10306                           
 10307                           	psect	text30
 10308  0F82                     __ptext30:	
 10309 ;; *************** function _writeData *****************
 10310 ;; Defined at:
 10311 ;;		line 18 in file "tm1650.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;  address         1    wreg     unsigned char 
 10314 ;;  data            1   14[BANK0 ] unsigned char 
 10315 ;; Auto vars:     Size  Location     Type
 10316 ;;  address         1   18[BANK0 ] unsigned char 
 10317 ;;  status          1   19[BANK0 ] volatile enum E10866
 10318 ;; Return value:  Size  Location     Type
 10319 ;;                  1    wreg      void 
 10320 ;; Registers used:
 10321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10322 ;; Tracked objects:
 10323 ;;		On entry : 0/0
 10324 ;;		On exit  : 0/0
 10325 ;;		Unchanged: 0/0
 10326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10327 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10328 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10329 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10330 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10331 ;;Total ram usage:        6 bytes
 10332 ;; Hardware stack levels used:    1
 10333 ;; Hardware stack levels required when called:    7
 10334 ;; This function calls:
 10335 ;;		_I2C1_MasterWrite
 10336 ;; This function is called by:
 10337 ;;		_TM1650_setDigit
 10338 ;;		_TM1650_enable
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           
 10343                           ;psect for function _writeData
 10344  0F82                     _writeData:	
 10345                           
 10346                           ;incstack = 0
 10347                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10348                           ;writeData@address stored from wreg
 10349  0F82  0140               	movlb	0	; select bank0
 10350  0F83  00B2               	movwf	writeData@address
 10351                           
 10352                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
 10353  0F84  3002               	movlw	2
 10354  0F85  00AF               	movwf	??_writeData
 10355  0F86  082F               	movf	??_writeData,w
 10356  0F87  00B3               	movwf	writeData@status	;volatile
 10357                           
 10358                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
 10359  0F88  01A7               	clrf	I2C1_MasterWrite@length
 10360  0F89  0AA7               	incf	I2C1_MasterWrite@length,f
 10361  0F8A  0832               	movf	writeData@address,w
 10362  0F8B  00AF               	movwf	??_writeData
 10363  0F8C  01B0               	clrf	??_writeData+1
 10364  0F8D  082F               	movf	??_writeData,w
 10365  0F8E  00A8               	movwf	I2C1_MasterWrite@address
 10366  0F8F  0830               	movf	??_writeData+1,w
 10367  0F90  00A9               	movwf	I2C1_MasterWrite@address+1
 10368  0F91  3033               	movlw	(low (writeData@status| 0))& (0+255)
 10369  0F92  00B1               	movwf	??_writeData+2
 10370  0F93  0831               	movf	??_writeData+2,w
 10371  0F94  00AA               	movwf	I2C1_MasterWrite@pflag
 10372  0F95  302E               	movlw	(low (writeData@data| 0))& (0+255)
 10373  0F96  3187  27AF  318F   	fcall	_I2C1_MasterWrite
 10374  0F99                     l3649:	
 10375                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
 10376                           
 10377  0F99  3002               	movlw	2
 10378  0F9A  0140               	movlb	0	; select bank0
 10379  0F9B  0633               	xorwf	writeData@status,w	;volatile
 10380  0F9C  1D03               	btfss	3,2
 10381  0F9D  0008               	return
 10382  0F9E  2F99               	goto	l3649
 10383  0F9F                     __end_of_writeData:	
 10384                           
 10385                           	psect	text31
 10386  07AF                     __ptext31:	
 10387 ;; *************** function _I2C1_MasterWrite *****************
 10388 ;; Defined at:
 10389 ;;		line 600 in file "mcc_generated_files/i2c1.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  pdata           1    wreg     PTR unsigned char 
 10392 ;;		 -> writeData@data(1), 
 10393 ;;  length          1    7[BANK0 ] unsigned char 
 10394 ;;  address         2    8[BANK0 ] unsigned short 
 10395 ;;  pflag           1   10[BANK0 ] PTR enum E10866
 10396 ;;		 -> writeData@status(1), 
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 10399 ;;		 -> writeData@data(1), 
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10409 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10411 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10412 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10413 ;;Total ram usage:        7 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:    6
 10416 ;; This function calls:
 10417 ;;		_I2C1_MasterTRBInsert
 10418 ;;		_I2C1_MasterWriteTRBBuild
 10419 ;; This function is called by:
 10420 ;;		_writeData
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           
 10425                           ;psect for function _I2C1_MasterWrite
 10426  07AF                     _I2C1_MasterWrite:	
 10427                           
 10428                           ;incstack = 0
 10429                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10430                           ;I2C1_MasterWrite@pdata stored from wreg
 10431  07AF  0140               	movlb	0	; select bank0
 10432  07B0  00AD               	movwf	I2C1_MasterWrite@pdata
 10433                           
 10434                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
 10435  07B1  1848               	btfsc	_i2c1_object+2,0
 10436  07B2  2FD0               	goto	l3643
 10437                           
 10438                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
 10439  07B3  082D               	movf	I2C1_MasterWrite@pdata,w
 10440  07B4  00AB               	movwf	??_I2C1_MasterWrite
 10441  07B5  082B               	movf	??_I2C1_MasterWrite,w
 10442  07B6  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 10443  07B7  0827               	movf	I2C1_MasterWrite@length,w
 10444  07B8  00AC               	movwf	??_I2C1_MasterWrite+1
 10445  07B9  082C               	movf	??_I2C1_MasterWrite+1,w
 10446  07BA  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 10447  07BB  0829               	movf	I2C1_MasterWrite@address+1,w
 10448  07BC  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 10449  07BD  0828               	movf	I2C1_MasterWrite@address,w
 10450  07BE  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 10451  07BF  30CC               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
 10452  07C0  318F  27BF  3187   	fcall	_I2C1_MasterWriteTRBBuild
 10453                           
 10454                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
 10455  07C3  30CC               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
 10456  07C4  0140               	movlb	0	; select bank0
 10457  07C5  00AB               	movwf	??_I2C1_MasterWrite
 10458  07C6  082B               	movf	??_I2C1_MasterWrite,w
 10459  07C7  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 10460  07C8  082A               	movf	I2C1_MasterWrite@pflag,w
 10461  07C9  00AC               	movwf	??_I2C1_MasterWrite+1
 10462  07CA  082C               	movf	??_I2C1_MasterWrite+1,w
 10463  07CB  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 10464  07CC  3001               	movlw	1
 10465  07CD  3185  2524         	fcall	_I2C1_MasterTRBInsert
 10466                           
 10467                           ;mcc_generated_files/i2c1.c: 613:     }
 10468  07CF  0008               	return
 10469  07D0                     l3643:	
 10470                           
 10471                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 10472  07D0  082A               	movf	I2C1_MasterWrite@pflag,w
 10473  07D1  0086               	movwf	6
 10474  07D2  0187               	clrf	7
 10475  07D3  0181               	clrf	1
 10476  07D4  0A81               	incf	1,f
 10477  07D5  0008               	return
 10478  07D6                     __end_of_I2C1_MasterWrite:	
 10479                           
 10480                           	psect	text32
 10481  0FBF                     __ptext32:	
 10482 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 10483 ;; Defined at:
 10484 ;;		line 721 in file "mcc_generated_files/i2c1.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;  ptrb            1    wreg     PTR struct .
 10487 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 10488 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 10489 ;;		 -> writeData@data(1), 
 10490 ;;  length          1    1[BANK0 ] unsigned char 
 10491 ;;  address         2    2[BANK0 ] unsigned short 
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;  ptrb            1    6[BANK0 ] PTR struct .
 10494 ;;		 -> I2C1_MasterWrite@trBlock(4), 
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      void 
 10497 ;; Registers used:
 10498 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10504 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10506 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10507 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10508 ;;Total ram usage:        7 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:    4
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		_I2C1_MasterWrite
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           
 10519                           ;psect for function _I2C1_MasterWriteTRBBuild
 10520  0FBF                     _I2C1_MasterWriteTRBBuild:	
 10521                           
 10522                           ;incstack = 0
 10523                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 10524                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 10525  0FBF  0140               	movlb	0	; select bank0
 10526  0FC0  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 10527                           
 10528                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
 10529  0FC1  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 10530  0FC2  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 10531  0FC3  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 10532  0FC4  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10533  0FC5  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 10534  0FC6  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 10535  0FC7  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10536  0FC8  0086               	movwf	6
 10537  0FC9  0187               	clrf	7
 10538  0FCA  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10539  0FCB  3FC0               	movwi [0]fsr1
 10540  0FCC  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 10541  0FCD  3FC1               	movwi [1]fsr1
 10542                           
 10543                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
 10544  0FCE  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 10545  0FCF  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10546  0FD0  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10547  0FD1  3E02               	addlw	2
 10548  0FD2  0086               	movwf	6
 10549  0FD3  0187               	clrf	7
 10550  0FD4  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10551  0FD5  0081               	movwf	1
 10552                           
 10553                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
 10554  0FD6  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 10555  0FD7  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10556  0FD8  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10557  0FD9  3E03               	addlw	3
 10558  0FDA  0086               	movwf	6
 10559  0FDB  0187               	clrf	7
 10560  0FDC  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10561  0FDD  0081               	movwf	1
 10562  0FDE  0008               	return
 10563  0FDF                     __end_of_I2C1_MasterWriteTRBBuild:	
 10564                           
 10565                           	psect	text33
 10566  0524                     __ptext33:	
 10567 ;; *************** function _I2C1_MasterTRBInsert *****************
 10568 ;; Defined at:
 10569 ;;		line 654 in file "mcc_generated_files/i2c1.c"
 10570 ;; Parameters:    Size  Location     Type
 10571 ;;  count           1    wreg     unsigned char 
 10572 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 10573 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
 10574 ;;  pflag           1    1[BANK0 ] PTR enum E10866
 10575 ;;		 -> writeData@status(1), 
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;  count           1    3[BANK0 ] unsigned char 
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  1    wreg      void 
 10580 ;; Registers used:
 10581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10589 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10590 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10591 ;;Total ram usage:        4 bytes
 10592 ;; Hardware stack levels used:    1
 10593 ;; Hardware stack levels required when called:    5
 10594 ;; This function calls:
 10595 ;;		_I2C1_WaitForLastPacketToComplete
 10596 ;; This function is called by:
 10597 ;;		_I2C1_MasterWrite
 10598 ;;		_I2C1_MasterRead
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           
 10603                           ;psect for function _I2C1_MasterTRBInsert
 10604  0524                     _I2C1_MasterTRBInsert:	
 10605                           
 10606                           ;incstack = 0
 10607                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10608                           ;I2C1_MasterTRBInsert@count stored from wreg
 10609  0524  0140               	movlb	0	; select bank0
 10610  0525  00A3               	movwf	I2C1_MasterTRBInsert@count
 10611                           
 10612                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
 10613  0526  1848               	btfsc	_i2c1_object+2,0
 10614  0527  2D58               	goto	l3631
 10615                           
 10616                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
 10617  0528  3002               	movlw	2
 10618  0529  00A2               	movwf	??_I2C1_MasterTRBInsert
 10619  052A  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10620  052B  0086               	movwf	6
 10621  052C  0187               	clrf	7
 10622  052D  0822               	movf	??_I2C1_MasterTRBInsert,w
 10623  052E  0081               	movwf	1
 10624                           
 10625                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
 10626  052F  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 10627  0530  00A2               	movwf	??_I2C1_MasterTRBInsert
 10628  0531  0A46               	incf	_i2c1_object,w
 10629  0532  0086               	movwf	6
 10630  0533  0187               	clrf	7
 10631  0534  0822               	movf	??_I2C1_MasterTRBInsert,w
 10632  0535  0081               	movwf	1
 10633                           
 10634                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
 10635  0536  0823               	movf	I2C1_MasterTRBInsert@count,w
 10636  0537  00A2               	movwf	??_I2C1_MasterTRBInsert
 10637  0538  0846               	movf	_i2c1_object,w
 10638  0539  0086               	movwf	6
 10639  053A  0187               	clrf	7
 10640  053B  0822               	movf	??_I2C1_MasterTRBInsert,w
 10641  053C  0081               	movwf	1
 10642                           
 10643                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
 10644  053D  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10645  053E  00A2               	movwf	??_I2C1_MasterTRBInsert
 10646  053F  0846               	movf	_i2c1_object,w
 10647  0540  3E02               	addlw	2
 10648  0541  0086               	movwf	6
 10649  0542  0187               	clrf	7
 10650  0543  0822               	movf	??_I2C1_MasterTRBInsert,w
 10651  0544  0081               	movwf	1
 10652                           
 10653                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
 10654  0545  3003               	movlw	3
 10655  0546  00A2               	movwf	??_I2C1_MasterTRBInsert
 10656  0547  0822               	movf	??_I2C1_MasterTRBInsert,w
 10657  0548  07C6               	addwf	_i2c1_object,f
 10658                           
 10659                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
 10660  0549  0846               	movf	_i2c1_object,w
 10661  054A  3A6A               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 10662  054B  1D03               	skipz
 10663  054C  2D51               	goto	l3627
 10664                           
 10665                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
 10666  054D  3067               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 10667  054E  00A2               	movwf	??_I2C1_MasterTRBInsert
 10668  054F  0822               	movf	??_I2C1_MasterTRBInsert,w
 10669  0550  00C6               	movwf	_i2c1_object
 10670  0551                     l3627:	
 10671                           
 10672                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
 10673  0551  10C8               	bcf	_i2c1_object+2,1
 10674                           
 10675                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
 10676  0552  0847               	movf	low ((_i2c1_object| 0+1)),w
 10677  0553  0646               	xorwf	_i2c1_object,w
 10678  0554  1D03               	skipz
 10679  0555  2D5D               	goto	l3633
 10680                           
 10681                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
 10682  0556  1448               	bsf	_i2c1_object+2,0
 10683  0557  2D5D               	goto	l3633
 10684  0558                     l3631:	
 10685                           
 10686                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
 10687  0558  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10688  0559  0086               	movwf	6
 10689  055A  0187               	clrf	7
 10690  055B  0181               	clrf	1
 10691  055C  0A81               	incf	1,f
 10692  055D                     l3633:	
 10693                           
 10694                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
 10695  055D  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10696  055E  0086               	movwf	6
 10697  055F  0187               	clrf	7
 10698  0560  3002               	movlw	2
 10699  0561  0601               	xorwf	1,w
 10700  0562  1D03               	btfss	3,2
 10701  0563  0008               	return
 10702                           
 10703                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
 10704  0564  318D  25BF         	fcall	_I2C1_WaitForLastPacketToComplete
 10705                           
 10706                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
 10707  0566  014E               	movlb	14	; select bank14
 10708  0567  140F               	bsf	15,0	;volatile
 10709  0568  0008               	return
 10710  0569                     __end_of_I2C1_MasterTRBInsert:	
 10711                           
 10712                           	psect	text34
 10713  0DBF                     __ptext34:	
 10714 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
 10715 ;; Defined at:
 10716 ;;		line 644 in file "mcc_generated_files/i2c1.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;		None
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      void 
 10723 ;; Registers used:
 10724 ;;		wreg, status,2, status,0
 10725 ;; Tracked objects:
 10726 ;;		On entry : 0/0
 10727 ;;		On exit  : 0/0
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10734 ;;Total ram usage:        0 bytes
 10735 ;; Hardware stack levels used:    1
 10736 ;; Hardware stack levels required when called:    4
 10737 ;; This function calls:
 10738 ;;		Nothing
 10739 ;; This function is called by:
 10740 ;;		_I2C1_MasterTRBInsert
 10741 ;; This function uses a non-reentrant model
 10742 ;;
 10743                           
 10744                           
 10745                           ;psect for function _I2C1_WaitForLastPacketToComplete
 10746  0DBF                     _I2C1_WaitForLastPacketToComplete:	
 10747  0DBF                     l3613:	
 10748                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 10749                           
 10750                           ;incstack = 0
 10751                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
 10752                           
 10753                           
 10754                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
 10755  0DBF  0140               	movlb	0	; select bank0
 10756  0DC0  0864               	movf	_i2c1_state,w
 10757  0DC1  1903               	btfsc	3,2
 10758  0DC2  0008               	return
 10759  0DC3  2DBF               	goto	l3613
 10760  0DC4                     __end_of_I2C1_WaitForLastPacketToComplete:	
 10761                           
 10762                           	psect	text35
 10763  0DD0                     __ptext35:	
 10764 ;; *************** function _CLOCK_init *****************
 10765 ;; Defined at:
 10766 ;;		line 9 in file "clock.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;		None
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;		None
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  1    wreg      void 
 10773 ;; Registers used:
 10774 ;;		wreg, status,2, status,0, pclath, cstack
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10784 ;;Total ram usage:        0 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    5
 10787 ;; This function calls:
 10788 ;;		_TMR0_SetInterruptHandler
 10789 ;; This function is called by:
 10790 ;;		_main
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           
 10795                           ;psect for function _CLOCK_init
 10796  0DD0                     _CLOCK_init:	
 10797                           
 10798                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
 10799                           
 10800                           ;incstack = 0
 10801                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
 10802  0DD0  30C4               	movlw	low _CLOCK_timerCallback
 10803  0DD1  0140               	movlb	0	; select bank0
 10804  0DD2  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10805  0DD3  300D               	movlw	high _CLOCK_timerCallback
 10806  0DD4  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10807  0DD5  318D  25FB         	fcall	_TMR0_SetInterruptHandler
 10808  0DD7  0008               	return
 10809  0DD8                     __end_of_CLOCK_init:	
 10810                           
 10811                           	psect	text36
 10812  0DFB                     __ptext36:	
 10813 ;; *************** function _TMR0_SetInterruptHandler *****************
 10814 ;; Defined at:
 10815 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10818 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;		None
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  1    wreg      void 
 10823 ;; Registers used:
 10824 ;;		wreg
 10825 ;; Tracked objects:
 10826 ;;		On entry : 0/0
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10830 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10833 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10834 ;;Total ram usage:        2 bytes
 10835 ;; Hardware stack levels used:    1
 10836 ;; Hardware stack levels required when called:    4
 10837 ;; This function calls:
 10838 ;;		Nothing
 10839 ;; This function is called by:
 10840 ;;		_TMR0_Initialize
 10841 ;;		_CLOCK_init
 10842 ;; This function uses a non-reentrant model
 10843 ;;
 10844                           
 10845                           
 10846                           ;psect for function _TMR0_SetInterruptHandler
 10847  0DFB                     _TMR0_SetInterruptHandler:	
 10848                           
 10849                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 10850                           
 10851                           ;incstack = 0
 10852                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 10853  0DFB  0140               	movlb	0	; select bank0
 10854  0DFC  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 10855  0DFD  0141               	movlb	1	; select bank1
 10856  0DFE  00D3               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 10857  0DFF  0140               	movlb	0	; select bank0
 10858  0E00  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 10859  0E01  0141               	movlb	1	; select bank1
 10860  0E02  00D2               	movwf	_TMR0_InterruptHandler^(0+128)
 10861  0E03  0008               	return
 10862  0E04                     __end_of_TMR0_SetInterruptHandler:	
 10863                           
 10864                           	psect	text37
 10865  01D2                     __ptext37:	
 10866 ;; *************** function _BUTTONS_task *****************
 10867 ;; Defined at:
 10868 ;;		line 34 in file "buttons.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;  btn             1    8[BANK0 ] PTR struct .
 10873 ;;		 -> buttons(32), 
 10874 ;;  i               1    5[BANK0 ] unsigned char 
 10875 ;;  time            2    6[BANK0 ] unsigned short 
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      void 
 10878 ;; Registers used:
 10879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10886 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10887 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10888 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10889 ;;Total ram usage:        7 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:    5
 10892 ;; This function calls:
 10893 ;;		_CLOCK_getTime
 10894 ;; This function is called by:
 10895 ;;		_main
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           
 10900                           ;psect for function _BUTTONS_task
 10901  01D2                     _BUTTONS_task:	
 10902                           
 10903                           ;buttons.c: 35:     time_t time = CLOCK_getTime();
 10904                           
 10905                           ;incstack = 0
 10906                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10907  01D2  318D  25CA  3181   	fcall	_CLOCK_getTime
 10908  01D5  0140               	movlb	0	; select bank0
 10909  01D6  0821               	movf	?_CLOCK_getTime+1,w
 10910  01D7  00A7               	movwf	BUTTONS_task@time+1
 10911  01D8  0820               	movf	?_CLOCK_getTime,w
 10912  01D9  00A6               	movwf	BUTTONS_task@time
 10913                           
 10914                           ;buttons.c: 38:     if (time - lastTime < 50)
 10915  01DA  084F               	movf	_lastTime,w
 10916  01DB  0226               	subwf	BUTTONS_task@time,w
 10917  01DC  00A2               	movwf	??_BUTTONS_task
 10918  01DD  0850               	movf	_lastTime+1,w
 10919  01DE  3B27               	subwfb	BUTTONS_task@time+1,w
 10920  01DF  00A3               	movwf	??_BUTTONS_task+1
 10921  01E0  3000               	movlw	0
 10922  01E1  0223               	subwf	??_BUTTONS_task+1,w
 10923  01E2  3032               	movlw	50
 10924  01E3  1903               	skipnz
 10925  01E4  0222               	subwf	??_BUTTONS_task,w
 10926  01E5  1C03               	btfss	3,0
 10927  01E6  0008               	return
 10928                           
 10929                           ;buttons.c: 41:     lastTime = time;
 10930  01E7  0827               	movf	BUTTONS_task@time+1,w
 10931  01E8  00D0               	movwf	_lastTime+1
 10932  01E9  0826               	movf	BUTTONS_task@time,w
 10933  01EA  00CF               	movwf	_lastTime
 10934                           
 10935                           ;buttons.c: 44:     for (uint8_t i = 0; i < 4; i++) {
 10936  01EB  01A5               	clrf	BUTTONS_task@i
 10937  01EC                     l4119:	
 10938                           
 10939                           ;buttons.c: 45:         button_t* btn = buttons + i;
 10940  01EC  0825               	movf	BUTTONS_task@i,w
 10941  01ED  00A2               	movwf	??_BUTTONS_task
 10942  01EE  3002               	movlw	2
 10943  01EF                     u2565:	
 10944  01EF  35A2               	lslf	??_BUTTONS_task,f
 10945  01F0  3EFF               	addlw	-1
 10946  01F1  1D03               	skipz
 10947  01F2  29EF               	goto	u2565
 10948  01F3  3522               	lslf	??_BUTTONS_task,w
 10949  01F4  3E20               	addlw	(low (_buttons| (0+256)))& (0+255)
 10950  01F5  00A3               	movwf	??_BUTTONS_task+1
 10951  01F6  0823               	movf	??_BUTTONS_task+1,w
 10952  01F7  00A8               	movwf	BUTTONS_task@btn
 10953                           
 10954                           ;buttons.c: 48:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
 10955  01F8  0828               	movf	BUTTONS_task@btn,w
 10956  01F9  0086               	movwf	6
 10957  01FA  3001               	movlw	1	; select bank2/3
 10958  01FB  0087               	movwf	7
 10959  01FC  3F40               	moviw [0]fsr1
 10960  01FD  00A2               	movwf	??_BUTTONS_task
 10961  01FE  3F41               	moviw [1]fsr1
 10962  01FF  00A3               	movwf	??_BUTTONS_task+1
 10963  0200  0822               	movf	??_BUTTONS_task,w
 10964  0201  0086               	movwf	6
 10965  0202  0823               	movf	??_BUTTONS_task+1,w
 10966  0203  0087               	movwf	7
 10967  0204  3001               	movlw	1
 10968  0205  00A4               	movwf	??_BUTTONS_task+2
 10969  0206  0828               	movf	BUTTONS_task@btn,w
 10970  0207  3E02               	addlw	2
 10971  0208  0084               	movwf	4
 10972  0209  3001               	movlw	1	; select bank2/3
 10973  020A  0085               	movwf	5
 10974  020B  0A00               	incf	0,w
 10975  020C  2A0E               	goto	u2574
 10976  020D                     u2575:	
 10977  020D  35A4               	lslf	??_BUTTONS_task+2,f
 10978  020E                     u2574:	
 10979  020E  0B89               	decfsz	9,f
 10980  020F  2A0D               	goto	u2575
 10981  0210  0824               	movf	??_BUTTONS_task+2,w
 10982  0211  0501               	andwf	1,w
 10983  0212  1D03               	btfss	3,2
 10984  0213  2A1C               	goto	l4125
 10985                           
 10986                           ;buttons.c: 49:             btn->state = STATE_PRESSED;
 10987  0214  0828               	movf	BUTTONS_task@btn,w
 10988  0215  3E03               	addlw	3
 10989  0216  0086               	movwf	6
 10990  0217  3001               	movlw	1	; select bank2/3
 10991  0218  0087               	movwf	7
 10992  0219  0181               	clrf	1
 10993  021A  0A81               	incf	1,f
 10994                           
 10995                           ;buttons.c: 50:         } else {
 10996  021B  2A22               	goto	l808
 10997  021C                     l4125:	
 10998                           
 10999                           ;buttons.c: 51:             btn->state = STATE_UNPRESSED;
 11000  021C  0828               	movf	BUTTONS_task@btn,w
 11001  021D  3E03               	addlw	3
 11002  021E  0086               	movwf	6
 11003  021F  3001               	movlw	1	; select bank2/3
 11004  0220  0087               	movwf	7
 11005  0221  0181               	clrf	1
 11006  0222                     l808:	
 11007                           ;buttons.c: 52:         }
 11008                           
 11009                           
 11010                           ;buttons.c: 54:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
 11011  0222  0828               	movf	BUTTONS_task@btn,w
 11012  0223  3E03               	addlw	3
 11013  0224  0086               	movwf	6
 11014  0225  3001               	movlw	1	; select bank2/3
 11015  0226  0087               	movwf	7
 11016  0227  0301               	decf	1,w
 11017  0228  1D03               	btfss	3,2
 11018  0229  2A43               	goto	l4131
 11019  022A  0828               	movf	BUTTONS_task@btn,w
 11020  022B  3E04               	addlw	4
 11021  022C  0086               	movwf	6
 11022  022D  3001               	movlw	1	; select bank2/3
 11023  022E  0087               	movwf	7
 11024  022F  0801               	movf	1,w
 11025  0230  1D03               	btfss	3,2
 11026  0231  2A43               	goto	l4131
 11027                           
 11028                           ;buttons.c: 56:             btn->event = EVENT_PRESSED;
 11029  0232  0828               	movf	BUTTONS_task@btn,w
 11030  0233  3E05               	addlw	5
 11031  0234  0086               	movwf	6
 11032  0235  3001               	movlw	1	; select bank2/3
 11033  0236  0087               	movwf	7
 11034  0237  0181               	clrf	1
 11035  0238  0A81               	incf	1,f
 11036                           
 11037                           ;buttons.c: 57:             btn->pressTime = time;
 11038  0239  0828               	movf	BUTTONS_task@btn,w
 11039  023A  3E06               	addlw	6
 11040  023B  0086               	movwf	6
 11041  023C  3001               	movlw	1	; select bank2/3
 11042  023D  0087               	movwf	7
 11043  023E  0826               	movf	BUTTONS_task@time,w
 11044  023F  3FC0               	movwi [0]fsr1
 11045  0240  0827               	movf	BUTTONS_task@time+1,w
 11046  0241  3FC1               	movwi [1]fsr1
 11047                           
 11048                           ;buttons.c: 58:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
 11049  0242  2A85               	goto	l810
 11050  0243                     l4131:	
 11051  0243  0828               	movf	BUTTONS_task@btn,w
 11052  0244  3E03               	addlw	3
 11053  0245  0086               	movwf	6
 11054  0246  3001               	movlw	1	; select bank2/3
 11055  0247  0087               	movwf	7
 11056  0248  0301               	decf	1,w
 11057  0249  1D03               	btfss	3,2
 11058  024A  2A6F               	goto	l4139
 11059  024B  0828               	movf	BUTTONS_task@btn,w
 11060  024C  3E04               	addlw	4
 11061  024D  0086               	movwf	6
 11062  024E  3001               	movlw	1	; select bank2/3
 11063  024F  0087               	movwf	7
 11064  0250  0301               	decf	1,w
 11065  0251  1D03               	btfss	3,2
 11066  0252  2A6F               	goto	l4139
 11067                           
 11068                           ;buttons.c: 60:             if(time - btn->pressTime > 500) {
 11069  0253  0828               	movf	BUTTONS_task@btn,w
 11070  0254  3E06               	addlw	6
 11071  0255  0086               	movwf	6
 11072  0256  3001               	movlw	1	; select bank2/3
 11073  0257  0087               	movwf	7
 11074  0258  3F40               	moviw [0]fsr1
 11075  0259  0226               	subwf	BUTTONS_task@time,w
 11076  025A  00A2               	movwf	??_BUTTONS_task
 11077  025B  3F41               	moviw [1]fsr1
 11078  025C  3B27               	subwfb	BUTTONS_task@time+1,w
 11079  025D  00A3               	movwf	??_BUTTONS_task+1
 11080  025E  3001               	movlw	1
 11081  025F  0223               	subwf	??_BUTTONS_task+1,w
 11082  0260  30F5               	movlw	245
 11083  0261  1903               	skipnz
 11084  0262  0222               	subwf	??_BUTTONS_task,w
 11085  0263  1C03               	skipc
 11086  0264  2A85               	goto	l810
 11087                           
 11088                           ;buttons.c: 61:                 btn->event = EVENT_HELD;
 11089  0265  3002               	movlw	2
 11090  0266  00A2               	movwf	??_BUTTONS_task
 11091  0267  0828               	movf	BUTTONS_task@btn,w
 11092  0268  3E05               	addlw	5
 11093  0269  0086               	movwf	6
 11094  026A  3001               	movlw	1	; select bank2/3
 11095  026B  0087               	movwf	7
 11096  026C  0822               	movf	??_BUTTONS_task,w
 11097  026D  0081               	movwf	1
 11098  026E  2A85               	goto	l810
 11099  026F                     l4139:	
 11100  026F  0828               	movf	BUTTONS_task@btn,w
 11101  0270  3E03               	addlw	3
 11102  0271  0086               	movwf	6
 11103  0272  3001               	movlw	1	; select bank2/3
 11104  0273  0087               	movwf	7
 11105  0274  0801               	movf	1,w
 11106  0275  1D03               	btfss	3,2
 11107  0276  2A85               	goto	l810
 11108  0277  0828               	movf	BUTTONS_task@btn,w
 11109  0278  3E04               	addlw	4
 11110  0279  0086               	movwf	6
 11111  027A  3001               	movlw	1	; select bank2/3
 11112  027B  0087               	movwf	7
 11113  027C  0301               	decf	1,w
 11114  027D  1D03               	btfss	3,2
 11115  027E  2A85               	goto	l810
 11116                           
 11117                           ;buttons.c: 64:             btn->event = EVENT_IDLE;
 11118  027F  0828               	movf	BUTTONS_task@btn,w
 11119  0280  3E05               	addlw	5
 11120  0281  0086               	movwf	6
 11121  0282  3001               	movlw	1	; select bank2/3
 11122  0283  0087               	movwf	7
 11123  0284  0181               	clrf	1
 11124  0285                     l810:	
 11125                           
 11126                           ;buttons.c: 67:         btn->lastState = btn->state;
 11127  0285  0828               	movf	BUTTONS_task@btn,w
 11128  0286  3E03               	addlw	3
 11129  0287  0086               	movwf	6
 11130  0288  3001               	movlw	1	; select bank2/3
 11131  0289  0087               	movwf	7
 11132  028A  0801               	movf	1,w
 11133  028B  00A2               	movwf	??_BUTTONS_task
 11134  028C  0828               	movf	BUTTONS_task@btn,w
 11135  028D  3E04               	addlw	4
 11136  028E  0086               	movwf	6
 11137  028F  3001               	movlw	1	; select bank2/3
 11138  0290  0087               	movwf	7
 11139  0291  0822               	movf	??_BUTTONS_task,w
 11140  0292  0081               	movwf	1
 11141                           
 11142                           ;buttons.c: 68:     }
 11143  0293  3001               	movlw	1
 11144  0294  00A2               	movwf	??_BUTTONS_task
 11145  0295  0822               	movf	??_BUTTONS_task,w
 11146  0296  07A5               	addwf	BUTTONS_task@i,f
 11147  0297  3004               	movlw	4
 11148  0298  0225               	subwf	BUTTONS_task@i,w
 11149  0299  1803               	btfsc	3,0
 11150  029A  0008               	return
 11151  029B  29EC               	goto	l4119
 11152  029C                     __end_of_BUTTONS_task:	
 11153                           
 11154                           	psect	text38
 11155  05AC                     __ptext38:	
 11156 ;; *************** function _BUTTONS_init *****************
 11157 ;; Defined at:
 11158 ;;		line 21 in file "buttons.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      void 
 11165 ;; Registers used:
 11166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11175 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11176 ;;Total ram usage:        1 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    5
 11179 ;; This function calls:
 11180 ;;		_init
 11181 ;; This function is called by:
 11182 ;;		_main
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           
 11187                           ;psect for function _BUTTONS_init
 11188  05AC                     _BUTTONS_init:	
 11189                           
 11190                           ;buttons.c: 22:     menu = &buttons[0];
 11191                           
 11192                           ;incstack = 0
 11193                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11194  05AC  3020               	movlw	(low (_buttons| (0+256)))& (0+255)
 11195  05AD  0140               	movlb	0	; select bank0
 11196  05AE  00A5               	movwf	??_BUTTONS_init
 11197  05AF  0825               	movf	??_BUTTONS_init,w
 11198  05B0  00D9               	movwf	_menu
 11199                           
 11200                           ;buttons.c: 23:     up = &buttons[1];
 11201  05B1  3028               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 11202  05B2  00A5               	movwf	??_BUTTONS_init
 11203  05B3  0825               	movf	??_BUTTONS_init,w
 11204  05B4  00DC               	movwf	_up
 11205                           
 11206                           ;buttons.c: 24:     down = &buttons[2];
 11207  05B5  3030               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 11208  05B6  00A5               	movwf	??_BUTTONS_init
 11209  05B7  0825               	movf	??_BUTTONS_init,w
 11210  05B8  00DB               	movwf	_down
 11211                           
 11212                           ;buttons.c: 25:     enter = &buttons[3];
 11213  05B9  3038               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 11214  05BA  00A5               	movwf	??_BUTTONS_init
 11215  05BB  0825               	movf	??_BUTTONS_init,w
 11216  05BC  00DA               	movwf	_enter
 11217                           
 11218                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 11219  05BD  300E               	movlw	14
 11220  05BE  00A0               	movwf	init@port
 11221  05BF  3000               	movlw	0
 11222  05C0  00A1               	movwf	init@port+1
 11223  05C1  3002               	movlw	2
 11224  05C2  00A5               	movwf	??_BUTTONS_init
 11225  05C3  0825               	movf	??_BUTTONS_init,w
 11226  05C4  00A2               	movwf	init@pin
 11227  05C5  0859               	movf	_menu,w
 11228  05C6  318F  279F  3185   	fcall	_init
 11229                           
 11230                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 11231  05C9  300C               	movlw	12
 11232  05CA  0140               	movlb	0	; select bank0
 11233  05CB  00A0               	movwf	init@port
 11234  05CC  3000               	movlw	0
 11235  05CD  00A1               	movwf	init@port+1
 11236  05CE  3002               	movlw	2
 11237  05CF  00A5               	movwf	??_BUTTONS_init
 11238  05D0  0825               	movf	??_BUTTONS_init,w
 11239  05D1  00A2               	movwf	init@pin
 11240  05D2  085A               	movf	_enter,w
 11241  05D3  318F  279F  3185   	fcall	_init
 11242                           
 11243                           ;buttons.c: 29:     init(down, &PORTC, 0);
 11244  05D6  300E               	movlw	14
 11245  05D7  0140               	movlb	0	; select bank0
 11246  05D8  00A0               	movwf	init@port
 11247  05D9  3000               	movlw	0
 11248  05DA  00A1               	movwf	init@port+1
 11249  05DB  01A2               	clrf	init@pin
 11250  05DC  085B               	movf	_down,w
 11251  05DD  318F  279F  3185   	fcall	_init
 11252                           
 11253                           ;buttons.c: 30:     init(up, &PORTC, 1);
 11254  05E0  300E               	movlw	14
 11255  05E1  0140               	movlb	0	; select bank0
 11256  05E2  00A0               	movwf	init@port
 11257  05E3  3000               	movlw	0
 11258  05E4  00A1               	movwf	init@port+1
 11259  05E5  01A2               	clrf	init@pin
 11260  05E6  0AA2               	incf	init@pin,f
 11261  05E7  085C               	movf	_up,w
 11262  05E8  318F  279F         	fcall	_init
 11263  05EA  0008               	return
 11264  05EB                     __end_of_BUTTONS_init:	
 11265                           
 11266                           	psect	text39
 11267  0F9F                     __ptext39:	
 11268 ;; *************** function _init *****************
 11269 ;; Defined at:
 11270 ;;		line 14 in file "buttons.c"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;  btn             1    wreg     PTR struct .
 11273 ;;		 -> buttons(32), NULL(0), 
 11274 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 11275 ;;		 -> PORTA(1), PORTC(1), 
 11276 ;;  pin             1    2[BANK0 ] unsigned char 
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;  btn             1    4[BANK0 ] PTR struct .
 11279 ;;		 -> buttons(32), NULL(0), 
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      void 
 11282 ;; Registers used:
 11283 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11289 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11291 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11292 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11293 ;;Total ram usage:        5 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:    4
 11296 ;; This function calls:
 11297 ;;		Nothing
 11298 ;; This function is called by:
 11299 ;;		_BUTTONS_init
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           
 11304                           ;psect for function _init
 11305  0F9F                     _init:	
 11306                           
 11307                           ;incstack = 0
 11308                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 11309                           ;init@btn stored from wreg
 11310  0F9F  0140               	movlb	0	; select bank0
 11311  0FA0  00A4               	movwf	init@btn
 11312                           
 11313                           ;buttons.c: 15:     btn->port = port;
 11314  0FA1  0824               	movf	init@btn,w
 11315  0FA2  0086               	movwf	6
 11316  0FA3  3001               	movlw	1	; select bank2/3
 11317  0FA4  0087               	movwf	7
 11318  0FA5  0820               	movf	init@port,w
 11319  0FA6  3FC0               	movwi [0]fsr1
 11320  0FA7  0821               	movf	init@port+1,w
 11321  0FA8  3FC1               	movwi [1]fsr1
 11322                           
 11323                           ;buttons.c: 16:     btn->pin = pin;
 11324  0FA9  0822               	movf	init@pin,w
 11325  0FAA  00A3               	movwf	??_init
 11326  0FAB  0824               	movf	init@btn,w
 11327  0FAC  3E02               	addlw	2
 11328  0FAD  0086               	movwf	6
 11329  0FAE  3001               	movlw	1	; select bank2/3
 11330  0FAF  0087               	movwf	7
 11331  0FB0  0823               	movf	??_init,w
 11332  0FB1  0081               	movwf	1
 11333                           
 11334                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 11335  0FB2  0824               	movf	init@btn,w
 11336  0FB3  3E03               	addlw	3
 11337  0FB4  0086               	movwf	6
 11338  0FB5  3001               	movlw	1	; select bank2/3
 11339  0FB6  0087               	movwf	7
 11340  0FB7  0181               	clrf	1
 11341                           
 11342                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 11343  0FB8  0824               	movf	init@btn,w
 11344  0FB9  3E05               	addlw	5
 11345  0FBA  0086               	movwf	6
 11346  0FBB  3001               	movlw	1	; select bank2/3
 11347  0FBC  0087               	movwf	7
 11348  0FBD  0181               	clrf	1
 11349  0FBE  0008               	return
 11350  0FBF                     __end_of_init:	
 11351                           
 11352                           	psect	text40
 11353  029C                     __ptext40:	
 11354 ;; *************** function _BEAT_task *****************
 11355 ;; Defined at:
 11356 ;;		line 57 in file "beat.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;		None
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;  offset          2   10[BANK0 ] unsigned short 
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      void 
 11363 ;; Registers used:
 11364 ;;		wreg, status,2, status,0, pclath, cstack
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11371 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11372 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11373 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11374 ;;Total ram usage:        4 bytes
 11375 ;; Hardware stack levels used:    1
 11376 ;; Hardware stack levels required when called:    5
 11377 ;; This function calls:
 11378 ;;		_ADCC_SetUpperThreshold
 11379 ;;		_CLOCK_getTime
 11380 ;;		_TM1650_isEnabled
 11381 ;;		___lwdiv
 11382 ;; This function is called by:
 11383 ;;		_main
 11384 ;; This function uses a non-reentrant model
 11385 ;;
 11386                           
 11387                           
 11388                           ;psect for function _BEAT_task
 11389  029C                     _BEAT_task:	
 11390                           
 11391                           ;beat.c: 59:     if (TM1650_isEnabled())
 11392                           
 11393                           ;incstack = 0
 11394                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 11395  029C  318D  25AD  3182   	fcall	_TM1650_isEnabled
 11396  029F  3A00               	xorlw	0
 11397  02A0  1D03               	btfss	3,2
 11398  02A1  0008               	return
 11399                           
 11400                           ;beat.c: 62:     if (CLOCK_getTime() - lastRun < delay)
 11401  02A2  318D  25CA  3182   	fcall	_CLOCK_getTime
 11402  02A5  0141               	movlb	1	; select bank1
 11403  02A6  0840               	movf	_lastRun^(0+128),w
 11404  02A7  0140               	movlb	0	; select bank0
 11405  02A8  0220               	subwf	?_CLOCK_getTime,w
 11406  02A9  00A8               	movwf	??_BEAT_task
 11407  02AA  0141               	movlb	1	; select bank1
 11408  02AB  0841               	movf	(_lastRun+1)^(0+128),w
 11409  02AC  0140               	movlb	0	; select bank0
 11410  02AD  3B21               	subwfb	?_CLOCK_getTime+1,w
 11411  02AE  00A9               	movwf	??_BEAT_task+1
 11412  02AF  0141               	movlb	1	; select bank1
 11413  02B0  085F               	movf	(_delay+1)^(0+128),w
 11414  02B1  0140               	movlb	0	; select bank0
 11415  02B2  0229               	subwf	??_BEAT_task+1,w
 11416  02B3  1D03               	skipz
 11417  02B4  2AB9               	goto	u2455
 11418  02B5  0141               	movlb	1	; select bank1
 11419  02B6  085E               	movf	_delay^(0+128),w
 11420  02B7  0140               	movlb	0	; select bank0
 11421  02B8  0228               	subwf	??_BEAT_task,w
 11422  02B9                     u2455:	
 11423  02B9  1C03               	btfss	3,0
 11424  02BA  0008               	return
 11425                           
 11426                           ;beat.c: 65:     lastRun = CLOCK_getTime();
 11427  02BB  318D  25CA  3182   	fcall	_CLOCK_getTime
 11428  02BE  0140               	movlb	0	; select bank0
 11429  02BF  0821               	movf	?_CLOCK_getTime+1,w
 11430  02C0  0141               	movlb	1	; select bank1
 11431  02C1  00C1               	movwf	(_lastRun+1)^(0+128)
 11432  02C2  0140               	movlb	0	; select bank0
 11433  02C3  0820               	movf	?_CLOCK_getTime,w
 11434  02C4  0141               	movlb	1	; select bank1
 11435  02C5  00C0               	movwf	_lastRun^(0+128)
 11436                           
 11437                           ;beat.c: 67:     if (thresholdExceeded == 1) {
 11438  02C6  0140               	movlb	0	; select bank0
 11439  02C7  0357               	decf	_thresholdExceeded,w
 11440  02C8  1D03               	btfss	3,2
 11441  02C9  2AD0               	goto	l4045
 11442                           
 11443                           ;beat.c: 71:         thresholdCount++;
 11444  02CA  3001               	movlw	1
 11445  02CB  0141               	movlb	1	; select bank1
 11446  02CC  07BE               	addwf	_thresholdCount^(0+128),f
 11447  02CD  3000               	movlw	0
 11448  02CE  3DBF               	addwfc	(_thresholdCount+1)^(0+128),f
 11449                           
 11450                           ;beat.c: 72:     } else {
 11451  02CF  2AD7               	goto	l4049
 11452  02D0                     l4045:	
 11453                           
 11454                           ;beat.c: 74:         thresholdCount = 0;
 11455  02D0  0141               	movlb	1	; select bank1
 11456  02D1  01BE               	clrf	_thresholdCount^(0+128)
 11457  02D2  01BF               	clrf	(_thresholdCount+1)^(0+128)
 11458                           
 11459                           ;beat.c: 75:         delay = 20;
 11460  02D3  3014               	movlw	20
 11461  02D4  00DE               	movwf	_delay^(0+128)
 11462  02D5  3000               	movlw	0
 11463  02D6  00DF               	movwf	(_delay^(0+128)+1)
 11464  02D7                     l4049:	
 11465                           
 11466                           ;beat.c: 81:     if (thresholdExceeded == 1 && lastDetected == 0) {
 11467  02D7  0140               	movlb	0	; select bank0
 11468  02D8  0357               	decf	_thresholdExceeded,w
 11469  02D9  1D03               	btfss	3,2
 11470  02DA  2B17               	goto	l4067
 11471  02DB  0856               	movf	_lastDetected,w
 11472  02DC  1D03               	btfss	3,2
 11473  02DD  2B17               	goto	l4067
 11474                           
 11475                           ;beat.c: 83:         detected = 1;
 11476  02DE  01D8               	clrf	_detected
 11477  02DF  0AD8               	incf	_detected,f
 11478                           
 11479                           ;beat.c: 86:         delay = 100;
 11480  02E0  3064               	movlw	100
 11481  02E1  0141               	movlb	1	; select bank1
 11482  02E2  00DE               	movwf	_delay^(0+128)
 11483  02E3  3000               	movlw	0
 11484  02E4  00DF               	movwf	(_delay^(0+128)+1)
 11485                           
 11486                           ;beat.c: 89:         time_t offset = CLOCK_getTime() - lastBeat;
 11487  02E5  318D  25CA  3182   	fcall	_CLOCK_getTime
 11488  02E8  0140               	movlb	0	; select bank0
 11489  02E9  084B               	movf	_lastBeat,w
 11490  02EA  0220               	subwf	?_CLOCK_getTime,w
 11491  02EB  00AA               	movwf	BEAT_task@offset
 11492  02EC  084C               	movf	_lastBeat+1,w
 11493  02ED  3B21               	subwfb	?_CLOCK_getTime+1,w
 11494  02EE  00AB               	movwf	BEAT_task@offset+1
 11495                           
 11496                           ;beat.c: 91:         lastBeat = CLOCK_getTime();
 11497  02EF  318D  25CA  3182   	fcall	_CLOCK_getTime
 11498  02F2  0140               	movlb	0	; select bank0
 11499  02F3  0821               	movf	?_CLOCK_getTime+1,w
 11500  02F4  00CC               	movwf	_lastBeat+1
 11501  02F5  0820               	movf	?_CLOCK_getTime,w
 11502  02F6  00CB               	movwf	_lastBeat
 11503                           
 11504                           ;beat.c: 93:         if (offset < 150)
 11505  02F7  3000               	movlw	0
 11506  02F8  022B               	subwf	BEAT_task@offset+1,w
 11507  02F9  3096               	movlw	150
 11508  02FA  1903               	skipnz
 11509  02FB  022A               	subwf	BEAT_task@offset,w
 11510  02FC  1803               	skipnc
 11511  02FD  2B04               	goto	l4065
 11512                           
 11513                           ;beat.c: 94:             bpm = 400;
 11514  02FE  3090               	movlw	144
 11515  02FF  0141               	movlb	1	; select bank1
 11516  0300  00C2               	movwf	_bpm^(0+128)
 11517  0301  3001               	movlw	1
 11518  0302  00C3               	movwf	(_bpm^(0+128)+1)
 11519  0303  2B17               	goto	l4067
 11520  0304                     l4065:	
 11521                           
 11522                           ;beat.c: 96:             bpm = 60 * 1000 / offset;
 11523  0304  082B               	movf	BEAT_task@offset+1,w
 11524  0305  00A1               	movwf	___lwdiv@divisor+1
 11525  0306  082A               	movf	BEAT_task@offset,w
 11526  0307  00A0               	movwf	___lwdiv@divisor
 11527  0308  3060               	movlw	96
 11528  0309  00A2               	movwf	___lwdiv@dividend
 11529  030A  30EA               	movlw	234
 11530  030B  00A3               	movwf	___lwdiv@dividend+1
 11531  030C  3186  269D  3182   	fcall	___lwdiv
 11532  030F  0140               	movlb	0	; select bank0
 11533  0310  0821               	movf	?___lwdiv+1,w
 11534  0311  0141               	movlb	1	; select bank1
 11535  0312  00C3               	movwf	(_bpm+1)^(0+128)
 11536  0313  0140               	movlb	0	; select bank0
 11537  0314  0820               	movf	?___lwdiv,w
 11538  0315  0141               	movlb	1	; select bank1
 11539  0316  00C2               	movwf	_bpm^(0+128)
 11540  0317                     l4067:	
 11541                           
 11542                           ;beat.c: 102:     lastDetected = thresholdExceeded;
 11543  0317  0140               	movlb	0	; select bank0
 11544  0318  0857               	movf	_thresholdExceeded,w
 11545  0319  00A8               	movwf	??_BEAT_task
 11546  031A  0828               	movf	??_BEAT_task,w
 11547  031B  00D6               	movwf	_lastDetected
 11548                           
 11549                           ;beat.c: 103:     thresholdExceeded = 0;
 11550  031C  01D7               	clrf	_thresholdExceeded
 11551                           
 11552                           ;beat.c: 105:     if (thresholdCount > 3) {
 11553  031D  0141               	movlb	1	; select bank1
 11554  031E  083F               	movf	(_thresholdCount+1)^(0+128),w
 11555  031F  3A80               	xorlw	128
 11556  0320  0140               	movlb	0	; select bank0
 11557  0321  00A8               	movwf	??_BEAT_task
 11558  0322  3080               	movlw	128
 11559  0323  0228               	subwf	??_BEAT_task,w
 11560  0324  1D03               	skipz
 11561  0325  2B29               	goto	u2505
 11562  0326  3004               	movlw	4
 11563  0327  0141               	movlb	1	; select bank1
 11564  0328  023E               	subwf	_thresholdCount^(0+128),w
 11565  0329                     u2505:	
 11566  0329  1C03               	skipc
 11567  032A  2B42               	goto	l4081
 11568                           
 11569                           ;beat.c: 106:         threshold += 1;
 11570  032B  3001               	movlw	1
 11571  032C  0140               	movlb	0	; select bank0
 11572  032D  07EA               	addwf	_threshold,f
 11573  032E  3000               	movlw	0
 11574  032F  3DEB               	addwfc	_threshold+1,f
 11575                           
 11576                           ;beat.c: 107:         ADCC_SetUpperThreshold(threshold);
 11577  0330  086B               	movf	_threshold+1,w
 11578  0331  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 11579  0332  086A               	movf	_threshold,w
 11580  0333  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 11581  0334  318D  25E9  3182   	fcall	_ADCC_SetUpperThreshold
 11582                           
 11583                           ;beat.c: 108:         thresholdCount = 0;
 11584  0337  0141               	movlb	1	; select bank1
 11585  0338  01BE               	clrf	_thresholdCount^(0+128)
 11586  0339  01BF               	clrf	(_thresholdCount+1)^(0+128)
 11587                           
 11588                           ;beat.c: 111:         lastBeat = CLOCK_getTime();
 11589  033A  318D  25CA         	fcall	_CLOCK_getTime
 11590  033C  0140               	movlb	0	; select bank0
 11591  033D  0821               	movf	?_CLOCK_getTime+1,w
 11592  033E  00CC               	movwf	_lastBeat+1
 11593  033F  0820               	movf	?_CLOCK_getTime,w
 11594  0340  00CB               	movwf	_lastBeat
 11595                           
 11596                           ;beat.c: 112:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 11597  0341  0008               	return
 11598  0342                     l4081:	
 11599  0342  318D  25CA  3182   	fcall	_CLOCK_getTime
 11600  0345  0140               	movlb	0	; select bank0
 11601  0346  084B               	movf	_lastBeat,w
 11602  0347  0220               	subwf	?_CLOCK_getTime,w
 11603  0348  00A8               	movwf	??_BEAT_task
 11604  0349  084C               	movf	_lastBeat+1,w
 11605  034A  3B21               	subwfb	?_CLOCK_getTime+1,w
 11606  034B  00A9               	movwf	??_BEAT_task+1
 11607  034C  3003               	movlw	3
 11608  034D  0229               	subwf	??_BEAT_task+1,w
 11609  034E  30E9               	movlw	233
 11610  034F  1903               	skipnz
 11611  0350  0228               	subwf	??_BEAT_task,w
 11612  0351  1C03               	skipc
 11613  0352  0008               	return
 11614                           
 11615                           ;beat.c: 113:         threshold -= 1;
 11616  0353  3001               	movlw	1
 11617  0354  02EA               	subwf	_threshold,f
 11618  0355  3000               	movlw	0
 11619  0356  3BEB               	subwfb	_threshold+1,f
 11620                           
 11621                           ;beat.c: 114:         ADCC_SetUpperThreshold(threshold);
 11622  0357  086B               	movf	_threshold+1,w
 11623  0358  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 11624  0359  086A               	movf	_threshold,w
 11625  035A  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 11626  035B  318D  25E9         	fcall	_ADCC_SetUpperThreshold
 11627  035D  0008               	return
 11628  035E                     __end_of_BEAT_task:	
 11629                           
 11630                           	psect	text41
 11631  069D                     __ptext41:	
 11632 ;; *************** function ___lwdiv *****************
 11633 ;; Defined at:
 11634 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 11635 ;; Parameters:    Size  Location     Type
 11636 ;;  divisor         2    0[BANK0 ] unsigned int 
 11637 ;;  dividend        2    2[BANK0 ] unsigned int 
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;  quotient        2    6[BANK0 ] unsigned int 
 11640 ;;  counter         1    5[BANK0 ] unsigned char 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;                  2    0[BANK0 ] unsigned int 
 11643 ;; Registers used:
 11644 ;;		wreg, status,2, status,0
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11650 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11651 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11652 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11653 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11654 ;;Total ram usage:        8 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; Hardware stack levels required when called:    4
 11657 ;; This function calls:
 11658 ;;		Nothing
 11659 ;; This function is called by:
 11660 ;;		_TM1650_fastPrintNum
 11661 ;;		_BEAT_task
 11662 ;; This function uses a non-reentrant model
 11663 ;;
 11664                           
 11665                           
 11666                           ;psect for function ___lwdiv
 11667  069D                     ___lwdiv:	
 11668                           
 11669                           ;incstack = 0
 11670                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11671  069D  0140               	movlb	0	; select bank0
 11672  069E  01A6               	clrf	___lwdiv@quotient
 11673  069F  01A7               	clrf	___lwdiv@quotient+1
 11674  06A0  0820               	movf	___lwdiv@divisor,w
 11675  06A1  0421               	iorwf	___lwdiv@divisor+1,w
 11676  06A2  1903               	btfsc	3,2
 11677  06A3  2ECD               	goto	l3675
 11678  06A4  01A5               	clrf	___lwdiv@counter
 11679  06A5  0AA5               	incf	___lwdiv@counter,f
 11680  06A6                     l3663:	
 11681  06A6  1BA1               	btfsc	___lwdiv@divisor+1,7
 11682  06A7  2EB2               	goto	l3665
 11683  06A8  3001               	movlw	1
 11684  06A9                     u2245:	
 11685  06A9  35A0               	lslf	___lwdiv@divisor,f
 11686  06AA  0DA1               	rlf	___lwdiv@divisor+1,f
 11687  06AB  0B89               	decfsz	9,f
 11688  06AC  2EA9               	goto	u2245
 11689  06AD  3001               	movlw	1
 11690  06AE  00A4               	movwf	??___lwdiv
 11691  06AF  0824               	movf	??___lwdiv,w
 11692  06B0  07A5               	addwf	___lwdiv@counter,f
 11693  06B1  2EA6               	goto	l3663
 11694  06B2                     l3665:	
 11695  06B2  3001               	movlw	1
 11696  06B3                     u2265:	
 11697  06B3  35A6               	lslf	___lwdiv@quotient,f
 11698  06B4  0DA7               	rlf	___lwdiv@quotient+1,f
 11699  06B5  0B89               	decfsz	9,f
 11700  06B6  2EB3               	goto	u2265
 11701  06B7  0821               	movf	___lwdiv@divisor+1,w
 11702  06B8  0223               	subwf	___lwdiv@dividend+1,w
 11703  06B9  1D03               	skipz
 11704  06BA  2EBD               	goto	u2275
 11705  06BB  0820               	movf	___lwdiv@divisor,w
 11706  06BC  0222               	subwf	___lwdiv@dividend,w
 11707  06BD                     u2275:	
 11708  06BD  1C03               	skipc
 11709  06BE  2EC4               	goto	l3671
 11710  06BF  0820               	movf	___lwdiv@divisor,w
 11711  06C0  02A2               	subwf	___lwdiv@dividend,f
 11712  06C1  0821               	movf	___lwdiv@divisor+1,w
 11713  06C2  3BA3               	subwfb	___lwdiv@dividend+1,f
 11714  06C3  1426               	bsf	___lwdiv@quotient,0
 11715  06C4                     l3671:	
 11716  06C4  3001               	movlw	1
 11717  06C5                     u2285:	
 11718  06C5  36A1               	lsrf	___lwdiv@divisor+1,f
 11719  06C6  0CA0               	rrf	___lwdiv@divisor,f
 11720  06C7  0B89               	decfsz	9,f
 11721  06C8  2EC5               	goto	u2285
 11722  06C9  3001               	movlw	1
 11723  06CA  02A5               	subwf	___lwdiv@counter,f
 11724  06CB  1D03               	btfss	3,2
 11725  06CC  2EB2               	goto	l3665
 11726  06CD                     l3675:	
 11727  06CD  0827               	movf	___lwdiv@quotient+1,w
 11728  06CE  00A1               	movwf	?___lwdiv+1
 11729  06CF  0826               	movf	___lwdiv@quotient,w
 11730  06D0  00A0               	movwf	?___lwdiv
 11731  06D1  0008               	return
 11732  06D2                     __end_of___lwdiv:	
 11733                           
 11734                           	psect	text42
 11735  0DAD                     __ptext42:	
 11736 ;; *************** function _TM1650_isEnabled *****************
 11737 ;; Defined at:
 11738 ;;		line 70 in file "tm1650.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;		None
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;		None
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  1    wreg      _Bool 
 11745 ;; Registers used:
 11746 ;;		wreg
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11756 ;;Total ram usage:        0 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:    4
 11759 ;; This function calls:
 11760 ;;		Nothing
 11761 ;; This function is called by:
 11762 ;;		_BEAT_task
 11763 ;; This function uses a non-reentrant model
 11764 ;;
 11765                           
 11766                           
 11767                           ;psect for function _TM1650_isEnabled
 11768  0DAD                     _TM1650_isEnabled:	
 11769                           
 11770                           ;tm1650.c: 71:     return isOn;
 11771                           
 11772                           ;incstack = 0
 11773                           ; Regs used in _TM1650_isEnabled: [wreg]
 11774  0DAD  0140               	movlb	0	; select bank0
 11775  0DAE  085D               	movf	_isOn,w
 11776  0DAF  0008               	return
 11777  0DB0                     __end_of_TM1650_isEnabled:	
 11778                           
 11779                           	psect	text43
 11780  0DCA                     __ptext43:	
 11781 ;; *************** function _CLOCK_getTime *****************
 11782 ;; Defined at:
 11783 ;;		line 17 in file "clock.c"
 11784 ;; Parameters:    Size  Location     Type
 11785 ;;		None
 11786 ;; Auto vars:     Size  Location     Type
 11787 ;;		None
 11788 ;; Return value:  Size  Location     Type
 11789 ;;                  2    0[BANK0 ] unsigned short 
 11790 ;; Registers used:
 11791 ;;		wreg
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/0
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11800 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11801 ;;Total ram usage:        2 bytes
 11802 ;; Hardware stack levels used:    1
 11803 ;; Hardware stack levels required when called:    4
 11804 ;; This function calls:
 11805 ;;		Nothing
 11806 ;; This function is called by:
 11807 ;;		_BUTTONS_task
 11808 ;;		_CONTROLLER_task
 11809 ;;		_BEAT_task
 11810 ;;		_DMX_task
 11811 ;;		_LED_task
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           
 11816                           ;psect for function _CLOCK_getTime
 11817  0DCA                     _CLOCK_getTime:	
 11818                           
 11819                           ;clock.c: 18:     return currentTime;
 11820                           
 11821                           ;incstack = 0
 11822                           ; Regs used in _CLOCK_getTime: [wreg]
 11823  0DCA  0140               	movlb	0	; select bank0
 11824  0DCB  0852               	movf	_currentTime+1,w
 11825  0DCC  00A1               	movwf	?_CLOCK_getTime+1
 11826  0DCD  0851               	movf	_currentTime,w
 11827  0DCE  00A0               	movwf	?_CLOCK_getTime
 11828  0DCF  0008               	return
 11829  0DD0                     __end_of_CLOCK_getTime:	
 11830                           
 11831                           	psect	text44
 11832  0E84                     __ptext44:	
 11833 ;; *************** function _BEAT_init *****************
 11834 ;; Defined at:
 11835 ;;		line 31 in file "beat.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;		None
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;		None
 11840 ;; Return value:  Size  Location     Type
 11841 ;;                  1    wreg      void 
 11842 ;; Registers used:
 11843 ;;		wreg, status,2, status,0, pclath, cstack
 11844 ;; Tracked objects:
 11845 ;;		On entry : 0/0
 11846 ;;		On exit  : 0/0
 11847 ;;		Unchanged: 0/0
 11848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11853 ;;Total ram usage:        0 bytes
 11854 ;; Hardware stack levels used:    1
 11855 ;; Hardware stack levels required when called:    5
 11856 ;; This function calls:
 11857 ;;		_ADCC_SetADTIInterruptHandler
 11858 ;;		_ADCC_SetUpperThreshold
 11859 ;;		_ADCC_StartConversion
 11860 ;; This function is called by:
 11861 ;;		_main
 11862 ;; This function uses a non-reentrant model
 11863 ;;
 11864                           
 11865                           
 11866                           ;psect for function _BEAT_init
 11867  0E84                     _BEAT_init:	
 11868                           
 11869                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 11870                           
 11871                           ;incstack = 0
 11872                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 11873  0E84  0140               	movlb	0	; select bank0
 11874  0E85  086B               	movf	_threshold+1,w
 11875  0E86  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 11876  0E87  086A               	movf	_threshold,w
 11877  0E88  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 11878  0E89  318D  25E9  318E   	fcall	_ADCC_SetUpperThreshold
 11879                           
 11880                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 11881  0E8C  30B3               	movlw	low _adcThresholdHandler
 11882  0E8D  0140               	movlb	0	; select bank0
 11883  0E8E  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 11884  0E8F  300D               	movlw	high _adcThresholdHandler
 11885  0E90  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 11886  0E91  318D  25E0  318E   	fcall	_ADCC_SetADTIInterruptHandler
 11887                           
 11888                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 11889  0E94  300F               	movlw	15
 11890  0E95  318D  25F2         	fcall	_ADCC_StartConversion
 11891  0E97  0008               	return
 11892  0E98                     __end_of_BEAT_init:	
 11893                           
 11894                           	psect	text45
 11895  0DF2                     __ptext45:	
 11896 ;; *************** function _ADCC_StartConversion *****************
 11897 ;; Defined at:
 11898 ;;		line 121 in file "mcc_generated_files/adcc.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;  channel         1    wreg     enum E10867
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;  channel         1    0[BANK0 ] enum E10867
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  1    wreg      void 
 11905 ;; Registers used:
 11906 ;;		wreg
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11913 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11915 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11916 ;;Total ram usage:        1 bytes
 11917 ;; Hardware stack levels used:    1
 11918 ;; Hardware stack levels required when called:    4
 11919 ;; This function calls:
 11920 ;;		Nothing
 11921 ;; This function is called by:
 11922 ;;		_BEAT_init
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926                           
 11927                           ;psect for function _ADCC_StartConversion
 11928  0DF2                     _ADCC_StartConversion:	
 11929                           
 11930                           ;incstack = 0
 11931                           ; Regs used in _ADCC_StartConversion: [wreg]
 11932                           ;ADCC_StartConversion@channel stored from wreg
 11933  0DF2  0140               	movlb	0	; select bank0
 11934  0DF3  00A0               	movwf	ADCC_StartConversion@channel
 11935                           
 11936                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 11937  0DF4  0820               	movf	ADCC_StartConversion@channel,w
 11938  0DF5  0141               	movlb	1	; select bank1
 11939  0DF6  009F               	movwf	31	;volatile
 11940                           
 11941                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 11942  0DF7  0142               	movlb	2	; select bank2
 11943  0DF8  1791               	bsf	17,7	;volatile
 11944                           
 11945                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 11946  0DF9  1411               	bsf	17,0	;volatile
 11947  0DFA  0008               	return
 11948  0DFB                     __end_of_ADCC_StartConversion:	
 11949                           
 11950                           	psect	text46
 11951  0DE9                     __ptext46:	
 11952 ;; *************** function _ADCC_SetUpperThreshold *****************
 11953 ;; Defined at:
 11954 ;;		line 251 in file "mcc_generated_files/adcc.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;		None
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      void 
 11961 ;; Registers used:
 11962 ;;		wreg, status,2
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11971 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11972 ;;Total ram usage:        2 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; Hardware stack levels required when called:    4
 11975 ;; This function calls:
 11976 ;;		Nothing
 11977 ;; This function is called by:
 11978 ;;		_BEAT_init
 11979 ;;		_BEAT_task
 11980 ;; This function uses a non-reentrant model
 11981 ;;
 11982                           
 11983                           
 11984                           ;psect for function _ADCC_SetUpperThreshold
 11985  0DE9                     _ADCC_SetUpperThreshold:	
 11986                           
 11987                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 11988                           
 11989                           ;incstack = 0
 11990                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 11991  0DE9  0140               	movlb	0	; select bank0
 11992  0DEA  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 11993  0DEB  0141               	movlb	1	; select bank1
 11994  0DEC  008F               	movwf	15	;volatile
 11995                           
 11996                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 11997  0DED  0140               	movlb	0	; select bank0
 11998  0DEE  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 11999  0DEF  0141               	movlb	1	; select bank1
 12000  0DF0  008E               	movwf	14	;volatile
 12001  0DF1  0008               	return
 12002  0DF2                     __end_of_ADCC_SetUpperThreshold:	
 12003                           
 12004                           	psect	text47
 12005  0DE0                     __ptext47:	
 12006 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 12007 ;; Defined at:
 12008 ;;		line 317 in file "mcc_generated_files/adcc.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 12011 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;		None
 12014 ;; Return value:  Size  Location     Type
 12015 ;;                  1    wreg      void 
 12016 ;; Registers used:
 12017 ;;		wreg
 12018 ;; Tracked objects:
 12019 ;;		On entry : 0/0
 12020 ;;		On exit  : 0/0
 12021 ;;		Unchanged: 0/0
 12022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12027 ;;Total ram usage:        2 bytes
 12028 ;; Hardware stack levels used:    1
 12029 ;; Hardware stack levels required when called:    4
 12030 ;; This function calls:
 12031 ;;		Nothing
 12032 ;; This function is called by:
 12033 ;;		_ADCC_Initialize
 12034 ;;		_BEAT_init
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           
 12039                           ;psect for function _ADCC_SetADTIInterruptHandler
 12040  0DE0                     _ADCC_SetADTIInterruptHandler:	
 12041                           
 12042                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 12043                           
 12044                           ;incstack = 0
 12045                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 12046  0DE0  0140               	movlb	0	; select bank0
 12047  0DE1  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 12048  0DE2  0141               	movlb	1	; select bank1
 12049  0DE3  00D1               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128)
 12050  0DE4  0140               	movlb	0	; select bank0
 12051  0DE5  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 12052  0DE6  0141               	movlb	1	; select bank1
 12053  0DE7  00D0               	movwf	_ADCC_ADTI_InterruptHandler^(0+128)
 12054  0DE8  0008               	return
 12055  0DE9                     __end_of_ADCC_SetADTIInterruptHandler:	
 12056                           
 12057                           	psect	intentry
 12058  0004                     __pintentry:	
 12059 ;; *************** function _INTERRUPT_InterruptManager *****************
 12060 ;; Defined at:
 12061 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12062 ;; Parameters:    Size  Location     Type
 12063 ;;		None
 12064 ;; Auto vars:     Size  Location     Type
 12065 ;;		None
 12066 ;; Return value:  Size  Location     Type
 12067 ;;                  1    wreg      void 
 12068 ;; Registers used:
 12069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12079 ;;Total ram usage:        0 bytes
 12080 ;; Hardware stack levels used:    1
 12081 ;; Hardware stack levels required when called:    3
 12082 ;; This function calls:
 12083 ;;		Absolute function
 12084 ;;		_ADCC_ThresholdISR
 12085 ;;		_DMX_ISR
 12086 ;;		_EUSART1_Receive_ISR
 12087 ;;		_EUSART1_Transmit_ISR
 12088 ;;		_I2C1_BusCollisionISR
 12089 ;;		_I2C1_ISR
 12090 ;;		_TMR0_ISR
 12091 ;; This function is called by:
 12092 ;;		Interrupt level 1
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096  0004                     _INTERRUPT_InterruptManager:	
 12097                           
 12098                           ;incstack = 0
 12099  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12100                           
 12101                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12102  0005  3180               	pagesel	$
 12103                           
 12104                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 12105  0006  014E               	movlb	14	; select bank14
 12106  0007  1A96               	btfsc	22,5	;volatile
 12107  0008  1E8C               	btfss	12,5	;volatile
 12108  0009  280E               	goto	i1l280
 12109                           
 12110                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 12111  000A  318E  2666  3180   	fcall	_TMR0_ISR
 12112                           
 12113                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 12114  000D  2837               	goto	i1l294
 12115  000E                     i1l280:	
 12116                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 12117                           
 12118  000E  1F0B               	btfss	11,6	;volatile
 12119  000F  2837               	goto	i1l294
 12120                           
 12121                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 12122  0010  1899               	btfsc	25,1	;volatile
 12123  0011  1C8F               	btfss	15,1	;volatile
 12124  0012  2817               	goto	i1l283
 12125                           
 12126                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 12127  0013  318D  25AA  3180   	fcall	_I2C1_BusCollisionISR
 12128                           
 12129                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 12130  0016  2837               	goto	i1l294
 12131  0017                     i1l283:	
 12132                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 12133                           
 12134  0017  1819               	btfsc	25,0	;volatile
 12135  0018  1C0F               	btfss	15,0	;volatile
 12136  0019  281E               	goto	i1l285
 12137                           
 12138                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 12139  001A  3180  2089  3180   	fcall	_I2C1_ISR
 12140                           
 12141                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 12142  001D  2837               	goto	i1l294
 12143  001E                     i1l285:	
 12144                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 12145                           
 12146  001E  1A19               	btfsc	25,4	;volatile
 12147  001F  1E0F               	btfss	15,4	;volatile
 12148  0020  2828               	goto	i1l287
 12149                           
 12150                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 12151  0021  0141               	movlb	1	; select bank1
 12152  0022  085D               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128),w
 12153  0023  008A               	movwf	10
 12154  0024  085C               	movf	_EUSART1_TxDefaultInterruptHandler^(0+128),w
 12155  0025  000A               	callw
 12156  0026  3180               	pagesel	$
 12157                           
 12158                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 12159  0027  2837               	goto	i1l294
 12160  0028                     i1l287:	
 12161                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 12162                           
 12163  0028  1A99               	btfsc	25,5	;volatile
 12164  0029  1E8F               	btfss	15,5	;volatile
 12165  002A  2832               	goto	i1l289
 12166                           
 12167                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 12168  002B  0141               	movlb	1	; select bank1
 12169  002C  085B               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
 12170  002D  008A               	movwf	10
 12171  002E  085A               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
 12172  002F  000A               	callw
 12173  0030  3180               	pagesel	$
 12174                           
 12175                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 12176  0031  2837               	goto	i1l294
 12177  0032                     i1l289:	
 12178                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 12179                           
 12180  0032  1897               	btfsc	23,1	;volatile
 12181  0033  1C8D               	btfss	13,1	;volatile
 12182  0034  2837               	goto	i1l294
 12183                           
 12184                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 12185  0035  318E  2659         	fcall	_ADCC_ThresholdISR
 12186  0037                     i1l294:	
 12187                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 12188                           
 12189  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12190  0038  0009               	retfie
 12191  0039                     __end_of_INTERRUPT_InterruptManager:	
 12192                           
 12193                           	psect	text49
 12194  0E66                     __ptext49:	
 12195 ;; *************** function _TMR0_ISR *****************
 12196 ;; Defined at:
 12197 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;		None
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;		None
 12202 ;; Return value:  Size  Location     Type
 12203 ;;                  1    wreg      void 
 12204 ;; Registers used:
 12205 ;;		wreg, status,2, status,0, pclath, cstack
 12206 ;; Tracked objects:
 12207 ;;		On entry : 0/0
 12208 ;;		On exit  : 0/0
 12209 ;;		Unchanged: 0/0
 12210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12215 ;;Total ram usage:        0 bytes
 12216 ;; Hardware stack levels used:    1
 12217 ;; Hardware stack levels required when called:    1
 12218 ;; This function calls:
 12219 ;;		Absolute function
 12220 ;;		_CLOCK_timerCallback
 12221 ;;		_TMR0_DefaultInterruptHandler
 12222 ;; This function is called by:
 12223 ;;		_INTERRUPT_InterruptManager
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _TMR0_ISR
 12229  0E66                     _TMR0_ISR:	
 12230                           
 12231                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 12235  0E66  014E               	movlb	14	; select bank14
 12236  0E67  128C               	bcf	12,5	;volatile
 12237                           
 12238                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 12239  0E68  0141               	movlb	1	; select bank1
 12240  0E69  0852               	movf	_TMR0_InterruptHandler^(0+128),w
 12241  0E6A  0453               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 12242  0E6B  1903               	btfsc	3,2
 12243  0E6C  0008               	return
 12244                           
 12245                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 12246  0E6D  0853               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 12247  0E6E  008A               	movwf	10
 12248  0E6F  0852               	movf	_TMR0_InterruptHandler^(0+128),w
 12249  0E70  000A               	callw
 12250  0E71  318E               	pagesel	$
 12251  0E72  0008               	return
 12252  0E73                     __end_of_TMR0_ISR:	
 12253                           
 12254                           	psect	text50
 12255  0DC4                     __ptext50:	
 12256 ;; *************** function _CLOCK_timerCallback *****************
 12257 ;; Defined at:
 12258 ;;		line 21 in file "clock.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;		None
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;		None
 12263 ;; Return value:  Size  Location     Type
 12264 ;;                  1    wreg      void 
 12265 ;; Registers used:
 12266 ;;		wreg
 12267 ;; Tracked objects:
 12268 ;;		On entry : 0/0
 12269 ;;		On exit  : 0/0
 12270 ;;		Unchanged: 0/0
 12271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12276 ;;Total ram usage:        0 bytes
 12277 ;; Hardware stack levels used:    1
 12278 ;; This function calls:
 12279 ;;		Nothing
 12280 ;; This function is called by:
 12281 ;;		_CLOCK_init
 12282 ;;		_TMR0_ISR
 12283 ;; This function uses a non-reentrant model
 12284 ;;
 12285                           
 12286                           
 12287                           ;psect for function _CLOCK_timerCallback
 12288  0DC4                     _CLOCK_timerCallback:	
 12289                           
 12290                           ;clock.c: 22:     currentTime++;
 12291                           
 12292                           ;incstack = 0
 12293                           ; Regs used in _CLOCK_timerCallback: [wreg]
 12294  0DC4  3001               	movlw	1
 12295  0DC5  0140               	movlb	0	; select bank0
 12296  0DC6  07D1               	addwf	_currentTime,f
 12297  0DC7  3000               	movlw	0
 12298  0DC8  3DD2               	addwfc	_currentTime+1,f
 12299  0DC9  0008               	return
 12300  0DCA                     __end_of_CLOCK_timerCallback:	
 12301                           
 12302                           	psect	text51
 12303  0DA6                     __ptext51:	
 12304 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 12305 ;; Defined at:
 12306 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 12307 ;; Parameters:    Size  Location     Type
 12308 ;;		None
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  1    wreg      void 
 12313 ;; Registers used:
 12314 ;;		None
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12324 ;;Total ram usage:        0 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; This function calls:
 12327 ;;		Nothing
 12328 ;; This function is called by:
 12329 ;;		_TMR0_Initialize
 12330 ;;		_TMR0_ISR
 12331 ;; This function uses a non-reentrant model
 12332 ;;
 12333                           
 12334                           
 12335                           ;psect for function _TMR0_DefaultInterruptHandler
 12336  0DA6                     _TMR0_DefaultInterruptHandler:	
 12337                           
 12338                           ;incstack = 0
 12339                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 12340  0DA6  0008               	return
 12341  0DA7                     __end_of_TMR0_DefaultInterruptHandler:	
 12342                           
 12343                           	psect	text52
 12344  0089                     __ptext52:	
 12345 ;; *************** function _I2C1_ISR *****************
 12346 ;; Defined at:
 12347 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;		None
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;		None
 12352 ;; Return value:  Size  Location     Type
 12353 ;;                  1    wreg      void 
 12354 ;; Registers used:
 12355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12356 ;; Tracked objects:
 12357 ;;		On entry : 0/0
 12358 ;;		On exit  : 0/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12363 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12364 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12365 ;;Total ram usage:        4 bytes
 12366 ;; Hardware stack levels used:    1
 12367 ;; Hardware stack levels required when called:    1
 12368 ;; This function calls:
 12369 ;;		_I2C1_FunctionComplete
 12370 ;;		_I2C1_Stop
 12371 ;; This function is called by:
 12372 ;;		_INTERRUPT_InterruptManager
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376                           
 12377                           ;psect for function _I2C1_ISR
 12378  0089                     _I2C1_ISR:	
 12379                           
 12380                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 12381                           
 12382                           ;incstack = 0
 12383                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12384  0089  014E               	movlb	14	; select bank14
 12385  008A  100F               	bcf	15,0	;volatile
 12386                           
 12387                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 12388  008B  0143               	movlb	3	; select bank3
 12389  008C  1F90               	btfss	16,7	;volatile
 12390  008D  29A5               	goto	i1l3263
 12391                           
 12392                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 12393  008E  1390               	bcf	16,7	;volatile
 12394                           
 12395                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 12396  008F  0140               	movlb	0	; select bank0
 12397  0090  01E4               	clrf	_i2c1_state
 12398                           
 12399                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 12400  0091  0861               	movf	_p_i2c1_current,w
 12401  0092  3E02               	addlw	2
 12402  0093  0086               	movwf	6
 12403  0094  0187               	clrf	7
 12404  0095  0801               	movf	1,w
 12405  0096  0086               	movwf	6
 12406  0097  0187               	clrf	7
 12407  0098  0181               	clrf	1
 12408  0099  0A81               	incf	1,f
 12409                           
 12410                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 12411  009A  01E1               	clrf	_p_i2c1_current
 12412  009B  0008               	return
 12413  009C                     i1l402:	
 12414                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 12415                           
 12416                           
 12417                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 12418  009C  18C8               	btfsc	_i2c1_object+2,1
 12419  009D  0008               	return
 12420                           
 12421                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 12422  009E  0847               	movf	low ((_i2c1_object| 0+1)),w
 12423  009F  00F8               	movwf	??_I2C1_ISR
 12424  00A0  0878               	movf	??_I2C1_ISR,w
 12425  00A1  00E1               	movwf	_p_i2c1_current
 12426                           
 12427                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 12428  00A2  0847               	movf	low ((_i2c1_object| 0+1)),w
 12429  00A3  0086               	movwf	6
 12430  00A4  0187               	clrf	7
 12431  00A5  0801               	movf	1,w
 12432  00A6  00F8               	movwf	??_I2C1_ISR
 12433  00A7  0878               	movf	??_I2C1_ISR,w
 12434  00A8  00E3               	movwf	_i2c1_trb_count
 12435                           
 12436                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 12437  00A9  0847               	movf	low ((_i2c1_object| 0+1)),w
 12438  00AA  0086               	movwf	6
 12439  00AB  0187               	clrf	7
 12440  00AC  3F41               	moviw [1]fsr1
 12441  00AD  00E2               	movwf	_p_i2c1_trb_current
 12442                           
 12443                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 12444  00AE  3003               	movlw	3
 12445  00AF  00F8               	movwf	??_I2C1_ISR
 12446  00B0  0878               	movf	??_I2C1_ISR,w
 12447  00B1  07C7               	addwf	low ((_i2c1_object| 0+1)),f
 12448                           
 12449                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 12450  00B2  0847               	movf	low ((_i2c1_object| 0+1)),w
 12451  00B3  3A6A               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 12452  00B4  1D03               	skipz
 12453  00B5  28BA               	goto	i1l3151
 12454                           
 12455                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 12456  00B6  3067               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 12457  00B7  00F8               	movwf	??_I2C1_ISR
 12458  00B8  0878               	movf	??_I2C1_ISR,w
 12459  00B9  00C7               	movwf	low ((_i2c1_object| 0+1))
 12460  00BA                     i1l3151:	
 12461                           
 12462                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 12463  00BA  1048               	bcf	_i2c1_object+2,0
 12464                           
 12465                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 12466  00BB  0847               	movf	low ((_i2c1_object| 0+1)),w
 12467  00BC  0646               	xorwf	_i2c1_object,w
 12468  00BD  1903               	btfsc	3,2
 12469                           
 12470                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 12471  00BE  14C8               	bsf	_i2c1_object+2,1
 12472                           
 12473                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 12474                           
 12475                           ;mcc_generated_files/i2c1.c: 290:                 }
 12476  00BF  0143               	movlb	3	; select bank3
 12477  00C0  1411               	bsf	17,0	;volatile
 12478  00C1                     i1l3155:	
 12479                           
 12480                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 12481  00C1  3002               	movlw	2
 12482  00C2  00F8               	movwf	??_I2C1_ISR
 12483  00C3  0878               	movf	??_I2C1_ISR,w
 12484  00C4  0140               	movlb	0	; select bank0
 12485  00C5  00E4               	movwf	_i2c1_state
 12486  00C6  0008               	return
 12487  00C7                     i1l407:	
 12488                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 12489                           
 12490  00C7  294E               	goto	i1l428
 12491  00C8                     i1l408:	
 12492                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 12493                           
 12494                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 12495                           
 12496                           
 12497                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 12498  00C8  0143               	movlb	3	; select bank3
 12499  00C9  1F11               	btfss	17,6	;volatile
 12500  00CA  28D4               	goto	i1l3163
 12501                           
 12502                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 12503  00CB  3001               	movlw	1
 12504  00CC  00F8               	movwf	??_I2C1_ISR
 12505  00CD  0878               	movf	??_I2C1_ISR,w
 12506  00CE  0140               	movlb	0	; select bank0
 12507  00CF  07CA               	addwf	_i2c1_object+4,f
 12508                           
 12509                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12510  00D0  3004               	movlw	4
 12511  00D1  318F  2718         	fcall	_I2C1_Stop
 12512                           
 12513                           ;mcc_generated_files/i2c1.c: 319:             }
 12514  00D3  0008               	return
 12515  00D4                     i1l3163:	
 12516                           
 12517                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 12518  00D4  0875               	movf	I2C1_ISR@i2c_address+1,w
 12519  00D5  00F9               	movwf	??_I2C1_ISR+1
 12520  00D6  0874               	movf	I2C1_ISR@i2c_address,w
 12521  00D7  00F8               	movwf	??_I2C1_ISR
 12522  00D8  36F9               	lsrf	??_I2C1_ISR+1,f
 12523  00D9  0CF8               	rrf	??_I2C1_ISR,f
 12524  00DA  0878               	movf	??_I2C1_ISR,w
 12525  00DB  008C               	movwf	12	;volatile
 12526                           
 12527                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 12528  00DC  1C74               	btfss	I2C1_ISR@i2c_address,0
 12529  00DD  28E4               	goto	i1l3169
 12530                           
 12531                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 12532  00DE  300B               	movlw	11
 12533  00DF  00F8               	movwf	??_I2C1_ISR
 12534  00E0  0878               	movf	??_I2C1_ISR,w
 12535  00E1  0140               	movlb	0	; select bank0
 12536  00E2  00E4               	movwf	_i2c1_state
 12537                           
 12538                           ;mcc_generated_files/i2c1.c: 331:                 }
 12539  00E3  0008               	return
 12540  00E4                     i1l3169:	
 12541                           
 12542                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 12543  00E4  3003               	movlw	3
 12544  00E5  00F8               	movwf	??_I2C1_ISR
 12545  00E6  0878               	movf	??_I2C1_ISR,w
 12546  00E7  0140               	movlb	0	; select bank0
 12547  00E8  00E4               	movwf	_i2c1_state
 12548  00E9  0008               	return
 12549  00EA                     i1l413:	
 12550                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 12551                           
 12552                           
 12553                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 12554  00EA  0143               	movlb	3	; select bank3
 12555  00EB  1F11               	btfss	17,6	;volatile
 12556  00EC  28F6               	goto	i1l414
 12557                           
 12558                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 12559  00ED  3001               	movlw	1
 12560  00EE  00F8               	movwf	??_I2C1_ISR
 12561  00EF  0878               	movf	??_I2C1_ISR,w
 12562  00F0  0140               	movlb	0	; select bank0
 12563  00F1  07CA               	addwf	_i2c1_object+4,f
 12564                           
 12565                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12566  00F2  3004               	movlw	4
 12567  00F3  318F  2718         	fcall	_I2C1_Stop
 12568                           
 12569                           ;mcc_generated_files/i2c1.c: 347:             }
 12570  00F5  0008               	return
 12571  00F6                     i1l414:	
 12572                           ;mcc_generated_files/i2c1.c: 348:             else
 12573                           
 12574                           
 12575                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 12576  00F6  1491               	bsf	17,1	;volatile
 12577                           
 12578                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 12579  00F7  0875               	movf	I2C1_ISR@i2c_address+1,w
 12580  00F8  00F9               	movwf	??_I2C1_ISR+1
 12581  00F9  0874               	movf	I2C1_ISR@i2c_address,w
 12582  00FA  00F8               	movwf	??_I2C1_ISR
 12583  00FB  0879               	movf	??_I2C1_ISR+1,w
 12584  00FC  00F8               	movwf	??_I2C1_ISR
 12585  00FD  01F9               	clrf	??_I2C1_ISR+1
 12586  00FE  3006               	movlw	6
 12587  00FF  0578               	andwf	??_I2C1_ISR,w
 12588  0100  00FA               	movwf	??_I2C1_ISR+2
 12589  0101  3000               	movlw	0
 12590  0102  0579               	andwf	??_I2C1_ISR+1,w
 12591  0103  00FB               	movwf	??_I2C1_ISR+3
 12592  0104  30F0               	movlw	240
 12593  0105  047A               	iorwf	??_I2C1_ISR+2,w
 12594  0106  00F4               	movwf	I2C1_ISR@i2c_address
 12595  0107  3000               	movlw	0
 12596  0108  047B               	iorwf	??_I2C1_ISR+3,w
 12597  0109  00F5               	movwf	I2C1_ISR@i2c_address+1
 12598                           
 12599                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 12600  010A  1474               	bsf	I2C1_ISR@i2c_address,0
 12601                           
 12602                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 12603  010B  0140               	movlb	0	; select bank0
 12604  010C  01DE               	clrf	I2C1_ISR@i2c_10bit_address_restart
 12605  010D  0ADE               	incf	I2C1_ISR@i2c_10bit_address_restart,f
 12606  010E  28C1               	goto	i1l3155
 12607  010F                     i1l3183:	
 12608                           
 12609                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 12610  010F  035E               	decf	I2C1_ISR@i2c_10bit_address_restart,w
 12611  0110  1903               	btfsc	3,2
 12612  0111  2923               	goto	i1l3203
 12613                           
 12614                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 12615  0112  0862               	movf	_p_i2c1_trb_current,w
 12616  0113  0086               	movwf	6
 12617  0114  0187               	clrf	7
 12618  0115  3F40               	moviw [0]fsr1
 12619  0116  00F4               	movwf	I2C1_ISR@i2c_address
 12620  0117  3F41               	moviw [1]fsr1
 12621  0118  00F5               	movwf	I2C1_ISR@i2c_address+1
 12622                           
 12623                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 12624  0119  0862               	movf	_p_i2c1_trb_current,w
 12625  011A  0086               	movwf	6
 12626  011B  0187               	clrf	7
 12627  011C  3F43               	moviw [3]fsr1
 12628  011D  00E0               	movwf	I2C1_ISR@pi2c_buf_ptr
 12629                           
 12630                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 12631  011E  0862               	movf	_p_i2c1_trb_current,w
 12632  011F  0086               	movwf	6
 12633  0120  0187               	clrf	7
 12634  0121  3F42               	moviw [2]fsr1
 12635  0122  00DF               	movwf	I2C1_ISR@i2c_bytes_left
 12636  0123                     i1l3203:	
 12637                           
 12638                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 12639  0123  0874               	movf	I2C1_ISR@i2c_address,w
 12640  0124  0143               	movlb	3	; select bank3
 12641  0125  008C               	movwf	12	;volatile
 12642                           
 12643                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 12644  0126  1C74               	btfss	I2C1_ISR@i2c_address,0
 12645  0127  28E4               	goto	i1l3169
 12646                           
 12647                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 12648  0128  3005               	movlw	5
 12649  0129  00F8               	movwf	??_I2C1_ISR
 12650  012A  0878               	movf	??_I2C1_ISR,w
 12651  012B  0140               	movlb	0	; select bank0
 12652  012C  00E4               	movwf	_i2c1_state
 12653                           
 12654                           ;mcc_generated_files/i2c1.c: 419:                 }
 12655  012D  0008               	return
 12656  012E                     i1l424:	
 12657                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 12658                           
 12659                           
 12660                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 12661  012E  0143               	movlb	3	; select bank3
 12662  012F  1F11               	btfss	17,6	;volatile
 12663  0130  293C               	goto	i1l3217
 12664                           
 12665                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 12666  0131  3001               	movlw	1
 12667  0132  00F8               	movwf	??_I2C1_ISR
 12668  0133  0878               	movf	??_I2C1_ISR,w
 12669  0134  0140               	movlb	0	; select bank0
 12670  0135  07CA               	addwf	_i2c1_object+4,f
 12671                           
 12672                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 12673  0136  0143               	movlb	3	; select bank3
 12674  0137  1311               	bcf	17,6	;volatile
 12675                           
 12676                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 12677  0138  3005               	movlw	5
 12678  0139  318F  2718         	fcall	_I2C1_Stop
 12679                           
 12680                           ;mcc_generated_files/i2c1.c: 442:             }
 12681  013B  0008               	return
 12682  013C                     i1l3217:	
 12683                           
 12684                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 12685  013C  3001               	movlw	1
 12686  013D  0140               	movlb	0	; select bank0
 12687  013E  02DF               	subwf	I2C1_ISR@i2c_bytes_left,f
 12688  013F  0A5F               	incf	I2C1_ISR@i2c_bytes_left,w
 12689  0140  1D03               	btfss	3,2
 12690  0141  2951               	goto	i1l3225
 12691                           
 12692                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 12693  0142  3004               	movlw	4
 12694  0143  00F8               	movwf	??_I2C1_ISR
 12695  0144  0878               	movf	??_I2C1_ISR,w
 12696  0145  07E2               	addwf	_p_i2c1_trb_current,f
 12697                           
 12698                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 12699  0146  3001               	movlw	1
 12700  0147  02E3               	subwf	_i2c1_trb_count,f
 12701  0148  1D03               	btfss	3,2
 12702  0149  294E               	goto	i1l428
 12703                           
 12704                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12705  014A  3000               	movlw	0
 12706  014B  318F  2718         	fcall	_I2C1_Stop
 12707                           
 12708                           ;mcc_generated_files/i2c1.c: 457:                     }
 12709  014D  0008               	return
 12710  014E                     i1l428:	
 12711                           ;mcc_generated_files/i2c1.c: 458:                     else
 12712                           
 12713                           
 12714                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 12715  014E  0143               	movlb	3	; select bank3
 12716  014F  1491               	bsf	17,1	;volatile
 12717  0150  28C1               	goto	i1l3155
 12718  0151                     i1l3225:	
 12719                           
 12720                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 12721  0151  0860               	movf	I2C1_ISR@pi2c_buf_ptr,w
 12722  0152  0086               	movwf	6
 12723  0153  0187               	clrf	7
 12724  0154  0801               	movf	1,w
 12725  0155  0143               	movlb	3	; select bank3
 12726  0156  008C               	movwf	12	;volatile
 12727  0157  3001               	movlw	1
 12728  0158  00F8               	movwf	??_I2C1_ISR
 12729  0159  0878               	movf	??_I2C1_ISR,w
 12730  015A  0140               	movlb	0	; select bank0
 12731  015B  07E0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 12732  015C  0008               	return
 12733  015D                     i1l431:	
 12734                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 12735                           
 12736                           
 12737                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 12738  015D  0143               	movlb	3	; select bank3
 12739  015E  1F11               	btfss	17,6	;volatile
 12740  015F  296B               	goto	i1l432
 12741                           
 12742                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 12743  0160  3001               	movlw	1
 12744  0161  00F8               	movwf	??_I2C1_ISR
 12745  0162  0878               	movf	??_I2C1_ISR,w
 12746  0163  0140               	movlb	0	; select bank0
 12747  0164  07CA               	addwf	_i2c1_object+4,f
 12748                           
 12749                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 12750  0165  3004               	movlw	4
 12751  0166  318F  2718         	fcall	_I2C1_Stop
 12752                           
 12753                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 12754  0168  0143               	movlb	3	; select bank3
 12755  0169  1311               	bcf	17,6	;volatile
 12756                           
 12757                           ;mcc_generated_files/i2c1.c: 495:             }
 12758  016A  0008               	return
 12759  016B                     i1l432:	
 12760                           ;mcc_generated_files/i2c1.c: 496:             else
 12761                           
 12762                           
 12763                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 12764  016B  1591               	bsf	17,3	;volatile
 12765                           
 12766                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 12767  016C  3008               	movlw	8
 12768  016D  00F8               	movwf	??_I2C1_ISR
 12769  016E  0878               	movf	??_I2C1_ISR,w
 12770  016F  0140               	movlb	0	; select bank0
 12771  0170  00E4               	movwf	_i2c1_state
 12772  0171  0008               	return
 12773  0172                     i1l3237:	
 12774                           
 12775                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 12776  0172  3008               	movlw	8
 12777  0173  00F8               	movwf	??_I2C1_ISR
 12778  0174  0878               	movf	??_I2C1_ISR,w
 12779  0175  00E4               	movwf	_i2c1_state
 12780                           
 12781                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 12782  0176  0143               	movlb	3	; select bank3
 12783  0177  1591               	bsf	17,3	;volatile
 12784                           
 12785                           ;mcc_generated_files/i2c1.c: 513:             break;
 12786  0178  0008               	return
 12787  0179                     i1l3241:	
 12788                           
 12789                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 12790  0179  0143               	movlb	3	; select bank3
 12791  017A  080C               	movf	12,w	;volatile
 12792  017B  00F8               	movwf	??_I2C1_ISR
 12793  017C  0140               	movlb	0	; select bank0
 12794  017D  0860               	movf	I2C1_ISR@pi2c_buf_ptr,w
 12795  017E  0086               	movwf	6
 12796  017F  0187               	clrf	7
 12797  0180  0878               	movf	??_I2C1_ISR,w
 12798  0181  0081               	movwf	1
 12799  0182  3001               	movlw	1
 12800  0183  00F8               	movwf	??_I2C1_ISR
 12801  0184  0878               	movf	??_I2C1_ISR,w
 12802  0185  07E0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 12803                           
 12804                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 12805  0186  3001               	movlw	1
 12806  0187  02DF               	subwf	I2C1_ISR@i2c_bytes_left,f
 12807  0188  1903               	btfsc	3,2
 12808  0189  2992               	goto	i1l436
 12809                           
 12810                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 12811  018A  0143               	movlb	3	; select bank3
 12812  018B  1291               	bcf	17,5	;volatile
 12813                           
 12814                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 12815  018C  3006               	movlw	6
 12816  018D  00F8               	movwf	??_I2C1_ISR
 12817  018E  0878               	movf	??_I2C1_ISR,w
 12818  018F  0140               	movlb	0	; select bank0
 12819  0190  00E4               	movwf	_i2c1_state
 12820                           
 12821                           ;mcc_generated_files/i2c1.c: 532:             }
 12822  0191  2996               	goto	i1l3253
 12823  0192                     i1l436:	
 12824                           ;mcc_generated_files/i2c1.c: 533:             else
 12825                           
 12826                           
 12827                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 12828  0192  0143               	movlb	3	; select bank3
 12829  0193  1691               	bsf	17,5	;volatile
 12830                           
 12831                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 12832  0194  318E  2673         	fcall	_I2C1_FunctionComplete
 12833  0196                     i1l3253:	
 12834                           
 12835                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 12836  0196  0143               	movlb	3	; select bank3
 12837  0197  1611               	bsf	17,4	;volatile
 12838                           
 12839                           ;mcc_generated_files/i2c1.c: 545:             break;
 12840  0198  0008               	return
 12841  0199                     i1l3255:	
 12842                           
 12843                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12844  0199  3000               	movlw	0
 12845  019A  318F  2718         	fcall	_I2C1_Stop
 12846                           
 12847                           ;mcc_generated_files/i2c1.c: 552:             break;
 12848  019C  0008               	return
 12849  019D                     i1l3257:	
 12850                           
 12851                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 12852  019D  3001               	movlw	1
 12853  019E  00F8               	movwf	??_I2C1_ISR
 12854  019F  0878               	movf	??_I2C1_ISR,w
 12855  01A0  07CA               	addwf	_i2c1_object+4,f
 12856                           
 12857                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 12858  01A1  3006               	movlw	6
 12859  01A2  318F  2718         	fcall	_I2C1_Stop
 12860                           
 12861                           ;mcc_generated_files/i2c1.c: 560:             break;
 12862  01A4  0008               	return
 12863  01A5                     i1l3263:	
 12864  01A5  0140               	movlb	0	; select bank0
 12865  01A6  0864               	movf	_i2c1_state,w
 12866  01A7  00F8               	movwf	??_I2C1_ISR
 12867  01A8  01F9               	clrf	??_I2C1_ISR+1
 12868                           
 12869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12870                           ; Switch size 1, requested type "simple"
 12871                           ; Number of cases is 1, Range of values is 0 to 0
 12872                           ; switch strategies available:
 12873                           ; Name         Instructions Cycles
 12874                           ; simple_byte            4     3 (average)
 12875                           ; direct_byte            8     6 (fixed)
 12876                           ; jumptable            260     6 (fixed)
 12877                           ;	Chosen strategy is simple_byte
 12878  01A9  0879               	movf	??_I2C1_ISR+1,w
 12879  01AA  3A00               	xorlw	0	; case 0
 12880  01AB  1903               	skipnz
 12881  01AC  29AE               	goto	i1l4263
 12882  01AD  299D               	goto	i1l3257
 12883  01AE                     i1l4263:	
 12884                           
 12885                           ; Switch size 1, requested type "simple"
 12886                           ; Number of cases is 11, Range of values is 0 to 11
 12887                           ; switch strategies available:
 12888                           ; Name         Instructions Cycles
 12889                           ; direct_byte           30     6 (fixed)
 12890                           ; simple_byte           34    18 (average)
 12891                           ; jumptable            260     6 (fixed)
 12892                           ;	Chosen strategy is simple_byte
 12893  01AE  0878               	movf	??_I2C1_ISR,w
 12894  01AF  3A00               	xorlw	0	; case 0
 12895  01B0  1903               	skipnz
 12896  01B1  289C               	goto	i1l402
 12897  01B2  3A01               	xorlw	1	; case 1
 12898  01B3  1903               	skipnz
 12899  01B4  28C7               	goto	i1l407
 12900  01B5  3A03               	xorlw	3	; case 2
 12901  01B6  1903               	skipnz
 12902  01B7  290F               	goto	i1l3183
 12903  01B8  3A01               	xorlw	1	; case 3
 12904  01B9  1903               	skipnz
 12905  01BA  292E               	goto	i1l424
 12906  01BB  3A07               	xorlw	7	; case 4
 12907  01BC  1903               	skipnz
 12908  01BD  2999               	goto	i1l3255
 12909  01BE  3A01               	xorlw	1	; case 5
 12910  01BF  1903               	skipnz
 12911  01C0  295D               	goto	i1l431
 12912  01C1  3A03               	xorlw	3	; case 6
 12913  01C2  1903               	skipnz
 12914  01C3  2972               	goto	i1l3237
 12915  01C4  3A01               	xorlw	1	; case 7
 12916  01C5  1903               	skipnz
 12917  01C6  2999               	goto	i1l3255
 12918  01C7  3A0F               	xorlw	15	; case 8
 12919  01C8  1903               	skipnz
 12920  01C9  2979               	goto	i1l3241
 12921  01CA  3A02               	xorlw	2	; case 10
 12922  01CB  1903               	skipnz
 12923  01CC  28C8               	goto	i1l408
 12924  01CD  3A01               	xorlw	1	; case 11
 12925  01CE  1903               	skipnz
 12926  01CF  28EA               	goto	i1l413
 12927  01D0  299D               	goto	i1l3257
 12928  01D1  0008               	return
 12929  01D2                     __end_of_I2C1_ISR:	
 12930                           
 12931                           	psect	text53
 12932  0F18                     __ptext53:	
 12933 ;; *************** function _I2C1_Stop *****************
 12934 ;; Defined at:
 12935 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;  completion_c    1    wreg     enum E10866
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;  completion_c    1    1[COMMON] enum E10866
 12940 ;; Return value:  Size  Location     Type
 12941 ;;                  1    wreg      void 
 12942 ;; Registers used:
 12943 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12944 ;; Tracked objects:
 12945 ;;		On entry : 0/0
 12946 ;;		On exit  : 0/0
 12947 ;;		Unchanged: 0/0
 12948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12953 ;;Total ram usage:        2 bytes
 12954 ;; Hardware stack levels used:    1
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		_I2C1_ISR
 12959 ;; This function uses a non-reentrant model
 12960 ;;
 12961                           
 12962                           
 12963                           ;psect for function _I2C1_Stop
 12964  0F18                     _I2C1_Stop:	
 12965                           
 12966                           ;incstack = 0
 12967                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 12968                           ;I2C1_Stop@completion_code stored from wreg
 12969  0F18  00F7               	movwf	I2C1_Stop@completion_code
 12970                           
 12971                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 12972  0F19  0143               	movlb	3	; select bank3
 12973  0F1A  1511               	bsf	17,2	;volatile
 12974                           
 12975                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 12976  0F1B  0140               	movlb	0	; select bank0
 12977  0F1C  0861               	movf	_p_i2c1_current,w
 12978  0F1D  3E02               	addlw	2
 12979  0F1E  0086               	movwf	6
 12980  0F1F  0187               	clrf	7
 12981  0F20  0801               	movf	1,w
 12982  0F21  1903               	btfsc	3,2
 12983  0F22  2F2E               	goto	i1l2945
 12984                           
 12985                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 12986  0F23  0877               	movf	I2C1_Stop@completion_code,w
 12987  0F24  00F6               	movwf	??_I2C1_Stop
 12988  0F25  0861               	movf	_p_i2c1_current,w
 12989  0F26  3E02               	addlw	2
 12990  0F27  0086               	movwf	6
 12991  0F28  0187               	clrf	7
 12992  0F29  0801               	movf	1,w
 12993  0F2A  0086               	movwf	6
 12994  0F2B  0187               	clrf	7
 12995  0F2C  0876               	movf	??_I2C1_Stop,w
 12996  0F2D  0081               	movwf	1
 12997  0F2E                     i1l2945:	
 12998                           
 12999                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 13000  0F2E  01E4               	clrf	_i2c1_state
 13001  0F2F  0008               	return
 13002  0F30                     __end_of_I2C1_Stop:	
 13003                           
 13004                           	psect	text54
 13005  0E73                     __ptext54:	
 13006 ;; *************** function _I2C1_FunctionComplete *****************
 13007 ;; Defined at:
 13008 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;		None
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;		None
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  1    wreg      void 
 13015 ;; Registers used:
 13016 ;;		wreg, status,2, status,0
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/0
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13026 ;;Total ram usage:        1 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; This function calls:
 13029 ;;		Nothing
 13030 ;; This function is called by:
 13031 ;;		_I2C1_ISR
 13032 ;; This function uses a non-reentrant model
 13033 ;;
 13034                           
 13035                           
 13036                           ;psect for function _I2C1_FunctionComplete
 13037  0E73                     _I2C1_FunctionComplete:	
 13038                           
 13039                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 13040                           
 13041                           ;incstack = 0
 13042                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 13043  0E73  3004               	movlw	4
 13044  0E74  00F6               	movwf	??_I2C1_FunctionComplete
 13045  0E75  0876               	movf	??_I2C1_FunctionComplete,w
 13046  0E76  0140               	movlb	0	; select bank0
 13047  0E77  07E2               	addwf	_p_i2c1_trb_current,f
 13048                           
 13049                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 13050  0E78  3001               	movlw	1
 13051  0E79  02E3               	subwf	_i2c1_trb_count,f
 13052  0E7A  1D03               	btfss	3,2
 13053  0E7B  2E81               	goto	i1l443
 13054                           
 13055                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 13056  0E7C  3004               	movlw	4
 13057  0E7D  00F6               	movwf	??_I2C1_FunctionComplete
 13058  0E7E  0876               	movf	??_I2C1_FunctionComplete,w
 13059  0E7F  00E4               	movwf	_i2c1_state
 13060                           
 13061                           ;mcc_generated_files/i2c1.c: 575:     }
 13062  0E80  0008               	return
 13063  0E81                     i1l443:	
 13064                           ;mcc_generated_files/i2c1.c: 576:     else
 13065                           
 13066                           
 13067                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 13068  0E81  01E4               	clrf	_i2c1_state
 13069  0E82  0AE4               	incf	_i2c1_state,f
 13070  0E83  0008               	return
 13071  0E84                     __end_of_I2C1_FunctionComplete:	
 13072                           
 13073                           	psect	text55
 13074  0DAA                     __ptext55:	
 13075 ;; *************** function _I2C1_BusCollisionISR *****************
 13076 ;; Defined at:
 13077 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 13078 ;; Parameters:    Size  Location     Type
 13079 ;;		None
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;		None
 13082 ;; Return value:  Size  Location     Type
 13083 ;;                  1    wreg      void 
 13084 ;; Registers used:
 13085 ;;		None
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/0
 13088 ;;		On exit  : 0/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13095 ;;Total ram usage:        0 bytes
 13096 ;; Hardware stack levels used:    1
 13097 ;; This function calls:
 13098 ;;		Nothing
 13099 ;; This function is called by:
 13100 ;;		_INTERRUPT_InterruptManager
 13101 ;; This function uses a non-reentrant model
 13102 ;;
 13103                           
 13104                           
 13105                           ;psect for function _I2C1_BusCollisionISR
 13106  0DAA                     _I2C1_BusCollisionISR:	
 13107                           
 13108                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 13109                           
 13110                           ;incstack = 0
 13111                           ; Regs used in _I2C1_BusCollisionISR: []
 13112  0DAA  014E               	movlb	14	; select bank14
 13113  0DAB  108F               	bcf	15,1	;volatile
 13114  0DAC  0008               	return
 13115  0DAD                     __end_of_I2C1_BusCollisionISR:	
 13116                           
 13117                           	psect	text56
 13118  0F65                     __ptext56:	
 13119 ;; *************** function _EUSART1_Transmit_ISR *****************
 13120 ;; Defined at:
 13121 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 13122 ;; Parameters:    Size  Location     Type
 13123 ;;		None
 13124 ;; Auto vars:     Size  Location     Type
 13125 ;;		None
 13126 ;; Return value:  Size  Location     Type
 13127 ;;                  1    wreg      void 
 13128 ;; Registers used:
 13129 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13130 ;; Tracked objects:
 13131 ;;		On entry : 0/0
 13132 ;;		On exit  : 0/0
 13133 ;;		Unchanged: 0/0
 13134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13137 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13139 ;;Total ram usage:        1 bytes
 13140 ;; Hardware stack levels used:    1
 13141 ;; This function calls:
 13142 ;;		Nothing
 13143 ;; This function is called by:
 13144 ;;		_EUSART1_Initialize
 13145 ;;		_INTERRUPT_InterruptManager
 13146 ;; This function uses a non-reentrant model
 13147 ;;
 13148                           
 13149                           
 13150                           ;psect for function _EUSART1_Transmit_ISR
 13151  0F65                     _EUSART1_Transmit_ISR:	
 13152                           
 13153                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 13154                           
 13155                           ;incstack = 0
 13156                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 13157  0F65  3008               	movlw	8
 13158  0F66  0140               	movlb	0	; select bank0
 13159  0F67  026E               	subwf	_eusart1TxBufferRemaining,w	;volatile
 13160  0F68  1803               	skipnc
 13161  0F69  2F7F               	goto	i1l106
 13162                           
 13163                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 13164  0F6A  0872               	movf	_eusart1TxTail,w
 13165  0F6B  3EB0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 13166  0F6C  0086               	movwf	6
 13167  0F6D  0187               	clrf	7
 13168  0F6E  0801               	movf	1,w
 13169  0F6F  0142               	movlb	2	; select bank2
 13170  0F70  009A               	movwf	26	;volatile
 13171  0F71  3001               	movlw	1
 13172  0F72  00F6               	movwf	??_EUSART1_Transmit_ISR
 13173  0F73  0876               	movf	??_EUSART1_Transmit_ISR,w
 13174  0F74  07F2               	addwf	_eusart1TxTail,f	;volatile
 13175                           
 13176                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 13177  0F75  3008               	movlw	8
 13178  0F76  0272               	subwf	_eusart1TxTail,w	;volatile
 13179  0F77  1803               	btfsc	3,0
 13180                           
 13181                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 13182  0F78  01F2               	clrf	_eusart1TxTail	;volatile
 13183                           
 13184                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 13185  0F79  3001               	movlw	1
 13186  0F7A  00F6               	movwf	??_EUSART1_Transmit_ISR
 13187  0F7B  0876               	movf	??_EUSART1_Transmit_ISR,w
 13188  0F7C  0140               	movlb	0	; select bank0
 13189  0F7D  07EE               	addwf	_eusart1TxBufferRemaining,f	;volatile
 13190                           
 13191                           ;mcc_generated_files/eusart1.c: 206:     }
 13192  0F7E  0008               	return
 13193  0F7F                     i1l106:	
 13194                           ;mcc_generated_files/eusart1.c: 207:     else
 13195                           
 13196                           
 13197                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 13198  0F7F  014E               	movlb	14	; select bank14
 13199  0F80  1219               	bcf	25,4	;volatile
 13200  0F81  0008               	return
 13201  0F82                     __end_of_EUSART1_Transmit_ISR:	
 13202                           
 13203                           	psect	text57
 13204  075E                     __ptext57:	
 13205 ;; *************** function _DMX_ISR *****************
 13206 ;; Defined at:
 13207 ;;		line 13 in file "dmx.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;		None
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;		None
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  1    wreg      void 
 13214 ;; Registers used:
 13215 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13223 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13225 ;;Total ram usage:        4 bytes
 13226 ;; Hardware stack levels used:    1
 13227 ;; This function calls:
 13228 ;;		Nothing
 13229 ;; This function is called by:
 13230 ;;		_main
 13231 ;;		_INTERRUPT_InterruptManager
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           
 13236                           ;psect for function _DMX_ISR
 13237  075E                     _DMX_ISR:	
 13238                           
 13239                           ;dmx.c: 14:         LATB6 = 1;
 13240                           
 13241                           ;incstack = 0
 13242                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 13243  075E  0140               	movlb	0	; select bank0
 13244  075F  1719               	bsf	25,6	;volatile
 13245                           
 13246                           ;dmx.c: 15:         LATB6 = 0;
 13247  0760  1319               	bcf	25,6	;volatile
 13248                           
 13249                           ;dmx.c: 16:     if (RC1STAbits.FERR) {
 13250  0761  0142               	movlb	2	; select bank2
 13251  0762  1D1D               	btfss	29,2	;volatile
 13252  0763  2F6B               	goto	i1l3475
 13253                           
 13254                           ;dmx.c: 18:         dmxPointer = 0;
 13255  0764  0141               	movlb	1	; select bank1
 13256  0765  01BC               	clrf	_dmxPointer^(0+128)
 13257  0766  01BD               	clrf	(_dmxPointer+1)^(0+128)
 13258                           
 13259                           ;dmx.c: 19:         offCheck = 1;
 13260  0767  0140               	movlb	0	; select bank0
 13261  0768  01D5               	clrf	_offCheck
 13262  0769  0AD5               	incf	_offCheck,f
 13263                           
 13264                           ;dmx.c: 20:     } else {
 13265  076A  2F70               	goto	i1l3477
 13266  076B                     i1l3475:	
 13267                           
 13268                           ;dmx.c: 21:         dmxPointer++;
 13269  076B  3001               	movlw	1
 13270  076C  0141               	movlb	1	; select bank1
 13271  076D  07BC               	addwf	_dmxPointer^(0+128),f
 13272  076E  3000               	movlw	0
 13273  076F  3DBD               	addwfc	(_dmxPointer+1)^(0+128),f
 13274  0770                     i1l3477:	
 13275                           
 13276                           ;dmx.c: 23:     dmxData[dmxPointer] = RC1REG;
 13277  0770  30EF               	movlw	239
 13278  0771  00F6               	movwf	??_DMX_ISR
 13279  0772  3025               	movlw	37
 13280  0773  00F7               	movwf	??_DMX_ISR+1
 13281  0774  0141               	movlb	1	; select bank1
 13282  0775  083C               	movf	_dmxPointer^(0+128),w
 13283  0776  0776               	addwf	??_DMX_ISR,w
 13284  0777  00F8               	movwf	??_DMX_ISR+2
 13285  0778  083D               	movf	(_dmxPointer+1)^(0+128),w
 13286  0779  3D77               	addwfc	??_DMX_ISR+1,w
 13287  077A  00F9               	movwf	??_DMX_ISR+3
 13288  077B  0878               	movf	??_DMX_ISR+2,w
 13289  077C  0086               	movwf	6
 13290  077D  0879               	movf	??_DMX_ISR+3,w
 13291  077E  0087               	movwf	7
 13292  077F  0142               	movlb	2	; select bank2
 13293  0780  0819               	movf	25,w	;volatile
 13294  0781  0081               	movwf	1
 13295                           
 13296                           ;dmx.c: 25:     if (RC1STAbits.OERR) {
 13297  0782  1C9D               	btfss	29,1	;volatile
 13298  0783  0008               	return
 13299                           
 13300                           ;dmx.c: 26:         RC1STAbits.CREN = 0;
 13301  0784  121D               	bcf	29,4	;volatile
 13302                           
 13303                           ;dmx.c: 27:         RC1STAbits.CREN = 1;
 13304  0785  161D               	bsf	29,4	;volatile
 13305  0786  0008               	return
 13306  0787                     __end_of_DMX_ISR:	
 13307                           
 13308                           	psect	text58
 13309  06D2                     __ptext58:	
 13310 ;; *************** function _EUSART1_Receive_ISR *****************
 13311 ;; Defined at:
 13312 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;		None
 13315 ;; Auto vars:     Size  Location     Type
 13316 ;;		None
 13317 ;; Return value:  Size  Location     Type
 13318 ;;                  1    wreg      void 
 13319 ;; Registers used:
 13320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13321 ;; Tracked objects:
 13322 ;;		On entry : 0/0
 13323 ;;		On exit  : 0/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13330 ;;Total ram usage:        0 bytes
 13331 ;; Hardware stack levels used:    1
 13332 ;; Hardware stack levels required when called:    2
 13333 ;; This function calls:
 13334 ;;		Absolute function
 13335 ;;		_EUSART1_DefaultErrorHandler
 13336 ;;		_EUSART1_DefaultFramingErrorHandler
 13337 ;;		_EUSART1_DefaultOverrunErrorHandler
 13338 ;;		_EUSART1_RxDataHandler
 13339 ;; This function is called by:
 13340 ;;		_EUSART1_Initialize
 13341 ;;		_INTERRUPT_InterruptManager
 13342 ;; This function uses a non-reentrant model
 13343 ;;
 13344                           
 13345                           
 13346                           ;psect for function _EUSART1_Receive_ISR
 13347  06D2                     _EUSART1_Receive_ISR:	
 13348                           
 13349                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 13350                           
 13351                           ;incstack = 0
 13352                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13353  06D2  0871               	movf	_eusart1RxHead,w	;volatile
 13354  06D3  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 13355  06D4  0086               	movwf	6
 13356  06D5  0187               	clrf	7
 13357  06D6  0181               	clrf	1
 13358                           
 13359                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 13360  06D7  0142               	movlb	2	; select bank2
 13361  06D8  1D1D               	btfss	29,2	;volatile
 13362  06D9  2EE5               	goto	i1l3093
 13363                           
 13364                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 13365  06DA  0871               	movf	_eusart1RxHead,w	;volatile
 13366  06DB  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 13367  06DC  0086               	movwf	6
 13368  06DD  0187               	clrf	7
 13369  06DE  1481               	bsf	1,1
 13370                           
 13371                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 13372  06DF  0141               	movlb	1	; select bank1
 13373  06E0  0859               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 13374  06E1  008A               	movwf	10
 13375  06E2  0858               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 13376  06E3  000A               	callw
 13377  06E4  3186               	pagesel	$
 13378  06E5                     i1l3093:	
 13379                           
 13380                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 13381  06E5  0142               	movlb	2	; select bank2
 13382  06E6  1C9D               	btfss	29,1	;volatile
 13383  06E7  2EF3               	goto	i1l3099
 13384                           
 13385                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 13386  06E8  0871               	movf	_eusart1RxHead,w	;volatile
 13387  06E9  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 13388  06EA  0086               	movwf	6
 13389  06EB  0187               	clrf	7
 13390  06EC  1501               	bsf	1,2
 13391                           
 13392                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 13393  06ED  0141               	movlb	1	; select bank1
 13394  06EE  0857               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 13395  06EF  008A               	movwf	10
 13396  06F0  0856               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 13397  06F1  000A               	callw
 13398  06F2  3186               	pagesel	$
 13399  06F3                     i1l3099:	
 13400                           
 13401                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 13402  06F3  0871               	movf	_eusart1RxHead,w	;volatile
 13403  06F4  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 13404  06F5  0086               	movwf	6
 13405  06F6  0187               	clrf	7
 13406  06F7  0801               	movf	1,w
 13407  06F8  1903               	btfsc	3,2
 13408  06F9  2F01               	goto	i1l3103
 13409                           
 13410                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 13411  06FA  0141               	movlb	1	; select bank1
 13412  06FB  0855               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 13413  06FC  008A               	movwf	10
 13414  06FD  0854               	movf	_EUSART1_ErrorHandler^(0+128),w
 13415  06FE  000A               	callw
 13416  06FF  3186               	pagesel	$
 13417                           
 13418                           ;mcc_generated_files/eusart1.c: 230:     } else {
 13419  0700  0008               	return
 13420  0701                     i1l3103:	
 13421                           
 13422                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 13423  0701  318F  2701         	fcall	_EUSART1_RxDataHandler
 13424  0703  0008               	return
 13425  0704                     __end_of_EUSART1_Receive_ISR:	
 13426                           
 13427                           	psect	text59
 13428  0DB7                     __ptext59:	
 13429 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 13430 ;; Defined at:
 13431 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;		None
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;		None
 13436 ;; Return value:  Size  Location     Type
 13437 ;;                  1    wreg      void 
 13438 ;; Registers used:
 13439 ;;		None
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13449 ;;Total ram usage:        0 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; This function calls:
 13452 ;;		Nothing
 13453 ;; This function is called by:
 13454 ;;		_EUSART1_Initialize
 13455 ;;		_EUSART1_Receive_ISR
 13456 ;; This function uses a non-reentrant model
 13457 ;;
 13458                           
 13459                           
 13460                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 13461  0DB7                     _EUSART1_DefaultOverrunErrorHandler:	
 13462                           
 13463                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 13464                           
 13465                           ;incstack = 0
 13466                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 13467  0DB7  0142               	movlb	2	; select bank2
 13468  0DB8  121D               	bcf	29,4	;volatile
 13469                           
 13470                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 13471  0DB9  161D               	bsf	29,4	;volatile
 13472  0DBA  0008               	return
 13473  0DBB                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 13474                           
 13475                           	psect	text60
 13476  0DA5                     __ptext60:	
 13477 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 13478 ;; Defined at:
 13479 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 13480 ;; Parameters:    Size  Location     Type
 13481 ;;		None
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;		None
 13484 ;; Return value:  Size  Location     Type
 13485 ;;                  1    wreg      void 
 13486 ;; Registers used:
 13487 ;;		None
 13488 ;; Tracked objects:
 13489 ;;		On entry : 0/0
 13490 ;;		On exit  : 0/0
 13491 ;;		Unchanged: 0/0
 13492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13497 ;;Total ram usage:        0 bytes
 13498 ;; Hardware stack levels used:    1
 13499 ;; This function calls:
 13500 ;;		Nothing
 13501 ;; This function is called by:
 13502 ;;		_EUSART1_Initialize
 13503 ;;		_EUSART1_Receive_ISR
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           
 13508                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 13509  0DA5                     _EUSART1_DefaultFramingErrorHandler:	
 13510                           
 13511                           ;incstack = 0
 13512                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 13513  0DA5  0008               	return
 13514  0DA6                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 13515                           
 13516                           	psect	text61
 13517  0DA7                     __ptext61:	
 13518 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 13519 ;; Defined at:
 13520 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 13521 ;; Parameters:    Size  Location     Type
 13522 ;;		None
 13523 ;; Auto vars:     Size  Location     Type
 13524 ;;		None
 13525 ;; Return value:  Size  Location     Type
 13526 ;;                  1    wreg      void 
 13527 ;; Registers used:
 13528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13529 ;; Tracked objects:
 13530 ;;		On entry : 0/0
 13531 ;;		On exit  : 0/0
 13532 ;;		Unchanged: 0/0
 13533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13538 ;;Total ram usage:        0 bytes
 13539 ;; Hardware stack levels used:    1
 13540 ;; Hardware stack levels required when called:    1
 13541 ;; This function calls:
 13542 ;;		_EUSART1_RxDataHandler
 13543 ;; This function is called by:
 13544 ;;		_EUSART1_Initialize
 13545 ;;		_EUSART1_Receive_ISR
 13546 ;; This function uses a non-reentrant model
 13547 ;;
 13548                           
 13549                           
 13550                           ;psect for function _EUSART1_DefaultErrorHandler
 13551  0DA7                     _EUSART1_DefaultErrorHandler:	
 13552                           
 13553                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 13554                           
 13555                           ;incstack = 0
 13556                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13557  0DA7  318F  2701         	fcall	_EUSART1_RxDataHandler
 13558  0DA9  0008               	return
 13559  0DAA                     __end_of_EUSART1_DefaultErrorHandler:	
 13560                           
 13561                           	psect	text62
 13562  0F01                     __ptext62:	
 13563 ;; *************** function _EUSART1_RxDataHandler *****************
 13564 ;; Defined at:
 13565 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;		None
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;		None
 13570 ;; Return value:  Size  Location     Type
 13571 ;;                  1    wreg      void 
 13572 ;; Registers used:
 13573 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13574 ;; Tracked objects:
 13575 ;;		On entry : 0/0
 13576 ;;		On exit  : 0/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13583 ;;Total ram usage:        1 bytes
 13584 ;; Hardware stack levels used:    1
 13585 ;; This function calls:
 13586 ;;		Nothing
 13587 ;; This function is called by:
 13588 ;;		_EUSART1_Receive_ISR
 13589 ;;		_EUSART1_DefaultErrorHandler
 13590 ;; This function uses a non-reentrant model
 13591 ;;
 13592                           
 13593                           
 13594                           ;psect for function _EUSART1_RxDataHandler
 13595  0F01                     _EUSART1_RxDataHandler:	
 13596                           
 13597                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 13598                           
 13599                           ;incstack = 0
 13600                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 13601  0F01  0142               	movlb	2	; select bank2
 13602  0F02  0819               	movf	25,w	;volatile
 13603  0F03  00F6               	movwf	??_EUSART1_RxDataHandler
 13604  0F04  0871               	movf	_eusart1RxHead,w
 13605  0F05  3EA8               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 13606  0F06  0086               	movwf	6
 13607  0F07  0187               	clrf	7
 13608  0F08  0876               	movf	??_EUSART1_RxDataHandler,w
 13609  0F09  0081               	movwf	1
 13610  0F0A  3001               	movlw	1
 13611  0F0B  00F6               	movwf	??_EUSART1_RxDataHandler
 13612  0F0C  0876               	movf	??_EUSART1_RxDataHandler,w
 13613  0F0D  07F1               	addwf	_eusart1RxHead,f	;volatile
 13614                           
 13615                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 13616  0F0E  3008               	movlw	8
 13617  0F0F  0271               	subwf	_eusart1RxHead,w	;volatile
 13618  0F10  1803               	btfsc	3,0
 13619                           
 13620                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 13621  0F11  01F1               	clrf	_eusart1RxHead	;volatile
 13622                           
 13623                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 13624  0F12  3001               	movlw	1
 13625  0F13  00F6               	movwf	??_EUSART1_RxDataHandler
 13626  0F14  0876               	movf	??_EUSART1_RxDataHandler,w
 13627  0F15  0140               	movlb	0	; select bank0
 13628  0F16  07E6               	addwf	_eusart1RxCount,f	;volatile
 13629  0F17  0008               	return
 13630  0F18                     __end_of_EUSART1_RxDataHandler:	
 13631                           
 13632                           	psect	text63
 13633  0E59                     __ptext63:	
 13634 ;; *************** function _ADCC_ThresholdISR *****************
 13635 ;; Defined at:
 13636 ;;		line 308 in file "mcc_generated_files/adcc.c"
 13637 ;; Parameters:    Size  Location     Type
 13638 ;;		None
 13639 ;; Auto vars:     Size  Location     Type
 13640 ;;		None
 13641 ;; Return value:  Size  Location     Type
 13642 ;;                  1    wreg      void 
 13643 ;; Registers used:
 13644 ;;		wreg, status,2, status,0, pclath, cstack
 13645 ;; Tracked objects:
 13646 ;;		On entry : 0/0
 13647 ;;		On exit  : 0/0
 13648 ;;		Unchanged: 0/0
 13649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13654 ;;Total ram usage:        0 bytes
 13655 ;; Hardware stack levels used:    1
 13656 ;; Hardware stack levels required when called:    1
 13657 ;; This function calls:
 13658 ;;		Absolute function
 13659 ;;		_ADCC_DefaultInterruptHandler
 13660 ;;		_adcThresholdHandler
 13661 ;; This function is called by:
 13662 ;;		_INTERRUPT_InterruptManager
 13663 ;; This function uses a non-reentrant model
 13664 ;;
 13665                           
 13666                           
 13667                           ;psect for function _ADCC_ThresholdISR
 13668  0E59                     _ADCC_ThresholdISR:	
 13669                           
 13670                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 13671                           
 13672                           ;incstack = 0
 13673                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 13674  0E59  014E               	movlb	14	; select bank14
 13675  0E5A  108D               	bcf	13,1	;volatile
 13676                           
 13677                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 13678  0E5B  0141               	movlb	1	; select bank1
 13679  0E5C  0850               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 13680  0E5D  0451               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 13681  0E5E  1903               	btfsc	3,2
 13682  0E5F  0008               	return
 13683                           
 13684                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 13685  0E60  0851               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 13686  0E61  008A               	movwf	10
 13687  0E62  0850               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 13688  0E63  000A               	callw
 13689  0E64  318E               	pagesel	$
 13690  0E65  0008               	return
 13691  0E66                     __end_of_ADCC_ThresholdISR:	
 13692                           
 13693                           	psect	text64
 13694  0DA4                     __ptext64:	
 13695 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13696 ;; Defined at:
 13697 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13698 ;; Parameters:    Size  Location     Type
 13699 ;;		None
 13700 ;; Auto vars:     Size  Location     Type
 13701 ;;		None
 13702 ;; Return value:  Size  Location     Type
 13703 ;;                  1    wreg      void 
 13704 ;; Registers used:
 13705 ;;		None
 13706 ;; Tracked objects:
 13707 ;;		On entry : 0/0
 13708 ;;		On exit  : 0/0
 13709 ;;		Unchanged: 0/0
 13710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13715 ;;Total ram usage:        0 bytes
 13716 ;; Hardware stack levels used:    1
 13717 ;; This function calls:
 13718 ;;		Nothing
 13719 ;; This function is called by:
 13720 ;;		_ADCC_Initialize
 13721 ;;		_ADCC_ThresholdISR
 13722 ;; This function uses a non-reentrant model
 13723 ;;
 13724                           
 13725                           
 13726                           ;psect for function _ADCC_DefaultInterruptHandler
 13727  0DA4                     _ADCC_DefaultInterruptHandler:	
 13728                           
 13729                           ;incstack = 0
 13730                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 13731  0DA4  0008               	return
 13732  0DA5                     __end_of_ADCC_DefaultInterruptHandler:	
 13733                           
 13734                           	psect	text65
 13735  0DB3                     __ptext65:	
 13736 ;; *************** function _adcThresholdHandler *****************
 13737 ;; Defined at:
 13738 ;;		line 27 in file "beat.c"
 13739 ;; Parameters:    Size  Location     Type
 13740 ;;		None
 13741 ;; Auto vars:     Size  Location     Type
 13742 ;;		None
 13743 ;; Return value:  Size  Location     Type
 13744 ;;                  1    wreg      void 
 13745 ;; Registers used:
 13746 ;;		None
 13747 ;; Tracked objects:
 13748 ;;		On entry : 0/0
 13749 ;;		On exit  : 0/0
 13750 ;;		Unchanged: 0/0
 13751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13756 ;;Total ram usage:        0 bytes
 13757 ;; Hardware stack levels used:    1
 13758 ;; This function calls:
 13759 ;;		Nothing
 13760 ;; This function is called by:
 13761 ;;		_BEAT_init
 13762 ;;		_ADCC_ThresholdISR
 13763 ;; This function uses a non-reentrant model
 13764 ;;
 13765                           
 13766                           
 13767                           ;psect for function _adcThresholdHandler
 13768  0DB3                     _adcThresholdHandler:	
 13769                           
 13770                           ;beat.c: 28:     thresholdExceeded = 1;
 13771                           
 13772                           ;incstack = 0
 13773                           ; Regs used in _adcThresholdHandler: []
 13774  0DB3  0140               	movlb	0	; select bank0
 13775  0DB4  01D7               	clrf	_thresholdExceeded
 13776  0DB5  0AD7               	incf	_thresholdExceeded,f
 13777  0DB6  0008               	return
 13778  0DB7                     __end_of_adcThresholdHandler:	
 13779  007E                     btemp	set	126	;btemp
 13780  007E                     int$flags	set	126
 13781  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        6
    BSS         122
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     38      79
    BANK1            80      2      66
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S1473$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_setColor
    _DMX_task->_CLOCK_getTime
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   23938
                                              0 BANK1      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
                           _DMX_task
      _EUSART1_SetRxInterruptHandler
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                            13    13      0    1283
                                             22 BANK0     13    13      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
                            _isDMXOn
 ---------------------------------------------------------------------------------
 (2) _isDMXOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_setColor                                        22    19      3    1218
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DMX_task                                             4     4      0      65
                                              2 BANK0      4     4      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      4     4      0   11216
                                             34 BANK0      4     4      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    4     1      3     165
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0    4467
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum                                  7     5      2    4467
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _TM1650_setDigit                                      7     4      3    2952
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (11) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     _TM1650_isEnabled
     ___lwdiv
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
       ___lwmod
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
   _DMX_task
     _CLOCK_getTime
   _EUSART1_SetRxInterruptHandler
   _LED_task
     _BEAT_detected
     _CLOCK_getTime
     _LED_setColor
     _isDMXOn
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      BD       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2      42       8       82.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      BD      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 13:34:12 2019

                      _eusart1TxBufferRemaining 006E                        ??_ADCC_SetUpperThreshold 0022  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0076  
                                            _up 005C                              __size_of_BEAT_init 0014  
                            __size_of_BEAT_task 00C2                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 0DB3                                             l810 0285  
                                           l808 0222                                             _bpm 00C2  
                       __size_of_PMD_Initialize 000A                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                   __CFG_BBEN$OFF 0000  
                               __end_of_DMX_ISR 0787                                __end_of_I2C1_ISR 01D2  
                                          l4103 03D4                                            l4131 0243  
                                          l4045 02D0                                            l4125 021C  
                                          l4205 069B                                            l4119 01EC  
                                          l4081 0342                                            l4065 0304  
                                          l4049 02D7                                            l4233 0619  
                                          l4067 0317                                            l4139 026F  
                                          l4091 039D                                            l3613 0DBF  
                                          l4173 049F                                            l4165 0487  
                          _ADCC_StartConversion 0DF2                                            l3631 0558  
                                          l3633 055D                                            l3627 0551  
                                          l3643 07D0                                            l3725 0417  
                                          l4197 0690                                            l3671 06C4  
                                          l3663 06A6                                            l3719 0413  
                                          l3665 06B2                                            l3649 0F99  
                                          l3905 0FF4                                            l3921 0EFA  
                                          l3675 06CD                                            l3693 0750  
                                          l3687 0738                                            l3927 0ECB  
                                          l3919 0EF6                                            l3689 0744  
                                          l3697 0759                                            l3929 0ECF  
                                          l3939 0E0B                                            l3879 0EBA  
                                          l3899 0FEF                                  ?_TM1650_enable 0076  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u2225 0F57  
                                          u2315 073B                                            u2245 06A9  
                                          u2335 074A                                            u2265 06B3  
                                          u2505 0329                                            u2345 0751  
                                          u2275 06BD                                            u2285 06C5  
                                          u2455 02B9                                            u2375 0453  
                                          u2565 01EF                                            u2574 020E  
                                          u2575 020D                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u2777 0603                                            _PMD5 079B  
                                          _PMD6 079C                                            _PMD7 079D  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   __CFG_FCMEN$ON 0000  
                                 ?_BUTTONS_init 0076                                   ?_BUTTONS_task 0076  
                          ?_adcThresholdHandler 0076                                            _isOn 005D  
                                          _main 05EB                                            _down 005B  
                                          _init 0F9F                                            _menu 0059  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                        ??_I2C1_MasterTRBInsert 0022                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0039  
                       __end_of_TM1650_setDigit 0F65                             __size_of_CLOCK_init 0008  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                          __size_of_address_dec 0015                            __size_of_address_inc 0016  
                I2C1_MasterWriteTRBBuild@length 0021                         __end_of_TMR0_Initialize 0EAC  
                                    _i2c1_state 0064                  ??_TMR0_DefaultInterruptHandler 0076  
                __size_of_OSCILLATOR_Initialize 0009                       I2C1_MasterTRBInsert@count 0023  
                 __end_of_OSCILLATOR_Initialize 0E43                        __end_of_TM1650_isEnabled 0DB0  
                     I2C1_MasterTRBInsert@pflag 0021                           _eusart1RxStatusBuffer 00A0  
                                         _ADCAP 010E                                           _ADACT 0117  
                              __end_of_LED_task 03DC                                           ?_main 0076  
                                         _ADCLK 0118                                           _ADCNT 0099  
                                         ?_init 0020                                           _ADPCH 009F  
                                         _ADREF 0116                               __end_of_I2C1_Stop 0F30  
                                 __CFG_WDTE$OFF 0000                                           _ADRPT 009A  
                              __end_of_DMX_task 069D                                           _LATB6 00CE  
                               __end_of___lwdiv 06D2                      _ADCC_ADTI_InterruptHandler 00D0  
                                         i1l106 0F7F                                           i1l402 009C  
                                         i1l413 00EA                                           i1l414 00F6  
                                         i1l431 015D                                           i1l407 00C7  
                                         i1l432 016B                                           i1l424 012E  
                                         i1l408 00C8                                           i1l280 000E  
                               __end_of___lwmod 075E                                           i1l443 0E81  
                                         i1l283 0017                                           i1l436 0192  
                                         i1l428 014E                                           i1l285 001E  
                                         i1l294 0037                                           i1l287 0028  
                                         i1l289 0032                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
                               __end_of_isDMXOn 0DB3                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                         _TXREG 011A               __size_of_TMR0_SetInterruptHandler 0009  
                  __end_of_I2C1_BusCollisionISR 0DAD                       ?_TMR0_SetInterruptHandler 0020  
                          _EUSART1_Transmit_ISR 0F65                               ??_I2C1_Initialize 0020  
                              __end_of_TMR0_ISR 0E73                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                               __end_of_initLED 07AF                                           _delay 00DE  
                                         _dmxOn 0054                                           _count 00C6  
                                         _enter 005A                           ?_ADCC_StartConversion 0076  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0076  
                             __end_of_BEAT_init 0E98                               __end_of_BEAT_task 035E  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0DA6     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 0DA5                 I2C1_MasterWriteTRBBuild@address 0022  
                               __initialization 003B                            TM1650_setDigit@digit 003A  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                    __end_of_EUSART1_Initialize 05AC                                    __end_of_main 0629  
                                  __end_of_init 0FBF                                 _CONTROLLER_init 0DD8  
                               _CONTROLLER_task 0456                                   ?_LED_setColor 0020  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 0DD0  
                   ?_INTERRUPT_InterruptManager 0076                                     _i2c1_object 0046  
                                        ??_main 00E0                                          ??_init 0023  
                                     ??_DMX_ISR 0076                           ?_EUSART1_Transmit_ISR 0076  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR1L 030C                                          _CCPR3H 0315  
                                        _CCPR2L 0310                                          _CCPR4H 0319  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                          i1l3103 0701  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        i1l3203 0123                                          _ODCONC 1F50  
                                        _RC6PPS 1F26                                          i1l3151 00BA  
                                        i1l3241 0179                                          i1l3225 0151  
                                        i1l3217 013C                                          i1l3163 00D4  
                                        i1l3155 00C1                                          _RC7PPS 1F27  
                                        i1l3093 06E5                                          i1l3253 0196  
                                        i1l3237 0172                                          i1l3255 0199  
                                        i1l3183 010F                                          i1l3263 01A5  
                                        i1l3257 019D                                          i1l3169 00E4  
                                        i1l3099 06F3                                          i1l4263 01AE  
                                        i1l3475 076B                                          i1l3477 0770  
                                        i1l2945 0F2E                                  __CFG_WDTCCS$SC 0000  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                          _TRISC3 00A3  
                                        _TRISB6 009E                                          _TRISC4 00A4  
                                        _TRISC6 00A6                                          _TRISC7 00A7  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0034                              ??_I2C1_MasterWrite 002B  
                                _p_i2c1_current 0061                                  ??_LED_setColor 0023  
                   __end_of_TM1650_fastPrintNum 0456                               _ADCC_ThresholdISR 0E59  
                                __CFG_STVREN$ON 0000                                       ??___lwdiv 0024  
                                     ??___lwmod 0024                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                       ??_isDMXOn 0020  
                              ?_TMR0_Initialize 0076                              ?_ADCC_ThresholdISR 0076  
                                     ?_I2C1_ISR 0076                          __size_of_BEAT_detected 0009  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                _lastActiveTime 00C4                            __size_of_TM1650_init 0004  
                                     ??_initLED 0020                                 _ADCC_Initialize 07D6  
                                _PMD_Initialize 0E43                                    ??_CLOCK_init 0022  
                           ??_ADCC_ThresholdISR 0076                          ??_ADCC_StartConversion 0020  
          ADCC_SetUpperThreshold@upperThreshold 0020    ADCC_SetADTIInterruptHandler@InterruptHandler 0020  
      TMR0_SetInterruptHandler@InterruptHandler 0020                          _ADCC_SetUpperThreshold 0DE9  
                 I2C1_MasterWriteTRBBuild@pdata 0020                                 _eusart1RxBuffer 00A8  
                               _eusart1TxBuffer 00B0                               _SYSTEM_Initialize 0ED6  
                       __end_of__initialization 0085                         __end_of_CONTROLLER_init 0DE0  
                       __end_of_CONTROLLER_task 04C4                              ?_SYSTEM_Initialize 0076  
                                     ?_LED_task 0076                                       ?_DMX_task 0076  
                                _i2c1_trb_count 0063                  __size_of_EUSART1_RxDataHandler 0017  
                     __end_of_ADCC_ThresholdISR 0E66                   __end_of_EUSART1_RxDataHandler 0F18  
                         _I2C1_FunctionComplete 0E73                            _I2C1_BusCollisionISR 0DAA  
                                __pcstackCOMMON 0076                              __end_of_CLOCK_init 0DD8  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK0 07FC  
                                  __pidataBANK1 0002                             ??_SYSTEM_Initialize 0023  
                                     ?_TMR0_ISR 0076                     TM1650_fastPrintNum@numWrite 003E  
                                    ??_I2C1_ISR 0078                            __end_of_BUTTONS_init 05EB  
                        __end_of_PMD_Initialize 0E4D                            __end_of_BUTTONS_task 029C  
                        ??_EUSART1_Transmit_ISR 0076                     __end_of_EUSART1_Receive_ISR 0704  
                             _thresholdExceeded 0057                     ADCC_StartConversion@channel 0020  
                             LED_setColor@green 0020                               LED_setColor@white 0021  
                     __end_of_SYSTEM_Initialize 0EEB                                   _eusart1RxHead 0071  
                                 _eusart1TxHead 0073                                   _eusart1RxTail 0070  
                                    __pbssBANK0 0046                                      __pbssBANK1 00A0  
                                    __pbssBANK2 0120                                   _eusart1TxTail 0072  
             _EUSART1_TxDefaultInterruptHandler 00DC                 ??_EUSART1_SetRxInterruptHandler 0022  
                                 _BEAT_detected 0E04                                      ??_LED_task 0036  
                                    ??_DMX_task 0022                           ?_I2C1_BusCollisionISR 0076  
               __end_of_EUSART1_SetErrorHandler 0E16                                      __pmaintext 05EB  
              __end_of_TMR0_SetInterruptHandler 0E04                                      ??_TMR0_ISR 0076  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 07FC                                      __pintentry 0004  
                               _I2C1_Initialize 0F30                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 0DE9           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 0DE0                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0076                               ?_TM1650_isEnabled 0076  
        __end_of_EUSART1_SetFramingErrorHandler 0E1F         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 0E16                                    LED_task@time 0041  
                                       _DMX_ISR 075E                              ??_TM1650_isEnabled 0020  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       _I2C1_Stop 0F18  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                    _dmxPointer 00BC                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 0665  
                             __end_of_charTable 0524                             _CLOCK_timerCallback 0DC4  
                                ?_BEAT_detected 0076                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0042  
                              ?_CONTROLLER_init 0076                                   ??_address_inc 0042  
                              ?_CONTROLLER_task 0076                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0076                                       _BEAT_init 0E84  
                 __size_of_I2C1_MasterTRBInsert 0045                                       _BEAT_task 029C  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 0062  
                          ?_CLOCK_timerCallback 0076                                         ___lwdiv 069D  
                                       ___lwmod 0731                                         _address 006C  
                                       _isDMXOn 0DB0                                         _dmxData 25EF  
                                       __ptext1 0787                                         __ptext2 0DBB  
                                       __ptext3 0ED6                                         __ptext4 0E98  
                                       __ptext5 0E43                                         __ptext6 0704  
                                       __ptext7 0E3A                                         __ptext8 0F30  
                                       __ptext9 0569                   ?_ADCC_SetADTIInterruptHandler 0020  
                               __CFG_WRTAPP$OFF 0000                                         _initLED 0787  
                                       _lastRun 00C0                                    DMX_task@time 0024  
                         _OSCILLATOR_Initialize 0E3A                                       _T2CONbits 028E  
                                       _buttons 0120                              _EUSART1_Initialize 0569  
                      ??_PIN_MANAGER_Initialize 0020                                 __CFG_WRTSAF$OFF 0000  
                                    ?_I2C1_Stop 0076                     __end_of_adcThresholdHandler 0DB7  
                 ??_EUSART1_DefaultErrorHandler 0077                      __size_of_SYSTEM_Initialize 0015  
                          I2C1_ISR@pi2c_buf_ptr 0060                                         clrloop0 0E4E  
                          end_of_initialization 0085                             ?_EUSART1_Initialize 0076  
                                       init@btn 0024                                         init@pin 0022  
                   _EUSART1_OverrunErrorHandler 00D6                          ??_I2C1_BusCollisionISR 0076  
                       __end_of_I2C1_Initialize 0F49           __end_of_EUSART1_SetRxInterruptHandler 0E31  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 0E28  
                                    ?_BEAT_init 0076                                      ?_BEAT_task 0076  
                         __size_of_BUTTONS_init 003F                           __size_of_BUTTONS_task 00CA  
                         ??_CLOCK_timerCallback 0076                             __end_of_address_dec 0ED6  
                           __end_of_address_inc 0F01                                ?_ADCC_Initialize 0076  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                      _TMR0_SetInterruptHandler 0DFB                       __size_of_I2C1_MasterWrite 0027  
                             __size_of_I2C1_ISR 0149                               __end_of_writeData 0F9F  
                       ?_ADCC_SetUpperThreshold 0020                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 0EC1               I2C1_ISR@i2c_10bit_address_restart 005E  
                        __size_of_CLOCK_getTime 0006                                    _BUTTONS_init 05AC  
                                  _BUTTONS_task 01D2                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
          __size_of_EUSART1_DefaultErrorHandler 0003                               __size_of_LED_task 007E  
                             __size_of_DMX_task 0038                  ??_ADCC_DefaultInterruptHandler 0076  
                                 ??_TM1650_init 0035                         I2C1_MasterWrite@trBlock 00CC  
                             __size_of_TMR0_ISR 000D                        I2C1_Stop@completion_code 0077  
                      __size_of_TM1650_setDigit 001C                          ?_OSCILLATOR_Initialize 0076  
                __end_of_ADCC_SetUpperThreshold 0DF2                    __size_of_TM1650_fastPrintNum 007A  
                         __size_of_LED_setColor 003C                                    _lastDetected 0056  
                           start_initialization 003B                                     ??_I2C1_Stop 0076  
                      __size_of_TMR0_Initialize 0014                 __size_of_PIN_MANAGER_Initialize 002D  
                           TM1650_setDigit@data 0034   EUSART1_SetRxInterruptHandler@interruptHandler 0020  
 EUSART1_SetTxInterruptHandler@interruptHandler 0020                   __size_of_ADCC_StartConversion 0009  
             __size_of_I2C1_MasterWriteTRBBuild 0020                       ?_I2C1_MasterWriteTRBBuild 0020  
                             _BUTTONS_isClicked 0FDF                              ?_BUTTONS_isClicked 0020  
                                   _address_dec 0EC1                                     _address_inc 0EEB  
                                   ??_BEAT_init 0022                                ?_I2C1_Initialize 0076  
                                   ??_BEAT_task 0028                                __CFG_LPBOREN$OFF 0000  
                           ??_BUTTONS_isClicked 0023                                ??_PMD_Initialize 0020  
                         _EUSART1_RxDataHandler 0F01                                    _LED_setColor 0629  
                ?_EUSART1_SetRxInterruptHandler 0020                                     __pdataBANK0 006A  
                                   __pdataBANK1 00DE                                   _CLOCK_getTime 0DCA  
                  I2C1_MasterWriteTRBBuild@ptrb 0026                                  _eusart1RxCount 0066  
                                   __pbssBIGRAM 25EF                                        ?_DMX_ISR 0076  
                           __end_of_TM1650_init 0DBF                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 00DA                                       ___latbits 0003  
                 __size_of_EUSART1_Transmit_ISR 001D                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00E0                                   _i2c1_tr_queue 0067  
                     __end_of_BUTTONS_isClicked 1000                 ??_EUSART1_SetTxInterruptHandler 0022  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0076                       __size_of_TM1650_isEnabled 0003  
                  __size_of_EUSART1_Receive_ISR 0032                                LED_setColor@blue 0022  
                                     _charTable 04C4                           _TMR0_InterruptHandler 00D2  
                                     __pnvBANK0 006E                                       __pnvBANK1 00D0  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 0704  
                                      ?___lwdiv 0020                                        ?___lwmod 0020  
                                ?_CLOCK_getTime 0020                                        ?_isDMXOn 0076  
                                      _I2C1_ISR 0089                    ??_INTERRUPT_InterruptManager 007C  
                               writeData@status 0033                                _I2C1_MasterWrite 07AF  
                                      _BAUD1CON 011F                                        ?_initLED 0076  
                  __end_of_I2C1_MasterTRBInsert 0569      __end_of_EUSART1_DefaultOverrunErrorHandler 0DBB  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 0DB7  
                          _EUSART1_ErrorHandler 00D4                         _EUSART1_SetErrorHandler 0E0D  
                             ??_TM1650_setDigit 0037                                ___lwdiv@quotient 0026  
                                      _T2CLKCON 0290        __end_of_I2C1_WaitForLastPacketToComplete 0DC4  
     __size_of_I2C1_WaitForLastPacketToComplete 0005              ??_I2C1_WaitForLastPacketToComplete 0020  
             ?_I2C1_WaitForLastPacketToComplete 0076                _I2C1_WaitForLastPacketToComplete 0DBF  
                        I2C1_MasterRead@trBlock 00C8                               ??_TMR0_Initialize 0022  
       EUSART1_SetErrorHandler@interruptHandler 0020                         BUTTONS_isClicked@button 0023  
                                     clear_ram0 0E4D                                        _PIE0bits 0716  
                                      _PIE1bits 0717                                        _PIE3bits 0719  
                                      _LED_task 035E                                        _DMX_task 0665  
           __size_of_INTERRUPT_InterruptManager 0035                      ??_TMR0_SetInterruptHandler 0022  
                                      _PIR0bits 070C                                        _PIR1bits 070D  
                                      _PIR3bits 070F                            TM1650_fastPrintNum@i 0040  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0076  
                           CONTROLLER_task@time 0044                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 0E66                                        _SSP1STAT 018F  
                      __size_of_CONTROLLER_init 0008                        __size_of_CONTROLLER_task 006E  
                                   _TM1650_init 0DBB                                       _threshold 006A  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                              __size_of_DMX_ISR 0029                                       _writeData 0F82  
                    __size_of_BUTTONS_isClicked 0021                    __size_of_adcThresholdHandler 0004  
                   __end_of_CLOCK_timerCallback 0DCA                                BUTTONS_task@time 0026  
                           _TM1650_fastPrintNum 03DC                                      _ADSTATbits 0115  
                            controller@lastTime 004D           __end_of_EUSART1_SetTxInterruptHandler 0E3A  
        __size_of_EUSART1_SetTxInterruptHandler 0009                   _EUSART1_SetTxInterruptHandler 0E31  
                 __size_of_I2C1_BusCollisionISR 0003                                 ??_CLOCK_getTime 0022  
                        I2C1_ISR@i2c_bytes_left 005F                         ??_OSCILLATOR_Initialize 0020  
                   __size_of_EUSART1_Initialize 0043                                __size_of___lwdiv 0035  
                              __size_of___lwmod 002D                                __size_of_isDMXOn 0003  
              __end_of_I2C1_MasterWriteTRBBuild 0FDF                            ?_TM1650_fastPrintNum 003B  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                               LED_setColor@lo1 0027                                 LED_setColor@lo2 002B  
                           TM1650_enable@enable 0034                                 LED_setColor@lo3 002F  
                               LED_setColor@lo4 0033             __end_of_EUSART1_DefaultErrorHandler 0DAA  
                   _EUSART1_DefaultErrorHandler 0DA7                                 LED_setColor@red 0035  
                                   _currentTime 0051                                      _CLOCK_init 0DD0  
                              __size_of_initLED 0028                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0074                                 ___lwdiv@counter 0025  
                                      _detected 0058                                      ?_writeData 002E  
                                      __ptext10 0E31                                        __ptext11 0E28  
                                      __ptext20 0665                                        __ptext12 0E1F  
                                      __ptext21 0456                                        __ptext13 0E16  
                                      __ptext30 0F82                                        __ptext22 0EEB  
                                      __ptext14 0E0D                                        __ptext31 07AF  
                                      __ptext23 0EC1                                        __ptext15 07D6  
                                      __ptext40 029C                                        __ptext32 0FBF  
                                      __ptext24 0EAC                                        __ptext16 035E  
                                      __ptext41 069D                                        __ptext33 0524  
                                      __ptext25 0FDF                                        __ptext17 0DB0  
                                      __ptext50 0DC4                                        __ptext42 0DAD  
                                      __ptext34 0DBF                                        __ptext26 0DD8  
                                      __ptext18 0629                                        __ptext51 0DA6  
                                      __ptext43 0DCA                                        __ptext35 0DD0  
                                      __ptext27 03DC                                        __ptext19 0E04  
                                      __ptext60 0DA5                                        __ptext52 0089  
                                      __ptext44 0E84                                        __ptext36 0DFB  
                                      __ptext28 0731                                        __ptext61 0DA7  
                                      __ptext53 0F18                                        __ptext45 0DF2  
                                      __ptext37 01D2                                        __ptext29 0F49  
                                      __ptext62 0F01                                        __ptext54 0E73  
                                      __ptext46 0DE9                                        __ptext38 05AC  
                                      __ptext63 0E59                                        __ptext55 0DAA  
                                      __ptext47 0DE0                                        __ptext39 0F9F  
                                      __ptext64 0DA4                                        __ptext56 0F65  
                                      __ptext65 0DB3                                        __ptext57 075E  
                                      __ptext49 0E66                                        __ptext58 06D2  
                                      __ptext59 0DB7                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                                        _offCheck 0055  
                         __end_of_BEAT_detected 0E0D                                        _lastBeat 004B  
                                      _lastTime 004F                                _TM1650_isEnabled 0DAD  
                                 __size_of_main 003E                                   __size_of_init 0020  
                                  ?_address_dec 0076            __end_of_TMR0_DefaultInterruptHandler 0DA7  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 0DA6  
                                  ?_address_inc 0076                            __CFG_WDTCWS$WDTCWS_7 0000  
                          _I2C1_MasterTRBInsert 0524                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                    __end_of_ADCC_StartConversion 0DFB  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0039  
                    _INTERRUPT_InterruptManager 0004                          __size_of_TM1650_enable 0015  
                   _EUSART1_FramingErrorHandler 00D8                             _EUSART1_Receive_ISR 06D2  
                         ??_TM1650_fastPrintNum 003D                               TM1650_setDigit@dp 0035  
                                    _INTCONbits 000B                               ??_CONTROLLER_init 0042  
                             ??_CONTROLLER_task 0042                                        init@port 0020  
          __end_of_ADCC_DefaultInterruptHandler 0DA5           __size_of_ADCC_DefaultInterruptHandler 0001  
                  _ADCC_DefaultInterruptHandler 0DA4                                        intlevel1 0000  
                                _thresholdCount 00BE                            ?_EUSART1_Receive_ISR 0076  
                                 writeData@data 002E                                ___lwmod@dividend 0022  
                       ?_PIN_MANAGER_Initialize 0076                        __end_of_I2C1_MasterWrite 07D6  
                             __CFG_CLKOUTEN$OFF 0000                  __size_of_I2C1_FunctionComplete 0011  
        __end_of_EUSART1_SetOverrunErrorHandler 0E28         __size_of_EUSART1_SetOverrunErrorHandler 0009  
                _EUSART1_SetOverrunErrorHandler 0E1F                   __end_of_I2C1_FunctionComplete 0E84  
                         ?_I2C1_MasterTRBInsert 0020                    __end_of_EUSART1_Transmit_ISR 0F82  
                                   led@lastTime 00B8                   ?_TMR0_DefaultInterruptHandler 0076  
                        TM1650_fastPrintNum@num 003B  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 0F49  
                      __size_of_I2C1_Initialize 0019                              _eusart1RxLastError 0065  
                                 __pstringtext1 04C4                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0020  
                                   ?_CLOCK_init 0076                                 _TMR0_Initialize 0E98  
                               ___lwmod@counter 0025                                     dmx@lastTime 00BA  
                      _I2C1_MasterWriteTRBBuild 0FBF                                     ??_writeData 002F  
                                    _TX1STAbits 011E                  ??_ADCC_SetADTIInterruptHandler 0022  
                         ??_EUSART1_Receive_ISR 0077                  __end_of_PIN_MANAGER_Initialize 0731  
                             ??_ADCC_Initialize 0022                                   _TM1650_enable 0EAC  
                            __size_of_I2C1_Stop 0018                   ?_ADCC_DefaultInterruptHandler 0076  
                                   _toggleCheck 0053                         ??_EUSART1_RxDataHandler 0076  
