

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 29 15:24:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	intentry,global,class=CODE,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	dabs	1,0xCA0,32
    85                           	dabs	1,0xC20,80
    86                           	dabs	1,0xBA0,80
    87                           	dabs	1,0xB20,80
    88                           	dabs	1,0xAA0,80
    89                           	dabs	1,0xA20,80
    90                           	dabs	1,0x9A0,80
    91                           	dabs	1,0x96F,1
    92                           	dabs	1,0x25EF,0,_dmxData
    93                           	dabs	1,0x7E,2
    94  0000                     
    95                           ; Version 2.05
    96                           ; Generated 20/12/2018 GMT
    97                           ; 
    98                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F18446 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  008C                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  008E                     	;# 
   155  008F                     	;# 
   156  0090                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0094                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  010F                     	;# 
   184  0110                     	;# 
   185  0111                     	;# 
   186  0112                     	;# 
   187  0113                     	;# 
   188  0114                     	;# 
   189  0115                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  0118                     	;# 
   193  0119                     	;# 
   194  0119                     	;# 
   195  0119                     	;# 
   196  011A                     	;# 
   197  011A                     	;# 
   198  011A                     	;# 
   199  011B                     	;# 
   200  011B                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011B                     	;# 
   204  011C                     	;# 
   205  011C                     	;# 
   206  011C                     	;# 
   207  011D                     	;# 
   208  011D                     	;# 
   209  011D                     	;# 
   210  011E                     	;# 
   211  011E                     	;# 
   212  011E                     	;# 
   213  011F                     	;# 
   214  011F                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  011F                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  018E                     	;# 
   221  018F                     	;# 
   222  0190                     	;# 
   223  0191                     	;# 
   224  0192                     	;# 
   225  0196                     	;# 
   226  0197                     	;# 
   227  0198                     	;# 
   228  0199                     	;# 
   229  019A                     	;# 
   230  019B                     	;# 
   231  019C                     	;# 
   232  020C                     	;# 
   233  020D                     	;# 
   234  020E                     	;# 
   235  020E                     	;# 
   236  020F                     	;# 
   237  020F                     	;# 
   238  0210                     	;# 
   239  0210                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0213                     	;# 
   244  0214                     	;# 
   245  0214                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0216                     	;# 
   249  0216                     	;# 
   250  0217                     	;# 
   251  0217                     	;# 
   252  0218                     	;# 
   253  0219                     	;# 
   254  021A                     	;# 
   255  021A                     	;# 
   256  021B                     	;# 
   257  021B                     	;# 
   258  021C                     	;# 
   259  021C                     	;# 
   260  021D                     	;# 
   261  021D                     	;# 
   262  021E                     	;# 
   263  021F                     	;# 
   264  028C                     	;# 
   265  028C                     	;# 
   266  028D                     	;# 
   267  028D                     	;# 
   268  028E                     	;# 
   269  028F                     	;# 
   270  0290                     	;# 
   271  0291                     	;# 
   272  0292                     	;# 
   273  0292                     	;# 
   274  0293                     	;# 
   275  0293                     	;# 
   276  0294                     	;# 
   277  0295                     	;# 
   278  0296                     	;# 
   279  0297                     	;# 
   280  0298                     	;# 
   281  0298                     	;# 
   282  0299                     	;# 
   283  0299                     	;# 
   284  029A                     	;# 
   285  029B                     	;# 
   286  029C                     	;# 
   287  029D                     	;# 
   288  029F                     	;# 
   289  030C                     	;# 
   290  030C                     	;# 
   291  030D                     	;# 
   292  030E                     	;# 
   293  030F                     	;# 
   294  0310                     	;# 
   295  0310                     	;# 
   296  0311                     	;# 
   297  0312                     	;# 
   298  0313                     	;# 
   299  0314                     	;# 
   300  0314                     	;# 
   301  0315                     	;# 
   302  0316                     	;# 
   303  0317                     	;# 
   304  0318                     	;# 
   305  0318                     	;# 
   306  0319                     	;# 
   307  031A                     	;# 
   308  031B                     	;# 
   309  038C                     	;# 
   310  038C                     	;# 
   311  038D                     	;# 
   312  038E                     	;# 
   313  0390                     	;# 
   314  0390                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  048C                     	;# 
   318  048C                     	;# 
   319  048D                     	;# 
   320  048E                     	;# 
   321  048F                     	;# 
   322  048F                     	;# 
   323  0490                     	;# 
   324  0491                     	;# 
   325  0492                     	;# 
   326  0492                     	;# 
   327  0493                     	;# 
   328  0494                     	;# 
   329  0495                     	;# 
   330  0495                     	;# 
   331  0496                     	;# 
   332  0497                     	;# 
   333  0498                     	;# 
   334  0499                     	;# 
   335  049A                     	;# 
   336  049B                     	;# 
   337  049C                     	;# 
   338  049D                     	;# 
   339  058C                     	;# 
   340  058C                     	;# 
   341  058D                     	;# 
   342  058E                     	;# 
   343  058F                     	;# 
   344  058F                     	;# 
   345  0590                     	;# 
   346  0591                     	;# 
   347  0592                     	;# 
   348  0593                     	;# 
   349  059C                     	;# 
   350  059C                     	;# 
   351  059D                     	;# 
   352  059D                     	;# 
   353  059E                     	;# 
   354  059F                     	;# 
   355  060C                     	;# 
   356  060C                     	;# 
   357  060D                     	;# 
   358  060D                     	;# 
   359  060E                     	;# 
   360  060F                     	;# 
   361  0610                     	;# 
   362  0611                     	;# 
   363  0612                     	;# 
   364  0613                     	;# 
   365  0614                     	;# 
   366  0616                     	;# 
   367  0616                     	;# 
   368  0617                     	;# 
   369  0617                     	;# 
   370  0618                     	;# 
   371  0619                     	;# 
   372  061A                     	;# 
   373  061B                     	;# 
   374  061C                     	;# 
   375  061D                     	;# 
   376  061E                     	;# 
   377  070C                     	;# 
   378  070D                     	;# 
   379  070E                     	;# 
   380  070F                     	;# 
   381  0710                     	;# 
   382  0711                     	;# 
   383  0712                     	;# 
   384  0713                     	;# 
   385  0714                     	;# 
   386  0716                     	;# 
   387  0717                     	;# 
   388  0718                     	;# 
   389  0719                     	;# 
   390  071A                     	;# 
   391  071B                     	;# 
   392  071C                     	;# 
   393  071D                     	;# 
   394  071E                     	;# 
   395  0796                     	;# 
   396  0797                     	;# 
   397  0798                     	;# 
   398  0799                     	;# 
   399  079A                     	;# 
   400  079B                     	;# 
   401  079C                     	;# 
   402  079D                     	;# 
   403  080C                     	;# 
   404  080D                     	;# 
   405  080E                     	;# 
   406  080F                     	;# 
   407  0810                     	;# 
   408  0811                     	;# 
   409  0812                     	;# 
   410  0813                     	;# 
   411  0814                     	;# 
   412  081A                     	;# 
   413  081A                     	;# 
   414  081B                     	;# 
   415  081C                     	;# 
   416  081C                     	;# 
   417  081D                     	;# 
   418  081E                     	;# 
   419  081F                     	;# 
   420  088C                     	;# 
   421  088D                     	;# 
   422  088E                     	;# 
   423  088F                     	;# 
   424  0890                     	;# 
   425  0891                     	;# 
   426  0892                     	;# 
   427  0893                     	;# 
   428  0895                     	;# 
   429  0896                     	;# 
   430  0897                     	;# 
   431  0898                     	;# 
   432  0899                     	;# 
   433  089A                     	;# 
   434  089B                     	;# 
   435  090C                     	;# 
   436  090E                     	;# 
   437  090F                     	;# 
   438  091F                     	;# 
   439  098F                     	;# 
   440  098F                     	;# 
   441  0990                     	;# 
   442  0991                     	;# 
   443  0992                     	;# 
   444  0993                     	;# 
   445  0994                     	;# 
   446  0995                     	;# 
   447  0996                     	;# 
   448  0997                     	;# 
   449  1E0F                     	;# 
   450  1E10                     	;# 
   451  1E11                     	;# 
   452  1E12                     	;# 
   453  1E13                     	;# 
   454  1E14                     	;# 
   455  1E15                     	;# 
   456  1E16                     	;# 
   457  1E17                     	;# 
   458  1E18                     	;# 
   459  1E19                     	;# 
   460  1E1A                     	;# 
   461  1E1B                     	;# 
   462  1E1C                     	;# 
   463  1E1D                     	;# 
   464  1E1E                     	;# 
   465  1E1F                     	;# 
   466  1E20                     	;# 
   467  1E21                     	;# 
   468  1E22                     	;# 
   469  1E23                     	;# 
   470  1E24                     	;# 
   471  1E25                     	;# 
   472  1E26                     	;# 
   473  1E27                     	;# 
   474  1E28                     	;# 
   475  1E29                     	;# 
   476  1E2A                     	;# 
   477  1E2B                     	;# 
   478  1E2C                     	;# 
   479  1E2D                     	;# 
   480  1E2E                     	;# 
   481  1E2F                     	;# 
   482  1E30                     	;# 
   483  1E31                     	;# 
   484  1E32                     	;# 
   485  1E33                     	;# 
   486  1E34                     	;# 
   487  1E35                     	;# 
   488  1E36                     	;# 
   489  1E37                     	;# 
   490  1E8F                     	;# 
   491  1E90                     	;# 
   492  1E91                     	;# 
   493  1E92                     	;# 
   494  1E93                     	;# 
   495  1E94                     	;# 
   496  1E95                     	;# 
   497  1E96                     	;# 
   498  1E97                     	;# 
   499  1E9C                     	;# 
   500  1E9D                     	;# 
   501  1E9E                     	;# 
   502  1EA1                     	;# 
   503  1EA2                     	;# 
   504  1EA3                     	;# 
   505  1EA4                     	;# 
   506  1EA9                     	;# 
   507  1EAA                     	;# 
   508  1EB1                     	;# 
   509  1EB2                     	;# 
   510  1EB8                     	;# 
   511  1EB9                     	;# 
   512  1EBA                     	;# 
   513  1EBB                     	;# 
   514  1EBC                     	;# 
   515  1EBD                     	;# 
   516  1EBE                     	;# 
   517  1EC3                     	;# 
   518  1EC5                     	;# 
   519  1EC6                     	;# 
   520  1EC7                     	;# 
   521  1EC8                     	;# 
   522  1EC9                     	;# 
   523  1ECA                     	;# 
   524  1ECB                     	;# 
   525  1ECB                     	;# 
   526  1ECB                     	;# 
   527  1ECC                     	;# 
   528  1ECC                     	;# 
   529  1ECC                     	;# 
   530  1F10                     	;# 
   531  1F11                     	;# 
   532  1F12                     	;# 
   533  1F14                     	;# 
   534  1F15                     	;# 
   535  1F1C                     	;# 
   536  1F1D                     	;# 
   537  1F1E                     	;# 
   538  1F1F                     	;# 
   539  1F20                     	;# 
   540  1F21                     	;# 
   541  1F22                     	;# 
   542  1F23                     	;# 
   543  1F24                     	;# 
   544  1F25                     	;# 
   545  1F26                     	;# 
   546  1F27                     	;# 
   547  1F38                     	;# 
   548  1F39                     	;# 
   549  1F3A                     	;# 
   550  1F3B                     	;# 
   551  1F3C                     	;# 
   552  1F3D                     	;# 
   553  1F3E                     	;# 
   554  1F3F                     	;# 
   555  1F43                     	;# 
   556  1F44                     	;# 
   557  1F45                     	;# 
   558  1F46                     	;# 
   559  1F47                     	;# 
   560  1F48                     	;# 
   561  1F49                     	;# 
   562  1F4A                     	;# 
   563  1F4E                     	;# 
   564  1F4F                     	;# 
   565  1F50                     	;# 
   566  1F51                     	;# 
   567  1F52                     	;# 
   568  1F53                     	;# 
   569  1F54                     	;# 
   570  1F55                     	;# 
   571  1FE4                     	;# 
   572  1FE5                     	;# 
   573  1FE6                     	;# 
   574  1FE7                     	;# 
   575  1FE8                     	;# 
   576  1FE8                     	;# 
   577  1FE9                     	;# 
   578  1FEA                     	;# 
   579  1FEB                     	;# 
   580  1FED                     	;# 
   581  1FEE                     	;# 
   582  1FEF                     	;# 
   583  0000                     	;# 
   584  0001                     	;# 
   585  0002                     	;# 
   586  0003                     	;# 
   587  0004                     	;# 
   588  0005                     	;# 
   589  0006                     	;# 
   590  0007                     	;# 
   591  0008                     	;# 
   592  0009                     	;# 
   593  000A                     	;# 
   594  000B                     	;# 
   595  000C                     	;# 
   596  000D                     	;# 
   597  000E                     	;# 
   598  0012                     	;# 
   599  0013                     	;# 
   600  0014                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  008C                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0092                     	;# 
   614  0092                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0094                     	;# 
   618  0095                     	;# 
   619  0096                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009B                     	;# 
   627  009C                     	;# 
   628  009D                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  009F                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  010F                     	;# 
   638  0110                     	;# 
   639  0111                     	;# 
   640  0112                     	;# 
   641  0113                     	;# 
   642  0114                     	;# 
   643  0115                     	;# 
   644  0116                     	;# 
   645  0117                     	;# 
   646  0118                     	;# 
   647  0119                     	;# 
   648  0119                     	;# 
   649  0119                     	;# 
   650  011A                     	;# 
   651  011A                     	;# 
   652  011A                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011B                     	;# 
   656  011B                     	;# 
   657  011B                     	;# 
   658  011C                     	;# 
   659  011C                     	;# 
   660  011C                     	;# 
   661  011D                     	;# 
   662  011D                     	;# 
   663  011D                     	;# 
   664  011E                     	;# 
   665  011E                     	;# 
   666  011E                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  011F                     	;# 
   670  011F                     	;# 
   671  011F                     	;# 
   672  018C                     	;# 
   673  018D                     	;# 
   674  018E                     	;# 
   675  018F                     	;# 
   676  0190                     	;# 
   677  0191                     	;# 
   678  0192                     	;# 
   679  0196                     	;# 
   680  0197                     	;# 
   681  0198                     	;# 
   682  0199                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019C                     	;# 
   686  020C                     	;# 
   687  020D                     	;# 
   688  020E                     	;# 
   689  020E                     	;# 
   690  020F                     	;# 
   691  020F                     	;# 
   692  0210                     	;# 
   693  0210                     	;# 
   694  0211                     	;# 
   695  0211                     	;# 
   696  0212                     	;# 
   697  0213                     	;# 
   698  0214                     	;# 
   699  0214                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0216                     	;# 
   703  0216                     	;# 
   704  0217                     	;# 
   705  0217                     	;# 
   706  0218                     	;# 
   707  0219                     	;# 
   708  021A                     	;# 
   709  021A                     	;# 
   710  021B                     	;# 
   711  021B                     	;# 
   712  021C                     	;# 
   713  021C                     	;# 
   714  021D                     	;# 
   715  021D                     	;# 
   716  021E                     	;# 
   717  021F                     	;# 
   718  028C                     	;# 
   719  028C                     	;# 
   720  028D                     	;# 
   721  028D                     	;# 
   722  028E                     	;# 
   723  028F                     	;# 
   724  0290                     	;# 
   725  0291                     	;# 
   726  0292                     	;# 
   727  0292                     	;# 
   728  0293                     	;# 
   729  0293                     	;# 
   730  0294                     	;# 
   731  0295                     	;# 
   732  0296                     	;# 
   733  0297                     	;# 
   734  0298                     	;# 
   735  0298                     	;# 
   736  0299                     	;# 
   737  0299                     	;# 
   738  029A                     	;# 
   739  029B                     	;# 
   740  029C                     	;# 
   741  029D                     	;# 
   742  029F                     	;# 
   743  030C                     	;# 
   744  030C                     	;# 
   745  030D                     	;# 
   746  030E                     	;# 
   747  030F                     	;# 
   748  0310                     	;# 
   749  0310                     	;# 
   750  0311                     	;# 
   751  0312                     	;# 
   752  0313                     	;# 
   753  0314                     	;# 
   754  0314                     	;# 
   755  0315                     	;# 
   756  0316                     	;# 
   757  0317                     	;# 
   758  0318                     	;# 
   759  0318                     	;# 
   760  0319                     	;# 
   761  031A                     	;# 
   762  031B                     	;# 
   763  038C                     	;# 
   764  038C                     	;# 
   765  038D                     	;# 
   766  038E                     	;# 
   767  0390                     	;# 
   768  0390                     	;# 
   769  0391                     	;# 
   770  0392                     	;# 
   771  048C                     	;# 
   772  048C                     	;# 
   773  048D                     	;# 
   774  048E                     	;# 
   775  048F                     	;# 
   776  048F                     	;# 
   777  0490                     	;# 
   778  0491                     	;# 
   779  0492                     	;# 
   780  0492                     	;# 
   781  0493                     	;# 
   782  0494                     	;# 
   783  0495                     	;# 
   784  0495                     	;# 
   785  0496                     	;# 
   786  0497                     	;# 
   787  0498                     	;# 
   788  0499                     	;# 
   789  049A                     	;# 
   790  049B                     	;# 
   791  049C                     	;# 
   792  049D                     	;# 
   793  058C                     	;# 
   794  058C                     	;# 
   795  058D                     	;# 
   796  058E                     	;# 
   797  058F                     	;# 
   798  058F                     	;# 
   799  0590                     	;# 
   800  0591                     	;# 
   801  0592                     	;# 
   802  0593                     	;# 
   803  059C                     	;# 
   804  059C                     	;# 
   805  059D                     	;# 
   806  059D                     	;# 
   807  059E                     	;# 
   808  059F                     	;# 
   809  060C                     	;# 
   810  060C                     	;# 
   811  060D                     	;# 
   812  060D                     	;# 
   813  060E                     	;# 
   814  060F                     	;# 
   815  0610                     	;# 
   816  0611                     	;# 
   817  0612                     	;# 
   818  0613                     	;# 
   819  0614                     	;# 
   820  0616                     	;# 
   821  0616                     	;# 
   822  0617                     	;# 
   823  0617                     	;# 
   824  0618                     	;# 
   825  0619                     	;# 
   826  061A                     	;# 
   827  061B                     	;# 
   828  061C                     	;# 
   829  061D                     	;# 
   830  061E                     	;# 
   831  070C                     	;# 
   832  070D                     	;# 
   833  070E                     	;# 
   834  070F                     	;# 
   835  0710                     	;# 
   836  0711                     	;# 
   837  0712                     	;# 
   838  0713                     	;# 
   839  0714                     	;# 
   840  0716                     	;# 
   841  0717                     	;# 
   842  0718                     	;# 
   843  0719                     	;# 
   844  071A                     	;# 
   845  071B                     	;# 
   846  071C                     	;# 
   847  071D                     	;# 
   848  071E                     	;# 
   849  0796                     	;# 
   850  0797                     	;# 
   851  0798                     	;# 
   852  0799                     	;# 
   853  079A                     	;# 
   854  079B                     	;# 
   855  079C                     	;# 
   856  079D                     	;# 
   857  080C                     	;# 
   858  080D                     	;# 
   859  080E                     	;# 
   860  080F                     	;# 
   861  0810                     	;# 
   862  0811                     	;# 
   863  0812                     	;# 
   864  0813                     	;# 
   865  0814                     	;# 
   866  081A                     	;# 
   867  081A                     	;# 
   868  081B                     	;# 
   869  081C                     	;# 
   870  081C                     	;# 
   871  081D                     	;# 
   872  081E                     	;# 
   873  081F                     	;# 
   874  088C                     	;# 
   875  088D                     	;# 
   876  088E                     	;# 
   877  088F                     	;# 
   878  0890                     	;# 
   879  0891                     	;# 
   880  0892                     	;# 
   881  0893                     	;# 
   882  0895                     	;# 
   883  0896                     	;# 
   884  0897                     	;# 
   885  0898                     	;# 
   886  0899                     	;# 
   887  089A                     	;# 
   888  089B                     	;# 
   889  090C                     	;# 
   890  090E                     	;# 
   891  090F                     	;# 
   892  091F                     	;# 
   893  098F                     	;# 
   894  098F                     	;# 
   895  0990                     	;# 
   896  0991                     	;# 
   897  0992                     	;# 
   898  0993                     	;# 
   899  0994                     	;# 
   900  0995                     	;# 
   901  0996                     	;# 
   902  0997                     	;# 
   903  1E0F                     	;# 
   904  1E10                     	;# 
   905  1E11                     	;# 
   906  1E12                     	;# 
   907  1E13                     	;# 
   908  1E14                     	;# 
   909  1E15                     	;# 
   910  1E16                     	;# 
   911  1E17                     	;# 
   912  1E18                     	;# 
   913  1E19                     	;# 
   914  1E1A                     	;# 
   915  1E1B                     	;# 
   916  1E1C                     	;# 
   917  1E1D                     	;# 
   918  1E1E                     	;# 
   919  1E1F                     	;# 
   920  1E20                     	;# 
   921  1E21                     	;# 
   922  1E22                     	;# 
   923  1E23                     	;# 
   924  1E24                     	;# 
   925  1E25                     	;# 
   926  1E26                     	;# 
   927  1E27                     	;# 
   928  1E28                     	;# 
   929  1E29                     	;# 
   930  1E2A                     	;# 
   931  1E2B                     	;# 
   932  1E2C                     	;# 
   933  1E2D                     	;# 
   934  1E2E                     	;# 
   935  1E2F                     	;# 
   936  1E30                     	;# 
   937  1E31                     	;# 
   938  1E32                     	;# 
   939  1E33                     	;# 
   940  1E34                     	;# 
   941  1E35                     	;# 
   942  1E36                     	;# 
   943  1E37                     	;# 
   944  1E8F                     	;# 
   945  1E90                     	;# 
   946  1E91                     	;# 
   947  1E92                     	;# 
   948  1E93                     	;# 
   949  1E94                     	;# 
   950  1E95                     	;# 
   951  1E96                     	;# 
   952  1E97                     	;# 
   953  1E9C                     	;# 
   954  1E9D                     	;# 
   955  1E9E                     	;# 
   956  1EA1                     	;# 
   957  1EA2                     	;# 
   958  1EA3                     	;# 
   959  1EA4                     	;# 
   960  1EA9                     	;# 
   961  1EAA                     	;# 
   962  1EB1                     	;# 
   963  1EB2                     	;# 
   964  1EB8                     	;# 
   965  1EB9                     	;# 
   966  1EBA                     	;# 
   967  1EBB                     	;# 
   968  1EBC                     	;# 
   969  1EBD                     	;# 
   970  1EBE                     	;# 
   971  1EC3                     	;# 
   972  1EC5                     	;# 
   973  1EC6                     	;# 
   974  1EC7                     	;# 
   975  1EC8                     	;# 
   976  1EC9                     	;# 
   977  1ECA                     	;# 
   978  1ECB                     	;# 
   979  1ECB                     	;# 
   980  1ECB                     	;# 
   981  1ECC                     	;# 
   982  1ECC                     	;# 
   983  1ECC                     	;# 
   984  1F10                     	;# 
   985  1F11                     	;# 
   986  1F12                     	;# 
   987  1F14                     	;# 
   988  1F15                     	;# 
   989  1F1C                     	;# 
   990  1F1D                     	;# 
   991  1F1E                     	;# 
   992  1F1F                     	;# 
   993  1F20                     	;# 
   994  1F21                     	;# 
   995  1F22                     	;# 
   996  1F23                     	;# 
   997  1F24                     	;# 
   998  1F25                     	;# 
   999  1F26                     	;# 
  1000  1F27                     	;# 
  1001  1F38                     	;# 
  1002  1F39                     	;# 
  1003  1F3A                     	;# 
  1004  1F3B                     	;# 
  1005  1F3C                     	;# 
  1006  1F3D                     	;# 
  1007  1F3E                     	;# 
  1008  1F3F                     	;# 
  1009  1F43                     	;# 
  1010  1F44                     	;# 
  1011  1F45                     	;# 
  1012  1F46                     	;# 
  1013  1F47                     	;# 
  1014  1F48                     	;# 
  1015  1F49                     	;# 
  1016  1F4A                     	;# 
  1017  1F4E                     	;# 
  1018  1F4F                     	;# 
  1019  1F50                     	;# 
  1020  1F51                     	;# 
  1021  1F52                     	;# 
  1022  1F53                     	;# 
  1023  1F54                     	;# 
  1024  1F55                     	;# 
  1025  1FE4                     	;# 
  1026  1FE5                     	;# 
  1027  1FE6                     	;# 
  1028  1FE7                     	;# 
  1029  1FE8                     	;# 
  1030  1FE8                     	;# 
  1031  1FE9                     	;# 
  1032  1FEA                     	;# 
  1033  1FEB                     	;# 
  1034  1FED                     	;# 
  1035  1FEE                     	;# 
  1036  1FEF                     	;# 
  1037  0000                     	;# 
  1038  0001                     	;# 
  1039  0002                     	;# 
  1040  0003                     	;# 
  1041  0004                     	;# 
  1042  0005                     	;# 
  1043  0006                     	;# 
  1044  0007                     	;# 
  1045  0008                     	;# 
  1046  0009                     	;# 
  1047  000A                     	;# 
  1048  000B                     	;# 
  1049  000C                     	;# 
  1050  000D                     	;# 
  1051  000E                     	;# 
  1052  0012                     	;# 
  1053  0013                     	;# 
  1054  0014                     	;# 
  1055  0018                     	;# 
  1056  0019                     	;# 
  1057  001A                     	;# 
  1058  008C                     	;# 
  1059  008C                     	;# 
  1060  008D                     	;# 
  1061  008E                     	;# 
  1062  008E                     	;# 
  1063  008F                     	;# 
  1064  0090                     	;# 
  1065  0090                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0094                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009D                     	;# 
  1084  009E                     	;# 
  1085  009F                     	;# 
  1086  010C                     	;# 
  1087  010C                     	;# 
  1088  010D                     	;# 
  1089  010E                     	;# 
  1090  010F                     	;# 
  1091  010F                     	;# 
  1092  0110                     	;# 
  1093  0111                     	;# 
  1094  0112                     	;# 
  1095  0113                     	;# 
  1096  0114                     	;# 
  1097  0115                     	;# 
  1098  0116                     	;# 
  1099  0117                     	;# 
  1100  0118                     	;# 
  1101  0119                     	;# 
  1102  0119                     	;# 
  1103  0119                     	;# 
  1104  011A                     	;# 
  1105  011A                     	;# 
  1106  011A                     	;# 
  1107  011B                     	;# 
  1108  011B                     	;# 
  1109  011B                     	;# 
  1110  011B                     	;# 
  1111  011B                     	;# 
  1112  011C                     	;# 
  1113  011C                     	;# 
  1114  011C                     	;# 
  1115  011D                     	;# 
  1116  011D                     	;# 
  1117  011D                     	;# 
  1118  011E                     	;# 
  1119  011E                     	;# 
  1120  011E                     	;# 
  1121  011F                     	;# 
  1122  011F                     	;# 
  1123  011F                     	;# 
  1124  011F                     	;# 
  1125  011F                     	;# 
  1126  018C                     	;# 
  1127  018D                     	;# 
  1128  018E                     	;# 
  1129  018F                     	;# 
  1130  0190                     	;# 
  1131  0191                     	;# 
  1132  0192                     	;# 
  1133  0196                     	;# 
  1134  0197                     	;# 
  1135  0198                     	;# 
  1136  0199                     	;# 
  1137  019A                     	;# 
  1138  019B                     	;# 
  1139  019C                     	;# 
  1140  020C                     	;# 
  1141  020D                     	;# 
  1142  020E                     	;# 
  1143  020E                     	;# 
  1144  020F                     	;# 
  1145  020F                     	;# 
  1146  0210                     	;# 
  1147  0210                     	;# 
  1148  0211                     	;# 
  1149  0211                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0214                     	;# 
  1153  0214                     	;# 
  1154  0215                     	;# 
  1155  0215                     	;# 
  1156  0216                     	;# 
  1157  0216                     	;# 
  1158  0217                     	;# 
  1159  0217                     	;# 
  1160  0218                     	;# 
  1161  0219                     	;# 
  1162  021A                     	;# 
  1163  021A                     	;# 
  1164  021B                     	;# 
  1165  021B                     	;# 
  1166  021C                     	;# 
  1167  021C                     	;# 
  1168  021D                     	;# 
  1169  021D                     	;# 
  1170  021E                     	;# 
  1171  021F                     	;# 
  1172  028C                     	;# 
  1173  028C                     	;# 
  1174  028D                     	;# 
  1175  028D                     	;# 
  1176  028E                     	;# 
  1177  028F                     	;# 
  1178  0290                     	;# 
  1179  0291                     	;# 
  1180  0292                     	;# 
  1181  0292                     	;# 
  1182  0293                     	;# 
  1183  0293                     	;# 
  1184  0294                     	;# 
  1185  0295                     	;# 
  1186  0296                     	;# 
  1187  0297                     	;# 
  1188  0298                     	;# 
  1189  0298                     	;# 
  1190  0299                     	;# 
  1191  0299                     	;# 
  1192  029A                     	;# 
  1193  029B                     	;# 
  1194  029C                     	;# 
  1195  029D                     	;# 
  1196  029F                     	;# 
  1197  030C                     	;# 
  1198  030C                     	;# 
  1199  030D                     	;# 
  1200  030E                     	;# 
  1201  030F                     	;# 
  1202  0310                     	;# 
  1203  0310                     	;# 
  1204  0311                     	;# 
  1205  0312                     	;# 
  1206  0313                     	;# 
  1207  0314                     	;# 
  1208  0314                     	;# 
  1209  0315                     	;# 
  1210  0316                     	;# 
  1211  0317                     	;# 
  1212  0318                     	;# 
  1213  0318                     	;# 
  1214  0319                     	;# 
  1215  031A                     	;# 
  1216  031B                     	;# 
  1217  038C                     	;# 
  1218  038C                     	;# 
  1219  038D                     	;# 
  1220  038E                     	;# 
  1221  0390                     	;# 
  1222  0390                     	;# 
  1223  0391                     	;# 
  1224  0392                     	;# 
  1225  048C                     	;# 
  1226  048C                     	;# 
  1227  048D                     	;# 
  1228  048E                     	;# 
  1229  048F                     	;# 
  1230  048F                     	;# 
  1231  0490                     	;# 
  1232  0491                     	;# 
  1233  0492                     	;# 
  1234  0492                     	;# 
  1235  0493                     	;# 
  1236  0494                     	;# 
  1237  0495                     	;# 
  1238  0495                     	;# 
  1239  0496                     	;# 
  1240  0497                     	;# 
  1241  0498                     	;# 
  1242  0499                     	;# 
  1243  049A                     	;# 
  1244  049B                     	;# 
  1245  049C                     	;# 
  1246  049D                     	;# 
  1247  058C                     	;# 
  1248  058C                     	;# 
  1249  058D                     	;# 
  1250  058E                     	;# 
  1251  058F                     	;# 
  1252  058F                     	;# 
  1253  0590                     	;# 
  1254  0591                     	;# 
  1255  0592                     	;# 
  1256  0593                     	;# 
  1257  059C                     	;# 
  1258  059C                     	;# 
  1259  059D                     	;# 
  1260  059D                     	;# 
  1261  059E                     	;# 
  1262  059F                     	;# 
  1263  060C                     	;# 
  1264  060C                     	;# 
  1265  060D                     	;# 
  1266  060D                     	;# 
  1267  060E                     	;# 
  1268  060F                     	;# 
  1269  0610                     	;# 
  1270  0611                     	;# 
  1271  0612                     	;# 
  1272  0613                     	;# 
  1273  0614                     	;# 
  1274  0616                     	;# 
  1275  0616                     	;# 
  1276  0617                     	;# 
  1277  0617                     	;# 
  1278  0618                     	;# 
  1279  0619                     	;# 
  1280  061A                     	;# 
  1281  061B                     	;# 
  1282  061C                     	;# 
  1283  061D                     	;# 
  1284  061E                     	;# 
  1285  070C                     	;# 
  1286  070D                     	;# 
  1287  070E                     	;# 
  1288  070F                     	;# 
  1289  0710                     	;# 
  1290  0711                     	;# 
  1291  0712                     	;# 
  1292  0713                     	;# 
  1293  0714                     	;# 
  1294  0716                     	;# 
  1295  0717                     	;# 
  1296  0718                     	;# 
  1297  0719                     	;# 
  1298  071A                     	;# 
  1299  071B                     	;# 
  1300  071C                     	;# 
  1301  071D                     	;# 
  1302  071E                     	;# 
  1303  0796                     	;# 
  1304  0797                     	;# 
  1305  0798                     	;# 
  1306  0799                     	;# 
  1307  079A                     	;# 
  1308  079B                     	;# 
  1309  079C                     	;# 
  1310  079D                     	;# 
  1311  080C                     	;# 
  1312  080D                     	;# 
  1313  080E                     	;# 
  1314  080F                     	;# 
  1315  0810                     	;# 
  1316  0811                     	;# 
  1317  0812                     	;# 
  1318  0813                     	;# 
  1319  0814                     	;# 
  1320  081A                     	;# 
  1321  081A                     	;# 
  1322  081B                     	;# 
  1323  081C                     	;# 
  1324  081C                     	;# 
  1325  081D                     	;# 
  1326  081E                     	;# 
  1327  081F                     	;# 
  1328  088C                     	;# 
  1329  088D                     	;# 
  1330  088E                     	;# 
  1331  088F                     	;# 
  1332  0890                     	;# 
  1333  0891                     	;# 
  1334  0892                     	;# 
  1335  0893                     	;# 
  1336  0895                     	;# 
  1337  0896                     	;# 
  1338  0897                     	;# 
  1339  0898                     	;# 
  1340  0899                     	;# 
  1341  089A                     	;# 
  1342  089B                     	;# 
  1343  090C                     	;# 
  1344  090E                     	;# 
  1345  090F                     	;# 
  1346  091F                     	;# 
  1347  098F                     	;# 
  1348  098F                     	;# 
  1349  0990                     	;# 
  1350  0991                     	;# 
  1351  0992                     	;# 
  1352  0993                     	;# 
  1353  0994                     	;# 
  1354  0995                     	;# 
  1355  0996                     	;# 
  1356  0997                     	;# 
  1357  1E0F                     	;# 
  1358  1E10                     	;# 
  1359  1E11                     	;# 
  1360  1E12                     	;# 
  1361  1E13                     	;# 
  1362  1E14                     	;# 
  1363  1E15                     	;# 
  1364  1E16                     	;# 
  1365  1E17                     	;# 
  1366  1E18                     	;# 
  1367  1E19                     	;# 
  1368  1E1A                     	;# 
  1369  1E1B                     	;# 
  1370  1E1C                     	;# 
  1371  1E1D                     	;# 
  1372  1E1E                     	;# 
  1373  1E1F                     	;# 
  1374  1E20                     	;# 
  1375  1E21                     	;# 
  1376  1E22                     	;# 
  1377  1E23                     	;# 
  1378  1E24                     	;# 
  1379  1E25                     	;# 
  1380  1E26                     	;# 
  1381  1E27                     	;# 
  1382  1E28                     	;# 
  1383  1E29                     	;# 
  1384  1E2A                     	;# 
  1385  1E2B                     	;# 
  1386  1E2C                     	;# 
  1387  1E2D                     	;# 
  1388  1E2E                     	;# 
  1389  1E2F                     	;# 
  1390  1E30                     	;# 
  1391  1E31                     	;# 
  1392  1E32                     	;# 
  1393  1E33                     	;# 
  1394  1E34                     	;# 
  1395  1E35                     	;# 
  1396  1E36                     	;# 
  1397  1E37                     	;# 
  1398  1E8F                     	;# 
  1399  1E90                     	;# 
  1400  1E91                     	;# 
  1401  1E92                     	;# 
  1402  1E93                     	;# 
  1403  1E94                     	;# 
  1404  1E95                     	;# 
  1405  1E96                     	;# 
  1406  1E97                     	;# 
  1407  1E9C                     	;# 
  1408  1E9D                     	;# 
  1409  1E9E                     	;# 
  1410  1EA1                     	;# 
  1411  1EA2                     	;# 
  1412  1EA3                     	;# 
  1413  1EA4                     	;# 
  1414  1EA9                     	;# 
  1415  1EAA                     	;# 
  1416  1EB1                     	;# 
  1417  1EB2                     	;# 
  1418  1EB8                     	;# 
  1419  1EB9                     	;# 
  1420  1EBA                     	;# 
  1421  1EBB                     	;# 
  1422  1EBC                     	;# 
  1423  1EBD                     	;# 
  1424  1EBE                     	;# 
  1425  1EC3                     	;# 
  1426  1EC5                     	;# 
  1427  1EC6                     	;# 
  1428  1EC7                     	;# 
  1429  1EC8                     	;# 
  1430  1EC9                     	;# 
  1431  1ECA                     	;# 
  1432  1ECB                     	;# 
  1433  1ECB                     	;# 
  1434  1ECB                     	;# 
  1435  1ECC                     	;# 
  1436  1ECC                     	;# 
  1437  1ECC                     	;# 
  1438  1F10                     	;# 
  1439  1F11                     	;# 
  1440  1F12                     	;# 
  1441  1F14                     	;# 
  1442  1F15                     	;# 
  1443  1F1C                     	;# 
  1444  1F1D                     	;# 
  1445  1F1E                     	;# 
  1446  1F1F                     	;# 
  1447  1F20                     	;# 
  1448  1F21                     	;# 
  1449  1F22                     	;# 
  1450  1F23                     	;# 
  1451  1F24                     	;# 
  1452  1F25                     	;# 
  1453  1F26                     	;# 
  1454  1F27                     	;# 
  1455  1F38                     	;# 
  1456  1F39                     	;# 
  1457  1F3A                     	;# 
  1458  1F3B                     	;# 
  1459  1F3C                     	;# 
  1460  1F3D                     	;# 
  1461  1F3E                     	;# 
  1462  1F3F                     	;# 
  1463  1F43                     	;# 
  1464  1F44                     	;# 
  1465  1F45                     	;# 
  1466  1F46                     	;# 
  1467  1F47                     	;# 
  1468  1F48                     	;# 
  1469  1F49                     	;# 
  1470  1F4A                     	;# 
  1471  1F4E                     	;# 
  1472  1F4F                     	;# 
  1473  1F50                     	;# 
  1474  1F51                     	;# 
  1475  1F52                     	;# 
  1476  1F53                     	;# 
  1477  1F54                     	;# 
  1478  1F55                     	;# 
  1479  1FE4                     	;# 
  1480  1FE5                     	;# 
  1481  1FE6                     	;# 
  1482  1FE7                     	;# 
  1483  1FE8                     	;# 
  1484  1FE8                     	;# 
  1485  1FE9                     	;# 
  1486  1FEA                     	;# 
  1487  1FEB                     	;# 
  1488  1FED                     	;# 
  1489  1FEE                     	;# 
  1490  1FEF                     	;# 
  1491  0000                     	;# 
  1492  0001                     	;# 
  1493  0002                     	;# 
  1494  0003                     	;# 
  1495  0004                     	;# 
  1496  0005                     	;# 
  1497  0006                     	;# 
  1498  0007                     	;# 
  1499  0008                     	;# 
  1500  0009                     	;# 
  1501  000A                     	;# 
  1502  000B                     	;# 
  1503  000C                     	;# 
  1504  000D                     	;# 
  1505  000E                     	;# 
  1506  0012                     	;# 
  1507  0013                     	;# 
  1508  0014                     	;# 
  1509  0018                     	;# 
  1510  0019                     	;# 
  1511  001A                     	;# 
  1512  008C                     	;# 
  1513  008C                     	;# 
  1514  008D                     	;# 
  1515  008E                     	;# 
  1516  008E                     	;# 
  1517  008F                     	;# 
  1518  0090                     	;# 
  1519  0090                     	;# 
  1520  0091                     	;# 
  1521  0092                     	;# 
  1522  0092                     	;# 
  1523  0093                     	;# 
  1524  0094                     	;# 
  1525  0094                     	;# 
  1526  0095                     	;# 
  1527  0096                     	;# 
  1528  0096                     	;# 
  1529  0097                     	;# 
  1530  0098                     	;# 
  1531  0099                     	;# 
  1532  009A                     	;# 
  1533  009B                     	;# 
  1534  009B                     	;# 
  1535  009C                     	;# 
  1536  009D                     	;# 
  1537  009D                     	;# 
  1538  009E                     	;# 
  1539  009F                     	;# 
  1540  010C                     	;# 
  1541  010C                     	;# 
  1542  010D                     	;# 
  1543  010E                     	;# 
  1544  010F                     	;# 
  1545  010F                     	;# 
  1546  0110                     	;# 
  1547  0111                     	;# 
  1548  0112                     	;# 
  1549  0113                     	;# 
  1550  0114                     	;# 
  1551  0115                     	;# 
  1552  0116                     	;# 
  1553  0117                     	;# 
  1554  0118                     	;# 
  1555  0119                     	;# 
  1556  0119                     	;# 
  1557  0119                     	;# 
  1558  011A                     	;# 
  1559  011A                     	;# 
  1560  011A                     	;# 
  1561  011B                     	;# 
  1562  011B                     	;# 
  1563  011B                     	;# 
  1564  011B                     	;# 
  1565  011B                     	;# 
  1566  011C                     	;# 
  1567  011C                     	;# 
  1568  011C                     	;# 
  1569  011D                     	;# 
  1570  011D                     	;# 
  1571  011D                     	;# 
  1572  011E                     	;# 
  1573  011E                     	;# 
  1574  011E                     	;# 
  1575  011F                     	;# 
  1576  011F                     	;# 
  1577  011F                     	;# 
  1578  011F                     	;# 
  1579  011F                     	;# 
  1580  018C                     	;# 
  1581  018D                     	;# 
  1582  018E                     	;# 
  1583  018F                     	;# 
  1584  0190                     	;# 
  1585  0191                     	;# 
  1586  0192                     	;# 
  1587  0196                     	;# 
  1588  0197                     	;# 
  1589  0198                     	;# 
  1590  0199                     	;# 
  1591  019A                     	;# 
  1592  019B                     	;# 
  1593  019C                     	;# 
  1594  020C                     	;# 
  1595  020D                     	;# 
  1596  020E                     	;# 
  1597  020E                     	;# 
  1598  020F                     	;# 
  1599  020F                     	;# 
  1600  0210                     	;# 
  1601  0210                     	;# 
  1602  0211                     	;# 
  1603  0211                     	;# 
  1604  0212                     	;# 
  1605  0213                     	;# 
  1606  0214                     	;# 
  1607  0214                     	;# 
  1608  0215                     	;# 
  1609  0215                     	;# 
  1610  0216                     	;# 
  1611  0216                     	;# 
  1612  0217                     	;# 
  1613  0217                     	;# 
  1614  0218                     	;# 
  1615  0219                     	;# 
  1616  021A                     	;# 
  1617  021A                     	;# 
  1618  021B                     	;# 
  1619  021B                     	;# 
  1620  021C                     	;# 
  1621  021C                     	;# 
  1622  021D                     	;# 
  1623  021D                     	;# 
  1624  021E                     	;# 
  1625  021F                     	;# 
  1626  028C                     	;# 
  1627  028C                     	;# 
  1628  028D                     	;# 
  1629  028D                     	;# 
  1630  028E                     	;# 
  1631  028F                     	;# 
  1632  0290                     	;# 
  1633  0291                     	;# 
  1634  0292                     	;# 
  1635  0292                     	;# 
  1636  0293                     	;# 
  1637  0293                     	;# 
  1638  0294                     	;# 
  1639  0295                     	;# 
  1640  0296                     	;# 
  1641  0297                     	;# 
  1642  0298                     	;# 
  1643  0298                     	;# 
  1644  0299                     	;# 
  1645  0299                     	;# 
  1646  029A                     	;# 
  1647  029B                     	;# 
  1648  029C                     	;# 
  1649  029D                     	;# 
  1650  029F                     	;# 
  1651  030C                     	;# 
  1652  030C                     	;# 
  1653  030D                     	;# 
  1654  030E                     	;# 
  1655  030F                     	;# 
  1656  0310                     	;# 
  1657  0310                     	;# 
  1658  0311                     	;# 
  1659  0312                     	;# 
  1660  0313                     	;# 
  1661  0314                     	;# 
  1662  0314                     	;# 
  1663  0315                     	;# 
  1664  0316                     	;# 
  1665  0317                     	;# 
  1666  0318                     	;# 
  1667  0318                     	;# 
  1668  0319                     	;# 
  1669  031A                     	;# 
  1670  031B                     	;# 
  1671  038C                     	;# 
  1672  038C                     	;# 
  1673  038D                     	;# 
  1674  038E                     	;# 
  1675  0390                     	;# 
  1676  0390                     	;# 
  1677  0391                     	;# 
  1678  0392                     	;# 
  1679  048C                     	;# 
  1680  048C                     	;# 
  1681  048D                     	;# 
  1682  048E                     	;# 
  1683  048F                     	;# 
  1684  048F                     	;# 
  1685  0490                     	;# 
  1686  0491                     	;# 
  1687  0492                     	;# 
  1688  0492                     	;# 
  1689  0493                     	;# 
  1690  0494                     	;# 
  1691  0495                     	;# 
  1692  0495                     	;# 
  1693  0496                     	;# 
  1694  0497                     	;# 
  1695  0498                     	;# 
  1696  0499                     	;# 
  1697  049A                     	;# 
  1698  049B                     	;# 
  1699  049C                     	;# 
  1700  049D                     	;# 
  1701  058C                     	;# 
  1702  058C                     	;# 
  1703  058D                     	;# 
  1704  058E                     	;# 
  1705  058F                     	;# 
  1706  058F                     	;# 
  1707  0590                     	;# 
  1708  0591                     	;# 
  1709  0592                     	;# 
  1710  0593                     	;# 
  1711  059C                     	;# 
  1712  059C                     	;# 
  1713  059D                     	;# 
  1714  059D                     	;# 
  1715  059E                     	;# 
  1716  059F                     	;# 
  1717  060C                     	;# 
  1718  060C                     	;# 
  1719  060D                     	;# 
  1720  060D                     	;# 
  1721  060E                     	;# 
  1722  060F                     	;# 
  1723  0610                     	;# 
  1724  0611                     	;# 
  1725  0612                     	;# 
  1726  0613                     	;# 
  1727  0614                     	;# 
  1728  0616                     	;# 
  1729  0616                     	;# 
  1730  0617                     	;# 
  1731  0617                     	;# 
  1732  0618                     	;# 
  1733  0619                     	;# 
  1734  061A                     	;# 
  1735  061B                     	;# 
  1736  061C                     	;# 
  1737  061D                     	;# 
  1738  061E                     	;# 
  1739  070C                     	;# 
  1740  070D                     	;# 
  1741  070E                     	;# 
  1742  070F                     	;# 
  1743  0710                     	;# 
  1744  0711                     	;# 
  1745  0712                     	;# 
  1746  0713                     	;# 
  1747  0714                     	;# 
  1748  0716                     	;# 
  1749  0717                     	;# 
  1750  0718                     	;# 
  1751  0719                     	;# 
  1752  071A                     	;# 
  1753  071B                     	;# 
  1754  071C                     	;# 
  1755  071D                     	;# 
  1756  071E                     	;# 
  1757  0796                     	;# 
  1758  0797                     	;# 
  1759  0798                     	;# 
  1760  0799                     	;# 
  1761  079A                     	;# 
  1762  079B                     	;# 
  1763  079C                     	;# 
  1764  079D                     	;# 
  1765  080C                     	;# 
  1766  080D                     	;# 
  1767  080E                     	;# 
  1768  080F                     	;# 
  1769  0810                     	;# 
  1770  0811                     	;# 
  1771  0812                     	;# 
  1772  0813                     	;# 
  1773  0814                     	;# 
  1774  081A                     	;# 
  1775  081A                     	;# 
  1776  081B                     	;# 
  1777  081C                     	;# 
  1778  081C                     	;# 
  1779  081D                     	;# 
  1780  081E                     	;# 
  1781  081F                     	;# 
  1782  088C                     	;# 
  1783  088D                     	;# 
  1784  088E                     	;# 
  1785  088F                     	;# 
  1786  0890                     	;# 
  1787  0891                     	;# 
  1788  0892                     	;# 
  1789  0893                     	;# 
  1790  0895                     	;# 
  1791  0896                     	;# 
  1792  0897                     	;# 
  1793  0898                     	;# 
  1794  0899                     	;# 
  1795  089A                     	;# 
  1796  089B                     	;# 
  1797  090C                     	;# 
  1798  090E                     	;# 
  1799  090F                     	;# 
  1800  091F                     	;# 
  1801  098F                     	;# 
  1802  098F                     	;# 
  1803  0990                     	;# 
  1804  0991                     	;# 
  1805  0992                     	;# 
  1806  0993                     	;# 
  1807  0994                     	;# 
  1808  0995                     	;# 
  1809  0996                     	;# 
  1810  0997                     	;# 
  1811  1E0F                     	;# 
  1812  1E10                     	;# 
  1813  1E11                     	;# 
  1814  1E12                     	;# 
  1815  1E13                     	;# 
  1816  1E14                     	;# 
  1817  1E15                     	;# 
  1818  1E16                     	;# 
  1819  1E17                     	;# 
  1820  1E18                     	;# 
  1821  1E19                     	;# 
  1822  1E1A                     	;# 
  1823  1E1B                     	;# 
  1824  1E1C                     	;# 
  1825  1E1D                     	;# 
  1826  1E1E                     	;# 
  1827  1E1F                     	;# 
  1828  1E20                     	;# 
  1829  1E21                     	;# 
  1830  1E22                     	;# 
  1831  1E23                     	;# 
  1832  1E24                     	;# 
  1833  1E25                     	;# 
  1834  1E26                     	;# 
  1835  1E27                     	;# 
  1836  1E28                     	;# 
  1837  1E29                     	;# 
  1838  1E2A                     	;# 
  1839  1E2B                     	;# 
  1840  1E2C                     	;# 
  1841  1E2D                     	;# 
  1842  1E2E                     	;# 
  1843  1E2F                     	;# 
  1844  1E30                     	;# 
  1845  1E31                     	;# 
  1846  1E32                     	;# 
  1847  1E33                     	;# 
  1848  1E34                     	;# 
  1849  1E35                     	;# 
  1850  1E36                     	;# 
  1851  1E37                     	;# 
  1852  1E8F                     	;# 
  1853  1E90                     	;# 
  1854  1E91                     	;# 
  1855  1E92                     	;# 
  1856  1E93                     	;# 
  1857  1E94                     	;# 
  1858  1E95                     	;# 
  1859  1E96                     	;# 
  1860  1E97                     	;# 
  1861  1E9C                     	;# 
  1862  1E9D                     	;# 
  1863  1E9E                     	;# 
  1864  1EA1                     	;# 
  1865  1EA2                     	;# 
  1866  1EA3                     	;# 
  1867  1EA4                     	;# 
  1868  1EA9                     	;# 
  1869  1EAA                     	;# 
  1870  1EB1                     	;# 
  1871  1EB2                     	;# 
  1872  1EB8                     	;# 
  1873  1EB9                     	;# 
  1874  1EBA                     	;# 
  1875  1EBB                     	;# 
  1876  1EBC                     	;# 
  1877  1EBD                     	;# 
  1878  1EBE                     	;# 
  1879  1EC3                     	;# 
  1880  1EC5                     	;# 
  1881  1EC6                     	;# 
  1882  1EC7                     	;# 
  1883  1EC8                     	;# 
  1884  1EC9                     	;# 
  1885  1ECA                     	;# 
  1886  1ECB                     	;# 
  1887  1ECB                     	;# 
  1888  1ECB                     	;# 
  1889  1ECC                     	;# 
  1890  1ECC                     	;# 
  1891  1ECC                     	;# 
  1892  1F10                     	;# 
  1893  1F11                     	;# 
  1894  1F12                     	;# 
  1895  1F14                     	;# 
  1896  1F15                     	;# 
  1897  1F1C                     	;# 
  1898  1F1D                     	;# 
  1899  1F1E                     	;# 
  1900  1F1F                     	;# 
  1901  1F20                     	;# 
  1902  1F21                     	;# 
  1903  1F22                     	;# 
  1904  1F23                     	;# 
  1905  1F24                     	;# 
  1906  1F25                     	;# 
  1907  1F26                     	;# 
  1908  1F27                     	;# 
  1909  1F38                     	;# 
  1910  1F39                     	;# 
  1911  1F3A                     	;# 
  1912  1F3B                     	;# 
  1913  1F3C                     	;# 
  1914  1F3D                     	;# 
  1915  1F3E                     	;# 
  1916  1F3F                     	;# 
  1917  1F43                     	;# 
  1918  1F44                     	;# 
  1919  1F45                     	;# 
  1920  1F46                     	;# 
  1921  1F47                     	;# 
  1922  1F48                     	;# 
  1923  1F49                     	;# 
  1924  1F4A                     	;# 
  1925  1F4E                     	;# 
  1926  1F4F                     	;# 
  1927  1F50                     	;# 
  1928  1F51                     	;# 
  1929  1F52                     	;# 
  1930  1F53                     	;# 
  1931  1F54                     	;# 
  1932  1F55                     	;# 
  1933  1FE4                     	;# 
  1934  1FE5                     	;# 
  1935  1FE6                     	;# 
  1936  1FE7                     	;# 
  1937  1FE8                     	;# 
  1938  1FE8                     	;# 
  1939  1FE9                     	;# 
  1940  1FEA                     	;# 
  1941  1FEB                     	;# 
  1942  1FED                     	;# 
  1943  1FEE                     	;# 
  1944  1FEF                     	;# 
  1945  0000                     	;# 
  1946  0001                     	;# 
  1947  0002                     	;# 
  1948  0003                     	;# 
  1949  0004                     	;# 
  1950  0005                     	;# 
  1951  0006                     	;# 
  1952  0007                     	;# 
  1953  0008                     	;# 
  1954  0009                     	;# 
  1955  000A                     	;# 
  1956  000B                     	;# 
  1957  000C                     	;# 
  1958  000D                     	;# 
  1959  000E                     	;# 
  1960  0012                     	;# 
  1961  0013                     	;# 
  1962  0014                     	;# 
  1963  0018                     	;# 
  1964  0019                     	;# 
  1965  001A                     	;# 
  1966  008C                     	;# 
  1967  008C                     	;# 
  1968  008D                     	;# 
  1969  008E                     	;# 
  1970  008E                     	;# 
  1971  008F                     	;# 
  1972  0090                     	;# 
  1973  0090                     	;# 
  1974  0091                     	;# 
  1975  0092                     	;# 
  1976  0092                     	;# 
  1977  0093                     	;# 
  1978  0094                     	;# 
  1979  0094                     	;# 
  1980  0095                     	;# 
  1981  0096                     	;# 
  1982  0096                     	;# 
  1983  0097                     	;# 
  1984  0098                     	;# 
  1985  0099                     	;# 
  1986  009A                     	;# 
  1987  009B                     	;# 
  1988  009B                     	;# 
  1989  009C                     	;# 
  1990  009D                     	;# 
  1991  009D                     	;# 
  1992  009E                     	;# 
  1993  009F                     	;# 
  1994  010C                     	;# 
  1995  010C                     	;# 
  1996  010D                     	;# 
  1997  010E                     	;# 
  1998  010F                     	;# 
  1999  010F                     	;# 
  2000  0110                     	;# 
  2001  0111                     	;# 
  2002  0112                     	;# 
  2003  0113                     	;# 
  2004  0114                     	;# 
  2005  0115                     	;# 
  2006  0116                     	;# 
  2007  0117                     	;# 
  2008  0118                     	;# 
  2009  0119                     	;# 
  2010  0119                     	;# 
  2011  0119                     	;# 
  2012  011A                     	;# 
  2013  011A                     	;# 
  2014  011A                     	;# 
  2015  011B                     	;# 
  2016  011B                     	;# 
  2017  011B                     	;# 
  2018  011B                     	;# 
  2019  011B                     	;# 
  2020  011C                     	;# 
  2021  011C                     	;# 
  2022  011C                     	;# 
  2023  011D                     	;# 
  2024  011D                     	;# 
  2025  011D                     	;# 
  2026  011E                     	;# 
  2027  011E                     	;# 
  2028  011E                     	;# 
  2029  011F                     	;# 
  2030  011F                     	;# 
  2031  011F                     	;# 
  2032  011F                     	;# 
  2033  011F                     	;# 
  2034  018C                     	;# 
  2035  018D                     	;# 
  2036  018E                     	;# 
  2037  018F                     	;# 
  2038  0190                     	;# 
  2039  0191                     	;# 
  2040  0192                     	;# 
  2041  0196                     	;# 
  2042  0197                     	;# 
  2043  0198                     	;# 
  2044  0199                     	;# 
  2045  019A                     	;# 
  2046  019B                     	;# 
  2047  019C                     	;# 
  2048  020C                     	;# 
  2049  020D                     	;# 
  2050  020E                     	;# 
  2051  020E                     	;# 
  2052  020F                     	;# 
  2053  020F                     	;# 
  2054  0210                     	;# 
  2055  0210                     	;# 
  2056  0211                     	;# 
  2057  0211                     	;# 
  2058  0212                     	;# 
  2059  0213                     	;# 
  2060  0214                     	;# 
  2061  0214                     	;# 
  2062  0215                     	;# 
  2063  0215                     	;# 
  2064  0216                     	;# 
  2065  0216                     	;# 
  2066  0217                     	;# 
  2067  0217                     	;# 
  2068  0218                     	;# 
  2069  0219                     	;# 
  2070  021A                     	;# 
  2071  021A                     	;# 
  2072  021B                     	;# 
  2073  021B                     	;# 
  2074  021C                     	;# 
  2075  021C                     	;# 
  2076  021D                     	;# 
  2077  021D                     	;# 
  2078  021E                     	;# 
  2079  021F                     	;# 
  2080  028C                     	;# 
  2081  028C                     	;# 
  2082  028D                     	;# 
  2083  028D                     	;# 
  2084  028E                     	;# 
  2085  028F                     	;# 
  2086  0290                     	;# 
  2087  0291                     	;# 
  2088  0292                     	;# 
  2089  0292                     	;# 
  2090  0293                     	;# 
  2091  0293                     	;# 
  2092  0294                     	;# 
  2093  0295                     	;# 
  2094  0296                     	;# 
  2095  0297                     	;# 
  2096  0298                     	;# 
  2097  0298                     	;# 
  2098  0299                     	;# 
  2099  0299                     	;# 
  2100  029A                     	;# 
  2101  029B                     	;# 
  2102  029C                     	;# 
  2103  029D                     	;# 
  2104  029F                     	;# 
  2105  030C                     	;# 
  2106  030C                     	;# 
  2107  030D                     	;# 
  2108  030E                     	;# 
  2109  030F                     	;# 
  2110  0310                     	;# 
  2111  0310                     	;# 
  2112  0311                     	;# 
  2113  0312                     	;# 
  2114  0313                     	;# 
  2115  0314                     	;# 
  2116  0314                     	;# 
  2117  0315                     	;# 
  2118  0316                     	;# 
  2119  0317                     	;# 
  2120  0318                     	;# 
  2121  0318                     	;# 
  2122  0319                     	;# 
  2123  031A                     	;# 
  2124  031B                     	;# 
  2125  038C                     	;# 
  2126  038C                     	;# 
  2127  038D                     	;# 
  2128  038E                     	;# 
  2129  0390                     	;# 
  2130  0390                     	;# 
  2131  0391                     	;# 
  2132  0392                     	;# 
  2133  048C                     	;# 
  2134  048C                     	;# 
  2135  048D                     	;# 
  2136  048E                     	;# 
  2137  048F                     	;# 
  2138  048F                     	;# 
  2139  0490                     	;# 
  2140  0491                     	;# 
  2141  0492                     	;# 
  2142  0492                     	;# 
  2143  0493                     	;# 
  2144  0494                     	;# 
  2145  0495                     	;# 
  2146  0495                     	;# 
  2147  0496                     	;# 
  2148  0497                     	;# 
  2149  0498                     	;# 
  2150  0499                     	;# 
  2151  049A                     	;# 
  2152  049B                     	;# 
  2153  049C                     	;# 
  2154  049D                     	;# 
  2155  058C                     	;# 
  2156  058C                     	;# 
  2157  058D                     	;# 
  2158  058E                     	;# 
  2159  058F                     	;# 
  2160  058F                     	;# 
  2161  0590                     	;# 
  2162  0591                     	;# 
  2163  0592                     	;# 
  2164  0593                     	;# 
  2165  059C                     	;# 
  2166  059C                     	;# 
  2167  059D                     	;# 
  2168  059D                     	;# 
  2169  059E                     	;# 
  2170  059F                     	;# 
  2171  060C                     	;# 
  2172  060C                     	;# 
  2173  060D                     	;# 
  2174  060D                     	;# 
  2175  060E                     	;# 
  2176  060F                     	;# 
  2177  0610                     	;# 
  2178  0611                     	;# 
  2179  0612                     	;# 
  2180  0613                     	;# 
  2181  0614                     	;# 
  2182  0616                     	;# 
  2183  0616                     	;# 
  2184  0617                     	;# 
  2185  0617                     	;# 
  2186  0618                     	;# 
  2187  0619                     	;# 
  2188  061A                     	;# 
  2189  061B                     	;# 
  2190  061C                     	;# 
  2191  061D                     	;# 
  2192  061E                     	;# 
  2193  070C                     	;# 
  2194  070D                     	;# 
  2195  070E                     	;# 
  2196  070F                     	;# 
  2197  0710                     	;# 
  2198  0711                     	;# 
  2199  0712                     	;# 
  2200  0713                     	;# 
  2201  0714                     	;# 
  2202  0716                     	;# 
  2203  0717                     	;# 
  2204  0718                     	;# 
  2205  0719                     	;# 
  2206  071A                     	;# 
  2207  071B                     	;# 
  2208  071C                     	;# 
  2209  071D                     	;# 
  2210  071E                     	;# 
  2211  0796                     	;# 
  2212  0797                     	;# 
  2213  0798                     	;# 
  2214  0799                     	;# 
  2215  079A                     	;# 
  2216  079B                     	;# 
  2217  079C                     	;# 
  2218  079D                     	;# 
  2219  080C                     	;# 
  2220  080D                     	;# 
  2221  080E                     	;# 
  2222  080F                     	;# 
  2223  0810                     	;# 
  2224  0811                     	;# 
  2225  0812                     	;# 
  2226  0813                     	;# 
  2227  0814                     	;# 
  2228  081A                     	;# 
  2229  081A                     	;# 
  2230  081B                     	;# 
  2231  081C                     	;# 
  2232  081C                     	;# 
  2233  081D                     	;# 
  2234  081E                     	;# 
  2235  081F                     	;# 
  2236  088C                     	;# 
  2237  088D                     	;# 
  2238  088E                     	;# 
  2239  088F                     	;# 
  2240  0890                     	;# 
  2241  0891                     	;# 
  2242  0892                     	;# 
  2243  0893                     	;# 
  2244  0895                     	;# 
  2245  0896                     	;# 
  2246  0897                     	;# 
  2247  0898                     	;# 
  2248  0899                     	;# 
  2249  089A                     	;# 
  2250  089B                     	;# 
  2251  090C                     	;# 
  2252  090E                     	;# 
  2253  090F                     	;# 
  2254  091F                     	;# 
  2255  098F                     	;# 
  2256  098F                     	;# 
  2257  0990                     	;# 
  2258  0991                     	;# 
  2259  0992                     	;# 
  2260  0993                     	;# 
  2261  0994                     	;# 
  2262  0995                     	;# 
  2263  0996                     	;# 
  2264  0997                     	;# 
  2265  1E0F                     	;# 
  2266  1E10                     	;# 
  2267  1E11                     	;# 
  2268  1E12                     	;# 
  2269  1E13                     	;# 
  2270  1E14                     	;# 
  2271  1E15                     	;# 
  2272  1E16                     	;# 
  2273  1E17                     	;# 
  2274  1E18                     	;# 
  2275  1E19                     	;# 
  2276  1E1A                     	;# 
  2277  1E1B                     	;# 
  2278  1E1C                     	;# 
  2279  1E1D                     	;# 
  2280  1E1E                     	;# 
  2281  1E1F                     	;# 
  2282  1E20                     	;# 
  2283  1E21                     	;# 
  2284  1E22                     	;# 
  2285  1E23                     	;# 
  2286  1E24                     	;# 
  2287  1E25                     	;# 
  2288  1E26                     	;# 
  2289  1E27                     	;# 
  2290  1E28                     	;# 
  2291  1E29                     	;# 
  2292  1E2A                     	;# 
  2293  1E2B                     	;# 
  2294  1E2C                     	;# 
  2295  1E2D                     	;# 
  2296  1E2E                     	;# 
  2297  1E2F                     	;# 
  2298  1E30                     	;# 
  2299  1E31                     	;# 
  2300  1E32                     	;# 
  2301  1E33                     	;# 
  2302  1E34                     	;# 
  2303  1E35                     	;# 
  2304  1E36                     	;# 
  2305  1E37                     	;# 
  2306  1E8F                     	;# 
  2307  1E90                     	;# 
  2308  1E91                     	;# 
  2309  1E92                     	;# 
  2310  1E93                     	;# 
  2311  1E94                     	;# 
  2312  1E95                     	;# 
  2313  1E96                     	;# 
  2314  1E97                     	;# 
  2315  1E9C                     	;# 
  2316  1E9D                     	;# 
  2317  1E9E                     	;# 
  2318  1EA1                     	;# 
  2319  1EA2                     	;# 
  2320  1EA3                     	;# 
  2321  1EA4                     	;# 
  2322  1EA9                     	;# 
  2323  1EAA                     	;# 
  2324  1EB1                     	;# 
  2325  1EB2                     	;# 
  2326  1EB8                     	;# 
  2327  1EB9                     	;# 
  2328  1EBA                     	;# 
  2329  1EBB                     	;# 
  2330  1EBC                     	;# 
  2331  1EBD                     	;# 
  2332  1EBE                     	;# 
  2333  1EC3                     	;# 
  2334  1EC5                     	;# 
  2335  1EC6                     	;# 
  2336  1EC7                     	;# 
  2337  1EC8                     	;# 
  2338  1EC9                     	;# 
  2339  1ECA                     	;# 
  2340  1ECB                     	;# 
  2341  1ECB                     	;# 
  2342  1ECB                     	;# 
  2343  1ECC                     	;# 
  2344  1ECC                     	;# 
  2345  1ECC                     	;# 
  2346  1F10                     	;# 
  2347  1F11                     	;# 
  2348  1F12                     	;# 
  2349  1F14                     	;# 
  2350  1F15                     	;# 
  2351  1F1C                     	;# 
  2352  1F1D                     	;# 
  2353  1F1E                     	;# 
  2354  1F1F                     	;# 
  2355  1F20                     	;# 
  2356  1F21                     	;# 
  2357  1F22                     	;# 
  2358  1F23                     	;# 
  2359  1F24                     	;# 
  2360  1F25                     	;# 
  2361  1F26                     	;# 
  2362  1F27                     	;# 
  2363  1F38                     	;# 
  2364  1F39                     	;# 
  2365  1F3A                     	;# 
  2366  1F3B                     	;# 
  2367  1F3C                     	;# 
  2368  1F3D                     	;# 
  2369  1F3E                     	;# 
  2370  1F3F                     	;# 
  2371  1F43                     	;# 
  2372  1F44                     	;# 
  2373  1F45                     	;# 
  2374  1F46                     	;# 
  2375  1F47                     	;# 
  2376  1F48                     	;# 
  2377  1F49                     	;# 
  2378  1F4A                     	;# 
  2379  1F4E                     	;# 
  2380  1F4F                     	;# 
  2381  1F50                     	;# 
  2382  1F51                     	;# 
  2383  1F52                     	;# 
  2384  1F53                     	;# 
  2385  1F54                     	;# 
  2386  1F55                     	;# 
  2387  1FE4                     	;# 
  2388  1FE5                     	;# 
  2389  1FE6                     	;# 
  2390  1FE7                     	;# 
  2391  1FE8                     	;# 
  2392  1FE8                     	;# 
  2393  1FE9                     	;# 
  2394  1FEA                     	;# 
  2395  1FEB                     	;# 
  2396  1FED                     	;# 
  2397  1FEE                     	;# 
  2398  1FEF                     	;# 
  2399  0000                     	;# 
  2400  0001                     	;# 
  2401  0002                     	;# 
  2402  0003                     	;# 
  2403  0004                     	;# 
  2404  0005                     	;# 
  2405  0006                     	;# 
  2406  0007                     	;# 
  2407  0008                     	;# 
  2408  0009                     	;# 
  2409  000A                     	;# 
  2410  000B                     	;# 
  2411  000C                     	;# 
  2412  000D                     	;# 
  2413  000E                     	;# 
  2414  0012                     	;# 
  2415  0013                     	;# 
  2416  0014                     	;# 
  2417  0018                     	;# 
  2418  0019                     	;# 
  2419  001A                     	;# 
  2420  008C                     	;# 
  2421  008C                     	;# 
  2422  008D                     	;# 
  2423  008E                     	;# 
  2424  008E                     	;# 
  2425  008F                     	;# 
  2426  0090                     	;# 
  2427  0090                     	;# 
  2428  0091                     	;# 
  2429  0092                     	;# 
  2430  0092                     	;# 
  2431  0093                     	;# 
  2432  0094                     	;# 
  2433  0094                     	;# 
  2434  0095                     	;# 
  2435  0096                     	;# 
  2436  0096                     	;# 
  2437  0097                     	;# 
  2438  0098                     	;# 
  2439  0099                     	;# 
  2440  009A                     	;# 
  2441  009B                     	;# 
  2442  009B                     	;# 
  2443  009C                     	;# 
  2444  009D                     	;# 
  2445  009D                     	;# 
  2446  009E                     	;# 
  2447  009F                     	;# 
  2448  010C                     	;# 
  2449  010C                     	;# 
  2450  010D                     	;# 
  2451  010E                     	;# 
  2452  010F                     	;# 
  2453  010F                     	;# 
  2454  0110                     	;# 
  2455  0111                     	;# 
  2456  0112                     	;# 
  2457  0113                     	;# 
  2458  0114                     	;# 
  2459  0115                     	;# 
  2460  0116                     	;# 
  2461  0117                     	;# 
  2462  0118                     	;# 
  2463  0119                     	;# 
  2464  0119                     	;# 
  2465  0119                     	;# 
  2466  011A                     	;# 
  2467  011A                     	;# 
  2468  011A                     	;# 
  2469  011B                     	;# 
  2470  011B                     	;# 
  2471  011B                     	;# 
  2472  011B                     	;# 
  2473  011B                     	;# 
  2474  011C                     	;# 
  2475  011C                     	;# 
  2476  011C                     	;# 
  2477  011D                     	;# 
  2478  011D                     	;# 
  2479  011D                     	;# 
  2480  011E                     	;# 
  2481  011E                     	;# 
  2482  011E                     	;# 
  2483  011F                     	;# 
  2484  011F                     	;# 
  2485  011F                     	;# 
  2486  011F                     	;# 
  2487  011F                     	;# 
  2488  018C                     	;# 
  2489  018D                     	;# 
  2490  018E                     	;# 
  2491  018F                     	;# 
  2492  0190                     	;# 
  2493  0191                     	;# 
  2494  0192                     	;# 
  2495  0196                     	;# 
  2496  0197                     	;# 
  2497  0198                     	;# 
  2498  0199                     	;# 
  2499  019A                     	;# 
  2500  019B                     	;# 
  2501  019C                     	;# 
  2502  020C                     	;# 
  2503  020D                     	;# 
  2504  020E                     	;# 
  2505  020E                     	;# 
  2506  020F                     	;# 
  2507  020F                     	;# 
  2508  0210                     	;# 
  2509  0210                     	;# 
  2510  0211                     	;# 
  2511  0211                     	;# 
  2512  0212                     	;# 
  2513  0213                     	;# 
  2514  0214                     	;# 
  2515  0214                     	;# 
  2516  0215                     	;# 
  2517  0215                     	;# 
  2518  0216                     	;# 
  2519  0216                     	;# 
  2520  0217                     	;# 
  2521  0217                     	;# 
  2522  0218                     	;# 
  2523  0219                     	;# 
  2524  021A                     	;# 
  2525  021A                     	;# 
  2526  021B                     	;# 
  2527  021B                     	;# 
  2528  021C                     	;# 
  2529  021C                     	;# 
  2530  021D                     	;# 
  2531  021D                     	;# 
  2532  021E                     	;# 
  2533  021F                     	;# 
  2534  028C                     	;# 
  2535  028C                     	;# 
  2536  028D                     	;# 
  2537  028D                     	;# 
  2538  028E                     	;# 
  2539  028F                     	;# 
  2540  0290                     	;# 
  2541  0291                     	;# 
  2542  0292                     	;# 
  2543  0292                     	;# 
  2544  0293                     	;# 
  2545  0293                     	;# 
  2546  0294                     	;# 
  2547  0295                     	;# 
  2548  0296                     	;# 
  2549  0297                     	;# 
  2550  0298                     	;# 
  2551  0298                     	;# 
  2552  0299                     	;# 
  2553  0299                     	;# 
  2554  029A                     	;# 
  2555  029B                     	;# 
  2556  029C                     	;# 
  2557  029D                     	;# 
  2558  029F                     	;# 
  2559  030C                     	;# 
  2560  030C                     	;# 
  2561  030D                     	;# 
  2562  030E                     	;# 
  2563  030F                     	;# 
  2564  0310                     	;# 
  2565  0310                     	;# 
  2566  0311                     	;# 
  2567  0312                     	;# 
  2568  0313                     	;# 
  2569  0314                     	;# 
  2570  0314                     	;# 
  2571  0315                     	;# 
  2572  0316                     	;# 
  2573  0317                     	;# 
  2574  0318                     	;# 
  2575  0318                     	;# 
  2576  0319                     	;# 
  2577  031A                     	;# 
  2578  031B                     	;# 
  2579  038C                     	;# 
  2580  038C                     	;# 
  2581  038D                     	;# 
  2582  038E                     	;# 
  2583  0390                     	;# 
  2584  0390                     	;# 
  2585  0391                     	;# 
  2586  0392                     	;# 
  2587  048C                     	;# 
  2588  048C                     	;# 
  2589  048D                     	;# 
  2590  048E                     	;# 
  2591  048F                     	;# 
  2592  048F                     	;# 
  2593  0490                     	;# 
  2594  0491                     	;# 
  2595  0492                     	;# 
  2596  0492                     	;# 
  2597  0493                     	;# 
  2598  0494                     	;# 
  2599  0495                     	;# 
  2600  0495                     	;# 
  2601  0496                     	;# 
  2602  0497                     	;# 
  2603  0498                     	;# 
  2604  0499                     	;# 
  2605  049A                     	;# 
  2606  049B                     	;# 
  2607  049C                     	;# 
  2608  049D                     	;# 
  2609  058C                     	;# 
  2610  058C                     	;# 
  2611  058D                     	;# 
  2612  058E                     	;# 
  2613  058F                     	;# 
  2614  058F                     	;# 
  2615  0590                     	;# 
  2616  0591                     	;# 
  2617  0592                     	;# 
  2618  0593                     	;# 
  2619  059C                     	;# 
  2620  059C                     	;# 
  2621  059D                     	;# 
  2622  059D                     	;# 
  2623  059E                     	;# 
  2624  059F                     	;# 
  2625  060C                     	;# 
  2626  060C                     	;# 
  2627  060D                     	;# 
  2628  060D                     	;# 
  2629  060E                     	;# 
  2630  060F                     	;# 
  2631  0610                     	;# 
  2632  0611                     	;# 
  2633  0612                     	;# 
  2634  0613                     	;# 
  2635  0614                     	;# 
  2636  0616                     	;# 
  2637  0616                     	;# 
  2638  0617                     	;# 
  2639  0617                     	;# 
  2640  0618                     	;# 
  2641  0619                     	;# 
  2642  061A                     	;# 
  2643  061B                     	;# 
  2644  061C                     	;# 
  2645  061D                     	;# 
  2646  061E                     	;# 
  2647  070C                     	;# 
  2648  070D                     	;# 
  2649  070E                     	;# 
  2650  070F                     	;# 
  2651  0710                     	;# 
  2652  0711                     	;# 
  2653  0712                     	;# 
  2654  0713                     	;# 
  2655  0714                     	;# 
  2656  0716                     	;# 
  2657  0717                     	;# 
  2658  0718                     	;# 
  2659  0719                     	;# 
  2660  071A                     	;# 
  2661  071B                     	;# 
  2662  071C                     	;# 
  2663  071D                     	;# 
  2664  071E                     	;# 
  2665  0796                     	;# 
  2666  0797                     	;# 
  2667  0798                     	;# 
  2668  0799                     	;# 
  2669  079A                     	;# 
  2670  079B                     	;# 
  2671  079C                     	;# 
  2672  079D                     	;# 
  2673  080C                     	;# 
  2674  080D                     	;# 
  2675  080E                     	;# 
  2676  080F                     	;# 
  2677  0810                     	;# 
  2678  0811                     	;# 
  2679  0812                     	;# 
  2680  0813                     	;# 
  2681  0814                     	;# 
  2682  081A                     	;# 
  2683  081A                     	;# 
  2684  081B                     	;# 
  2685  081C                     	;# 
  2686  081C                     	;# 
  2687  081D                     	;# 
  2688  081E                     	;# 
  2689  081F                     	;# 
  2690  088C                     	;# 
  2691  088D                     	;# 
  2692  088E                     	;# 
  2693  088F                     	;# 
  2694  0890                     	;# 
  2695  0891                     	;# 
  2696  0892                     	;# 
  2697  0893                     	;# 
  2698  0895                     	;# 
  2699  0896                     	;# 
  2700  0897                     	;# 
  2701  0898                     	;# 
  2702  0899                     	;# 
  2703  089A                     	;# 
  2704  089B                     	;# 
  2705  090C                     	;# 
  2706  090E                     	;# 
  2707  090F                     	;# 
  2708  091F                     	;# 
  2709  098F                     	;# 
  2710  098F                     	;# 
  2711  0990                     	;# 
  2712  0991                     	;# 
  2713  0992                     	;# 
  2714  0993                     	;# 
  2715  0994                     	;# 
  2716  0995                     	;# 
  2717  0996                     	;# 
  2718  0997                     	;# 
  2719  1E0F                     	;# 
  2720  1E10                     	;# 
  2721  1E11                     	;# 
  2722  1E12                     	;# 
  2723  1E13                     	;# 
  2724  1E14                     	;# 
  2725  1E15                     	;# 
  2726  1E16                     	;# 
  2727  1E17                     	;# 
  2728  1E18                     	;# 
  2729  1E19                     	;# 
  2730  1E1A                     	;# 
  2731  1E1B                     	;# 
  2732  1E1C                     	;# 
  2733  1E1D                     	;# 
  2734  1E1E                     	;# 
  2735  1E1F                     	;# 
  2736  1E20                     	;# 
  2737  1E21                     	;# 
  2738  1E22                     	;# 
  2739  1E23                     	;# 
  2740  1E24                     	;# 
  2741  1E25                     	;# 
  2742  1E26                     	;# 
  2743  1E27                     	;# 
  2744  1E28                     	;# 
  2745  1E29                     	;# 
  2746  1E2A                     	;# 
  2747  1E2B                     	;# 
  2748  1E2C                     	;# 
  2749  1E2D                     	;# 
  2750  1E2E                     	;# 
  2751  1E2F                     	;# 
  2752  1E30                     	;# 
  2753  1E31                     	;# 
  2754  1E32                     	;# 
  2755  1E33                     	;# 
  2756  1E34                     	;# 
  2757  1E35                     	;# 
  2758  1E36                     	;# 
  2759  1E37                     	;# 
  2760  1E8F                     	;# 
  2761  1E90                     	;# 
  2762  1E91                     	;# 
  2763  1E92                     	;# 
  2764  1E93                     	;# 
  2765  1E94                     	;# 
  2766  1E95                     	;# 
  2767  1E96                     	;# 
  2768  1E97                     	;# 
  2769  1E9C                     	;# 
  2770  1E9D                     	;# 
  2771  1E9E                     	;# 
  2772  1EA1                     	;# 
  2773  1EA2                     	;# 
  2774  1EA3                     	;# 
  2775  1EA4                     	;# 
  2776  1EA9                     	;# 
  2777  1EAA                     	;# 
  2778  1EB1                     	;# 
  2779  1EB2                     	;# 
  2780  1EB8                     	;# 
  2781  1EB9                     	;# 
  2782  1EBA                     	;# 
  2783  1EBB                     	;# 
  2784  1EBC                     	;# 
  2785  1EBD                     	;# 
  2786  1EBE                     	;# 
  2787  1EC3                     	;# 
  2788  1EC5                     	;# 
  2789  1EC6                     	;# 
  2790  1EC7                     	;# 
  2791  1EC8                     	;# 
  2792  1EC9                     	;# 
  2793  1ECA                     	;# 
  2794  1ECB                     	;# 
  2795  1ECB                     	;# 
  2796  1ECB                     	;# 
  2797  1ECC                     	;# 
  2798  1ECC                     	;# 
  2799  1ECC                     	;# 
  2800  1F10                     	;# 
  2801  1F11                     	;# 
  2802  1F12                     	;# 
  2803  1F14                     	;# 
  2804  1F15                     	;# 
  2805  1F1C                     	;# 
  2806  1F1D                     	;# 
  2807  1F1E                     	;# 
  2808  1F1F                     	;# 
  2809  1F20                     	;# 
  2810  1F21                     	;# 
  2811  1F22                     	;# 
  2812  1F23                     	;# 
  2813  1F24                     	;# 
  2814  1F25                     	;# 
  2815  1F26                     	;# 
  2816  1F27                     	;# 
  2817  1F38                     	;# 
  2818  1F39                     	;# 
  2819  1F3A                     	;# 
  2820  1F3B                     	;# 
  2821  1F3C                     	;# 
  2822  1F3D                     	;# 
  2823  1F3E                     	;# 
  2824  1F3F                     	;# 
  2825  1F43                     	;# 
  2826  1F44                     	;# 
  2827  1F45                     	;# 
  2828  1F46                     	;# 
  2829  1F47                     	;# 
  2830  1F48                     	;# 
  2831  1F49                     	;# 
  2832  1F4A                     	;# 
  2833  1F4E                     	;# 
  2834  1F4F                     	;# 
  2835  1F50                     	;# 
  2836  1F51                     	;# 
  2837  1F52                     	;# 
  2838  1F53                     	;# 
  2839  1F54                     	;# 
  2840  1F55                     	;# 
  2841  1FE4                     	;# 
  2842  1FE5                     	;# 
  2843  1FE6                     	;# 
  2844  1FE7                     	;# 
  2845  1FE8                     	;# 
  2846  1FE8                     	;# 
  2847  1FE9                     	;# 
  2848  1FEA                     	;# 
  2849  1FEB                     	;# 
  2850  1FED                     	;# 
  2851  1FEE                     	;# 
  2852  1FEF                     	;# 
  2853  0000                     	;# 
  2854  0001                     	;# 
  2855  0002                     	;# 
  2856  0003                     	;# 
  2857  0004                     	;# 
  2858  0005                     	;# 
  2859  0006                     	;# 
  2860  0007                     	;# 
  2861  0008                     	;# 
  2862  0009                     	;# 
  2863  000A                     	;# 
  2864  000B                     	;# 
  2865  000C                     	;# 
  2866  000D                     	;# 
  2867  000E                     	;# 
  2868  0012                     	;# 
  2869  0013                     	;# 
  2870  0014                     	;# 
  2871  0018                     	;# 
  2872  0019                     	;# 
  2873  001A                     	;# 
  2874  008C                     	;# 
  2875  008C                     	;# 
  2876  008D                     	;# 
  2877  008E                     	;# 
  2878  008E                     	;# 
  2879  008F                     	;# 
  2880  0090                     	;# 
  2881  0090                     	;# 
  2882  0091                     	;# 
  2883  0092                     	;# 
  2884  0092                     	;# 
  2885  0093                     	;# 
  2886  0094                     	;# 
  2887  0094                     	;# 
  2888  0095                     	;# 
  2889  0096                     	;# 
  2890  0096                     	;# 
  2891  0097                     	;# 
  2892  0098                     	;# 
  2893  0099                     	;# 
  2894  009A                     	;# 
  2895  009B                     	;# 
  2896  009B                     	;# 
  2897  009C                     	;# 
  2898  009D                     	;# 
  2899  009D                     	;# 
  2900  009E                     	;# 
  2901  009F                     	;# 
  2902  010C                     	;# 
  2903  010C                     	;# 
  2904  010D                     	;# 
  2905  010E                     	;# 
  2906  010F                     	;# 
  2907  010F                     	;# 
  2908  0110                     	;# 
  2909  0111                     	;# 
  2910  0112                     	;# 
  2911  0113                     	;# 
  2912  0114                     	;# 
  2913  0115                     	;# 
  2914  0116                     	;# 
  2915  0117                     	;# 
  2916  0118                     	;# 
  2917  0119                     	;# 
  2918  0119                     	;# 
  2919  0119                     	;# 
  2920  011A                     	;# 
  2921  011A                     	;# 
  2922  011A                     	;# 
  2923  011B                     	;# 
  2924  011B                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011C                     	;# 
  2929  011C                     	;# 
  2930  011C                     	;# 
  2931  011D                     	;# 
  2932  011D                     	;# 
  2933  011D                     	;# 
  2934  011E                     	;# 
  2935  011E                     	;# 
  2936  011E                     	;# 
  2937  011F                     	;# 
  2938  011F                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  018C                     	;# 
  2943  018D                     	;# 
  2944  018E                     	;# 
  2945  018F                     	;# 
  2946  0190                     	;# 
  2947  0191                     	;# 
  2948  0192                     	;# 
  2949  0196                     	;# 
  2950  0197                     	;# 
  2951  0198                     	;# 
  2952  0199                     	;# 
  2953  019A                     	;# 
  2954  019B                     	;# 
  2955  019C                     	;# 
  2956  020C                     	;# 
  2957  020D                     	;# 
  2958  020E                     	;# 
  2959  020E                     	;# 
  2960  020F                     	;# 
  2961  020F                     	;# 
  2962  0210                     	;# 
  2963  0210                     	;# 
  2964  0211                     	;# 
  2965  0211                     	;# 
  2966  0212                     	;# 
  2967  0213                     	;# 
  2968  0214                     	;# 
  2969  0214                     	;# 
  2970  0215                     	;# 
  2971  0215                     	;# 
  2972  0216                     	;# 
  2973  0216                     	;# 
  2974  0217                     	;# 
  2975  0217                     	;# 
  2976  0218                     	;# 
  2977  0219                     	;# 
  2978  021A                     	;# 
  2979  021A                     	;# 
  2980  021B                     	;# 
  2981  021B                     	;# 
  2982  021C                     	;# 
  2983  021C                     	;# 
  2984  021D                     	;# 
  2985  021D                     	;# 
  2986  021E                     	;# 
  2987  021F                     	;# 
  2988  028C                     	;# 
  2989  028C                     	;# 
  2990  028D                     	;# 
  2991  028D                     	;# 
  2992  028E                     	;# 
  2993  028F                     	;# 
  2994  0290                     	;# 
  2995  0291                     	;# 
  2996  0292                     	;# 
  2997  0292                     	;# 
  2998  0293                     	;# 
  2999  0293                     	;# 
  3000  0294                     	;# 
  3001  0295                     	;# 
  3002  0296                     	;# 
  3003  0297                     	;# 
  3004  0298                     	;# 
  3005  0298                     	;# 
  3006  0299                     	;# 
  3007  0299                     	;# 
  3008  029A                     	;# 
  3009  029B                     	;# 
  3010  029C                     	;# 
  3011  029D                     	;# 
  3012  029F                     	;# 
  3013  030C                     	;# 
  3014  030C                     	;# 
  3015  030D                     	;# 
  3016  030E                     	;# 
  3017  030F                     	;# 
  3018  0310                     	;# 
  3019  0310                     	;# 
  3020  0311                     	;# 
  3021  0312                     	;# 
  3022  0313                     	;# 
  3023  0314                     	;# 
  3024  0314                     	;# 
  3025  0315                     	;# 
  3026  0316                     	;# 
  3027  0317                     	;# 
  3028  0318                     	;# 
  3029  0318                     	;# 
  3030  0319                     	;# 
  3031  031A                     	;# 
  3032  031B                     	;# 
  3033  038C                     	;# 
  3034  038C                     	;# 
  3035  038D                     	;# 
  3036  038E                     	;# 
  3037  0390                     	;# 
  3038  0390                     	;# 
  3039  0391                     	;# 
  3040  0392                     	;# 
  3041  048C                     	;# 
  3042  048C                     	;# 
  3043  048D                     	;# 
  3044  048E                     	;# 
  3045  048F                     	;# 
  3046  048F                     	;# 
  3047  0490                     	;# 
  3048  0491                     	;# 
  3049  0492                     	;# 
  3050  0492                     	;# 
  3051  0493                     	;# 
  3052  0494                     	;# 
  3053  0495                     	;# 
  3054  0495                     	;# 
  3055  0496                     	;# 
  3056  0497                     	;# 
  3057  0498                     	;# 
  3058  0499                     	;# 
  3059  049A                     	;# 
  3060  049B                     	;# 
  3061  049C                     	;# 
  3062  049D                     	;# 
  3063  058C                     	;# 
  3064  058C                     	;# 
  3065  058D                     	;# 
  3066  058E                     	;# 
  3067  058F                     	;# 
  3068  058F                     	;# 
  3069  0590                     	;# 
  3070  0591                     	;# 
  3071  0592                     	;# 
  3072  0593                     	;# 
  3073  059C                     	;# 
  3074  059C                     	;# 
  3075  059D                     	;# 
  3076  059D                     	;# 
  3077  059E                     	;# 
  3078  059F                     	;# 
  3079  060C                     	;# 
  3080  060C                     	;# 
  3081  060D                     	;# 
  3082  060D                     	;# 
  3083  060E                     	;# 
  3084  060F                     	;# 
  3085  0610                     	;# 
  3086  0611                     	;# 
  3087  0612                     	;# 
  3088  0613                     	;# 
  3089  0614                     	;# 
  3090  0616                     	;# 
  3091  0616                     	;# 
  3092  0617                     	;# 
  3093  0617                     	;# 
  3094  0618                     	;# 
  3095  0619                     	;# 
  3096  061A                     	;# 
  3097  061B                     	;# 
  3098  061C                     	;# 
  3099  061D                     	;# 
  3100  061E                     	;# 
  3101  070C                     	;# 
  3102  070D                     	;# 
  3103  070E                     	;# 
  3104  070F                     	;# 
  3105  0710                     	;# 
  3106  0711                     	;# 
  3107  0712                     	;# 
  3108  0713                     	;# 
  3109  0714                     	;# 
  3110  0716                     	;# 
  3111  0717                     	;# 
  3112  0718                     	;# 
  3113  0719                     	;# 
  3114  071A                     	;# 
  3115  071B                     	;# 
  3116  071C                     	;# 
  3117  071D                     	;# 
  3118  071E                     	;# 
  3119  0796                     	;# 
  3120  0797                     	;# 
  3121  0798                     	;# 
  3122  0799                     	;# 
  3123  079A                     	;# 
  3124  079B                     	;# 
  3125  079C                     	;# 
  3126  079D                     	;# 
  3127  080C                     	;# 
  3128  080D                     	;# 
  3129  080E                     	;# 
  3130  080F                     	;# 
  3131  0810                     	;# 
  3132  0811                     	;# 
  3133  0812                     	;# 
  3134  0813                     	;# 
  3135  0814                     	;# 
  3136  081A                     	;# 
  3137  081A                     	;# 
  3138  081B                     	;# 
  3139  081C                     	;# 
  3140  081C                     	;# 
  3141  081D                     	;# 
  3142  081E                     	;# 
  3143  081F                     	;# 
  3144  088C                     	;# 
  3145  088D                     	;# 
  3146  088E                     	;# 
  3147  088F                     	;# 
  3148  0890                     	;# 
  3149  0891                     	;# 
  3150  0892                     	;# 
  3151  0893                     	;# 
  3152  0895                     	;# 
  3153  0896                     	;# 
  3154  0897                     	;# 
  3155  0898                     	;# 
  3156  0899                     	;# 
  3157  089A                     	;# 
  3158  089B                     	;# 
  3159  090C                     	;# 
  3160  090E                     	;# 
  3161  090F                     	;# 
  3162  091F                     	;# 
  3163  098F                     	;# 
  3164  098F                     	;# 
  3165  0990                     	;# 
  3166  0991                     	;# 
  3167  0992                     	;# 
  3168  0993                     	;# 
  3169  0994                     	;# 
  3170  0995                     	;# 
  3171  0996                     	;# 
  3172  0997                     	;# 
  3173  1E0F                     	;# 
  3174  1E10                     	;# 
  3175  1E11                     	;# 
  3176  1E12                     	;# 
  3177  1E13                     	;# 
  3178  1E14                     	;# 
  3179  1E15                     	;# 
  3180  1E16                     	;# 
  3181  1E17                     	;# 
  3182  1E18                     	;# 
  3183  1E19                     	;# 
  3184  1E1A                     	;# 
  3185  1E1B                     	;# 
  3186  1E1C                     	;# 
  3187  1E1D                     	;# 
  3188  1E1E                     	;# 
  3189  1E1F                     	;# 
  3190  1E20                     	;# 
  3191  1E21                     	;# 
  3192  1E22                     	;# 
  3193  1E23                     	;# 
  3194  1E24                     	;# 
  3195  1E25                     	;# 
  3196  1E26                     	;# 
  3197  1E27                     	;# 
  3198  1E28                     	;# 
  3199  1E29                     	;# 
  3200  1E2A                     	;# 
  3201  1E2B                     	;# 
  3202  1E2C                     	;# 
  3203  1E2D                     	;# 
  3204  1E2E                     	;# 
  3205  1E2F                     	;# 
  3206  1E30                     	;# 
  3207  1E31                     	;# 
  3208  1E32                     	;# 
  3209  1E33                     	;# 
  3210  1E34                     	;# 
  3211  1E35                     	;# 
  3212  1E36                     	;# 
  3213  1E37                     	;# 
  3214  1E8F                     	;# 
  3215  1E90                     	;# 
  3216  1E91                     	;# 
  3217  1E92                     	;# 
  3218  1E93                     	;# 
  3219  1E94                     	;# 
  3220  1E95                     	;# 
  3221  1E96                     	;# 
  3222  1E97                     	;# 
  3223  1E9C                     	;# 
  3224  1E9D                     	;# 
  3225  1E9E                     	;# 
  3226  1EA1                     	;# 
  3227  1EA2                     	;# 
  3228  1EA3                     	;# 
  3229  1EA4                     	;# 
  3230  1EA9                     	;# 
  3231  1EAA                     	;# 
  3232  1EB1                     	;# 
  3233  1EB2                     	;# 
  3234  1EB8                     	;# 
  3235  1EB9                     	;# 
  3236  1EBA                     	;# 
  3237  1EBB                     	;# 
  3238  1EBC                     	;# 
  3239  1EBD                     	;# 
  3240  1EBE                     	;# 
  3241  1EC3                     	;# 
  3242  1EC5                     	;# 
  3243  1EC6                     	;# 
  3244  1EC7                     	;# 
  3245  1EC8                     	;# 
  3246  1EC9                     	;# 
  3247  1ECA                     	;# 
  3248  1ECB                     	;# 
  3249  1ECB                     	;# 
  3250  1ECB                     	;# 
  3251  1ECC                     	;# 
  3252  1ECC                     	;# 
  3253  1ECC                     	;# 
  3254  1F10                     	;# 
  3255  1F11                     	;# 
  3256  1F12                     	;# 
  3257  1F14                     	;# 
  3258  1F15                     	;# 
  3259  1F1C                     	;# 
  3260  1F1D                     	;# 
  3261  1F1E                     	;# 
  3262  1F1F                     	;# 
  3263  1F20                     	;# 
  3264  1F21                     	;# 
  3265  1F22                     	;# 
  3266  1F23                     	;# 
  3267  1F24                     	;# 
  3268  1F25                     	;# 
  3269  1F26                     	;# 
  3270  1F27                     	;# 
  3271  1F38                     	;# 
  3272  1F39                     	;# 
  3273  1F3A                     	;# 
  3274  1F3B                     	;# 
  3275  1F3C                     	;# 
  3276  1F3D                     	;# 
  3277  1F3E                     	;# 
  3278  1F3F                     	;# 
  3279  1F43                     	;# 
  3280  1F44                     	;# 
  3281  1F45                     	;# 
  3282  1F46                     	;# 
  3283  1F47                     	;# 
  3284  1F48                     	;# 
  3285  1F49                     	;# 
  3286  1F4A                     	;# 
  3287  1F4E                     	;# 
  3288  1F4F                     	;# 
  3289  1F50                     	;# 
  3290  1F51                     	;# 
  3291  1F52                     	;# 
  3292  1F53                     	;# 
  3293  1F54                     	;# 
  3294  1F55                     	;# 
  3295  1FE4                     	;# 
  3296  1FE5                     	;# 
  3297  1FE6                     	;# 
  3298  1FE7                     	;# 
  3299  1FE8                     	;# 
  3300  1FE8                     	;# 
  3301  1FE9                     	;# 
  3302  1FEA                     	;# 
  3303  1FEB                     	;# 
  3304  1FED                     	;# 
  3305  1FEE                     	;# 
  3306  1FEF                     	;# 
  3307  0000                     	;# 
  3308  0001                     	;# 
  3309  0002                     	;# 
  3310  0003                     	;# 
  3311  0004                     	;# 
  3312  0005                     	;# 
  3313  0006                     	;# 
  3314  0007                     	;# 
  3315  0008                     	;# 
  3316  0009                     	;# 
  3317  000A                     	;# 
  3318  000B                     	;# 
  3319  000C                     	;# 
  3320  000D                     	;# 
  3321  000E                     	;# 
  3322  0012                     	;# 
  3323  0013                     	;# 
  3324  0014                     	;# 
  3325  0018                     	;# 
  3326  0019                     	;# 
  3327  001A                     	;# 
  3328  008C                     	;# 
  3329  008C                     	;# 
  3330  008D                     	;# 
  3331  008E                     	;# 
  3332  008E                     	;# 
  3333  008F                     	;# 
  3334  0090                     	;# 
  3335  0090                     	;# 
  3336  0091                     	;# 
  3337  0092                     	;# 
  3338  0092                     	;# 
  3339  0093                     	;# 
  3340  0094                     	;# 
  3341  0094                     	;# 
  3342  0095                     	;# 
  3343  0096                     	;# 
  3344  0096                     	;# 
  3345  0097                     	;# 
  3346  0098                     	;# 
  3347  0099                     	;# 
  3348  009A                     	;# 
  3349  009B                     	;# 
  3350  009B                     	;# 
  3351  009C                     	;# 
  3352  009D                     	;# 
  3353  009D                     	;# 
  3354  009E                     	;# 
  3355  009F                     	;# 
  3356  010C                     	;# 
  3357  010C                     	;# 
  3358  010D                     	;# 
  3359  010E                     	;# 
  3360  010F                     	;# 
  3361  010F                     	;# 
  3362  0110                     	;# 
  3363  0111                     	;# 
  3364  0112                     	;# 
  3365  0113                     	;# 
  3366  0114                     	;# 
  3367  0115                     	;# 
  3368  0116                     	;# 
  3369  0117                     	;# 
  3370  0118                     	;# 
  3371  0119                     	;# 
  3372  0119                     	;# 
  3373  0119                     	;# 
  3374  011A                     	;# 
  3375  011A                     	;# 
  3376  011A                     	;# 
  3377  011B                     	;# 
  3378  011B                     	;# 
  3379  011B                     	;# 
  3380  011B                     	;# 
  3381  011B                     	;# 
  3382  011C                     	;# 
  3383  011C                     	;# 
  3384  011C                     	;# 
  3385  011D                     	;# 
  3386  011D                     	;# 
  3387  011D                     	;# 
  3388  011E                     	;# 
  3389  011E                     	;# 
  3390  011E                     	;# 
  3391  011F                     	;# 
  3392  011F                     	;# 
  3393  011F                     	;# 
  3394  011F                     	;# 
  3395  011F                     	;# 
  3396  018C                     	;# 
  3397  018D                     	;# 
  3398  018E                     	;# 
  3399  018F                     	;# 
  3400  0190                     	;# 
  3401  0191                     	;# 
  3402  0192                     	;# 
  3403  0196                     	;# 
  3404  0197                     	;# 
  3405  0198                     	;# 
  3406  0199                     	;# 
  3407  019A                     	;# 
  3408  019B                     	;# 
  3409  019C                     	;# 
  3410  020C                     	;# 
  3411  020D                     	;# 
  3412  020E                     	;# 
  3413  020E                     	;# 
  3414  020F                     	;# 
  3415  020F                     	;# 
  3416  0210                     	;# 
  3417  0210                     	;# 
  3418  0211                     	;# 
  3419  0211                     	;# 
  3420  0212                     	;# 
  3421  0213                     	;# 
  3422  0214                     	;# 
  3423  0214                     	;# 
  3424  0215                     	;# 
  3425  0215                     	;# 
  3426  0216                     	;# 
  3427  0216                     	;# 
  3428  0217                     	;# 
  3429  0217                     	;# 
  3430  0218                     	;# 
  3431  0219                     	;# 
  3432  021A                     	;# 
  3433  021A                     	;# 
  3434  021B                     	;# 
  3435  021B                     	;# 
  3436  021C                     	;# 
  3437  021C                     	;# 
  3438  021D                     	;# 
  3439  021D                     	;# 
  3440  021E                     	;# 
  3441  021F                     	;# 
  3442  028C                     	;# 
  3443  028C                     	;# 
  3444  028D                     	;# 
  3445  028D                     	;# 
  3446  028E                     	;# 
  3447  028F                     	;# 
  3448  0290                     	;# 
  3449  0291                     	;# 
  3450  0292                     	;# 
  3451  0292                     	;# 
  3452  0293                     	;# 
  3453  0293                     	;# 
  3454  0294                     	;# 
  3455  0295                     	;# 
  3456  0296                     	;# 
  3457  0297                     	;# 
  3458  0298                     	;# 
  3459  0298                     	;# 
  3460  0299                     	;# 
  3461  0299                     	;# 
  3462  029A                     	;# 
  3463  029B                     	;# 
  3464  029C                     	;# 
  3465  029D                     	;# 
  3466  029F                     	;# 
  3467  030C                     	;# 
  3468  030C                     	;# 
  3469  030D                     	;# 
  3470  030E                     	;# 
  3471  030F                     	;# 
  3472  0310                     	;# 
  3473  0310                     	;# 
  3474  0311                     	;# 
  3475  0312                     	;# 
  3476  0313                     	;# 
  3477  0314                     	;# 
  3478  0314                     	;# 
  3479  0315                     	;# 
  3480  0316                     	;# 
  3481  0317                     	;# 
  3482  0318                     	;# 
  3483  0318                     	;# 
  3484  0319                     	;# 
  3485  031A                     	;# 
  3486  031B                     	;# 
  3487  038C                     	;# 
  3488  038C                     	;# 
  3489  038D                     	;# 
  3490  038E                     	;# 
  3491  0390                     	;# 
  3492  0390                     	;# 
  3493  0391                     	;# 
  3494  0392                     	;# 
  3495  048C                     	;# 
  3496  048C                     	;# 
  3497  048D                     	;# 
  3498  048E                     	;# 
  3499  048F                     	;# 
  3500  048F                     	;# 
  3501  0490                     	;# 
  3502  0491                     	;# 
  3503  0492                     	;# 
  3504  0492                     	;# 
  3505  0493                     	;# 
  3506  0494                     	;# 
  3507  0495                     	;# 
  3508  0495                     	;# 
  3509  0496                     	;# 
  3510  0497                     	;# 
  3511  0498                     	;# 
  3512  0499                     	;# 
  3513  049A                     	;# 
  3514  049B                     	;# 
  3515  049C                     	;# 
  3516  049D                     	;# 
  3517  058C                     	;# 
  3518  058C                     	;# 
  3519  058D                     	;# 
  3520  058E                     	;# 
  3521  058F                     	;# 
  3522  058F                     	;# 
  3523  0590                     	;# 
  3524  0591                     	;# 
  3525  0592                     	;# 
  3526  0593                     	;# 
  3527  059C                     	;# 
  3528  059C                     	;# 
  3529  059D                     	;# 
  3530  059D                     	;# 
  3531  059E                     	;# 
  3532  059F                     	;# 
  3533  060C                     	;# 
  3534  060C                     	;# 
  3535  060D                     	;# 
  3536  060D                     	;# 
  3537  060E                     	;# 
  3538  060F                     	;# 
  3539  0610                     	;# 
  3540  0611                     	;# 
  3541  0612                     	;# 
  3542  0613                     	;# 
  3543  0614                     	;# 
  3544  0616                     	;# 
  3545  0616                     	;# 
  3546  0617                     	;# 
  3547  0617                     	;# 
  3548  0618                     	;# 
  3549  0619                     	;# 
  3550  061A                     	;# 
  3551  061B                     	;# 
  3552  061C                     	;# 
  3553  061D                     	;# 
  3554  061E                     	;# 
  3555  070C                     	;# 
  3556  070D                     	;# 
  3557  070E                     	;# 
  3558  070F                     	;# 
  3559  0710                     	;# 
  3560  0711                     	;# 
  3561  0712                     	;# 
  3562  0713                     	;# 
  3563  0714                     	;# 
  3564  0716                     	;# 
  3565  0717                     	;# 
  3566  0718                     	;# 
  3567  0719                     	;# 
  3568  071A                     	;# 
  3569  071B                     	;# 
  3570  071C                     	;# 
  3571  071D                     	;# 
  3572  071E                     	;# 
  3573  0796                     	;# 
  3574  0797                     	;# 
  3575  0798                     	;# 
  3576  0799                     	;# 
  3577  079A                     	;# 
  3578  079B                     	;# 
  3579  079C                     	;# 
  3580  079D                     	;# 
  3581  080C                     	;# 
  3582  080D                     	;# 
  3583  080E                     	;# 
  3584  080F                     	;# 
  3585  0810                     	;# 
  3586  0811                     	;# 
  3587  0812                     	;# 
  3588  0813                     	;# 
  3589  0814                     	;# 
  3590  081A                     	;# 
  3591  081A                     	;# 
  3592  081B                     	;# 
  3593  081C                     	;# 
  3594  081C                     	;# 
  3595  081D                     	;# 
  3596  081E                     	;# 
  3597  081F                     	;# 
  3598  088C                     	;# 
  3599  088D                     	;# 
  3600  088E                     	;# 
  3601  088F                     	;# 
  3602  0890                     	;# 
  3603  0891                     	;# 
  3604  0892                     	;# 
  3605  0893                     	;# 
  3606  0895                     	;# 
  3607  0896                     	;# 
  3608  0897                     	;# 
  3609  0898                     	;# 
  3610  0899                     	;# 
  3611  089A                     	;# 
  3612  089B                     	;# 
  3613  090C                     	;# 
  3614  090E                     	;# 
  3615  090F                     	;# 
  3616  091F                     	;# 
  3617  098F                     	;# 
  3618  098F                     	;# 
  3619  0990                     	;# 
  3620  0991                     	;# 
  3621  0992                     	;# 
  3622  0993                     	;# 
  3623  0994                     	;# 
  3624  0995                     	;# 
  3625  0996                     	;# 
  3626  0997                     	;# 
  3627  1E0F                     	;# 
  3628  1E10                     	;# 
  3629  1E11                     	;# 
  3630  1E12                     	;# 
  3631  1E13                     	;# 
  3632  1E14                     	;# 
  3633  1E15                     	;# 
  3634  1E16                     	;# 
  3635  1E17                     	;# 
  3636  1E18                     	;# 
  3637  1E19                     	;# 
  3638  1E1A                     	;# 
  3639  1E1B                     	;# 
  3640  1E1C                     	;# 
  3641  1E1D                     	;# 
  3642  1E1E                     	;# 
  3643  1E1F                     	;# 
  3644  1E20                     	;# 
  3645  1E21                     	;# 
  3646  1E22                     	;# 
  3647  1E23                     	;# 
  3648  1E24                     	;# 
  3649  1E25                     	;# 
  3650  1E26                     	;# 
  3651  1E27                     	;# 
  3652  1E28                     	;# 
  3653  1E29                     	;# 
  3654  1E2A                     	;# 
  3655  1E2B                     	;# 
  3656  1E2C                     	;# 
  3657  1E2D                     	;# 
  3658  1E2E                     	;# 
  3659  1E2F                     	;# 
  3660  1E30                     	;# 
  3661  1E31                     	;# 
  3662  1E32                     	;# 
  3663  1E33                     	;# 
  3664  1E34                     	;# 
  3665  1E35                     	;# 
  3666  1E36                     	;# 
  3667  1E37                     	;# 
  3668  1E8F                     	;# 
  3669  1E90                     	;# 
  3670  1E91                     	;# 
  3671  1E92                     	;# 
  3672  1E93                     	;# 
  3673  1E94                     	;# 
  3674  1E95                     	;# 
  3675  1E96                     	;# 
  3676  1E97                     	;# 
  3677  1E9C                     	;# 
  3678  1E9D                     	;# 
  3679  1E9E                     	;# 
  3680  1EA1                     	;# 
  3681  1EA2                     	;# 
  3682  1EA3                     	;# 
  3683  1EA4                     	;# 
  3684  1EA9                     	;# 
  3685  1EAA                     	;# 
  3686  1EB1                     	;# 
  3687  1EB2                     	;# 
  3688  1EB8                     	;# 
  3689  1EB9                     	;# 
  3690  1EBA                     	;# 
  3691  1EBB                     	;# 
  3692  1EBC                     	;# 
  3693  1EBD                     	;# 
  3694  1EBE                     	;# 
  3695  1EC3                     	;# 
  3696  1EC5                     	;# 
  3697  1EC6                     	;# 
  3698  1EC7                     	;# 
  3699  1EC8                     	;# 
  3700  1EC9                     	;# 
  3701  1ECA                     	;# 
  3702  1ECB                     	;# 
  3703  1ECB                     	;# 
  3704  1ECB                     	;# 
  3705  1ECC                     	;# 
  3706  1ECC                     	;# 
  3707  1ECC                     	;# 
  3708  1F10                     	;# 
  3709  1F11                     	;# 
  3710  1F12                     	;# 
  3711  1F14                     	;# 
  3712  1F15                     	;# 
  3713  1F1C                     	;# 
  3714  1F1D                     	;# 
  3715  1F1E                     	;# 
  3716  1F1F                     	;# 
  3717  1F20                     	;# 
  3718  1F21                     	;# 
  3719  1F22                     	;# 
  3720  1F23                     	;# 
  3721  1F24                     	;# 
  3722  1F25                     	;# 
  3723  1F26                     	;# 
  3724  1F27                     	;# 
  3725  1F38                     	;# 
  3726  1F39                     	;# 
  3727  1F3A                     	;# 
  3728  1F3B                     	;# 
  3729  1F3C                     	;# 
  3730  1F3D                     	;# 
  3731  1F3E                     	;# 
  3732  1F3F                     	;# 
  3733  1F43                     	;# 
  3734  1F44                     	;# 
  3735  1F45                     	;# 
  3736  1F46                     	;# 
  3737  1F47                     	;# 
  3738  1F48                     	;# 
  3739  1F49                     	;# 
  3740  1F4A                     	;# 
  3741  1F4E                     	;# 
  3742  1F4F                     	;# 
  3743  1F50                     	;# 
  3744  1F51                     	;# 
  3745  1F52                     	;# 
  3746  1F53                     	;# 
  3747  1F54                     	;# 
  3748  1F55                     	;# 
  3749  1FE4                     	;# 
  3750  1FE5                     	;# 
  3751  1FE6                     	;# 
  3752  1FE7                     	;# 
  3753  1FE8                     	;# 
  3754  1FE8                     	;# 
  3755  1FE9                     	;# 
  3756  1FEA                     	;# 
  3757  1FEB                     	;# 
  3758  1FED                     	;# 
  3759  1FEE                     	;# 
  3760  1FEF                     	;# 
  3761  0000                     	;# 
  3762  0001                     	;# 
  3763  0002                     	;# 
  3764  0003                     	;# 
  3765  0004                     	;# 
  3766  0005                     	;# 
  3767  0006                     	;# 
  3768  0007                     	;# 
  3769  0008                     	;# 
  3770  0009                     	;# 
  3771  000A                     	;# 
  3772  000B                     	;# 
  3773  000C                     	;# 
  3774  000D                     	;# 
  3775  000E                     	;# 
  3776  0012                     	;# 
  3777  0013                     	;# 
  3778  0014                     	;# 
  3779  0018                     	;# 
  3780  0019                     	;# 
  3781  001A                     	;# 
  3782  008C                     	;# 
  3783  008C                     	;# 
  3784  008D                     	;# 
  3785  008E                     	;# 
  3786  008E                     	;# 
  3787  008F                     	;# 
  3788  0090                     	;# 
  3789  0090                     	;# 
  3790  0091                     	;# 
  3791  0092                     	;# 
  3792  0092                     	;# 
  3793  0093                     	;# 
  3794  0094                     	;# 
  3795  0094                     	;# 
  3796  0095                     	;# 
  3797  0096                     	;# 
  3798  0096                     	;# 
  3799  0097                     	;# 
  3800  0098                     	;# 
  3801  0099                     	;# 
  3802  009A                     	;# 
  3803  009B                     	;# 
  3804  009B                     	;# 
  3805  009C                     	;# 
  3806  009D                     	;# 
  3807  009D                     	;# 
  3808  009E                     	;# 
  3809  009F                     	;# 
  3810  010C                     	;# 
  3811  010C                     	;# 
  3812  010D                     	;# 
  3813  010E                     	;# 
  3814  010F                     	;# 
  3815  010F                     	;# 
  3816  0110                     	;# 
  3817  0111                     	;# 
  3818  0112                     	;# 
  3819  0113                     	;# 
  3820  0114                     	;# 
  3821  0115                     	;# 
  3822  0116                     	;# 
  3823  0117                     	;# 
  3824  0118                     	;# 
  3825  0119                     	;# 
  3826  0119                     	;# 
  3827  0119                     	;# 
  3828  011A                     	;# 
  3829  011A                     	;# 
  3830  011A                     	;# 
  3831  011B                     	;# 
  3832  011B                     	;# 
  3833  011B                     	;# 
  3834  011B                     	;# 
  3835  011B                     	;# 
  3836  011C                     	;# 
  3837  011C                     	;# 
  3838  011C                     	;# 
  3839  011D                     	;# 
  3840  011D                     	;# 
  3841  011D                     	;# 
  3842  011E                     	;# 
  3843  011E                     	;# 
  3844  011E                     	;# 
  3845  011F                     	;# 
  3846  011F                     	;# 
  3847  011F                     	;# 
  3848  011F                     	;# 
  3849  011F                     	;# 
  3850  018C                     	;# 
  3851  018D                     	;# 
  3852  018E                     	;# 
  3853  018F                     	;# 
  3854  0190                     	;# 
  3855  0191                     	;# 
  3856  0192                     	;# 
  3857  0196                     	;# 
  3858  0197                     	;# 
  3859  0198                     	;# 
  3860  0199                     	;# 
  3861  019A                     	;# 
  3862  019B                     	;# 
  3863  019C                     	;# 
  3864  020C                     	;# 
  3865  020D                     	;# 
  3866  020E                     	;# 
  3867  020E                     	;# 
  3868  020F                     	;# 
  3869  020F                     	;# 
  3870  0210                     	;# 
  3871  0210                     	;# 
  3872  0211                     	;# 
  3873  0211                     	;# 
  3874  0212                     	;# 
  3875  0213                     	;# 
  3876  0214                     	;# 
  3877  0214                     	;# 
  3878  0215                     	;# 
  3879  0215                     	;# 
  3880  0216                     	;# 
  3881  0216                     	;# 
  3882  0217                     	;# 
  3883  0217                     	;# 
  3884  0218                     	;# 
  3885  0219                     	;# 
  3886  021A                     	;# 
  3887  021A                     	;# 
  3888  021B                     	;# 
  3889  021B                     	;# 
  3890  021C                     	;# 
  3891  021C                     	;# 
  3892  021D                     	;# 
  3893  021D                     	;# 
  3894  021E                     	;# 
  3895  021F                     	;# 
  3896  028C                     	;# 
  3897  028C                     	;# 
  3898  028D                     	;# 
  3899  028D                     	;# 
  3900  028E                     	;# 
  3901  028F                     	;# 
  3902  0290                     	;# 
  3903  0291                     	;# 
  3904  0292                     	;# 
  3905  0292                     	;# 
  3906  0293                     	;# 
  3907  0293                     	;# 
  3908  0294                     	;# 
  3909  0295                     	;# 
  3910  0296                     	;# 
  3911  0297                     	;# 
  3912  0298                     	;# 
  3913  0298                     	;# 
  3914  0299                     	;# 
  3915  0299                     	;# 
  3916  029A                     	;# 
  3917  029B                     	;# 
  3918  029C                     	;# 
  3919  029D                     	;# 
  3920  029F                     	;# 
  3921  030C                     	;# 
  3922  030C                     	;# 
  3923  030D                     	;# 
  3924  030E                     	;# 
  3925  030F                     	;# 
  3926  0310                     	;# 
  3927  0310                     	;# 
  3928  0311                     	;# 
  3929  0312                     	;# 
  3930  0313                     	;# 
  3931  0314                     	;# 
  3932  0314                     	;# 
  3933  0315                     	;# 
  3934  0316                     	;# 
  3935  0317                     	;# 
  3936  0318                     	;# 
  3937  0318                     	;# 
  3938  0319                     	;# 
  3939  031A                     	;# 
  3940  031B                     	;# 
  3941  038C                     	;# 
  3942  038C                     	;# 
  3943  038D                     	;# 
  3944  038E                     	;# 
  3945  0390                     	;# 
  3946  0390                     	;# 
  3947  0391                     	;# 
  3948  0392                     	;# 
  3949  048C                     	;# 
  3950  048C                     	;# 
  3951  048D                     	;# 
  3952  048E                     	;# 
  3953  048F                     	;# 
  3954  048F                     	;# 
  3955  0490                     	;# 
  3956  0491                     	;# 
  3957  0492                     	;# 
  3958  0492                     	;# 
  3959  0493                     	;# 
  3960  0494                     	;# 
  3961  0495                     	;# 
  3962  0495                     	;# 
  3963  0496                     	;# 
  3964  0497                     	;# 
  3965  0498                     	;# 
  3966  0499                     	;# 
  3967  049A                     	;# 
  3968  049B                     	;# 
  3969  049C                     	;# 
  3970  049D                     	;# 
  3971  058C                     	;# 
  3972  058C                     	;# 
  3973  058D                     	;# 
  3974  058E                     	;# 
  3975  058F                     	;# 
  3976  058F                     	;# 
  3977  0590                     	;# 
  3978  0591                     	;# 
  3979  0592                     	;# 
  3980  0593                     	;# 
  3981  059C                     	;# 
  3982  059C                     	;# 
  3983  059D                     	;# 
  3984  059D                     	;# 
  3985  059E                     	;# 
  3986  059F                     	;# 
  3987  060C                     	;# 
  3988  060C                     	;# 
  3989  060D                     	;# 
  3990  060D                     	;# 
  3991  060E                     	;# 
  3992  060F                     	;# 
  3993  0610                     	;# 
  3994  0611                     	;# 
  3995  0612                     	;# 
  3996  0613                     	;# 
  3997  0614                     	;# 
  3998  0616                     	;# 
  3999  0616                     	;# 
  4000  0617                     	;# 
  4001  0617                     	;# 
  4002  0618                     	;# 
  4003  0619                     	;# 
  4004  061A                     	;# 
  4005  061B                     	;# 
  4006  061C                     	;# 
  4007  061D                     	;# 
  4008  061E                     	;# 
  4009  070C                     	;# 
  4010  070D                     	;# 
  4011  070E                     	;# 
  4012  070F                     	;# 
  4013  0710                     	;# 
  4014  0711                     	;# 
  4015  0712                     	;# 
  4016  0713                     	;# 
  4017  0714                     	;# 
  4018  0716                     	;# 
  4019  0717                     	;# 
  4020  0718                     	;# 
  4021  0719                     	;# 
  4022  071A                     	;# 
  4023  071B                     	;# 
  4024  071C                     	;# 
  4025  071D                     	;# 
  4026  071E                     	;# 
  4027  0796                     	;# 
  4028  0797                     	;# 
  4029  0798                     	;# 
  4030  0799                     	;# 
  4031  079A                     	;# 
  4032  079B                     	;# 
  4033  079C                     	;# 
  4034  079D                     	;# 
  4035  080C                     	;# 
  4036  080D                     	;# 
  4037  080E                     	;# 
  4038  080F                     	;# 
  4039  0810                     	;# 
  4040  0811                     	;# 
  4041  0812                     	;# 
  4042  0813                     	;# 
  4043  0814                     	;# 
  4044  081A                     	;# 
  4045  081A                     	;# 
  4046  081B                     	;# 
  4047  081C                     	;# 
  4048  081C                     	;# 
  4049  081D                     	;# 
  4050  081E                     	;# 
  4051  081F                     	;# 
  4052  088C                     	;# 
  4053  088D                     	;# 
  4054  088E                     	;# 
  4055  088F                     	;# 
  4056  0890                     	;# 
  4057  0891                     	;# 
  4058  0892                     	;# 
  4059  0893                     	;# 
  4060  0895                     	;# 
  4061  0896                     	;# 
  4062  0897                     	;# 
  4063  0898                     	;# 
  4064  0899                     	;# 
  4065  089A                     	;# 
  4066  089B                     	;# 
  4067  090C                     	;# 
  4068  090E                     	;# 
  4069  090F                     	;# 
  4070  091F                     	;# 
  4071  098F                     	;# 
  4072  098F                     	;# 
  4073  0990                     	;# 
  4074  0991                     	;# 
  4075  0992                     	;# 
  4076  0993                     	;# 
  4077  0994                     	;# 
  4078  0995                     	;# 
  4079  0996                     	;# 
  4080  0997                     	;# 
  4081  1E0F                     	;# 
  4082  1E10                     	;# 
  4083  1E11                     	;# 
  4084  1E12                     	;# 
  4085  1E13                     	;# 
  4086  1E14                     	;# 
  4087  1E15                     	;# 
  4088  1E16                     	;# 
  4089  1E17                     	;# 
  4090  1E18                     	;# 
  4091  1E19                     	;# 
  4092  1E1A                     	;# 
  4093  1E1B                     	;# 
  4094  1E1C                     	;# 
  4095  1E1D                     	;# 
  4096  1E1E                     	;# 
  4097  1E1F                     	;# 
  4098  1E20                     	;# 
  4099  1E21                     	;# 
  4100  1E22                     	;# 
  4101  1E23                     	;# 
  4102  1E24                     	;# 
  4103  1E25                     	;# 
  4104  1E26                     	;# 
  4105  1E27                     	;# 
  4106  1E28                     	;# 
  4107  1E29                     	;# 
  4108  1E2A                     	;# 
  4109  1E2B                     	;# 
  4110  1E2C                     	;# 
  4111  1E2D                     	;# 
  4112  1E2E                     	;# 
  4113  1E2F                     	;# 
  4114  1E30                     	;# 
  4115  1E31                     	;# 
  4116  1E32                     	;# 
  4117  1E33                     	;# 
  4118  1E34                     	;# 
  4119  1E35                     	;# 
  4120  1E36                     	;# 
  4121  1E37                     	;# 
  4122  1E8F                     	;# 
  4123  1E90                     	;# 
  4124  1E91                     	;# 
  4125  1E92                     	;# 
  4126  1E93                     	;# 
  4127  1E94                     	;# 
  4128  1E95                     	;# 
  4129  1E96                     	;# 
  4130  1E97                     	;# 
  4131  1E9C                     	;# 
  4132  1E9D                     	;# 
  4133  1E9E                     	;# 
  4134  1EA1                     	;# 
  4135  1EA2                     	;# 
  4136  1EA3                     	;# 
  4137  1EA4                     	;# 
  4138  1EA9                     	;# 
  4139  1EAA                     	;# 
  4140  1EB1                     	;# 
  4141  1EB2                     	;# 
  4142  1EB8                     	;# 
  4143  1EB9                     	;# 
  4144  1EBA                     	;# 
  4145  1EBB                     	;# 
  4146  1EBC                     	;# 
  4147  1EBD                     	;# 
  4148  1EBE                     	;# 
  4149  1EC3                     	;# 
  4150  1EC5                     	;# 
  4151  1EC6                     	;# 
  4152  1EC7                     	;# 
  4153  1EC8                     	;# 
  4154  1EC9                     	;# 
  4155  1ECA                     	;# 
  4156  1ECB                     	;# 
  4157  1ECB                     	;# 
  4158  1ECB                     	;# 
  4159  1ECC                     	;# 
  4160  1ECC                     	;# 
  4161  1ECC                     	;# 
  4162  1F10                     	;# 
  4163  1F11                     	;# 
  4164  1F12                     	;# 
  4165  1F14                     	;# 
  4166  1F15                     	;# 
  4167  1F1C                     	;# 
  4168  1F1D                     	;# 
  4169  1F1E                     	;# 
  4170  1F1F                     	;# 
  4171  1F20                     	;# 
  4172  1F21                     	;# 
  4173  1F22                     	;# 
  4174  1F23                     	;# 
  4175  1F24                     	;# 
  4176  1F25                     	;# 
  4177  1F26                     	;# 
  4178  1F27                     	;# 
  4179  1F38                     	;# 
  4180  1F39                     	;# 
  4181  1F3A                     	;# 
  4182  1F3B                     	;# 
  4183  1F3C                     	;# 
  4184  1F3D                     	;# 
  4185  1F3E                     	;# 
  4186  1F3F                     	;# 
  4187  1F43                     	;# 
  4188  1F44                     	;# 
  4189  1F45                     	;# 
  4190  1F46                     	;# 
  4191  1F47                     	;# 
  4192  1F48                     	;# 
  4193  1F49                     	;# 
  4194  1F4A                     	;# 
  4195  1F4E                     	;# 
  4196  1F4F                     	;# 
  4197  1F50                     	;# 
  4198  1F51                     	;# 
  4199  1F52                     	;# 
  4200  1F53                     	;# 
  4201  1F54                     	;# 
  4202  1F55                     	;# 
  4203  1FE4                     	;# 
  4204  1FE5                     	;# 
  4205  1FE6                     	;# 
  4206  1FE7                     	;# 
  4207  1FE8                     	;# 
  4208  1FE8                     	;# 
  4209  1FE9                     	;# 
  4210  1FEA                     	;# 
  4211  1FEB                     	;# 
  4212  1FED                     	;# 
  4213  1FEE                     	;# 
  4214  1FEF                     	;# 
  4215  0000                     	;# 
  4216  0001                     	;# 
  4217  0002                     	;# 
  4218  0003                     	;# 
  4219  0004                     	;# 
  4220  0005                     	;# 
  4221  0006                     	;# 
  4222  0007                     	;# 
  4223  0008                     	;# 
  4224  0009                     	;# 
  4225  000A                     	;# 
  4226  000B                     	;# 
  4227  000C                     	;# 
  4228  000D                     	;# 
  4229  000E                     	;# 
  4230  0012                     	;# 
  4231  0013                     	;# 
  4232  0014                     	;# 
  4233  0018                     	;# 
  4234  0019                     	;# 
  4235  001A                     	;# 
  4236  008C                     	;# 
  4237  008C                     	;# 
  4238  008D                     	;# 
  4239  008E                     	;# 
  4240  008E                     	;# 
  4241  008F                     	;# 
  4242  0090                     	;# 
  4243  0090                     	;# 
  4244  0091                     	;# 
  4245  0092                     	;# 
  4246  0092                     	;# 
  4247  0093                     	;# 
  4248  0094                     	;# 
  4249  0094                     	;# 
  4250  0095                     	;# 
  4251  0096                     	;# 
  4252  0096                     	;# 
  4253  0097                     	;# 
  4254  0098                     	;# 
  4255  0099                     	;# 
  4256  009A                     	;# 
  4257  009B                     	;# 
  4258  009B                     	;# 
  4259  009C                     	;# 
  4260  009D                     	;# 
  4261  009D                     	;# 
  4262  009E                     	;# 
  4263  009F                     	;# 
  4264  010C                     	;# 
  4265  010C                     	;# 
  4266  010D                     	;# 
  4267  010E                     	;# 
  4268  010F                     	;# 
  4269  010F                     	;# 
  4270  0110                     	;# 
  4271  0111                     	;# 
  4272  0112                     	;# 
  4273  0113                     	;# 
  4274  0114                     	;# 
  4275  0115                     	;# 
  4276  0116                     	;# 
  4277  0117                     	;# 
  4278  0118                     	;# 
  4279  0119                     	;# 
  4280  0119                     	;# 
  4281  0119                     	;# 
  4282  011A                     	;# 
  4283  011A                     	;# 
  4284  011A                     	;# 
  4285  011B                     	;# 
  4286  011B                     	;# 
  4287  011B                     	;# 
  4288  011B                     	;# 
  4289  011B                     	;# 
  4290  011C                     	;# 
  4291  011C                     	;# 
  4292  011C                     	;# 
  4293  011D                     	;# 
  4294  011D                     	;# 
  4295  011D                     	;# 
  4296  011E                     	;# 
  4297  011E                     	;# 
  4298  011E                     	;# 
  4299  011F                     	;# 
  4300  011F                     	;# 
  4301  011F                     	;# 
  4302  011F                     	;# 
  4303  011F                     	;# 
  4304  018C                     	;# 
  4305  018D                     	;# 
  4306  018E                     	;# 
  4307  018F                     	;# 
  4308  0190                     	;# 
  4309  0191                     	;# 
  4310  0192                     	;# 
  4311  0196                     	;# 
  4312  0197                     	;# 
  4313  0198                     	;# 
  4314  0199                     	;# 
  4315  019A                     	;# 
  4316  019B                     	;# 
  4317  019C                     	;# 
  4318  020C                     	;# 
  4319  020D                     	;# 
  4320  020E                     	;# 
  4321  020E                     	;# 
  4322  020F                     	;# 
  4323  020F                     	;# 
  4324  0210                     	;# 
  4325  0210                     	;# 
  4326  0211                     	;# 
  4327  0211                     	;# 
  4328  0212                     	;# 
  4329  0213                     	;# 
  4330  0214                     	;# 
  4331  0214                     	;# 
  4332  0215                     	;# 
  4333  0215                     	;# 
  4334  0216                     	;# 
  4335  0216                     	;# 
  4336  0217                     	;# 
  4337  0217                     	;# 
  4338  0218                     	;# 
  4339  0219                     	;# 
  4340  021A                     	;# 
  4341  021A                     	;# 
  4342  021B                     	;# 
  4343  021B                     	;# 
  4344  021C                     	;# 
  4345  021C                     	;# 
  4346  021D                     	;# 
  4347  021D                     	;# 
  4348  021E                     	;# 
  4349  021F                     	;# 
  4350  028C                     	;# 
  4351  028C                     	;# 
  4352  028D                     	;# 
  4353  028D                     	;# 
  4354  028E                     	;# 
  4355  028F                     	;# 
  4356  0290                     	;# 
  4357  0291                     	;# 
  4358  0292                     	;# 
  4359  0292                     	;# 
  4360  0293                     	;# 
  4361  0293                     	;# 
  4362  0294                     	;# 
  4363  0295                     	;# 
  4364  0296                     	;# 
  4365  0297                     	;# 
  4366  0298                     	;# 
  4367  0298                     	;# 
  4368  0299                     	;# 
  4369  0299                     	;# 
  4370  029A                     	;# 
  4371  029B                     	;# 
  4372  029C                     	;# 
  4373  029D                     	;# 
  4374  029F                     	;# 
  4375  030C                     	;# 
  4376  030C                     	;# 
  4377  030D                     	;# 
  4378  030E                     	;# 
  4379  030F                     	;# 
  4380  0310                     	;# 
  4381  0310                     	;# 
  4382  0311                     	;# 
  4383  0312                     	;# 
  4384  0313                     	;# 
  4385  0314                     	;# 
  4386  0314                     	;# 
  4387  0315                     	;# 
  4388  0316                     	;# 
  4389  0317                     	;# 
  4390  0318                     	;# 
  4391  0318                     	;# 
  4392  0319                     	;# 
  4393  031A                     	;# 
  4394  031B                     	;# 
  4395  038C                     	;# 
  4396  038C                     	;# 
  4397  038D                     	;# 
  4398  038E                     	;# 
  4399  0390                     	;# 
  4400  0390                     	;# 
  4401  0391                     	;# 
  4402  0392                     	;# 
  4403  048C                     	;# 
  4404  048C                     	;# 
  4405  048D                     	;# 
  4406  048E                     	;# 
  4407  048F                     	;# 
  4408  048F                     	;# 
  4409  0490                     	;# 
  4410  0491                     	;# 
  4411  0492                     	;# 
  4412  0492                     	;# 
  4413  0493                     	;# 
  4414  0494                     	;# 
  4415  0495                     	;# 
  4416  0495                     	;# 
  4417  0496                     	;# 
  4418  0497                     	;# 
  4419  0498                     	;# 
  4420  0499                     	;# 
  4421  049A                     	;# 
  4422  049B                     	;# 
  4423  049C                     	;# 
  4424  049D                     	;# 
  4425  058C                     	;# 
  4426  058C                     	;# 
  4427  058D                     	;# 
  4428  058E                     	;# 
  4429  058F                     	;# 
  4430  058F                     	;# 
  4431  0590                     	;# 
  4432  0591                     	;# 
  4433  0592                     	;# 
  4434  0593                     	;# 
  4435  059C                     	;# 
  4436  059C                     	;# 
  4437  059D                     	;# 
  4438  059D                     	;# 
  4439  059E                     	;# 
  4440  059F                     	;# 
  4441  060C                     	;# 
  4442  060C                     	;# 
  4443  060D                     	;# 
  4444  060D                     	;# 
  4445  060E                     	;# 
  4446  060F                     	;# 
  4447  0610                     	;# 
  4448  0611                     	;# 
  4449  0612                     	;# 
  4450  0613                     	;# 
  4451  0614                     	;# 
  4452  0616                     	;# 
  4453  0616                     	;# 
  4454  0617                     	;# 
  4455  0617                     	;# 
  4456  0618                     	;# 
  4457  0619                     	;# 
  4458  061A                     	;# 
  4459  061B                     	;# 
  4460  061C                     	;# 
  4461  061D                     	;# 
  4462  061E                     	;# 
  4463  070C                     	;# 
  4464  070D                     	;# 
  4465  070E                     	;# 
  4466  070F                     	;# 
  4467  0710                     	;# 
  4468  0711                     	;# 
  4469  0712                     	;# 
  4470  0713                     	;# 
  4471  0714                     	;# 
  4472  0716                     	;# 
  4473  0717                     	;# 
  4474  0718                     	;# 
  4475  0719                     	;# 
  4476  071A                     	;# 
  4477  071B                     	;# 
  4478  071C                     	;# 
  4479  071D                     	;# 
  4480  071E                     	;# 
  4481  0796                     	;# 
  4482  0797                     	;# 
  4483  0798                     	;# 
  4484  0799                     	;# 
  4485  079A                     	;# 
  4486  079B                     	;# 
  4487  079C                     	;# 
  4488  079D                     	;# 
  4489  080C                     	;# 
  4490  080D                     	;# 
  4491  080E                     	;# 
  4492  080F                     	;# 
  4493  0810                     	;# 
  4494  0811                     	;# 
  4495  0812                     	;# 
  4496  0813                     	;# 
  4497  0814                     	;# 
  4498  081A                     	;# 
  4499  081A                     	;# 
  4500  081B                     	;# 
  4501  081C                     	;# 
  4502  081C                     	;# 
  4503  081D                     	;# 
  4504  081E                     	;# 
  4505  081F                     	;# 
  4506  088C                     	;# 
  4507  088D                     	;# 
  4508  088E                     	;# 
  4509  088F                     	;# 
  4510  0890                     	;# 
  4511  0891                     	;# 
  4512  0892                     	;# 
  4513  0893                     	;# 
  4514  0895                     	;# 
  4515  0896                     	;# 
  4516  0897                     	;# 
  4517  0898                     	;# 
  4518  0899                     	;# 
  4519  089A                     	;# 
  4520  089B                     	;# 
  4521  090C                     	;# 
  4522  090E                     	;# 
  4523  090F                     	;# 
  4524  091F                     	;# 
  4525  098F                     	;# 
  4526  098F                     	;# 
  4527  0990                     	;# 
  4528  0991                     	;# 
  4529  0992                     	;# 
  4530  0993                     	;# 
  4531  0994                     	;# 
  4532  0995                     	;# 
  4533  0996                     	;# 
  4534  0997                     	;# 
  4535  1E0F                     	;# 
  4536  1E10                     	;# 
  4537  1E11                     	;# 
  4538  1E12                     	;# 
  4539  1E13                     	;# 
  4540  1E14                     	;# 
  4541  1E15                     	;# 
  4542  1E16                     	;# 
  4543  1E17                     	;# 
  4544  1E18                     	;# 
  4545  1E19                     	;# 
  4546  1E1A                     	;# 
  4547  1E1B                     	;# 
  4548  1E1C                     	;# 
  4549  1E1D                     	;# 
  4550  1E1E                     	;# 
  4551  1E1F                     	;# 
  4552  1E20                     	;# 
  4553  1E21                     	;# 
  4554  1E22                     	;# 
  4555  1E23                     	;# 
  4556  1E24                     	;# 
  4557  1E25                     	;# 
  4558  1E26                     	;# 
  4559  1E27                     	;# 
  4560  1E28                     	;# 
  4561  1E29                     	;# 
  4562  1E2A                     	;# 
  4563  1E2B                     	;# 
  4564  1E2C                     	;# 
  4565  1E2D                     	;# 
  4566  1E2E                     	;# 
  4567  1E2F                     	;# 
  4568  1E30                     	;# 
  4569  1E31                     	;# 
  4570  1E32                     	;# 
  4571  1E33                     	;# 
  4572  1E34                     	;# 
  4573  1E35                     	;# 
  4574  1E36                     	;# 
  4575  1E37                     	;# 
  4576  1E8F                     	;# 
  4577  1E90                     	;# 
  4578  1E91                     	;# 
  4579  1E92                     	;# 
  4580  1E93                     	;# 
  4581  1E94                     	;# 
  4582  1E95                     	;# 
  4583  1E96                     	;# 
  4584  1E97                     	;# 
  4585  1E9C                     	;# 
  4586  1E9D                     	;# 
  4587  1E9E                     	;# 
  4588  1EA1                     	;# 
  4589  1EA2                     	;# 
  4590  1EA3                     	;# 
  4591  1EA4                     	;# 
  4592  1EA9                     	;# 
  4593  1EAA                     	;# 
  4594  1EB1                     	;# 
  4595  1EB2                     	;# 
  4596  1EB8                     	;# 
  4597  1EB9                     	;# 
  4598  1EBA                     	;# 
  4599  1EBB                     	;# 
  4600  1EBC                     	;# 
  4601  1EBD                     	;# 
  4602  1EBE                     	;# 
  4603  1EC3                     	;# 
  4604  1EC5                     	;# 
  4605  1EC6                     	;# 
  4606  1EC7                     	;# 
  4607  1EC8                     	;# 
  4608  1EC9                     	;# 
  4609  1ECA                     	;# 
  4610  1ECB                     	;# 
  4611  1ECB                     	;# 
  4612  1ECB                     	;# 
  4613  1ECC                     	;# 
  4614  1ECC                     	;# 
  4615  1ECC                     	;# 
  4616  1F10                     	;# 
  4617  1F11                     	;# 
  4618  1F12                     	;# 
  4619  1F14                     	;# 
  4620  1F15                     	;# 
  4621  1F1C                     	;# 
  4622  1F1D                     	;# 
  4623  1F1E                     	;# 
  4624  1F1F                     	;# 
  4625  1F20                     	;# 
  4626  1F21                     	;# 
  4627  1F22                     	;# 
  4628  1F23                     	;# 
  4629  1F24                     	;# 
  4630  1F25                     	;# 
  4631  1F26                     	;# 
  4632  1F27                     	;# 
  4633  1F38                     	;# 
  4634  1F39                     	;# 
  4635  1F3A                     	;# 
  4636  1F3B                     	;# 
  4637  1F3C                     	;# 
  4638  1F3D                     	;# 
  4639  1F3E                     	;# 
  4640  1F3F                     	;# 
  4641  1F43                     	;# 
  4642  1F44                     	;# 
  4643  1F45                     	;# 
  4644  1F46                     	;# 
  4645  1F47                     	;# 
  4646  1F48                     	;# 
  4647  1F49                     	;# 
  4648  1F4A                     	;# 
  4649  1F4E                     	;# 
  4650  1F4F                     	;# 
  4651  1F50                     	;# 
  4652  1F51                     	;# 
  4653  1F52                     	;# 
  4654  1F53                     	;# 
  4655  1F54                     	;# 
  4656  1F55                     	;# 
  4657  1FE4                     	;# 
  4658  1FE5                     	;# 
  4659  1FE6                     	;# 
  4660  1FE7                     	;# 
  4661  1FE8                     	;# 
  4662  1FE8                     	;# 
  4663  1FE9                     	;# 
  4664  1FEA                     	;# 
  4665  1FEB                     	;# 
  4666  1FED                     	;# 
  4667  1FEE                     	;# 
  4668  1FEF                     	;# 
  4669  0000                     	;# 
  4670  0001                     	;# 
  4671  0002                     	;# 
  4672  0003                     	;# 
  4673  0004                     	;# 
  4674  0005                     	;# 
  4675  0006                     	;# 
  4676  0007                     	;# 
  4677  0008                     	;# 
  4678  0009                     	;# 
  4679  000A                     	;# 
  4680  000B                     	;# 
  4681  000C                     	;# 
  4682  000D                     	;# 
  4683  000E                     	;# 
  4684  0012                     	;# 
  4685  0013                     	;# 
  4686  0014                     	;# 
  4687  0018                     	;# 
  4688  0019                     	;# 
  4689  001A                     	;# 
  4690  008C                     	;# 
  4691  008C                     	;# 
  4692  008D                     	;# 
  4693  008E                     	;# 
  4694  008E                     	;# 
  4695  008F                     	;# 
  4696  0090                     	;# 
  4697  0090                     	;# 
  4698  0091                     	;# 
  4699  0092                     	;# 
  4700  0092                     	;# 
  4701  0093                     	;# 
  4702  0094                     	;# 
  4703  0094                     	;# 
  4704  0095                     	;# 
  4705  0096                     	;# 
  4706  0096                     	;# 
  4707  0097                     	;# 
  4708  0098                     	;# 
  4709  0099                     	;# 
  4710  009A                     	;# 
  4711  009B                     	;# 
  4712  009B                     	;# 
  4713  009C                     	;# 
  4714  009D                     	;# 
  4715  009D                     	;# 
  4716  009E                     	;# 
  4717  009F                     	;# 
  4718  010C                     	;# 
  4719  010C                     	;# 
  4720  010D                     	;# 
  4721  010E                     	;# 
  4722  010F                     	;# 
  4723  010F                     	;# 
  4724  0110                     	;# 
  4725  0111                     	;# 
  4726  0112                     	;# 
  4727  0113                     	;# 
  4728  0114                     	;# 
  4729  0115                     	;# 
  4730  0116                     	;# 
  4731  0117                     	;# 
  4732  0118                     	;# 
  4733  0119                     	;# 
  4734  0119                     	;# 
  4735  0119                     	;# 
  4736  011A                     	;# 
  4737  011A                     	;# 
  4738  011A                     	;# 
  4739  011B                     	;# 
  4740  011B                     	;# 
  4741  011B                     	;# 
  4742  011B                     	;# 
  4743  011B                     	;# 
  4744  011C                     	;# 
  4745  011C                     	;# 
  4746  011C                     	;# 
  4747  011D                     	;# 
  4748  011D                     	;# 
  4749  011D                     	;# 
  4750  011E                     	;# 
  4751  011E                     	;# 
  4752  011E                     	;# 
  4753  011F                     	;# 
  4754  011F                     	;# 
  4755  011F                     	;# 
  4756  011F                     	;# 
  4757  011F                     	;# 
  4758  018C                     	;# 
  4759  018D                     	;# 
  4760  018E                     	;# 
  4761  018F                     	;# 
  4762  0190                     	;# 
  4763  0191                     	;# 
  4764  0192                     	;# 
  4765  0196                     	;# 
  4766  0197                     	;# 
  4767  0198                     	;# 
  4768  0199                     	;# 
  4769  019A                     	;# 
  4770  019B                     	;# 
  4771  019C                     	;# 
  4772  020C                     	;# 
  4773  020D                     	;# 
  4774  020E                     	;# 
  4775  020E                     	;# 
  4776  020F                     	;# 
  4777  020F                     	;# 
  4778  0210                     	;# 
  4779  0210                     	;# 
  4780  0211                     	;# 
  4781  0211                     	;# 
  4782  0212                     	;# 
  4783  0213                     	;# 
  4784  0214                     	;# 
  4785  0214                     	;# 
  4786  0215                     	;# 
  4787  0215                     	;# 
  4788  0216                     	;# 
  4789  0216                     	;# 
  4790  0217                     	;# 
  4791  0217                     	;# 
  4792  0218                     	;# 
  4793  0219                     	;# 
  4794  021A                     	;# 
  4795  021A                     	;# 
  4796  021B                     	;# 
  4797  021B                     	;# 
  4798  021C                     	;# 
  4799  021C                     	;# 
  4800  021D                     	;# 
  4801  021D                     	;# 
  4802  021E                     	;# 
  4803  021F                     	;# 
  4804  028C                     	;# 
  4805  028C                     	;# 
  4806  028D                     	;# 
  4807  028D                     	;# 
  4808  028E                     	;# 
  4809  028F                     	;# 
  4810  0290                     	;# 
  4811  0291                     	;# 
  4812  0292                     	;# 
  4813  0292                     	;# 
  4814  0293                     	;# 
  4815  0293                     	;# 
  4816  0294                     	;# 
  4817  0295                     	;# 
  4818  0296                     	;# 
  4819  0297                     	;# 
  4820  0298                     	;# 
  4821  0298                     	;# 
  4822  0299                     	;# 
  4823  0299                     	;# 
  4824  029A                     	;# 
  4825  029B                     	;# 
  4826  029C                     	;# 
  4827  029D                     	;# 
  4828  029F                     	;# 
  4829  030C                     	;# 
  4830  030C                     	;# 
  4831  030D                     	;# 
  4832  030E                     	;# 
  4833  030F                     	;# 
  4834  0310                     	;# 
  4835  0310                     	;# 
  4836  0311                     	;# 
  4837  0312                     	;# 
  4838  0313                     	;# 
  4839  0314                     	;# 
  4840  0314                     	;# 
  4841  0315                     	;# 
  4842  0316                     	;# 
  4843  0317                     	;# 
  4844  0318                     	;# 
  4845  0318                     	;# 
  4846  0319                     	;# 
  4847  031A                     	;# 
  4848  031B                     	;# 
  4849  038C                     	;# 
  4850  038C                     	;# 
  4851  038D                     	;# 
  4852  038E                     	;# 
  4853  0390                     	;# 
  4854  0390                     	;# 
  4855  0391                     	;# 
  4856  0392                     	;# 
  4857  048C                     	;# 
  4858  048C                     	;# 
  4859  048D                     	;# 
  4860  048E                     	;# 
  4861  048F                     	;# 
  4862  048F                     	;# 
  4863  0490                     	;# 
  4864  0491                     	;# 
  4865  0492                     	;# 
  4866  0492                     	;# 
  4867  0493                     	;# 
  4868  0494                     	;# 
  4869  0495                     	;# 
  4870  0495                     	;# 
  4871  0496                     	;# 
  4872  0497                     	;# 
  4873  0498                     	;# 
  4874  0499                     	;# 
  4875  049A                     	;# 
  4876  049B                     	;# 
  4877  049C                     	;# 
  4878  049D                     	;# 
  4879  058C                     	;# 
  4880  058C                     	;# 
  4881  058D                     	;# 
  4882  058E                     	;# 
  4883  058F                     	;# 
  4884  058F                     	;# 
  4885  0590                     	;# 
  4886  0591                     	;# 
  4887  0592                     	;# 
  4888  0593                     	;# 
  4889  059C                     	;# 
  4890  059C                     	;# 
  4891  059D                     	;# 
  4892  059D                     	;# 
  4893  059E                     	;# 
  4894  059F                     	;# 
  4895  060C                     	;# 
  4896  060C                     	;# 
  4897  060D                     	;# 
  4898  060D                     	;# 
  4899  060E                     	;# 
  4900  060F                     	;# 
  4901  0610                     	;# 
  4902  0611                     	;# 
  4903  0612                     	;# 
  4904  0613                     	;# 
  4905  0614                     	;# 
  4906  0616                     	;# 
  4907  0616                     	;# 
  4908  0617                     	;# 
  4909  0617                     	;# 
  4910  0618                     	;# 
  4911  0619                     	;# 
  4912  061A                     	;# 
  4913  061B                     	;# 
  4914  061C                     	;# 
  4915  061D                     	;# 
  4916  061E                     	;# 
  4917  070C                     	;# 
  4918  070D                     	;# 
  4919  070E                     	;# 
  4920  070F                     	;# 
  4921  0710                     	;# 
  4922  0711                     	;# 
  4923  0712                     	;# 
  4924  0713                     	;# 
  4925  0714                     	;# 
  4926  0716                     	;# 
  4927  0717                     	;# 
  4928  0718                     	;# 
  4929  0719                     	;# 
  4930  071A                     	;# 
  4931  071B                     	;# 
  4932  071C                     	;# 
  4933  071D                     	;# 
  4934  071E                     	;# 
  4935  0796                     	;# 
  4936  0797                     	;# 
  4937  0798                     	;# 
  4938  0799                     	;# 
  4939  079A                     	;# 
  4940  079B                     	;# 
  4941  079C                     	;# 
  4942  079D                     	;# 
  4943  080C                     	;# 
  4944  080D                     	;# 
  4945  080E                     	;# 
  4946  080F                     	;# 
  4947  0810                     	;# 
  4948  0811                     	;# 
  4949  0812                     	;# 
  4950  0813                     	;# 
  4951  0814                     	;# 
  4952  081A                     	;# 
  4953  081A                     	;# 
  4954  081B                     	;# 
  4955  081C                     	;# 
  4956  081C                     	;# 
  4957  081D                     	;# 
  4958  081E                     	;# 
  4959  081F                     	;# 
  4960  088C                     	;# 
  4961  088D                     	;# 
  4962  088E                     	;# 
  4963  088F                     	;# 
  4964  0890                     	;# 
  4965  0891                     	;# 
  4966  0892                     	;# 
  4967  0893                     	;# 
  4968  0895                     	;# 
  4969  0896                     	;# 
  4970  0897                     	;# 
  4971  0898                     	;# 
  4972  0899                     	;# 
  4973  089A                     	;# 
  4974  089B                     	;# 
  4975  090C                     	;# 
  4976  090E                     	;# 
  4977  090F                     	;# 
  4978  091F                     	;# 
  4979  098F                     	;# 
  4980  098F                     	;# 
  4981  0990                     	;# 
  4982  0991                     	;# 
  4983  0992                     	;# 
  4984  0993                     	;# 
  4985  0994                     	;# 
  4986  0995                     	;# 
  4987  0996                     	;# 
  4988  0997                     	;# 
  4989  1E0F                     	;# 
  4990  1E10                     	;# 
  4991  1E11                     	;# 
  4992  1E12                     	;# 
  4993  1E13                     	;# 
  4994  1E14                     	;# 
  4995  1E15                     	;# 
  4996  1E16                     	;# 
  4997  1E17                     	;# 
  4998  1E18                     	;# 
  4999  1E19                     	;# 
  5000  1E1A                     	;# 
  5001  1E1B                     	;# 
  5002  1E1C                     	;# 
  5003  1E1D                     	;# 
  5004  1E1E                     	;# 
  5005  1E1F                     	;# 
  5006  1E20                     	;# 
  5007  1E21                     	;# 
  5008  1E22                     	;# 
  5009  1E23                     	;# 
  5010  1E24                     	;# 
  5011  1E25                     	;# 
  5012  1E26                     	;# 
  5013  1E27                     	;# 
  5014  1E28                     	;# 
  5015  1E29                     	;# 
  5016  1E2A                     	;# 
  5017  1E2B                     	;# 
  5018  1E2C                     	;# 
  5019  1E2D                     	;# 
  5020  1E2E                     	;# 
  5021  1E2F                     	;# 
  5022  1E30                     	;# 
  5023  1E31                     	;# 
  5024  1E32                     	;# 
  5025  1E33                     	;# 
  5026  1E34                     	;# 
  5027  1E35                     	;# 
  5028  1E36                     	;# 
  5029  1E37                     	;# 
  5030  1E8F                     	;# 
  5031  1E90                     	;# 
  5032  1E91                     	;# 
  5033  1E92                     	;# 
  5034  1E93                     	;# 
  5035  1E94                     	;# 
  5036  1E95                     	;# 
  5037  1E96                     	;# 
  5038  1E97                     	;# 
  5039  1E9C                     	;# 
  5040  1E9D                     	;# 
  5041  1E9E                     	;# 
  5042  1EA1                     	;# 
  5043  1EA2                     	;# 
  5044  1EA3                     	;# 
  5045  1EA4                     	;# 
  5046  1EA9                     	;# 
  5047  1EAA                     	;# 
  5048  1EB1                     	;# 
  5049  1EB2                     	;# 
  5050  1EB8                     	;# 
  5051  1EB9                     	;# 
  5052  1EBA                     	;# 
  5053  1EBB                     	;# 
  5054  1EBC                     	;# 
  5055  1EBD                     	;# 
  5056  1EBE                     	;# 
  5057  1EC3                     	;# 
  5058  1EC5                     	;# 
  5059  1EC6                     	;# 
  5060  1EC7                     	;# 
  5061  1EC8                     	;# 
  5062  1EC9                     	;# 
  5063  1ECA                     	;# 
  5064  1ECB                     	;# 
  5065  1ECB                     	;# 
  5066  1ECB                     	;# 
  5067  1ECC                     	;# 
  5068  1ECC                     	;# 
  5069  1ECC                     	;# 
  5070  1F10                     	;# 
  5071  1F11                     	;# 
  5072  1F12                     	;# 
  5073  1F14                     	;# 
  5074  1F15                     	;# 
  5075  1F1C                     	;# 
  5076  1F1D                     	;# 
  5077  1F1E                     	;# 
  5078  1F1F                     	;# 
  5079  1F20                     	;# 
  5080  1F21                     	;# 
  5081  1F22                     	;# 
  5082  1F23                     	;# 
  5083  1F24                     	;# 
  5084  1F25                     	;# 
  5085  1F26                     	;# 
  5086  1F27                     	;# 
  5087  1F38                     	;# 
  5088  1F39                     	;# 
  5089  1F3A                     	;# 
  5090  1F3B                     	;# 
  5091  1F3C                     	;# 
  5092  1F3D                     	;# 
  5093  1F3E                     	;# 
  5094  1F3F                     	;# 
  5095  1F43                     	;# 
  5096  1F44                     	;# 
  5097  1F45                     	;# 
  5098  1F46                     	;# 
  5099  1F47                     	;# 
  5100  1F48                     	;# 
  5101  1F49                     	;# 
  5102  1F4A                     	;# 
  5103  1F4E                     	;# 
  5104  1F4F                     	;# 
  5105  1F50                     	;# 
  5106  1F51                     	;# 
  5107  1F52                     	;# 
  5108  1F53                     	;# 
  5109  1F54                     	;# 
  5110  1F55                     	;# 
  5111  1FE4                     	;# 
  5112  1FE5                     	;# 
  5113  1FE6                     	;# 
  5114  1FE7                     	;# 
  5115  1FE8                     	;# 
  5116  1FE8                     	;# 
  5117  1FE9                     	;# 
  5118  1FEA                     	;# 
  5119  1FEB                     	;# 
  5120  1FED                     	;# 
  5121  1FEE                     	;# 
  5122  1FEF                     	;# 
  5123  0000                     	;# 
  5124  0001                     	;# 
  5125  0002                     	;# 
  5126  0003                     	;# 
  5127  0004                     	;# 
  5128  0005                     	;# 
  5129  0006                     	;# 
  5130  0007                     	;# 
  5131  0008                     	;# 
  5132  0009                     	;# 
  5133  000A                     	;# 
  5134  000B                     	;# 
  5135  000C                     	;# 
  5136  000D                     	;# 
  5137  000E                     	;# 
  5138  0012                     	;# 
  5139  0013                     	;# 
  5140  0014                     	;# 
  5141  0018                     	;# 
  5142  0019                     	;# 
  5143  001A                     	;# 
  5144  008C                     	;# 
  5145  008C                     	;# 
  5146  008D                     	;# 
  5147  008E                     	;# 
  5148  008E                     	;# 
  5149  008F                     	;# 
  5150  0090                     	;# 
  5151  0090                     	;# 
  5152  0091                     	;# 
  5153  0092                     	;# 
  5154  0092                     	;# 
  5155  0093                     	;# 
  5156  0094                     	;# 
  5157  0094                     	;# 
  5158  0095                     	;# 
  5159  0096                     	;# 
  5160  0096                     	;# 
  5161  0097                     	;# 
  5162  0098                     	;# 
  5163  0099                     	;# 
  5164  009A                     	;# 
  5165  009B                     	;# 
  5166  009B                     	;# 
  5167  009C                     	;# 
  5168  009D                     	;# 
  5169  009D                     	;# 
  5170  009E                     	;# 
  5171  009F                     	;# 
  5172  010C                     	;# 
  5173  010C                     	;# 
  5174  010D                     	;# 
  5175  010E                     	;# 
  5176  010F                     	;# 
  5177  010F                     	;# 
  5178  0110                     	;# 
  5179  0111                     	;# 
  5180  0112                     	;# 
  5181  0113                     	;# 
  5182  0114                     	;# 
  5183  0115                     	;# 
  5184  0116                     	;# 
  5185  0117                     	;# 
  5186  0118                     	;# 
  5187  0119                     	;# 
  5188  0119                     	;# 
  5189  0119                     	;# 
  5190  011A                     	;# 
  5191  011A                     	;# 
  5192  011A                     	;# 
  5193  011B                     	;# 
  5194  011B                     	;# 
  5195  011B                     	;# 
  5196  011B                     	;# 
  5197  011B                     	;# 
  5198  011C                     	;# 
  5199  011C                     	;# 
  5200  011C                     	;# 
  5201  011D                     	;# 
  5202  011D                     	;# 
  5203  011D                     	;# 
  5204  011E                     	;# 
  5205  011E                     	;# 
  5206  011E                     	;# 
  5207  011F                     	;# 
  5208  011F                     	;# 
  5209  011F                     	;# 
  5210  011F                     	;# 
  5211  011F                     	;# 
  5212  018C                     	;# 
  5213  018D                     	;# 
  5214  018E                     	;# 
  5215  018F                     	;# 
  5216  0190                     	;# 
  5217  0191                     	;# 
  5218  0192                     	;# 
  5219  0196                     	;# 
  5220  0197                     	;# 
  5221  0198                     	;# 
  5222  0199                     	;# 
  5223  019A                     	;# 
  5224  019B                     	;# 
  5225  019C                     	;# 
  5226  020C                     	;# 
  5227  020D                     	;# 
  5228  020E                     	;# 
  5229  020E                     	;# 
  5230  020F                     	;# 
  5231  020F                     	;# 
  5232  0210                     	;# 
  5233  0210                     	;# 
  5234  0211                     	;# 
  5235  0211                     	;# 
  5236  0212                     	;# 
  5237  0213                     	;# 
  5238  0214                     	;# 
  5239  0214                     	;# 
  5240  0215                     	;# 
  5241  0215                     	;# 
  5242  0216                     	;# 
  5243  0216                     	;# 
  5244  0217                     	;# 
  5245  0217                     	;# 
  5246  0218                     	;# 
  5247  0219                     	;# 
  5248  021A                     	;# 
  5249  021A                     	;# 
  5250  021B                     	;# 
  5251  021B                     	;# 
  5252  021C                     	;# 
  5253  021C                     	;# 
  5254  021D                     	;# 
  5255  021D                     	;# 
  5256  021E                     	;# 
  5257  021F                     	;# 
  5258  028C                     	;# 
  5259  028C                     	;# 
  5260  028D                     	;# 
  5261  028D                     	;# 
  5262  028E                     	;# 
  5263  028F                     	;# 
  5264  0290                     	;# 
  5265  0291                     	;# 
  5266  0292                     	;# 
  5267  0292                     	;# 
  5268  0293                     	;# 
  5269  0293                     	;# 
  5270  0294                     	;# 
  5271  0295                     	;# 
  5272  0296                     	;# 
  5273  0297                     	;# 
  5274  0298                     	;# 
  5275  0298                     	;# 
  5276  0299                     	;# 
  5277  0299                     	;# 
  5278  029A                     	;# 
  5279  029B                     	;# 
  5280  029C                     	;# 
  5281  029D                     	;# 
  5282  029F                     	;# 
  5283  030C                     	;# 
  5284  030C                     	;# 
  5285  030D                     	;# 
  5286  030E                     	;# 
  5287  030F                     	;# 
  5288  0310                     	;# 
  5289  0310                     	;# 
  5290  0311                     	;# 
  5291  0312                     	;# 
  5292  0313                     	;# 
  5293  0314                     	;# 
  5294  0314                     	;# 
  5295  0315                     	;# 
  5296  0316                     	;# 
  5297  0317                     	;# 
  5298  0318                     	;# 
  5299  0318                     	;# 
  5300  0319                     	;# 
  5301  031A                     	;# 
  5302  031B                     	;# 
  5303  038C                     	;# 
  5304  038C                     	;# 
  5305  038D                     	;# 
  5306  038E                     	;# 
  5307  0390                     	;# 
  5308  0390                     	;# 
  5309  0391                     	;# 
  5310  0392                     	;# 
  5311  048C                     	;# 
  5312  048C                     	;# 
  5313  048D                     	;# 
  5314  048E                     	;# 
  5315  048F                     	;# 
  5316  048F                     	;# 
  5317  0490                     	;# 
  5318  0491                     	;# 
  5319  0492                     	;# 
  5320  0492                     	;# 
  5321  0493                     	;# 
  5322  0494                     	;# 
  5323  0495                     	;# 
  5324  0495                     	;# 
  5325  0496                     	;# 
  5326  0497                     	;# 
  5327  0498                     	;# 
  5328  0499                     	;# 
  5329  049A                     	;# 
  5330  049B                     	;# 
  5331  049C                     	;# 
  5332  049D                     	;# 
  5333  058C                     	;# 
  5334  058C                     	;# 
  5335  058D                     	;# 
  5336  058E                     	;# 
  5337  058F                     	;# 
  5338  058F                     	;# 
  5339  0590                     	;# 
  5340  0591                     	;# 
  5341  0592                     	;# 
  5342  0593                     	;# 
  5343  059C                     	;# 
  5344  059C                     	;# 
  5345  059D                     	;# 
  5346  059D                     	;# 
  5347  059E                     	;# 
  5348  059F                     	;# 
  5349  060C                     	;# 
  5350  060C                     	;# 
  5351  060D                     	;# 
  5352  060D                     	;# 
  5353  060E                     	;# 
  5354  060F                     	;# 
  5355  0610                     	;# 
  5356  0611                     	;# 
  5357  0612                     	;# 
  5358  0613                     	;# 
  5359  0614                     	;# 
  5360  0616                     	;# 
  5361  0616                     	;# 
  5362  0617                     	;# 
  5363  0617                     	;# 
  5364  0618                     	;# 
  5365  0619                     	;# 
  5366  061A                     	;# 
  5367  061B                     	;# 
  5368  061C                     	;# 
  5369  061D                     	;# 
  5370  061E                     	;# 
  5371  070C                     	;# 
  5372  070D                     	;# 
  5373  070E                     	;# 
  5374  070F                     	;# 
  5375  0710                     	;# 
  5376  0711                     	;# 
  5377  0712                     	;# 
  5378  0713                     	;# 
  5379  0714                     	;# 
  5380  0716                     	;# 
  5381  0717                     	;# 
  5382  0718                     	;# 
  5383  0719                     	;# 
  5384  071A                     	;# 
  5385  071B                     	;# 
  5386  071C                     	;# 
  5387  071D                     	;# 
  5388  071E                     	;# 
  5389  0796                     	;# 
  5390  0797                     	;# 
  5391  0798                     	;# 
  5392  0799                     	;# 
  5393  079A                     	;# 
  5394  079B                     	;# 
  5395  079C                     	;# 
  5396  079D                     	;# 
  5397  080C                     	;# 
  5398  080D                     	;# 
  5399  080E                     	;# 
  5400  080F                     	;# 
  5401  0810                     	;# 
  5402  0811                     	;# 
  5403  0812                     	;# 
  5404  0813                     	;# 
  5405  0814                     	;# 
  5406  081A                     	;# 
  5407  081A                     	;# 
  5408  081B                     	;# 
  5409  081C                     	;# 
  5410  081C                     	;# 
  5411  081D                     	;# 
  5412  081E                     	;# 
  5413  081F                     	;# 
  5414  088C                     	;# 
  5415  088D                     	;# 
  5416  088E                     	;# 
  5417  088F                     	;# 
  5418  0890                     	;# 
  5419  0891                     	;# 
  5420  0892                     	;# 
  5421  0893                     	;# 
  5422  0895                     	;# 
  5423  0896                     	;# 
  5424  0897                     	;# 
  5425  0898                     	;# 
  5426  0899                     	;# 
  5427  089A                     	;# 
  5428  089B                     	;# 
  5429  090C                     	;# 
  5430  090E                     	;# 
  5431  090F                     	;# 
  5432  091F                     	;# 
  5433  098F                     	;# 
  5434  098F                     	;# 
  5435  0990                     	;# 
  5436  0991                     	;# 
  5437  0992                     	;# 
  5438  0993                     	;# 
  5439  0994                     	;# 
  5440  0995                     	;# 
  5441  0996                     	;# 
  5442  0997                     	;# 
  5443  1E0F                     	;# 
  5444  1E10                     	;# 
  5445  1E11                     	;# 
  5446  1E12                     	;# 
  5447  1E13                     	;# 
  5448  1E14                     	;# 
  5449  1E15                     	;# 
  5450  1E16                     	;# 
  5451  1E17                     	;# 
  5452  1E18                     	;# 
  5453  1E19                     	;# 
  5454  1E1A                     	;# 
  5455  1E1B                     	;# 
  5456  1E1C                     	;# 
  5457  1E1D                     	;# 
  5458  1E1E                     	;# 
  5459  1E1F                     	;# 
  5460  1E20                     	;# 
  5461  1E21                     	;# 
  5462  1E22                     	;# 
  5463  1E23                     	;# 
  5464  1E24                     	;# 
  5465  1E25                     	;# 
  5466  1E26                     	;# 
  5467  1E27                     	;# 
  5468  1E28                     	;# 
  5469  1E29                     	;# 
  5470  1E2A                     	;# 
  5471  1E2B                     	;# 
  5472  1E2C                     	;# 
  5473  1E2D                     	;# 
  5474  1E2E                     	;# 
  5475  1E2F                     	;# 
  5476  1E30                     	;# 
  5477  1E31                     	;# 
  5478  1E32                     	;# 
  5479  1E33                     	;# 
  5480  1E34                     	;# 
  5481  1E35                     	;# 
  5482  1E36                     	;# 
  5483  1E37                     	;# 
  5484  1E8F                     	;# 
  5485  1E90                     	;# 
  5486  1E91                     	;# 
  5487  1E92                     	;# 
  5488  1E93                     	;# 
  5489  1E94                     	;# 
  5490  1E95                     	;# 
  5491  1E96                     	;# 
  5492  1E97                     	;# 
  5493  1E9C                     	;# 
  5494  1E9D                     	;# 
  5495  1E9E                     	;# 
  5496  1EA1                     	;# 
  5497  1EA2                     	;# 
  5498  1EA3                     	;# 
  5499  1EA4                     	;# 
  5500  1EA9                     	;# 
  5501  1EAA                     	;# 
  5502  1EB1                     	;# 
  5503  1EB2                     	;# 
  5504  1EB8                     	;# 
  5505  1EB9                     	;# 
  5506  1EBA                     	;# 
  5507  1EBB                     	;# 
  5508  1EBC                     	;# 
  5509  1EBD                     	;# 
  5510  1EBE                     	;# 
  5511  1EC3                     	;# 
  5512  1EC5                     	;# 
  5513  1EC6                     	;# 
  5514  1EC7                     	;# 
  5515  1EC8                     	;# 
  5516  1EC9                     	;# 
  5517  1ECA                     	;# 
  5518  1ECB                     	;# 
  5519  1ECB                     	;# 
  5520  1ECB                     	;# 
  5521  1ECC                     	;# 
  5522  1ECC                     	;# 
  5523  1ECC                     	;# 
  5524  1F10                     	;# 
  5525  1F11                     	;# 
  5526  1F12                     	;# 
  5527  1F14                     	;# 
  5528  1F15                     	;# 
  5529  1F1C                     	;# 
  5530  1F1D                     	;# 
  5531  1F1E                     	;# 
  5532  1F1F                     	;# 
  5533  1F20                     	;# 
  5534  1F21                     	;# 
  5535  1F22                     	;# 
  5536  1F23                     	;# 
  5537  1F24                     	;# 
  5538  1F25                     	;# 
  5539  1F26                     	;# 
  5540  1F27                     	;# 
  5541  1F38                     	;# 
  5542  1F39                     	;# 
  5543  1F3A                     	;# 
  5544  1F3B                     	;# 
  5545  1F3C                     	;# 
  5546  1F3D                     	;# 
  5547  1F3E                     	;# 
  5548  1F3F                     	;# 
  5549  1F43                     	;# 
  5550  1F44                     	;# 
  5551  1F45                     	;# 
  5552  1F46                     	;# 
  5553  1F47                     	;# 
  5554  1F48                     	;# 
  5555  1F49                     	;# 
  5556  1F4A                     	;# 
  5557  1F4E                     	;# 
  5558  1F4F                     	;# 
  5559  1F50                     	;# 
  5560  1F51                     	;# 
  5561  1F52                     	;# 
  5562  1F53                     	;# 
  5563  1F54                     	;# 
  5564  1F55                     	;# 
  5565  1FE4                     	;# 
  5566  1FE5                     	;# 
  5567  1FE6                     	;# 
  5568  1FE7                     	;# 
  5569  1FE8                     	;# 
  5570  1FE8                     	;# 
  5571  1FE9                     	;# 
  5572  1FEA                     	;# 
  5573  1FEB                     	;# 
  5574  1FED                     	;# 
  5575  1FEE                     	;# 
  5576  1FEF                     	;_dmxData
  5577                           
  5578                           	psect	idataBANK0
  5579  0E34                     __pidataBANK0:	
  5580                           
  5581                           ;initializer for _threshold
  5582  0E34  3490               	retlw	144
  5583  0E35  3406               	retlw	6
  5584                           
  5585                           ;initializer for _address
  5586  0E36  3401               	retlw	1
  5587  0E37  3400               	retlw	0
  5588                           
  5589                           	psect	idataBANK1
  5590  0002                     __pidataBANK1:	
  5591                           
  5592                           ;initializer for _delay
  5593  0002  340A               	retlw	10
  5594  0003  3400               	retlw	0
  5595                           
  5596                           	psect	stringtext1
  5597  0456                     __pstringtext1:	
  5598  0456                     _charTable:	
  5599  0456  3400               	retlw	0
  5600  0457  3482               	retlw	130
  5601  0458  3421               	retlw	33
  5602  0459  3400               	retlw	0
  5603  045A  3400               	retlw	0
  5604  045B  3400               	retlw	0
  5605  045C  3400               	retlw	0
  5606  045D  3402               	retlw	2
  5607  045E  3439               	retlw	57
  5608  045F  340F               	retlw	15
  5609  0460  3400               	retlw	0
  5610  0461  3400               	retlw	0
  5611  0462  3400               	retlw	0
  5612  0463  3440               	retlw	64
  5613  0464  3480               	retlw	128
  5614  0465  3400               	retlw	0
  5615  0466  343F               	retlw	63
  5616  0467  3406               	retlw	6
  5617  0468  345B               	retlw	91
  5618  0469  344F               	retlw	79
  5619  046A  3466               	retlw	102
  5620  046B  346D               	retlw	109
  5621  046C  347D               	retlw	125
  5622  046D  3407               	retlw	7
  5623  046E  347F               	retlw	127
  5624  046F  346F               	retlw	111
  5625  0470  3400               	retlw	0
  5626  0471  3400               	retlw	0
  5627  0472  3400               	retlw	0
  5628  0473  3448               	retlw	72
  5629  0474  3400               	retlw	0
  5630  0475  3453               	retlw	83
  5631  0476  3400               	retlw	0
  5632  0477  3477               	retlw	119
  5633  0478  347C               	retlw	124
  5634  0479  3439               	retlw	57
  5635  047A  345E               	retlw	94
  5636  047B  3479               	retlw	121
  5637  047C  3471               	retlw	113
  5638  047D  346F               	retlw	111
  5639  047E  3476               	retlw	118
  5640  047F  3406               	retlw	6
  5641  0480  341E               	retlw	30
  5642  0481  3400               	retlw	0
  5643  0482  3438               	retlw	56
  5644  0483  3400               	retlw	0
  5645  0484  3454               	retlw	84
  5646  0485  343F               	retlw	63
  5647  0486  3473               	retlw	115
  5648  0487  3467               	retlw	103
  5649  0488  3450               	retlw	80
  5650  0489  346D               	retlw	109
  5651  048A  3478               	retlw	120
  5652  048B  343E               	retlw	62
  5653  048C  3400               	retlw	0
  5654  048D  3400               	retlw	0
  5655  048E  3400               	retlw	0
  5656  048F  346E               	retlw	110
  5657  0490  3400               	retlw	0
  5658  0491  3439               	retlw	57
  5659  0492  3400               	retlw	0
  5660  0493  340F               	retlw	15
  5661  0494  3400               	retlw	0
  5662  0495  3408               	retlw	8
  5663  0496  3463               	retlw	99
  5664  0497  345F               	retlw	95
  5665  0498  347C               	retlw	124
  5666  0499  3458               	retlw	88
  5667  049A  345E               	retlw	94
  5668  049B  347B               	retlw	123
  5669  049C  3471               	retlw	113
  5670  049D  346F               	retlw	111
  5671  049E  3474               	retlw	116
  5672  049F  3402               	retlw	2
  5673  04A0  341E               	retlw	30
  5674  04A1  3400               	retlw	0
  5675  04A2  3406               	retlw	6
  5676  04A3  3400               	retlw	0
  5677  04A4  3454               	retlw	84
  5678  04A5  345C               	retlw	92
  5679  04A6  3473               	retlw	115
  5680  04A7  3467               	retlw	103
  5681  04A8  3450               	retlw	80
  5682  04A9  346D               	retlw	109
  5683  04AA  3478               	retlw	120
  5684  04AB  341C               	retlw	28
  5685  04AC  3400               	retlw	0
  5686  04AD  3400               	retlw	0
  5687  04AE  3400               	retlw	0
  5688  04AF  346E               	retlw	110
  5689  04B0  3400               	retlw	0
  5690  04B1  3439               	retlw	57
  5691  04B2  3430               	retlw	48
  5692  04B3  340F               	retlw	15
  5693  04B4  3400               	retlw	0
  5694  04B5  3400               	retlw	0
  5695  04B6                     __end_of_charTable:	
  5696                           
  5697                           	psect	nvBANK0
  5698  006E                     __pnvBANK0:	
  5699  006E                     _eusart1TxBufferRemaining:	
  5700  006E                     	ds	1
  5701                           
  5702                           	psect	nvBANK1
  5703  00CE                     __pnvBANK1:	
  5704  00CE                     _ADCC_ADTI_InterruptHandler:	
  5705  00CE                     	ds	2
  5706  00D0                     _TMR0_InterruptHandler:	
  5707  00D0                     	ds	2
  5708  00D2                     _EUSART1_ErrorHandler:	
  5709  00D2                     	ds	2
  5710  00D4                     _EUSART1_OverrunErrorHandler:	
  5711  00D4                     	ds	2
  5712  00D6                     _EUSART1_FramingErrorHandler:	
  5713  00D6                     	ds	2
  5714  00D8                     _EUSART1_RxDefaultInterruptHandler:	
  5715  00D8                     	ds	2
  5716  00DA                     _EUSART1_TxDefaultInterruptHandler:	
  5717  00DA                     	ds	2
  5718  000B                     _INTCONbits	set	11
  5719  0014                     _TRISC	set	20
  5720  0013                     _TRISB	set	19
  5721  0012                     _TRISA	set	18
  5722  001A                     _LATC	set	26
  5723  0019                     _LATB	set	25
  5724  0018                     _LATA	set	24
  5725  000C                     _PORTA	set	12
  5726  000E                     _PORTC	set	14
  5727  00A3                     _TRISC3	set	163
  5728  00A4                     _TRISC4	set	164
  5729  00A6                     _TRISC6	set	166
  5730  00A7                     _TRISC7	set	167
  5731  009E                     _TRISB6	set	158
  5732  00CE                     _LATB6	set	206
  5733  0090                     _ADERRL	set	144
  5734  0091                     _ADERRH	set	145
  5735  009B                     _ADPREVL	set	155
  5736  009C                     _ADPREVH	set	156
  5737  0094                     _ADFLTRL	set	148
  5738  0095                     _ADFLTRH	set	149
  5739  0096                     _ADACCL	set	150
  5740  0097                     _ADACCH	set	151
  5741  0099                     _ADCNT	set	153
  5742  009D                     _ADRESL	set	157
  5743  009E                     _ADRESH	set	158
  5744  009F                     _ADPCH	set	159
  5745  009A                     _ADRPT	set	154
  5746  0098                     _ADACCU	set	152
  5747  0093                     _ADSTPTH	set	147
  5748  0092                     _ADSTPTL	set	146
  5749  008F                     _ADUTHH	set	143
  5750  008E                     _ADUTHL	set	142
  5751  008D                     _ADLTHH	set	141
  5752  008C                     _ADLTHL	set	140
  5753  011A                     _TXREG	set	282
  5754  0112                     _ADCON1bits	set	274
  5755  0115                     _ADSTATbits	set	277
  5756  0113                     _ADCON2bits	set	275
  5757  0114                     _ADCON3bits	set	276
  5758  0111                     _ADCON0bits	set	273
  5759  0111                     _ADCON0	set	273
  5760  0118                     _ADCLK	set	280
  5761  0117                     _ADACT	set	279
  5762  0116                     _ADREF	set	278
  5763  0115                     _ADSTAT	set	277
  5764  0114                     _ADCON3	set	276
  5765  0113                     _ADCON2	set	275
  5766  0112                     _ADCON1	set	274
  5767  0110                     _ADPREH	set	272
  5768  010F                     _ADPREL	set	271
  5769  010E                     _ADCAP	set	270
  5770  010D                     _ADACQH	set	269
  5771  010C                     _ADACQL	set	268
  5772  0119                     _RC1REG	set	281
  5773  011D                     _RC1STAbits	set	285
  5774  011A                     _TX1REG	set	282
  5775  011E                     _TX1STAbits	set	286
  5776  011C                     _SP1BRGH	set	284
  5777  011B                     _SP1BRGL	set	283
  5778  011E                     _TX1STA	set	286
  5779  011D                     _RC1STA	set	285
  5780  011F                     _BAUD1CON	set	287
  5781  018C                     _SSP1BUF	set	396
  5782  0191                     _SSP1CON2bits	set	401
  5783  0190                     _SSP1CON1bits	set	400
  5784  018D                     _SSP1ADD	set	397
  5785  0192                     _SSP1CON3	set	402
  5786  0190                     _SSP1CON1	set	400
  5787  018F                     _SSP1STAT	set	399
  5788  028E                     _T2CONbits	set	654
  5789  0290                     _T2CLKCON	set	656
  5790  0318                     _CCPR4L	set	792
  5791  0319                     _CCPR4H	set	793
  5792  0314                     _CCPR3L	set	788
  5793  0315                     _CCPR3H	set	789
  5794  0310                     _CCPR2L	set	784
  5795  0311                     _CCPR2H	set	785
  5796  030C                     _CCPR1L	set	780
  5797  030D                     _CCPR1H	set	781
  5798  031A                     _CCP4CONbits	set	794
  5799  0316                     _CCP3CONbits	set	790
  5800  0312                     _CCP2CONbits	set	786
  5801  030E                     _CCP1CONbits	set	782
  5802  059E                     _T0CON0bits	set	1438
  5803  059E                     _T0CON0	set	1438
  5804  059C                     _TMR0L	set	1436
  5805  059D                     _TMR0H	set	1437
  5806  059F                     _T0CON1	set	1439
  5807  070D                     _PIR1bits	set	1805
  5808  0717                     _PIE1bits	set	1815
  5809  070F                     _PIR3bits	set	1807
  5810  070C                     _PIR0bits	set	1804
  5811  0716                     _PIE0bits	set	1814
  5812  0719                     _PIE3bits	set	1817
  5813  079D                     _PMD7	set	1949
  5814  079C                     _PMD6	set	1948
  5815  079B                     _PMD5	set	1947
  5816  079A                     _PMD4	set	1946
  5817  0799                     _PMD3	set	1945
  5818  0798                     _PMD2	set	1944
  5819  0797                     _PMD1	set	1943
  5820  0796                     _PMD0	set	1942
  5821  0892                     _OSCTUNE	set	2194
  5822  0893                     _OSCFRQ	set	2195
  5823  0891                     _OSCEN	set	2193
  5824  088F                     _OSCCON3	set	2191
  5825  088D                     _OSCCON1	set	2189
  5826  1ECB                     _RX1DTPPS	set	7883
  5827  1EC6                     _SSP1DATPPS	set	7878
  5828  1EC5                     _SSP1CLKPPS	set	7877
  5829  1F23                     _RC3PPS	set	7971
  5830  1F24                     _RC4PPS	set	7972
  5831  1F26                     _RC6PPS	set	7974
  5832  1F27                     _RC7PPS	set	7975
  5833  1F15                     _RA5PPS	set	7957
  5834  1F14                     _RA4PPS	set	7956
  5835  1F51                     _SLRCONC	set	8017
  5836  1F46                     _SLRCONB	set	8006
  5837  1F3B                     _SLRCONA	set	7995
  5838  1F50                     _ODCONC	set	8016
  5839  1F45                     _ODCONB	set	8005
  5840  1F3A                     _ODCONA	set	7994
  5841  1F4F                     _WPUC	set	8015
  5842  1F39                     _WPUA	set	7993
  5843  1F44                     _WPUB	set	8004
  5844  1F38                     _ANSELA	set	7992
  5845  1F43                     _ANSELB	set	8003
  5846  1F4E                     _ANSELC	set	8014
  5847                           
  5848                           ; #config settings
  5849  0000                     
  5850                           	psect	cinit
  5851  003B                     start_initialization:	
  5852  003B                     __initialization:		;BIGRAM
  5853                           
  5854                           ; Initialize objects allocated to BANK0
  5855  003B  318E  2634  3180   	fcall	__pidataBANK0	;fetch initializer
  5856  003E  00EA               	movwf	__pdataBANK0& (0+127)
  5857  003F  318E  2635  3180   	fcall	__pidataBANK0+1	;fetch initializer
  5858  0042  00EB               	movwf	(__pdataBANK0+1)& (0+127)
  5859  0043  318E  2636  3180   	fcall	__pidataBANK0+2	;fetch initializer
  5860  0046  00EC               	movwf	(__pdataBANK0+2)& (0+127)
  5861  0047  318E  2637  3180   	fcall	__pidataBANK0+3	;fetch initializer
  5862  004A  00ED               	movwf	(__pdataBANK0+3)& (0+127)
  5863                           
  5864                           ; Initialize objects allocated to BANK1
  5865  004B  0141               	movlb	1	; select bank1
  5866  004C  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  5867  004F  00DC               	movwf	__pdataBANK1& (0+127)
  5868  0050  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  5869  0053  00DD               	movwf	(__pdataBANK1+1)& (0+127)
  5870                           
  5871                           ; Clear objects allocated to BIGRAM
  5872  0054  30EF               	movlw	low (0+9711)
  5873  0055  0084               	movwf	4
  5874  0056  3025               	movlw	high (0+9711)
  5875  0057  0085               	movwf	5
  5876  0058  3001               	movlw	1
  5877  0059  00FE               	movwf	btemp
  5878  005A  3002               	movlw	2
  5879  005B  00FF               	movwf	btemp+1
  5880  005C  318E  26C6  3180   	fcall	clear_ram0
  5881                           
  5882                           ; Clear objects allocated to COMMON
  5883  005F  01F0               	clrf	__pbssCOMMON& (0+127)
  5884  0060  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  5885  0061  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  5886  0062  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  5887  0063  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  5888  0064  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  5889                           
  5890                           ; Clear objects allocated to BANK0
  5891  0065  3046               	movlw	low __pbssBANK0
  5892  0066  0084               	movwf	4
  5893  0067  3000               	movlw	high __pbssBANK0
  5894  0068  0085               	movwf	5
  5895  0069  3024               	movlw	36
  5896  006A  00FE               	movwf	btemp
  5897  006B  3000               	movlw	0
  5898  006C  00FF               	movwf	btemp+1
  5899  006D  318E  26C6  3180   	fcall	clear_ram0
  5900                           
  5901                           ; Clear objects allocated to BANK1
  5902  0070  30A0               	movlw	low __pbssBANK1
  5903  0071  0084               	movwf	4
  5904  0072  3000               	movlw	high __pbssBANK1
  5905  0073  0085               	movwf	5
  5906  0074  302E               	movlw	46
  5907  0075  00FE               	movwf	btemp
  5908  0076  3000               	movlw	0
  5909  0077  00FF               	movwf	btemp+1
  5910  0078  318E  26C6  3180   	fcall	clear_ram0
  5911                           
  5912                           ; Clear objects allocated to BANK2
  5913  007B  3020               	movlw	low __pbssBANK2
  5914  007C  0084               	movwf	4
  5915  007D  3001               	movlw	high __pbssBANK2
  5916  007E  0085               	movwf	5
  5917  007F  3020               	movlw	32
  5918  0080  00FE               	movwf	btemp
  5919  0081  3000               	movlw	0
  5920  0082  00FF               	movwf	btemp+1
  5921  0083  318E  26C6         	fcall	clear_ram0
  5922  0085                     end_of_initialization:	
  5923                           ;End of C runtime variable initialization code
  5924                           
  5925  0085                     __end_of__initialization:	
  5926  0085  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5927  0086  0140               	movlb	0
  5928  0087  3185  2DB9         	ljmp	_main	;jump to C main() function
  5929                           
  5930                           	psect	bssCOMMON
  5931  0070                     __pbssCOMMON:	
  5932  0070                     _eusart1RxTail:	
  5933  0070                     	ds	1
  5934  0071                     _eusart1RxHead:	
  5935  0071                     	ds	1
  5936  0072                     _eusart1TxTail:	
  5937  0072                     	ds	1
  5938  0073                     _eusart1TxHead:	
  5939  0073                     	ds	1
  5940  0074                     I2C1_ISR@i2c_address:	
  5941  0074                     	ds	2
  5942                           
  5943                           	psect	bssBANK0
  5944  0046                     __pbssBANK0:	
  5945  0046                     _i2c1_object:	
  5946  0046                     	ds	5
  5947  004B                     _lastBeat:	
  5948  004B                     	ds	2
  5949  004D                     _currentTime:	
  5950  004D                     	ds	2
  5951  004F                     _lastTime:	
  5952  004F                     	ds	2
  5953  0051                     Blink2@lastTime:	
  5954  0051                     	ds	2
  5955  0053                     _dmxPointer:	
  5956  0053                     	ds	2
  5957  0055                     _lastDetected:	
  5958  0055                     	ds	1
  5959  0056                     _thresholdExceeded:	
  5960  0056                     	ds	1
  5961  0057                     _detected:	
  5962  0057                     	ds	1
  5963  0058                     _menu:	
  5964  0058                     	ds	1
  5965  0059                     _enter:	
  5966  0059                     	ds	1
  5967  005A                     _down:	
  5968  005A                     	ds	1
  5969  005B                     _up:	
  5970  005B                     	ds	1
  5971  005C                     _isOn:	
  5972  005C                     	ds	1
  5973  005D                     Blink2@value:	
  5974  005D                     	ds	1
  5975  005E                     I2C1_ISR@i2c_10bit_address_restart:	
  5976  005E                     	ds	1
  5977  005F                     I2C1_ISR@i2c_bytes_left:	
  5978  005F                     	ds	1
  5979  0060                     I2C1_ISR@pi2c_buf_ptr:	
  5980  0060                     	ds	1
  5981  0061                     _p_i2c1_current:	
  5982  0061                     	ds	1
  5983  0062                     _p_i2c1_trb_current:	
  5984  0062                     	ds	1
  5985  0063                     _i2c1_trb_count:	
  5986  0063                     	ds	1
  5987  0064                     _i2c1_state:	
  5988  0064                     	ds	1
  5989  0065                     _eusart1RxLastError:	
  5990  0065                     	ds	1
  5991  0066                     _eusart1RxCount:	
  5992  0066                     	ds	1
  5993  0067                     _i2c1_tr_queue:	
  5994  0067                     	ds	3
  5995                           
  5996                           	psect	dataBANK0
  5997  006A                     __pdataBANK0:	
  5998  006A                     _threshold:	
  5999  006A                     	ds	2
  6000  006C                     _address:	
  6001  006C                     	ds	2
  6002                           
  6003                           	psect	bssBANK1
  6004  00A0                     __pbssBANK1:	
  6005  00A0                     _eusart1RxStatusBuffer:	
  6006  00A0                     	ds	8
  6007  00A8                     _eusart1RxBuffer:	
  6008  00A8                     	ds	8
  6009  00B0                     _eusart1TxBuffer:	
  6010  00B0                     	ds	8
  6011  00B8                     _thresholdCount:	
  6012  00B8                     	ds	2
  6013  00BA                     _lastRun:	
  6014  00BA                     	ds	2
  6015  00BC                     _bpm:	
  6016  00BC                     	ds	2
  6017  00BE                     _lastActiveTime:	
  6018  00BE                     	ds	2
  6019  00C0                     controller@lastTime:	
  6020  00C0                     	ds	2
  6021  00C2                     buttons@lastTime:	
  6022  00C2                     	ds	2
  6023  00C4                     _count:	
  6024  00C4                     	ds	2
  6025  00C6                     I2C1_MasterRead@trBlock:	
  6026  00C6                     	ds	4
  6027  00CA                     I2C1_MasterWrite@trBlock:	
  6028  00CA                     	ds	4
  6029                           
  6030                           	psect	dataBANK1
  6031  00DC                     __pdataBANK1:	
  6032  00DC                     _delay:	
  6033  00DC                     	ds	2
  6034                           
  6035                           	psect	bssBANK2
  6036  0120                     __pbssBANK2:	
  6037  0120                     _buttons:	
  6038  0120                     	ds	32
  6039                           
  6040                           	psect	clrtext
  6041  0EC6                     clear_ram0:	
  6042                           ;	Called with FSR0 containing the base address, and
  6043                           ;	btemp/btemp+1 has the size to clear
  6044                           
  6045  0EC6  0064               	clrwdt	;clear the watchdog before getting into this loop
  6046  0EC7                     clrloop0:	
  6047  0EC7  0180               	clrf	0	;clear RAM location pointed to by FSR
  6048  0EC8  3101               	addfsr 0,1
  6049  0EC9  3001               	movlw	1
  6050  0ECA  02FE               	subwf	126,f
  6051  0ECB  3000               	movlw	0
  6052  0ECC  3BFF               	subwfb	127,f
  6053  0ECD  087F               	movf	127,w
  6054  0ECE  047E               	iorwf	126,w
  6055  0ECF  1903               	btfsc	3,2
  6056  0ED0  3400               	retlw	0	;all done for this memory range, return
  6057  0ED1  2EC7               	goto	clrloop0	;have we reached the end yet?
  6058                           
  6059                           	psect	cstackBANK1
  6060  00DE                     __pcstackBANK1:	
  6061  00DE                     ??_main:	
  6062                           
  6063                           ; 1 bytes @ 0x0
  6064  00DE                     	ds	2
  6065                           
  6066                           	psect	cstackCOMMON
  6067  0076                     __pcstackCOMMON:	
  6068  0076                     ?_EUSART1_Receive_ISR:	
  6069  0076                     ?_EUSART1_Transmit_ISR:	
  6070                           ; 1 bytes @ 0x0
  6071                           
  6072  0076                     ??_EUSART1_Transmit_ISR:	
  6073                           ; 1 bytes @ 0x0
  6074                           
  6075  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  6076                           ; 1 bytes @ 0x0
  6077                           
  6078  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  6079                           ; 1 bytes @ 0x0
  6080                           
  6081  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  6082                           ; 1 bytes @ 0x0
  6083                           
  6084  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  6085                           ; 1 bytes @ 0x0
  6086                           
  6087  0076                     ?_EUSART1_DefaultErrorHandler:	
  6088                           ; 1 bytes @ 0x0
  6089                           
  6090  0076                     ?_EUSART1_RxDataHandler:	
  6091                           ; 1 bytes @ 0x0
  6092                           
  6093  0076                     ??_EUSART1_RxDataHandler:	
  6094                           ; 1 bytes @ 0x0
  6095                           
  6096  0076                     ?_PMD_Initialize:	
  6097                           ; 1 bytes @ 0x0
  6098                           
  6099  0076                     ?_PIN_MANAGER_Initialize:	
  6100                           ; 1 bytes @ 0x0
  6101                           
  6102  0076                     ?_OSCILLATOR_Initialize:	
  6103                           ; 1 bytes @ 0x0
  6104                           
  6105  0076                     ?_I2C1_Initialize:	
  6106                           ; 1 bytes @ 0x0
  6107                           
  6108  0076                     ?_ADCC_Initialize:	
  6109                           ; 1 bytes @ 0x0
  6110                           
  6111  0076                     ?_TMR0_Initialize:	
  6112                           ; 1 bytes @ 0x0
  6113                           
  6114  0076                     ?_TMR0_ISR:	
  6115                           ; 1 bytes @ 0x0
  6116                           
  6117  0076                     ??_TMR0_ISR:	
  6118                           ; 1 bytes @ 0x0
  6119                           
  6120  0076                     ?_I2C1_BusCollisionISR:	
  6121                           ; 1 bytes @ 0x0
  6122                           
  6123  0076                     ??_I2C1_BusCollisionISR:	
  6124                           ; 1 bytes @ 0x0
  6125                           
  6126  0076                     ?_I2C1_ISR:	
  6127                           ; 1 bytes @ 0x0
  6128                           
  6129  0076                     ?_ADCC_ThresholdISR:	
  6130                           ; 1 bytes @ 0x0
  6131                           
  6132  0076                     ??_ADCC_ThresholdISR:	
  6133                           ; 1 bytes @ 0x0
  6134                           
  6135  0076                     ?_TMR0_DefaultInterruptHandler:	
  6136                           ; 1 bytes @ 0x0
  6137                           
  6138  0076                     ??_TMR0_DefaultInterruptHandler:	
  6139                           ; 1 bytes @ 0x0
  6140                           
  6141  0076                     ?_I2C1_Stop:	
  6142                           ; 1 bytes @ 0x0
  6143                           
  6144  0076                     ??_I2C1_Stop:	
  6145                           ; 1 bytes @ 0x0
  6146                           
  6147  0076                     ?_I2C1_FunctionComplete:	
  6148                           ; 1 bytes @ 0x0
  6149                           
  6150  0076                     ??_I2C1_FunctionComplete:	
  6151                           ; 1 bytes @ 0x0
  6152                           
  6153  0076                     ?_ADCC_DefaultInterruptHandler:	
  6154                           ; 1 bytes @ 0x0
  6155                           
  6156  0076                     ??_ADCC_DefaultInterruptHandler:	
  6157                           ; 1 bytes @ 0x0
  6158                           
  6159  0076                     ?_CLOCK_init:	
  6160                           ; 1 bytes @ 0x0
  6161                           
  6162  0076                     ?_TM1650_init:	
  6163                           ; 1 bytes @ 0x0
  6164                           
  6165  0076                     ?_BUTTONS_init:	
  6166                           ; 1 bytes @ 0x0
  6167                           
  6168  0076                     ?_CONTROLLER_init:	
  6169                           ; 1 bytes @ 0x0
  6170                           
  6171  0076                     ?_initLED:	
  6172                           ; 1 bytes @ 0x0
  6173                           
  6174  0076                     ?_BEAT_init:	
  6175                           ; 1 bytes @ 0x0
  6176                           
  6177  0076                     ?_BEAT_task:	
  6178                           ; 1 bytes @ 0x0
  6179                           
  6180  0076                     ?_LED_task:	
  6181                           ; 1 bytes @ 0x0
  6182                           
  6183  0076                     ?_BUTTONS_task:	
  6184                           ; 1 bytes @ 0x0
  6185                           
  6186  0076                     ?_CONTROLLER_task:	
  6187                           ; 1 bytes @ 0x0
  6188                           
  6189  0076                     ?_BEAT_detected:	
  6190                           ; 1 bytes @ 0x0
  6191                           
  6192  0076                     ?_CLOCK_timerCallback:	
  6193                           ; 1 bytes @ 0x0
  6194                           
  6195  0076                     ??_CLOCK_timerCallback:	
  6196                           ; 1 bytes @ 0x0
  6197                           
  6198  0076                     ?_TM1650_enable:	
  6199                           ; 1 bytes @ 0x0
  6200                           
  6201  0076                     ?_EUSART1_Initialize:	
  6202                           ; 1 bytes @ 0x0
  6203                           
  6204  0076                     ?_SYSTEM_Initialize:	
  6205                           ; 1 bytes @ 0x0
  6206                           
  6207  0076                     ?_INTERRUPT_InterruptManager:	
  6208                           ; 1 bytes @ 0x0
  6209                           
  6210  0076                     ?_I2C1_WaitForLastPacketToComplete:	
  6211                           ; 1 bytes @ 0x0
  6212                           
  6213  0076                     ?_ADCC_StartConversion:	
  6214                           ; 1 bytes @ 0x0
  6215                           
  6216  0076                     ?_DMX_ISR:	
  6217                           ; 1 bytes @ 0x0
  6218                           
  6219  0076                     ??_DMX_ISR:	
  6220                           ; 1 bytes @ 0x0
  6221                           
  6222  0076                     ?_main:	
  6223                           ; 1 bytes @ 0x0
  6224                           
  6225  0076                     ?_TM1650_isEnabled:	
  6226                           ; 1 bytes @ 0x0
  6227                           
  6228  0076                     ?_address_inc:	
  6229                           ; 1 bytes @ 0x0
  6230                           
  6231  0076                     ?_address_dec:	
  6232                           ; 1 bytes @ 0x0
  6233                           
  6234  0076                     ?_adcThresholdHandler:	
  6235                           ; 1 bytes @ 0x0
  6236                           
  6237  0076                     ??_adcThresholdHandler:	
  6238                           ; 1 bytes @ 0x0
  6239                           
  6240                           
  6241                           ; 1 bytes @ 0x0
  6242  0076                     	ds	1
  6243  0077                     ??_EUSART1_Receive_ISR:	
  6244  0077                     ??_EUSART1_DefaultErrorHandler:	
  6245                           ; 1 bytes @ 0x1
  6246                           
  6247  0077                     I2C1_Stop@completion_code:	
  6248                           ; 1 bytes @ 0x1
  6249                           
  6250                           
  6251                           ; 1 bytes @ 0x1
  6252  0077                     	ds	1
  6253  0078                     ??_I2C1_ISR:	
  6254                           
  6255                           ; 1 bytes @ 0x2
  6256  0078                     	ds	4
  6257  007C                     ??_INTERRUPT_InterruptManager:	
  6258                           
  6259                           	psect	cstackBANK0
  6260  0020                     __pcstackBANK0:	
  6261                           ; 1 bytes @ 0x6
  6262                           
  6263  0020                     ?_EUSART1_SetRxInterruptHandler:	
  6264  0020                     ?_EUSART1_SetTxInterruptHandler:	
  6265                           ; 1 bytes @ 0x0
  6266                           
  6267  0020                     ?_EUSART1_SetFramingErrorHandler:	
  6268                           ; 1 bytes @ 0x0
  6269                           
  6270  0020                     ?_EUSART1_SetOverrunErrorHandler:	
  6271                           ; 1 bytes @ 0x0
  6272                           
  6273  0020                     ?_EUSART1_SetErrorHandler:	
  6274                           ; 1 bytes @ 0x0
  6275                           
  6276  0020                     ??_PMD_Initialize:	
  6277                           ; 1 bytes @ 0x0
  6278                           
  6279  0020                     ??_PIN_MANAGER_Initialize:	
  6280                           ; 1 bytes @ 0x0
  6281                           
  6282  0020                     ??_OSCILLATOR_Initialize:	
  6283                           ; 1 bytes @ 0x0
  6284                           
  6285  0020                     ??_I2C1_Initialize:	
  6286                           ; 1 bytes @ 0x0
  6287                           
  6288  0020                     ?_TMR0_SetInterruptHandler:	
  6289                           ; 1 bytes @ 0x0
  6290                           
  6291  0020                     ?_I2C1_MasterWriteTRBBuild:	
  6292                           ; 1 bytes @ 0x0
  6293                           
  6294  0020                     ?_I2C1_MasterTRBInsert:	
  6295                           ; 1 bytes @ 0x0
  6296                           
  6297  0020                     ?_ADCC_SetADTIInterruptHandler:	
  6298                           ; 1 bytes @ 0x0
  6299                           
  6300  0020                     ??_initLED:	
  6301                           ; 1 bytes @ 0x0
  6302                           
  6303  0020                     ??_BEAT_detected:	
  6304                           ; 1 bytes @ 0x0
  6305                           
  6306  0020                     ?_LED_setColor:	
  6307                           ; 1 bytes @ 0x0
  6308                           
  6309  0020                     ??_I2C1_WaitForLastPacketToComplete:	
  6310                           ; 1 bytes @ 0x0
  6311                           
  6312  0020                     ??_ADCC_StartConversion:	
  6313                           ; 1 bytes @ 0x0
  6314                           
  6315  0020                     ?_ADCC_SetUpperThreshold:	
  6316                           ; 1 bytes @ 0x0
  6317                           
  6318  0020                     ??_TM1650_isEnabled:	
  6319                           ; 1 bytes @ 0x0
  6320                           
  6321  0020                     ?_init:	
  6322                           ; 1 bytes @ 0x0
  6323                           
  6324  0020                     ?_CLOCK_getTime:	
  6325                           ; 1 bytes @ 0x0
  6326                           
  6327  0020                     ?_BUTTONS_isClicked:	
  6328                           ; 2 bytes @ 0x0
  6329                           
  6330  0020                     ?___lwdiv:	
  6331                           ; 2 bytes @ 0x0
  6332                           
  6333  0020                     ?___lwmod:	
  6334                           ; 2 bytes @ 0x0
  6335                           
  6336  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  6337                           ; 2 bytes @ 0x0
  6338                           
  6339  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  6340                           ; 1 bytes @ 0x0
  6341                           
  6342  0020                     ADCC_StartConversion@channel:	
  6343                           ; 1 bytes @ 0x0
  6344                           
  6345  0020                     LED_setColor@green:	
  6346                           ; 1 bytes @ 0x0
  6347                           
  6348  0020                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  6349                           ; 1 bytes @ 0x0
  6350                           
  6351  0020                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  6352                           ; 2 bytes @ 0x0
  6353                           
  6354  0020                     EUSART1_SetErrorHandler@interruptHandler:	
  6355                           ; 2 bytes @ 0x0
  6356                           
  6357  0020                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  6358                           ; 2 bytes @ 0x0
  6359                           
  6360  0020                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  6361                           ; 2 bytes @ 0x0
  6362                           
  6363  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  6364                           ; 2 bytes @ 0x0
  6365                           
  6366  0020                     ADCC_SetUpperThreshold@upperThreshold:	
  6367                           ; 2 bytes @ 0x0
  6368                           
  6369  0020                     ADCC_SetADTIInterruptHandler@InterruptHandler:	
  6370                           ; 2 bytes @ 0x0
  6371                           
  6372  0020                     init@port:	
  6373                           ; 2 bytes @ 0x0
  6374                           
  6375  0020                     ___lwdiv@divisor:	
  6376                           ; 2 bytes @ 0x0
  6377                           
  6378  0020                     ___lwmod@divisor:	
  6379                           ; 2 bytes @ 0x0
  6380                           
  6381                           
  6382                           ; 2 bytes @ 0x0
  6383  0020                     	ds	1
  6384  0021                     I2C1_MasterTRBInsert@pflag:	
  6385  0021                     I2C1_MasterWriteTRBBuild@length:	
  6386                           ; 1 bytes @ 0x1
  6387                           
  6388  0021                     LED_setColor@white:	
  6389                           ; 1 bytes @ 0x1
  6390                           
  6391                           
  6392                           ; 1 bytes @ 0x1
  6393  0021                     	ds	1
  6394  0022                     ??_EUSART1_SetRxInterruptHandler:	
  6395  0022                     ??_EUSART1_SetTxInterruptHandler:	
  6396                           ; 1 bytes @ 0x2
  6397                           
  6398  0022                     ??_EUSART1_SetFramingErrorHandler:	
  6399                           ; 1 bytes @ 0x2
  6400                           
  6401  0022                     ??_EUSART1_SetOverrunErrorHandler:	
  6402                           ; 1 bytes @ 0x2
  6403                           
  6404  0022                     ??_EUSART1_SetErrorHandler:	
  6405                           ; 1 bytes @ 0x2
  6406                           
  6407  0022                     ??_ADCC_Initialize:	
  6408                           ; 1 bytes @ 0x2
  6409                           
  6410  0022                     ??_TMR0_Initialize:	
  6411                           ; 1 bytes @ 0x2
  6412                           
  6413  0022                     ??_TMR0_SetInterruptHandler:	
  6414                           ; 1 bytes @ 0x2
  6415                           
  6416  0022                     ??_I2C1_MasterTRBInsert:	
  6417                           ; 1 bytes @ 0x2
  6418                           
  6419  0022                     ??_ADCC_SetADTIInterruptHandler:	
  6420                           ; 1 bytes @ 0x2
  6421                           
  6422  0022                     ??_CLOCK_getTime:	
  6423                           ; 1 bytes @ 0x2
  6424                           
  6425  0022                     ??_CLOCK_init:	
  6426                           ; 1 bytes @ 0x2
  6427                           
  6428  0022                     ??_BEAT_init:	
  6429                           ; 1 bytes @ 0x2
  6430                           
  6431  0022                     ??_BUTTONS_task:	
  6432                           ; 1 bytes @ 0x2
  6433                           
  6434  0022                     ??_EUSART1_Initialize:	
  6435                           ; 1 bytes @ 0x2
  6436                           
  6437  0022                     ??_ADCC_SetUpperThreshold:	
  6438                           ; 1 bytes @ 0x2
  6439                           
  6440  0022                     LED_setColor@blue:	
  6441                           ; 1 bytes @ 0x2
  6442                           
  6443  0022                     init@pin:	
  6444                           ; 1 bytes @ 0x2
  6445                           
  6446  0022                     I2C1_MasterWriteTRBBuild@address:	
  6447                           ; 1 bytes @ 0x2
  6448                           
  6449  0022                     ___lwdiv@dividend:	
  6450                           ; 2 bytes @ 0x2
  6451                           
  6452  0022                     ___lwmod@dividend:	
  6453                           ; 2 bytes @ 0x2
  6454                           
  6455                           
  6456                           ; 2 bytes @ 0x2
  6457  0022                     	ds	1
  6458  0023                     ??_LED_setColor:	
  6459  0023                     ??_SYSTEM_Initialize:	
  6460                           ; 1 bytes @ 0x3
  6461                           
  6462  0023                     ??_init:	
  6463                           ; 1 bytes @ 0x3
  6464                           
  6465  0023                     ??_BUTTONS_isClicked:	
  6466                           ; 1 bytes @ 0x3
  6467                           
  6468  0023                     I2C1_MasterTRBInsert@count:	
  6469                           ; 1 bytes @ 0x3
  6470                           
  6471  0023                     BUTTONS_isClicked@button:	
  6472                           ; 1 bytes @ 0x3
  6473                           
  6474                           
  6475                           ; 1 bytes @ 0x3
  6476  0023                     	ds	1
  6477  0024                     ??_I2C1_MasterWriteTRBBuild:	
  6478  0024                     ??___lwdiv:	
  6479                           ; 1 bytes @ 0x4
  6480                           
  6481  0024                     ??___lwmod:	
  6482                           ; 1 bytes @ 0x4
  6483                           
  6484  0024                     init@btn:	
  6485                           ; 1 bytes @ 0x4
  6486                           
  6487                           
  6488                           ; 1 bytes @ 0x4
  6489  0024                     	ds	1
  6490  0025                     ??_BUTTONS_init:	
  6491  0025                     BUTTONS_task@i:	
  6492                           ; 1 bytes @ 0x5
  6493                           
  6494  0025                     ___lwdiv@counter:	
  6495                           ; 1 bytes @ 0x5
  6496                           
  6497  0025                     ___lwmod@counter:	
  6498                           ; 1 bytes @ 0x5
  6499                           
  6500                           
  6501                           ; 1 bytes @ 0x5
  6502  0025                     	ds	1
  6503  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  6504  0026                     BUTTONS_task@time:	
  6505                           ; 1 bytes @ 0x6
  6506                           
  6507  0026                     ___lwdiv@quotient:	
  6508                           ; 2 bytes @ 0x6
  6509                           
  6510                           
  6511                           ; 2 bytes @ 0x6
  6512  0026                     	ds	1
  6513  0027                     ?_I2C1_MasterWrite:	
  6514  0027                     I2C1_MasterWrite@length:	
  6515                           ; 1 bytes @ 0x7
  6516                           
  6517  0027                     LED_setColor@lo1:	
  6518                           ; 1 bytes @ 0x7
  6519                           
  6520                           
  6521                           ; 2 bytes @ 0x7
  6522  0027                     	ds	1
  6523  0028                     ??_BEAT_task:	
  6524  0028                     BUTTONS_task@btn:	
  6525                           ; 1 bytes @ 0x8
  6526                           
  6527  0028                     I2C1_MasterWrite@address:	
  6528                           ; 1 bytes @ 0x8
  6529                           
  6530                           
  6531                           ; 2 bytes @ 0x8
  6532  0028                     	ds	2
  6533  002A                     I2C1_MasterWrite@pflag:	
  6534  002A                     BEAT_task@offset:	
  6535                           ; 1 bytes @ 0xA
  6536                           
  6537                           
  6538                           ; 2 bytes @ 0xA
  6539  002A                     	ds	1
  6540  002B                     ??_I2C1_MasterWrite:	
  6541  002B                     LED_setColor@lo2:	
  6542                           ; 1 bytes @ 0xB
  6543                           
  6544                           
  6545                           ; 2 bytes @ 0xB
  6546  002B                     	ds	2
  6547  002D                     I2C1_MasterWrite@pdata:	
  6548                           
  6549                           ; 1 bytes @ 0xD
  6550  002D                     	ds	1
  6551  002E                     ?_writeData:	
  6552  002E                     writeData@data:	
  6553                           ; 1 bytes @ 0xE
  6554                           
  6555                           
  6556                           ; 1 bytes @ 0xE
  6557  002E                     	ds	1
  6558  002F                     ??_writeData:	
  6559  002F                     LED_setColor@lo3:	
  6560                           ; 1 bytes @ 0xF
  6561                           
  6562                           
  6563                           ; 2 bytes @ 0xF
  6564  002F                     	ds	3
  6565  0032                     writeData@address:	
  6566                           
  6567                           ; 1 bytes @ 0x12
  6568  0032                     	ds	1
  6569  0033                     writeData@status:	
  6570  0033                     LED_setColor@lo4:	
  6571                           ; 1 bytes @ 0x13
  6572                           
  6573                           
  6574                           ; 2 bytes @ 0x13
  6575  0033                     	ds	1
  6576  0034                     ?_TM1650_setDigit:	
  6577  0034                     ??_TM1650_enable:	
  6578                           ; 1 bytes @ 0x14
  6579                           
  6580  0034                     TM1650_setDigit@data:	
  6581                           ; 1 bytes @ 0x14
  6582                           
  6583  0034                     TM1650_enable@enable:	
  6584                           ; 1 bytes @ 0x14
  6585                           
  6586                           
  6587                           ; 1 bytes @ 0x14
  6588  0034                     	ds	1
  6589  0035                     ??_TM1650_init:	
  6590  0035                     LED_setColor@red:	
  6591                           ; 1 bytes @ 0x15
  6592                           
  6593  0035                     TM1650_setDigit@dp:	
  6594                           ; 1 bytes @ 0x15
  6595                           
  6596                           
  6597                           ; 2 bytes @ 0x15
  6598  0035                     	ds	1
  6599  0036                     ??_LED_task:	
  6600                           
  6601                           ; 1 bytes @ 0x16
  6602  0036                     	ds	1
  6603  0037                     ??_TM1650_setDigit:	
  6604                           
  6605                           ; 1 bytes @ 0x17
  6606  0037                     	ds	2
  6607  0039                     LED_task@time:	
  6608                           
  6609                           ; 2 bytes @ 0x19
  6610  0039                     	ds	1
  6611  003A                     TM1650_setDigit@digit:	
  6612                           
  6613                           ; 1 bytes @ 0x1A
  6614  003A                     	ds	1
  6615  003B                     ?_TM1650_fastPrintNum:	
  6616  003B                     TM1650_fastPrintNum@num:	
  6617                           ; 1 bytes @ 0x1B
  6618                           
  6619                           
  6620                           ; 2 bytes @ 0x1B
  6621  003B                     	ds	2
  6622  003D                     ??_TM1650_fastPrintNum:	
  6623                           
  6624                           ; 1 bytes @ 0x1D
  6625  003D                     	ds	1
  6626  003E                     TM1650_fastPrintNum@numWrite:	
  6627                           
  6628                           ; 2 bytes @ 0x1E
  6629  003E                     	ds	2
  6630  0040                     TM1650_fastPrintNum@i:	
  6631                           
  6632                           ; 2 bytes @ 0x20
  6633  0040                     	ds	2
  6634  0042                     ??_CONTROLLER_init:	
  6635  0042                     ??_CONTROLLER_task:	
  6636                           ; 1 bytes @ 0x22
  6637                           
  6638  0042                     ??_address_inc:	
  6639                           ; 1 bytes @ 0x22
  6640                           
  6641  0042                     ??_address_dec:	
  6642                           ; 1 bytes @ 0x22
  6643                           
  6644                           
  6645                           ; 1 bytes @ 0x22
  6646  0042                     	ds	2
  6647  0044                     CONTROLLER_task@time:	
  6648                           
  6649                           ; 2 bytes @ 0x24
  6650  0044                     	ds	2
  6651                           
  6652                           	psect	maintext
  6653  05B9                     __pmaintext:	
  6654 ;;
  6655 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6656 ;;
  6657 ;; *************** function _main *****************
  6658 ;; Defined at:
  6659 ;;		line 103 in file "main.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;		None
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6668 ;; Tracked objects:
  6669 ;;		On entry : B3F/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6675 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6676 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6677 ;;Total ram usage:        2 bytes
  6678 ;; Hardware stack levels required when called:   12
  6679 ;; This function calls:
  6680 ;;		_BEAT_init
  6681 ;;		_BEAT_task
  6682 ;;		_BUTTONS_init
  6683 ;;		_BUTTONS_task
  6684 ;;		_CLOCK_init
  6685 ;;		_CONTROLLER_init
  6686 ;;		_CONTROLLER_task
  6687 ;;		_EUSART1_SetRxInterruptHandler
  6688 ;;		_LED_task
  6689 ;;		_SYSTEM_Initialize
  6690 ;;		_TM1650_init
  6691 ;;		_initLED
  6692 ;; This function is called by:
  6693 ;;		Startup code after reset
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           
  6698                           ;psect for function _main
  6699  05B9                     _main:	
  6700                           
  6701                           ;main.c: 105:     SYSTEM_Initialize();
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6705  05B9  318F  274F  3185   	fcall	_SYSTEM_Initialize
  6706                           
  6707                           ;main.c: 106:     CLOCK_init();
  6708  05BC  318E  2649  3185   	fcall	_CLOCK_init
  6709                           
  6710                           ;main.c: 107:     TRISB6 = 0;
  6711  05BF  0140               	movlb	0	; select bank0
  6712  05C0  1313               	bcf	19,6	;volatile
  6713                           
  6714                           ;main.c: 108:     LATB6 = 0;
  6715  05C1  1319               	bcf	25,6	;volatile
  6716                           
  6717                           ;main.c: 109:     EUSART1_SetRxInterruptHandler(DMX_ISR);
  6718  05C2  3062               	movlw	low _DMX_ISR
  6719  05C3  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  6720  05C4  3007               	movlw	high _DMX_ISR
  6721  05C5  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  6722  05C6  318E  26A1  3185   	fcall	_EUSART1_SetRxInterruptHandler
  6723                           
  6724                           ;main.c: 115:     (INTCONbits.GIE = 1);
  6725  05C9  178B               	bsf	11,7	;volatile
  6726                           
  6727                           ;main.c: 118:     (INTCONbits.PEIE = 1);
  6728  05CA  170B               	bsf	11,6	;volatile
  6729                           
  6730                           ;main.c: 125:      _delay((unsigned long)((500)*(32000000/4000.0)));
  6731  05CB  3015               	movlw	21
  6732  05CC  0141               	movlb	1	; select bank1
  6733  05CD  00DF               	movwf	(??_main^(0+128)+1)
  6734  05CE  304B               	movlw	75
  6735  05CF  00DE               	movwf	??_main^(0+128)
  6736  05D0  30BE               	movlw	190
  6737  05D1                     u2717:	
  6738  05D1  0B89               	decfsz	9,f
  6739  05D2  2DD1               	goto	u2717
  6740  05D3  0BDE               	decfsz	??_main^(0+128),f
  6741  05D4  2DD1               	goto	u2717
  6742  05D5  0BDF               	decfsz	(??_main^(0+128)+1),f
  6743  05D6  2DD1               	goto	u2717
  6744  05D7  0000               	nop
  6745                           
  6746                           ;main.c: 126:     TM1650_init();
  6747  05D8  318E  2630  3185   	fcall	_TM1650_init
  6748                           
  6749                           ;main.c: 127:     BUTTONS_init();
  6750  05DB  3185  253E  3185   	fcall	_BUTTONS_init
  6751                           
  6752                           ;main.c: 128:     CONTROLLER_init();
  6753  05DE  318E  2651  3185   	fcall	_CONTROLLER_init
  6754                           
  6755                           ;main.c: 129:     initLED();
  6756  05E1  3186  26ED  3185   	fcall	_initLED
  6757                           
  6758                           ;main.c: 130:     BEAT_init();
  6759  05E4  318E  26FD  3185   	fcall	_BEAT_init
  6760  05E7                     l4145:	
  6761                           
  6762                           ;main.c: 134:         BEAT_task();
  6763  05E7  3182  22A4  3185   	fcall	_BEAT_task
  6764                           
  6765                           ;main.c: 135:         LED_task();
  6766  05EA  3185  25F4  3185   	fcall	_LED_task
  6767                           
  6768                           ;main.c: 136:         BUTTONS_task();
  6769  05ED  3181  21D2  3185   	fcall	_BUTTONS_task
  6770                           
  6771                           ;main.c: 137:         CONTROLLER_task();
  6772  05F0  3183  23E0  3185   	fcall	_CONTROLLER_task
  6773  05F3  2DE7               	goto	l4145
  6774  05F4                     __end_of_main:	
  6775                           
  6776                           	psect	text1
  6777  06ED                     __ptext1:	
  6778 ;; *************** function _initLED *****************
  6779 ;; Defined at:
  6780 ;;		line 159 in file "main.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;		None
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;		None
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  1    wreg      void 
  6787 ;; Registers used:
  6788 ;;		wreg, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6798 ;;Total ram usage:        0 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    4
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_main
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           
  6809                           ;psect for function _initLED
  6810  06ED                     _initLED:	
  6811                           
  6812                           ;main.c: 162:     TRISC7 = 0;
  6813                           
  6814                           ;incstack = 0
  6815                           ; Regs used in _initLED: [wreg+status,2+status,0]
  6816  06ED  0140               	movlb	0	; select bank0
  6817  06EE  1394               	bcf	20,7	;volatile
  6818                           
  6819                           ;main.c: 163:     TRISC6 = 0;
  6820  06EF  1314               	bcf	20,6	;volatile
  6821                           
  6822                           ;main.c: 164:     TRISC4 = 0;
  6823  06F0  1214               	bcf	20,4	;volatile
  6824                           
  6825                           ;main.c: 165:     TRISC3 = 0;
  6826  06F1  1194               	bcf	20,3	;volatile
  6827                           
  6828                           ;main.c: 167:     T2CLKCON = 0x01;
  6829  06F2  3001               	movlw	1
  6830  06F3  0145               	movlb	5	; select bank5
  6831  06F4  0090               	movwf	16	;volatile
  6832                           
  6833                           ;main.c: 168:     T2CONbits.ON = 1;
  6834  06F5  178E               	bsf	14,7	;volatile
  6835                           
  6836                           ;main.c: 170:     CCP1CONbits.CCP1EN = 1;
  6837  06F6  0146               	movlb	6	; select bank6
  6838  06F7  178E               	bsf	14,7	;volatile
  6839                           
  6840                           ;main.c: 171:     CCP1CONbits.MODE = 0b1100;
  6841  06F8  080E               	movf	14,w	;volatile
  6842  06F9  39F0               	andlw	-16
  6843  06FA  380C               	iorlw	12
  6844  06FB  008E               	movwf	14	;volatile
  6845                           
  6846                           ;main.c: 172:     CCP2CONbits.CCP2EN = 1;
  6847  06FC  1792               	bsf	18,7	;volatile
  6848                           
  6849                           ;main.c: 173:     CCP2CONbits.MODE = 0b1100;
  6850  06FD  0812               	movf	18,w	;volatile
  6851  06FE  39F0               	andlw	-16
  6852  06FF  380C               	iorlw	12
  6853  0700  0092               	movwf	18	;volatile
  6854                           
  6855                           ;main.c: 174:     CCP3CONbits.CCP3EN = 1;
  6856  0701  1796               	bsf	22,7	;volatile
  6857                           
  6858                           ;main.c: 175:     CCP3CONbits.MODE = 0b1100;
  6859  0702  0816               	movf	22,w	;volatile
  6860  0703  39F0               	andlw	-16
  6861  0704  380C               	iorlw	12
  6862  0705  0096               	movwf	22	;volatile
  6863                           
  6864                           ;main.c: 176:     CCP4CONbits.CCP4EN = 1;
  6865  0706  179A               	bsf	26,7	;volatile
  6866                           
  6867                           ;main.c: 177:     CCP4CONbits.MODE = 0b1100;
  6868  0707  081A               	movf	26,w	;volatile
  6869  0708  39F0               	andlw	-16
  6870  0709  380C               	iorlw	12
  6871  070A  009A               	movwf	26	;volatile
  6872                           
  6873                           ;main.c: 180:     RC7PPS = 0x09;
  6874  070B  3009               	movlw	9
  6875  070C  017E               	movlb	62	; select bank62
  6876  070D  00A7               	movwf	39	;volatile
  6877                           
  6878                           ;main.c: 181:     RC6PPS = 0x0A;
  6879  070E  300A               	movlw	10
  6880  070F  00A6               	movwf	38	;volatile
  6881                           
  6882                           ;main.c: 182:     RC4PPS = 0x0B;
  6883  0710  300B               	movlw	11
  6884  0711  00A4               	movwf	36	;volatile
  6885                           
  6886                           ;main.c: 183:     RC3PPS = 0x0C;
  6887  0712  300C               	movlw	12
  6888  0713  00A3               	movwf	35	;volatile
  6889  0714  0008               	return
  6890  0715                     __end_of_initLED:	
  6891                           
  6892                           	psect	text2
  6893  0E30                     __ptext2:	
  6894 ;; *************** function _TM1650_init *****************
  6895 ;; Defined at:
  6896 ;;		line 28 in file "tm1650.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;		None
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6914 ;;Total ram usage:        0 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    9
  6917 ;; This function calls:
  6918 ;;		_TM1650_enable
  6919 ;; This function is called by:
  6920 ;;		_main
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           
  6925                           ;psect for function _TM1650_init
  6926  0E30                     _TM1650_init:	
  6927                           
  6928                           ;tm1650.c: 29:     TM1650_enable(1);
  6929                           
  6930                           ;incstack = 0
  6931                           ; Regs used in _TM1650_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6932  0E30  3001               	movlw	1
  6933  0E31  318F  2725         	fcall	_TM1650_enable
  6934  0E33  0008               	return
  6935  0E34                     __end_of_TM1650_init:	
  6936                           
  6937                           	psect	text3
  6938  0F4F                     __ptext3:	
  6939 ;; *************** function _SYSTEM_Initialize *****************
  6940 ;; Defined at:
  6941 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;		None
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      void 
  6948 ;; Registers used:
  6949 ;;		wreg, status,2, status,0, pclath, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6959 ;;Total ram usage:        0 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    6
  6962 ;; This function calls:
  6963 ;;		_ADCC_Initialize
  6964 ;;		_EUSART1_Initialize
  6965 ;;		_I2C1_Initialize
  6966 ;;		_OSCILLATOR_Initialize
  6967 ;;		_PIN_MANAGER_Initialize
  6968 ;;		_PMD_Initialize
  6969 ;;		_TMR0_Initialize
  6970 ;; This function is called by:
  6971 ;;		_main
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           
  6976                           ;psect for function _SYSTEM_Initialize
  6977  0F4F                     _SYSTEM_Initialize:	
  6978                           
  6979                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  6980                           
  6981                           ;incstack = 0
  6982                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6983  0F4F  318E  26BC  318F   	fcall	_PMD_Initialize
  6984                           
  6985                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6986  0F52  3186  2693  318F   	fcall	_PIN_MANAGER_Initialize
  6987                           
  6988                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6989  0F55  318E  26B3  318F   	fcall	_OSCILLATOR_Initialize
  6990                           
  6991                           ;mcc_generated_files/mcc.c: 55:     I2C1_Initialize();
  6992  0F58  318F  2791  318F   	fcall	_I2C1_Initialize
  6993                           
  6994                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  6995  0F5B  3187  273C  318F   	fcall	_ADCC_Initialize
  6996                           
  6997                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  6998  0F5E  318F  2711  318F   	fcall	_TMR0_Initialize
  6999                           
  7000                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  7001  0F61  3184  24FB         	fcall	_EUSART1_Initialize
  7002  0F63  0008               	return
  7003  0F64                     __end_of_SYSTEM_Initialize:	
  7004                           
  7005                           	psect	text4
  7006  0F11                     __ptext4:	
  7007 ;; *************** function _TMR0_Initialize *****************
  7008 ;; Defined at:
  7009 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;		None
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0, pclath, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7027 ;;Total ram usage:        0 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    5
  7030 ;; This function calls:
  7031 ;;		_TMR0_SetInterruptHandler
  7032 ;; This function is called by:
  7033 ;;		_SYSTEM_Initialize
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           
  7038                           ;psect for function _TMR0_Initialize
  7039  0F11                     _TMR0_Initialize:	
  7040                           
  7041                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x45;
  7042                           
  7043                           ;incstack = 0
  7044                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7045  0F11  3045               	movlw	69
  7046  0F12  014B               	movlb	11	; select bank11
  7047  0F13  009F               	movwf	31	;volatile
  7048                           
  7049                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  7050  0F14  30F9               	movlw	249
  7051  0F15  009D               	movwf	29	;volatile
  7052                           
  7053                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  7054  0F16  019C               	clrf	28	;volatile
  7055                           
  7056                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  7057  0F17  014E               	movlb	14	; select bank14
  7058  0F18  128C               	bcf	12,5	;volatile
  7059                           
  7060                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  7061  0F19  1696               	bsf	22,5	;volatile
  7062                           
  7063                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7064  0F1A  301E               	movlw	low _TMR0_DefaultInterruptHandler
  7065  0F1B  0140               	movlb	0	; select bank0
  7066  0F1C  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7067  0F1D  300E               	movlw	high _TMR0_DefaultInterruptHandler
  7068  0F1E  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7069  0F1F  318E  2674         	fcall	_TMR0_SetInterruptHandler
  7070                           
  7071                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  7072  0F21  3080               	movlw	128
  7073  0F22  014B               	movlb	11	; select bank11
  7074  0F23  009E               	movwf	30	;volatile
  7075  0F24  0008               	return
  7076  0F25                     __end_of_TMR0_Initialize:	
  7077                           
  7078                           	psect	text5
  7079  0EBC                     __ptext5:	
  7080 ;; *************** function _PMD_Initialize *****************
  7081 ;; Defined at:
  7082 ;;		line 75 in file "mcc_generated_files/mcc.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;		None
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      void 
  7089 ;; Registers used:
  7090 ;;		status,2
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7100 ;;Total ram usage:        0 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    4
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_SYSTEM_Initialize
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _PMD_Initialize
  7112  0EBC                     _PMD_Initialize:	
  7113                           
  7114                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  7115                           
  7116                           ;incstack = 0
  7117                           ; Regs used in _PMD_Initialize: [status,2]
  7118  0EBC  014F               	movlb	15	; select bank15
  7119  0EBD  0196               	clrf	22	;volatile
  7120                           
  7121                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  7122  0EBE  0197               	clrf	23	;volatile
  7123                           
  7124                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  7125  0EBF  0198               	clrf	24	;volatile
  7126                           
  7127                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  7128  0EC0  0199               	clrf	25	;volatile
  7129                           
  7130                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  7131  0EC1  019A               	clrf	26	;volatile
  7132                           
  7133                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  7134  0EC2  019B               	clrf	27	;volatile
  7135                           
  7136                           ;mcc_generated_files/mcc.c: 90:     PMD6 = 0x00;
  7137  0EC3  019C               	clrf	28	;volatile
  7138                           
  7139                           ;mcc_generated_files/mcc.c: 92:     PMD7 = 0x00;
  7140  0EC4  019D               	clrf	29	;volatile
  7141  0EC5  0008               	return
  7142  0EC6                     __end_of_PMD_Initialize:	
  7143                           
  7144                           	psect	text6
  7145  0693                     __ptext6:	
  7146 ;; *************** function _PIN_MANAGER_Initialize *****************
  7147 ;; Defined at:
  7148 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;		None
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, status,2
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7166 ;;Total ram usage:        0 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    4
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_SYSTEM_Initialize
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           
  7177                           ;psect for function _PIN_MANAGER_Initialize
  7178  0693                     _PIN_MANAGER_Initialize:	
  7179                           
  7180                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7181                           
  7182                           ;incstack = 0
  7183                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7184  0693  0140               	movlb	0	; select bank0
  7185  0694  0198               	clrf	24	;volatile
  7186                           
  7187                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7188  0695  0199               	clrf	25	;volatile
  7189                           
  7190                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7191  0696  019A               	clrf	26	;volatile
  7192                           
  7193                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  7194  0697  303F               	movlw	63
  7195  0698  0092               	movwf	18	;volatile
  7196                           
  7197                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  7198  0699  30F0               	movlw	240
  7199  069A  0093               	movwf	19	;volatile
  7200                           
  7201                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  7202  069B  30FF               	movlw	255
  7203  069C  0094               	movwf	20	;volatile
  7204                           
  7205                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF8;
  7206  069D  30F8               	movlw	248
  7207  069E  017E               	movlb	62	; select bank62
  7208  069F  00CE               	movwf	78	;volatile
  7209                           
  7210                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  7211  06A0  30E0               	movlw	224
  7212  06A1  00C3               	movwf	67	;volatile
  7213                           
  7214                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x03;
  7215  06A2  3003               	movlw	3
  7216  06A3  00B8               	movwf	56	;volatile
  7217                           
  7218                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7219  06A4  01C4               	clrf	68	;volatile
  7220                           
  7221                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x04;
  7222  06A5  3004               	movlw	4
  7223  06A6  00B9               	movwf	57	;volatile
  7224                           
  7225                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x07;
  7226  06A7  3007               	movlw	7
  7227  06A8  00CF               	movwf	79	;volatile
  7228                           
  7229                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  7230  06A9  01BA               	clrf	58	;volatile
  7231                           
  7232                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  7233  06AA  01C5               	clrf	69	;volatile
  7234                           
  7235                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  7236  06AB  01D0               	clrf	80	;volatile
  7237                           
  7238                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  7239  06AC  3037               	movlw	55
  7240  06AD  00BB               	movwf	59	;volatile
  7241                           
  7242                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  7243  06AE  30F0               	movlw	240
  7244  06AF  00C6               	movwf	70	;volatile
  7245                           
  7246                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  7247  06B0  30FF               	movlw	255
  7248  06B1  00D1               	movwf	81	;volatile
  7249                           
  7250                           ;mcc_generated_files/pin_manager.c: 106:     SSP1CLKPPS = 0x05;
  7251  06B2  3005               	movlw	5
  7252  06B3  017D               	movlb	61	; select bank61
  7253  06B4  00C5               	movwf	69	;volatile
  7254                           
  7255                           ;mcc_generated_files/pin_manager.c: 107:     RA4PPS = 0x14;
  7256  06B5  3014               	movlw	20
  7257  06B6  017E               	movlb	62	; select bank62
  7258  06B7  0094               	movwf	20	;volatile
  7259                           
  7260                           ;mcc_generated_files/pin_manager.c: 108:     RA5PPS = 0x13;
  7261  06B8  3013               	movlw	19
  7262  06B9  0095               	movwf	21	;volatile
  7263                           
  7264                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x04;
  7265  06BA  3004               	movlw	4
  7266  06BB  017D               	movlb	61	; select bank61
  7267  06BC  00C6               	movwf	70	;volatile
  7268                           
  7269                           ;mcc_generated_files/pin_manager.c: 110:     RX1DTPPS = 0x0C;
  7270  06BD  300C               	movlw	12
  7271  06BE  00CB               	movwf	75	;volatile
  7272  06BF  0008               	return
  7273  06C0                     __end_of_PIN_MANAGER_Initialize:	
  7274                           
  7275                           	psect	text7
  7276  0EB3                     __ptext7:	
  7277 ;; *************** function _OSCILLATOR_Initialize *****************
  7278 ;; Defined at:
  7279 ;;		line 61 in file "mcc_generated_files/mcc.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;		None
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;		None
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7297 ;;Total ram usage:        0 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; Hardware stack levels required when called:    4
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_SYSTEM_Initialize
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           
  7308                           ;psect for function _OSCILLATOR_Initialize
  7309  0EB3                     _OSCILLATOR_Initialize:	
  7310                           
  7311                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  7312                           
  7313                           ;incstack = 0
  7314                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7315  0EB3  3060               	movlw	96
  7316  0EB4  0151               	movlb	17	; select bank17
  7317  0EB5  008D               	movwf	13	;volatile
  7318                           
  7319                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  7320  0EB6  018F               	clrf	15	;volatile
  7321                           
  7322                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  7323  0EB7  0191               	clrf	17	;volatile
  7324                           
  7325                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
  7326  0EB8  3006               	movlw	6
  7327  0EB9  0093               	movwf	19	;volatile
  7328                           
  7329                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  7330  0EBA  0192               	clrf	18	;volatile
  7331  0EBB  0008               	return
  7332  0EBC                     __end_of_OSCILLATOR_Initialize:	
  7333                           
  7334                           	psect	text8
  7335  0F91                     __ptext8:	
  7336 ;; *************** function _I2C1_Initialize *****************
  7337 ;; Defined at:
  7338 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;		None
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      void 
  7345 ;; Registers used:
  7346 ;;		wreg, status,2
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7355 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7356 ;;Total ram usage:        1 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:    4
  7359 ;; This function calls:
  7360 ;;		Nothing
  7361 ;; This function is called by:
  7362 ;;		_SYSTEM_Initialize
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           
  7367                           ;psect for function _I2C1_Initialize
  7368  0F91                     _I2C1_Initialize:	
  7369                           
  7370                           ;mcc_generated_files/i2c1.c: 200:     i2c1_object.pTrHead = i2c1_tr_queue;
  7371                           
  7372                           ;incstack = 0
  7373                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  7374  0F91  3067               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7375  0F92  0140               	movlb	0	; select bank0
  7376  0F93  00A0               	movwf	??_I2C1_Initialize
  7377  0F94  0820               	movf	??_I2C1_Initialize,w
  7378  0F95  00C7               	movwf	low ((_i2c1_object| 0+1))
  7379                           
  7380                           ;mcc_generated_files/i2c1.c: 201:     i2c1_object.pTrTail = i2c1_tr_queue;
  7381  0F96  3067               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7382  0F97  00A0               	movwf	??_I2C1_Initialize
  7383  0F98  0820               	movf	??_I2C1_Initialize,w
  7384  0F99  00C6               	movwf	_i2c1_object
  7385                           
  7386                           ;mcc_generated_files/i2c1.c: 202:     i2c1_object.trStatus.s.empty = 1;
  7387  0F9A  14C8               	bsf	_i2c1_object+2,1
  7388                           
  7389                           ;mcc_generated_files/i2c1.c: 203:     i2c1_object.trStatus.s.full = 0;
  7390  0F9B  1048               	bcf	_i2c1_object+2,0
  7391                           
  7392                           ;mcc_generated_files/i2c1.c: 205:     i2c1_object.i2cErrors = 0;
  7393  0F9C  01CA               	clrf	_i2c1_object+4
  7394                           
  7395                           ;mcc_generated_files/i2c1.c: 208:     SSP1STAT = 0x00;
  7396  0F9D  0143               	movlb	3	; select bank3
  7397  0F9E  018F               	clrf	15	;volatile
  7398                           
  7399                           ;mcc_generated_files/i2c1.c: 210:     SSP1CON1 = 0x28;
  7400  0F9F  3028               	movlw	40
  7401  0FA0  0090               	movwf	16	;volatile
  7402                           
  7403                           ;mcc_generated_files/i2c1.c: 212:     SSP1CON3 = 0x00;
  7404  0FA1  0192               	clrf	18	;volatile
  7405                           
  7406                           ;mcc_generated_files/i2c1.c: 214:     SSP1ADD = 0x50;
  7407  0FA2  3050               	movlw	80
  7408  0FA3  008D               	movwf	13	;volatile
  7409                           
  7410                           ;mcc_generated_files/i2c1.c: 217:     PIR3bits.SSP1IF = 0;
  7411  0FA4  014E               	movlb	14	; select bank14
  7412  0FA5  100F               	bcf	15,0	;volatile
  7413                           
  7414                           ;mcc_generated_files/i2c1.c: 218:     PIR3bits.BCL1IF = 0;
  7415  0FA6  108F               	bcf	15,1	;volatile
  7416                           
  7417                           ;mcc_generated_files/i2c1.c: 221:     PIE3bits.SSP1IE = 1;
  7418  0FA7  1419               	bsf	25,0	;volatile
  7419                           
  7420                           ;mcc_generated_files/i2c1.c: 222:     PIE3bits.BCL1IE = 1;
  7421  0FA8  1499               	bsf	25,1	;volatile
  7422  0FA9  0008               	return
  7423  0FAA                     __end_of_I2C1_Initialize:	
  7424                           
  7425                           	psect	text9
  7426  04FB                     __ptext9:	
  7427 ;; *************** function _EUSART1_Initialize *****************
  7428 ;; Defined at:
  7429 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;		None
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0, pclath, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7446 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7447 ;;Total ram usage:        1 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    5
  7450 ;; This function calls:
  7451 ;;		_EUSART1_SetErrorHandler
  7452 ;;		_EUSART1_SetFramingErrorHandler
  7453 ;;		_EUSART1_SetOverrunErrorHandler
  7454 ;;		_EUSART1_SetRxInterruptHandler
  7455 ;;		_EUSART1_SetTxInterruptHandler
  7456 ;; This function is called by:
  7457 ;;		_SYSTEM_Initialize
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           
  7462                           ;psect for function _EUSART1_Initialize
  7463  04FB                     _EUSART1_Initialize:	
  7464                           
  7465                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  7466                           
  7467                           ;incstack = 0
  7468                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7469  04FB  014E               	movlb	14	; select bank14
  7470  04FC  1299               	bcf	25,5	;volatile
  7471                           
  7472                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  7473  04FD  3061               	movlw	low _EUSART1_Receive_ISR
  7474  04FE  0140               	movlb	0	; select bank0
  7475  04FF  00A0               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  7476  0500  3006               	movlw	high _EUSART1_Receive_ISR
  7477  0501  00A1               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  7478  0502  318E  26A1  3184   	fcall	_EUSART1_SetRxInterruptHandler
  7479                           
  7480                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  7481  0505  014E               	movlb	14	; select bank14
  7482  0506  1219               	bcf	25,4	;volatile
  7483                           
  7484                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  7485  0507  30C6               	movlw	low _EUSART1_Transmit_ISR
  7486  0508  0140               	movlb	0	; select bank0
  7487  0509  00A0               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  7488  050A  300F               	movlw	high _EUSART1_Transmit_ISR
  7489  050B  00A1               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  7490  050C  318E  26AA  3184   	fcall	_EUSART1_SetTxInterruptHandler
  7491                           
  7492                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  7493  050F  3008               	movlw	8
  7494  0510  0142               	movlb	2	; select bank2
  7495  0511  009F               	movwf	31	;volatile
  7496                           
  7497                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x90;
  7498  0512  3090               	movlw	144
  7499  0513  009D               	movwf	29	;volatile
  7500                           
  7501                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x04;
  7502  0514  3004               	movlw	4
  7503  0515  009E               	movwf	30	;volatile
  7504                           
  7505                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x1F;
  7506  0516  301F               	movlw	31
  7507  0517  009B               	movwf	27	;volatile
  7508                           
  7509                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  7510  0518  019C               	clrf	28	;volatile
  7511                           
  7512                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  7513  0519  301D               	movlw	low _EUSART1_DefaultFramingErrorHandler
  7514  051A  0140               	movlb	0	; select bank0
  7515  051B  00A0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  7516  051C  300E               	movlw	high _EUSART1_DefaultFramingErrorHandler
  7517  051D  00A1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  7518  051E  318E  268F  3184   	fcall	_EUSART1_SetFramingErrorHandler
  7519                           
  7520                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  7521  0521  302C               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  7522  0522  0140               	movlb	0	; select bank0
  7523  0523  00A0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  7524  0524  300E               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  7525  0525  00A1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  7526  0526  318E  2698  3184   	fcall	_EUSART1_SetOverrunErrorHandler
  7527                           
  7528                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  7529  0529  301F               	movlw	low _EUSART1_DefaultErrorHandler
  7530  052A  0140               	movlb	0	; select bank0
  7531  052B  00A0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  7532  052C  300E               	movlw	high _EUSART1_DefaultErrorHandler
  7533  052D  00A1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  7534  052E  318E  2686         	fcall	_EUSART1_SetErrorHandler
  7535                           
  7536                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  7537  0530  0140               	movlb	0	; select bank0
  7538  0531  01E5               	clrf	_eusart1RxLastError	;volatile
  7539                           
  7540                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  7541  0532  01F3               	clrf	_eusart1TxHead	;volatile
  7542                           
  7543                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  7544  0533  01F2               	clrf	_eusart1TxTail	;volatile
  7545                           
  7546                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  7547  0534  3008               	movlw	8
  7548  0535  00A2               	movwf	??_EUSART1_Initialize
  7549  0536  0822               	movf	??_EUSART1_Initialize,w
  7550  0537  00EE               	movwf	_eusart1TxBufferRemaining	;volatile
  7551                           
  7552                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  7553  0538  01F1               	clrf	_eusart1RxHead	;volatile
  7554                           
  7555                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  7556  0539  01F0               	clrf	_eusart1RxTail	;volatile
  7557                           
  7558                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  7559  053A  01E6               	clrf	_eusart1RxCount	;volatile
  7560                           
  7561                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  7562  053B  014E               	movlb	14	; select bank14
  7563  053C  1699               	bsf	25,5	;volatile
  7564  053D  0008               	return
  7565  053E                     __end_of_EUSART1_Initialize:	
  7566                           
  7567                           	psect	text10
  7568  0EAA                     __ptext10:	
  7569 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  7570 ;; Defined at:
  7571 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7574 ;;		 -> EUSART1_Transmit_ISR(1), 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;		None
  7577 ;; Return value:  Size  Location     Type
  7578 ;;                  1    wreg      void 
  7579 ;; Registers used:
  7580 ;;		wreg
  7581 ;; Tracked objects:
  7582 ;;		On entry : 0/0
  7583 ;;		On exit  : 0/0
  7584 ;;		Unchanged: 0/0
  7585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7590 ;;Total ram usage:        2 bytes
  7591 ;; Hardware stack levels used:    1
  7592 ;; Hardware stack levels required when called:    4
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_EUSART1_Initialize
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           
  7601                           ;psect for function _EUSART1_SetTxInterruptHandler
  7602  0EAA                     _EUSART1_SetTxInterruptHandler:	
  7603                           
  7604                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7605                           
  7606                           ;incstack = 0
  7607                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  7608  0EAA  0140               	movlb	0	; select bank0
  7609  0EAB  0821               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  7610  0EAC  0141               	movlb	1	; select bank1
  7611  0EAD  00DB               	movwf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128)
  7612  0EAE  0140               	movlb	0	; select bank0
  7613  0EAF  0820               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  7614  0EB0  0141               	movlb	1	; select bank1
  7615  0EB1  00DA               	movwf	_EUSART1_TxDefaultInterruptHandler^(0+128)
  7616  0EB2  0008               	return
  7617  0EB3                     __end_of_EUSART1_SetTxInterruptHandler:	
  7618                           
  7619                           	psect	text11
  7620  0EA1                     __ptext11:	
  7621 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  7622 ;; Defined at:
  7623 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7626 ;;		 -> DMX_ISR(1), EUSART1_Receive_ISR(1), 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;		None
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      void 
  7631 ;; Registers used:
  7632 ;;		wreg
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7641 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7642 ;;Total ram usage:        2 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:    4
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_EUSART1_Initialize
  7649 ;;		_main
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           
  7654                           ;psect for function _EUSART1_SetRxInterruptHandler
  7655  0EA1                     _EUSART1_SetRxInterruptHandler:	
  7656                           
  7657                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7658                           
  7659                           ;incstack = 0
  7660                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  7661  0EA1  0140               	movlb	0	; select bank0
  7662  0EA2  0821               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  7663  0EA3  0141               	movlb	1	; select bank1
  7664  0EA4  00D9               	movwf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128)
  7665  0EA5  0140               	movlb	0	; select bank0
  7666  0EA6  0820               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  7667  0EA7  0141               	movlb	1	; select bank1
  7668  0EA8  00D8               	movwf	_EUSART1_RxDefaultInterruptHandler^(0+128)
  7669  0EA9  0008               	return
  7670  0EAA                     __end_of_EUSART1_SetRxInterruptHandler:	
  7671                           
  7672                           	psect	text12
  7673  0E98                     __ptext12:	
  7674 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7675 ;; Defined at:
  7676 ;;		line 265 in file "mcc_generated_files/eusart1.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7679 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      void 
  7684 ;; Registers used:
  7685 ;;		wreg
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7691 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7694 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7695 ;;Total ram usage:        2 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:    4
  7698 ;; This function calls:
  7699 ;;		Nothing
  7700 ;; This function is called by:
  7701 ;;		_EUSART1_Initialize
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           
  7706                           ;psect for function _EUSART1_SetOverrunErrorHandler
  7707  0E98                     _EUSART1_SetOverrunErrorHandler:	
  7708                           
  7709                           ;mcc_generated_files/eusart1.c: 266:     EUSART1_OverrunErrorHandler = interruptHandler;
  7710                           
  7711                           ;incstack = 0
  7712                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  7713  0E98  0140               	movlb	0	; select bank0
  7714  0E99  0821               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  7715  0E9A  0141               	movlb	1	; select bank1
  7716  0E9B  00D5               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  7717  0E9C  0140               	movlb	0	; select bank0
  7718  0E9D  0820               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  7719  0E9E  0141               	movlb	1	; select bank1
  7720  0E9F  00D4               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  7721  0EA0  0008               	return
  7722  0EA1                     __end_of_EUSART1_SetOverrunErrorHandler:	
  7723                           
  7724                           	psect	text13
  7725  0E8F                     __ptext13:	
  7726 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7727 ;; Defined at:
  7728 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7731 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7746 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7747 ;;Total ram usage:        2 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    4
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_EUSART1_Initialize
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function _EUSART1_SetFramingErrorHandler
  7759  0E8F                     _EUSART1_SetFramingErrorHandler:	
  7760                           
  7761                           ;mcc_generated_files/eusart1.c: 262:     EUSART1_FramingErrorHandler = interruptHandler;
  7762                           
  7763                           ;incstack = 0
  7764                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  7765  0E8F  0140               	movlb	0	; select bank0
  7766  0E90  0821               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  7767  0E91  0141               	movlb	1	; select bank1
  7768  0E92  00D7               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  7769  0E93  0140               	movlb	0	; select bank0
  7770  0E94  0820               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  7771  0E95  0141               	movlb	1	; select bank1
  7772  0E96  00D6               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  7773  0E97  0008               	return
  7774  0E98                     __end_of_EUSART1_SetFramingErrorHandler:	
  7775                           
  7776                           	psect	text14
  7777  0E86                     __ptext14:	
  7778 ;; *************** function _EUSART1_SetErrorHandler *****************
  7779 ;; Defined at:
  7780 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  7783 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;		None
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  1    wreg      void 
  7788 ;; Registers used:
  7789 ;;		wreg
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7799 ;;Total ram usage:        2 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; Hardware stack levels required when called:    4
  7802 ;; This function calls:
  7803 ;;		Nothing
  7804 ;; This function is called by:
  7805 ;;		_EUSART1_Initialize
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           
  7810                           ;psect for function _EUSART1_SetErrorHandler
  7811  0E86                     _EUSART1_SetErrorHandler:	
  7812                           
  7813                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_ErrorHandler = interruptHandler;
  7814                           
  7815                           ;incstack = 0
  7816                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  7817  0E86  0140               	movlb	0	; select bank0
  7818  0E87  0821               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  7819  0E88  0141               	movlb	1	; select bank1
  7820  0E89  00D3               	movwf	(_EUSART1_ErrorHandler+1)^(0+128)
  7821  0E8A  0140               	movlb	0	; select bank0
  7822  0E8B  0820               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  7823  0E8C  0141               	movlb	1	; select bank1
  7824  0E8D  00D2               	movwf	_EUSART1_ErrorHandler^(0+128)
  7825  0E8E  0008               	return
  7826  0E8F                     __end_of_EUSART1_SetErrorHandler:	
  7827                           
  7828                           	psect	text15
  7829  073C                     __ptext15:	
  7830 ;; *************** function _ADCC_Initialize *****************
  7831 ;; Defined at:
  7832 ;;		line 64 in file "mcc_generated_files/adcc.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2, status,0, pclath, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7850 ;;Total ram usage:        0 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    5
  7853 ;; This function calls:
  7854 ;;		_ADCC_SetADTIInterruptHandler
  7855 ;; This function is called by:
  7856 ;;		_SYSTEM_Initialize
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           
  7861                           ;psect for function _ADCC_Initialize
  7862  073C                     _ADCC_Initialize:	
  7863                           
  7864                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  7865                           
  7866                           ;incstack = 0
  7867                           ; Regs used in _ADCC_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7868  073C  0141               	movlb	1	; select bank1
  7869  073D  018C               	clrf	12	;volatile
  7870                           
  7871                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  7872  073E  018D               	clrf	13	;volatile
  7873                           
  7874                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  7875  073F  018E               	clrf	14	;volatile
  7876                           
  7877                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  7878  0740  018F               	clrf	15	;volatile
  7879                           
  7880                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  7881  0741  0192               	clrf	18	;volatile
  7882                           
  7883                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  7884  0742  0193               	clrf	19	;volatile
  7885                           
  7886                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
  7887  0743  0198               	clrf	24	;volatile
  7888                           
  7889                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
  7890  0744  019A               	clrf	26	;volatile
  7891                           
  7892                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
  7893  0745  019F               	clrf	31	;volatile
  7894                           
  7895                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
  7896  0746  0142               	movlb	2	; select bank2
  7897  0747  018C               	clrf	12	;volatile
  7898                           
  7899                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
  7900  0748  018D               	clrf	13	;volatile
  7901                           
  7902                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
  7903  0749  018E               	clrf	14	;volatile
  7904                           
  7905                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
  7906  074A  018F               	clrf	15	;volatile
  7907                           
  7908                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
  7909  074B  0190               	clrf	16	;volatile
  7910                           
  7911                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
  7912  074C  0192               	clrf	18	;volatile
  7913                           
  7914                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x54;
  7915  074D  3054               	movlw	84
  7916  074E  0093               	movwf	19	;volatile
  7917                           
  7918                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x56;
  7919  074F  3056               	movlw	86
  7920  0750  0094               	movwf	20	;volatile
  7921                           
  7922                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
  7923  0751  0195               	clrf	21	;volatile
  7924                           
  7925                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x00;
  7926  0752  0196               	clrf	22	;volatile
  7927                           
  7928                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
  7929  0753  0197               	clrf	23	;volatile
  7930                           
  7931                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
  7932  0754  0198               	clrf	24	;volatile
  7933                           
  7934                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0xD4;
  7935  0755  30D4               	movlw	212
  7936  0756  0091               	movwf	17	;volatile
  7937                           
  7938                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADTIF = 0;
  7939  0757  014E               	movlb	14	; select bank14
  7940  0758  108D               	bcf	13,1	;volatile
  7941                           
  7942                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADTIE = 1;
  7943  0759  1497               	bsf	23,1	;volatile
  7944                           
  7945                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
  7946  075A  301C               	movlw	low _ADCC_DefaultInterruptHandler
  7947  075B  0140               	movlb	0	; select bank0
  7948  075C  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
  7949  075D  300E               	movlw	high _ADCC_DefaultInterruptHandler
  7950  075E  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
  7951  075F  318E  2659         	fcall	_ADCC_SetADTIInterruptHandler
  7952  0761  0008               	return
  7953  0762                     __end_of_ADCC_Initialize:	
  7954                           
  7955                           	psect	text16
  7956  05F4                     __ptext16:	
  7957 ;; *************** function _LED_task *****************
  7958 ;; Defined at:
  7959 ;;		line 143 in file "main.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;  time            2   25[BANK0 ] unsigned short 
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		wreg, status,2, status,0, pclath, cstack
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7974 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7975 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7976 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7977 ;;Total ram usage:        5 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:    5
  7980 ;; This function calls:
  7981 ;;		_BEAT_detected
  7982 ;;		_CLOCK_getTime
  7983 ;;		_LED_setColor
  7984 ;; This function is called by:
  7985 ;;		_main
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           
  7990                           ;psect for function _LED_task
  7991  05F4                     _LED_task:	
  7992                           
  7993                           ;main.c: 144:     time_t time = CLOCK_getTime();
  7994                           
  7995                           ;incstack = 0
  7996                           ; Regs used in _LED_task: [wreg+status,2+status,0+pclath+cstack]
  7997  05F4  318E  2643  3185   	fcall	_CLOCK_getTime
  7998  05F7  0140               	movlb	0	; select bank0
  7999  05F8  0821               	movf	?_CLOCK_getTime+1,w
  8000  05F9  00BA               	movwf	LED_task@time+1
  8001  05FA  0820               	movf	?_CLOCK_getTime,w
  8002  05FB  00B9               	movwf	LED_task@time
  8003                           
  8004                           ;main.c: 146:     if (time - lastTime < 100)
  8005  05FC  084F               	movf	_lastTime,w
  8006  05FD  0239               	subwf	LED_task@time,w
  8007  05FE  00B6               	movwf	??_LED_task
  8008  05FF  0850               	movf	_lastTime+1,w
  8009  0600  3B3A               	subwfb	LED_task@time+1,w
  8010  0601  00B7               	movwf	??_LED_task+1
  8011  0602  3000               	movlw	0
  8012  0603  0237               	subwf	??_LED_task+1,w
  8013  0604  3064               	movlw	100
  8014  0605  1903               	skipnz
  8015  0606  0236               	subwf	??_LED_task,w
  8016  0607  1C03               	btfss	3,0
  8017  0608  0008               	return
  8018                           
  8019                           ;main.c: 149:     lastTime = time;
  8020  0609  083A               	movf	LED_task@time+1,w
  8021  060A  00D0               	movwf	_lastTime+1
  8022  060B  0839               	movf	LED_task@time,w
  8023  060C  00CF               	movwf	_lastTime
  8024                           
  8025                           ;main.c: 151:     if(BEAT_detected()) {
  8026  060D  318E  267D  3185   	fcall	_BEAT_detected
  8027  0610  3A00               	xorlw	0
  8028  0611  1903               	skipnz
  8029  0612  2E24               	goto	l4027
  8030                           
  8031                           ;main.c: 153:         LED_setColor(255, 255, 255, 255);
  8032  0613  30FF               	movlw	255
  8033  0614  0140               	movlb	0	; select bank0
  8034  0615  00B6               	movwf	??_LED_task
  8035  0616  0836               	movf	??_LED_task,w
  8036  0617  00A0               	movwf	LED_setColor@green
  8037  0618  30FF               	movlw	255
  8038  0619  00B7               	movwf	??_LED_task+1
  8039  061A  0837               	movf	??_LED_task+1,w
  8040  061B  00A1               	movwf	LED_setColor@white
  8041  061C  30FF               	movlw	255
  8042  061D  00B8               	movwf	??_LED_task+2
  8043  061E  0838               	movf	??_LED_task+2,w
  8044  061F  00A2               	movwf	LED_setColor@blue
  8045  0620  30FF               	movlw	255
  8046  0621  3185  257D         	fcall	_LED_setColor
  8047                           
  8048                           ;main.c: 154:     } else {
  8049  0623  0008               	return
  8050  0624                     l4027:	
  8051                           
  8052                           ;main.c: 155:         LED_setColor(0,0,0,0);
  8053  0624  0140               	movlb	0	; select bank0
  8054  0625  01A0               	clrf	LED_setColor@green
  8055  0626  01A1               	clrf	LED_setColor@white
  8056  0627  01A2               	clrf	LED_setColor@blue
  8057  0628  3000               	movlw	0
  8058  0629  3185  257D         	fcall	_LED_setColor
  8059  062B  0008               	return
  8060  062C                     __end_of_LED_task:	
  8061                           
  8062                           	psect	text17
  8063  057D                     __ptext17:	
  8064 ;; *************** function _LED_setColor *****************
  8065 ;; Defined at:
  8066 ;;		line 187 in file "main.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  red             1    wreg     unsigned char 
  8069 ;;  green           1    0[BANK0 ] unsigned char 
  8070 ;;  white           1    1[BANK0 ] unsigned char 
  8071 ;;  blue            1    2[BANK0 ] unsigned char 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  red             1   21[BANK0 ] unsigned char 
  8074 ;;  lo4             2   19[BANK0 ] int 
  8075 ;;  hi4             2    0        int 
  8076 ;;  lo3             2   15[BANK0 ] int 
  8077 ;;  hi3             2    0        int 
  8078 ;;  lo2             2   11[BANK0 ] int 
  8079 ;;  hi2             2    0        int 
  8080 ;;  lo1             2    7[BANK0 ] int 
  8081 ;;  hi1             2    0        int 
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  1    wreg      void 
  8084 ;; Registers used:
  8085 ;;		wreg, status,2
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8091 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8092 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8094 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8095 ;;Total ram usage:       22 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; Hardware stack levels required when called:    4
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_LED_task
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           
  8106                           ;psect for function _LED_setColor
  8107  057D                     _LED_setColor:	
  8108                           
  8109                           ;incstack = 0
  8110                           ; Regs used in _LED_setColor: [wreg+status,2]
  8111                           ;LED_setColor@red stored from wreg
  8112  057D  0140               	movlb	0	; select bank0
  8113  057E  00B5               	movwf	LED_setColor@red
  8114                           
  8115                           ;main.c: 188:     red/=2;
  8116  057F  1003               	clrc
  8117  0580  0CB5               	rrf	LED_setColor@red,f
  8118                           
  8119                           ;main.c: 189:     green/=2;
  8120  0581  1003               	clrc
  8121  0582  0CA0               	rrf	LED_setColor@green,f
  8122                           
  8123                           ;main.c: 190:     blue/=2;
  8124  0583  1003               	clrc
  8125  0584  0CA2               	rrf	LED_setColor@blue,f
  8126                           
  8127                           ;main.c: 191:     white/=2;
  8128  0585  1003               	clrc
  8129  0586  0CA1               	rrf	LED_setColor@white,f
  8130                           
  8131                           ;main.c: 193:     int lo1 = red & 0x00FF;
  8132  0587  0835               	movf	LED_setColor@red,w
  8133  0588  00A3               	movwf	??_LED_setColor
  8134  0589  01A4               	clrf	??_LED_setColor+1
  8135  058A  0823               	movf	??_LED_setColor,w
  8136  058B  00A7               	movwf	LED_setColor@lo1
  8137  058C  0824               	movf	??_LED_setColor+1,w
  8138  058D  00A8               	movwf	LED_setColor@lo1+1
  8139                           
  8140                           ;main.c: 195:     int lo2 = green & 0x00FF;
  8141  058E  0820               	movf	LED_setColor@green,w
  8142  058F  00A3               	movwf	??_LED_setColor
  8143  0590  01A4               	clrf	??_LED_setColor+1
  8144  0591  0823               	movf	??_LED_setColor,w
  8145  0592  00AB               	movwf	LED_setColor@lo2
  8146  0593  0824               	movf	??_LED_setColor+1,w
  8147  0594  00AC               	movwf	LED_setColor@lo2+1
  8148                           
  8149                           ;main.c: 197:     int lo3 = blue & 0x00FF;
  8150  0595  0822               	movf	LED_setColor@blue,w
  8151  0596  00A3               	movwf	??_LED_setColor
  8152  0597  01A4               	clrf	??_LED_setColor+1
  8153  0598  0823               	movf	??_LED_setColor,w
  8154  0599  00AF               	movwf	LED_setColor@lo3
  8155  059A  0824               	movf	??_LED_setColor+1,w
  8156  059B  00B0               	movwf	LED_setColor@lo3+1
  8157                           
  8158                           ;main.c: 199:     int lo4 = white & 0x00FF;
  8159  059C  0821               	movf	LED_setColor@white,w
  8160  059D  00A3               	movwf	??_LED_setColor
  8161  059E  01A4               	clrf	??_LED_setColor+1
  8162  059F  0823               	movf	??_LED_setColor,w
  8163  05A0  00B3               	movwf	LED_setColor@lo4
  8164  05A1  0824               	movf	??_LED_setColor+1,w
  8165  05A2  00B4               	movwf	LED_setColor@lo4+1
  8166                           
  8167                           ;main.c: 201:     CCPR1H = hi1;
  8168  05A3  0146               	movlb	6	; select bank6
  8169  05A4  018D               	clrf	13	;volatile
  8170                           
  8171                           ;main.c: 202:     CCPR1L = lo1;
  8172  05A5  0140               	movlb	0	; select bank0
  8173  05A6  0827               	movf	LED_setColor@lo1,w
  8174  05A7  0146               	movlb	6	; select bank6
  8175  05A8  008C               	movwf	12	;volatile
  8176                           
  8177                           ;main.c: 204:     CCPR2H = hi2;
  8178  05A9  0191               	clrf	17	;volatile
  8179                           
  8180                           ;main.c: 205:     CCPR2L = lo2;
  8181  05AA  0140               	movlb	0	; select bank0
  8182  05AB  082B               	movf	LED_setColor@lo2,w
  8183  05AC  0146               	movlb	6	; select bank6
  8184  05AD  0090               	movwf	16	;volatile
  8185                           
  8186                           ;main.c: 207:     CCPR3H = hi3;
  8187  05AE  0195               	clrf	21	;volatile
  8188                           
  8189                           ;main.c: 208:     CCPR3L = lo3;
  8190  05AF  0140               	movlb	0	; select bank0
  8191  05B0  082F               	movf	LED_setColor@lo3,w
  8192  05B1  0146               	movlb	6	; select bank6
  8193  05B2  0094               	movwf	20	;volatile
  8194                           
  8195                           ;main.c: 210:     CCPR4H = hi4;
  8196  05B3  0199               	clrf	25	;volatile
  8197                           
  8198                           ;main.c: 211:     CCPR4L = lo4;
  8199  05B4  0140               	movlb	0	; select bank0
  8200  05B5  0833               	movf	LED_setColor@lo4,w
  8201  05B6  0146               	movlb	6	; select bank6
  8202  05B7  0098               	movwf	24	;volatile
  8203  05B8  0008               	return
  8204  05B9                     __end_of_LED_setColor:	
  8205                           
  8206                           	psect	text18
  8207  0E7D                     __ptext18:	
  8208 ;; *************** function _BEAT_detected *****************
  8209 ;; Defined at:
  8210 ;;		line 41 in file "beat.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;		None
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      _Bool 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2, status,0
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8228 ;;Total ram usage:        0 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:    4
  8231 ;; This function calls:
  8232 ;;		Nothing
  8233 ;; This function is called by:
  8234 ;;		_LED_task
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           
  8239                           ;psect for function _BEAT_detected
  8240  0E7D                     _BEAT_detected:	
  8241                           
  8242                           ;beat.c: 42:     if (detected) {
  8243                           
  8244                           ;incstack = 0
  8245                           ; Regs used in _BEAT_detected: [wreg+status,2+status,0]
  8246  0E7D  0140               	movlb	0	; select bank0
  8247  0E7E  0857               	movf	_detected,w
  8248  0E7F  1903               	btfsc	3,2
  8249  0E80  2E84               	goto	l3813
  8250                           
  8251                           ;beat.c: 43:         detected = 0;
  8252  0E81  01D7               	clrf	_detected
  8253                           
  8254                           ;beat.c: 44:         return 1;
  8255  0E82  3001               	movlw	1
  8256  0E83  0008               	return
  8257  0E84                     l3813:	
  8258                           
  8259                           ;beat.c: 46:     return 0;
  8260  0E84  3000               	movlw	0
  8261  0E85  0008               	return
  8262  0E86                     __end_of_BEAT_detected:	
  8263                           
  8264                           	psect	text19
  8265  03E0                     __ptext19:	
  8266 ;; *************** function _CONTROLLER_task *****************
  8267 ;; Defined at:
  8268 ;;		line 48 in file "controller.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;		None
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;  time            2   36[BANK0 ] unsigned short 
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  1    wreg      void 
  8275 ;; Registers used:
  8276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8284 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8285 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8286 ;;Total ram usage:        4 bytes
  8287 ;; Hardware stack levels used:    1
  8288 ;; Hardware stack levels required when called:   11
  8289 ;; This function calls:
  8290 ;;		_BUTTONS_isClicked
  8291 ;;		_CLOCK_getTime
  8292 ;;		_TM1650_enable
  8293 ;;		_address_dec
  8294 ;;		_address_inc
  8295 ;; This function is called by:
  8296 ;;		_main
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           
  8301                           ;psect for function _CONTROLLER_task
  8302  03E0                     _CONTROLLER_task:	
  8303                           
  8304                           ;controller.c: 49:     time_t time = CLOCK_getTime();
  8305                           
  8306                           ;incstack = 0
  8307                           ; Regs used in _CONTROLLER_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8308  03E0  318E  2643  3183   	fcall	_CLOCK_getTime
  8309  03E3  0140               	movlb	0	; select bank0
  8310  03E4  0821               	movf	?_CLOCK_getTime+1,w
  8311  03E5  00C5               	movwf	CONTROLLER_task@time+1
  8312  03E6  0820               	movf	?_CLOCK_getTime,w
  8313  03E7  00C4               	movwf	CONTROLLER_task@time
  8314                           
  8315                           ;controller.c: 51:     if (time - lastTime < 35)
  8316  03E8  0141               	movlb	1	; select bank1
  8317  03E9  0840               	movf	controller@lastTime^(0+128),w
  8318  03EA  0140               	movlb	0	; select bank0
  8319  03EB  0244               	subwf	CONTROLLER_task@time,w
  8320  03EC  00C2               	movwf	??_CONTROLLER_task
  8321  03ED  0141               	movlb	1	; select bank1
  8322  03EE  0841               	movf	(controller@lastTime+1)^(0+128),w
  8323  03EF  0140               	movlb	0	; select bank0
  8324  03F0  3B45               	subwfb	CONTROLLER_task@time+1,w
  8325  03F1  00C3               	movwf	??_CONTROLLER_task+1
  8326  03F2  3000               	movlw	0
  8327  03F3  0243               	subwf	??_CONTROLLER_task+1,w
  8328  03F4  3023               	movlw	35
  8329  03F5  1903               	skipnz
  8330  03F6  0242               	subwf	??_CONTROLLER_task,w
  8331  03F7  1C03               	btfss	3,0
  8332  03F8  0008               	return
  8333                           
  8334                           ;controller.c: 53:     lastTime = time;
  8335  03F9  0845               	movf	CONTROLLER_task@time+1,w
  8336  03FA  0141               	movlb	1	; select bank1
  8337  03FB  00C1               	movwf	(controller@lastTime+1)^(0+128)
  8338  03FC  0140               	movlb	0	; select bank0
  8339  03FD  0844               	movf	CONTROLLER_task@time,w
  8340  03FE  0141               	movlb	1	; select bank1
  8341  03FF  00C0               	movwf	controller@lastTime^(0+128)
  8342                           
  8343                           ;controller.c: 55:     if (BUTTONS_isClicked(up)) {
  8344  0400  0140               	movlb	0	; select bank0
  8345  0401  085B               	movf	_up,w
  8346  0402  3187  2787  3183   	fcall	_BUTTONS_isClicked
  8347  0405  0140               	movlb	0	; select bank0
  8348  0406  0820               	movf	?_BUTTONS_isClicked,w
  8349  0407  0421               	iorwf	?_BUTTONS_isClicked+1,w
  8350  0408  1903               	btfsc	3,2
  8351  0409  2C19               	goto	l4089
  8352                           
  8353                           ;controller.c: 56:         address_inc();
  8354  040A  318F  2764  3183   	fcall	_address_inc
  8355                           
  8356                           ;controller.c: 57:         lastActiveTime = time;
  8357  040D  0140               	movlb	0	; select bank0
  8358  040E  0845               	movf	CONTROLLER_task@time+1,w
  8359  040F  0141               	movlb	1	; select bank1
  8360  0410  00BF               	movwf	(_lastActiveTime+1)^(0+128)
  8361  0411  0140               	movlb	0	; select bank0
  8362  0412  0844               	movf	CONTROLLER_task@time,w
  8363  0413  0141               	movlb	1	; select bank1
  8364  0414  00BE               	movwf	_lastActiveTime^(0+128)
  8365                           
  8366                           ;controller.c: 58:         TM1650_enable(1);
  8367  0415  3001               	movlw	1
  8368  0416  318F  2725         	fcall	_TM1650_enable
  8369                           
  8370                           ;controller.c: 59:     } else if (BUTTONS_isClicked(down)) {
  8371  0418  0008               	return
  8372  0419                     l4089:	
  8373  0419  085A               	movf	_down,w
  8374  041A  3187  2787  3183   	fcall	_BUTTONS_isClicked
  8375  041D  0140               	movlb	0	; select bank0
  8376  041E  0820               	movf	?_BUTTONS_isClicked,w
  8377  041F  0421               	iorwf	?_BUTTONS_isClicked+1,w
  8378  0420  1903               	btfsc	3,2
  8379  0421  2C31               	goto	l4097
  8380                           
  8381                           ;controller.c: 60:         address_dec();
  8382  0422  318F  273A  3183   	fcall	_address_dec
  8383                           
  8384                           ;controller.c: 61:         lastActiveTime = time;
  8385  0425  0140               	movlb	0	; select bank0
  8386  0426  0845               	movf	CONTROLLER_task@time+1,w
  8387  0427  0141               	movlb	1	; select bank1
  8388  0428  00BF               	movwf	(_lastActiveTime+1)^(0+128)
  8389  0429  0140               	movlb	0	; select bank0
  8390  042A  0844               	movf	CONTROLLER_task@time,w
  8391  042B  0141               	movlb	1	; select bank1
  8392  042C  00BE               	movwf	_lastActiveTime^(0+128)
  8393                           
  8394                           ;controller.c: 62:         TM1650_enable(1);
  8395  042D  3001               	movlw	1
  8396  042E  318F  2725         	fcall	_TM1650_enable
  8397                           
  8398                           ;controller.c: 63:     } else {
  8399  0430  0008               	return
  8400  0431                     l4097:	
  8401                           
  8402                           ;controller.c: 64:         if (CLOCK_getTime() - lastActiveTime >= 5000) {
  8403  0431  318E  2643  3183   	fcall	_CLOCK_getTime
  8404  0434  0141               	movlb	1	; select bank1
  8405  0435  083E               	movf	_lastActiveTime^(0+128),w
  8406  0436  0140               	movlb	0	; select bank0
  8407  0437  0220               	subwf	?_CLOCK_getTime,w
  8408  0438  00C2               	movwf	??_CONTROLLER_task
  8409  0439  0141               	movlb	1	; select bank1
  8410  043A  083F               	movf	(_lastActiveTime+1)^(0+128),w
  8411  043B  0140               	movlb	0	; select bank0
  8412  043C  3B21               	subwfb	?_CLOCK_getTime+1,w
  8413  043D  00C3               	movwf	??_CONTROLLER_task+1
  8414  043E  3013               	movlw	19
  8415  043F  0243               	subwf	??_CONTROLLER_task+1,w
  8416  0440  3088               	movlw	136
  8417  0441  1903               	skipnz
  8418  0442  0242               	subwf	??_CONTROLLER_task,w
  8419  0443  1C03               	skipc
  8420  0444  0008               	return
  8421                           
  8422                           ;controller.c: 65:             TM1650_enable(0);
  8423  0445  3000               	movlw	0
  8424  0446  318F  2725  3183   	fcall	_TM1650_enable
  8425                           
  8426                           ;controller.c: 66:             lastActiveTime = CLOCK_getTime() - 5001;
  8427  0449  318E  2643         	fcall	_CLOCK_getTime
  8428  044B  0140               	movlb	0	; select bank0
  8429  044C  0820               	movf	?_CLOCK_getTime,w
  8430  044D  3E77               	addlw	119
  8431  044E  0141               	movlb	1	; select bank1
  8432  044F  00BE               	movwf	_lastActiveTime^(0+128)
  8433  0450  30EC               	movlw	236
  8434  0451  0140               	movlb	0	; select bank0
  8435  0452  3D21               	addwfc	?_CLOCK_getTime+1,w
  8436  0453  0141               	movlb	1	; select bank1
  8437  0454  00BF               	movwf	(_lastActiveTime+1)^(0+128)
  8438  0455  0008               	return
  8439  0456                     __end_of_CONTROLLER_task:	
  8440                           
  8441                           	psect	text20
  8442  0F64                     __ptext20:	
  8443 ;; *************** function _address_inc *****************
  8444 ;; Defined at:
  8445 ;;		line 19 in file "controller.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      void 
  8452 ;; Registers used:
  8453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:   10
  8466 ;; This function calls:
  8467 ;;		_TM1650_fastPrintNum
  8468 ;; This function is called by:
  8469 ;;		_CONTROLLER_task
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           
  8474                           ;psect for function _address_inc
  8475  0F64                     _address_inc:	
  8476                           
  8477                           ;controller.c: 21:     if(address == 512) {
  8478                           
  8479                           ;incstack = 0
  8480                           ; Regs used in _address_inc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8481  0F64  3002               	movlw	2
  8482  0F65  0140               	movlb	0	; select bank0
  8483  0F66  066D               	xorwf	_address+1,w
  8484  0F67  046C               	iorwf	_address,w
  8485  0F68  1D03               	btfss	3,2
  8486  0F69  2F6F               	goto	l3893
  8487                           
  8488                           ;controller.c: 22:         address = 1;
  8489  0F6A  3001               	movlw	1
  8490  0F6B  00EC               	movwf	_address
  8491  0F6C  3000               	movlw	0
  8492  0F6D  00ED               	movwf	_address+1
  8493                           
  8494                           ;controller.c: 23:     } else {
  8495  0F6E  2F73               	goto	l3895
  8496  0F6F                     l3893:	
  8497                           
  8498                           ;controller.c: 24:         address++;
  8499  0F6F  3001               	movlw	1
  8500  0F70  07EC               	addwf	_address,f
  8501  0F71  3000               	movlw	0
  8502  0F72  3DED               	addwfc	_address+1,f
  8503  0F73                     l3895:	
  8504                           
  8505                           ;controller.c: 28:     TM1650_fastPrintNum(address);
  8506  0F73  086D               	movf	_address+1,w
  8507  0F74  00BC               	movwf	TM1650_fastPrintNum@num+1
  8508  0F75  086C               	movf	_address,w
  8509  0F76  00BB               	movwf	TM1650_fastPrintNum@num
  8510  0F77  3183  2366         	fcall	_TM1650_fastPrintNum
  8511  0F79  0008               	return
  8512  0F7A                     __end_of_address_inc:	
  8513                           
  8514                           	psect	text21
  8515  0F3A                     __ptext21:	
  8516 ;; *************** function _address_dec *****************
  8517 ;; Defined at:
  8518 ;;		line 34 in file "controller.c"
  8519 ;; Parameters:    Size  Location     Type
  8520 ;;		None
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;		None
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8536 ;;Total ram usage:        0 bytes
  8537 ;; Hardware stack levels used:    1
  8538 ;; Hardware stack levels required when called:   10
  8539 ;; This function calls:
  8540 ;;		_TM1650_fastPrintNum
  8541 ;; This function is called by:
  8542 ;;		_CONTROLLER_task
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           
  8547                           ;psect for function _address_dec
  8548  0F3A                     _address_dec:	
  8549                           
  8550                           ;controller.c: 36:     if(address == 1) {
  8551                           
  8552                           ;incstack = 0
  8553                           ; Regs used in _address_dec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8554  0F3A  0140               	movlb	0	; select bank0
  8555  0F3B  036C               	decf	_address,w
  8556  0F3C  046D               	iorwf	_address+1,w
  8557  0F3D  1D03               	btfss	3,2
  8558  0F3E  2F44               	goto	l3901
  8559                           
  8560                           ;controller.c: 37:         address = 512;
  8561  0F3F  3000               	movlw	0
  8562  0F40  00EC               	movwf	_address
  8563  0F41  3002               	movlw	2
  8564  0F42  00ED               	movwf	_address+1
  8565                           
  8566                           ;controller.c: 38:     } else {
  8567  0F43  2F48               	goto	l3903
  8568  0F44                     l3901:	
  8569                           
  8570                           ;controller.c: 39:         address--;
  8571  0F44  3001               	movlw	1
  8572  0F45  02EC               	subwf	_address,f
  8573  0F46  3000               	movlw	0
  8574  0F47  3BED               	subwfb	_address+1,f
  8575  0F48                     l3903:	
  8576                           
  8577                           ;controller.c: 43:     TM1650_fastPrintNum(address);
  8578  0F48  086D               	movf	_address+1,w
  8579  0F49  00BC               	movwf	TM1650_fastPrintNum@num+1
  8580  0F4A  086C               	movf	_address,w
  8581  0F4B  00BB               	movwf	TM1650_fastPrintNum@num
  8582  0F4C  3183  2366         	fcall	_TM1650_fastPrintNum
  8583  0F4E  0008               	return
  8584  0F4F                     __end_of_address_dec:	
  8585                           
  8586                           	psect	text22
  8587  0F25                     __ptext22:	
  8588 ;; *************** function _TM1650_enable *****************
  8589 ;; Defined at:
  8590 ;;		line 56 in file "tm1650.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  enable          1    wreg     _Bool 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  enable          1   20[BANK0 ] _Bool 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  1    wreg      void 
  8597 ;; Registers used:
  8598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8607 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8608 ;;Total ram usage:        1 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    8
  8611 ;; This function calls:
  8612 ;;		_writeData
  8613 ;; This function is called by:
  8614 ;;		_TM1650_init
  8615 ;;		_CONTROLLER_task
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           
  8620                           ;psect for function _TM1650_enable
  8621  0F25                     _TM1650_enable:	
  8622                           
  8623                           ;incstack = 0
  8624                           ; Regs used in _TM1650_enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8625                           ;TM1650_enable@enable stored from wreg
  8626  0F25  0140               	movlb	0	; select bank0
  8627  0F26  00B4               	movwf	TM1650_enable@enable
  8628                           
  8629                           ;tm1650.c: 57:     if(enable) {
  8630  0F27  0834               	movf	TM1650_enable@enable,w
  8631  0F28  1903               	btfsc	3,2
  8632  0F29  2F33               	goto	l3853
  8633                           
  8634                           ;tm1650.c: 58:         writeData(0x24, 1);
  8635  0F2A  01AE               	clrf	writeData@data
  8636  0F2B  0AAE               	incf	writeData@data,f
  8637  0F2C  3024               	movlw	36
  8638  0F2D  318F  27E3         	fcall	_writeData
  8639                           
  8640                           ;tm1650.c: 59:         isOn = 1;
  8641  0F2F  0140               	movlb	0	; select bank0
  8642  0F30  01DC               	clrf	_isOn
  8643  0F31  0ADC               	incf	_isOn,f
  8644                           
  8645                           ;tm1650.c: 60:     } else {
  8646  0F32  0008               	return
  8647  0F33                     l3853:	
  8648                           
  8649                           ;tm1650.c: 61:         writeData(0x24, 0);
  8650  0F33  01AE               	clrf	writeData@data
  8651  0F34  3024               	movlw	36
  8652  0F35  318F  27E3         	fcall	_writeData
  8653                           
  8654                           ;tm1650.c: 62:         isOn = 0;
  8655  0F37  0140               	movlb	0	; select bank0
  8656  0F38  01DC               	clrf	_isOn
  8657  0F39  0008               	return
  8658  0F3A                     __end_of_TM1650_enable:	
  8659                           
  8660                           	psect	text23
  8661  0787                     __ptext23:	
  8662 ;; *************** function _BUTTONS_isClicked *****************
  8663 ;; Defined at:
  8664 ;;		line 71 in file "buttons.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;  button          1    wreg     PTR struct .
  8667 ;;		 -> buttons(32), NULL(0), 
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;  button          1    3[BANK0 ] PTR struct .
  8670 ;;		 -> buttons(32), NULL(0), 
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  2    0[BANK0 ] int 
  8673 ;; Registers used:
  8674 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8680 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8683 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8684 ;;Total ram usage:        4 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:    4
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		_CONTROLLER_task
  8691 ;; This function uses a non-reentrant model
  8692 ;;
  8693                           
  8694                           
  8695                           ;psect for function _BUTTONS_isClicked
  8696  0787                     _BUTTONS_isClicked:	
  8697                           
  8698                           ;incstack = 0
  8699                           ; Regs used in _BUTTONS_isClicked: [wreg+fsr1l+fsr1h+status,2+status,0]
  8700                           ;BUTTONS_isClicked@button stored from wreg
  8701  0787  0140               	movlb	0	; select bank0
  8702  0788  00A3               	movwf	BUTTONS_isClicked@button
  8703                           
  8704                           ;buttons.c: 72:     if (button->event == EVENT_PRESSED) {
  8705  0789  0823               	movf	BUTTONS_isClicked@button,w
  8706  078A  3E05               	addlw	5
  8707  078B  0086               	movwf	6
  8708  078C  3001               	movlw	1	; select bank2/3
  8709  078D  0087               	movwf	7
  8710  078E  0301               	decf	1,w
  8711  078F  1D03               	btfss	3,2
  8712  0790  2F9C               	goto	l3879
  8713                           
  8714                           ;buttons.c: 73:         button->event = EVENT_IDLE;
  8715  0791  0823               	movf	BUTTONS_isClicked@button,w
  8716  0792  3E05               	addlw	5
  8717  0793  0086               	movwf	6
  8718  0794  3001               	movlw	1	; select bank2/3
  8719  0795  0087               	movwf	7
  8720  0796  0181               	clrf	1
  8721  0797                     l3873:	
  8722                           
  8723                           ;buttons.c: 74:         return 1;
  8724  0797  3001               	movlw	1
  8725  0798  00A0               	movwf	?_BUTTONS_isClicked
  8726  0799  3000               	movlw	0
  8727  079A  00A1               	movwf	?_BUTTONS_isClicked+1
  8728  079B  0008               	return
  8729  079C                     l3879:	
  8730  079C  0823               	movf	BUTTONS_isClicked@button,w
  8731  079D  3E05               	addlw	5
  8732  079E  0086               	movwf	6
  8733  079F  3001               	movlw	1	; select bank2/3
  8734  07A0  0087               	movwf	7
  8735  07A1  3002               	movlw	2
  8736  07A2  0601               	xorwf	1,w
  8737  07A3  1903               	btfsc	3,2
  8738  07A4  2F97               	goto	l3873
  8739                           
  8740                           ;buttons.c: 78:     return 0;
  8741  07A5  01A0               	clrf	?_BUTTONS_isClicked
  8742  07A6  01A1               	clrf	?_BUTTONS_isClicked+1
  8743  07A7  0008               	return
  8744  07A8                     __end_of_BUTTONS_isClicked:	
  8745                           
  8746                           	psect	text24
  8747  0E51                     __ptext24:	
  8748 ;; *************** function _CONTROLLER_init *****************
  8749 ;; Defined at:
  8750 ;;		line 12 in file "controller.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;		None
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1    wreg      void 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8768 ;;Total ram usage:        0 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; Hardware stack levels required when called:   10
  8771 ;; This function calls:
  8772 ;;		_TM1650_fastPrintNum
  8773 ;; This function is called by:
  8774 ;;		_main
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778                           
  8779                           ;psect for function _CONTROLLER_init
  8780  0E51                     _CONTROLLER_init:	
  8781                           
  8782                           ;controller.c: 13:     TM1650_fastPrintNum(address);
  8783                           
  8784                           ;incstack = 0
  8785                           ; Regs used in _CONTROLLER_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8786  0E51  0140               	movlb	0	; select bank0
  8787  0E52  086D               	movf	_address+1,w
  8788  0E53  00BC               	movwf	TM1650_fastPrintNum@num+1
  8789  0E54  086C               	movf	_address,w
  8790  0E55  00BB               	movwf	TM1650_fastPrintNum@num
  8791  0E56  3183  2366         	fcall	_TM1650_fastPrintNum
  8792  0E58  0008               	return
  8793  0E59                     __end_of_CONTROLLER_init:	
  8794                           
  8795                           	psect	text25
  8796  0366                     __ptext25:	
  8797 ;; *************** function _TM1650_fastPrintNum *****************
  8798 ;; Defined at:
  8799 ;;		line 36 in file "tm1650.c"
  8800 ;; Parameters:    Size  Location     Type
  8801 ;;  num             2   27[BANK0 ] unsigned short 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  numWrite        2   30[BANK0 ] int 
  8804 ;;  i               2   32[BANK0 ] int 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      void 
  8807 ;; Registers used:
  8808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8809 ;; Tracked objects:
  8810 ;;		On entry : 0/0
  8811 ;;		On exit  : 0/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8814 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8815 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8817 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8818 ;;Total ram usage:        7 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    9
  8821 ;; This function calls:
  8822 ;;		_TM1650_setDigit
  8823 ;;		___lwdiv
  8824 ;;		___lwmod
  8825 ;; This function is called by:
  8826 ;;		_CONTROLLER_init
  8827 ;;		_address_inc
  8828 ;;		_address_dec
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           
  8833                           ;psect for function _TM1650_fastPrintNum
  8834  0366                     _TM1650_fastPrintNum:	
  8835                           
  8836                           ;tm1650.c: 37:     if(num > 9999) {
  8837                           
  8838                           ;incstack = 0
  8839                           ; Regs used in _TM1650_fastPrintNum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8840  0366  3027               	movlw	39
  8841  0367  0140               	movlb	0	; select bank0
  8842  0368  023C               	subwf	TM1650_fastPrintNum@num+1,w
  8843  0369  3010               	movlw	16
  8844  036A  1903               	skipnz
  8845  036B  023B               	subwf	TM1650_fastPrintNum@num,w
  8846  036C  1C03               	skipc
  8847  036D  2B9D               	goto	l3651
  8848                           
  8849                           ;tm1650.c: 38:         TM1650_setDigit(0, 'E', 0);
  8850  036E  3045               	movlw	69
  8851  036F  00BD               	movwf	??_TM1650_fastPrintNum
  8852  0370  083D               	movf	??_TM1650_fastPrintNum,w
  8853  0371  00B4               	movwf	TM1650_setDigit@data
  8854  0372  3000               	movlw	0
  8855  0373  00B5               	movwf	TM1650_setDigit@dp
  8856  0374  00B6               	movwf	TM1650_setDigit@dp+1
  8857  0375  3000               	movlw	0
  8858  0376  318F  27AA  3183   	fcall	_TM1650_setDigit
  8859                           
  8860                           ;tm1650.c: 39:         TM1650_setDigit(1, 'E', 0);
  8861  0379  3045               	movlw	69
  8862  037A  0140               	movlb	0	; select bank0
  8863  037B  00BD               	movwf	??_TM1650_fastPrintNum
  8864  037C  083D               	movf	??_TM1650_fastPrintNum,w
  8865  037D  00B4               	movwf	TM1650_setDigit@data
  8866  037E  3000               	movlw	0
  8867  037F  00B5               	movwf	TM1650_setDigit@dp
  8868  0380  00B6               	movwf	TM1650_setDigit@dp+1
  8869  0381  3001               	movlw	1
  8870  0382  318F  27AA  3183   	fcall	_TM1650_setDigit
  8871                           
  8872                           ;tm1650.c: 40:         TM1650_setDigit(2, 'E', 0);
  8873  0385  3045               	movlw	69
  8874  0386  0140               	movlb	0	; select bank0
  8875  0387  00BD               	movwf	??_TM1650_fastPrintNum
  8876  0388  083D               	movf	??_TM1650_fastPrintNum,w
  8877  0389  00B4               	movwf	TM1650_setDigit@data
  8878  038A  3000               	movlw	0
  8879  038B  00B5               	movwf	TM1650_setDigit@dp
  8880  038C  00B6               	movwf	TM1650_setDigit@dp+1
  8881  038D  3002               	movlw	2
  8882  038E  318F  27AA  3183   	fcall	_TM1650_setDigit
  8883                           
  8884                           ;tm1650.c: 41:         TM1650_setDigit(3, 'E', 0);
  8885  0391  3045               	movlw	69
  8886  0392  0140               	movlb	0	; select bank0
  8887  0393  00BD               	movwf	??_TM1650_fastPrintNum
  8888  0394  083D               	movf	??_TM1650_fastPrintNum,w
  8889  0395  00B4               	movwf	TM1650_setDigit@data
  8890  0396  3000               	movlw	0
  8891  0397  00B5               	movwf	TM1650_setDigit@dp
  8892  0398  00B6               	movwf	TM1650_setDigit@dp+1
  8893  0399  3003               	movlw	3
  8894  039A  318F  27AA         	fcall	_TM1650_setDigit
  8895                           
  8896                           ;tm1650.c: 42:     } else {
  8897  039C  0008               	return
  8898  039D                     l3651:	
  8899                           
  8900                           ;tm1650.c: 43:         int i=0;
  8901  039D  01C0               	clrf	TM1650_fastPrintNum@i
  8902  039E  01C1               	clrf	TM1650_fastPrintNum@i+1
  8903                           
  8904                           ;tm1650.c: 44:         for(i=0; i<4; i++) {
  8905  039F  01C0               	clrf	TM1650_fastPrintNum@i
  8906  03A0  01C1               	clrf	TM1650_fastPrintNum@i+1
  8907  03A1                     l3657:	
  8908                           
  8909                           ;tm1650.c: 45:             int numWrite = num %10;
  8910  03A1  300A               	movlw	10
  8911  03A2  0140               	movlb	0	; select bank0
  8912  03A3  00A0               	movwf	___lwmod@divisor
  8913  03A4  3000               	movlw	0
  8914  03A5  00A1               	movwf	___lwmod@divisor+1
  8915  03A6  083C               	movf	TM1650_fastPrintNum@num+1,w
  8916  03A7  00A3               	movwf	___lwmod@dividend+1
  8917  03A8  083B               	movf	TM1650_fastPrintNum@num,w
  8918  03A9  00A2               	movwf	___lwmod@dividend
  8919  03AA  3186  26C0  3183   	fcall	___lwmod
  8920  03AD  0140               	movlb	0	; select bank0
  8921  03AE  0821               	movf	?___lwmod+1,w
  8922  03AF  00BF               	movwf	TM1650_fastPrintNum@numWrite+1
  8923  03B0  0820               	movf	?___lwmod,w
  8924  03B1  00BE               	movwf	TM1650_fastPrintNum@numWrite
  8925                           
  8926                           ;tm1650.c: 46:             TM1650_setDigit(3-i, numWrite+48, 0);
  8927  03B2  083E               	movf	TM1650_fastPrintNum@numWrite,w
  8928  03B3  3E30               	addlw	48
  8929  03B4  00BD               	movwf	??_TM1650_fastPrintNum
  8930  03B5  083D               	movf	??_TM1650_fastPrintNum,w
  8931  03B6  00B4               	movwf	TM1650_setDigit@data
  8932  03B7  3000               	movlw	0
  8933  03B8  00B5               	movwf	TM1650_setDigit@dp
  8934  03B9  00B6               	movwf	TM1650_setDigit@dp+1
  8935  03BA  0840               	movf	TM1650_fastPrintNum@i,w
  8936  03BB  3C03               	sublw	3
  8937  03BC  318F  27AA  3183   	fcall	_TM1650_setDigit
  8938                           
  8939                           ;tm1650.c: 47:             num = num/10;
  8940  03BF  300A               	movlw	10
  8941  03C0  0140               	movlb	0	; select bank0
  8942  03C1  00A0               	movwf	___lwdiv@divisor
  8943  03C2  3000               	movlw	0
  8944  03C3  00A1               	movwf	___lwdiv@divisor+1
  8945  03C4  083C               	movf	TM1650_fastPrintNum@num+1,w
  8946  03C5  00A3               	movwf	___lwdiv@dividend+1
  8947  03C6  083B               	movf	TM1650_fastPrintNum@num,w
  8948  03C7  00A2               	movwf	___lwdiv@dividend
  8949  03C8  3186  262C  3183   	fcall	___lwdiv
  8950  03CB  0140               	movlb	0	; select bank0
  8951  03CC  0821               	movf	?___lwdiv+1,w
  8952  03CD  00BC               	movwf	TM1650_fastPrintNum@num+1
  8953  03CE  0820               	movf	?___lwdiv,w
  8954  03CF  00BB               	movwf	TM1650_fastPrintNum@num
  8955                           
  8956                           ;tm1650.c: 48:         }
  8957  03D0  3001               	movlw	1
  8958  03D1  07C0               	addwf	TM1650_fastPrintNum@i,f
  8959  03D2  3000               	movlw	0
  8960  03D3  3DC1               	addwfc	TM1650_fastPrintNum@i+1,f
  8961  03D4  0841               	movf	TM1650_fastPrintNum@i+1,w
  8962  03D5  3A80               	xorlw	128
  8963  03D6  00BD               	movwf	??_TM1650_fastPrintNum
  8964  03D7  3080               	movlw	128
  8965  03D8  023D               	subwf	??_TM1650_fastPrintNum,w
  8966  03D9  1D03               	skipz
  8967  03DA  2BDD               	goto	u2335
  8968  03DB  3004               	movlw	4
  8969  03DC  0240               	subwf	TM1650_fastPrintNum@i,w
  8970  03DD                     u2335:	
  8971  03DD  1803               	btfsc	3,0
  8972  03DE  0008               	return
  8973  03DF  2BA1               	goto	l3657
  8974  03E0                     __end_of_TM1650_fastPrintNum:	
  8975                           
  8976                           	psect	text26
  8977  06C0                     __ptext26:	
  8978 ;; *************** function ___lwmod *****************
  8979 ;; Defined at:
  8980 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  divisor         2    0[BANK0 ] unsigned int 
  8983 ;;  dividend        2    2[BANK0 ] unsigned int 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  counter         1    5[BANK0 ] unsigned char 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  2    0[BANK0 ] unsigned int 
  8988 ;; Registers used:
  8989 ;;		wreg, status,2, status,0
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8997 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8998 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8999 ;;Total ram usage:        6 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    4
  9002 ;; This function calls:
  9003 ;;		Nothing
  9004 ;; This function is called by:
  9005 ;;		_TM1650_fastPrintNum
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           
  9010                           ;psect for function ___lwmod
  9011  06C0                     ___lwmod:	
  9012                           
  9013                           ;incstack = 0
  9014                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9015  06C0  0140               	movlb	0	; select bank0
  9016  06C1  0820               	movf	___lwmod@divisor,w
  9017  06C2  0421               	iorwf	___lwmod@divisor+1,w
  9018  06C3  1903               	btfsc	3,2
  9019  06C4  2EE8               	goto	l3629
  9020  06C5  01A5               	clrf	___lwmod@counter
  9021  06C6  0AA5               	incf	___lwmod@counter,f
  9022  06C7                     l3619:	
  9023  06C7  1BA1               	btfsc	___lwmod@divisor+1,7
  9024  06C8  2ED3               	goto	l3621
  9025  06C9  3001               	movlw	1
  9026  06CA                     u2275:	
  9027  06CA  35A0               	lslf	___lwmod@divisor,f
  9028  06CB  0DA1               	rlf	___lwmod@divisor+1,f
  9029  06CC  0B89               	decfsz	9,f
  9030  06CD  2ECA               	goto	u2275
  9031  06CE  3001               	movlw	1
  9032  06CF  00A4               	movwf	??___lwmod
  9033  06D0  0824               	movf	??___lwmod,w
  9034  06D1  07A5               	addwf	___lwmod@counter,f
  9035  06D2  2EC7               	goto	l3619
  9036  06D3                     l3621:	
  9037  06D3  0821               	movf	___lwmod@divisor+1,w
  9038  06D4  0223               	subwf	___lwmod@dividend+1,w
  9039  06D5  1D03               	skipz
  9040  06D6  2ED9               	goto	u2295
  9041  06D7  0820               	movf	___lwmod@divisor,w
  9042  06D8  0222               	subwf	___lwmod@dividend,w
  9043  06D9                     u2295:	
  9044  06D9  1C03               	skipc
  9045  06DA  2EDF               	goto	l3625
  9046  06DB  0820               	movf	___lwmod@divisor,w
  9047  06DC  02A2               	subwf	___lwmod@dividend,f
  9048  06DD  0821               	movf	___lwmod@divisor+1,w
  9049  06DE  3BA3               	subwfb	___lwmod@dividend+1,f
  9050  06DF                     l3625:	
  9051  06DF  3001               	movlw	1
  9052  06E0                     u2305:	
  9053  06E0  36A1               	lsrf	___lwmod@divisor+1,f
  9054  06E1  0CA0               	rrf	___lwmod@divisor,f
  9055  06E2  0B89               	decfsz	9,f
  9056  06E3  2EE0               	goto	u2305
  9057  06E4  3001               	movlw	1
  9058  06E5  02A5               	subwf	___lwmod@counter,f
  9059  06E6  1D03               	btfss	3,2
  9060  06E7  2ED3               	goto	l3621
  9061  06E8                     l3629:	
  9062  06E8  0823               	movf	___lwmod@dividend+1,w
  9063  06E9  00A1               	movwf	?___lwmod+1
  9064  06EA  0822               	movf	___lwmod@dividend,w
  9065  06EB  00A0               	movwf	?___lwmod
  9066  06EC  0008               	return
  9067  06ED                     __end_of___lwmod:	
  9068                           
  9069                           	psect	text27
  9070  0FAA                     __ptext27:	
  9071 ;; *************** function _TM1650_setDigit *****************
  9072 ;; Defined at:
  9073 ;;		line 24 in file "tm1650.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  digit           1    wreg     unsigned char 
  9076 ;;  data            1   20[BANK0 ] unsigned char 
  9077 ;;  dp              2   21[BANK0 ] int 
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  digit           1   26[BANK0 ] unsigned char 
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9089 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9091 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9092 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9093 ;;Total ram usage:        7 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; Hardware stack levels required when called:    8
  9096 ;; This function calls:
  9097 ;;		_writeData
  9098 ;; This function is called by:
  9099 ;;		_TM1650_fastPrintNum
  9100 ;;		_Blink2
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           
  9105                           ;psect for function _TM1650_setDigit
  9106  0FAA                     _TM1650_setDigit:	
  9107                           
  9108                           ;incstack = 0
  9109                           ; Regs used in _TM1650_setDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9110                           ;TM1650_setDigit@digit stored from wreg
  9111  0FAA  0140               	movlb	0	; select bank0
  9112  0FAB  00BA               	movwf	TM1650_setDigit@digit
  9113                           
  9114                           ;tm1650.c: 25:     writeData(0x34+digit, (charTable[data-32] | dp <<7));
  9115  0FAC  0834               	movf	TM1650_setDigit@data,w
  9116  0FAD  3E36               	addlw	low ((_charTable+65504)| (0+32768))
  9117  0FAE  0084               	movwf	4
  9118  0FAF  3084               	movlw	high ((_charTable+65504)| (0+32768))
  9119  0FB0  1803               	skipnc
  9120  0FB1  3E01               	addlw	1
  9121  0FB2  0085               	movwf	5
  9122  0FB3  0800               	movf	0,w	;code access
  9123  0FB4  00B7               	movwf	??_TM1650_setDigit
  9124  0FB5  0835               	movf	TM1650_setDigit@dp,w
  9125  0FB6  00B8               	movwf	??_TM1650_setDigit+1
  9126  0FB7  3006               	movlw	6
  9127  0FB8                     u2185:	
  9128  0FB8  35B8               	lslf	??_TM1650_setDigit+1,f
  9129  0FB9  3EFF               	addlw	-1
  9130  0FBA  1D03               	skipz
  9131  0FBB  2FB8               	goto	u2185
  9132  0FBC  3538               	lslf	??_TM1650_setDigit+1,w
  9133  0FBD  0437               	iorwf	??_TM1650_setDigit,w
  9134  0FBE  00B9               	movwf	??_TM1650_setDigit+2
  9135  0FBF  0839               	movf	??_TM1650_setDigit+2,w
  9136  0FC0  00AE               	movwf	writeData@data
  9137  0FC1  083A               	movf	TM1650_setDigit@digit,w
  9138  0FC2  3E34               	addlw	52
  9139  0FC3  318F  27E3         	fcall	_writeData
  9140  0FC5  0008               	return
  9141  0FC6                     __end_of_TM1650_setDigit:	
  9142                           
  9143                           	psect	text28
  9144  0FE3                     __ptext28:	
  9145 ;; *************** function _writeData *****************
  9146 ;; Defined at:
  9147 ;;		line 18 in file "tm1650.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  address         1    wreg     unsigned char 
  9150 ;;  data            1   14[BANK0 ] unsigned char 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;  address         1   18[BANK0 ] unsigned char 
  9153 ;;  status          1   19[BANK0 ] volatile enum E10866
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9163 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9165 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9166 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9167 ;;Total ram usage:        6 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    7
  9170 ;; This function calls:
  9171 ;;		_I2C1_MasterWrite
  9172 ;; This function is called by:
  9173 ;;		_TM1650_setDigit
  9174 ;;		_TM1650_enable
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           
  9179                           ;psect for function _writeData
  9180  0FE3                     _writeData:	
  9181                           
  9182                           ;incstack = 0
  9183                           ; Regs used in _writeData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9184                           ;writeData@address stored from wreg
  9185  0FE3  0140               	movlb	0	; select bank0
  9186  0FE4  00B2               	movwf	writeData@address
  9187                           
  9188                           ;tm1650.c: 19:     volatile I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  9189  0FE5  3002               	movlw	2
  9190  0FE6  00AF               	movwf	??_writeData
  9191  0FE7  082F               	movf	??_writeData,w
  9192  0FE8  00B3               	movwf	writeData@status	;volatile
  9193                           
  9194                           ;tm1650.c: 20:     I2C1_MasterWrite(&data, 1, address, &status);
  9195  0FE9  01A7               	clrf	I2C1_MasterWrite@length
  9196  0FEA  0AA7               	incf	I2C1_MasterWrite@length,f
  9197  0FEB  0832               	movf	writeData@address,w
  9198  0FEC  00AF               	movwf	??_writeData
  9199  0FED  01B0               	clrf	??_writeData+1
  9200  0FEE  082F               	movf	??_writeData,w
  9201  0FEF  00A8               	movwf	I2C1_MasterWrite@address
  9202  0FF0  0830               	movf	??_writeData+1,w
  9203  0FF1  00A9               	movwf	I2C1_MasterWrite@address+1
  9204  0FF2  3033               	movlw	(low (writeData@status| 0))& (0+255)
  9205  0FF3  00B1               	movwf	??_writeData+2
  9206  0FF4  0831               	movf	??_writeData+2,w
  9207  0FF5  00AA               	movwf	I2C1_MasterWrite@pflag
  9208  0FF6  302E               	movlw	(low (writeData@data| 0))& (0+255)
  9209  0FF7  3187  2715  318F   	fcall	_I2C1_MasterWrite
  9210  0FFA                     l3581:	
  9211                           ;tm1650.c: 21:     while( status == I2C1_MESSAGE_PENDING );
  9212                           
  9213  0FFA  3002               	movlw	2
  9214  0FFB  0140               	movlb	0	; select bank0
  9215  0FFC  0633               	xorwf	writeData@status,w	;volatile
  9216  0FFD  1D03               	btfss	3,2
  9217  0FFE  0008               	return
  9218  0FFF  2FFA               	goto	l3581
  9219  1000                     __end_of_writeData:	
  9220                           
  9221                           	psect	text29
  9222  0715                     __ptext29:	
  9223 ;; *************** function _I2C1_MasterWrite *****************
  9224 ;; Defined at:
  9225 ;;		line 600 in file "mcc_generated_files/i2c1.c"
  9226 ;; Parameters:    Size  Location     Type
  9227 ;;  pdata           1    wreg     PTR unsigned char 
  9228 ;;		 -> writeData@data(1), 
  9229 ;;  length          1    7[BANK0 ] unsigned char 
  9230 ;;  address         2    8[BANK0 ] unsigned short 
  9231 ;;  pflag           1   10[BANK0 ] PTR enum E10866
  9232 ;;		 -> writeData@status(1), 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  9235 ;;		 -> writeData@data(1), 
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1    wreg      void 
  9238 ;; Registers used:
  9239 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9245 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9247 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9248 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9249 ;;Total ram usage:        7 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    6
  9252 ;; This function calls:
  9253 ;;		_I2C1_MasterTRBInsert
  9254 ;;		_I2C1_MasterWriteTRBBuild
  9255 ;; This function is called by:
  9256 ;;		_writeData
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           
  9261                           ;psect for function _I2C1_MasterWrite
  9262  0715                     _I2C1_MasterWrite:	
  9263                           
  9264                           ;incstack = 0
  9265                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9266                           ;I2C1_MasterWrite@pdata stored from wreg
  9267  0715  0140               	movlb	0	; select bank0
  9268  0716  00AD               	movwf	I2C1_MasterWrite@pdata
  9269                           
  9270                           ;mcc_generated_files/i2c1.c: 601:                                 uint8_t *pdata,;mcc_ge
      +                          nerated_files/i2c1.c: 602:                                 uint8_t length,;mcc_generated
      +                          _files/i2c1.c: 603:                                 uint16_t address,;mcc_generated_file
      +                          s/i2c1.c: 604:                                 I2C1_MESSAGE_STATUS *pflag);mcc_generated
      +                          _files/i2c1.c: 605: {;mcc_generated_files/i2c1.c: 606:     static I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK trBlock;;mcc_generated_files/i2c1.c: 609:     if (i2c1_object.trStatus.s.full !
      +                          = 1)
  9271  0717  1848               	btfsc	_i2c1_object+2,0
  9272  0718  2F36               	goto	l3575
  9273                           
  9274                           ;mcc_generated_files/i2c1.c: 610:     {;mcc_generated_files/i2c1.c: 611:         I2C1_Ma
      +                          sterWriteTRBBuild(&trBlock, pdata, length, address);
  9275  0719  082D               	movf	I2C1_MasterWrite@pdata,w
  9276  071A  00AB               	movwf	??_I2C1_MasterWrite
  9277  071B  082B               	movf	??_I2C1_MasterWrite,w
  9278  071C  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  9279  071D  0827               	movf	I2C1_MasterWrite@length,w
  9280  071E  00AC               	movwf	??_I2C1_MasterWrite+1
  9281  071F  082C               	movf	??_I2C1_MasterWrite+1,w
  9282  0720  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  9283  0721  0829               	movf	I2C1_MasterWrite@address+1,w
  9284  0722  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  9285  0723  0828               	movf	I2C1_MasterWrite@address,w
  9286  0724  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  9287  0725  30CA               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  9288  0726  3187  27A8  3187   	fcall	_I2C1_MasterWriteTRBBuild
  9289                           
  9290                           ;mcc_generated_files/i2c1.c: 612:         I2C1_MasterTRBInsert(1, &trBlock, pflag);
  9291  0729  30CA               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  9292  072A  0140               	movlb	0	; select bank0
  9293  072B  00AB               	movwf	??_I2C1_MasterWrite
  9294  072C  082B               	movf	??_I2C1_MasterWrite,w
  9295  072D  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  9296  072E  082A               	movf	I2C1_MasterWrite@pflag,w
  9297  072F  00AC               	movwf	??_I2C1_MasterWrite+1
  9298  0730  082C               	movf	??_I2C1_MasterWrite+1,w
  9299  0731  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  9300  0732  3001               	movlw	1
  9301  0733  3184  24B6         	fcall	_I2C1_MasterTRBInsert
  9302                           
  9303                           ;mcc_generated_files/i2c1.c: 613:     }
  9304  0735  0008               	return
  9305  0736                     l3575:	
  9306                           
  9307                           ;mcc_generated_files/i2c1.c: 615:     {;mcc_generated_files/i2c1.c: 616:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
  9308  0736  082A               	movf	I2C1_MasterWrite@pflag,w
  9309  0737  0086               	movwf	6
  9310  0738  0187               	clrf	7
  9311  0739  0181               	clrf	1
  9312  073A  0A81               	incf	1,f
  9313  073B  0008               	return
  9314  073C                     __end_of_I2C1_MasterWrite:	
  9315                           
  9316                           	psect	text30
  9317  07A8                     __ptext30:	
  9318 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  9319 ;; Defined at:
  9320 ;;		line 721 in file "mcc_generated_files/i2c1.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  ptrb            1    wreg     PTR struct .
  9323 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  9324 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  9325 ;;		 -> writeData@data(1), 
  9326 ;;  length          1    1[BANK0 ] unsigned char 
  9327 ;;  address         2    2[BANK0 ] unsigned short 
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  ptrb            1    6[BANK0 ] PTR struct .
  9330 ;;		 -> I2C1_MasterWrite@trBlock(4), 
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      void 
  9333 ;; Registers used:
  9334 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9340 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9342 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9343 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9344 ;;Total ram usage:        7 bytes
  9345 ;; Hardware stack levels used:    1
  9346 ;; Hardware stack levels required when called:    4
  9347 ;; This function calls:
  9348 ;;		Nothing
  9349 ;; This function is called by:
  9350 ;;		_I2C1_MasterWrite
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           
  9355                           ;psect for function _I2C1_MasterWriteTRBBuild
  9356  07A8                     _I2C1_MasterWriteTRBBuild:	
  9357                           
  9358                           ;incstack = 0
  9359                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  9360                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
  9361  07A8  0140               	movlb	0	; select bank0
  9362  07A9  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  9363                           
  9364                           ;mcc_generated_files/i2c1.c: 722:                                 I2C1_TRANSACTION_REQUE
      +                          ST_BLOCK *ptrb,;mcc_generated_files/i2c1.c: 723:                                 uint8_t
      +                           *pdata,;mcc_generated_files/i2c1.c: 724:                                 uint8_t length
      +                          ,;mcc_generated_files/i2c1.c: 725:                                 uint16_t address);mcc
      +                          _generated_files/i2c1.c: 726: {;mcc_generated_files/i2c1.c: 727:     ptrb->address = add
      +                          ress << 1;
  9365  07AA  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
  9366  07AB  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
  9367  07AC  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
  9368  07AD  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  9369  07AE  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
  9370  07AF  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
  9371  07B0  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  9372  07B1  0086               	movwf	6
  9373  07B2  0187               	clrf	7
  9374  07B3  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  9375  07B4  3FC0               	movwi [0]fsr1
  9376  07B5  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
  9377  07B6  3FC1               	movwi [1]fsr1
  9378                           
  9379                           ;mcc_generated_files/i2c1.c: 728:     ptrb->length = length;
  9380  07B7  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
  9381  07B8  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  9382  07B9  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  9383  07BA  3E02               	addlw	2
  9384  07BB  0086               	movwf	6
  9385  07BC  0187               	clrf	7
  9386  07BD  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  9387  07BE  0081               	movwf	1
  9388                           
  9389                           ;mcc_generated_files/i2c1.c: 729:     ptrb->pbuffer = pdata;
  9390  07BF  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
  9391  07C0  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  9392  07C1  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  9393  07C2  3E03               	addlw	3
  9394  07C3  0086               	movwf	6
  9395  07C4  0187               	clrf	7
  9396  07C5  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  9397  07C6  0081               	movwf	1
  9398  07C7  0008               	return
  9399  07C8                     __end_of_I2C1_MasterWriteTRBBuild:	
  9400                           
  9401                           	psect	text31
  9402  04B6                     __ptext31:	
  9403 ;; *************** function _I2C1_MasterTRBInsert *****************
  9404 ;; Defined at:
  9405 ;;		line 654 in file "mcc_generated_files/i2c1.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;  count           1    wreg     unsigned char 
  9408 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  9409 ;;		 -> I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
  9410 ;;  pflag           1    1[BANK0 ] PTR enum E10866
  9411 ;;		 -> writeData@status(1), 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  count           1    3[BANK0 ] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9426 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9427 ;;Total ram usage:        4 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:    5
  9430 ;; This function calls:
  9431 ;;		_I2C1_WaitForLastPacketToComplete
  9432 ;; This function is called by:
  9433 ;;		_I2C1_MasterWrite
  9434 ;;		_I2C1_MasterRead
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           
  9439                           ;psect for function _I2C1_MasterTRBInsert
  9440  04B6                     _I2C1_MasterTRBInsert:	
  9441                           
  9442                           ;incstack = 0
  9443                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9444                           ;I2C1_MasterTRBInsert@count stored from wreg
  9445  04B6  0140               	movlb	0	; select bank0
  9446  04B7  00A3               	movwf	I2C1_MasterTRBInsert@count
  9447                           
  9448                           ;mcc_generated_files/i2c1.c: 655:                                 uint8_t count,;mcc_gen
      +                          erated_files/i2c1.c: 656:                                 I2C1_TRANSACTION_REQUEST_BLOCK
      +                           *ptrb_list,;mcc_generated_files/i2c1.c: 657:                                 I2C1_MESSA
      +                          GE_STATUS *pflag);mcc_generated_files/i2c1.c: 658: {;mcc_generated_files/i2c1.c: 661:   
      +                            if (i2c1_object.trStatus.s.full != 1)
  9449  04B8  1848               	btfsc	_i2c1_object+2,0
  9450  04B9  2CEA               	goto	l3563
  9451                           
  9452                           ;mcc_generated_files/i2c1.c: 662:     {;mcc_generated_files/i2c1.c: 663:         *pflag 
      +                          = I2C1_MESSAGE_PENDING;
  9453  04BA  3002               	movlw	2
  9454  04BB  00A2               	movwf	??_I2C1_MasterTRBInsert
  9455  04BC  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  9456  04BD  0086               	movwf	6
  9457  04BE  0187               	clrf	7
  9458  04BF  0822               	movf	??_I2C1_MasterTRBInsert,w
  9459  04C0  0081               	movwf	1
  9460                           
  9461                           ;mcc_generated_files/i2c1.c: 665:         i2c1_object.pTrTail->ptrb_list = ptrb_list;
  9462  04C1  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
  9463  04C2  00A2               	movwf	??_I2C1_MasterTRBInsert
  9464  04C3  0A46               	incf	_i2c1_object,w
  9465  04C4  0086               	movwf	6
  9466  04C5  0187               	clrf	7
  9467  04C6  0822               	movf	??_I2C1_MasterTRBInsert,w
  9468  04C7  0081               	movwf	1
  9469                           
  9470                           ;mcc_generated_files/i2c1.c: 666:         i2c1_object.pTrTail->count = count;
  9471  04C8  0823               	movf	I2C1_MasterTRBInsert@count,w
  9472  04C9  00A2               	movwf	??_I2C1_MasterTRBInsert
  9473  04CA  0846               	movf	_i2c1_object,w
  9474  04CB  0086               	movwf	6
  9475  04CC  0187               	clrf	7
  9476  04CD  0822               	movf	??_I2C1_MasterTRBInsert,w
  9477  04CE  0081               	movwf	1
  9478                           
  9479                           ;mcc_generated_files/i2c1.c: 667:         i2c1_object.pTrTail->pTrFlag = pflag;
  9480  04CF  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  9481  04D0  00A2               	movwf	??_I2C1_MasterTRBInsert
  9482  04D1  0846               	movf	_i2c1_object,w
  9483  04D2  3E02               	addlw	2
  9484  04D3  0086               	movwf	6
  9485  04D4  0187               	clrf	7
  9486  04D5  0822               	movf	??_I2C1_MasterTRBInsert,w
  9487  04D6  0081               	movwf	1
  9488                           
  9489                           ;mcc_generated_files/i2c1.c: 668:         i2c1_object.pTrTail++;
  9490  04D7  3003               	movlw	3
  9491  04D8  00A2               	movwf	??_I2C1_MasterTRBInsert
  9492  04D9  0822               	movf	??_I2C1_MasterTRBInsert,w
  9493  04DA  07C6               	addwf	_i2c1_object,f
  9494                           
  9495                           ;mcc_generated_files/i2c1.c: 671:         if (i2c1_object.pTrTail == (i2c1_tr_queue + 1)
      +                          )
  9496  04DB  0846               	movf	_i2c1_object,w
  9497  04DC  3A6A               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  9498  04DD  1D03               	skipz
  9499  04DE  2CE3               	goto	l3559
  9500                           
  9501                           ;mcc_generated_files/i2c1.c: 672:         {;mcc_generated_files/i2c1.c: 674:            
      +                           i2c1_object.pTrTail = i2c1_tr_queue;
  9502  04DF  3067               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9503  04E0  00A2               	movwf	??_I2C1_MasterTRBInsert
  9504  04E1  0822               	movf	??_I2C1_MasterTRBInsert,w
  9505  04E2  00C6               	movwf	_i2c1_object
  9506  04E3                     l3559:	
  9507                           
  9508                           ;mcc_generated_files/i2c1.c: 679:         i2c1_object.trStatus.s.empty = 0;
  9509  04E3  10C8               	bcf	_i2c1_object+2,1
  9510                           
  9511                           ;mcc_generated_files/i2c1.c: 682:         if (i2c1_object.pTrHead == i2c1_object.pTrTail
      +                          )
  9512  04E4  0847               	movf	low ((_i2c1_object| 0+1)),w
  9513  04E5  0646               	xorwf	_i2c1_object,w
  9514  04E6  1D03               	skipz
  9515  04E7  2CEF               	goto	l3565
  9516                           
  9517                           ;mcc_generated_files/i2c1.c: 683:         {;mcc_generated_files/i2c1.c: 685:            
      +                           i2c1_object.trStatus.s.full = 1;
  9518  04E8  1448               	bsf	_i2c1_object+2,0
  9519  04E9  2CEF               	goto	l3565
  9520  04EA                     l3563:	
  9521                           
  9522                           ;mcc_generated_files/i2c1.c: 690:     {;mcc_generated_files/i2c1.c: 691:         *pflag 
      +                          = I2C1_MESSAGE_FAIL;
  9523  04EA  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  9524  04EB  0086               	movwf	6
  9525  04EC  0187               	clrf	7
  9526  04ED  0181               	clrf	1
  9527  04EE  0A81               	incf	1,f
  9528  04EF                     l3565:	
  9529                           
  9530                           ;mcc_generated_files/i2c1.c: 695:     if (*pflag == I2C1_MESSAGE_PENDING)
  9531  04EF  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  9532  04F0  0086               	movwf	6
  9533  04F1  0187               	clrf	7
  9534  04F2  3002               	movlw	2
  9535  04F3  0601               	xorwf	1,w
  9536  04F4  1D03               	btfss	3,2
  9537  04F5  0008               	return
  9538                           
  9539                           ;mcc_generated_files/i2c1.c: 696:     {;mcc_generated_files/i2c1.c: 697:         I2C1_Wa
      +                          itForLastPacketToComplete();
  9540  04F6  318E  2638         	fcall	_I2C1_WaitForLastPacketToComplete
  9541                           
  9542                           ;mcc_generated_files/i2c1.c: 702:         PIR3bits.SSP1IF = 1;
  9543  04F8  014E               	movlb	14	; select bank14
  9544  04F9  140F               	bsf	15,0	;volatile
  9545  04FA  0008               	return
  9546  04FB                     __end_of_I2C1_MasterTRBInsert:	
  9547                           
  9548                           	psect	text32
  9549  0E38                     __ptext32:	
  9550 ;; *************** function _I2C1_WaitForLastPacketToComplete *****************
  9551 ;; Defined at:
  9552 ;;		line 644 in file "mcc_generated_files/i2c1.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;		None
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;		None
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  1    wreg      void 
  9559 ;; Registers used:
  9560 ;;		wreg, status,2, status,0
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9570 ;;Total ram usage:        0 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:    4
  9573 ;; This function calls:
  9574 ;;		Nothing
  9575 ;; This function is called by:
  9576 ;;		_I2C1_MasterTRBInsert
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           
  9581                           ;psect for function _I2C1_WaitForLastPacketToComplete
  9582  0E38                     _I2C1_WaitForLastPacketToComplete:	
  9583  0E38                     l3545:	
  9584                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
  9585                           
  9586                           ;incstack = 0
  9587                           ; Regs used in _I2C1_WaitForLastPacketToComplete: [wreg+status,2+status,0]
  9588                           
  9589                           
  9590                           ;mcc_generated_files/i2c1.c: 646:     while(i2c1_state != S_MASTER_IDLE)
  9591  0E38  0140               	movlb	0	; select bank0
  9592  0E39  0864               	movf	_i2c1_state,w
  9593  0E3A  1903               	btfsc	3,2
  9594  0E3B  0008               	return
  9595  0E3C  2E38               	goto	l3545
  9596  0E3D                     __end_of_I2C1_WaitForLastPacketToComplete:	
  9597                           
  9598                           	psect	text33
  9599  0E49                     __ptext33:	
  9600 ;; *************** function _CLOCK_init *****************
  9601 ;; Defined at:
  9602 ;;		line 9 in file "clock.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg, status,2, status,0, pclath, cstack
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9620 ;;Total ram usage:        0 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:    5
  9623 ;; This function calls:
  9624 ;;		_TMR0_SetInterruptHandler
  9625 ;; This function is called by:
  9626 ;;		_main
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function _CLOCK_init
  9632  0E49                     _CLOCK_init:	
  9633                           
  9634                           ;clock.c: 12:     TMR0_SetInterruptHandler(CLOCK_timerCallback);
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _CLOCK_init: [wreg+status,2+status,0+pclath+cstack]
  9638  0E49  303D               	movlw	low _CLOCK_timerCallback
  9639  0E4A  0140               	movlb	0	; select bank0
  9640  0E4B  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9641  0E4C  300E               	movlw	high _CLOCK_timerCallback
  9642  0E4D  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9643  0E4E  318E  2674         	fcall	_TMR0_SetInterruptHandler
  9644  0E50  0008               	return
  9645  0E51                     __end_of_CLOCK_init:	
  9646                           
  9647                           	psect	text34
  9648  0E74                     __ptext34:	
  9649 ;; *************** function _TMR0_SetInterruptHandler *****************
  9650 ;; Defined at:
  9651 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9654 ;;		 -> CLOCK_timerCallback(1), TMR0_DefaultInterruptHandler(1), 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;		None
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  1    wreg      void 
  9659 ;; Registers used:
  9660 ;;		wreg
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9666 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9669 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9670 ;;Total ram usage:        2 bytes
  9671 ;; Hardware stack levels used:    1
  9672 ;; Hardware stack levels required when called:    4
  9673 ;; This function calls:
  9674 ;;		Nothing
  9675 ;; This function is called by:
  9676 ;;		_TMR0_Initialize
  9677 ;;		_CLOCK_init
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           
  9682                           ;psect for function _TMR0_SetInterruptHandler
  9683  0E74                     _TMR0_SetInterruptHandler:	
  9684                           
  9685                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  9686                           
  9687                           ;incstack = 0
  9688                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  9689  0E74  0140               	movlb	0	; select bank0
  9690  0E75  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  9691  0E76  0141               	movlb	1	; select bank1
  9692  0E77  00D1               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  9693  0E78  0140               	movlb	0	; select bank0
  9694  0E79  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  9695  0E7A  0141               	movlb	1	; select bank1
  9696  0E7B  00D0               	movwf	_TMR0_InterruptHandler^(0+128)
  9697  0E7C  0008               	return
  9698  0E7D                     __end_of_TMR0_SetInterruptHandler:	
  9699                           
  9700                           	psect	text35
  9701  01D2                     __ptext35:	
  9702 ;; *************** function _BUTTONS_task *****************
  9703 ;; Defined at:
  9704 ;;		line 34 in file "buttons.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;		None
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;  btn             1    8[BANK0 ] PTR struct .
  9709 ;;		 -> buttons(32), 
  9710 ;;  i               1    5[BANK0 ] unsigned char 
  9711 ;;  time            2    6[BANK0 ] unsigned short 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9722 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9723 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9724 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9725 ;;Total ram usage:        7 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    5
  9728 ;; This function calls:
  9729 ;;		_CLOCK_getTime
  9730 ;; This function is called by:
  9731 ;;		_main
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           
  9736                           ;psect for function _BUTTONS_task
  9737  01D2                     _BUTTONS_task:	
  9738                           
  9739                           ;buttons.c: 35:     time_t time = CLOCK_getTime();
  9740                           
  9741                           ;incstack = 0
  9742                           ; Regs used in _BUTTONS_task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9743  01D2  318E  2643  3181   	fcall	_CLOCK_getTime
  9744  01D5  0140               	movlb	0	; select bank0
  9745  01D6  0821               	movf	?_CLOCK_getTime+1,w
  9746  01D7  00A7               	movwf	BUTTONS_task@time+1
  9747  01D8  0820               	movf	?_CLOCK_getTime,w
  9748  01D9  00A6               	movwf	BUTTONS_task@time
  9749                           
  9750                           ;buttons.c: 38:     if (time - lastTime < 50)
  9751  01DA  0141               	movlb	1	; select bank1
  9752  01DB  0842               	movf	buttons@lastTime^(0+128),w
  9753  01DC  0140               	movlb	0	; select bank0
  9754  01DD  0226               	subwf	BUTTONS_task@time,w
  9755  01DE  00A2               	movwf	??_BUTTONS_task
  9756  01DF  0141               	movlb	1	; select bank1
  9757  01E0  0843               	movf	(buttons@lastTime+1)^(0+128),w
  9758  01E1  0140               	movlb	0	; select bank0
  9759  01E2  3B27               	subwfb	BUTTONS_task@time+1,w
  9760  01E3  00A3               	movwf	??_BUTTONS_task+1
  9761  01E4  3000               	movlw	0
  9762  01E5  0223               	subwf	??_BUTTONS_task+1,w
  9763  01E6  3032               	movlw	50
  9764  01E7  1903               	skipnz
  9765  01E8  0222               	subwf	??_BUTTONS_task,w
  9766  01E9  1C03               	btfss	3,0
  9767  01EA  0008               	return
  9768                           
  9769                           ;buttons.c: 41:     lastTime = time;
  9770  01EB  0827               	movf	BUTTONS_task@time+1,w
  9771  01EC  0141               	movlb	1	; select bank1
  9772  01ED  00C3               	movwf	(buttons@lastTime+1)^(0+128)
  9773  01EE  0140               	movlb	0	; select bank0
  9774  01EF  0826               	movf	BUTTONS_task@time,w
  9775  01F0  0141               	movlb	1	; select bank1
  9776  01F1  00C2               	movwf	buttons@lastTime^(0+128)
  9777                           
  9778                           ;buttons.c: 44:     for (uint8_t i = 0; i < 4; i++) {
  9779  01F2  0140               	movlb	0	; select bank0
  9780  01F3  01A5               	clrf	BUTTONS_task@i
  9781  01F4                     l4043:	
  9782                           
  9783                           ;buttons.c: 45:         button_t* btn = buttons + i;
  9784  01F4  0825               	movf	BUTTONS_task@i,w
  9785  01F5  00A2               	movwf	??_BUTTONS_task
  9786  01F6  3002               	movlw	2
  9787  01F7                     u2515:	
  9788  01F7  35A2               	lslf	??_BUTTONS_task,f
  9789  01F8  3EFF               	addlw	-1
  9790  01F9  1D03               	skipz
  9791  01FA  29F7               	goto	u2515
  9792  01FB  3522               	lslf	??_BUTTONS_task,w
  9793  01FC  3E20               	addlw	(low (_buttons| (0+256)))& (0+255)
  9794  01FD  00A3               	movwf	??_BUTTONS_task+1
  9795  01FE  0823               	movf	??_BUTTONS_task+1,w
  9796  01FF  00A8               	movwf	BUTTONS_task@btn
  9797                           
  9798                           ;buttons.c: 48:         if ((*(btn->port) & (1 << (btn->pin))) == 0) {
  9799  0200  0828               	movf	BUTTONS_task@btn,w
  9800  0201  0086               	movwf	6
  9801  0202  3001               	movlw	1	; select bank2/3
  9802  0203  0087               	movwf	7
  9803  0204  3F40               	moviw [0]fsr1
  9804  0205  00A2               	movwf	??_BUTTONS_task
  9805  0206  3F41               	moviw [1]fsr1
  9806  0207  00A3               	movwf	??_BUTTONS_task+1
  9807  0208  0822               	movf	??_BUTTONS_task,w
  9808  0209  0086               	movwf	6
  9809  020A  0823               	movf	??_BUTTONS_task+1,w
  9810  020B  0087               	movwf	7
  9811  020C  3001               	movlw	1
  9812  020D  00A4               	movwf	??_BUTTONS_task+2
  9813  020E  0828               	movf	BUTTONS_task@btn,w
  9814  020F  3E02               	addlw	2
  9815  0210  0084               	movwf	4
  9816  0211  3001               	movlw	1	; select bank2/3
  9817  0212  0085               	movwf	5
  9818  0213  0A00               	incf	0,w
  9819  0214  2A16               	goto	u2524
  9820  0215                     u2525:	
  9821  0215  35A4               	lslf	??_BUTTONS_task+2,f
  9822  0216                     u2524:	
  9823  0216  0B89               	decfsz	9,f
  9824  0217  2A15               	goto	u2525
  9825  0218  0824               	movf	??_BUTTONS_task+2,w
  9826  0219  0501               	andwf	1,w
  9827  021A  1D03               	btfss	3,2
  9828  021B  2A24               	goto	l4049
  9829                           
  9830                           ;buttons.c: 49:             btn->state = STATE_PRESSED;
  9831  021C  0828               	movf	BUTTONS_task@btn,w
  9832  021D  3E03               	addlw	3
  9833  021E  0086               	movwf	6
  9834  021F  3001               	movlw	1	; select bank2/3
  9835  0220  0087               	movwf	7
  9836  0221  0181               	clrf	1
  9837  0222  0A81               	incf	1,f
  9838                           
  9839                           ;buttons.c: 50:         } else {
  9840  0223  2A2A               	goto	l894
  9841  0224                     l4049:	
  9842                           
  9843                           ;buttons.c: 51:             btn->state = STATE_UNPRESSED;
  9844  0224  0828               	movf	BUTTONS_task@btn,w
  9845  0225  3E03               	addlw	3
  9846  0226  0086               	movwf	6
  9847  0227  3001               	movlw	1	; select bank2/3
  9848  0228  0087               	movwf	7
  9849  0229  0181               	clrf	1
  9850  022A                     l894:	
  9851                           ;buttons.c: 52:         }
  9852                           
  9853                           
  9854                           ;buttons.c: 54:         if (btn->state == STATE_PRESSED && btn->lastState == STATE_UNPRE
      +                          SSED) {
  9855  022A  0828               	movf	BUTTONS_task@btn,w
  9856  022B  3E03               	addlw	3
  9857  022C  0086               	movwf	6
  9858  022D  3001               	movlw	1	; select bank2/3
  9859  022E  0087               	movwf	7
  9860  022F  0301               	decf	1,w
  9861  0230  1D03               	btfss	3,2
  9862  0231  2A4B               	goto	l4055
  9863  0232  0828               	movf	BUTTONS_task@btn,w
  9864  0233  3E04               	addlw	4
  9865  0234  0086               	movwf	6
  9866  0235  3001               	movlw	1	; select bank2/3
  9867  0236  0087               	movwf	7
  9868  0237  0801               	movf	1,w
  9869  0238  1D03               	btfss	3,2
  9870  0239  2A4B               	goto	l4055
  9871                           
  9872                           ;buttons.c: 56:             btn->event = EVENT_PRESSED;
  9873  023A  0828               	movf	BUTTONS_task@btn,w
  9874  023B  3E05               	addlw	5
  9875  023C  0086               	movwf	6
  9876  023D  3001               	movlw	1	; select bank2/3
  9877  023E  0087               	movwf	7
  9878  023F  0181               	clrf	1
  9879  0240  0A81               	incf	1,f
  9880                           
  9881                           ;buttons.c: 57:             btn->pressTime = time;
  9882  0241  0828               	movf	BUTTONS_task@btn,w
  9883  0242  3E06               	addlw	6
  9884  0243  0086               	movwf	6
  9885  0244  3001               	movlw	1	; select bank2/3
  9886  0245  0087               	movwf	7
  9887  0246  0826               	movf	BUTTONS_task@time,w
  9888  0247  3FC0               	movwi [0]fsr1
  9889  0248  0827               	movf	BUTTONS_task@time+1,w
  9890  0249  3FC1               	movwi [1]fsr1
  9891                           
  9892                           ;buttons.c: 58:         } else if (btn->state == STATE_PRESSED && btn->lastState == STAT
      +                          E_PRESSED){
  9893  024A  2A8D               	goto	l896
  9894  024B                     l4055:	
  9895  024B  0828               	movf	BUTTONS_task@btn,w
  9896  024C  3E03               	addlw	3
  9897  024D  0086               	movwf	6
  9898  024E  3001               	movlw	1	; select bank2/3
  9899  024F  0087               	movwf	7
  9900  0250  0301               	decf	1,w
  9901  0251  1D03               	btfss	3,2
  9902  0252  2A77               	goto	l4063
  9903  0253  0828               	movf	BUTTONS_task@btn,w
  9904  0254  3E04               	addlw	4
  9905  0255  0086               	movwf	6
  9906  0256  3001               	movlw	1	; select bank2/3
  9907  0257  0087               	movwf	7
  9908  0258  0301               	decf	1,w
  9909  0259  1D03               	btfss	3,2
  9910  025A  2A77               	goto	l4063
  9911                           
  9912                           ;buttons.c: 60:             if(time - btn->pressTime > 500) {
  9913  025B  0828               	movf	BUTTONS_task@btn,w
  9914  025C  3E06               	addlw	6
  9915  025D  0086               	movwf	6
  9916  025E  3001               	movlw	1	; select bank2/3
  9917  025F  0087               	movwf	7
  9918  0260  3F40               	moviw [0]fsr1
  9919  0261  0226               	subwf	BUTTONS_task@time,w
  9920  0262  00A2               	movwf	??_BUTTONS_task
  9921  0263  3F41               	moviw [1]fsr1
  9922  0264  3B27               	subwfb	BUTTONS_task@time+1,w
  9923  0265  00A3               	movwf	??_BUTTONS_task+1
  9924  0266  3001               	movlw	1
  9925  0267  0223               	subwf	??_BUTTONS_task+1,w
  9926  0268  30F5               	movlw	245
  9927  0269  1903               	skipnz
  9928  026A  0222               	subwf	??_BUTTONS_task,w
  9929  026B  1C03               	skipc
  9930  026C  2A8D               	goto	l896
  9931                           
  9932                           ;buttons.c: 61:                 btn->event = EVENT_HELD;
  9933  026D  3002               	movlw	2
  9934  026E  00A2               	movwf	??_BUTTONS_task
  9935  026F  0828               	movf	BUTTONS_task@btn,w
  9936  0270  3E05               	addlw	5
  9937  0271  0086               	movwf	6
  9938  0272  3001               	movlw	1	; select bank2/3
  9939  0273  0087               	movwf	7
  9940  0274  0822               	movf	??_BUTTONS_task,w
  9941  0275  0081               	movwf	1
  9942  0276  2A8D               	goto	l896
  9943  0277                     l4063:	
  9944  0277  0828               	movf	BUTTONS_task@btn,w
  9945  0278  3E03               	addlw	3
  9946  0279  0086               	movwf	6
  9947  027A  3001               	movlw	1	; select bank2/3
  9948  027B  0087               	movwf	7
  9949  027C  0801               	movf	1,w
  9950  027D  1D03               	btfss	3,2
  9951  027E  2A8D               	goto	l896
  9952  027F  0828               	movf	BUTTONS_task@btn,w
  9953  0280  3E04               	addlw	4
  9954  0281  0086               	movwf	6
  9955  0282  3001               	movlw	1	; select bank2/3
  9956  0283  0087               	movwf	7
  9957  0284  0301               	decf	1,w
  9958  0285  1D03               	btfss	3,2
  9959  0286  2A8D               	goto	l896
  9960                           
  9961                           ;buttons.c: 64:             btn->event = EVENT_IDLE;
  9962  0287  0828               	movf	BUTTONS_task@btn,w
  9963  0288  3E05               	addlw	5
  9964  0289  0086               	movwf	6
  9965  028A  3001               	movlw	1	; select bank2/3
  9966  028B  0087               	movwf	7
  9967  028C  0181               	clrf	1
  9968  028D                     l896:	
  9969                           
  9970                           ;buttons.c: 67:         btn->lastState = btn->state;
  9971  028D  0828               	movf	BUTTONS_task@btn,w
  9972  028E  3E03               	addlw	3
  9973  028F  0086               	movwf	6
  9974  0290  3001               	movlw	1	; select bank2/3
  9975  0291  0087               	movwf	7
  9976  0292  0801               	movf	1,w
  9977  0293  00A2               	movwf	??_BUTTONS_task
  9978  0294  0828               	movf	BUTTONS_task@btn,w
  9979  0295  3E04               	addlw	4
  9980  0296  0086               	movwf	6
  9981  0297  3001               	movlw	1	; select bank2/3
  9982  0298  0087               	movwf	7
  9983  0299  0822               	movf	??_BUTTONS_task,w
  9984  029A  0081               	movwf	1
  9985                           
  9986                           ;buttons.c: 68:     }
  9987  029B  3001               	movlw	1
  9988  029C  00A2               	movwf	??_BUTTONS_task
  9989  029D  0822               	movf	??_BUTTONS_task,w
  9990  029E  07A5               	addwf	BUTTONS_task@i,f
  9991  029F  3004               	movlw	4
  9992  02A0  0225               	subwf	BUTTONS_task@i,w
  9993  02A1  1803               	btfsc	3,0
  9994  02A2  0008               	return
  9995  02A3  29F4               	goto	l4043
  9996  02A4                     __end_of_BUTTONS_task:	
  9997                           
  9998                           	psect	text36
  9999  053E                     __ptext36:	
 10000 ;; *************** function _BUTTONS_init *****************
 10001 ;; Defined at:
 10002 ;;		line 21 in file "buttons.c"
 10003 ;; Parameters:    Size  Location     Type
 10004 ;;		None
 10005 ;; Auto vars:     Size  Location     Type
 10006 ;;		None
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  1    wreg      void 
 10009 ;; Registers used:
 10010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10011 ;; Tracked objects:
 10012 ;;		On entry : 0/0
 10013 ;;		On exit  : 0/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10018 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10019 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10020 ;;Total ram usage:        1 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:    5
 10023 ;; This function calls:
 10024 ;;		_init
 10025 ;; This function is called by:
 10026 ;;		_main
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           
 10031                           ;psect for function _BUTTONS_init
 10032  053E                     _BUTTONS_init:	
 10033                           
 10034                           ;buttons.c: 22:     menu = &buttons[0];
 10035                           
 10036                           ;incstack = 0
 10037                           ; Regs used in _BUTTONS_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10038  053E  3020               	movlw	(low (_buttons| (0+256)))& (0+255)
 10039  053F  0140               	movlb	0	; select bank0
 10040  0540  00A5               	movwf	??_BUTTONS_init
 10041  0541  0825               	movf	??_BUTTONS_init,w
 10042  0542  00D8               	movwf	_menu
 10043                           
 10044                           ;buttons.c: 23:     up = &buttons[1];
 10045  0543  3028               	movlw	(low ((_buttons| (0+256)+8)))& (0+255)
 10046  0544  00A5               	movwf	??_BUTTONS_init
 10047  0545  0825               	movf	??_BUTTONS_init,w
 10048  0546  00DB               	movwf	_up
 10049                           
 10050                           ;buttons.c: 24:     down = &buttons[2];
 10051  0547  3030               	movlw	(low ((_buttons| (0+256)+16)))& (0+255)
 10052  0548  00A5               	movwf	??_BUTTONS_init
 10053  0549  0825               	movf	??_BUTTONS_init,w
 10054  054A  00DA               	movwf	_down
 10055                           
 10056                           ;buttons.c: 25:     enter = &buttons[3];
 10057  054B  3038               	movlw	(low ((_buttons| (0+256)+24)))& (0+255)
 10058  054C  00A5               	movwf	??_BUTTONS_init
 10059  054D  0825               	movf	??_BUTTONS_init,w
 10060  054E  00D9               	movwf	_enter
 10061                           
 10062                           ;buttons.c: 27:     init(menu, &PORTC, 2);
 10063  054F  300E               	movlw	14
 10064  0550  00A0               	movwf	init@port
 10065  0551  3000               	movlw	0
 10066  0552  00A1               	movwf	init@port+1
 10067  0553  3002               	movlw	2
 10068  0554  00A5               	movwf	??_BUTTONS_init
 10069  0555  0825               	movf	??_BUTTONS_init,w
 10070  0556  00A2               	movwf	init@pin
 10071  0557  0858               	movf	_menu,w
 10072  0558  3187  27C8  3185   	fcall	_init
 10073                           
 10074                           ;buttons.c: 28:     init(enter, &PORTA, 2);
 10075  055B  300C               	movlw	12
 10076  055C  0140               	movlb	0	; select bank0
 10077  055D  00A0               	movwf	init@port
 10078  055E  3000               	movlw	0
 10079  055F  00A1               	movwf	init@port+1
 10080  0560  3002               	movlw	2
 10081  0561  00A5               	movwf	??_BUTTONS_init
 10082  0562  0825               	movf	??_BUTTONS_init,w
 10083  0563  00A2               	movwf	init@pin
 10084  0564  0859               	movf	_enter,w
 10085  0565  3187  27C8  3185   	fcall	_init
 10086                           
 10087                           ;buttons.c: 29:     init(down, &PORTC, 0);
 10088  0568  300E               	movlw	14
 10089  0569  0140               	movlb	0	; select bank0
 10090  056A  00A0               	movwf	init@port
 10091  056B  3000               	movlw	0
 10092  056C  00A1               	movwf	init@port+1
 10093  056D  01A2               	clrf	init@pin
 10094  056E  085A               	movf	_down,w
 10095  056F  3187  27C8  3185   	fcall	_init
 10096                           
 10097                           ;buttons.c: 30:     init(up, &PORTC, 1);
 10098  0572  300E               	movlw	14
 10099  0573  0140               	movlb	0	; select bank0
 10100  0574  00A0               	movwf	init@port
 10101  0575  3000               	movlw	0
 10102  0576  00A1               	movwf	init@port+1
 10103  0577  01A2               	clrf	init@pin
 10104  0578  0AA2               	incf	init@pin,f
 10105  0579  085B               	movf	_up,w
 10106  057A  3187  27C8         	fcall	_init
 10107  057C  0008               	return
 10108  057D                     __end_of_BUTTONS_init:	
 10109                           
 10110                           	psect	text37
 10111  07C8                     __ptext37:	
 10112 ;; *************** function _init *****************
 10113 ;; Defined at:
 10114 ;;		line 14 in file "buttons.c"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;  btn             1    wreg     PTR struct .
 10117 ;;		 -> buttons(32), NULL(0), 
 10118 ;;  port            2    0[BANK0 ] PTR volatile unsigned ch
 10119 ;;		 -> PORTA(1), PORTC(1), 
 10120 ;;  pin             1    2[BANK0 ] unsigned char 
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;  btn             1    4[BANK0 ] PTR struct .
 10123 ;;		 -> buttons(32), NULL(0), 
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  1    wreg      void 
 10126 ;; Registers used:
 10127 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10133 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10135 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10136 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10137 ;;Total ram usage:        5 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:    4
 10140 ;; This function calls:
 10141 ;;		Nothing
 10142 ;; This function is called by:
 10143 ;;		_BUTTONS_init
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           
 10148                           ;psect for function _init
 10149  07C8                     _init:	
 10150                           
 10151                           ;incstack = 0
 10152                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0]
 10153                           ;init@btn stored from wreg
 10154  07C8  0140               	movlb	0	; select bank0
 10155  07C9  00A4               	movwf	init@btn
 10156                           
 10157                           ;buttons.c: 15:     btn->port = port;
 10158  07CA  0824               	movf	init@btn,w
 10159  07CB  0086               	movwf	6
 10160  07CC  3001               	movlw	1	; select bank2/3
 10161  07CD  0087               	movwf	7
 10162  07CE  0820               	movf	init@port,w
 10163  07CF  3FC0               	movwi [0]fsr1
 10164  07D0  0821               	movf	init@port+1,w
 10165  07D1  3FC1               	movwi [1]fsr1
 10166                           
 10167                           ;buttons.c: 16:     btn->pin = pin;
 10168  07D2  0822               	movf	init@pin,w
 10169  07D3  00A3               	movwf	??_init
 10170  07D4  0824               	movf	init@btn,w
 10171  07D5  3E02               	addlw	2
 10172  07D6  0086               	movwf	6
 10173  07D7  3001               	movlw	1	; select bank2/3
 10174  07D8  0087               	movwf	7
 10175  07D9  0823               	movf	??_init,w
 10176  07DA  0081               	movwf	1
 10177                           
 10178                           ;buttons.c: 17:     btn->state = STATE_UNPRESSED;
 10179  07DB  0824               	movf	init@btn,w
 10180  07DC  3E03               	addlw	3
 10181  07DD  0086               	movwf	6
 10182  07DE  3001               	movlw	1	; select bank2/3
 10183  07DF  0087               	movwf	7
 10184  07E0  0181               	clrf	1
 10185                           
 10186                           ;buttons.c: 18:     btn->event = EVENT_IDLE;
 10187  07E1  0824               	movf	init@btn,w
 10188  07E2  3E05               	addlw	5
 10189  07E3  0086               	movwf	6
 10190  07E4  3001               	movlw	1	; select bank2/3
 10191  07E5  0087               	movwf	7
 10192  07E6  0181               	clrf	1
 10193  07E7  0008               	return
 10194  07E8                     __end_of_init:	
 10195                           
 10196                           	psect	text38
 10197  02A4                     __ptext38:	
 10198 ;; *************** function _BEAT_task *****************
 10199 ;; Defined at:
 10200 ;;		line 57 in file "beat.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;		None
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;  offset          2   10[BANK0 ] unsigned short 
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      void 
 10207 ;; Registers used:
 10208 ;;		wreg, status,2, status,0, pclath, cstack
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10216 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10217 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10218 ;;Total ram usage:        4 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:    5
 10221 ;; This function calls:
 10222 ;;		_ADCC_SetUpperThreshold
 10223 ;;		_CLOCK_getTime
 10224 ;;		_TM1650_isEnabled
 10225 ;;		___lwdiv
 10226 ;; This function is called by:
 10227 ;;		_main
 10228 ;; This function uses a non-reentrant model
 10229 ;;
 10230                           
 10231                           
 10232                           ;psect for function _BEAT_task
 10233  02A4                     _BEAT_task:	
 10234                           
 10235                           ;beat.c: 59:     if (TM1650_isEnabled())
 10236                           
 10237                           ;incstack = 0
 10238                           ; Regs used in _BEAT_task: [wreg+status,2+status,0+pclath+cstack]
 10239  02A4  318E  2625  3182   	fcall	_TM1650_isEnabled
 10240  02A7  3A00               	xorlw	0
 10241  02A8  1D03               	btfss	3,2
 10242  02A9  0008               	return
 10243                           
 10244                           ;beat.c: 62:     if (CLOCK_getTime() - lastRun < delay)
 10245  02AA  318E  2643  3182   	fcall	_CLOCK_getTime
 10246  02AD  0141               	movlb	1	; select bank1
 10247  02AE  083A               	movf	_lastRun^(0+128),w
 10248  02AF  0140               	movlb	0	; select bank0
 10249  02B0  0220               	subwf	?_CLOCK_getTime,w
 10250  02B1  00A8               	movwf	??_BEAT_task
 10251  02B2  0141               	movlb	1	; select bank1
 10252  02B3  083B               	movf	(_lastRun+1)^(0+128),w
 10253  02B4  0140               	movlb	0	; select bank0
 10254  02B5  3B21               	subwfb	?_CLOCK_getTime+1,w
 10255  02B6  00A9               	movwf	??_BEAT_task+1
 10256  02B7  0141               	movlb	1	; select bank1
 10257  02B8  085D               	movf	(_delay+1)^(0+128),w
 10258  02B9  0140               	movlb	0	; select bank0
 10259  02BA  0229               	subwf	??_BEAT_task+1,w
 10260  02BB  1D03               	skipz
 10261  02BC  2AC1               	goto	u2415
 10262  02BD  0141               	movlb	1	; select bank1
 10263  02BE  085C               	movf	_delay^(0+128),w
 10264  02BF  0140               	movlb	0	; select bank0
 10265  02C0  0228               	subwf	??_BEAT_task,w
 10266  02C1                     u2415:	
 10267  02C1  1C03               	btfss	3,0
 10268  02C2  0008               	return
 10269                           
 10270                           ;beat.c: 65:     lastRun = CLOCK_getTime();
 10271  02C3  318E  2643  3182   	fcall	_CLOCK_getTime
 10272  02C6  0140               	movlb	0	; select bank0
 10273  02C7  0821               	movf	?_CLOCK_getTime+1,w
 10274  02C8  0141               	movlb	1	; select bank1
 10275  02C9  00BB               	movwf	(_lastRun+1)^(0+128)
 10276  02CA  0140               	movlb	0	; select bank0
 10277  02CB  0820               	movf	?_CLOCK_getTime,w
 10278  02CC  0141               	movlb	1	; select bank1
 10279  02CD  00BA               	movwf	_lastRun^(0+128)
 10280                           
 10281                           ;beat.c: 67:     if (thresholdExceeded == 1) {
 10282  02CE  0140               	movlb	0	; select bank0
 10283  02CF  0356               	decf	_thresholdExceeded,w
 10284  02D0  1D03               	btfss	3,2
 10285  02D1  2AD8               	goto	l3973
 10286                           
 10287                           ;beat.c: 71:         thresholdCount++;
 10288  02D2  3001               	movlw	1
 10289  02D3  0141               	movlb	1	; select bank1
 10290  02D4  07B8               	addwf	_thresholdCount^(0+128),f
 10291  02D5  3000               	movlw	0
 10292  02D6  3DB9               	addwfc	(_thresholdCount+1)^(0+128),f
 10293                           
 10294                           ;beat.c: 72:     } else {
 10295  02D7  2ADF               	goto	l3977
 10296  02D8                     l3973:	
 10297                           
 10298                           ;beat.c: 74:         thresholdCount = 0;
 10299  02D8  0141               	movlb	1	; select bank1
 10300  02D9  01B8               	clrf	_thresholdCount^(0+128)
 10301  02DA  01B9               	clrf	(_thresholdCount+1)^(0+128)
 10302                           
 10303                           ;beat.c: 75:         delay = 20;
 10304  02DB  3014               	movlw	20
 10305  02DC  00DC               	movwf	_delay^(0+128)
 10306  02DD  3000               	movlw	0
 10307  02DE  00DD               	movwf	(_delay^(0+128)+1)
 10308  02DF                     l3977:	
 10309                           
 10310                           ;beat.c: 81:     if (thresholdExceeded == 1 && lastDetected == 0) {
 10311  02DF  0140               	movlb	0	; select bank0
 10312  02E0  0356               	decf	_thresholdExceeded,w
 10313  02E1  1D03               	btfss	3,2
 10314  02E2  2B1F               	goto	l3995
 10315  02E3  0855               	movf	_lastDetected,w
 10316  02E4  1D03               	btfss	3,2
 10317  02E5  2B1F               	goto	l3995
 10318                           
 10319                           ;beat.c: 83:         detected = 1;
 10320  02E6  01D7               	clrf	_detected
 10321  02E7  0AD7               	incf	_detected,f
 10322                           
 10323                           ;beat.c: 86:         delay = 100;
 10324  02E8  3064               	movlw	100
 10325  02E9  0141               	movlb	1	; select bank1
 10326  02EA  00DC               	movwf	_delay^(0+128)
 10327  02EB  3000               	movlw	0
 10328  02EC  00DD               	movwf	(_delay^(0+128)+1)
 10329                           
 10330                           ;beat.c: 89:         time_t offset = CLOCK_getTime() - lastBeat;
 10331  02ED  318E  2643  3182   	fcall	_CLOCK_getTime
 10332  02F0  0140               	movlb	0	; select bank0
 10333  02F1  084B               	movf	_lastBeat,w
 10334  02F2  0220               	subwf	?_CLOCK_getTime,w
 10335  02F3  00AA               	movwf	BEAT_task@offset
 10336  02F4  084C               	movf	_lastBeat+1,w
 10337  02F5  3B21               	subwfb	?_CLOCK_getTime+1,w
 10338  02F6  00AB               	movwf	BEAT_task@offset+1
 10339                           
 10340                           ;beat.c: 91:         lastBeat = CLOCK_getTime();
 10341  02F7  318E  2643  3182   	fcall	_CLOCK_getTime
 10342  02FA  0140               	movlb	0	; select bank0
 10343  02FB  0821               	movf	?_CLOCK_getTime+1,w
 10344  02FC  00CC               	movwf	_lastBeat+1
 10345  02FD  0820               	movf	?_CLOCK_getTime,w
 10346  02FE  00CB               	movwf	_lastBeat
 10347                           
 10348                           ;beat.c: 93:         if (offset < 150)
 10349  02FF  3000               	movlw	0
 10350  0300  022B               	subwf	BEAT_task@offset+1,w
 10351  0301  3096               	movlw	150
 10352  0302  1903               	skipnz
 10353  0303  022A               	subwf	BEAT_task@offset,w
 10354  0304  1803               	skipnc
 10355  0305  2B0C               	goto	l3993
 10356                           
 10357                           ;beat.c: 94:             bpm = 400;
 10358  0306  3090               	movlw	144
 10359  0307  0141               	movlb	1	; select bank1
 10360  0308  00BC               	movwf	_bpm^(0+128)
 10361  0309  3001               	movlw	1
 10362  030A  00BD               	movwf	(_bpm^(0+128)+1)
 10363  030B  2B1F               	goto	l3995
 10364  030C                     l3993:	
 10365                           
 10366                           ;beat.c: 96:             bpm = 60 * 1000 / offset;
 10367  030C  082B               	movf	BEAT_task@offset+1,w
 10368  030D  00A1               	movwf	___lwdiv@divisor+1
 10369  030E  082A               	movf	BEAT_task@offset,w
 10370  030F  00A0               	movwf	___lwdiv@divisor
 10371  0310  3060               	movlw	96
 10372  0311  00A2               	movwf	___lwdiv@dividend
 10373  0312  30EA               	movlw	234
 10374  0313  00A3               	movwf	___lwdiv@dividend+1
 10375  0314  3186  262C  3182   	fcall	___lwdiv
 10376  0317  0140               	movlb	0	; select bank0
 10377  0318  0821               	movf	?___lwdiv+1,w
 10378  0319  0141               	movlb	1	; select bank1
 10379  031A  00BD               	movwf	(_bpm+1)^(0+128)
 10380  031B  0140               	movlb	0	; select bank0
 10381  031C  0820               	movf	?___lwdiv,w
 10382  031D  0141               	movlb	1	; select bank1
 10383  031E  00BC               	movwf	_bpm^(0+128)
 10384  031F                     l3995:	
 10385                           
 10386                           ;beat.c: 102:     lastDetected = thresholdExceeded;
 10387  031F  0140               	movlb	0	; select bank0
 10388  0320  0856               	movf	_thresholdExceeded,w
 10389  0321  00A8               	movwf	??_BEAT_task
 10390  0322  0828               	movf	??_BEAT_task,w
 10391  0323  00D5               	movwf	_lastDetected
 10392                           
 10393                           ;beat.c: 103:     thresholdExceeded = 0;
 10394  0324  01D6               	clrf	_thresholdExceeded
 10395                           
 10396                           ;beat.c: 105:     if (thresholdCount > 3) {
 10397  0325  0141               	movlb	1	; select bank1
 10398  0326  0839               	movf	(_thresholdCount+1)^(0+128),w
 10399  0327  3A80               	xorlw	128
 10400  0328  0140               	movlb	0	; select bank0
 10401  0329  00A8               	movwf	??_BEAT_task
 10402  032A  3080               	movlw	128
 10403  032B  0228               	subwf	??_BEAT_task,w
 10404  032C  1D03               	skipz
 10405  032D  2B31               	goto	u2465
 10406  032E  3004               	movlw	4
 10407  032F  0141               	movlb	1	; select bank1
 10408  0330  0238               	subwf	_thresholdCount^(0+128),w
 10409  0331                     u2465:	
 10410  0331  1C03               	skipc
 10411  0332  2B4A               	goto	l4009
 10412                           
 10413                           ;beat.c: 106:         threshold += 1;
 10414  0333  3001               	movlw	1
 10415  0334  0140               	movlb	0	; select bank0
 10416  0335  07EA               	addwf	_threshold,f
 10417  0336  3000               	movlw	0
 10418  0337  3DEB               	addwfc	_threshold+1,f
 10419                           
 10420                           ;beat.c: 107:         ADCC_SetUpperThreshold(threshold);
 10421  0338  086B               	movf	_threshold+1,w
 10422  0339  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 10423  033A  086A               	movf	_threshold,w
 10424  033B  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 10425  033C  318E  2662  3182   	fcall	_ADCC_SetUpperThreshold
 10426                           
 10427                           ;beat.c: 108:         thresholdCount = 0;
 10428  033F  0141               	movlb	1	; select bank1
 10429  0340  01B8               	clrf	_thresholdCount^(0+128)
 10430  0341  01B9               	clrf	(_thresholdCount+1)^(0+128)
 10431                           
 10432                           ;beat.c: 111:         lastBeat = CLOCK_getTime();
 10433  0342  318E  2643         	fcall	_CLOCK_getTime
 10434  0344  0140               	movlb	0	; select bank0
 10435  0345  0821               	movf	?_CLOCK_getTime+1,w
 10436  0346  00CC               	movwf	_lastBeat+1
 10437  0347  0820               	movf	?_CLOCK_getTime,w
 10438  0348  00CB               	movwf	_lastBeat
 10439                           
 10440                           ;beat.c: 112:     } else if (CLOCK_getTime() - lastBeat > 1000) {
 10441  0349  0008               	return
 10442  034A                     l4009:	
 10443  034A  318E  2643  3182   	fcall	_CLOCK_getTime
 10444  034D  0140               	movlb	0	; select bank0
 10445  034E  084B               	movf	_lastBeat,w
 10446  034F  0220               	subwf	?_CLOCK_getTime,w
 10447  0350  00A8               	movwf	??_BEAT_task
 10448  0351  084C               	movf	_lastBeat+1,w
 10449  0352  3B21               	subwfb	?_CLOCK_getTime+1,w
 10450  0353  00A9               	movwf	??_BEAT_task+1
 10451  0354  3003               	movlw	3
 10452  0355  0229               	subwf	??_BEAT_task+1,w
 10453  0356  30E9               	movlw	233
 10454  0357  1903               	skipnz
 10455  0358  0228               	subwf	??_BEAT_task,w
 10456  0359  1C03               	skipc
 10457  035A  0008               	return
 10458                           
 10459                           ;beat.c: 113:         threshold -= 1;
 10460  035B  3001               	movlw	1
 10461  035C  02EA               	subwf	_threshold,f
 10462  035D  3000               	movlw	0
 10463  035E  3BEB               	subwfb	_threshold+1,f
 10464                           
 10465                           ;beat.c: 114:         ADCC_SetUpperThreshold(threshold);
 10466  035F  086B               	movf	_threshold+1,w
 10467  0360  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 10468  0361  086A               	movf	_threshold,w
 10469  0362  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 10470  0363  318E  2662         	fcall	_ADCC_SetUpperThreshold
 10471  0365  0008               	return
 10472  0366                     __end_of_BEAT_task:	
 10473                           
 10474                           	psect	text39
 10475  062C                     __ptext39:	
 10476 ;; *************** function ___lwdiv *****************
 10477 ;; Defined at:
 10478 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;  divisor         2    0[BANK0 ] unsigned int 
 10481 ;;  dividend        2    2[BANK0 ] unsigned int 
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;  quotient        2    6[BANK0 ] unsigned int 
 10484 ;;  counter         1    5[BANK0 ] unsigned char 
 10485 ;; Return value:  Size  Location     Type
 10486 ;;                  2    0[BANK0 ] unsigned int 
 10487 ;; Registers used:
 10488 ;;		wreg, status,2, status,0
 10489 ;; Tracked objects:
 10490 ;;		On entry : 0/0
 10491 ;;		On exit  : 0/0
 10492 ;;		Unchanged: 0/0
 10493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10494 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10495 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10496 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10497 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10498 ;;Total ram usage:        8 bytes
 10499 ;; Hardware stack levels used:    1
 10500 ;; Hardware stack levels required when called:    4
 10501 ;; This function calls:
 10502 ;;		Nothing
 10503 ;; This function is called by:
 10504 ;;		_TM1650_fastPrintNum
 10505 ;;		_BEAT_task
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           
 10510                           ;psect for function ___lwdiv
 10511  062C                     ___lwdiv:	
 10512                           
 10513                           ;incstack = 0
 10514                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10515  062C  0140               	movlb	0	; select bank0
 10516  062D  01A6               	clrf	___lwdiv@quotient
 10517  062E  01A7               	clrf	___lwdiv@quotient+1
 10518  062F  0820               	movf	___lwdiv@divisor,w
 10519  0630  0421               	iorwf	___lwdiv@divisor+1,w
 10520  0631  1903               	btfsc	3,2
 10521  0632  2E5C               	goto	l3607
 10522  0633  01A5               	clrf	___lwdiv@counter
 10523  0634  0AA5               	incf	___lwdiv@counter,f
 10524  0635                     l3595:	
 10525  0635  1BA1               	btfsc	___lwdiv@divisor+1,7
 10526  0636  2E41               	goto	l3597
 10527  0637  3001               	movlw	1
 10528  0638                     u2205:	
 10529  0638  35A0               	lslf	___lwdiv@divisor,f
 10530  0639  0DA1               	rlf	___lwdiv@divisor+1,f
 10531  063A  0B89               	decfsz	9,f
 10532  063B  2E38               	goto	u2205
 10533  063C  3001               	movlw	1
 10534  063D  00A4               	movwf	??___lwdiv
 10535  063E  0824               	movf	??___lwdiv,w
 10536  063F  07A5               	addwf	___lwdiv@counter,f
 10537  0640  2E35               	goto	l3595
 10538  0641                     l3597:	
 10539  0641  3001               	movlw	1
 10540  0642                     u2225:	
 10541  0642  35A6               	lslf	___lwdiv@quotient,f
 10542  0643  0DA7               	rlf	___lwdiv@quotient+1,f
 10543  0644  0B89               	decfsz	9,f
 10544  0645  2E42               	goto	u2225
 10545  0646  0821               	movf	___lwdiv@divisor+1,w
 10546  0647  0223               	subwf	___lwdiv@dividend+1,w
 10547  0648  1D03               	skipz
 10548  0649  2E4C               	goto	u2235
 10549  064A  0820               	movf	___lwdiv@divisor,w
 10550  064B  0222               	subwf	___lwdiv@dividend,w
 10551  064C                     u2235:	
 10552  064C  1C03               	skipc
 10553  064D  2E53               	goto	l3603
 10554  064E  0820               	movf	___lwdiv@divisor,w
 10555  064F  02A2               	subwf	___lwdiv@dividend,f
 10556  0650  0821               	movf	___lwdiv@divisor+1,w
 10557  0651  3BA3               	subwfb	___lwdiv@dividend+1,f
 10558  0652  1426               	bsf	___lwdiv@quotient,0
 10559  0653                     l3603:	
 10560  0653  3001               	movlw	1
 10561  0654                     u2245:	
 10562  0654  36A1               	lsrf	___lwdiv@divisor+1,f
 10563  0655  0CA0               	rrf	___lwdiv@divisor,f
 10564  0656  0B89               	decfsz	9,f
 10565  0657  2E54               	goto	u2245
 10566  0658  3001               	movlw	1
 10567  0659  02A5               	subwf	___lwdiv@counter,f
 10568  065A  1D03               	btfss	3,2
 10569  065B  2E41               	goto	l3597
 10570  065C                     l3607:	
 10571  065C  0827               	movf	___lwdiv@quotient+1,w
 10572  065D  00A1               	movwf	?___lwdiv+1
 10573  065E  0826               	movf	___lwdiv@quotient,w
 10574  065F  00A0               	movwf	?___lwdiv
 10575  0660  0008               	return
 10576  0661                     __end_of___lwdiv:	
 10577                           
 10578                           	psect	text40
 10579  0E25                     __ptext40:	
 10580 ;; *************** function _TM1650_isEnabled *****************
 10581 ;; Defined at:
 10582 ;;		line 70 in file "tm1650.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;		None
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;		None
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      _Bool 
 10589 ;; Registers used:
 10590 ;;		wreg
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10600 ;;Total ram usage:        0 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:    4
 10603 ;; This function calls:
 10604 ;;		Nothing
 10605 ;; This function is called by:
 10606 ;;		_BEAT_task
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           
 10611                           ;psect for function _TM1650_isEnabled
 10612  0E25                     _TM1650_isEnabled:	
 10613                           
 10614                           ;tm1650.c: 71:     return isOn;
 10615                           
 10616                           ;incstack = 0
 10617                           ; Regs used in _TM1650_isEnabled: [wreg]
 10618  0E25  0140               	movlb	0	; select bank0
 10619  0E26  085C               	movf	_isOn,w
 10620  0E27  0008               	return
 10621  0E28                     __end_of_TM1650_isEnabled:	
 10622                           
 10623                           	psect	text41
 10624  0E43                     __ptext41:	
 10625 ;; *************** function _CLOCK_getTime *****************
 10626 ;; Defined at:
 10627 ;;		line 17 in file "clock.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;		None
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;		None
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  2    0[BANK0 ] unsigned short 
 10634 ;; Registers used:
 10635 ;;		wreg
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10645 ;;Total ram usage:        2 bytes
 10646 ;; Hardware stack levels used:    1
 10647 ;; Hardware stack levels required when called:    4
 10648 ;; This function calls:
 10649 ;;		Nothing
 10650 ;; This function is called by:
 10651 ;;		_LED_task
 10652 ;;		_BUTTONS_task
 10653 ;;		_CONTROLLER_task
 10654 ;;		_BEAT_task
 10655 ;;		_Blink2
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           
 10660                           ;psect for function _CLOCK_getTime
 10661  0E43                     _CLOCK_getTime:	
 10662                           
 10663                           ;clock.c: 18:     return currentTime;
 10664                           
 10665                           ;incstack = 0
 10666                           ; Regs used in _CLOCK_getTime: [wreg]
 10667  0E43  0140               	movlb	0	; select bank0
 10668  0E44  084E               	movf	_currentTime+1,w
 10669  0E45  00A1               	movwf	?_CLOCK_getTime+1
 10670  0E46  084D               	movf	_currentTime,w
 10671  0E47  00A0               	movwf	?_CLOCK_getTime
 10672  0E48  0008               	return
 10673  0E49                     __end_of_CLOCK_getTime:	
 10674                           
 10675                           	psect	text42
 10676  0EFD                     __ptext42:	
 10677 ;; *************** function _BEAT_init *****************
 10678 ;; Defined at:
 10679 ;;		line 31 in file "beat.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;		None
 10682 ;; Auto vars:     Size  Location     Type
 10683 ;;		None
 10684 ;; Return value:  Size  Location     Type
 10685 ;;                  1    wreg      void 
 10686 ;; Registers used:
 10687 ;;		wreg, status,2, status,0, pclath, cstack
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10697 ;;Total ram usage:        0 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; Hardware stack levels required when called:    5
 10700 ;; This function calls:
 10701 ;;		_ADCC_SetADTIInterruptHandler
 10702 ;;		_ADCC_SetUpperThreshold
 10703 ;;		_ADCC_StartConversion
 10704 ;; This function is called by:
 10705 ;;		_main
 10706 ;; This function uses a non-reentrant model
 10707 ;;
 10708                           
 10709                           
 10710                           ;psect for function _BEAT_init
 10711  0EFD                     _BEAT_init:	
 10712                           
 10713                           ;beat.c: 32:     ADCC_SetUpperThreshold(threshold);
 10714                           
 10715                           ;incstack = 0
 10716                           ; Regs used in _BEAT_init: [wreg+status,2+status,0+pclath+cstack]
 10717  0EFD  0140               	movlb	0	; select bank0
 10718  0EFE  086B               	movf	_threshold+1,w
 10719  0EFF  00A1               	movwf	ADCC_SetUpperThreshold@upperThreshold+1
 10720  0F00  086A               	movf	_threshold,w
 10721  0F01  00A0               	movwf	ADCC_SetUpperThreshold@upperThreshold
 10722  0F02  318E  2662  318E   	fcall	_ADCC_SetUpperThreshold
 10723                           
 10724                           ;beat.c: 33:     ADCC_SetADTIInterruptHandler(adcThresholdHandler);
 10725  0F05  3028               	movlw	low _adcThresholdHandler
 10726  0F06  0140               	movlb	0	; select bank0
 10727  0F07  00A0               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler
 10728  0F08  300E               	movlw	high _adcThresholdHandler
 10729  0F09  00A1               	movwf	ADCC_SetADTIInterruptHandler@InterruptHandler+1
 10730  0F0A  318E  2659  318E   	fcall	_ADCC_SetADTIInterruptHandler
 10731                           
 10732                           ;beat.c: 34:     ADCC_StartConversion(0x0F);
 10733  0F0D  300F               	movlw	15
 10734  0F0E  318E  266B         	fcall	_ADCC_StartConversion
 10735  0F10  0008               	return
 10736  0F11                     __end_of_BEAT_init:	
 10737                           
 10738                           	psect	text43
 10739  0E6B                     __ptext43:	
 10740 ;; *************** function _ADCC_StartConversion *****************
 10741 ;; Defined at:
 10742 ;;		line 121 in file "mcc_generated_files/adcc.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;  channel         1    wreg     enum E10867
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;  channel         1    0[BANK0 ] enum E10867
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      void 
 10749 ;; Registers used:
 10750 ;;		wreg
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10759 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10760 ;;Total ram usage:        1 bytes
 10761 ;; Hardware stack levels used:    1
 10762 ;; Hardware stack levels required when called:    4
 10763 ;; This function calls:
 10764 ;;		Nothing
 10765 ;; This function is called by:
 10766 ;;		_BEAT_init
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           
 10771                           ;psect for function _ADCC_StartConversion
 10772  0E6B                     _ADCC_StartConversion:	
 10773                           
 10774                           ;incstack = 0
 10775                           ; Regs used in _ADCC_StartConversion: [wreg]
 10776                           ;ADCC_StartConversion@channel stored from wreg
 10777  0E6B  0140               	movlb	0	; select bank0
 10778  0E6C  00A0               	movwf	ADCC_StartConversion@channel
 10779                           
 10780                           ;mcc_generated_files/adcc.c: 121: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 122: {;mcc_generated_files/adcc.c: 124:     ADPCH = channel;
 10781  0E6D  0820               	movf	ADCC_StartConversion@channel,w
 10782  0E6E  0141               	movlb	1	; select bank1
 10783  0E6F  009F               	movwf	31	;volatile
 10784                           
 10785                           ;mcc_generated_files/adcc.c: 127:     ADCON0bits.ADON = 1;
 10786  0E70  0142               	movlb	2	; select bank2
 10787  0E71  1791               	bsf	17,7	;volatile
 10788                           
 10789                           ;mcc_generated_files/adcc.c: 130:     ADCON0bits.ADGO = 1;
 10790  0E72  1411               	bsf	17,0	;volatile
 10791  0E73  0008               	return
 10792  0E74                     __end_of_ADCC_StartConversion:	
 10793                           
 10794                           	psect	text44
 10795  0E62                     __ptext44:	
 10796 ;; *************** function _ADCC_SetUpperThreshold *****************
 10797 ;; Defined at:
 10798 ;;		line 251 in file "mcc_generated_files/adcc.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;  upperThresho    2    0[BANK0 ] unsigned short 
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;		None
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  1    wreg      void 
 10805 ;; Registers used:
 10806 ;;		wreg, status,2
 10807 ;; Tracked objects:
 10808 ;;		On entry : 0/0
 10809 ;;		On exit  : 0/0
 10810 ;;		Unchanged: 0/0
 10811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10816 ;;Total ram usage:        2 bytes
 10817 ;; Hardware stack levels used:    1
 10818 ;; Hardware stack levels required when called:    4
 10819 ;; This function calls:
 10820 ;;		Nothing
 10821 ;; This function is called by:
 10822 ;;		_BEAT_init
 10823 ;;		_BEAT_task
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           
 10828                           ;psect for function _ADCC_SetUpperThreshold
 10829  0E62                     _ADCC_SetUpperThreshold:	
 10830                           
 10831                           ;mcc_generated_files/adcc.c: 251: void ADCC_SetUpperThreshold(uint16_t upperThreshold);m
      +                          cc_generated_files/adcc.c: 252: {;mcc_generated_files/adcc.c: 254:     ADUTHH = upperThr
      +                          eshold >> 8;
 10832                           
 10833                           ;incstack = 0
 10834                           ; Regs used in _ADCC_SetUpperThreshold: [wreg+status,2]
 10835  0E62  0140               	movlb	0	; select bank0
 10836  0E63  0821               	movf	ADCC_SetUpperThreshold@upperThreshold+1,w
 10837  0E64  0141               	movlb	1	; select bank1
 10838  0E65  008F               	movwf	15	;volatile
 10839                           
 10840                           ;mcc_generated_files/adcc.c: 255:     ADUTHL = upperThreshold;
 10841  0E66  0140               	movlb	0	; select bank0
 10842  0E67  0820               	movf	ADCC_SetUpperThreshold@upperThreshold,w
 10843  0E68  0141               	movlb	1	; select bank1
 10844  0E69  008E               	movwf	14	;volatile
 10845  0E6A  0008               	return
 10846  0E6B                     __end_of_ADCC_SetUpperThreshold:	
 10847                           
 10848                           	psect	text45
 10849  0E59                     __ptext45:	
 10850 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 10851 ;; Defined at:
 10852 ;;		line 317 in file "mcc_generated_files/adcc.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 10855 ;;		 -> adcThresholdHandler(1), ADCC_DefaultInterruptHandler(1), 
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;		None
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  1    wreg      void 
 10860 ;; Registers used:
 10861 ;;		wreg
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10867 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10870 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10871 ;;Total ram usage:        2 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; Hardware stack levels required when called:    4
 10874 ;; This function calls:
 10875 ;;		Nothing
 10876 ;; This function is called by:
 10877 ;;		_ADCC_Initialize
 10878 ;;		_BEAT_init
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           
 10883                           ;psect for function _ADCC_SetADTIInterruptHandler
 10884  0E59                     _ADCC_SetADTIInterruptHandler:	
 10885                           
 10886                           ;mcc_generated_files/adcc.c: 318:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 10887                           
 10888                           ;incstack = 0
 10889                           ; Regs used in _ADCC_SetADTIInterruptHandler: [wreg]
 10890  0E59  0140               	movlb	0	; select bank0
 10891  0E5A  0821               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler+1,w
 10892  0E5B  0141               	movlb	1	; select bank1
 10893  0E5C  00CF               	movwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128)
 10894  0E5D  0140               	movlb	0	; select bank0
 10895  0E5E  0820               	movf	ADCC_SetADTIInterruptHandler@InterruptHandler,w
 10896  0E5F  0141               	movlb	1	; select bank1
 10897  0E60  00CE               	movwf	_ADCC_ADTI_InterruptHandler^(0+128)
 10898  0E61  0008               	return
 10899  0E62                     __end_of_ADCC_SetADTIInterruptHandler:	
 10900                           
 10901                           	psect	intentry
 10902  0004                     __pintentry:	
 10903 ;; *************** function _INTERRUPT_InterruptManager *****************
 10904 ;; Defined at:
 10905 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;		None
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;		None
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10923 ;;Total ram usage:        0 bytes
 10924 ;; Hardware stack levels used:    1
 10925 ;; Hardware stack levels required when called:    3
 10926 ;; This function calls:
 10927 ;;		Absolute function
 10928 ;;		_ADCC_ThresholdISR
 10929 ;;		_DMX_ISR
 10930 ;;		_EUSART1_Receive_ISR
 10931 ;;		_EUSART1_Transmit_ISR
 10932 ;;		_I2C1_BusCollisionISR
 10933 ;;		_I2C1_ISR
 10934 ;;		_TMR0_ISR
 10935 ;; This function is called by:
 10936 ;;		Interrupt level 1
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940  0004                     _INTERRUPT_InterruptManager:	
 10941                           
 10942                           ;incstack = 0
 10943  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10944                           
 10945                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10946  0005  3180               	pagesel	$
 10947                           
 10948                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 10949  0006  014E               	movlb	14	; select bank14
 10950  0007  1A96               	btfsc	22,5	;volatile
 10951  0008  1E8C               	btfss	12,5	;volatile
 10952  0009  280E               	goto	i1l280
 10953                           
 10954                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 10955  000A  318E  26DF  3180   	fcall	_TMR0_ISR
 10956                           
 10957                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 10958  000D  2837               	goto	i1l294
 10959  000E                     i1l280:	
 10960                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 10961                           
 10962  000E  1F0B               	btfss	11,6	;volatile
 10963  000F  2837               	goto	i1l294
 10964                           
 10965                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 10966  0010  1899               	btfsc	25,1	;volatile
 10967  0011  1C8F               	btfss	15,1	;volatile
 10968  0012  2817               	goto	i1l283
 10969                           
 10970                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             I2C1_BusCollisionISR();
 10971  0013  318E  2622  3180   	fcall	_I2C1_BusCollisionISR
 10972                           
 10973                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 10974  0016  2837               	goto	i1l294
 10975  0017                     i1l283:	
 10976                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 10977                           
 10978  0017  1819               	btfsc	25,0	;volatile
 10979  0018  1C0F               	btfss	15,0	;volatile
 10980  0019  281E               	goto	i1l285
 10981                           
 10982                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             I2C1_ISR();
 10983  001A  3180  2089  3180   	fcall	_I2C1_ISR
 10984                           
 10985                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 10986  001D  2837               	goto	i1l294
 10987  001E                     i1l285:	
 10988                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TX1IE == 1 && PIR
      +                          3bits.TX1IF == 1)
 10989                           
 10990  001E  1A19               	btfsc	25,4	;volatile
 10991  001F  1E0F               	btfss	15,4	;volatile
 10992  0020  2828               	goto	i1l287
 10993                           
 10994                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART1_TxDefaultInterruptHandler();
 10995  0021  0141               	movlb	1	; select bank1
 10996  0022  085B               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^(0+128),w
 10997  0023  008A               	movwf	10
 10998  0024  085A               	movf	_EUSART1_TxDefaultInterruptHandler^(0+128),w
 10999  0025  000A               	callw
 11000  0026  3180               	pagesel	$
 11001                           
 11002                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 11003  0027  2837               	goto	i1l294
 11004  0028                     i1l287:	
 11005                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
 11006                           
 11007  0028  1A99               	btfsc	25,5	;volatile
 11008  0029  1E8F               	btfss	15,5	;volatile
 11009  002A  2832               	goto	i1l289
 11010                           
 11011                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART1_RxDefaultInterruptHandler();
 11012  002B  0141               	movlb	1	; select bank1
 11013  002C  0859               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^(0+128),w
 11014  002D  008A               	movwf	10
 11015  002E  0858               	movf	_EUSART1_RxDefaultInterruptHandler^(0+128),w
 11016  002F  000A               	callw
 11017  0030  3180               	pagesel	$
 11018                           
 11019                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 11020  0031  2837               	goto	i1l294
 11021  0032                     i1l289:	
 11022                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.ADTIE == 1 && PIR
      +                          1bits.ADTIF == 1)
 11023                           
 11024  0032  1897               	btfsc	23,1	;volatile
 11025  0033  1C8D               	btfss	13,1	;volatile
 11026  0034  2837               	goto	i1l294
 11027                           
 11028                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             ADCC_ThresholdISR();
 11029  0035  318E  26D2         	fcall	_ADCC_ThresholdISR
 11030  0037                     i1l294:	
 11031                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 11032                           
 11033  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11034  0038  0009               	retfie
 11035  0039                     __end_of_INTERRUPT_InterruptManager:	
 11036                           
 11037                           	psect	text47
 11038  0EDF                     __ptext47:	
 11039 ;; *************** function _TMR0_ISR *****************
 11040 ;; Defined at:
 11041 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      void 
 11048 ;; Registers used:
 11049 ;;		wreg, status,2, status,0, pclath, cstack
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11059 ;;Total ram usage:        0 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:    1
 11062 ;; This function calls:
 11063 ;;		Absolute function
 11064 ;;		_CLOCK_timerCallback
 11065 ;;		_TMR0_DefaultInterruptHandler
 11066 ;; This function is called by:
 11067 ;;		_INTERRUPT_InterruptManager
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           
 11072                           ;psect for function _TMR0_ISR
 11073  0EDF                     _TMR0_ISR:	
 11074                           
 11075                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 11076                           
 11077                           ;incstack = 0
 11078                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11079  0EDF  014E               	movlb	14	; select bank14
 11080  0EE0  128C               	bcf	12,5	;volatile
 11081                           
 11082                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 11083  0EE1  0141               	movlb	1	; select bank1
 11084  0EE2  0850               	movf	_TMR0_InterruptHandler^(0+128),w
 11085  0EE3  0451               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 11086  0EE4  1903               	btfsc	3,2
 11087  0EE5  0008               	return
 11088                           
 11089                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 11090  0EE6  0851               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 11091  0EE7  008A               	movwf	10
 11092  0EE8  0850               	movf	_TMR0_InterruptHandler^(0+128),w
 11093  0EE9  000A               	callw
 11094  0EEA  318E               	pagesel	$
 11095  0EEB  0008               	return
 11096  0EEC                     __end_of_TMR0_ISR:	
 11097                           
 11098                           	psect	text48
 11099  0E3D                     __ptext48:	
 11100 ;; *************** function _CLOCK_timerCallback *****************
 11101 ;; Defined at:
 11102 ;;		line 21 in file "clock.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;		None
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;		None
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      void 
 11109 ;; Registers used:
 11110 ;;		wreg
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11120 ;;Total ram usage:        0 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; This function calls:
 11123 ;;		Nothing
 11124 ;; This function is called by:
 11125 ;;		_CLOCK_init
 11126 ;;		_TMR0_ISR
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           
 11131                           ;psect for function _CLOCK_timerCallback
 11132  0E3D                     _CLOCK_timerCallback:	
 11133                           
 11134                           ;clock.c: 22:     currentTime++;
 11135                           
 11136                           ;incstack = 0
 11137                           ; Regs used in _CLOCK_timerCallback: [wreg]
 11138  0E3D  3001               	movlw	1
 11139  0E3E  0140               	movlb	0	; select bank0
 11140  0E3F  07CD               	addwf	_currentTime,f
 11141  0E40  3000               	movlw	0
 11142  0E41  3DCE               	addwfc	_currentTime+1,f
 11143  0E42  0008               	return
 11144  0E43                     __end_of_CLOCK_timerCallback:	
 11145                           
 11146                           	psect	text49
 11147  0E1E                     __ptext49:	
 11148 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 11149 ;; Defined at:
 11150 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;		None
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;		None
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  1    wreg      void 
 11157 ;; Registers used:
 11158 ;;		None
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11168 ;;Total ram usage:        0 bytes
 11169 ;; Hardware stack levels used:    1
 11170 ;; This function calls:
 11171 ;;		Nothing
 11172 ;; This function is called by:
 11173 ;;		_TMR0_Initialize
 11174 ;;		_TMR0_ISR
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           
 11178                           
 11179                           ;psect for function _TMR0_DefaultInterruptHandler
 11180  0E1E                     _TMR0_DefaultInterruptHandler:	
 11181                           
 11182                           ;incstack = 0
 11183                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 11184  0E1E  0008               	return
 11185  0E1F                     __end_of_TMR0_DefaultInterruptHandler:	
 11186                           
 11187                           	psect	text50
 11188  0089                     __ptext50:	
 11189 ;; *************** function _I2C1_ISR *****************
 11190 ;; Defined at:
 11191 ;;		line 235 in file "mcc_generated_files/i2c1.c"
 11192 ;; Parameters:    Size  Location     Type
 11193 ;;		None
 11194 ;; Auto vars:     Size  Location     Type
 11195 ;;		None
 11196 ;; Return value:  Size  Location     Type
 11197 ;;                  1    wreg      void 
 11198 ;; Registers used:
 11199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11207 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11208 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11209 ;;Total ram usage:        4 bytes
 11210 ;; Hardware stack levels used:    1
 11211 ;; Hardware stack levels required when called:    1
 11212 ;; This function calls:
 11213 ;;		_I2C1_FunctionComplete
 11214 ;;		_I2C1_Stop
 11215 ;; This function is called by:
 11216 ;;		_INTERRUPT_InterruptManager
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           
 11221                           ;psect for function _I2C1_ISR
 11222  0089                     _I2C1_ISR:	
 11223                           
 11224                           ;mcc_generated_files/i2c1.c: 238:     static uint8_t *pi2c_buf_ptr;;mcc_generated_files/
      +                          i2c1.c: 239:     static uint16_t i2c_address = 0;;mcc_generated_files/i2c1.c: 240:     s
      +                          tatic uint8_t i2c_bytes_left = 0;;mcc_generated_files/i2c1.c: 241:     static uint8_t i2
      +                          c_10bit_address_restart = 0;;mcc_generated_files/i2c1.c: 243:     PIR3bits.SSP1IF = 0;
 11225                           
 11226                           ;incstack = 0
 11227                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11228  0089  014E               	movlb	14	; select bank14
 11229  008A  100F               	bcf	15,0	;volatile
 11230                           
 11231                           ;mcc_generated_files/i2c1.c: 247:     if(SSP1CON1bits.WCOL)
 11232  008B  0143               	movlb	3	; select bank3
 11233  008C  1F90               	btfss	16,7	;volatile
 11234  008D  29A5               	goto	i1l3215
 11235                           
 11236                           ;mcc_generated_files/i2c1.c: 248:     {;mcc_generated_files/i2c1.c: 250:         SSP1CON
      +                          1bits.WCOL = 0;
 11237  008E  1390               	bcf	16,7	;volatile
 11238                           
 11239                           ;mcc_generated_files/i2c1.c: 251:         i2c1_state = S_MASTER_IDLE;
 11240  008F  0140               	movlb	0	; select bank0
 11241  0090  01E4               	clrf	_i2c1_state
 11242                           
 11243                           ;mcc_generated_files/i2c1.c: 252:         *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL
      +                          ;
 11244  0091  0861               	movf	_p_i2c1_current,w
 11245  0092  3E02               	addlw	2
 11246  0093  0086               	movwf	6
 11247  0094  0187               	clrf	7
 11248  0095  0801               	movf	1,w
 11249  0096  0086               	movwf	6
 11250  0097  0187               	clrf	7
 11251  0098  0181               	clrf	1
 11252  0099  0A81               	incf	1,f
 11253                           
 11254                           ;mcc_generated_files/i2c1.c: 255:         p_i2c1_current = ((void*)0);
 11255  009A  01E1               	clrf	_p_i2c1_current
 11256  009B  0008               	return
 11257  009C                     i1l402:	
 11258                           ;mcc_generated_files/i2c1.c: 262:     {;mcc_generated_files/i2c1.c: 263:         case S_
      +                          MASTER_IDLE:
 11259                           
 11260                           
 11261                           ;mcc_generated_files/i2c1.c: 265:             if(i2c1_object.trStatus.s.empty != 1)
 11262  009C  18C8               	btfsc	_i2c1_object+2,1
 11263  009D  0008               	return
 11264                           
 11265                           ;mcc_generated_files/i2c1.c: 266:             {;mcc_generated_files/i2c1.c: 268:        
      +                                   p_i2c1_current = i2c1_object.pTrHead;
 11266  009E  0847               	movf	low ((_i2c1_object| 0+1)),w
 11267  009F  00F8               	movwf	??_I2C1_ISR
 11268  00A0  0878               	movf	??_I2C1_ISR,w
 11269  00A1  00E1               	movwf	_p_i2c1_current
 11270                           
 11271                           ;mcc_generated_files/i2c1.c: 269:                 i2c1_trb_count = i2c1_object.pTrHead->
      +                          count;
 11272  00A2  0847               	movf	low ((_i2c1_object| 0+1)),w
 11273  00A3  0086               	movwf	6
 11274  00A4  0187               	clrf	7
 11275  00A5  0801               	movf	1,w
 11276  00A6  00F8               	movwf	??_I2C1_ISR
 11277  00A7  0878               	movf	??_I2C1_ISR,w
 11278  00A8  00E3               	movwf	_i2c1_trb_count
 11279                           
 11280                           ;mcc_generated_files/i2c1.c: 270:                 p_i2c1_trb_current = i2c1_object.pTrHe
      +                          ad->ptrb_list;
 11281  00A9  0847               	movf	low ((_i2c1_object| 0+1)),w
 11282  00AA  0086               	movwf	6
 11283  00AB  0187               	clrf	7
 11284  00AC  3F41               	moviw [1]fsr1
 11285  00AD  00E2               	movwf	_p_i2c1_trb_current
 11286                           
 11287                           ;mcc_generated_files/i2c1.c: 272:                 i2c1_object.pTrHead++;
 11288  00AE  3003               	movlw	3
 11289  00AF  00F8               	movwf	??_I2C1_ISR
 11290  00B0  0878               	movf	??_I2C1_ISR,w
 11291  00B1  07C7               	addwf	low ((_i2c1_object| 0+1)),f
 11292                           
 11293                           ;mcc_generated_files/i2c1.c: 275:                 if(i2c1_object.pTrHead == (i2c1_tr_que
      +                          ue + 1))
 11294  00B2  0847               	movf	low ((_i2c1_object| 0+1)),w
 11295  00B3  3A6A               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 11296  00B4  1D03               	skipz
 11297  00B5  28BA               	goto	i1l3103
 11298                           
 11299                           ;mcc_generated_files/i2c1.c: 276:                 {;mcc_generated_files/i2c1.c: 278:    
      +                                           i2c1_object.pTrHead = i2c1_tr_queue;
 11300  00B6  3067               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 11301  00B7  00F8               	movwf	??_I2C1_ISR
 11302  00B8  0878               	movf	??_I2C1_ISR,w
 11303  00B9  00C7               	movwf	low ((_i2c1_object| 0+1))
 11304  00BA                     i1l3103:	
 11305                           
 11306                           ;mcc_generated_files/i2c1.c: 283:                 i2c1_object.trStatus.s.full = 0;
 11307  00BA  1048               	bcf	_i2c1_object+2,0
 11308                           
 11309                           ;mcc_generated_files/i2c1.c: 286:                 if(i2c1_object.pTrHead == i2c1_object.
      +                          pTrTail)
 11310  00BB  0847               	movf	low ((_i2c1_object| 0+1)),w
 11311  00BC  0646               	xorwf	_i2c1_object,w
 11312  00BD  1903               	btfsc	3,2
 11313                           
 11314                           ;mcc_generated_files/i2c1.c: 287:                 {;mcc_generated_files/i2c1.c: 289:    
      +                                           i2c1_object.trStatus.s.empty = 1;
 11315  00BE  14C8               	bsf	_i2c1_object+2,1
 11316                           
 11317                           ;mcc_generated_files/i2c1.c: 293:                 SSP1CON2bits.SEN = 1;
 11318                           
 11319                           ;mcc_generated_files/i2c1.c: 290:                 }
 11320  00BF  0143               	movlb	3	; select bank3
 11321  00C0  1411               	bsf	17,0	;volatile
 11322  00C1                     i1l3107:	
 11323                           
 11324                           ;mcc_generated_files/i2c1.c: 296:                 i2c1_state = S_MASTER_SEND_ADDR;
 11325  00C1  3002               	movlw	2
 11326  00C2  00F8               	movwf	??_I2C1_ISR
 11327  00C3  0878               	movf	??_I2C1_ISR,w
 11328  00C4  0140               	movlb	0	; select bank0
 11329  00C5  00E4               	movwf	_i2c1_state
 11330  00C6  0008               	return
 11331  00C7                     i1l407:	
 11332                           ;mcc_generated_files/i2c1.c: 301:         case S_MASTER_RESTART:
 11333                           
 11334  00C7  294E               	goto	i1l428
 11335  00C8                     i1l408:	
 11336                           ;mcc_generated_files/i2c1.c: 313:         case S_MASTER_SEND_ADDR_10BIT_LSB:
 11337                           
 11338                           ;mcc_generated_files/i2c1.c: 306:             SSP1CON2bits.RSEN = 1;
 11339                           
 11340                           
 11341                           ;mcc_generated_files/i2c1.c: 315:             if(SSP1CON2bits.ACKSTAT)
 11342  00C8  0143               	movlb	3	; select bank3
 11343  00C9  1F11               	btfss	17,6	;volatile
 11344  00CA  28D4               	goto	i1l3115
 11345                           
 11346                           ;mcc_generated_files/i2c1.c: 316:             {;mcc_generated_files/i2c1.c: 317:        
      +                                   i2c1_object.i2cErrors++;
 11347  00CB  3001               	movlw	1
 11348  00CC  00F8               	movwf	??_I2C1_ISR
 11349  00CD  0878               	movf	??_I2C1_ISR,w
 11350  00CE  0140               	movlb	0	; select bank0
 11351  00CF  07CA               	addwf	_i2c1_object+4,f
 11352                           
 11353                           ;mcc_generated_files/i2c1.c: 318:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 11354  00D0  3004               	movlw	4
 11355  00D1  3187  27E8         	fcall	_I2C1_Stop
 11356                           
 11357                           ;mcc_generated_files/i2c1.c: 319:             }
 11358  00D3  0008               	return
 11359  00D4                     i1l3115:	
 11360                           
 11361                           ;mcc_generated_files/i2c1.c: 321:             {;mcc_generated_files/i2c1.c: 323:        
      +                                   SSP1BUF = (i2c_address >> 1) & 0x00FF;
 11362  00D4  0875               	movf	I2C1_ISR@i2c_address+1,w
 11363  00D5  00F9               	movwf	??_I2C1_ISR+1
 11364  00D6  0874               	movf	I2C1_ISR@i2c_address,w
 11365  00D7  00F8               	movwf	??_I2C1_ISR
 11366  00D8  36F9               	lsrf	??_I2C1_ISR+1,f
 11367  00D9  0CF8               	rrf	??_I2C1_ISR,f
 11368  00DA  0878               	movf	??_I2C1_ISR,w
 11369  00DB  008C               	movwf	12	;volatile
 11370                           
 11371                           ;mcc_generated_files/i2c1.c: 326:                 if(i2c_address & 0x01)
 11372  00DC  1C74               	btfss	I2C1_ISR@i2c_address,0
 11373  00DD  28E4               	goto	i1l3121
 11374                           
 11375                           ;mcc_generated_files/i2c1.c: 327:                 {;mcc_generated_files/i2c1.c: 330:    
      +                                           i2c1_state = S_MASTER_10BIT_RESTART;
 11376  00DE  300B               	movlw	11
 11377  00DF  00F8               	movwf	??_I2C1_ISR
 11378  00E0  0878               	movf	??_I2C1_ISR,w
 11379  00E1  0140               	movlb	0	; select bank0
 11380  00E2  00E4               	movwf	_i2c1_state
 11381                           
 11382                           ;mcc_generated_files/i2c1.c: 331:                 }
 11383  00E3  0008               	return
 11384  00E4                     i1l3121:	
 11385                           
 11386                           ;mcc_generated_files/i2c1.c: 333:                 {;mcc_generated_files/i2c1.c: 335:    
      +                                           i2c1_state = S_MASTER_SEND_DATA;
 11387  00E4  3003               	movlw	3
 11388  00E5  00F8               	movwf	??_I2C1_ISR
 11389  00E6  0878               	movf	??_I2C1_ISR,w
 11390  00E7  0140               	movlb	0	; select bank0
 11391  00E8  00E4               	movwf	_i2c1_state
 11392  00E9  0008               	return
 11393  00EA                     i1l413:	
 11394                           ;mcc_generated_files/i2c1.c: 341:         case S_MASTER_10BIT_RESTART:
 11395                           
 11396                           
 11397                           ;mcc_generated_files/i2c1.c: 343:             if(SSP1CON2bits.ACKSTAT)
 11398  00EA  0143               	movlb	3	; select bank3
 11399  00EB  1F11               	btfss	17,6	;volatile
 11400  00EC  28F6               	goto	i1l414
 11401                           
 11402                           ;mcc_generated_files/i2c1.c: 344:             {;mcc_generated_files/i2c1.c: 345:        
      +                                   i2c1_object.i2cErrors++;
 11403  00ED  3001               	movlw	1
 11404  00EE  00F8               	movwf	??_I2C1_ISR
 11405  00EF  0878               	movf	??_I2C1_ISR,w
 11406  00F0  0140               	movlb	0	; select bank0
 11407  00F1  07CA               	addwf	_i2c1_object+4,f
 11408                           
 11409                           ;mcc_generated_files/i2c1.c: 346:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 11410  00F2  3004               	movlw	4
 11411  00F3  3187  27E8         	fcall	_I2C1_Stop
 11412                           
 11413                           ;mcc_generated_files/i2c1.c: 347:             }
 11414  00F5  0008               	return
 11415  00F6                     i1l414:	
 11416                           ;mcc_generated_files/i2c1.c: 348:             else
 11417                           
 11418                           
 11419                           ;mcc_generated_files/i2c1.c: 349:             {;mcc_generated_files/i2c1.c: 352:        
      +                                   SSP1CON2bits.RSEN = 1;
 11420  00F6  1491               	bsf	17,1	;volatile
 11421                           
 11422                           ;mcc_generated_files/i2c1.c: 356:                 i2c_address = 0x00F0 | ((i2c_address >
      +                          > 8) & 0x0006);
 11423  00F7  0875               	movf	I2C1_ISR@i2c_address+1,w
 11424  00F8  00F9               	movwf	??_I2C1_ISR+1
 11425  00F9  0874               	movf	I2C1_ISR@i2c_address,w
 11426  00FA  00F8               	movwf	??_I2C1_ISR
 11427  00FB  0879               	movf	??_I2C1_ISR+1,w
 11428  00FC  00F8               	movwf	??_I2C1_ISR
 11429  00FD  01F9               	clrf	??_I2C1_ISR+1
 11430  00FE  3006               	movlw	6
 11431  00FF  0578               	andwf	??_I2C1_ISR,w
 11432  0100  00FA               	movwf	??_I2C1_ISR+2
 11433  0101  3000               	movlw	0
 11434  0102  0579               	andwf	??_I2C1_ISR+1,w
 11435  0103  00FB               	movwf	??_I2C1_ISR+3
 11436  0104  30F0               	movlw	240
 11437  0105  047A               	iorwf	??_I2C1_ISR+2,w
 11438  0106  00F4               	movwf	I2C1_ISR@i2c_address
 11439  0107  3000               	movlw	0
 11440  0108  047B               	iorwf	??_I2C1_ISR+3,w
 11441  0109  00F5               	movwf	I2C1_ISR@i2c_address+1
 11442                           
 11443                           ;mcc_generated_files/i2c1.c: 359:                 i2c_address |= 0x0001;
 11444  010A  1474               	bsf	I2C1_ISR@i2c_address,0
 11445                           
 11446                           ;mcc_generated_files/i2c1.c: 362:                 i2c_10bit_address_restart = 1;
 11447  010B  0140               	movlb	0	; select bank0
 11448  010C  01DE               	clrf	I2C1_ISR@i2c_10bit_address_restart
 11449  010D  0ADE               	incf	I2C1_ISR@i2c_10bit_address_restart,f
 11450  010E  28C1               	goto	i1l3107
 11451  010F                     i1l3135:	
 11452                           
 11453                           ;mcc_generated_files/i2c1.c: 383:             if(i2c_10bit_address_restart != 1)
 11454  010F  035E               	decf	I2C1_ISR@i2c_10bit_address_restart,w
 11455  0110  1903               	btfsc	3,2
 11456  0111  2923               	goto	i1l3155
 11457                           
 11458                           ;mcc_generated_files/i2c1.c: 384:             {;mcc_generated_files/i2c1.c: 386:        
      +                                   i2c_address = p_i2c1_trb_current->address;
 11459  0112  0862               	movf	_p_i2c1_trb_current,w
 11460  0113  0086               	movwf	6
 11461  0114  0187               	clrf	7
 11462  0115  3F40               	moviw [0]fsr1
 11463  0116  00F4               	movwf	I2C1_ISR@i2c_address
 11464  0117  3F41               	moviw [1]fsr1
 11465  0118  00F5               	movwf	I2C1_ISR@i2c_address+1
 11466                           
 11467                           ;mcc_generated_files/i2c1.c: 387:                 pi2c_buf_ptr = p_i2c1_trb_current->pbu
      +                          ffer;
 11468  0119  0862               	movf	_p_i2c1_trb_current,w
 11469  011A  0086               	movwf	6
 11470  011B  0187               	clrf	7
 11471  011C  3F43               	moviw [3]fsr1
 11472  011D  00E0               	movwf	I2C1_ISR@pi2c_buf_ptr
 11473                           
 11474                           ;mcc_generated_files/i2c1.c: 388:                 i2c_bytes_left = p_i2c1_trb_current->l
      +                          ength;
 11475  011E  0862               	movf	_p_i2c1_trb_current,w
 11476  011F  0086               	movwf	6
 11477  0120  0187               	clrf	7
 11478  0121  3F42               	moviw [2]fsr1
 11479  0122  00DF               	movwf	I2C1_ISR@i2c_bytes_left
 11480  0123                     i1l3155:	
 11481                           
 11482                           ;mcc_generated_files/i2c1.c: 412:             {;mcc_generated_files/i2c1.c: 414:        
      +                                   SSP1BUF = i2c_address;
 11483  0123  0874               	movf	I2C1_ISR@i2c_address,w
 11484  0124  0143               	movlb	3	; select bank3
 11485  0125  008C               	movwf	12	;volatile
 11486                           
 11487                           ;mcc_generated_files/i2c1.c: 415:                 if(i2c_address & 0x01)
 11488  0126  1C74               	btfss	I2C1_ISR@i2c_address,0
 11489  0127  28E4               	goto	i1l3121
 11490                           
 11491                           ;mcc_generated_files/i2c1.c: 416:                 {;mcc_generated_files/i2c1.c: 418:    
      +                                           i2c1_state = S_MASTER_ACK_ADDR;
 11492  0128  3005               	movlw	5
 11493  0129  00F8               	movwf	??_I2C1_ISR
 11494  012A  0878               	movf	??_I2C1_ISR,w
 11495  012B  0140               	movlb	0	; select bank0
 11496  012C  00E4               	movwf	_i2c1_state
 11497                           
 11498                           ;mcc_generated_files/i2c1.c: 419:                 }
 11499  012D  0008               	return
 11500  012E                     i1l424:	
 11501                           ;mcc_generated_files/i2c1.c: 428:         case S_MASTER_SEND_DATA:
 11502                           
 11503                           
 11504                           ;mcc_generated_files/i2c1.c: 431:             if(SSP1CON2bits.ACKSTAT)
 11505  012E  0143               	movlb	3	; select bank3
 11506  012F  1F11               	btfss	17,6	;volatile
 11507  0130  293C               	goto	i1l3169
 11508                           
 11509                           ;mcc_generated_files/i2c1.c: 432:             {;mcc_generated_files/i2c1.c: 434:        
      +                                   i2c1_object.i2cErrors++;
 11510  0131  3001               	movlw	1
 11511  0132  00F8               	movwf	??_I2C1_ISR
 11512  0133  0878               	movf	??_I2C1_ISR,w
 11513  0134  0140               	movlb	0	; select bank0
 11514  0135  07CA               	addwf	_i2c1_object+4,f
 11515                           
 11516                           ;mcc_generated_files/i2c1.c: 437:                 SSP1CON2bits.ACKSTAT = 0;
 11517  0136  0143               	movlb	3	; select bank3
 11518  0137  1311               	bcf	17,6	;volatile
 11519                           
 11520                           ;mcc_generated_files/i2c1.c: 440:                 I2C1_Stop(I2C1_DATA_NO_ACK);
 11521  0138  3005               	movlw	5
 11522  0139  3187  27E8         	fcall	_I2C1_Stop
 11523                           
 11524                           ;mcc_generated_files/i2c1.c: 442:             }
 11525  013B  0008               	return
 11526  013C                     i1l3169:	
 11527                           
 11528                           ;mcc_generated_files/i2c1.c: 444:             {;mcc_generated_files/i2c1.c: 446:        
      +                                   if(i2c_bytes_left-- == 0U)
 11529  013C  3001               	movlw	1
 11530  013D  0140               	movlb	0	; select bank0
 11531  013E  02DF               	subwf	I2C1_ISR@i2c_bytes_left,f
 11532  013F  0A5F               	incf	I2C1_ISR@i2c_bytes_left,w
 11533  0140  1D03               	btfss	3,2
 11534  0141  2951               	goto	i1l3177
 11535                           
 11536                           ;mcc_generated_files/i2c1.c: 447:                 {;mcc_generated_files/i2c1.c: 451:    
      +                                           p_i2c1_trb_current++;
 11537  0142  3004               	movlw	4
 11538  0143  00F8               	movwf	??_I2C1_ISR
 11539  0144  0878               	movf	??_I2C1_ISR,w
 11540  0145  07E2               	addwf	_p_i2c1_trb_current,f
 11541                           
 11542                           ;mcc_generated_files/i2c1.c: 454:                     if(--i2c1_trb_count == 0)
 11543  0146  3001               	movlw	1
 11544  0147  02E3               	subwf	_i2c1_trb_count,f
 11545  0148  1D03               	btfss	3,2
 11546  0149  294E               	goto	i1l428
 11547                           
 11548                           ;mcc_generated_files/i2c1.c: 455:                     {;mcc_generated_files/i2c1.c: 456:
      +                                                   I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11549  014A  3000               	movlw	0
 11550  014B  3187  27E8         	fcall	_I2C1_Stop
 11551                           
 11552                           ;mcc_generated_files/i2c1.c: 457:                     }
 11553  014D  0008               	return
 11554  014E                     i1l428:	
 11555                           ;mcc_generated_files/i2c1.c: 458:                     else
 11556                           
 11557                           
 11558                           ;mcc_generated_files/i2c1.c: 459:                     {;mcc_generated_files/i2c1.c: 466:
      +                                                   SSP1CON2bits.RSEN = 1;
 11559  014E  0143               	movlb	3	; select bank3
 11560  014F  1491               	bsf	17,1	;volatile
 11561  0150  28C1               	goto	i1l3107
 11562  0151                     i1l3177:	
 11563                           
 11564                           ;mcc_generated_files/i2c1.c: 474:                 {;mcc_generated_files/i2c1.c: 476:    
      +                                           SSP1BUF = *pi2c_buf_ptr++;
 11565  0151  0860               	movf	I2C1_ISR@pi2c_buf_ptr,w
 11566  0152  0086               	movwf	6
 11567  0153  0187               	clrf	7
 11568  0154  0801               	movf	1,w
 11569  0155  0143               	movlb	3	; select bank3
 11570  0156  008C               	movwf	12	;volatile
 11571  0157  3001               	movlw	1
 11572  0158  00F8               	movwf	??_I2C1_ISR
 11573  0159  0878               	movf	??_I2C1_ISR,w
 11574  015A  0140               	movlb	0	; select bank0
 11575  015B  07E0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 11576  015C  0008               	return
 11577  015D                     i1l431:	
 11578                           ;mcc_generated_files/i2c1.c: 481:         case S_MASTER_ACK_ADDR:
 11579                           
 11580                           
 11581                           ;mcc_generated_files/i2c1.c: 484:             if(SSP1CON2bits.ACKSTAT)
 11582  015D  0143               	movlb	3	; select bank3
 11583  015E  1F11               	btfss	17,6	;volatile
 11584  015F  296B               	goto	i1l432
 11585                           
 11586                           ;mcc_generated_files/i2c1.c: 485:             {;mcc_generated_files/i2c1.c: 488:        
      +                                   i2c1_object.i2cErrors++;
 11587  0160  3001               	movlw	1
 11588  0161  00F8               	movwf	??_I2C1_ISR
 11589  0162  0878               	movf	??_I2C1_ISR,w
 11590  0163  0140               	movlb	0	; select bank0
 11591  0164  07CA               	addwf	_i2c1_object+4,f
 11592                           
 11593                           ;mcc_generated_files/i2c1.c: 491:                 I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK)
      +                          ;
 11594  0165  3004               	movlw	4
 11595  0166  3187  27E8         	fcall	_I2C1_Stop
 11596                           
 11597                           ;mcc_generated_files/i2c1.c: 494:                 SSP1CON2bits.ACKSTAT = 0;
 11598  0168  0143               	movlb	3	; select bank3
 11599  0169  1311               	bcf	17,6	;volatile
 11600                           
 11601                           ;mcc_generated_files/i2c1.c: 495:             }
 11602  016A  0008               	return
 11603  016B                     i1l432:	
 11604                           ;mcc_generated_files/i2c1.c: 496:             else
 11605                           
 11606                           
 11607                           ;mcc_generated_files/i2c1.c: 497:             {;mcc_generated_files/i2c1.c: 498:        
      +                                   SSP1CON2bits.RCEN = 1;
 11608  016B  1591               	bsf	17,3	;volatile
 11609                           
 11610                           ;mcc_generated_files/i2c1.c: 499:                 i2c1_state = S_MASTER_ACK_RCV_DATA;
 11611  016C  3008               	movlw	8
 11612  016D  00F8               	movwf	??_I2C1_ISR
 11613  016E  0878               	movf	??_I2C1_ISR,w
 11614  016F  0140               	movlb	0	; select bank0
 11615  0170  00E4               	movwf	_i2c1_state
 11616  0171  0008               	return
 11617  0172                     i1l3189:	
 11618                           
 11619                           ;mcc_generated_files/i2c1.c: 508:             i2c1_state = S_MASTER_ACK_RCV_DATA;
 11620  0172  3008               	movlw	8
 11621  0173  00F8               	movwf	??_I2C1_ISR
 11622  0174  0878               	movf	??_I2C1_ISR,w
 11623  0175  00E4               	movwf	_i2c1_state
 11624                           
 11625                           ;mcc_generated_files/i2c1.c: 511:             SSP1CON2bits.RCEN = 1;
 11626  0176  0143               	movlb	3	; select bank3
 11627  0177  1591               	bsf	17,3	;volatile
 11628                           
 11629                           ;mcc_generated_files/i2c1.c: 513:             break;
 11630  0178  0008               	return
 11631  0179                     i1l3193:	
 11632                           
 11633                           ;mcc_generated_files/i2c1.c: 518:             *pi2c_buf_ptr++ = SSP1BUF;
 11634  0179  0143               	movlb	3	; select bank3
 11635  017A  080C               	movf	12,w	;volatile
 11636  017B  00F8               	movwf	??_I2C1_ISR
 11637  017C  0140               	movlb	0	; select bank0
 11638  017D  0860               	movf	I2C1_ISR@pi2c_buf_ptr,w
 11639  017E  0086               	movwf	6
 11640  017F  0187               	clrf	7
 11641  0180  0878               	movf	??_I2C1_ISR,w
 11642  0181  0081               	movwf	1
 11643  0182  3001               	movlw	1
 11644  0183  00F8               	movwf	??_I2C1_ISR
 11645  0184  0878               	movf	??_I2C1_ISR,w
 11646  0185  07E0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 11647                           
 11648                           ;mcc_generated_files/i2c1.c: 521:             if(--i2c_bytes_left)
 11649  0186  3001               	movlw	1
 11650  0187  02DF               	subwf	I2C1_ISR@i2c_bytes_left,f
 11651  0188  1903               	btfsc	3,2
 11652  0189  2992               	goto	i1l436
 11653                           
 11654                           ;mcc_generated_files/i2c1.c: 522:             {;mcc_generated_files/i2c1.c: 528:        
      +                                   SSP1CON2bits.ACKDT = 0;
 11655  018A  0143               	movlb	3	; select bank3
 11656  018B  1291               	bcf	17,5	;volatile
 11657                           
 11658                           ;mcc_generated_files/i2c1.c: 531:                 i2c1_state = S_MASTER_RCV_DATA;
 11659  018C  3006               	movlw	6
 11660  018D  00F8               	movwf	??_I2C1_ISR
 11661  018E  0878               	movf	??_I2C1_ISR,w
 11662  018F  0140               	movlb	0	; select bank0
 11663  0190  00E4               	movwf	_i2c1_state
 11664                           
 11665                           ;mcc_generated_files/i2c1.c: 532:             }
 11666  0191  2996               	goto	i1l3205
 11667  0192                     i1l436:	
 11668                           ;mcc_generated_files/i2c1.c: 533:             else
 11669                           
 11670                           
 11671                           ;mcc_generated_files/i2c1.c: 534:             {;mcc_generated_files/i2c1.c: 538:        
      +                                   SSP1CON2bits.ACKDT = 1;
 11672  0192  0143               	movlb	3	; select bank3
 11673  0193  1691               	bsf	17,5	;volatile
 11674                           
 11675                           ;mcc_generated_files/i2c1.c: 540:                 I2C1_FunctionComplete();
 11676  0194  318E  26EC         	fcall	_I2C1_FunctionComplete
 11677  0196                     i1l3205:	
 11678                           
 11679                           ;mcc_generated_files/i2c1.c: 544:             SSP1CON2bits.ACKEN = 1;
 11680  0196  0143               	movlb	3	; select bank3
 11681  0197  1611               	bsf	17,4	;volatile
 11682                           
 11683                           ;mcc_generated_files/i2c1.c: 545:             break;
 11684  0198  0008               	return
 11685  0199                     i1l3207:	
 11686                           
 11687                           ;mcc_generated_files/i2c1.c: 551:             I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11688  0199  3000               	movlw	0
 11689  019A  3187  27E8         	fcall	_I2C1_Stop
 11690                           
 11691                           ;mcc_generated_files/i2c1.c: 552:             break;
 11692  019C  0008               	return
 11693  019D                     i1l3209:	
 11694                           
 11695                           ;mcc_generated_files/i2c1.c: 558:             i2c1_object.i2cErrors++;
 11696  019D  3001               	movlw	1
 11697  019E  00F8               	movwf	??_I2C1_ISR
 11698  019F  0878               	movf	??_I2C1_ISR,w
 11699  01A0  07CA               	addwf	_i2c1_object+4,f
 11700                           
 11701                           ;mcc_generated_files/i2c1.c: 559:             I2C1_Stop(I2C1_LOST_STATE);
 11702  01A1  3006               	movlw	6
 11703  01A2  3187  27E8         	fcall	_I2C1_Stop
 11704                           
 11705                           ;mcc_generated_files/i2c1.c: 560:             break;
 11706  01A4  0008               	return
 11707  01A5                     i1l3215:	
 11708  01A5  0140               	movlb	0	; select bank0
 11709  01A6  0864               	movf	_i2c1_state,w
 11710  01A7  00F8               	movwf	??_I2C1_ISR
 11711  01A8  01F9               	clrf	??_I2C1_ISR+1
 11712                           
 11713                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11714                           ; Switch size 1, requested type "simple"
 11715                           ; Number of cases is 1, Range of values is 0 to 0
 11716                           ; switch strategies available:
 11717                           ; Name         Instructions Cycles
 11718                           ; simple_byte            4     3 (average)
 11719                           ; direct_byte            8     6 (fixed)
 11720                           ; jumptable            260     6 (fixed)
 11721                           ;	Chosen strategy is simple_byte
 11722  01A9  0879               	movf	??_I2C1_ISR+1,w
 11723  01AA  3A00               	xorlw	0	; case 0
 11724  01AB  1903               	skipnz
 11725  01AC  29AE               	goto	i1l4173
 11726  01AD  299D               	goto	i1l3209
 11727  01AE                     i1l4173:	
 11728                           
 11729                           ; Switch size 1, requested type "simple"
 11730                           ; Number of cases is 11, Range of values is 0 to 11
 11731                           ; switch strategies available:
 11732                           ; Name         Instructions Cycles
 11733                           ; direct_byte           30     6 (fixed)
 11734                           ; simple_byte           34    18 (average)
 11735                           ; jumptable            260     6 (fixed)
 11736                           ;	Chosen strategy is simple_byte
 11737  01AE  0878               	movf	??_I2C1_ISR,w
 11738  01AF  3A00               	xorlw	0	; case 0
 11739  01B0  1903               	skipnz
 11740  01B1  289C               	goto	i1l402
 11741  01B2  3A01               	xorlw	1	; case 1
 11742  01B3  1903               	skipnz
 11743  01B4  28C7               	goto	i1l407
 11744  01B5  3A03               	xorlw	3	; case 2
 11745  01B6  1903               	skipnz
 11746  01B7  290F               	goto	i1l3135
 11747  01B8  3A01               	xorlw	1	; case 3
 11748  01B9  1903               	skipnz
 11749  01BA  292E               	goto	i1l424
 11750  01BB  3A07               	xorlw	7	; case 4
 11751  01BC  1903               	skipnz
 11752  01BD  2999               	goto	i1l3207
 11753  01BE  3A01               	xorlw	1	; case 5
 11754  01BF  1903               	skipnz
 11755  01C0  295D               	goto	i1l431
 11756  01C1  3A03               	xorlw	3	; case 6
 11757  01C2  1903               	skipnz
 11758  01C3  2972               	goto	i1l3189
 11759  01C4  3A01               	xorlw	1	; case 7
 11760  01C5  1903               	skipnz
 11761  01C6  2999               	goto	i1l3207
 11762  01C7  3A0F               	xorlw	15	; case 8
 11763  01C8  1903               	skipnz
 11764  01C9  2979               	goto	i1l3193
 11765  01CA  3A02               	xorlw	2	; case 10
 11766  01CB  1903               	skipnz
 11767  01CC  28C8               	goto	i1l408
 11768  01CD  3A01               	xorlw	1	; case 11
 11769  01CE  1903               	skipnz
 11770  01CF  28EA               	goto	i1l413
 11771  01D0  299D               	goto	i1l3209
 11772  01D1  0008               	return
 11773  01D2                     __end_of_I2C1_ISR:	
 11774                           
 11775                           	psect	text51
 11776  07E8                     __ptext51:	
 11777 ;; *************** function _I2C1_Stop *****************
 11778 ;; Defined at:
 11779 ;;		line 583 in file "mcc_generated_files/i2c1.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;  completion_c    1    wreg     enum E10866
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  completion_c    1    1[COMMON] enum E10866
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  1    wreg      void 
 11786 ;; Registers used:
 11787 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11797 ;;Total ram usage:        2 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; This function calls:
 11800 ;;		Nothing
 11801 ;; This function is called by:
 11802 ;;		_I2C1_ISR
 11803 ;; This function uses a non-reentrant model
 11804 ;;
 11805                           
 11806                           
 11807                           ;psect for function _I2C1_Stop
 11808  07E8                     _I2C1_Stop:	
 11809                           
 11810                           ;incstack = 0
 11811                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 11812                           ;I2C1_Stop@completion_code stored from wreg
 11813  07E8  00F7               	movwf	I2C1_Stop@completion_code
 11814                           
 11815                           ;mcc_generated_files/i2c1.c: 583: void I2C1_Stop(I2C1_MESSAGE_STATUS completion_code);mc
      +                          c_generated_files/i2c1.c: 584: {;mcc_generated_files/i2c1.c: 586:     SSP1CON2bits.PEN =
      +                           1;
 11816  07E9  0143               	movlb	3	; select bank3
 11817  07EA  1511               	bsf	17,2	;volatile
 11818                           
 11819                           ;mcc_generated_files/i2c1.c: 589:     if (p_i2c1_current->pTrFlag != ((void*)0))
 11820  07EB  0140               	movlb	0	; select bank0
 11821  07EC  0861               	movf	_p_i2c1_current,w
 11822  07ED  3E02               	addlw	2
 11823  07EE  0086               	movwf	6
 11824  07EF  0187               	clrf	7
 11825  07F0  0801               	movf	1,w
 11826  07F1  1903               	btfsc	3,2
 11827  07F2  2FFE               	goto	i1l2901
 11828                           
 11829                           ;mcc_generated_files/i2c1.c: 590:     {;mcc_generated_files/i2c1.c: 592:         *(p_i2c
      +                          1_current->pTrFlag) = completion_code;
 11830  07F3  0877               	movf	I2C1_Stop@completion_code,w
 11831  07F4  00F6               	movwf	??_I2C1_Stop
 11832  07F5  0861               	movf	_p_i2c1_current,w
 11833  07F6  3E02               	addlw	2
 11834  07F7  0086               	movwf	6
 11835  07F8  0187               	clrf	7
 11836  07F9  0801               	movf	1,w
 11837  07FA  0086               	movwf	6
 11838  07FB  0187               	clrf	7
 11839  07FC  0876               	movf	??_I2C1_Stop,w
 11840  07FD  0081               	movwf	1
 11841  07FE                     i1l2901:	
 11842                           
 11843                           ;mcc_generated_files/i2c1.c: 596:     i2c1_state = S_MASTER_IDLE;
 11844  07FE  01E4               	clrf	_i2c1_state
 11845  07FF  0008               	return
 11846  0800                     __end_of_I2C1_Stop:	
 11847                           
 11848                           	psect	text52
 11849  0EEC                     __ptext52:	
 11850 ;; *************** function _I2C1_FunctionComplete *****************
 11851 ;; Defined at:
 11852 ;;		line 565 in file "mcc_generated_files/i2c1.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;		None
 11855 ;; Auto vars:     Size  Location     Type
 11856 ;;		None
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  1    wreg      void 
 11859 ;; Registers used:
 11860 ;;		wreg, status,2, status,0
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11870 ;;Total ram usage:        1 bytes
 11871 ;; Hardware stack levels used:    1
 11872 ;; This function calls:
 11873 ;;		Nothing
 11874 ;; This function is called by:
 11875 ;;		_I2C1_ISR
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           
 11880                           ;psect for function _I2C1_FunctionComplete
 11881  0EEC                     _I2C1_FunctionComplete:	
 11882                           
 11883                           ;mcc_generated_files/i2c1.c: 569:     p_i2c1_trb_current++;
 11884                           
 11885                           ;incstack = 0
 11886                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 11887  0EEC  3004               	movlw	4
 11888  0EED  00F6               	movwf	??_I2C1_FunctionComplete
 11889  0EEE  0876               	movf	??_I2C1_FunctionComplete,w
 11890  0EEF  0140               	movlb	0	; select bank0
 11891  0EF0  07E2               	addwf	_p_i2c1_trb_current,f
 11892                           
 11893                           ;mcc_generated_files/i2c1.c: 572:     if(--i2c1_trb_count == 0)
 11894  0EF1  3001               	movlw	1
 11895  0EF2  02E3               	subwf	_i2c1_trb_count,f
 11896  0EF3  1D03               	btfss	3,2
 11897  0EF4  2EFA               	goto	i1l443
 11898                           
 11899                           ;mcc_generated_files/i2c1.c: 573:     {;mcc_generated_files/i2c1.c: 574:         i2c1_st
      +                          ate = S_MASTER_SEND_STOP;
 11900  0EF5  3004               	movlw	4
 11901  0EF6  00F6               	movwf	??_I2C1_FunctionComplete
 11902  0EF7  0876               	movf	??_I2C1_FunctionComplete,w
 11903  0EF8  00E4               	movwf	_i2c1_state
 11904                           
 11905                           ;mcc_generated_files/i2c1.c: 575:     }
 11906  0EF9  0008               	return
 11907  0EFA                     i1l443:	
 11908                           ;mcc_generated_files/i2c1.c: 576:     else
 11909                           
 11910                           
 11911                           ;mcc_generated_files/i2c1.c: 577:     {;mcc_generated_files/i2c1.c: 578:         i2c1_st
      +                          ate = S_MASTER_RESTART;
 11912  0EFA  01E4               	clrf	_i2c1_state
 11913  0EFB  0AE4               	incf	_i2c1_state,f
 11914  0EFC  0008               	return
 11915  0EFD                     __end_of_I2C1_FunctionComplete:	
 11916                           
 11917                           	psect	text53
 11918  0E22                     __ptext53:	
 11919 ;; *************** function _I2C1_BusCollisionISR *****************
 11920 ;; Defined at:
 11921 ;;		line 742 in file "mcc_generated_files/i2c1.c"
 11922 ;; Parameters:    Size  Location     Type
 11923 ;;		None
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;		None
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  1    wreg      void 
 11928 ;; Registers used:
 11929 ;;		None
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/0
 11932 ;;		On exit  : 0/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11939 ;;Total ram usage:        0 bytes
 11940 ;; Hardware stack levels used:    1
 11941 ;; This function calls:
 11942 ;;		Nothing
 11943 ;; This function is called by:
 11944 ;;		_INTERRUPT_InterruptManager
 11945 ;; This function uses a non-reentrant model
 11946 ;;
 11947                           
 11948                           
 11949                           ;psect for function _I2C1_BusCollisionISR
 11950  0E22                     _I2C1_BusCollisionISR:	
 11951                           
 11952                           ;mcc_generated_files/i2c1.c: 745:  PIR3bits.BCL1IF = 0;
 11953                           
 11954                           ;incstack = 0
 11955                           ; Regs used in _I2C1_BusCollisionISR: []
 11956  0E22  014E               	movlb	14	; select bank14
 11957  0E23  108F               	bcf	15,1	;volatile
 11958  0E24  0008               	return
 11959  0E25                     __end_of_I2C1_BusCollisionISR:	
 11960                           
 11961                           	psect	text54
 11962  0FC6                     __ptext54:	
 11963 ;; *************** function _EUSART1_Transmit_ISR *****************
 11964 ;; Defined at:
 11965 ;;		line 194 in file "mcc_generated_files/eusart1.c"
 11966 ;; Parameters:    Size  Location     Type
 11967 ;;		None
 11968 ;; Auto vars:     Size  Location     Type
 11969 ;;		None
 11970 ;; Return value:  Size  Location     Type
 11971 ;;                  1    wreg      void 
 11972 ;; Registers used:
 11973 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11974 ;; Tracked objects:
 11975 ;;		On entry : 0/0
 11976 ;;		On exit  : 0/0
 11977 ;;		Unchanged: 0/0
 11978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11983 ;;Total ram usage:        1 bytes
 11984 ;; Hardware stack levels used:    1
 11985 ;; This function calls:
 11986 ;;		Nothing
 11987 ;; This function is called by:
 11988 ;;		_EUSART1_Initialize
 11989 ;;		_INTERRUPT_InterruptManager
 11990 ;; This function uses a non-reentrant model
 11991 ;;
 11992                           
 11993                           
 11994                           ;psect for function _EUSART1_Transmit_ISR
 11995  0FC6                     _EUSART1_Transmit_ISR:	
 11996                           
 11997                           ;mcc_generated_files/eusart1.c: 198:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 11998                           
 11999                           ;incstack = 0
 12000                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 12001  0FC6  3008               	movlw	8
 12002  0FC7  0140               	movlb	0	; select bank0
 12003  0FC8  026E               	subwf	_eusart1TxBufferRemaining,w	;volatile
 12004  0FC9  1803               	skipnc
 12005  0FCA  2FE0               	goto	i1l106
 12006                           
 12007                           ;mcc_generated_files/eusart1.c: 199:     {;mcc_generated_files/eusart1.c: 200:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 12008  0FCB  0872               	movf	_eusart1TxTail,w
 12009  0FCC  3EB0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 12010  0FCD  0086               	movwf	6
 12011  0FCE  0187               	clrf	7
 12012  0FCF  0801               	movf	1,w
 12013  0FD0  0142               	movlb	2	; select bank2
 12014  0FD1  009A               	movwf	26	;volatile
 12015  0FD2  3001               	movlw	1
 12016  0FD3  00F6               	movwf	??_EUSART1_Transmit_ISR
 12017  0FD4  0876               	movf	??_EUSART1_Transmit_ISR,w
 12018  0FD5  07F2               	addwf	_eusart1TxTail,f	;volatile
 12019                           
 12020                           ;mcc_generated_files/eusart1.c: 201:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 12021  0FD6  3008               	movlw	8
 12022  0FD7  0272               	subwf	_eusart1TxTail,w	;volatile
 12023  0FD8  1803               	btfsc	3,0
 12024                           
 12025                           ;mcc_generated_files/eusart1.c: 202:         {;mcc_generated_files/eusart1.c: 203:      
      +                                 eusart1TxTail = 0;
 12026  0FD9  01F2               	clrf	_eusart1TxTail	;volatile
 12027                           
 12028                           ;mcc_generated_files/eusart1.c: 205:         eusart1TxBufferRemaining++;
 12029  0FDA  3001               	movlw	1
 12030  0FDB  00F6               	movwf	??_EUSART1_Transmit_ISR
 12031  0FDC  0876               	movf	??_EUSART1_Transmit_ISR,w
 12032  0FDD  0140               	movlb	0	; select bank0
 12033  0FDE  07EE               	addwf	_eusart1TxBufferRemaining,f	;volatile
 12034                           
 12035                           ;mcc_generated_files/eusart1.c: 206:     }
 12036  0FDF  0008               	return
 12037  0FE0                     i1l106:	
 12038                           ;mcc_generated_files/eusart1.c: 207:     else
 12039                           
 12040                           
 12041                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         P
      +                          IE3bits.TX1IE = 0;
 12042  0FE0  014E               	movlb	14	; select bank14
 12043  0FE1  1219               	bcf	25,4	;volatile
 12044  0FE2  0008               	return
 12045  0FE3                     __end_of_EUSART1_Transmit_ISR:	
 12046                           
 12047                           	psect	text55
 12048  0762                     __ptext55:	
 12049 ;; *************** function _DMX_ISR *****************
 12050 ;; Defined at:
 12051 ;;		line 62 in file "main.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;		None
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;		None
 12056 ;; Return value:  Size  Location     Type
 12057 ;;                  1    wreg      void 
 12058 ;; Registers used:
 12059 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12069 ;;Total ram usage:        4 bytes
 12070 ;; Hardware stack levels used:    1
 12071 ;; This function calls:
 12072 ;;		Nothing
 12073 ;; This function is called by:
 12074 ;;		_main
 12075 ;;		_INTERRUPT_InterruptManager
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           
 12080                           ;psect for function _DMX_ISR
 12081  0762                     _DMX_ISR:	
 12082                           
 12083                           ;main.c: 63:         LATB6 = 1;
 12084                           
 12085                           ;incstack = 0
 12086                           ; Regs used in _DMX_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 12087  0762  0140               	movlb	0	; select bank0
 12088  0763  1719               	bsf	25,6	;volatile
 12089                           
 12090                           ;main.c: 64:         LATB6 = 0;
 12091  0764  1319               	bcf	25,6	;volatile
 12092                           
 12093                           ;main.c: 65:     if (RC1STAbits.FERR) {
 12094  0765  0142               	movlb	2	; select bank2
 12095  0766  1D1D               	btfss	29,2	;volatile
 12096  0767  2F6C               	goto	i1l3231
 12097                           
 12098                           ;main.c: 67:         dmxPointer = 0;
 12099  0768  0140               	movlb	0	; select bank0
 12100  0769  01D3               	clrf	_dmxPointer
 12101  076A  01D4               	clrf	_dmxPointer+1
 12102                           
 12103                           ;main.c: 68:     } else {
 12104  076B  2F71               	goto	i1l3233
 12105  076C                     i1l3231:	
 12106                           
 12107                           ;main.c: 69:         dmxPointer++;
 12108  076C  3001               	movlw	1
 12109  076D  0140               	movlb	0	; select bank0
 12110  076E  07D3               	addwf	_dmxPointer,f
 12111  076F  3000               	movlw	0
 12112  0770  3DD4               	addwfc	_dmxPointer+1,f
 12113  0771                     i1l3233:	
 12114                           
 12115                           ;main.c: 71:     dmxData[dmxPointer] = RC1REG;
 12116  0771  30EF               	movlw	239
 12117  0772  00F6               	movwf	??_DMX_ISR
 12118  0773  3025               	movlw	37
 12119  0774  00F7               	movwf	??_DMX_ISR+1
 12120  0775  0853               	movf	_dmxPointer,w
 12121  0776  0776               	addwf	??_DMX_ISR,w
 12122  0777  00F8               	movwf	??_DMX_ISR+2
 12123  0778  0854               	movf	_dmxPointer+1,w
 12124  0779  3D77               	addwfc	??_DMX_ISR+1,w
 12125  077A  00F9               	movwf	??_DMX_ISR+3
 12126  077B  0878               	movf	??_DMX_ISR+2,w
 12127  077C  0086               	movwf	6
 12128  077D  0879               	movf	??_DMX_ISR+3,w
 12129  077E  0087               	movwf	7
 12130  077F  0142               	movlb	2	; select bank2
 12131  0780  0819               	movf	25,w	;volatile
 12132  0781  0081               	movwf	1
 12133                           
 12134                           ;main.c: 73:     if (RC1STAbits.OERR) {
 12135  0782  1C9D               	btfss	29,1	;volatile
 12136  0783  0008               	return
 12137                           
 12138                           ;main.c: 74:         RC1STAbits.CREN = 0;
 12139  0784  121D               	bcf	29,4	;volatile
 12140                           
 12141                           ;main.c: 75:         RC1STAbits.CREN = 1;
 12142  0785  161D               	bsf	29,4	;volatile
 12143  0786  0008               	return
 12144  0787                     __end_of_DMX_ISR:	
 12145                           
 12146                           	psect	text56
 12147  0661                     __ptext56:	
 12148 ;; *************** function _EUSART1_Receive_ISR *****************
 12149 ;; Defined at:
 12150 ;;		line 213 in file "mcc_generated_files/eusart1.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;		None
 12153 ;; Auto vars:     Size  Location     Type
 12154 ;;		None
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  1    wreg      void 
 12157 ;; Registers used:
 12158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12168 ;;Total ram usage:        0 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:    2
 12171 ;; This function calls:
 12172 ;;		Absolute function
 12173 ;;		_EUSART1_DefaultErrorHandler
 12174 ;;		_EUSART1_DefaultFramingErrorHandler
 12175 ;;		_EUSART1_DefaultOverrunErrorHandler
 12176 ;;		_EUSART1_RxDataHandler
 12177 ;; This function is called by:
 12178 ;;		_EUSART1_Initialize
 12179 ;;		_INTERRUPT_InterruptManager
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           
 12184                           ;psect for function _EUSART1_Receive_ISR
 12185  0661                     _EUSART1_Receive_ISR:	
 12186                           
 12187                           ;mcc_generated_files/eusart1.c: 216:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 12188                           
 12189                           ;incstack = 0
 12190                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12191  0661  0871               	movf	_eusart1RxHead,w	;volatile
 12192  0662  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 12193  0663  0086               	movwf	6
 12194  0664  0187               	clrf	7
 12195  0665  0181               	clrf	1
 12196                           
 12197                           ;mcc_generated_files/eusart1.c: 218:     if(RC1STAbits.FERR){
 12198  0666  0142               	movlb	2	; select bank2
 12199  0667  1D1D               	btfss	29,2	;volatile
 12200  0668  2E74               	goto	i1l3045
 12201                           
 12202                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 12203  0669  0871               	movf	_eusart1RxHead,w	;volatile
 12204  066A  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 12205  066B  0086               	movwf	6
 12206  066C  0187               	clrf	7
 12207  066D  1481               	bsf	1,1
 12208                           
 12209                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_FramingErrorHandler();
 12210  066E  0141               	movlb	1	; select bank1
 12211  066F  0857               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 12212  0670  008A               	movwf	10
 12213  0671  0856               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 12214  0672  000A               	callw
 12215  0673  3186               	pagesel	$
 12216  0674                     i1l3045:	
 12217                           
 12218                           ;mcc_generated_files/eusart1.c: 223:     if(RC1STAbits.OERR){
 12219  0674  0142               	movlb	2	; select bank2
 12220  0675  1C9D               	btfss	29,1	;volatile
 12221  0676  2E82               	goto	i1l3051
 12222                           
 12223                           ;mcc_generated_files/eusart1.c: 224:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 12224  0677  0871               	movf	_eusart1RxHead,w	;volatile
 12225  0678  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 12226  0679  0086               	movwf	6
 12227  067A  0187               	clrf	7
 12228  067B  1501               	bsf	1,2
 12229                           
 12230                           ;mcc_generated_files/eusart1.c: 225:         EUSART1_OverrunErrorHandler();
 12231  067C  0141               	movlb	1	; select bank1
 12232  067D  0855               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 12233  067E  008A               	movwf	10
 12234  067F  0854               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 12235  0680  000A               	callw
 12236  0681  3186               	pagesel	$
 12237  0682                     i1l3051:	
 12238                           
 12239                           ;mcc_generated_files/eusart1.c: 228:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 12240  0682  0871               	movf	_eusart1RxHead,w	;volatile
 12241  0683  3EA0               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
 12242  0684  0086               	movwf	6
 12243  0685  0187               	clrf	7
 12244  0686  0801               	movf	1,w
 12245  0687  1903               	btfsc	3,2
 12246  0688  2E90               	goto	i1l3055
 12247                           
 12248                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_ErrorHandler();
 12249  0689  0141               	movlb	1	; select bank1
 12250  068A  0853               	movf	(_EUSART1_ErrorHandler+1)^(0+128),w
 12251  068B  008A               	movwf	10
 12252  068C  0852               	movf	_EUSART1_ErrorHandler^(0+128),w
 12253  068D  000A               	callw
 12254  068E  3186               	pagesel	$
 12255                           
 12256                           ;mcc_generated_files/eusart1.c: 230:     } else {
 12257  068F  0008               	return
 12258  0690                     i1l3055:	
 12259                           
 12260                           ;mcc_generated_files/eusart1.c: 231:         EUSART1_RxDataHandler();
 12261  0690  318F  277A         	fcall	_EUSART1_RxDataHandler
 12262  0692  0008               	return
 12263  0693                     __end_of_EUSART1_Receive_ISR:	
 12264                           
 12265                           	psect	text57
 12266  0E2C                     __ptext57:	
 12267 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 12268 ;; Defined at:
 12269 ;;		line 249 in file "mcc_generated_files/eusart1.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;		None
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;		None
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  1    wreg      void 
 12276 ;; Registers used:
 12277 ;;		None
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12287 ;;Total ram usage:        0 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; This function calls:
 12290 ;;		Nothing
 12291 ;; This function is called by:
 12292 ;;		_EUSART1_Initialize
 12293 ;;		_EUSART1_Receive_ISR
 12294 ;; This function uses a non-reentrant model
 12295 ;;
 12296                           
 12297                           
 12298                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
 12299  0E2C                     _EUSART1_DefaultOverrunErrorHandler:	
 12300                           
 12301                           ;mcc_generated_files/eusart1.c: 252:     RC1STAbits.CREN = 0;
 12302                           
 12303                           ;incstack = 0
 12304                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
 12305  0E2C  0142               	movlb	2	; select bank2
 12306  0E2D  121D               	bcf	29,4	;volatile
 12307                           
 12308                           ;mcc_generated_files/eusart1.c: 253:     RC1STAbits.CREN = 1;
 12309  0E2E  161D               	bsf	29,4	;volatile
 12310  0E2F  0008               	return
 12311  0E30                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
 12312                           
 12313                           	psect	text58
 12314  0E1D                     __ptext58:	
 12315 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 12316 ;; Defined at:
 12317 ;;		line 247 in file "mcc_generated_files/eusart1.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;		None
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;		None
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		None
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12335 ;;Total ram usage:        0 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; This function calls:
 12338 ;;		Nothing
 12339 ;; This function is called by:
 12340 ;;		_EUSART1_Initialize
 12341 ;;		_EUSART1_Receive_ISR
 12342 ;; This function uses a non-reentrant model
 12343 ;;
 12344                           
 12345                           
 12346                           ;psect for function _EUSART1_DefaultFramingErrorHandler
 12347  0E1D                     _EUSART1_DefaultFramingErrorHandler:	
 12348                           
 12349                           ;incstack = 0
 12350                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
 12351  0E1D  0008               	return
 12352  0E1E                     __end_of_EUSART1_DefaultFramingErrorHandler:	
 12353                           
 12354                           	psect	text59
 12355  0E1F                     __ptext59:	
 12356 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 12357 ;; Defined at:
 12358 ;;		line 257 in file "mcc_generated_files/eusart1.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;		None
 12361 ;; Auto vars:     Size  Location     Type
 12362 ;;		None
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  1    wreg      void 
 12365 ;; Registers used:
 12366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/0
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12376 ;;Total ram usage:        0 bytes
 12377 ;; Hardware stack levels used:    1
 12378 ;; Hardware stack levels required when called:    1
 12379 ;; This function calls:
 12380 ;;		_EUSART1_RxDataHandler
 12381 ;; This function is called by:
 12382 ;;		_EUSART1_Initialize
 12383 ;;		_EUSART1_Receive_ISR
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           
 12388                           ;psect for function _EUSART1_DefaultErrorHandler
 12389  0E1F                     _EUSART1_DefaultErrorHandler:	
 12390                           
 12391                           ;mcc_generated_files/eusart1.c: 258:     EUSART1_RxDataHandler();
 12392                           
 12393                           ;incstack = 0
 12394                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12395  0E1F  318F  277A         	fcall	_EUSART1_RxDataHandler
 12396  0E21  0008               	return
 12397  0E22                     __end_of_EUSART1_DefaultErrorHandler:	
 12398                           
 12399                           	psect	text60
 12400  0F7A                     __ptext60:	
 12401 ;; *************** function _EUSART1_RxDataHandler *****************
 12402 ;; Defined at:
 12403 ;;		line 237 in file "mcc_generated_files/eusart1.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;		None
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;		None
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  1    wreg      void 
 12410 ;; Registers used:
 12411 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12421 ;;Total ram usage:        1 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; This function calls:
 12424 ;;		Nothing
 12425 ;; This function is called by:
 12426 ;;		_EUSART1_Receive_ISR
 12427 ;;		_EUSART1_DefaultErrorHandler
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           
 12432                           ;psect for function _EUSART1_RxDataHandler
 12433  0F7A                     _EUSART1_RxDataHandler:	
 12434                           
 12435                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 12436                           
 12437                           ;incstack = 0
 12438                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12439  0F7A  0142               	movlb	2	; select bank2
 12440  0F7B  0819               	movf	25,w	;volatile
 12441  0F7C  00F6               	movwf	??_EUSART1_RxDataHandler
 12442  0F7D  0871               	movf	_eusart1RxHead,w
 12443  0F7E  3EA8               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
 12444  0F7F  0086               	movwf	6
 12445  0F80  0187               	clrf	7
 12446  0F81  0876               	movf	??_EUSART1_RxDataHandler,w
 12447  0F82  0081               	movwf	1
 12448  0F83  3001               	movlw	1
 12449  0F84  00F6               	movwf	??_EUSART1_RxDataHandler
 12450  0F85  0876               	movf	??_EUSART1_RxDataHandler,w
 12451  0F86  07F1               	addwf	_eusart1RxHead,f	;volatile
 12452                           
 12453                           ;mcc_generated_files/eusart1.c: 240:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 12454  0F87  3008               	movlw	8
 12455  0F88  0271               	subwf	_eusart1RxHead,w	;volatile
 12456  0F89  1803               	btfsc	3,0
 12457                           
 12458                           ;mcc_generated_files/eusart1.c: 241:     {;mcc_generated_files/eusart1.c: 242:         e
      +                          usart1RxHead = 0;
 12459  0F8A  01F1               	clrf	_eusart1RxHead	;volatile
 12460                           
 12461                           ;mcc_generated_files/eusart1.c: 244:     eusart1RxCount++;
 12462  0F8B  3001               	movlw	1
 12463  0F8C  00F6               	movwf	??_EUSART1_RxDataHandler
 12464  0F8D  0876               	movf	??_EUSART1_RxDataHandler,w
 12465  0F8E  0140               	movlb	0	; select bank0
 12466  0F8F  07E6               	addwf	_eusart1RxCount,f	;volatile
 12467  0F90  0008               	return
 12468  0F91                     __end_of_EUSART1_RxDataHandler:	
 12469                           
 12470                           	psect	text61
 12471  0ED2                     __ptext61:	
 12472 ;; *************** function _ADCC_ThresholdISR *****************
 12473 ;; Defined at:
 12474 ;;		line 308 in file "mcc_generated_files/adcc.c"
 12475 ;; Parameters:    Size  Location     Type
 12476 ;;		None
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;		None
 12479 ;; Return value:  Size  Location     Type
 12480 ;;                  1    wreg      void 
 12481 ;; Registers used:
 12482 ;;		wreg, status,2, status,0, pclath, cstack
 12483 ;; Tracked objects:
 12484 ;;		On entry : 0/0
 12485 ;;		On exit  : 0/0
 12486 ;;		Unchanged: 0/0
 12487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12492 ;;Total ram usage:        0 bytes
 12493 ;; Hardware stack levels used:    1
 12494 ;; Hardware stack levels required when called:    1
 12495 ;; This function calls:
 12496 ;;		Absolute function
 12497 ;;		_ADCC_DefaultInterruptHandler
 12498 ;;		_adcThresholdHandler
 12499 ;; This function is called by:
 12500 ;;		_INTERRUPT_InterruptManager
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           
 12505                           ;psect for function _ADCC_ThresholdISR
 12506  0ED2                     _ADCC_ThresholdISR:	
 12507                           
 12508                           ;mcc_generated_files/adcc.c: 311:     PIR1bits.ADTIF = 0;
 12509                           
 12510                           ;incstack = 0
 12511                           ; Regs used in _ADCC_ThresholdISR: [wreg+status,2+status,0+pclath+cstack]
 12512  0ED2  014E               	movlb	14	; select bank14
 12513  0ED3  108D               	bcf	13,1	;volatile
 12514                           
 12515                           ;mcc_generated_files/adcc.c: 313:     if (ADCC_ADTI_InterruptHandler)
 12516  0ED4  0141               	movlb	1	; select bank1
 12517  0ED5  084E               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 12518  0ED6  044F               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 12519  0ED7  1903               	btfsc	3,2
 12520  0ED8  0008               	return
 12521                           
 12522                           ;mcc_generated_files/adcc.c: 314:         ADCC_ADTI_InterruptHandler();
 12523  0ED9  084F               	movf	(_ADCC_ADTI_InterruptHandler+1)^(0+128),w
 12524  0EDA  008A               	movwf	10
 12525  0EDB  084E               	movf	_ADCC_ADTI_InterruptHandler^(0+128),w
 12526  0EDC  000A               	callw
 12527  0EDD  318E               	pagesel	$
 12528  0EDE  0008               	return
 12529  0EDF                     __end_of_ADCC_ThresholdISR:	
 12530                           
 12531                           	psect	text62
 12532  0E1C                     __ptext62:	
 12533 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 12534 ;; Defined at:
 12535 ;;		line 320 in file "mcc_generated_files/adcc.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;		None
 12538 ;; Auto vars:     Size  Location     Type
 12539 ;;		None
 12540 ;; Return value:  Size  Location     Type
 12541 ;;                  1    wreg      void 
 12542 ;; Registers used:
 12543 ;;		None
 12544 ;; Tracked objects:
 12545 ;;		On entry : 0/0
 12546 ;;		On exit  : 0/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12553 ;;Total ram usage:        0 bytes
 12554 ;; Hardware stack levels used:    1
 12555 ;; This function calls:
 12556 ;;		Nothing
 12557 ;; This function is called by:
 12558 ;;		_ADCC_Initialize
 12559 ;;		_ADCC_ThresholdISR
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           
 12564                           ;psect for function _ADCC_DefaultInterruptHandler
 12565  0E1C                     _ADCC_DefaultInterruptHandler:	
 12566                           
 12567                           ;incstack = 0
 12568                           ; Regs used in _ADCC_DefaultInterruptHandler: []
 12569  0E1C  0008               	return
 12570  0E1D                     __end_of_ADCC_DefaultInterruptHandler:	
 12571                           
 12572                           	psect	text63
 12573  0E28                     __ptext63:	
 12574 ;; *************** function _adcThresholdHandler *****************
 12575 ;; Defined at:
 12576 ;;		line 27 in file "beat.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;		None
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;		None
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  1    wreg      void 
 12583 ;; Registers used:
 12584 ;;		None
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/0
 12587 ;;		On exit  : 0/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12594 ;;Total ram usage:        0 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; This function calls:
 12597 ;;		Nothing
 12598 ;; This function is called by:
 12599 ;;		_BEAT_init
 12600 ;;		_ADCC_ThresholdISR
 12601 ;; This function uses a non-reentrant model
 12602 ;;
 12603                           
 12604                           
 12605                           ;psect for function _adcThresholdHandler
 12606  0E28                     _adcThresholdHandler:	
 12607                           
 12608                           ;beat.c: 28:     thresholdExceeded = 1;
 12609                           
 12610                           ;incstack = 0
 12611                           ; Regs used in _adcThresholdHandler: []
 12612  0E28  0140               	movlb	0	; select bank0
 12613  0E29  01D6               	clrf	_thresholdExceeded
 12614  0E2A  0AD6               	incf	_thresholdExceeded,f
 12615  0E2B  0008               	return
 12616  0E2C                     __end_of_adcThresholdHandler:	
 12617  007E                     btemp	set	126	;btemp
 12618  007E                     int$flags	set	126
 12619  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    96
    Data        6
    BSS         120
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     38      79
    BANK1            80      2      64
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           79      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    buttons.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    BUTTONS_isClicked@button.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_isClicked@button	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    BUTTONS_task@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    BUTTONS_task@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), 

    enter	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    down	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    up	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    menu	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    S1867$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTC(SFR0[1]), 

    init@btn	PTR struct . size(1) Largest target is 32
		 -> buttons(BANK2[32]), NULL(NULL[0]), 

    ADCC_SetADTIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adcThresholdHandler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    F10977.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), 

    F10971.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S561$pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E10866 size(1) Largest target is 1
		 -> writeData@data(BANK0[1]), writeData@status(BANK0[1]), 

    S573$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR volatile struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S584$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S584$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CLOCK_timerCallback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DMX_ISR(), Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    _main->_CONTROLLER_task
    _TM1650_init->_TM1650_enable
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADTIInterruptHandler
    _LED_task->_LED_setColor
    _address_inc->_TM1650_fastPrintNum
    _address_dec->_TM1650_fastPrintNum
    _TM1650_enable->_writeData
    _CONTROLLER_init->_TM1650_fastPrintNum
    _TM1650_fastPrintNum->_TM1650_setDigit
    _TM1650_setDigit->_writeData
    _writeData->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _CLOCK_init->_TMR0_SetInterruptHandler
    _BUTTONS_task->_CLOCK_getTime
    _BUTTONS_init->_init
    _BEAT_task->___lwdiv
    _BEAT_init->_ADCC_SetADTIInterruptHandler
    _BEAT_init->_ADCC_SetUpperThreshold

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24683
                                              0 BANK1      2     2      0
                          _BEAT_init
                          _BEAT_task
                       _BUTTONS_init
                       _BUTTONS_task
                         _CLOCK_init
                    _CONTROLLER_init
                    _CONTROLLER_task
      _EUSART1_SetRxInterruptHandler
                           _LED_task
                  _SYSTEM_Initialize
                        _TM1650_init
                            _initLED
 ---------------------------------------------------------------------------------
 (1) _initLED                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TM1650_init                                          0     0      0    1990
                      _TM1650_enable
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1117
                    _ADCC_Initialize
                 _EUSART1_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     695
                                              2 BANK0      1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _LED_task                                             5     5      0    1013
                                             22 BANK0      5     5      0
                      _BEAT_detected
                      _CLOCK_getTime
                       _LED_setColor
 ---------------------------------------------------------------------------------
 (2) _LED_setColor                                        22    19      3     948
                                              0 BANK0     22    19      3
 ---------------------------------------------------------------------------------
 (2) _BEAT_detected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_task                                      4     4      0   11936
                                             34 BANK0      4     4      0
                  _BUTTONS_isClicked
                      _CLOCK_getTime
                      _TM1650_enable
                        _address_dec
                        _address_inc
 ---------------------------------------------------------------------------------
 (2) _address_inc                                          0     0      0    4827
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _address_dec                                          0     0      0    4827
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (2) _TM1650_enable                                        1     1      0    1990
                                             20 BANK0      1     1      0
                          _writeData
 ---------------------------------------------------------------------------------
 (2) _BUTTONS_isClicked                                    4     1      3     165
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _CONTROLLER_init                                      0     0      0    4827
                _TM1650_fastPrintNum
 ---------------------------------------------------------------------------------
 (3) _TM1650_fastPrintNum                                  7     5      2    4827
                                             27 BANK0      7     5      2
                    _TM1650_setDigit
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _TM1650_setDigit                                      7     4      3    3312
                                             20 BANK0      7     4      3
                          _writeData
 ---------------------------------------------------------------------------------
 (3) _writeData                                            6     5      1    1959
                                             14 BANK0      6     5      1
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     3      4    1499
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             7     3      4     492
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 4     2      2     546
                                              0 BANK0      4     2      2
   _I2C1_WaitForLastPacketToComplete
 ---------------------------------------------------------------------------------
 (6) _I2C1_WaitForLastPacketToComplete                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLOCK_init                                           0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_task                                         7     7      0     756
                                              2 BANK0      7     7      0
                      _CLOCK_getTime
 ---------------------------------------------------------------------------------
 (1) _BUTTONS_init                                         1     1      0    1050
                                              5 BANK0      1     1      0
                               _init
 ---------------------------------------------------------------------------------
 (2) _init                                                 5     2      3    1050
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _BEAT_task                                            4     4      0     998
                                              8 BANK0      4     4      0
             _ADCC_SetUpperThreshold
                      _CLOCK_getTime
                   _TM1650_isEnabled
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _TM1650_isEnabled                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_getTime                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _BEAT_init                                            0     0      0     574
       _ADCC_SetADTIInterruptHandler
             _ADCC_SetUpperThreshold
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetUpperThreshold                               2     0      2     332
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADTIInterruptHandler                         2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0      22
                   Absolute function *
                  _ADCC_ThresholdISR
                            _DMX_ISR *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                _CLOCK_timerCallback *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CLOCK_timerCallback                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C1_ISR                                            4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (11) _I2C1_Stop                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Transmit_ISR                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (11) _EUSART1_RxDataHandler                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _DMX_ISR                                             4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_ThresholdISR                                   0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                _adcThresholdHandler *
 ---------------------------------------------------------------------------------
 (11) _adcThresholdHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BEAT_init
     _ADCC_SetADTIInterruptHandler
     _ADCC_SetUpperThreshold
     _ADCC_StartConversion
   _BEAT_task
     _ADCC_SetUpperThreshold
     _CLOCK_getTime
     _TM1650_isEnabled
     ___lwdiv
   _BUTTONS_init
     _init
   _BUTTONS_task
     _CLOCK_getTime
   _CLOCK_init
     _TMR0_SetInterruptHandler
   _CONTROLLER_init
     _TM1650_fastPrintNum
       _TM1650_setDigit
         _writeData
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
               _I2C1_WaitForLastPacketToComplete
             _I2C1_MasterWriteTRBBuild
       ___lwdiv
       ___lwmod
   _CONTROLLER_task
     _BUTTONS_isClicked
     _CLOCK_getTime
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
     _address_dec
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
     _address_inc
       _TM1650_fastPrintNum
         _TM1650_setDigit
           _writeData
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
                 _I2C1_WaitForLastPacketToComplete
               _I2C1_MasterWriteTRBBuild
         ___lwdiv
         ___lwmod
   _EUSART1_SetRxInterruptHandler
   _LED_task
     _BEAT_detected
     _CLOCK_getTime
     _LED_setColor
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADTIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TM1650_init
     _TM1650_enable
       _writeData
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
             _I2C1_WaitForLastPacketToComplete
           _I2C1_MasterWriteTRBBuild
   _initLED

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ThresholdISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adcThresholdHandler *
   _DMX_ISR *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _I2C1_BusCollisionISR *
   _I2C1_ISR *
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR *
     Absolute function(Fake) *
     _CLOCK_timerCallback *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      BB       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              4F      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BANK19               0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      BB      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 29 15:24:25 2019

                      _eusart1TxBufferRemaining 006E                        ??_ADCC_SetUpperThreshold 0022  
                                   __CFG_CP$OFF 0000                                    ?_TM1650_init 0076  
                                            _up 005B                              __size_of_BEAT_init 0014  
                            __size_of_BEAT_task 00C2                                     __CFG_LVP$ON 0000  
                           _adcThresholdHandler 0E28                                             l894 022A  
                                           l896 028D                                             _bpm 00BC  
                       __size_of_PMD_Initialize 000A                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                   __CFG_BBEN$OFF 0000  
                               __end_of_DMX_ISR 0787                                __end_of_I2C1_ISR 01D2  
                                          l4009 034A                                            l4043 01F4  
                                          l4027 0624                                            l4063 0277  
                                          l4055 024B                                            l4049 0224  
                                          l4145 05E7                                            l3603 0653  
                                          l3621 06D3                            _ADCC_StartConversion 0E6B  
                                          l3607 065C                                            l3545 0E38  
                                          l3625 06DF                                            l4097 0431  
                                          l4089 0419                                            l3563 04EA  
                                          l3619 06C7                                            l3651 039D  
                                          l3565 04EF                                            l3581 0FFA  
                                          l3629 06E8                                            l3901 0F44  
                                          l3813 0E84                                            l3559 04E3  
                                          l3575 0736                                            l3903 0F48  
                                          l3657 03A1                                            l3595 0635  
                                          l3597 0641                                            l3853 0F33  
                                          l3873 0797                                            l3973 02D8  
                                          l3893 0F6F                                            l3879 079C  
                                          l3895 0F73                                            l3993 030C  
                                          l3977 02DF                                            l3995 031F  
                                ?_TM1650_enable 0076                                            u2205 0638  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            u2225 0642  
                                          u2305 06E0                                            u2235 064C  
                                          u2245 0654                                            u2415 02C1  
                                          u2335 03DD                                            u2185 0FB8  
                                          u2515 01F7                                            u2275 06CA  
                                          u2524 0216                                            u2525 0215  
                                          u2295 06D9                                            u2465 0331  
                                          u2717 05D1                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          _PMD5 079B                                            _PMD6 079C  
                                          _PMD7 079D                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 __CFG_FCMEN$ON 0000                                   ?_BUTTONS_init 0076  
                                 ?_BUTTONS_task 0076                            ?_adcThresholdHandler 0076  
                                          _isOn 005C                                            _main 05B9  
                                          _down 005A                                            _init 07C8  
                                          _menu 0058                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                          ??_I2C1_MasterTRBInsert 0022  
                                          btemp 007E                                   __CFG_BOREN$ON 0000  
                                          start 0039                         __end_of_TM1650_setDigit 0FC6  
                           __size_of_CLOCK_init 0008                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                            __size_of_address_dec 0015  
                          __size_of_address_inc 0016                  I2C1_MasterWriteTRBBuild@length 0021  
                       __end_of_TMR0_Initialize 0F25                                      _i2c1_state 0064  
                ??_TMR0_DefaultInterruptHandler 0076                  __size_of_OSCILLATOR_Initialize 0009  
                     I2C1_MasterTRBInsert@count 0023                   __end_of_OSCILLATOR_Initialize 0EBC  
                      __end_of_TM1650_isEnabled 0E28                       I2C1_MasterTRBInsert@pflag 0021  
                         _eusart1RxStatusBuffer 00A0                                           _ADCAP 010E  
                                         _ADACT 0117                                __end_of_LED_task 062C  
                                         ?_main 0076                                           _ADCLK 0118  
                                         _ADCNT 0099                                           ?_init 0020  
                                         _ADPCH 009F                                           _ADREF 0116  
                             __end_of_I2C1_Stop 0800                                   __CFG_WDTE$OFF 0000  
                                         _ADRPT 009A                                           _LATB6 00CE  
                               __end_of___lwdiv 0661                      _ADCC_ADTI_InterruptHandler 00CE  
                                         i1l106 0FE0                                           i1l402 009C  
                                         i1l413 00EA                                           i1l414 00F6  
                                         i1l431 015D                                           i1l407 00C7  
                                         i1l432 016B                                           i1l424 012E  
                                         i1l408 00C8                                           i1l280 000E  
                               __end_of___lwmod 06ED                                           i1l443 0EFA  
                                         i1l283 0017                                           i1l436 0192  
                                         i1l428 014E                                           i1l285 001E  
                                         i1l294 0037                                           i1l287 0028  
                                         i1l289 0032                                           _OSCEN 0891  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                         _PORTA 000C                                           _PORTC 000E  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                           _TXREG 011A  
             __size_of_TMR0_SetInterruptHandler 0009                    __end_of_I2C1_BusCollisionISR 0E25  
                     ?_TMR0_SetInterruptHandler 0020                            _EUSART1_Transmit_ISR 0FC6  
                             ??_I2C1_Initialize 0020                                __end_of_TMR0_ISR 0EEC  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                                 __CFG_WRTD$OFF 0000                                 __end_of_initLED 0715  
                                         _delay 00DC                                           _count 00C4  
                                         _enter 0059                           ?_ADCC_StartConversion 0076  
                                         pclath 000A                                  ??_BUTTONS_init 0025  
                                ??_BUTTONS_task 0022                           ??_adcThresholdHandler 0076  
                             __end_of_BEAT_init 0F11                               __end_of_BEAT_task 0366  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0E1E     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 0E1D                 I2C1_MasterWriteTRBBuild@address 0022  
                               __initialization 003B                            TM1650_setDigit@digit 003A  
                         I2C1_MasterWrite@pdata 002D                           I2C1_MasterWrite@pflag 002A  
                    __end_of_EUSART1_Initialize 053E                                    __end_of_main 05F4  
                                  __end_of_init 07E8                                 _CONTROLLER_init 0E51  
                               _CONTROLLER_task 03E0                                   ?_LED_setColor 0020  
                  __size_of_CLOCK_timerCallback 0006                                  __CFG_SAFEN$OFF 0000  
               __size_of_ADCC_SetUpperThreshold 0009                           __end_of_CLOCK_getTime 0E49  
                   ?_INTERRUPT_InterruptManager 0076                                     _i2c1_object 0046  
                                        ??_main 00DE                                          ??_init 0023  
                                     ??_DMX_ISR 0076                           ?_EUSART1_Transmit_ISR 0076  
                               ??_TM1650_enable 0034                                          _ADACCH 0097  
                                        _ADACCL 0096                                          _ADACCU 0098  
                                        _ADACQH 010D                                          _ADACQL 010C  
                                        _ADCON0 0111                                          _ADCON1 0112  
                                        _ADCON2 0113                                          _ADCON3 0114  
                                        _ADERRH 0091                                          _ADERRL 0090  
                                        _ADLTHH 008D                                          _ADLTHL 008C  
                                        _ADRESH 009E                                          _ADRESL 009D  
                                        _ADPREH 0110                                          _ADPREL 010F  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR1L 030C                                          _CCPR3H 0315  
                                        _CCPR2L 0310                                          _CCPR4H 0319  
                                        _CCPR3L 0314                                          _CCPR4L 0318  
                                        _ADSTAT 0115                                          _ADUTHH 008F  
                                        _ADUTHL 008E                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _RC1REG 0119  
                                        _RA4PPS 1F14                                          _RA5PPS 1F15  
                                        _RC1STA 011D                                          _RC3PPS 1F23  
                                        _RC4PPS 1F24                                          i1l3103 00BA  
                                        i1l3121 00E4                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          i1l3051 0682  
                                        i1l3115 00D4                                          i1l3107 00C1  
                                        _ODCONC 1F50                                          _RC6PPS 1F26  
                                        i1l3045 0674                                          i1l3205 0196  
                                        i1l3055 0690                                          i1l3231 076C  
                                        i1l3207 0199                                          i1l3135 010F  
                                        i1l3215 01A5                                          i1l3233 0771  
                                        i1l3209 019D                                          i1l3155 0123  
                                        _RC7PPS 1F27                                          i1l3193 0179  
                                        i1l3177 0151                                          i1l3169 013C  
                                        i1l2901 07FE                                          i1l4173 01AE  
                                        i1l3189 0172                                  __CFG_WDTCCS$SC 0000  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                          _TRISC3 00A3  
                                        _TRISB6 009E                                          _TRISC4 00A4  
                                        _TRISC6 00A6                                          _TRISC7 00A7  
                             ?_I2C1_MasterWrite 0027                                  __CFG_PWRTS$OFF 0000  
                              ?_TM1650_setDigit 0034                              ??_I2C1_MasterWrite 002B  
                                _p_i2c1_current 0061                                  ??_LED_setColor 0023  
                   __end_of_TM1650_fastPrintNum 03E0                               _ADCC_ThresholdISR 0ED2  
                                __CFG_STVREN$ON 0000                                       ??___lwdiv 0024  
                                     ??___lwmod 0024                        ?_EUSART1_SetErrorHandler 0020  
                    ??_I2C1_MasterWriteTRBBuild 0024                                ?_TMR0_Initialize 0076  
                            ?_ADCC_ThresholdISR 0076                                       ?_I2C1_ISR 0076  
                        __size_of_BEAT_detected 0009                ??_EUSART1_SetOverrunErrorHandler 0022  
               ?_EUSART1_SetOverrunErrorHandler 0020                                  _lastActiveTime 00BE  
                          __size_of_TM1650_init 0004                                       ??_initLED 0020  
                               _ADCC_Initialize 073C                                  _PMD_Initialize 0EBC  
                                  ??_CLOCK_init 0022                             ??_ADCC_ThresholdISR 0076  
                        ??_ADCC_StartConversion 0020            ADCC_SetUpperThreshold@upperThreshold 0020  
  ADCC_SetADTIInterruptHandler@InterruptHandler 0020        TMR0_SetInterruptHandler@InterruptHandler 0020  
                        _ADCC_SetUpperThreshold 0E62                   I2C1_MasterWriteTRBBuild@pdata 0020  
                               _eusart1RxBuffer 00A8                                 _eusart1TxBuffer 00B0  
                             _SYSTEM_Initialize 0F4F                         __end_of__initialization 0085  
                       __end_of_CONTROLLER_init 0E59                         __end_of_CONTROLLER_task 0456  
                            ?_SYSTEM_Initialize 0076                                       ?_LED_task 0076  
                                _i2c1_trb_count 0063                  __size_of_EUSART1_RxDataHandler 0017  
                     __end_of_ADCC_ThresholdISR 0EDF                   __end_of_EUSART1_RxDataHandler 0F91  
                         _I2C1_FunctionComplete 0EEC                            _I2C1_BusCollisionISR 0E22  
                                __pcstackCOMMON 0076                              __end_of_CLOCK_init 0E51  
                        I2C1_MasterWrite@length 0027                                    __pidataBANK0 0E34  
                                  __pidataBANK1 0002                             ??_SYSTEM_Initialize 0023  
                                     ?_TMR0_ISR 0076                     TM1650_fastPrintNum@numWrite 003E  
                                    ??_I2C1_ISR 0078                            __end_of_BUTTONS_init 057D  
                        __end_of_PMD_Initialize 0EC6                            __end_of_BUTTONS_task 02A4  
                                Blink2@lastTime 0051                          ??_EUSART1_Transmit_ISR 0076  
                   __end_of_EUSART1_Receive_ISR 0693                               _thresholdExceeded 0056  
                   ADCC_StartConversion@channel 0020                               LED_setColor@green 0020  
                             LED_setColor@white 0021                       __end_of_SYSTEM_Initialize 0F64  
                                 _eusart1RxHead 0071                                   _eusart1TxHead 0073  
                                 _eusart1RxTail 0070                                      __pbssBANK0 0046  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                                 _eusart1TxTail 0072               _EUSART1_TxDefaultInterruptHandler 00DA  
               ??_EUSART1_SetRxInterruptHandler 0022                                   _BEAT_detected 0E7D  
                                    ??_LED_task 0036                           ?_I2C1_BusCollisionISR 0076  
               __end_of_EUSART1_SetErrorHandler 0E8F                                      __pmaintext 05B9  
              __end_of_TMR0_SetInterruptHandler 0E7D                                      ??_TMR0_ISR 0076  
                               __CFG_PPS1WAY$ON 0000                                writeData@address 0032  
                       __end_of_ADCC_Initialize 0762                                      __pintentry 0004  
                               _I2C1_Initialize 0F91                                         _ADFLTRH 0095  
                                       _ADFLTRL 0094                                         _ADPREVH 009C  
                                       _ADPREVL 009B                                   BUTTONS_task@i 0025  
          __end_of_ADCC_SetADTIInterruptHandler 0E62           __size_of_ADCC_SetADTIInterruptHandler 0009  
                  _ADCC_SetADTIInterruptHandler 0E59                                         _ADSTPTH 0093  
                                       _ADSTPTL 0092                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0076                               ?_TM1650_isEnabled 0076  
        __end_of_EUSART1_SetFramingErrorHandler 0E98         __size_of_EUSART1_SetFramingErrorHandler 0009  
                _EUSART1_SetFramingErrorHandler 0E8F                                    LED_task@time 0039  
                                       _DMX_ISR 0762                              ??_TM1650_isEnabled 0020  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                       _I2C1_Stop 07E8  
                                       _OSCTUNE 0892                                         _SSP1ADD 018D  
                                    _dmxPointer 0053                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                            __end_of_LED_setColor 05B9  
                             __end_of_charTable 04B6                             _CLOCK_timerCallback 0E3D  
                                ?_BEAT_detected 0076                   I2C1_MasterTRBInsert@ptrb_list 0020  
                            __size_of_writeData 001D                                   ??_address_dec 0042  
                              ?_CONTROLLER_init 0076                                   ??_address_inc 0042  
                              ?_CONTROLLER_task 0076                                 BUTTONS_task@btn 0028  
                        ?_I2C1_FunctionComplete 0076                                       _BEAT_init 0EFD  
                 __size_of_I2C1_MasterTRBInsert 0045                                       _BEAT_task 02A4  
                    __size_of_ADCC_ThresholdISR 000D                              _p_i2c1_trb_current 0062  
                          ?_CLOCK_timerCallback 0076                                         ___lwdiv 062C  
                                       ___lwmod 06C0                                         _address 006C  
                                       _dmxData 25EF                                         __ptext1 06ED  
                                       __ptext2 0E30                                         __ptext3 0F4F  
                                       __ptext4 0F11                                         __ptext5 0EBC  
                                       __ptext6 0693                                         __ptext7 0EB3  
                                       __ptext8 0F91                                         __ptext9 04FB  
                 ?_ADCC_SetADTIInterruptHandler 0020                                 __CFG_WRTAPP$OFF 0000  
                                       _initLED 06ED                                         _lastRun 00BA  
                         _OSCILLATOR_Initialize 0EB3                                       _T2CONbits 028E  
                                       _buttons 0120                              _EUSART1_Initialize 04FB  
                      ??_PIN_MANAGER_Initialize 0020                                 __CFG_WRTSAF$OFF 0000  
                                    ?_I2C1_Stop 0076                     __end_of_adcThresholdHandler 0E2C  
                 ??_EUSART1_DefaultErrorHandler 0077                      __size_of_SYSTEM_Initialize 0015  
                          I2C1_ISR@pi2c_buf_ptr 0060                                         clrloop0 0EC7  
                          end_of_initialization 0085                             ?_EUSART1_Initialize 0076  
                                       init@btn 0024                                         init@pin 0022  
                   _EUSART1_OverrunErrorHandler 00D4                          ??_I2C1_BusCollisionISR 0076  
                       __end_of_I2C1_Initialize 0FAA           __end_of_EUSART1_SetRxInterruptHandler 0EAA  
        __size_of_EUSART1_SetRxInterruptHandler 0009                   _EUSART1_SetRxInterruptHandler 0EA1  
                                    ?_BEAT_init 0076                                      ?_BEAT_task 0076  
                         __size_of_BUTTONS_init 003F                           __size_of_BUTTONS_task 00D2  
                         ??_CLOCK_timerCallback 0076                             __end_of_address_dec 0F4F  
                           __end_of_address_inc 0F7A                                ?_ADCC_Initialize 0076  
                          ??_EUSART1_Initialize 0022                           __CFG_WDTCPS$WDTCPS_31 0000  
                      _TMR0_SetInterruptHandler 0E74                       __size_of_I2C1_MasterWrite 0027  
                             __size_of_I2C1_ISR 0149                               __end_of_writeData 1000  
                       ?_ADCC_SetUpperThreshold 0020                                 ??_BEAT_detected 0020  
              __size_of_EUSART1_SetErrorHandler 0009                                __CFG_FEXTOSC$OFF 0000  
                         __end_of_TM1650_enable 0F3A               I2C1_ISR@i2c_10bit_address_restart 005E  
                        __size_of_CLOCK_getTime 0006                                    _BUTTONS_init 053E  
                                  _BUTTONS_task 01D2                                     _CCP1CONbits 030E  
                                   _CCP2CONbits 0312                                     _CCP3CONbits 0316  
                                   _CCP4CONbits 031A                         I2C1_MasterWrite@address 0028  
          __size_of_EUSART1_DefaultErrorHandler 0003                               __size_of_LED_task 0038  
                ??_ADCC_DefaultInterruptHandler 0076                                   ??_TM1650_init 0035  
                       I2C1_MasterWrite@trBlock 00CA                               __size_of_TMR0_ISR 000D  
                      I2C1_Stop@completion_code 0077                        __size_of_TM1650_setDigit 001C  
                        ?_OSCILLATOR_Initialize 0076                  __end_of_ADCC_SetUpperThreshold 0E6B  
                  __size_of_TM1650_fastPrintNum 007A                           __size_of_LED_setColor 003C  
                                  _lastDetected 0055                             start_initialization 003B  
                                   ??_I2C1_Stop 0076                        __size_of_TMR0_Initialize 0014  
               __size_of_PIN_MANAGER_Initialize 002D                             TM1650_setDigit@data 0034  
 EUSART1_SetRxInterruptHandler@interruptHandler 0020   EUSART1_SetTxInterruptHandler@interruptHandler 0020  
                 __size_of_ADCC_StartConversion 0009               __size_of_I2C1_MasterWriteTRBBuild 0020  
                     ?_I2C1_MasterWriteTRBBuild 0020                               _BUTTONS_isClicked 0787  
                            ?_BUTTONS_isClicked 0020                                     _address_dec 0F3A  
                                   _address_inc 0F64                                     ??_BEAT_init 0022  
                              ?_I2C1_Initialize 0076                                     ??_BEAT_task 0028  
                              __CFG_LPBOREN$OFF 0000                             ??_BUTTONS_isClicked 0023  
                              ??_PMD_Initialize 0020                           _EUSART1_RxDataHandler 0F7A  
                                  _LED_setColor 057D                  ?_EUSART1_SetRxInterruptHandler 0020  
                                   __pdataBANK0 006A                                     __pdataBANK1 00DC  
                                 _CLOCK_getTime 0E43                    I2C1_MasterWriteTRBBuild@ptrb 0026  
                                _eusart1RxCount 0066                                     __pbssBIGRAM 25EF  
                                      ?_DMX_ISR 0076                             __end_of_TM1650_init 0E34  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 00D8  
                                     ___latbits 0003                   __size_of_EUSART1_Transmit_ISR 001D  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00DE  
                                 _i2c1_tr_queue 0067                       __end_of_BUTTONS_isClicked 07A8  
               ??_EUSART1_SetTxInterruptHandler 0022                                 buttons@lastTime 00C2  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                       ??_I2C1_FunctionComplete 0076                       __size_of_TM1650_isEnabled 0003  
                  __size_of_EUSART1_Receive_ISR 0032                                LED_setColor@blue 0022  
                                     _charTable 0456                           _TMR0_InterruptHandler 00D0  
                                     __pnvBANK0 006E                                       __pnvBANK1 00CE  
                              ___lwdiv@dividend 0022                          _PIN_MANAGER_Initialize 0693  
                                      ?___lwdiv 0020                                        ?___lwmod 0020  
                                ?_CLOCK_getTime 0020                                        _I2C1_ISR 0089  
                  ??_INTERRUPT_InterruptManager 007C                                 writeData@status 0033  
                              _I2C1_MasterWrite 0715                                        _BAUD1CON 011F  
                                      ?_initLED 0076                    __end_of_I2C1_MasterTRBInsert 04FB  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0E30     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0076             ?_EUSART1_DefaultOverrunErrorHandler 0076  
            _EUSART1_DefaultOverrunErrorHandler 0E2C                            _EUSART1_ErrorHandler 00D2  
                       _EUSART1_SetErrorHandler 0E86                               ??_TM1650_setDigit 0037  
                              ___lwdiv@quotient 0026                                        _T2CLKCON 0290  
      __end_of_I2C1_WaitForLastPacketToComplete 0E3D       __size_of_I2C1_WaitForLastPacketToComplete 0005  
            ??_I2C1_WaitForLastPacketToComplete 0020               ?_I2C1_WaitForLastPacketToComplete 0076  
              _I2C1_WaitForLastPacketToComplete 0E38                          I2C1_MasterRead@trBlock 00C6  
                             ??_TMR0_Initialize 0022         EUSART1_SetErrorHandler@interruptHandler 0020  
                       BUTTONS_isClicked@button 0023                                       clear_ram0 0EC6  
                                      _PIE0bits 0716                                        _PIE1bits 0717  
                                      _PIE3bits 0719                                        _LED_task 05F4  
           __size_of_INTERRUPT_InterruptManager 0035                      ??_TMR0_SetInterruptHandler 0022  
                                      _PIR0bits 070C                                        _PIR1bits 070D  
                                      _PIR3bits 070F                            TM1650_fastPrintNum@i 0040  
                                      _RX1DTPPS 1ECB                          ?_EUSART1_RxDataHandler 0076  
                           CONTROLLER_task@time 0044                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 0EDF                                        _SSP1STAT 018F  
                      __size_of_CONTROLLER_init 0008                        __size_of_CONTROLLER_task 0076  
                                   _TM1650_init 0E30                                       _threshold 006A  
                                    _ADCON0bits 0111                                      _ADCON1bits 0112  
                                    _ADCON2bits 0113                                      _ADCON3bits 0114  
                              __size_of_DMX_ISR 0025                                       _writeData 0FE3  
                    __size_of_BUTTONS_isClicked 0021                    __size_of_adcThresholdHandler 0004  
                                   Blink2@value 005D                     __end_of_CLOCK_timerCallback 0E43  
                              BUTTONS_task@time 0026                             _TM1650_fastPrintNum 0366  
                                    _ADSTATbits 0115                              controller@lastTime 00C0  
         __end_of_EUSART1_SetTxInterruptHandler 0EB3          __size_of_EUSART1_SetTxInterruptHandler 0009  
                 _EUSART1_SetTxInterruptHandler 0EAA                   __size_of_I2C1_BusCollisionISR 0003  
                               ??_CLOCK_getTime 0022                          I2C1_ISR@i2c_bytes_left 005F  
                       ??_OSCILLATOR_Initialize 0020                     __size_of_EUSART1_Initialize 0043  
                              __size_of___lwdiv 0035                                __size_of___lwmod 002D  
              __end_of_I2C1_MasterWriteTRBBuild 07C8                            ?_TM1650_fastPrintNum 003B  
                     ??_EUSART1_SetErrorHandler 0022                                 BEAT_task@offset 002A  
                               LED_setColor@lo1 0027                                 LED_setColor@lo2 002B  
                           TM1650_enable@enable 0034                                 LED_setColor@lo3 002F  
                               LED_setColor@lo4 0033             __end_of_EUSART1_DefaultErrorHandler 0E22  
                   _EUSART1_DefaultErrorHandler 0E1F                                 LED_setColor@red 0035  
                                   _currentTime 004D                                      _CLOCK_init 0E49  
                              __size_of_initLED 0028                                      _T0CON0bits 059E  
                      __size_of_ADCC_Initialize 0026                                 ___lwdiv@divisor 0020  
                           I2C1_ISR@i2c_address 0074                                 ___lwdiv@counter 0025  
                                      _detected 0057                                      ?_writeData 002E  
                                      __ptext10 0EAA                                        __ptext11 0EA1  
                                      __ptext20 0F64                                        __ptext12 0E98  
                                      __ptext21 0F3A                                        __ptext13 0E8F  
                                      __ptext30 07A8                                        __ptext22 0F25  
                                      __ptext14 0E86                                        __ptext31 04B6  
                                      __ptext23 0787                                        __ptext15 073C  
                                      __ptext40 0E25                                        __ptext32 0E38  
                                      __ptext24 0E51                                        __ptext16 05F4  
                                      __ptext41 0E43                                        __ptext33 0E49  
                                      __ptext25 0366                                        __ptext17 057D  
                                      __ptext50 0089                                        __ptext42 0EFD  
                                      __ptext34 0E74                                        __ptext26 06C0  
                                      __ptext18 0E7D                                        __ptext51 07E8  
                                      __ptext43 0E6B                                        __ptext35 01D2  
                                      __ptext27 0FAA                                        __ptext19 03E0  
                                      __ptext60 0F7A                                        __ptext52 0EEC  
                                      __ptext44 0E62                                        __ptext36 053E  
                                      __ptext28 0FE3                                        __ptext61 0ED2  
                                      __ptext53 0E22                                        __ptext45 0E59  
                                      __ptext37 07C8                                        __ptext29 0715  
                                      __ptext62 0E1C                                        __ptext54 0FC6  
                                      __ptext38 02A4                                        __ptext63 0E28  
                                      __ptext55 0762                                        __ptext47 0EDF  
                                      __ptext39 062C                                        __ptext56 0661  
                                      __ptext48 0E3D                                        __ptext57 0E2C  
                                      __ptext49 0E1E                                        __ptext58 0E1D  
                                      __ptext59 0E1F                                    _SSP1CON1bits 0190  
                                  _SSP1CON2bits 0191                           __end_of_BEAT_detected 0E86  
                                      _lastBeat 004B                                        _lastTime 004F  
                              _TM1650_isEnabled 0E25                                   __size_of_main 003B  
                                 __size_of_init 0020                                    ?_address_dec 0076  
          __end_of_TMR0_DefaultInterruptHandler 0E1F           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 0E1E                                    ?_address_inc 0076  
                          __CFG_WDTCWS$WDTCWS_7 0000                            _I2C1_MasterTRBInsert 04B6  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                  __end_of_ADCC_StartConversion 0E74                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 0039                      _INTERRUPT_InterruptManager 0004  
                        __size_of_TM1650_enable 0015                     _EUSART1_FramingErrorHandler 00D6  
                           _EUSART1_Receive_ISR 0661                           ??_TM1650_fastPrintNum 003D  
                             TM1650_setDigit@dp 0035                                      _INTCONbits 000B  
                             ??_CONTROLLER_init 0042                               ??_CONTROLLER_task 0042  
                                      init@port 0020            __end_of_ADCC_DefaultInterruptHandler 0E1D  
         __size_of_ADCC_DefaultInterruptHandler 0001                    _ADCC_DefaultInterruptHandler 0E1C  
                                      intlevel1 0000                                  _thresholdCount 00B8  
                          ?_EUSART1_Receive_ISR 0076                                   writeData@data 002E  
                              ___lwmod@dividend 0022                         ?_PIN_MANAGER_Initialize 0076  
                      __end_of_I2C1_MasterWrite 073C                               __CFG_CLKOUTEN$OFF 0000  
                __size_of_I2C1_FunctionComplete 0011          __end_of_EUSART1_SetOverrunErrorHandler 0EA1  
       __size_of_EUSART1_SetOverrunErrorHandler 0009                  _EUSART1_SetOverrunErrorHandler 0E98  
                 __end_of_I2C1_FunctionComplete 0EFD                           ?_I2C1_MasterTRBInsert 0020  
                  __end_of_EUSART1_Transmit_ISR 0FE3                   ?_TMR0_DefaultInterruptHandler 0076  
                        TM1650_fastPrintNum@num 003B  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                ?_EUSART1_SetTxInterruptHandler 0020                                 _TM1650_setDigit 0FAA  
                      __size_of_I2C1_Initialize 0019                              _eusart1RxLastError 0065  
                                 __pstringtext1 0456                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                 ___lwmod@divisor 0020  
                                   ?_CLOCK_init 0076                                 _TMR0_Initialize 0F11  
                               ___lwmod@counter 0025                        _I2C1_MasterWriteTRBBuild 07A8  
                                   ??_writeData 002F                                      _TX1STAbits 011E  
                ??_ADCC_SetADTIInterruptHandler 0022                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 06C0                               ??_ADCC_Initialize 0022  
                                 _TM1650_enable 0F25                              __size_of_I2C1_Stop 0018  
                 ?_ADCC_DefaultInterruptHandler 0076                         ??_EUSART1_RxDataHandler 0076  
